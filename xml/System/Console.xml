<Type Name="Console" FullName="System.Console">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d75c9fea637061e6774ac0b462bf8ff0cda690b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39887147" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Console" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Console extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Console" />
  <TypeSignature Language="VB.NET" Value="Public Class Console" />
  <TypeSignature Language="C++ CLI" Value="public ref class Console abstract sealed" />
  <TypeSignature Language="F#" Value="type Console = class" />
  <AssemblyInfo>
    <AssemblyName>System.Console</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4b418-101">コンソール アプリケーションの標準入力ストリーム、標準出力ストリーム、および標準エラー ストリームを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4b418-101">Represents the standard input, output, and error streams for console applications.</span>
      </span>
      <span data-ttu-id="4b418-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4b418-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-103">コンソールは、オペレーティング システムのウィンドウが、コンピューターのキーボードから入力されたテキストを入力して、コンピューターのターミナルからテキスト出力を読み取ることに、ユーザーがオペレーティング システムとテキスト ベースのコンソール アプリケーションを操作する場所です。</span><span class="sxs-lookup"><span data-stu-id="4b418-103">The console is an operating system window where users interact with the operating system or with a text-based console application by entering text input through the computer keyboard, and by reading text output from the computer terminal.</span></span> <span data-ttu-id="4b418-104">たとえば、Windows オペレーティング システムで、コンソール、コマンド プロンプト ウィンドウと呼びます MS-DOS のコマンドを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="4b418-104">For example, in the Windows operating system, the console is called the Command Prompt window and accepts MS-DOS commands.</span></span> <span data-ttu-id="4b418-105"><xref:System.Console>クラスから、文字を読み取るし、コンソールに文字を書き込むアプリケーションの基本的なサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="4b418-105">The <xref:System.Console> class provides basic support for applications that read characters from, and write characters to, the console.</span></span>  
  
 <span data-ttu-id="4b418-106">使用した開発については、<xref:System.Console>クラスを次のセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4b418-106">For information about developing with the <xref:System.Console> class, see the following sections:</span></span>  
  
-   [<span data-ttu-id="4b418-107">コンソール入出力ストリーム</span><span class="sxs-lookup"><span data-stu-id="4b418-107">Console I/O Streams</span></span>](#Streams)  
  
-   [<span data-ttu-id="4b418-108">画面バッファーとコンソール ウィンドウ</span><span class="sxs-lookup"><span data-stu-id="4b418-108">Screen Buffer and Console Window</span></span>](#Buffer)  
  
-   [<span data-ttu-id="4b418-109">コンソールの Unicode のサポート</span><span class="sxs-lookup"><span data-stu-id="4b418-109">Unicode Support for the Console</span></span>](#Unicode)  
  
-   [<span data-ttu-id="4b418-110">一般的な操作</span><span class="sxs-lookup"><span data-stu-id="4b418-110">Common Operations</span></span>](#Operations)  
  
-   [<span data-ttu-id="4b418-111">.NET core のノート</span><span class="sxs-lookup"><span data-stu-id="4b418-111">.NET Core Notes</span></span>](#Core)  
  
<a name="Streams"></a>   
## <a name="console-io-streams"></a><span data-ttu-id="4b418-112">コンソール入出力ストリーム</span><span class="sxs-lookup"><span data-stu-id="4b418-112">Console I/O Streams</span></span>  
 <span data-ttu-id="4b418-113">コンソールで次の 3 つの I/O ストリームをオペレーティング システムが自動的に関連付けられますコンソール アプリケーションの起動時に: 標準入力ストリーム、標準出力ストリーム、および標準エラー出力ストリーム。</span><span class="sxs-lookup"><span data-stu-id="4b418-113">When a console application starts, the operating system automatically associates three I/O streams with the console: standard input stream, standard output stream, and standard error output stream.</span></span> <span data-ttu-id="4b418-114">アプリケーションは、標準入力ストリームからユーザーの入力を読み取ることができます。通常のデータを標準出力ストリームに書き込むエラー データを標準エラー出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="4b418-114">Your application can read user input from the standard input stream; write normal data to the standard output stream; and write error data to the standard error output stream.</span></span> <span data-ttu-id="4b418-115">これらのストリームはアプリケーションの値として、 <xref:System.Console.In%2A?displayProperty=nameWithType>、 <xref:System.Console.Out%2A?displayProperty=nameWithType>、および<xref:System.Console.Error%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-115">These streams are presented to your application as the values of the <xref:System.Console.In%2A?displayProperty=nameWithType>, <xref:System.Console.Out%2A?displayProperty=nameWithType>, and <xref:System.Console.Error%2A?displayProperty=nameWithType> properties.</span></span>  
  
 <span data-ttu-id="4b418-116">既定の値で、<xref:System.Console.In%2A>プロパティは、 <xref:System.IO.TextReader?displayProperty=nameWithType> 、キーボードとの値を表すオブジェクトを<xref:System.Console.Out%2A>と<xref:System.Console.Error%2A>プロパティは、<xref:System.IO.TextWriter?displayProperty=nameWithType>コンソール ウィンドウを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4b418-116">By default, the value of the <xref:System.Console.In%2A> property is a <xref:System.IO.TextReader?displayProperty=nameWithType> object that represents the keyboard, and the values of the <xref:System.Console.Out%2A> and <xref:System.Console.Error%2A> properties are <xref:System.IO.TextWriter?displayProperty=nameWithType> objects that represent a console window.</span></span> <span data-ttu-id="4b418-117">ただし、コンソール ウィンドウまたはキーボードを表さないストリームにこれらのプロパティを設定できます。たとえば、ファイルを表すストリームに、これらのプロパティを設定できます。</span><span class="sxs-lookup"><span data-stu-id="4b418-117">However, you can set these properties to streams that do not represent the console window or keyboard; for example, you can set these properties to streams that represent files.</span></span> <span data-ttu-id="4b418-118">標準入力、標準の出力または標準エラー ストリームをリダイレクトするには、呼び出し、 <xref:System.Console.SetIn%2A?displayProperty=nameWithType>、 <xref:System.Console.SetOut%2A?displayProperty=nameWithType>、または<xref:System.Console.SetError%2A?displayProperty=nameWithType>メソッドでは、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="4b418-118">To redirect the standard input, standard output, or standard error stream, call the <xref:System.Console.SetIn%2A?displayProperty=nameWithType>, <xref:System.Console.SetOut%2A?displayProperty=nameWithType>, or <xref:System.Console.SetError%2A?displayProperty=nameWithType> method, respectively.</span></span> <span data-ttu-id="4b418-119">これらのストリームを使用する I/O 操作が同期されますが、つまり複数のスレッドが読み取り、またはストリームに書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="4b418-119">I/O operations that use these streams are synchronized, which means that multiple threads can read from, or write to, the streams.</span></span> <span data-ttu-id="4b418-120">こうすることなど、通常の非同期メソッド<xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType>オブジェクトは、コンソールのストリームを表す場合、同期的に実行します。</span><span class="sxs-lookup"><span data-stu-id="4b418-120">This means that methods that are ordinarily asynchronous, such as <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType>, execute synchronously if the object represents a console stream.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4b418-121">使用しないでください、<xref:System.Console>サーバー アプリケーションなど、自動のアプリケーションに出力を表示するクラス。</span><span class="sxs-lookup"><span data-stu-id="4b418-121">Do not use the <xref:System.Console> class to display output in unattended applications, such as server applications.</span></span> <span data-ttu-id="4b418-122">などのメソッドを呼び出し<xref:System.Console.Write%2A?displayProperty=nameWithType>と<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>GUI アプリケーションでの影響はありません。</span><span class="sxs-lookup"><span data-stu-id="4b418-122">Calls to methods such as <xref:System.Console.Write%2A?displayProperty=nameWithType> and <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> have no effect in GUI applications.</span></span>  
  
 <span data-ttu-id="4b418-123"><xref:System.Console> ストリームがリダイレクトされた場合、たとえば、ファイルに、基になるストリームがコンソールに指示された場合に正常に動作するクラスのメンバーは例外をスロー可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-123"><xref:System.Console> class members that work normally when the underlying stream is directed to a console might throw an exception if the stream is redirected, for example, to a file.</span></span> <span data-ttu-id="4b418-124">キャッチするアプリケーションをプログラム<xref:System.IO.IOException?displayProperty=nameWithType>標準ストリームをリダイレクトする場合は例外です。</span><span class="sxs-lookup"><span data-stu-id="4b418-124">Program your application to catch <xref:System.IO.IOException?displayProperty=nameWithType> exceptions if you redirect a standard stream.</span></span> <span data-ttu-id="4b418-125">使用することも、 <xref:System.Console.IsOutputRedirected%2A>、 <xref:System.Console.IsInputRedirected%2A>、および<xref:System.Console.IsErrorRedirected%2A>をスローする演算を実行する前に、標準のストリームがリダイレクトされるかどうかを決定するプロパティ、<xref:System.IO.IOException?displayProperty=nameWithType>例外。</span><span class="sxs-lookup"><span data-stu-id="4b418-125">You can also use the <xref:System.Console.IsOutputRedirected%2A>, <xref:System.Console.IsInputRedirected%2A>, and <xref:System.Console.IsErrorRedirected%2A> properties to determine whether a standard stream is redirected before performing an operation that throws an <xref:System.IO.IOException?displayProperty=nameWithType> exception.</span></span>  
  
 <span data-ttu-id="4b418-126">によって表されるストリーム オブジェクトのメンバーを明示的に呼び出す便利な場合があります、 <xref:System.Console.In%2A>、 <xref:System.Console.Out%2A>、および<xref:System.Console.Error%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-126">It is sometimes useful to explicitly call the members of the stream objects represented by the <xref:System.Console.In%2A>, <xref:System.Console.Out%2A>, and <xref:System.Console.Error%2A> properties.</span></span> <span data-ttu-id="4b418-127">たとえば、既定では、<xref:System.Console.ReadLine%2A?displayProperty=nameWithType>メソッドは、標準入力ストリームから入力を読み取る。</span><span class="sxs-lookup"><span data-stu-id="4b418-127">For example, by default, the <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> method reads input from the standard input stream.</span></span> <span data-ttu-id="4b418-128">同様に、<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>データは既定の行終端文字列、キャリッジ リターンが続くし、ライン フィード文字 ("\r\n") メソッドでは、データを標準出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="4b418-128">Similarly, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method writes data to the standard output stream, and the data is followed by the default line termination string, which is  a carriage return and line feed ("\r\n").</span></span> <span data-ttu-id="4b418-129">ただし、<xref:System.Console>クラスは、標準エラー出力ストリーム、またはそのストリームに書き込まれたデータの行終端文字列を変更するプロパティにデータを書き込む対応するメソッドを提供しません。</span><span class="sxs-lookup"><span data-stu-id="4b418-129">However, the <xref:System.Console> class does not provide a corresponding method to write data to the standard error output stream, or a property to change the line termination string for data written to that stream.</span></span>  
  
 <span data-ttu-id="4b418-130">この問題を解決するには、設定、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>のプロパティ、<xref:System.Console.Out%2A>または<xref:System.Console.Error%2A>プロパティを別の行終端文字列。</span><span class="sxs-lookup"><span data-stu-id="4b418-130">You can solve this problem by setting the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property of the <xref:System.Console.Out%2A> or <xref:System.Console.Error%2A> property to another line termination string.</span></span> <span data-ttu-id="4b418-131">たとえば、次の c# のステートメントでは、2 つのキャリッジ リターンとライン フィードのシーケンスを標準エラー出力ストリームの行終端文字列を設定します。</span><span class="sxs-lookup"><span data-stu-id="4b418-131">For example, the following C# statement sets the line termination string for the standard error output stream to two carriage return and line feed sequences:</span></span>  
  
 `Console.Error.NewLine = "\r\n\r\n";`  
  
 <span data-ttu-id="4b418-132">明示的に呼び出すことができますし、 <xref:System.IO.TextWriter.WriteLine%2A> (C#) ステートメントを次のように、エラー出力ストリーム オブジェクトのメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-132">You can then explicitly call the <xref:System.IO.TextWriter.WriteLine%2A> method of the error output stream object, as in the following C# statement:</span></span>  
  
 `Console.Error.WriteLine();`  
  
<a name="Buffer"></a>   
## <a name="screen-buffer-and-console-window"></a><span data-ttu-id="4b418-133">画面バッファーとコンソール ウィンドウ</span><span class="sxs-lookup"><span data-stu-id="4b418-133">Screen Buffer and Console Window</span></span>  
 <span data-ttu-id="4b418-134">コンソールの 2 つの密接に関連する機能は、画面バッファーされ、コンソール ウィンドウには。</span><span class="sxs-lookup"><span data-stu-id="4b418-134">Two closely related features of the console are the screen buffer and the console window.</span></span> <span data-ttu-id="4b418-135">テキストが実際にから読み取るか、コンソールによって所有されているストリームに書き込まれますからの読み取りまたは書き込み画面バッファーと呼ばれるコンソールによって所有されている領域に表示されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-135">Text is actually read from or written to streams owned by the console, but appear to be read from or written to an area owned by the console called the screen buffer.</span></span> <span data-ttu-id="4b418-136">画面バッファーは、コンソールの属性であり、四角形グリッドの行と列の各グリッドの交点または文字のセルが文字を使用する場所として構成されています。</span><span class="sxs-lookup"><span data-stu-id="4b418-136">The screen buffer is an attribute of the console, and is organized as a rectangular grid of rows and columns where each grid intersection, or character cell, can contain a character.</span></span> <span data-ttu-id="4b418-137">各文字には独自の前景色、および文字の各セルが、独自の背景色。</span><span class="sxs-lookup"><span data-stu-id="4b418-137">Each character has its own foreground color, and each character cell has its own background color.</span></span>  
  
 <span data-ttu-id="4b418-138">コンソール ウィンドウと呼ばれる四角形の領域を使用して、画面バッファーを表示するとします。</span><span class="sxs-lookup"><span data-stu-id="4b418-138">The screen buffer is viewed through a rectangular region called the console window.</span></span> <span data-ttu-id="4b418-139">コンソール ウィンドウは、コンソールの別の属性これはオペレーティング システムのウィンドウ自体には、コンソールではありません。</span><span class="sxs-lookup"><span data-stu-id="4b418-139">The console window is another attribute of the console; it is not the console itself, which is an operating system window.</span></span> <span data-ttu-id="4b418-140">コンソール ウィンドウは、行と列に配置されているし、画面バッファーのサイズに等しいまたはそれよりも小さい、基になる画面バッファーのさまざまな領域の表示に移動することができます。</span><span class="sxs-lookup"><span data-stu-id="4b418-140">The console window is arranged in rows and columns, is less than or equal to the size of the screen buffer, and can be moved to view different areas of the underlying screen buffer.</span></span> <span data-ttu-id="4b418-141">画面バッファーがコンソール ウィンドウよりも大きい場合は、コンソールで、コンソール ウィンドウを画面バッファー領域を再配置することができますので、スクロール バーが自動的に表示されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-141">If the screen buffer is larger than the console window, the console automatically displays scroll bars so the console window can be repositioned over the screen buffer area.</span></span>  
  
 <span data-ttu-id="4b418-142">カーソルでは、画面バッファーの位置でテキストの現在の読み取りまたは書き込みを示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-142">A cursor indicates the screen buffer position where text is currently read or written.</span></span> <span data-ttu-id="4b418-143">カーソルを非表示または表示されることができ、高さを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="4b418-143">The cursor can be hidden or made visible, and its height can be changed.</span></span> <span data-ttu-id="4b418-144">カーソルが表示されているため、カーソルは常にビューに、コンソール ウィンドウの位置に自動的に移動されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-144">If the cursor is visible, the console window position is moved automatically so the cursor is always in view.</span></span>  
  
 <span data-ttu-id="4b418-145">画面バッファー内の文字セル座標の原点は左上隅と、その原点カーソルと、コンソール ウィンドウの位置が測定されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-145">The origin for character cell coordinates in the screen buffer is the upper left corner, and the positions of the cursor and the console window are measured relative to that origin.</span></span> <span data-ttu-id="4b418-146">0 から始まるインデックスを使用して、指定の位置。つまり、0、行および列 a の左端の列として、最上位の行を指定します。</span><span class="sxs-lookup"><span data-stu-id="4b418-146">Use zero-based indexes to specify positions; that is, specify the topmost row as row 0, and the leftmost column as column 0.</span></span> <span data-ttu-id="4b418-147">行と列のインデックスの最大値は<xref:System.Int16.MaxValue?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="4b418-147">The maximum value for the row and column indexes is <xref:System.Int16.MaxValue?displayProperty=nameWithType>.</span></span>  
  
<a name="Unicode"></a>   
## <a name="unicode-support-for-the-console"></a><span data-ttu-id="4b418-148">コンソールの Unicode のサポート</span><span class="sxs-lookup"><span data-stu-id="4b418-148">Unicode Support for the Console</span></span>  
 <span data-ttu-id="4b418-149">一般に、コンソールでは、入力を読み取るし、既定では、システムのロケールを定義する、現在のコンソールのコード ページを使用して、出力を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="4b418-149">In general, the console reads input and writes output by using the current console code page, which the system locale defines by default.</span></span> <span data-ttu-id="4b418-150">コード ページは、しようとする場合、コンソールで、特定のコード ページによってマップされていない文字を表示できませんのすべての文字を表示またはそれらを正確に表すために使用可能な Unicode 文字のサブセットのみを処理できます。</span><span class="sxs-lookup"><span data-stu-id="4b418-150">A code page can handle only a subset of available Unicode characters, so if you try to display characters that are not mapped by a particular code page, the console won't be able to display all characters or represent them accurately.</span></span> <span data-ttu-id="4b418-151">この問題を説明する例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-151">The following example illustrates this problem.</span></span> <span data-ttu-id="4b418-152">U + 044F にキリル文字 U + 0410 からの文字をコンソールに表示しようとします。</span><span class="sxs-lookup"><span data-stu-id="4b418-152">It tries to display the characters of the Cyrillic alphabet from U+0410 to U+044F to the console.</span></span> <span data-ttu-id="4b418-153">コンソールのコード ページ 437 を使用するシステムで例を実行する場合、キリル文字のコード ページ 437 の文字にマップされていないために、各文字が疑問符 (?) に置換されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-153">If you run the example on a system that uses console code page 437, each character is replaced by a question mark (?), because Cyrillic characters do not map to the characters in code page 437.</span></span>  
  
 [!code-csharp[System.Console.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/unicode1.cs#1)]
 [!code-vb[System.Console.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/unicode1.vb#1)]  
  
 <span data-ttu-id="4b418-154">コード ページをサポートしているだけでなく、<xref:System.Console>クラスは、utf-8 でエンコードをサポートしている、<xref:System.Text.UTF8Encoding>クラス。</span><span class="sxs-lookup"><span data-stu-id="4b418-154">In addition to supporting code pages, the <xref:System.Console> class supports UTF-8 encoding with the <xref:System.Text.UTF8Encoding> class.</span></span> <span data-ttu-id="4b418-155">以降、.NET Framework 4.5 では、<xref:System.Console>クラスには、utf-16 エンコードでもサポートしています、<xref:System.Text.UnicodeEncoding>クラス。</span><span class="sxs-lookup"><span data-stu-id="4b418-155">Beginning with the .NET Framework 4.5, the <xref:System.Console> class also supports UTF-16 encoding with the <xref:System.Text.UnicodeEncoding> class.</span></span> <span data-ttu-id="4b418-156">Unicode 文字をコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-156">To display Unicode characters to the console.</span></span> <span data-ttu-id="4b418-157">設定する、<xref:System.Console.OutputEncoding%2A>プロパティを<xref:System.Text.UTF8Encoding>または<xref:System.Text.UnicodeEncoding>します。</span><span class="sxs-lookup"><span data-stu-id="4b418-157">you set the <xref:System.Console.OutputEncoding%2A> property to either <xref:System.Text.UTF8Encoding> or  <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 <span data-ttu-id="4b418-158">Unicode 文字のサポートは、特定の Unicode 文字を認識するエンコーダーを必要としもその文字を表示するために必要なグリフを含むフォントが必要です。</span><span class="sxs-lookup"><span data-stu-id="4b418-158">Support for Unicode characters requires the encoder to recognize a particular Unicode character, and also requires a font that has the glyphs needed to render that character.</span></span> <span data-ttu-id="4b418-159">正常に Unicode 文字をコンソールに表示するには、非ラスターまたは Consolas など Lucida Console TrueType フォントにコンソールのフォントを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-159">To successfully display Unicode characters to the console, the console font must be set to a non-raster or TrueType font such as Consolas or Lucida Console.</span></span> <span data-ttu-id="4b418-160">プログラムを変更する方法、フォント ラスター フォントから Lucida Console には、次の例です。</span><span class="sxs-lookup"><span data-stu-id="4b418-160">The following example shows how you can programmatically change the font from a raster font to Lucida Console.</span></span>  
  
 [!code-csharp[System.Console.Class.Unsafe#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class.unsafe/cs/setfont1.cs#3)]
 [!code-vb[System.Console.Class.Unsafe#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class.unsafe/vb/setfont1.vb#3)]  
  
 <span data-ttu-id="4b418-161">ただし、TrueType フォントは、グリフのサブセットのみを表示することができます。</span><span class="sxs-lookup"><span data-stu-id="4b418-161">However, TrueType fonts can display only a subset of glyphs.</span></span> <span data-ttu-id="4b418-162">たとえば、Lucida Console フォントには、U + FB02 する u+0021 から約 64,000 使用可能な文字の 643 のみが表示されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-162">For example, the Lucida Console font displays only 643 of the approximately 64,000 available characters from U+0021 to U+FB02.</span></span> <span data-ttu-id="4b418-163">特定のフォントの文字を表示するサポートを開いて、**フォント**コントロール パネルのアプレットの選択、**文字を検索**オプション、および、で調査している文字セットのフォントを選びます**フォント**の一覧、**文字コード表**ウィンドウ。</span><span class="sxs-lookup"><span data-stu-id="4b418-163">To see which characters a particular font supports, open the **Fonts** applet in Control Panel, choose the **Find a character** option, and choose the font whose character set you'd like to examine in the **Font** list of the **Character Map** window.</span></span>  
  
 <span data-ttu-id="4b418-164">Windows は、フォント リンクを使用して、特定のフォントでは使用できませんのグリフを表示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-164">Windows uses font linking to display glyphs that are not available in a particular font.</span></span> <span data-ttu-id="4b418-165">フォントの追加の文字セットを表示するリンクについては、次を参照してください。[グローバリゼーション ステップ バイ ステップ: フォント](http://go.microsoft.com/fwlink/?LinkId=229111)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-165">For information about font linking to display additional character sets, see [Globalization Step-by-Step: Fonts](http://go.microsoft.com/fwlink/?LinkId=229111).</span></span> <span data-ttu-id="4b418-166">リンクされているフォントは、レジストリの hkey_local_machine \software\microsoft\windows NT\CurrentVersion\FontLink\SystemLink サブキーで定義されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-166">Linked fonts are defined in the HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink subkey of the registry.</span></span> <span data-ttu-id="4b418-167">このサブキーに関連付けられている各エントリは、基本のフォントの名前に対応し、その値はフォント ファイルを定義する文字列配列と基本のフォントにリンクされているフォント。</span><span class="sxs-lookup"><span data-stu-id="4b418-167">Each entry associated with this subkey corresponds to the name of a base font, and its value is a string array that defines the font files and the fonts that are linked to the base font.</span></span> <span data-ttu-id="4b418-168">配列の各メンバーは、リンクされたフォントを定義し、形式の*フォント ファイル名*、*フォント名*します。</span><span class="sxs-lookup"><span data-stu-id="4b418-168">Each member of the array defines a linked font and takes the form *font-file-name*,*font-name*.</span></span> <span data-ttu-id="4b418-169">次の例では、simsun.ttc Han の簡略化された文字を表示するという名前のフォント ファイルで見つかった SimSun という名前のリンクされたフォントをプログラムで定義する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4b418-169">The following example illustrates how you can programmatically define a linked font named SimSun found in a font file named simsun.ttc that displays Simplified Han characters.</span></span>  
  
 [!code-csharp[System.Console.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/fontlink1.cs#2)]
 [!code-vb[System.Console.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/fontlink1.vb#2)]  
  
 <span data-ttu-id="4b418-170">コンソールの Unicode のサポートには、次の制限があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-170">Unicode support for the console has the following limitations:</span></span>  
  
-   <span data-ttu-id="4b418-171">Utf-32 エンコーディングはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="4b418-171">UTF-32 encoding is not supported.</span></span> <span data-ttu-id="4b418-172">唯一サポートされている Unicode エンコーディングは utf-8 および utf-16 は、によって表される、<xref:System.Text.UTF8Encoding>と<xref:System.Text.UnicodeEncoding>クラスをそれぞれします。</span><span class="sxs-lookup"><span data-stu-id="4b418-172">The only supported Unicode encodings are UTF-8 and UTF-16, which are represented by the <xref:System.Text.UTF8Encoding> and <xref:System.Text.UnicodeEncoding> classes, respectively.</span></span>  
  
-   <span data-ttu-id="4b418-173">双方向の出力がサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="4b418-173">Bidirectional output is not supported.</span></span>  
  
-   <span data-ttu-id="4b418-174">基本多言語面以外の文字の表示 (つまり、サロゲート ペアの) はサポートされていません、リンクのフォント ファイルで定義されている場合でもです。</span><span class="sxs-lookup"><span data-stu-id="4b418-174">Display of characters outside the Basic Multilingual Plane (that is, of surrogate pairs) is not supported, even if they are defined in a linked font file.</span></span>  
  
-   <span data-ttu-id="4b418-175">複雑なスクリプト内の文字の表示がサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="4b418-175">Display of characters in complex scripts is not supported.</span></span>  
  
-   <span data-ttu-id="4b418-176">別の文字としては、組み合わせ文字シーケンス (つまり、基本文字と 1 つまたは複数の組み合わせ文字で構成される文字) が表示されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-176">Combining character sequences (that is, characters that consist of a base character and one or more combining characters) are displayed as separate characters.</span></span> <span data-ttu-id="4b418-177">この制限を回避するには、呼び出すことによって表示される文字列を正規化することができます、<xref:System.String.Normalize%2A?displayProperty=nameWithType>コンソールに出力を送信する前にメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-177">To work around this limitation, you can normalize the string to be displayed by calling the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method before sending output to the console.</span></span> <span data-ttu-id="4b418-178">組み合わせ文字を含む文字列を次の例には、U + 0061 をシーケンス処理後に 1 つの文字と、出力文字列を正規化すると、前に、2 つの文字として、u+0308 がコンソールに表示される、<xref:System.String.Normalize%2A?displayProperty=nameWithType>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-178">In the following example, a string that contains the combining character sequence U+0061 U+0308 is displayed to the console as two characters before the output string is normalized, and as a single character after the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method is called.</span></span>  
  
     [!code-csharp[System.Console.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/normalize1.cs#5)]
     [!code-vb[System.Console.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/normalize1.vb#5)]  
  
     <span data-ttu-id="4b418-179">注文字には combining 特定に対応する事前構成済みのフォームが含まれています、標準の Unicode 文字のシーケンスの場合にのみ、正規化が適切な解決策があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-179">Note that normalization is a viable solution only if the Unicode standard for the character includes a pre-composed form that corresponds to a particular combining character sequence.</span></span>  
  
-   <span data-ttu-id="4b418-180">フォントは、プライベートの使用領域のコード ポイントのグリフを提供する場合は、そのグリフが表示されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-180">If a font provides a glyph for a code point in the private use area, that glyph will be displayed.</span></span> <span data-ttu-id="4b418-181">ただし、プライベート領域内の文字がアプリケーションに固有であるため、この可能性がありますできません、予想されるグリフ。</span><span class="sxs-lookup"><span data-stu-id="4b418-181">However, because characters in the private use area are application-specific, this may not be the expected glyph.</span></span>  
  
 <span data-ttu-id="4b418-182">次の例では、範囲の Unicode 文字をコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-182">The following example displays a range of Unicode characters to the console.</span></span> <span data-ttu-id="4b418-183">例では、次の 3 つのコマンド ライン パラメーターを受け取る: を表示するには、表示、および現在のコンソールのエンコーディングを使用するかどうかの範囲の末尾に範囲の開始 (`false`) または utf-16 エンコード (`true`)。</span><span class="sxs-lookup"><span data-stu-id="4b418-183">The example accepts three command-line parameters: the start of the range to display, the end of the range to display, and whether to use the current console encoding (`false`) or UTF-16 encoding (`true`).</span></span> <span data-ttu-id="4b418-184">これは、コンソールが TrueType フォントを使用するいると仮定します。</span><span class="sxs-lookup"><span data-stu-id="4b418-184">It assumes that the console is using a TrueType font.</span></span>  
  
 [!code-csharp[System.Console.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/example3.cs#4)]
 [!code-vb[System.Console.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/example3.vb#4)]  
  
<a name="Operations"></a>   
## <a name="common-operations"></a><span data-ttu-id="4b418-185">一般的な操作</span><span class="sxs-lookup"><span data-stu-id="4b418-185">Common Operations</span></span>  
 <span data-ttu-id="4b418-186"><xref:System.Console>クラスには、コンソールの入力を読み取って、コンソール出力の書き込みは、次のメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="4b418-186">The <xref:System.Console> class contains the following methods for reading console input and writing console output:</span></span>  
  
-   <span data-ttu-id="4b418-187">オーバー ロード、<xref:System.Console.ReadKey%2A>メソッドは、個々 の文字を読み取る。</span><span class="sxs-lookup"><span data-stu-id="4b418-187">The overloads of the <xref:System.Console.ReadKey%2A> method read an individual character.</span></span>  
  
-   <span data-ttu-id="4b418-188"><xref:System.Console.ReadLine%2A>メソッドは入力の行全体を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4b418-188">The <xref:System.Console.ReadLine%2A> method reads an entire line of input.</span></span>  
  
-   <span data-ttu-id="4b418-189"><xref:System.Console.Write%2A>メソッドのオーバー ロードは、または書式設定されていない書式設定文字列に値型、文字の配列またはオブジェクトのセットのインスタンスを変換し、コンソールにその文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="4b418-189">The <xref:System.Console.Write%2A> method overloads convert an instance of a value type, an array of characters, or a set of objects to a formatted or unformatted string, and then write that string to the console.</span></span>  
  
-   <span data-ttu-id="4b418-190">セットを並列<xref:System.Console.WriteLine%2A>メソッドとして同じ文字列出力をオーバー ロード、<xref:System.Console.Write%2A>オーバー ロードがも行終端文字列を追加します。</span><span class="sxs-lookup"><span data-stu-id="4b418-190">A parallel set of <xref:System.Console.WriteLine%2A> method overloads output the same string as the <xref:System.Console.Write%2A> overloads but also add a line termination string.</span></span>  
  
 <span data-ttu-id="4b418-191"><xref:System.Console>クラスは、次の操作を実行するメソッドとプロパティも含まれます。</span><span class="sxs-lookup"><span data-stu-id="4b418-191">The <xref:System.Console> class also contains methods and properties to perform the following operations:</span></span>  
  
-   <span data-ttu-id="4b418-192">取得または画面バッファーのサイズを設定します。</span><span class="sxs-lookup"><span data-stu-id="4b418-192">Get or set the size of the screen buffer.</span></span> <span data-ttu-id="4b418-193"><xref:System.Console.BufferHeight%2A>と<xref:System.Console.BufferWidth%2A>プロパティを使用するバッファーの高さと幅をそれぞれ、設定を取得またはと<xref:System.Console.SetBufferSize%2A>メソッドを使用して、1 つのメソッドの呼び出しで、バッファーのサイズを設定できます。</span><span class="sxs-lookup"><span data-stu-id="4b418-193">The <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties let you get or set the buffer height and width, respectively, and the <xref:System.Console.SetBufferSize%2A> method lets you set the buffer size in a single method call.</span></span>  
  
-   <span data-ttu-id="4b418-194">取得またはコンソール ウィンドウのサイズを設定します。</span><span class="sxs-lookup"><span data-stu-id="4b418-194">Get or set the size of the console window.</span></span> <span data-ttu-id="4b418-195"><xref:System.Console.WindowHeight%2A>と<xref:System.Console.WindowWidth%2A>プロパティを使用すると、ウィンドウの高さと幅をそれぞれ、設定を取得またはと<xref:System.Console.SetWindowSize%2A>メソッドを使用して、1 つのメソッドの呼び出しで、ウィンドウのサイズを設定できます。</span><span class="sxs-lookup"><span data-stu-id="4b418-195">The <xref:System.Console.WindowHeight%2A> and <xref:System.Console.WindowWidth%2A> properties let you get or set the window height and width, respectively, and the <xref:System.Console.SetWindowSize%2A> method lets you set the window size in a single method call.</span></span>  
  
-   <span data-ttu-id="4b418-196">取得またはカーソルのサイズを設定します。</span><span class="sxs-lookup"><span data-stu-id="4b418-196">Get or set the size of the cursor.</span></span> <span data-ttu-id="4b418-197"><xref:System.Console.CursorSize%2A>プロパティは、文字セルで、カーソルの高さを指定します。</span><span class="sxs-lookup"><span data-stu-id="4b418-197">The <xref:System.Console.CursorSize%2A> property specifies the height of the cursor in a character cell.</span></span>  
  
-   <span data-ttu-id="4b418-198">取得またはコンソール ウィンドウ、画面バッファーに対する相対の位置を設定します。</span><span class="sxs-lookup"><span data-stu-id="4b418-198">Get or set the position of the console window relative to the screen buffer.</span></span> <span data-ttu-id="4b418-199"><xref:System.Console.WindowTop%2A>と<xref:System.Console.WindowLeft%2A>プロパティを使用すると、取得または設定、一番上の行と、コンソール ウィンドウに表示される画面バッファーの左端の列と<xref:System.Console.SetWindowPosition%2A>メソッドを使用して、1 つのメソッドの呼び出しでこれらの値を設定できます。</span><span class="sxs-lookup"><span data-stu-id="4b418-199">The <xref:System.Console.WindowTop%2A> and <xref:System.Console.WindowLeft%2A> properties let you get or set the top row and leftmost column of the screen buffer that appears in the console window, and the <xref:System.Console.SetWindowPosition%2A> method lets you set these values in a single method call.</span></span>  
  
-   <span data-ttu-id="4b418-200">によって取得または設定、カーソルの位置を取得または設定、<xref:System.Console.CursorTop%2A>と<xref:System.Console.CursorLeft%2A>プロパティ、または呼び出すことによってカーソルの位置のセット、<xref:System.Console.SetCursorPosition%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-200">Get or set the position of the cursor by getting or setting the <xref:System.Console.CursorTop%2A> and <xref:System.Console.CursorLeft%2A> properties, or set the position of the cursor by calling the <xref:System.Console.SetCursorPosition%2A> method.</span></span>  
  
-   <span data-ttu-id="4b418-201">移動または呼び出すことによって、画面バッファーのデータを消去、<xref:System.Console.MoveBufferArea%2A>または<xref:System.Console.Clear%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-201">Move or clear data in the screen buffer by calling the <xref:System.Console.MoveBufferArea%2A> or <xref:System.Console.Clear%2A> method.</span></span>  
  
-   <span data-ttu-id="4b418-202">取得またはを使用して、前景色と背景色を設定、<xref:System.Console.ForegroundColor%2A>と<xref:System.Console.BackgroundColor%2A>プロパティ、または呼び出すことによって、既定の色を背景と前景をリセット、<xref:System.Console.ResetColor%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-202">Get or set the foreground and background colors by using the <xref:System.Console.ForegroundColor%2A> and <xref:System.Console.BackgroundColor%2A> properties, or reset the background and foreground to their default colors by calling the <xref:System.Console.ResetColor%2A> method.</span></span>  
  
-   <span data-ttu-id="4b418-203">呼び出すことでコンソールのスピーカーからビープ音を鳴らす、<xref:System.Console.Beep%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-203">Play the sound of a beep through the console speaker by calling the <xref:System.Console.Beep%2A> method.</span></span>  
  
<a name="Core"></a>   
## <a name="includenetcoreincludesnet-core-mdmd-notes"></a>[!INCLUDE[net_core](~/includes/net-core-md.md)]<span data-ttu-id="4b418-204"> ノート</span><span class="sxs-lookup"><span data-stu-id="4b418-204"> Notes</span></span>  
 <span data-ttu-id="4b418-205">デスクトップで、.NET Framework で、<xref:System.Console>クラスによって返されるエンコーディングを使用して`GetConsoleCP`と`GetConsoleOutputCP`、通常はコード ページ エンコーディングします。</span><span class="sxs-lookup"><span data-stu-id="4b418-205">In the .NET Framework on the desktop, the <xref:System.Console> class uses the encoding returned by `GetConsoleCP` and `GetConsoleOutputCP`, which typically is a code page encoding.</span></span> <span data-ttu-id="4b418-206">たとえばカルチャが英語 (米国)、コード ページ 437 のシステム上のコードでは既定で使用されるエンコーディングします。</span><span class="sxs-lookup"><span data-stu-id="4b418-206">For example code, on systems whose culture is English (United States), code page 437 is the encoding that is used by default.</span></span> <span data-ttu-id="4b418-207">ただし、[!INCLUDE[net_core](~/includes/net-core-md.md)]これらのエンコーディングの一部のサブセットのみを使用できるようにします。</span><span class="sxs-lookup"><span data-stu-id="4b418-207">However, [!INCLUDE[net_core](~/includes/net-core-md.md)] may make only a limited subset of these encodings available.</span></span> <span data-ttu-id="4b418-208">これは、ケースが<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>コンソールの既定のエンコーディングとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-208">Where this is the case, <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> is used as the default encoding for the console.</span></span>  
  
 <span data-ttu-id="4b418-209">場合は、アプリは、特定のコード ページ エンコーディングに依存させることができますも使用可能な次の手順に従って*する前に*を呼び出す<xref:System.Console>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-209">If your app depends on specific code page encodings, you can still make them available by doing the following *before* you call any <xref:System.Console> methods:</span></span>  
  
1.  <span data-ttu-id="4b418-210">System.Text.Encoding.CodePages.dll アセンブリへの参照をプロジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="4b418-210">Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.</span></span>  
  
2.  <span data-ttu-id="4b418-211">取得、<xref:System.Text.EncodingProvider>オブジェクトから、<xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-211">Retrieve the <xref:System.Text.EncodingProvider> object from the <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="4b418-212">渡す、<xref:System.Text.EncodingProvider>オブジェクトを<xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType>メソッドを使用可能なエンコーディング プロバイダーでサポートされているその他のエンコーディング。</span><span class="sxs-lookup"><span data-stu-id="4b418-212">Pass the <xref:System.Text.EncodingProvider> object to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> method to make the additional encodings supported by the encoding provider available.</span></span>  
  
 <span data-ttu-id="4b418-213"><xref:System.Console>クラスから自動的が使用されます、UTF8 ではなく既定のシステム エンコードを呼び出す前に、エンコーディング プロバイダーを登録した<xref:System.Console>メソッドを出力します。</span><span class="sxs-lookup"><span data-stu-id="4b418-213">The <xref:System.Console> class will then automatically use the default system encoding rather than UTF8, provided that you have registered the encoding provider before calling any <xref:System.Console> output methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-214">次の例では、標準入力と出力ストリームに、データを読み書きする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-214">The following example demonstrates how to read data from, and write data to, the standard input and output streams.</span></span> <span data-ttu-id="4b418-215">使用してこれらのストリームをリダイレクトできることに注意してください、<xref:System.Console.SetIn%2A>と<xref:System.Console.SetOut%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-215">Note that these streams can be redirected by using the <xref:System.Console.SetIn%2A> and <xref:System.Console.SetOut%2A> methods.</span></span>  
  
 [!code-cpp[Classic Console Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Console Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Console Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Console Example/CS/source.cs#1)]
 [!code-vb[Classic Console Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Console Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="4b418-216">この型はスレッド セーフです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4b418-216">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public static ConsoleColor BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ConsoleColor BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:System.Console.BackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BackgroundColor As ConsoleColor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property ConsoleColor BackgroundColor { ConsoleColor get(); void set(ConsoleColor value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundColor : ConsoleColor with get, set" Usage="System.Console.BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ConsoleColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-217">コンソールの背景色を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-217">Gets or sets the background color of the console.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-218">コンソールの背景色、つまり、各文字の背後に表示される色を指定する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-218">A value that specifies the background color of the console; that is, the color that appears behind each character.</span>
          </span>
          <span data-ttu-id="4b418-219">既定値は黒です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-219">The default is black.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-220">変更、<xref:System.Console.BackgroundColor%2A>プロパティが背景色を変更した後に、個々 の文字セルに書き込まれた出力のみに影響します。</span><span class="sxs-lookup"><span data-stu-id="4b418-220">A change to the <xref:System.Console.BackgroundColor%2A> property affects only output that is written to individual character cells after the background color is changed.</span></span> <span data-ttu-id="4b418-221">全体として、コンソール ウィンドウの背景色を変更するには、設定、<xref:System.Console.BackgroundColor%2A>プロパティと呼び出し、<xref:System.Console.Clear%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-221">To change the background color of the console window as a whole, set the <xref:System.Console.BackgroundColor%2A> property and call the <xref:System.Console.Clear%2A> method.</span></span> <span data-ttu-id="4b418-222">具体的な例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-222">The following example provides an illustration.</span></span>  
  
 [!code-csharp[System.Console.BackgroundColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.backgroundcolor/cs/backgroundcolor1.cs#1)]
 [!code-vb[System.Console.BackgroundColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.backgroundcolor/vb/backgroundcolor1.vb#1)]  
  
 <span data-ttu-id="4b418-223">これで、コンソールが存在しない、Windows ベース アプリケーションの取得操作を返します<xref:System.ConsoleColor.Black?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="4b418-223">A get operation for a Windows-based application, in which a console does not exist, returns <xref:System.ConsoleColor.Black?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-224">次の例の値を保存する、<xref:System.ConsoleColor>列挙型を配列の現在の値を格納し、<xref:System.Console.BackgroundColor%2A>と<xref:System.Console.ForegroundColor%2A>変数するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-224">The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and <xref:System.Console.ForegroundColor%2A> properties to variables.</span></span> <span data-ttu-id="4b418-225">前景色の各色に変わりますが、<xref:System.ConsoleColor>列挙体の色に現在の背景に一致しての各色を背景色を変更点を除いて、<xref:System.ConsoleColor>と一致する色を除く列挙型、現在の前景色。</span><span class="sxs-lookup"><span data-stu-id="4b418-225">It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground.</span></span> <span data-ttu-id="4b418-226">(前景色、背景色と同じである場合、テキストは表示されません。)最後に、呼び出し、<xref:System.Console.ResetColor%2A>を元のコンソールの色を復元します。</span><span class="sxs-lookup"><span data-stu-id="4b418-226">(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.</span></span>  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4b418-227">設定操作で指定された色は、<see cref="T:System.ConsoleColor" /> の有効なメンバーではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-227">The color specified in a set operation is not a valid member of <see cref="T:System.ConsoleColor" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4b418-228">ユーザーにこの操作を実行するアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-228">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-229">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-229">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-230">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-230">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-231">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-231">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Beep">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-232">コンソールのスピーカーからビープ音を出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-232">Plays the sound of a beep through the console speaker.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Beep">
      <MemberSignature Language="C#" Value="public static void Beep ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Beep() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Beep" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Beep ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Beep();" />
      <MemberSignature Language="F#" Value="static member Beep : unit -&gt; unit" Usage="System.Console.Beep " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b418-233">コンソールのスピーカーからビープ音を出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-233">Plays the sound of a beep through the console speaker.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-234">既定では、200 ミリ秒の期間 800 ヘルツの頻度でビープ音を再生します。</span><span class="sxs-lookup"><span data-stu-id="4b418-234">By default, the beep plays at a frequency of 800 hertz for a duration of 200 milliseconds.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4b418-235"><xref:System.Console.Beep%2A>メソッドは、Windows Vista および Windows XP の 64 ビット エディションでサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="4b418-235">The <xref:System.Console.Beep%2A> method is not supported on the 64-bit editions of Windows Vista and Windows XP.</span></span>  
  
 <span data-ttu-id="4b418-236"><xref:System.Console.Beep%2A> Windows への呼び出しをラップ[関数ビープ音を出す](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-236"><xref:System.Console.Beep%2A> wraps a call to the Windows [Beep function](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx).</span></span> <span data-ttu-id="4b418-237">かどうか<xref:System.Console.Beep%2A>Windows 7 は、プログラミング可能な間隔の 8254 タイマーのチップの存在に依存する前に Windows のバージョンでサウンドを生成します。</span><span class="sxs-lookup"><span data-stu-id="4b418-237">Whether <xref:System.Console.Beep%2A> produces a sound on versions of Windows before Windows 7 depends on the presence of a 8254 programmable interval timer chip.</span></span> <span data-ttu-id="4b418-238">既定のサウンド デバイスに依存 Windows 7 以降します。</span><span class="sxs-lookup"><span data-stu-id="4b418-238">Starting with Windows 7, it depends on the default sound device.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-239">次の例で、<xref:System.Console.Beep%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-239">The following example demonstrates the <xref:System.Console.Beep%2A> method.</span></span> <span data-ttu-id="4b418-240">例は、コマンドラインの引数として 1 ~ 9 の数値を受け取り、その回数にビープ音を再生します。</span><span class="sxs-lookup"><span data-stu-id="4b418-240">The example accepts a number from 1 through 9 as a command line argument, and plays the beep that number of times.</span></span>  
  
 [!code-cpp[console.beep#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.beep/CPP/beep.cpp#1)]
 [!code-csharp[console.beep#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.beep/CS/beep.cs#1)]
 [!code-vb[console.beep#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.beep/VB/beep.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.HostProtectionException">
          <span data-ttu-id="4b418-241">このメソッドは、SQL Server などのユーザー インターフェイスへのアクセスを許可しないサーバーで実行されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-241">This method was executed on a server, such as SQL Server, that does not permit access to a user interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Beep">
      <MemberSignature Language="C#" Value="public static void Beep (int frequency, int duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Beep(int32 frequency, int32 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Beep(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Beep (frequency As Integer, duration As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Beep(int frequency, int duration);" />
      <MemberSignature Language="F#" Value="static member Beep : int * int -&gt; unit" Usage="System.Console.Beep (frequency, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frequency" Type="System.Int32" />
        <Parameter Name="duration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="frequency">
          <span data-ttu-id="4b418-242">ビープ音の周波数。37 Hz から 32767 Hz の範囲で指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-242">The frequency of the beep, ranging from 37 to 32767 hertz.</span>
          </span>
        </param>
        <param name="duration">
          <span data-ttu-id="4b418-243">ビープ音の再生時間。ミリ秒単位で指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-243">The duration of the beep measured in milliseconds.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-244">周波数と時間を指定して、コンソールのスピーカーからビープ音を出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-244">Plays the sound of a beep of a specified frequency and duration through the console speaker.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-245"><xref:System.Console.Beep%2A> Windows への呼び出しをラップ[関数ビープ音を出す](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-245"><xref:System.Console.Beep%2A> wraps a call to the Windows [Beep function](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx).</span></span> <span data-ttu-id="4b418-246">かどうか<xref:System.Console.Beep%2A>Windows 7 は、プログラミング可能な間隔の 8254 タイマーのチップの存在に依存する前に Windows のバージョンでサウンドを生成します。</span><span class="sxs-lookup"><span data-stu-id="4b418-246">Whether <xref:System.Console.Beep%2A> produces a sound on versions of Windows before Windows 7 depends on the presence of a 8254 programmable interval timer chip.</span></span> <span data-ttu-id="4b418-247">既定のサウンド デバイスに依存 Windows 7 以降します。</span><span class="sxs-lookup"><span data-stu-id="4b418-247">Starting with Windows 7, it depends on the default sound device.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4b418-248"><xref:System.Console.Beep%2A>メソッドは、Windows Vista および Windows XP の 64 ビット エディションでサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="4b418-248">The <xref:System.Console.Beep%2A> method is not supported on the 64-bit editions of Windows Vista and Windows XP.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-249">この例では、<xref:System.Console.Beep%2A>メソッドによって、コンソールのスピーカーからの曲の最初のいくつかメモを再生します。</span><span class="sxs-lookup"><span data-stu-id="4b418-249">This example demonstrates the <xref:System.Console.Beep%2A> method by playing the first few notes of a song through the console speaker.</span></span>  
  
 [!code-cpp[console.beep2#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.beep2/CPP/b2.cpp#1)]
 [!code-csharp[console.beep2#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.beep2/CS/b2.cs#1)]
 [!code-vb[console.beep2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.beep2/VB/b2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-250">
            <paramref name="frequency" /> は 37 ヘルツ未満または 32767 ヘルツを超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-250">
              <paramref name="frequency" /> is less than 37 or more than 32767 hertz.</span>
          </span>
          <span data-ttu-id="4b418-251">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-251">-or-</span>
          </span>
          <span data-ttu-id="4b418-252">
            <paramref name="duration" /> が 0 以下です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-252">
              <paramref name="duration" /> is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.HostProtectionException">
          <span data-ttu-id="4b418-253">このメソッドは、SQL Server などのコンソールへのアクセスを許可しないサーバーで実行されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-253">This method was executed on a server, such as SQL Server, that does not permit access to the console.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BufferHeight">
      <MemberSignature Language="C#" Value="public static int BufferHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BufferHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.BufferHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BufferHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int BufferHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BufferHeight : int with get, set" Usage="System.Console.BufferHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-254">バッファー領域の高さを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-254">Gets or sets the height of the buffer area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-255">バッファー領域の現在の高さを示す行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-255">The current height, in rows, of the buffer area.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-256">このプロパティは、コンソール モード ウィンドウによってアクセスされるバッファーに格納されている行 (または行) の数を定義します。</span><span class="sxs-lookup"><span data-stu-id="4b418-256">This property defines the number of rows (or lines) stored in the buffer that is accessed by a console mode window.</span></span> <span data-ttu-id="4b418-257">これに対し、<xref:System.Console.WindowHeight%2A>プロパティは、実際には、特定の時点に、コンソール ウィンドウに表示される行の数を定義します。</span><span class="sxs-lookup"><span data-stu-id="4b418-257">In contrast, the <xref:System.Console.WindowHeight%2A> property defines the number of rows that are actually displayed in the console window at any particular time.</span></span> <span data-ttu-id="4b418-258">バッファーに実際に書き込まれた行の数によって定義された行の数を超える場合、<xref:System.Console.WindowHeight%2A>プロパティと等しい行の連続した番号を表示するように、ウィンドウを垂直方向にスクロールできる、<xref:System.Console.WindowHeight%2A>プロパティとは内のバッファー。</span><span class="sxs-lookup"><span data-stu-id="4b418-258">If the number of rows actually written to the buffer exceeds the number of rows defined by the <xref:System.Console.WindowHeight%2A> property, the window can be scrolled vertically so that it displays a contiguous number of rows that are equal to the <xref:System.Console.WindowHeight%2A> property and are located anywhere in the buffer.</span></span>  
  
 <span data-ttu-id="4b418-259">設定操作がの値が減少した場合、<xref:System.Console.BufferHeight%2A>プロパティ、最上位の行が削除されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-259">If a set operation decreases the value of the <xref:System.Console.BufferHeight%2A> property, the uppermost lines are removed.</span></span> <span data-ttu-id="4b418-260">たとえば、行の数が 250 に 300 から減少、0 ~ 49 の行が削除されて、および既存の行を 50 ~ 299 になる場合は、0 から 249 を行します。</span><span class="sxs-lookup"><span data-stu-id="4b418-260">For example, if the number of lines is reduced from 300 to 250, lines 0 through 49 are removed, and the existing lines 50 through 299 become lines 0 through 249.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-261">この例では、<xref:System.Console.BufferHeight%2A>と<xref:System.Console.BufferWidth%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-261">This example demonstrates the <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties.</span></span> <span data-ttu-id="4b418-262">例では、300 行と 85 列のバッファー サイズに設定するオペレーティング システムのウィンドウのサイズを報告します。</span><span class="sxs-lookup"><span data-stu-id="4b418-262">The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.</span></span>  
  
 [!code-cpp[console.bufferHW#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.bufferHW/CPP/hw.cpp#1)]
 [!code-csharp[console.bufferHW#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.bufferHW/CS/hw.cs#1)]
 [!code-vb[console.bufferHW#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.bufferHW/VB/hw.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-263">セット操作の値が 0 以下です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-263">The value in a set operation is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="4b418-264">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-264">-or-</span>
          </span>
          <span data-ttu-id="4b418-265">セット操作の値が <see cref="F:System.Int16.MaxValue" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-265">The value in a set operation is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
          <span data-ttu-id="4b418-266">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-266">-or-</span>
          </span>
          <span data-ttu-id="4b418-267">セット操作の値が <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" /> 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-267">The value in a set operation is less than <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4b418-268">ユーザーにこの操作を実行するアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-268">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-269">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-269">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-270">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-270">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-271">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-271">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BufferWidth">
      <MemberSignature Language="C#" Value="public static int BufferWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BufferWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.BufferWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BufferWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int BufferWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BufferWidth : int with get, set" Usage="System.Console.BufferWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-272">バッファー領域の幅を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-272">Gets or sets the width of the buffer area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-273">バッファー領域の現在の幅を示す列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-273">The current width, in columns, of the buffer area.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-274">設定操作がの値が減少した場合、<xref:System.Console.BufferWidth%2A>プロパティ、右端の列が削除されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-274">If a set operation decreases the value of the <xref:System.Console.BufferWidth%2A> property, the rightmost columns are removed.</span></span> <span data-ttu-id="4b418-275">たとえば、列の数を 80 から 60 を縮小した場合、60 ~ 79 行ごとの列は削除されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-275">For example, if the number of columns is reduced from 80 to 60, columns 60 through 79 of each row are removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-276">この例では、<xref:System.Console.BufferHeight%2A>と<xref:System.Console.BufferWidth%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-276">This example demonstrates the <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties.</span></span> <span data-ttu-id="4b418-277">例では、300 行と 85 列のバッファー サイズに設定するオペレーティング システムのウィンドウのサイズを報告します。</span><span class="sxs-lookup"><span data-stu-id="4b418-277">The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.</span></span>  
  
 [!code-cpp[console.bufferHW#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.bufferHW/CPP/hw.cpp#1)]
 [!code-csharp[console.bufferHW#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.bufferHW/CS/hw.cs#1)]
 [!code-vb[console.bufferHW#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.bufferHW/VB/hw.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-278">セット操作の値が 0 以下です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-278">The value in a set operation is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="4b418-279">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-279">-or-</span>
          </span>
          <span data-ttu-id="4b418-280">セット操作の値が <see cref="F:System.Int16.MaxValue" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-280">The value in a set operation is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
          <span data-ttu-id="4b418-281">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-281">-or-</span>
          </span>
          <span data-ttu-id="4b418-282">セット操作の値が <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" /> 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-282">The value in a set operation is less than <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4b418-283">ユーザーにこの操作を実行するアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-283">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-284">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-284">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-285">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-285">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-286">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-286">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CancelKeyPress">
      <MemberSignature Language="C#" Value="public static event ConsoleCancelEventHandler CancelKeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ConsoleCancelEventHandler CancelKeyPress" />
      <MemberSignature Language="DocId" Value="E:System.Console.CancelKeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event CancelKeyPress As ConsoleCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event ConsoleCancelEventHandler ^ CancelKeyPress;" />
      <MemberSignature Language="F#" Value="member this.CancelKeyPress : ConsoleCancelEventHandler " Usage="member this.CancelKeyPress : System.ConsoleCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>add: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>remove: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ConsoleCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-287">
            <see cref="F:System.ConsoleModifiers.Control" /> の修飾子キー (Ctrl) と <see cref="F:System.ConsoleKey.C" /> コンソール キー (c) または中断キーが同時にプッシュされた場合 (Ctrl + C または Ctrl + Break) に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-287">Occurs when the <see cref="F:System.ConsoleModifiers.Control" /> modifier key (Ctrl) and either the <see cref="F:System.ConsoleKey.C" /> console key (C) or the Break key are pressed simultaneously (Ctrl+C or Ctrl+Break).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-288">このイベントと組み合わせて使用<xref:System.ConsoleCancelEventHandler?displayProperty=nameWithType>と<xref:System.ConsoleCancelEventArgs?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="4b418-288">This event is used in conjunction with <xref:System.ConsoleCancelEventHandler?displayProperty=nameWithType> and <xref:System.ConsoleCancelEventArgs?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4b418-289"><xref:System.Console.CancelKeyPress>イベントがイベント ハンドラーが実行を続行するか、終了するかどうかを決定するために CTRL + C シグナルをインターセプトするコンソール アプリケーションを使用します。</span><span class="sxs-lookup"><span data-stu-id="4b418-289">The <xref:System.Console.CancelKeyPress> event enables a console application to intercept the Ctrl+C signal so the event handler can decide whether to continue executing or terminate.</span></span> <span data-ttu-id="4b418-290">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4b418-290">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4b418-291">ユーザーは、Ctrl キーを押しながら C キーまたは Ctrl + Break を押したとき、<xref:System.Console.CancelKeyPress>イベントが発生したとアプリケーションの<xref:System.ConsoleCancelEventHandler>イベント ハンドラーが実行されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-291">When the user presses either Ctrl+C or Ctrl+Break, the <xref:System.Console.CancelKeyPress> event is fired and the application's <xref:System.ConsoleCancelEventHandler> event handler is executed.</span></span> <span data-ttu-id="4b418-292">イベント ハンドラーに渡される、<xref:System.ConsoleCancelEventArgs>を 2 つの便利なプロパティを持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4b418-292">The event handler is passed a <xref:System.ConsoleCancelEventArgs> object that has two useful properties:</span></span>  
  
-   <span data-ttu-id="4b418-293"><xref:System.ConsoleCancelEventArgs.SpecialKey%2A>、、ユーザーが ctrl キーを押しながら C キーを押して結果として、ハンドラーが呼び出されたかどうかを判断できます (プロパティの値が<xref:System.ConsoleSpecialKey.ControlC?displayProperty=nameWithType>) または Ctrl + Break (プロパティの値が<xref:System.ConsoleSpecialKey.ControlBreak?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="4b418-293"><xref:System.ConsoleCancelEventArgs.SpecialKey%2A>, which allows you to determine whether the handler was invoked as a result of the user pressing Ctrl+C (the property value is <xref:System.ConsoleSpecialKey.ControlC?displayProperty=nameWithType>) or Ctrl+Break (the property value is <xref:System.ConsoleSpecialKey.ControlBreak?displayProperty=nameWithType>).</span></span>  
  
-   <span data-ttu-id="4b418-294"><xref:System.ConsoleCancelEventArgs.Cancel%2A>、どのアプリケーションにする必要があります、ユーザーに応答キーを押して CTRL + C または Ctrl + break を判断できます。</span><span class="sxs-lookup"><span data-stu-id="4b418-294"><xref:System.ConsoleCancelEventArgs.Cancel%2A>, which allows you to determine how to your application should respond to the user pressing Ctrl+C or Ctrl+Break.</span></span> <span data-ttu-id="4b418-295">既定で、<xref:System.ConsoleCancelEventArgs.Cancel%2A>プロパティは`false`、原因プログラムの終了イベント ハンドラーの終了時に実行します。</span><span class="sxs-lookup"><span data-stu-id="4b418-295">By default, the <xref:System.ConsoleCancelEventArgs.Cancel%2A> property is `false`, which causes program execution to terminate when the event handler exits.</span></span> <span data-ttu-id="4b418-296">そのプロパティを変更する`true`こと、アプリケーションが実行を継続する必要がありますを指定します。</span><span class="sxs-lookup"><span data-stu-id="4b418-296">Changing its property to `true` specifies that the application should continue to execute.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="4b418-297">使用することができます、アプリケーションにシンプルな要件がある場合、<xref:System.Console.TreatControlCAsInput%2A>このイベントではなくプロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-297">If your application has simple requirements, you can use the <xref:System.Console.TreatControlCAsInput%2A> property instead of this event.</span></span> <span data-ttu-id="4b418-298">このプロパティを設定して`false`ユーザーが Ctrl キーを押しながら C キーを押した場合に常にアプリケーションを終了することを確認できます。</span><span class="sxs-lookup"><span data-stu-id="4b418-298">By setting this property to `false`, you can ensure that your application always exits if the user presses Ctrl+C.</span></span> <span data-ttu-id="4b418-299">設定することで`true`、こと、Ctrl + C キーを押してもアプリケーションは終了しないことを確認できます。</span><span class="sxs-lookup"><span data-stu-id="4b418-299">By setting it to `true`, you can ensure that pressing Ctrl+C will not terminate the application.</span></span>  
  
 <span data-ttu-id="4b418-300">このイベントのイベント ハンドラーは、スレッド プールのスレッドで実行されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-300">The event handler for this event is executed on a thread pool thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-301">例を次に示しますが、どの<xref:System.Console.CancelKeyPress>イベントを使用します。</span><span class="sxs-lookup"><span data-stu-id="4b418-301">The following example demonstrates how the <xref:System.Console.CancelKeyPress> event is used.</span></span> <span data-ttu-id="4b418-302">Ctrl キーを押しながら C キーを押すと、読み取り操作が中断し、`myHandler`イベント ハンドラーが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-302">When you press Ctrl+C, the read operation is interrupted and the `myHandler` event handler is invoked.</span></span> <span data-ttu-id="4b418-303">イベント ハンドラーに入ったときに、<xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType>プロパティは`false`、イベント ハンドラーの終了時に、現在のプロセスは終了ことを意味します。</span><span class="sxs-lookup"><span data-stu-id="4b418-303">Upon entry to the event handler, the <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType> property is `false`, which means that the current process will terminate when the event handler terminates.</span></span> <span data-ttu-id="4b418-304">ただし、イベント ハンドラーの設定、<xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType>プロパティを`true`つまり、プロセスは終了しませんし、読み取り操作が再開されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-304">However, the event handler sets the <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType> property to `true`, which means that the process will not terminate and the read operation will resume.</span></span>  
  
 [!code-cpp[console.cancelkeypress#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cancelkeypress/cpp/ckp.cpp#1)]
 [!code-csharp[console.cancelkeypress#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cancelkeypress/cs/ckp.cs#1)]
 [!code-vb[console.cancelkeypress#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cancelkeypress/vb/ckp.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-305">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-305">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-306">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-306">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="T:System.ConsoleCancelEventArgs" />
        <altmember cref="T:System.ConsoleCancelEventHandler" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
      </Docs>
    </Member>
    <Member MemberName="CapsLock">
      <MemberSignature Language="C#" Value="public static bool CapsLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CapsLock" />
      <MemberSignature Language="DocId" Value="P:System.Console.CapsLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CapsLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CapsLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CapsLock : bool" Usage="System.Console.CapsLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-307">CapsLock がオンかオフかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-307">Gets a value indicating whether the CAPS LOCK keyboard toggle is turned on or turned off.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-308">CapsLock がオンの場合は <see langword="true" />、CapsLock がオフの場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-308">
              <see langword="true" /> if CAPS LOCK is turned on; <see langword="false" /> if CAPS LOCK is turned off.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear();" />
      <MemberSignature Language="F#" Value="static member Clear : unit -&gt; unit" Usage="System.Console.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b418-309">コンソール バッファーおよび対応するコンソール ウィンドウをクリアします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-309">Clears the console buffer and corresponding console window of display information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-310">使用して、<xref:System.Console.Clear%2A>メソッドは、MS-DOS の呼び出しと同じ`cls`コマンド プロンプト ウィンドウでコマンド。</span><span class="sxs-lookup"><span data-stu-id="4b418-310">Using the <xref:System.Console.Clear%2A> method is equivalent invoking the MS-DOS `cls` command in the command prompt window.</span></span> <span data-ttu-id="4b418-311">ときに、<xref:System.Console.Clear%2A>メソッドが呼び出され、カーソルがウィンドウの左上隅に自動的にスクロールして、画面バッファーの内容は、現在の前景色の背景色を使用した空白に設定されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-311">When the <xref:System.Console.Clear%2A> method is called, the cursor automatically scrolls to the top-left corner of the window and the contents of the screen buffer are set to blanks using the current foreground background colors.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4b418-312">呼び出そうとすると、<xref:System.Console.Clear%2A>コンソール アプリケーションの出力がファイルにリダイレクトされたときのメソッドがスローされます、<xref:System.IO.IOException>します。</span><span class="sxs-lookup"><span data-stu-id="4b418-312">Attempting to call the <xref:System.Console.Clear%2A> method when a console application's output is redirected to a file throws a <xref:System.IO.IOException>.</span></span> <span data-ttu-id="4b418-313">呼び出しを常にこれを防ぐためには、ラップ、<xref:System.Console.Clear%2A>メソッドで、 `try`.`catch`</span><span class="sxs-lookup"><span data-stu-id="4b418-313">To prevent this, always wrap a call to the <xref:System.Console.Clear%2A> method in a `try`…`catch`</span></span> <span data-ttu-id="4b418-314">ブロックです。</span><span class="sxs-lookup"><span data-stu-id="4b418-314">block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-315">次の例では、<xref:System.Console.Clear%2A>メソッドをループの実行前に、コンソールのクリアをユーザーに表示される文字列を入力して前景色と背景色を選択するメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-315">The following example uses the <xref:System.Console.Clear%2A> method to clear the console before it executes a loop, prompts the user to select a foreground and background color and to enter a string to display.</span></span> <span data-ttu-id="4b418-316">コンソールの元の前景色と背景色を復元する場合は、ユーザーのプログラムを終了しないを選択し、<xref:System.Console.Clear%2A>メソッドは、ループを再実行する前に、もう一度呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-316">If the user chooses not to exit the program, the console's original foreground and background colors are restored and the <xref:System.Console.Clear%2A> method is called again before re-executing the loop.</span></span>  
  
 [!code-csharp[System.Console.Clear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.clear/cs/clear1.cs#1)]
 [!code-vb[System.Console.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.clear/vb/clear1.vb#1)]  
  
 <span data-ttu-id="4b418-317">例では、依存、`GetKeyPress`前景色と背景色のユーザーの選択を検証するメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-317">The example relies on a `GetKeyPress` method to validate the user's selection of a foreground and background color.</span></span>  
  
 <span data-ttu-id="4b418-318">この例では、<xref:System.Console.CursorLeft%2A>と<xref:System.Console.CursorTop%2A>プロパティ、および<xref:System.Console.SetCursorPosition%2A>と<xref:System.Console.Clear%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-318">This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods.</span></span> <span data-ttu-id="4b418-319">例では、位置の組み合わせを使用して 5 の文字の四角形で 5 文字を描画するために、次の書き込みが行われるかを決定する、カーソルは、「+」、"&#124;"、および"-"文字列。</span><span class="sxs-lookup"><span data-stu-id="4b418-319">The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&#124;", and "-" strings.</span></span> <span data-ttu-id="4b418-320">その他の文字列の組み合わせを使用して、少ない手順で四角形を描画することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4b418-320">Note that the rectangle could be drawn with fewer steps using a combination of other strings.</span></span>  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-321">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-321">An I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CursorLeft">
      <MemberSignature Language="C#" Value="public static int CursorLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorLeft" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorLeft { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CursorLeft : int with get, set" Usage="System.Console.CursorLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-322">バッファー領域におけるカーソルの列位置を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-322">Gets or sets the column position of the cursor within the buffer area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-323">カーソルの現在位置 (列)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-323">The current position, in columns, of the cursor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4b418-324">この例では、<xref:System.Console.CursorLeft%2A>と<xref:System.Console.CursorTop%2A>プロパティ、および<xref:System.Console.SetCursorPosition%2A>と<xref:System.Console.Clear%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-324">This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods.</span></span> <span data-ttu-id="4b418-325">例では、位置の組み合わせを使用して 5 の文字の四角形で 5 文字を描画するために、次の書き込みが行われるかを決定する、カーソルは、「+」、"&#124;"、および"-"文字列。</span><span class="sxs-lookup"><span data-stu-id="4b418-325">The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&#124;", and "-" strings.</span></span> <span data-ttu-id="4b418-326">その他の文字列の組み合わせを使用して、少ない手順で四角形を描画することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4b418-326">Note that the rectangle could be drawn with fewer steps using a combination of other strings.</span></span>  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-327">設定操作の値が 0 より小さい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-327">The value in a set operation is less than zero.</span>
          </span>
          <span data-ttu-id="4b418-328">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-328">-or-</span>
          </span>
          <span data-ttu-id="4b418-329">設定操作の値が <see cref="P:System.Console.BufferWidth" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-329">The value in a set operation is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4b418-330">ユーザーにこの操作を実行するアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-330">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-331">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-331">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-332">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-332">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-333">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-333">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CursorSize">
      <MemberSignature Language="C#" Value="public static int CursorSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorSize" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CursorSize : int with get, set" Usage="System.Console.CursorSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-334">文字セル内のカーソルの高さを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-334">Gets or sets the height of the cursor within a character cell.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-335">文字セルの高さに対する割合で表されたカーソルのサイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-335">The size of the cursor expressed as a percentage of the height of a character cell.</span>
          </span>
          <span data-ttu-id="4b418-336">プロパティ値の範囲は、1 ～ 100 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-336">The property value ranges from 1 to 100.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-337">プロパティの値は 1、プロパティ値が 100 である場合、セルを完全に入力するときに、セルの下部にある水平な線からまで、カーソルの外観が異なります。</span><span class="sxs-lookup"><span data-stu-id="4b418-337">The cursor appearance varies, ranging from a horizontal line at the bottom of the cell when the property value is 1, to completely filling the cell when the property value is 100.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-338">この例では、<xref:System.Console.CursorSize%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-338">This example demonstrates the <xref:System.Console.CursorSize%2A> property.</span></span> <span data-ttu-id="4b418-339">例には、カーソルのたびに、コンソール キーが押されたし、終了する前に、元のサイズにカーソルを復元のサイズが大きくなります。</span><span class="sxs-lookup"><span data-stu-id="4b418-339">The example increases the size of the cursor each time any console key is pressed, then restores the cursor to its original size before terminating.</span></span>  
  
 [!code-cpp[console.cursorsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorsize/CPP/csize.cpp#1)]
 [!code-csharp[console.cursorsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorsize/CS/csize.cs#1)]
 [!code-vb[console.cursorsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorsize/VB/csize.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-340">設定操作で指定された値は、1 より小さい値か、100 より大きい値になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-340">The value specified in a set operation is less than 1 or greater than 100.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4b418-341">ユーザーにこの操作を実行するアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-341">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-342">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-342">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-343">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-343">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-344">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-344">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CursorTop">
      <MemberSignature Language="C#" Value="public static int CursorTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorTop" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorTop" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorTop As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorTop { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CursorTop : int with get, set" Usage="System.Console.CursorTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-345">バッファー領域におけるカーソルの行位置を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-345">Gets or sets the row position of the cursor within the buffer area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-346">カーソルの現在位置 (行)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-346">The current position, in rows, of the cursor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4b418-347">この例では、<xref:System.Console.CursorLeft%2A>と<xref:System.Console.CursorTop%2A>プロパティ、および<xref:System.Console.SetCursorPosition%2A>と<xref:System.Console.Clear%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-347">This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods.</span></span> <span data-ttu-id="4b418-348">例では、位置の組み合わせを使用して 5 の文字の四角形で 5 文字を描画するために、次の書き込みが行われるかを決定する、カーソルは、「+」、"&#124;"、および"-"文字列。</span><span class="sxs-lookup"><span data-stu-id="4b418-348">The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&#124;", and "-" strings.</span></span> <span data-ttu-id="4b418-349">その他の文字列の組み合わせを使用して、少ない手順で四角形を描画することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4b418-349">Note that the rectangle could be drawn with fewer steps using a combination of other strings.</span></span>  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-350">設定操作の値が 0 より小さい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-350">The value in a set operation is less than zero.</span>
          </span>
          <span data-ttu-id="4b418-351">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-351">-or-</span>
          </span>
          <span data-ttu-id="4b418-352">設定操作の値が <see cref="P:System.Console.BufferHeight" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-352">The value in a set operation is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4b418-353">ユーザーにこの操作を実行するアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-353">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-354">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-354">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-355">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-355">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-356">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-356">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CursorVisible">
      <MemberSignature Language="C#" Value="public static bool CursorVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CursorVisible" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorVisible" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CursorVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CursorVisible : bool with get, set" Usage="System.Console.CursorVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-357">カーソルを表示するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-357">Gets or sets a value indicating whether the cursor is visible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-358">カーソルを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-358">
              <see langword="true" /> if the cursor is visible; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4b418-359">この例では、<xref:System.Console.CursorVisible%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-359">This example demonstrates the <xref:System.Console.CursorVisible%2A> property.</span></span> <span data-ttu-id="4b418-360">入力の最初の列が '+' 文字の場合は、表示または非表示は、入力がの場合、例では、カーソル、'-' 文字。</span><span class="sxs-lookup"><span data-stu-id="4b418-360">The example makes the cursor visible if the first column of input is a '+' character or invisible if the input is a '-' character.</span></span>  
  
 [!code-cpp[console.cursorvis#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorvis/CPP/vis.cpp#1)]
 [!code-csharp[console.cursorvis#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorvis/CS/vis.cs#1)]
 [!code-vb[console.cursorvis#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorvis/VB/vis.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4b418-361">ユーザーにこの操作を実行するアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-361">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-362">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-362">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-363">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-363">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-364">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-364">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public static System.IO.TextWriter Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextWriter Error" />
      <MemberSignature Language="DocId" Value="P:System.Console.Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Error As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextWriter ^ Error { System::IO::TextWriter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Error : System.IO.TextWriter" Usage="System.Console.Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-365">標準エラー出力ストリームを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-365">Gets the standard error output stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-366">標準エラー出力ストリームを表す <see cref="T:System.IO.TextWriter" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-366">A <see cref="T:System.IO.TextWriter" /> that represents the standard error output stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-367">この標準エラー ストリームは、既定では、コンソールに設定されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-367">This standard error stream is set to the console by default.</span></span> <span data-ttu-id="4b418-368">別のストリームに設定することができます、<xref:System.Console.SetError%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-368">It can be set to another stream with the <xref:System.Console.SetError%2A> method.</span></span> <span data-ttu-id="4b418-369">標準エラー ストリームをリダイレクトすると後に、再取得する呼び出すことによって、<xref:System.Console.OpenStandardError%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-369">After the standard error stream is redirected, it can be reacquired by calling the <xref:System.Console.OpenStandardError%2A> method.</span></span>  
  
 <span data-ttu-id="4b418-370">情報の出力がファイルにリダイレクト多くの場合、コンソール アプリケーションで標準エラー ストリームで使用できる、<xref:System.Console.Error%2A>出力がリダイレクトされる場合でもコンソールに情報を表示するプロパティを使用できます。</span><span class="sxs-lookup"><span data-stu-id="4b418-370">In console applications whose informational output is often redirected to a file, the standard error stream available through the <xref:System.Console.Error%2A> property can be used to display information to the console even if output is redirected.</span></span> <span data-ttu-id="4b418-371">次の例では、1 から開始時に 10 個の番号の製品テーブルが表示されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-371">The following example displays product tables for 10 numbers at a time starting with 1.</span></span> <span data-ttu-id="4b418-372">10 個の番号を設定するたびに、<xref:System.Console.Error%2A>プロパティは、次のセットを表示するかどうかをユーザーの要求に使用します。</span><span class="sxs-lookup"><span data-stu-id="4b418-372">After every set of 10 numbers, the <xref:System.Console.Error%2A> property is used to ask the user whether to display the next set.</span></span> <span data-ttu-id="4b418-373">標準出力は、ファイルにリダイレクトされますが場合、ルーチンが、次の製品のセットを生成するかどうか、ユーザーが引き続き求められます。</span><span class="sxs-lookup"><span data-stu-id="4b418-373">If the standard output is redirected to a file, the user is still asked whether the routine should generate the next set of products.</span></span>  
  
 [!code-csharp[System.Console.Error#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.error/cs/error1.cs#1)]
 [!code-vb[System.Console.Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.error/vb/error1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="4b418-374">次の例は、によって定義された値の 4 つの空白を含むテキスト ファイルでタブ文字を置換する ExpandTabs という名前のコマンド ライン ユーティリティ、`tabSize`変数。</span><span class="sxs-lookup"><span data-stu-id="4b418-374">The following example is a command line utility named ExpandTabs that replaces tab characters in a text file with four spaces, the value defined by the `tabSize` variable.</span></span> <span data-ttu-id="4b418-375">リダイレクト標準入力と出力ファイルは、ストリームしますが、使用して、<xref:System.Console.Error%2A>プロパティを標準エラー ストリームをコンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="4b418-375">It redirects the standard input and output streams to files, but uses the <xref:System.Console.Error%2A> property to write the standard error stream to the console.</span></span> <span data-ttu-id="4b418-376">タブ文字を含むファイルの名前と出力ファイルの名前を指定してコマンドラインから起動できます。</span><span class="sxs-lookup"><span data-stu-id="4b418-376">It can be launched from the command line by supplying the name of the file that contains tab characters and the name of the output file.</span></span>  
  
 [!code-cpp[Console-EXPANDTABSEX#1](~/samples/snippets/cpp/VS_Snippets_CLR/Console-EXPANDTABSEX/CPP/expandtabsex.cpp#1)]
 [!code-csharp[Console-EXPANDTABSEX#1](~/samples/snippets/csharp/VS_Snippets_CLR/Console-EXPANDTABSEX/CS/expandtabsex.cs#1)]
 [!code-vb[Console-EXPANDTABSEX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Console-EXPANDTABSEX/VB/expandtabsex.vb#1)]  
  
 <span data-ttu-id="4b418-377">次の例は、1 つまたは複数のテキスト ファイルの内容をコンソールに表示する単純なテキスト ファイル ビューアーです。</span><span class="sxs-lookup"><span data-stu-id="4b418-377">The following example is a simple text file viewer that displays the contents of one or more text files to the console.</span></span> <span data-ttu-id="4b418-378">コマンドラインの引数がないか、例ではコマンドライン引数として渡されるすべてのファイルが存在しない場合、<xref:System.Console.SetError%2A>エラー情報をファイルにリダイレクトするメソッドを呼び出す、<xref:System.Console.OpenStandardError%2A>標準エラーを再取得する処理中のメソッドストリーム、およびエラー情報をファイルに書き込まれたことを示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-378">If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <xref:System.Console.SetError%2A> method to redirect error information to a file, calls the <xref:System.Console.OpenStandardError%2A> method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.</span></span>  
  
 [!code-csharp[System.Console.OpenStandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.openstandarderror/cs/viewtextfile.cs#1)]
 [!code-vb[System.Console.OpenStandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.openstandarderror/vb/viewtextfile.vb#1)]  
  
 <span data-ttu-id="4b418-379">なお、<xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType>プロパティに設定されて`true`エラー ストリームを再取得する前にします。</span><span class="sxs-lookup"><span data-stu-id="4b418-379">Note that the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> property is set to `true` before reacquiring the error stream.</span></span> <span data-ttu-id="4b418-380">これにより、出力をバッファーに格納するのではなく、コンソールに直ちに送信するされます。</span><span class="sxs-lookup"><span data-stu-id="4b418-380">This ensures that output will be sent to the console immediately rather than buffered.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="ForegroundColor">
      <MemberSignature Language="C#" Value="public static ConsoleColor ForegroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ConsoleColor ForegroundColor" />
      <MemberSignature Language="DocId" Value="P:System.Console.ForegroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ForegroundColor As ConsoleColor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property ConsoleColor ForegroundColor { ConsoleColor get(); void set(ConsoleColor value); };" />
      <MemberSignature Language="F#" Value="member this.ForegroundColor : ConsoleColor with get, set" Usage="System.Console.ForegroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ConsoleColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-381">コンソールの前景色を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-381">Gets or sets the foreground color of the console.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-382">コンソールの前景色、つまり、表示される各文字の色を指定する <see cref="T:System.ConsoleColor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-382">A <see cref="T:System.ConsoleColor" /> that specifies the foreground color of the console; that is, the color of each character that is displayed.</span>
          </span>
          <span data-ttu-id="4b418-383">既定値は灰色です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-383">The default is gray.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-384">これで、コンソールが存在しない、Windows ベース アプリケーションの取得操作を返します<xref:System.ConsoleColor.Gray>します。</span><span class="sxs-lookup"><span data-stu-id="4b418-384">A get operation for a Windows-based application, in which a console does not exist, returns <xref:System.ConsoleColor.Gray>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-385">次の例は、コンソールの背景色は黒で、背景色を変更、red と前景の色を黒にした場合は、かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="4b418-385">The following example checks whether the console's background color is black and, if it is, it changes the background color to red and the foreground color to black.</span></span>  
  
 [!code-csharp[System.ConsoleColor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/Example2.cs#2)] 
 [!code-vb[System.ConsoleColor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/Example2.vb#2)]  
  
 <span data-ttu-id="4b418-386">次の例の値を保存する、<xref:System.ConsoleColor>列挙型を配列の現在の値を格納し、<xref:System.Console.BackgroundColor%2A>と<xref:System.Console.ForegroundColor%2A>変数するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-386">The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and <xref:System.Console.ForegroundColor%2A> properties to variables.</span></span> <span data-ttu-id="4b418-387">前景色の各色に変わりますが、<xref:System.ConsoleColor>列挙体の色に現在の背景に一致しての各色を背景色を変更点を除いて、<xref:System.ConsoleColor>と一致する色を除く列挙型、現在の前景色。</span><span class="sxs-lookup"><span data-stu-id="4b418-387">It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground.</span></span> <span data-ttu-id="4b418-388">(前景色、背景色と同じである場合、テキストは表示されません。)最後に、呼び出し、<xref:System.Console.ResetColor%2A>を元のコンソールの色を復元します。</span><span class="sxs-lookup"><span data-stu-id="4b418-388">(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.</span></span>  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4b418-389">設定操作で指定された色は、<see cref="T:System.ConsoleColor" /> の有効なメンバーではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-389">The color specified in a set operation is not a valid member of <see cref="T:System.ConsoleColor" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4b418-390">ユーザーにこの操作を実行するアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-390">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-391">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-391">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-392">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-392">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-393">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-393">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="In">
      <MemberSignature Language="C#" Value="public static System.IO.TextReader In { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextReader In" />
      <MemberSignature Language="DocId" Value="P:System.Console.In" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property In As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextReader ^ In { System::IO::TextReader ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.In : System.IO.TextReader" Usage="System.Console.In" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-394">標準入力ストリームを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-394">Gets the standard input stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-395">標準入力ストリームを表す <see cref="T:System.IO.TextReader" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-395">A <see cref="T:System.IO.TextReader" /> that represents the standard input stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-396">このプロパティは、既定で標準入力ストリームに設定です。</span><span class="sxs-lookup"><span data-stu-id="4b418-396">This property is set to the standard input stream by default.</span></span> <span data-ttu-id="4b418-397">別のストリームにこのプロパティを設定することができます、<xref:System.Console.SetIn%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-397">This property can be set to another stream with the <xref:System.Console.SetIn%2A> method.</span></span>  
  
 <span data-ttu-id="4b418-398">標準入力ストリームの読み取り操作が同期的に実行します。</span><span class="sxs-lookup"><span data-stu-id="4b418-398">Read operations on the standard input stream execute synchronously.</span></span> <span data-ttu-id="4b418-399">つまり、指定された読み取り操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="4b418-399">That is, they block until the specified read operation has completed.</span></span> <span data-ttu-id="4b418-400">これはあっても当てはまる場合、非同期メソッドなど<xref:System.IO.TextReader.ReadLineAsync%2A>が呼び出される、<xref:System.IO.TextReader>によって返されるオブジェクト、<xref:System.Console.In%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-400">This is true even if an asynchronous method, such as <xref:System.IO.TextReader.ReadLineAsync%2A>, is called on the <xref:System.IO.TextReader> object returned by the <xref:System.Console.In%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-401">次の例は、の使用方法を示します、`In`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-401">The following sample illustrates the use of the `In` property.</span></span>  
  
 [!code-cpp[consolein#1](~/samples/snippets/cpp/VS_Snippets_CLR/consolein/CPP/consolein.cpp#1)]
 [!code-csharp[consolein#1](~/samples/snippets/csharp/VS_Snippets_CLR/consolein/CS/consolein.cs#1)]
 [!code-vb[consolein#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/consolein/VB/consolein.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Console.OpenStandardInput" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <Member MemberName="InputEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding InputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding InputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Console.InputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property InputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ InputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InputEncoding : System.Text.Encoding with get, set" Usage="System.Console.InputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-402">コンソールが入力内容の読み取り時に使用するエンコーディングを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-402">Gets or sets the encoding the console uses to read input.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-403">コンソールが入力内容の読み取りに使用するエンコーディング。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-403">The encoding used to read console input.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-404">コンソールでは、入力に対応する文字にキーボード入力を変換するエンコーディングを使用します。</span><span class="sxs-lookup"><span data-stu-id="4b418-404">The console uses the input encoding to translate keyboard input into a corresponding character.</span></span> <span data-ttu-id="4b418-405">入力のエンコードには、256 個のキーボード文字コードを個別の文字にマップされているコード ページが組み込まれています。</span><span class="sxs-lookup"><span data-stu-id="4b418-405">The input encoding incorporates a code page that maps 256 keyboard character codes to individual characters.</span></span> <span data-ttu-id="4b418-406">異なるコード ページには異なる特殊文字が含まれ、それらは通常は 1 つの言語または言語グループ用にカスタマイズされています。</span><span class="sxs-lookup"><span data-stu-id="4b418-406">Different code pages include different special characters, typically customized for a language or a group of languages.</span></span>  
  
 <span data-ttu-id="4b418-407">以降では、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]プロパティの取得操作は、コンソールの現在入力エンコーディングではなくキャッシュされた値を返す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-407">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], a property get operation may return a cached value instead of the console's current input encoding.</span></span> <span data-ttu-id="4b418-408">これは、現象が発生の値、<xref:System.Console.InputEncoding%2A>以外への代入をいくつかの方法でプロパティが変更された、 <xref:System.Console.InputEncoding%2A> 、Windows の呼び出しなどのプロパティ`SetConsoleCP`関数またはを使用して、 `chcp` PowerShell スクリプトからコマンド。</span><span class="sxs-lookup"><span data-stu-id="4b418-408">This can occur if the value of the <xref:System.Console.InputEncoding%2A> property is modified by some means other than an assignment to the <xref:System.Console.InputEncoding%2A> property, such as calling the Windows `SetConsoleCP` function or using the `chcp` command from a PowerShell script.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b418-409">設定操作でのプロパティ値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-409">The property value in a set operation is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-410">この操作の実行中にエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-410">An error occurred during the execution of this operation.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4b418-411">アプリケーションに、この操作を実行するための権限がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-411">Your application does not have permission to perform this operation.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-412">最上位ウィンドウとセーフ サブウィンドウの中に読み書きする方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-412">for reading and writing to top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-413">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-413">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="IsErrorRedirected">
      <MemberSignature Language="C#" Value="public static bool IsErrorRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsErrorRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsErrorRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsErrorRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsErrorRedirected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsErrorRedirected : bool" Usage="System.Console.IsErrorRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-414">エラー出力ストリームが標準エラー ストリームからリダイレクトされているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-414">Gets a value that indicates whether the error output stream has been redirected from the standard error stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-415">エラー出力がリダイレクトされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-415">
              <see langword="true" /> if error output is redirected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
        <altmember cref="M:System.Console.OpenStandardError" />
      </Docs>
    </Member>
    <Member MemberName="IsInputRedirected">
      <MemberSignature Language="C#" Value="public static bool IsInputRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsInputRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsInputRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsInputRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsInputRedirected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInputRedirected : bool" Usage="System.Console.IsInputRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-416">入力が標準入力ストリームからリダイレクトされているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-416">Gets a value that indicates whether input has been redirected from the standard input stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-417">入力がリダイレクトされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-417">
              <see langword="true" /> if input is redirected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
        <altmember cref="M:System.Console.OpenStandardInput" />
      </Docs>
    </Member>
    <Member MemberName="IsOutputRedirected">
      <MemberSignature Language="C#" Value="public static bool IsOutputRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsOutputRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsOutputRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsOutputRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsOutputRedirected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOutputRedirected : bool" Usage="System.Console.IsOutputRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-418">出力が標準出力ストリームからリダイレクトされているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-418">Gets a value that indicates whether output has been redirected from the standard output stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-419">出力がリダイレクトされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-419">
              <see langword="true" /> if output is redirected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
        <altmember cref="M:System.Console.OpenStandardError" />
      </Docs>
    </Member>
    <Member MemberName="KeyAvailable">
      <MemberSignature Language="C#" Value="public static bool KeyAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool KeyAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Console.KeyAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property KeyAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool KeyAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyAvailable : bool" Usage="System.Console.KeyAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-420">キーが押されたかどうか、つまり、押されたキーが入力ストリームに存在するかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-420">Gets a value indicating whether a key press is available in the input stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-421">押されたキーが入力ストリームに存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-421">
              <see langword="true" /> if a key press is available; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-422">プロパティの値が直ちに返されますつまり、<xref:System.Console.KeyAvailable%2A>まで押されたキーが使用可能なプロパティが入力をブロックしません。</span><span class="sxs-lookup"><span data-stu-id="4b418-422">The property value is returned immediately; that is, the <xref:System.Console.KeyAvailable%2A> property does not block input until a key press is available.</span></span>  
  
 <span data-ttu-id="4b418-423">使用して、<xref:System.Console.KeyAvailable%2A>プロパティのみと組み合わせて、<xref:System.Console.ReadKey%2A>メソッド、しない、<xref:System.Console.Read%2A>または<xref:System.Console.ReadLine%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-423">Use the <xref:System.Console.KeyAvailable%2A> property in conjunction with only the <xref:System.Console.ReadKey%2A> method, not the <xref:System.Console.Read%2A> or <xref:System.Console.ReadLine%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-424">次の例では、使用する方法、<xref:System.Console.KeyAvailable%2A>キーが押されるまで実行されるループを作成するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-424">The following example demonstrates how to use the <xref:System.Console.KeyAvailable%2A> property to create a loop that runs until a key is pressed.</span></span>  
  
 [!code-cpp[console.keyavailable#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.keyavailable/CPP/ka.cpp#1)]
 [!code-csharp[console.keyavailable#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.keyavailable/CS/ka.cs#1)]
 [!code-vb[console.keyavailable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.keyavailable/VB/ka.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-425">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-425">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4b418-426">標準入力は、キーボードではなくファイルにリダイレクトされています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-426">Standard input is redirected to a file instead of the keyboard.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LargestWindowHeight">
      <MemberSignature Language="C#" Value="public static int LargestWindowHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LargestWindowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.LargestWindowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LargestWindowHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LargestWindowHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LargestWindowHeight : int" Usage="System.Console.LargestWindowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-427">現在のフォントおよび画面解像度に基づいて、コンソール ウィンドウの最大行数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-427">Gets the largest possible number of console window rows, based on the current font and screen resolution.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-428">コンソール ウィンドウの高さの最大値 (行数)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-428">The height of the largest possible console window measured in rows.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargestWindowWidth">
      <MemberSignature Language="C#" Value="public static int LargestWindowWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LargestWindowWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.LargestWindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LargestWindowWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LargestWindowWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LargestWindowWidth : int" Usage="System.Console.LargestWindowWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-429">現在のフォントおよび画面解像度に基づいて、コンソール ウィンドウの最大列数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-429">Gets the largest possible number of console window columns, based on the current font and screen resolution.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-430">コンソール ウィンドウの幅の最大値 (列数)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-430">The width of the largest possible console window measured in columns.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveBufferArea">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-431">画面バッファーの特定の領域を、指定した領域にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-431">Copies a specified source area of the screen buffer to a specified destination area.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveBufferArea">
      <MemberSignature Language="C#" Value="public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveBufferArea(int32 sourceLeft, int32 sourceTop, int32 sourceWidth, int32 sourceHeight, int32 targetLeft, int32 targetTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveBufferArea (sourceLeft As Integer, sourceTop As Integer, sourceWidth As Integer, sourceHeight As Integer, targetLeft As Integer, targetTop As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop);" />
      <MemberSignature Language="F#" Value="static member MoveBufferArea : int * int * int * int * int * int -&gt; unit" Usage="System.Console.MoveBufferArea (sourceLeft, sourceTop, sourceWidth, sourceHeight, targetLeft, targetTop)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLeft" Type="System.Int32" />
        <Parameter Name="sourceTop" Type="System.Int32" />
        <Parameter Name="sourceWidth" Type="System.Int32" />
        <Parameter Name="sourceHeight" Type="System.Int32" />
        <Parameter Name="targetLeft" Type="System.Int32" />
        <Parameter Name="targetTop" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceLeft">
          <span data-ttu-id="4b418-432">コピー元領域の左端の列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-432">The leftmost column of the source area.</span>
          </span>
        </param>
        <param name="sourceTop">
          <span data-ttu-id="4b418-433">コピー元領域の最上行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-433">The topmost row of the source area.</span>
          </span>
        </param>
        <param name="sourceWidth">
          <span data-ttu-id="4b418-434">コピー元領域内の列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-434">The number of columns in the source area.</span>
          </span>
        </param>
        <param name="sourceHeight">
          <span data-ttu-id="4b418-435">コピー元領域内の行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-435">The number of rows in the source area.</span>
          </span>
        </param>
        <param name="targetLeft">
          <span data-ttu-id="4b418-436">コピー先領域の左端の列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-436">The leftmost column of the destination area.</span>
          </span>
        </param>
        <param name="targetTop">
          <span data-ttu-id="4b418-437">コピー先領域の最上行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-437">The topmost row of the destination area.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-438">画面バッファーの特定の領域を、指定した領域にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-438">Copies a specified source area of the screen buffer to a specified destination area.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-439">コピー先とソースのパラメーターは、現在の画面バッファーの境界の外にある位置を指定する場合は、コピー先の領域に適合するコピー元領域の部分のみがコピーされます。</span><span class="sxs-lookup"><span data-stu-id="4b418-439">If the destination and source parameters specify a position located outside the boundaries of the current screen buffer, only the portion of the source area that fits within the destination area is copied.</span></span> <span data-ttu-id="4b418-440">つまり、コピー元領域は、現在の画面バッファーに合わせて切り取られます。</span><span class="sxs-lookup"><span data-stu-id="4b418-440">That is, the source area is clipped to fit the current screen buffer.</span></span>  
  
 <span data-ttu-id="4b418-441"><xref:System.Console.MoveBufferArea%2A>メソッドは、コピー先の領域にコピー元領域をコピーします。</span><span class="sxs-lookup"><span data-stu-id="4b418-441">The <xref:System.Console.MoveBufferArea%2A> method copies the source area to the destination area.</span></span> <span data-ttu-id="4b418-442">コピー先の領域がコピー元領域を交差しない場合は、コピー元領域が現在の前景色と背景色を使用して空白で埋められます。</span><span class="sxs-lookup"><span data-stu-id="4b418-442">If the destination area does not intersect the source area, the source area is filled with blanks using the current foreground and background colors.</span></span> <span data-ttu-id="4b418-443">それ以外の場合、コピー元領域の交差部分が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="4b418-443">Otherwise, the intersected portion of the source area is not filled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-444">1 つ以上のパラメーターが 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-444">One or more of the parameters is less than zero.</span>
          </span>
          <span data-ttu-id="4b418-445">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-445">-or-</span>
          </span>
          <span data-ttu-id="4b418-446">
            <paramref name="sourceLeft" /> または <paramref name="targetLeft" /> が <see cref="P:System.Console.BufferWidth" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-446">
              <paramref name="sourceLeft" /> or <paramref name="targetLeft" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span>
          </span>
          <span data-ttu-id="4b418-447">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-447">-or-</span>
          </span>
          <span data-ttu-id="4b418-448">
            <paramref name="sourceTop" /> または <paramref name="targetTop" /> が <see cref="P:System.Console.BufferHeight" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-448">
              <paramref name="sourceTop" /> or <paramref name="targetTop" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span>
          </span>
          <span data-ttu-id="4b418-449">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-449">-or-</span>
          </span>
          <span data-ttu-id="4b418-450">
            <paramref name="sourceTop" /> + <paramref name="sourceHeight" /> が <see cref="P:System.Console.BufferHeight" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-450">
              <paramref name="sourceTop" /> + <paramref name="sourceHeight" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span>
          </span>
          <span data-ttu-id="4b418-451">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-451">-or-</span>
          </span>
          <span data-ttu-id="4b418-452">
            <paramref name="sourceLeft" /> + <paramref name="sourceWidth" /> が <see cref="P:System.Console.BufferWidth" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-452">
              <paramref name="sourceLeft" /> + <paramref name="sourceWidth" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4b418-453">ユーザーにこの操作を実行するアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-453">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-454">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-454">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-455">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-455">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-456">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-456">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="MoveBufferArea">
      <MemberSignature Language="C#" Value="public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveBufferArea(int32 sourceLeft, int32 sourceTop, int32 sourceWidth, int32 sourceHeight, int32 targetLeft, int32 targetTop, char sourceChar, valuetype System.ConsoleColor sourceForeColor, valuetype System.ConsoleColor sourceBackColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveBufferArea (sourceLeft As Integer, sourceTop As Integer, sourceWidth As Integer, sourceHeight As Integer, targetLeft As Integer, targetTop As Integer, sourceChar As Char, sourceForeColor As ConsoleColor, sourceBackColor As ConsoleColor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor);" />
      <MemberSignature Language="F#" Value="static member MoveBufferArea : int * int * int * int * int * int * char * ConsoleColor * ConsoleColor -&gt; unit" Usage="System.Console.MoveBufferArea (sourceLeft, sourceTop, sourceWidth, sourceHeight, targetLeft, targetTop, sourceChar, sourceForeColor, sourceBackColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLeft" Type="System.Int32" />
        <Parameter Name="sourceTop" Type="System.Int32" />
        <Parameter Name="sourceWidth" Type="System.Int32" />
        <Parameter Name="sourceHeight" Type="System.Int32" />
        <Parameter Name="targetLeft" Type="System.Int32" />
        <Parameter Name="targetTop" Type="System.Int32" />
        <Parameter Name="sourceChar" Type="System.Char" />
        <Parameter Name="sourceForeColor" Type="System.ConsoleColor" />
        <Parameter Name="sourceBackColor" Type="System.ConsoleColor" />
      </Parameters>
      <Docs>
        <param name="sourceLeft">
          <span data-ttu-id="4b418-457">コピー元領域の左端の列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-457">The leftmost column of the source area.</span>
          </span>
        </param>
        <param name="sourceTop">
          <span data-ttu-id="4b418-458">コピー元領域の最上行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-458">The topmost row of the source area.</span>
          </span>
        </param>
        <param name="sourceWidth">
          <span data-ttu-id="4b418-459">コピー元領域内の列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-459">The number of columns in the source area.</span>
          </span>
        </param>
        <param name="sourceHeight">
          <span data-ttu-id="4b418-460">コピー元領域内の行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-460">The number of rows in the source area.</span>
          </span>
        </param>
        <param name="targetLeft">
          <span data-ttu-id="4b418-461">コピー先領域の左端の列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-461">The leftmost column of the destination area.</span>
          </span>
        </param>
        <param name="targetTop">
          <span data-ttu-id="4b418-462">コピー先領域の最上行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-462">The topmost row of the destination area.</span>
          </span>
        </param>
        <param name="sourceChar">
          <span data-ttu-id="4b418-463">コピー元領域に挿入する文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-463">The character used to fill the source area.</span>
          </span>
        </param>
        <param name="sourceForeColor">
          <span data-ttu-id="4b418-464">コピー元領域を上書きするときに使用する前景色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-464">The foreground color used to fill the source area.</span>
          </span>
        </param>
        <param name="sourceBackColor">
          <span data-ttu-id="4b418-465">コピー元領域を上書きするときに使用する背景色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-465">The background color used to fill the source area.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-466">画面バッファーの特定の領域を、指定した領域にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-466">Copies a specified source area of the screen buffer to a specified destination area.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-467">コピー先とソースのパラメーターは、現在の画面バッファーの境界を越える位置を指定する場合は、コピー先の領域に適合するコピー元領域の部分のみがコピーされます。</span><span class="sxs-lookup"><span data-stu-id="4b418-467">If the destination and source parameters specify a position located beyond the boundaries of the current screen buffer, only the portion of the source area that fits within the destination area is copied.</span></span> <span data-ttu-id="4b418-468">つまり、コピー元領域は、現在の画面バッファーに合わせて切り取られます。</span><span class="sxs-lookup"><span data-stu-id="4b418-468">That is, the source area is clipped to fit the current screen buffer.</span></span>  
  
 <span data-ttu-id="4b418-469"><xref:System.Console.MoveBufferArea%2A>メソッドは、コピー先の領域にコピー元領域をコピーします。</span><span class="sxs-lookup"><span data-stu-id="4b418-469">The <xref:System.Console.MoveBufferArea%2A> method copies the source area to the destination area.</span></span> <span data-ttu-id="4b418-470">コピー先の領域がコピー元領域を交差しない場合で指定された文字でコピー元領域が塗りつぶされます。 `sourceChar`、で指定された色を使用して`sourceForeColor`と`sourceBackColor`します。</span><span class="sxs-lookup"><span data-stu-id="4b418-470">If the destination area does not intersect the source area, the source area is filled with the character specified by `sourceChar`, using the colors specified by `sourceForeColor` and `sourceBackColor`.</span></span> <span data-ttu-id="4b418-471">それ以外の場合、コピー元領域の交差部分が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="4b418-471">Otherwise, the intersected portion of the source area is not filled.</span></span>  
  
 <span data-ttu-id="4b418-472"><xref:System.Console.MoveBufferArea%2A>メソッド演算を実行しない場合は`sourceWidth`または`sourceHeight`は 0 です。</span><span class="sxs-lookup"><span data-stu-id="4b418-472">The <xref:System.Console.MoveBufferArea%2A> method performs no operation if `sourceWidth` or `sourceHeight` is zero.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-473">1 つ以上のパラメーターが 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-473">One or more of the parameters is less than zero.</span>
          </span>
          <span data-ttu-id="4b418-474">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-474">-or-</span>
          </span>
          <span data-ttu-id="4b418-475">
            <paramref name="sourceLeft" /> または <paramref name="targetLeft" /> が <see cref="P:System.Console.BufferWidth" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-475">
              <paramref name="sourceLeft" /> or <paramref name="targetLeft" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span>
          </span>
          <span data-ttu-id="4b418-476">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-476">-or-</span>
          </span>
          <span data-ttu-id="4b418-477">
            <paramref name="sourceTop" /> または <paramref name="targetTop" /> が <see cref="P:System.Console.BufferHeight" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-477">
              <paramref name="sourceTop" /> or <paramref name="targetTop" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span>
          </span>
          <span data-ttu-id="4b418-478">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-478">-or-</span>
          </span>
          <span data-ttu-id="4b418-479">
            <paramref name="sourceTop" /> + <paramref name="sourceHeight" /> が <see cref="P:System.Console.BufferHeight" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-479">
              <paramref name="sourceTop" /> + <paramref name="sourceHeight" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span>
          </span>
          <span data-ttu-id="4b418-480">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-480">-or-</span>
          </span>
          <span data-ttu-id="4b418-481">
            <paramref name="sourceLeft" /> + <paramref name="sourceWidth" /> が <see cref="P:System.Console.BufferWidth" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-481">
              <paramref name="sourceLeft" /> + <paramref name="sourceWidth" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4b418-482">一方または両方の色パラメーターが <see cref="T:System.ConsoleColor" /> 列挙のメンバーではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-482">One or both of the color parameters is not a member of the <see cref="T:System.ConsoleColor" /> enumeration.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4b418-483">ユーザーにこの操作を実行するアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-483">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-484">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-484">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-485">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-485">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-486">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-486">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="NumberLock">
      <MemberSignature Language="C#" Value="public static bool NumberLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool NumberLock" />
      <MemberSignature Language="DocId" Value="P:System.Console.NumberLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NumberLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool NumberLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberLock : bool" Usage="System.Console.NumberLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-487">NumLock がオンかオフかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-487">Gets a value indicating whether the NUM LOCK keyboard toggle is turned on or turned off.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-488">NumLock がオンの場合は <see langword="true" />、NumLock がオフの場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-488">
              <see langword="true" /> if NUM LOCK is turned on; <see langword="false" /> if NUM LOCK is turned off.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardError">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-489">標準エラー ストリームを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-489">Acquires the standard error stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardError">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardError ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardError" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardError () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardError();" />
      <MemberSignature Language="F#" Value="static member OpenStandardError : unit -&gt; System.IO.Stream" Usage="System.Console.OpenStandardError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b418-490">標準エラー ストリームを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-490">Acquires the standard error stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b418-491">標準エラー ストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-491">The standard error stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-492">このメソッドは、標準エラー ストリームを再取得がによって変更された後に使用できます、<xref:System.Console.SetError%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-492">This method can be used to reacquire the standard error stream after it has been changed by the <xref:System.Console.SetError%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-493">次の例は、1 つまたは複数のテキスト ファイルの内容をコンソールに表示する単純なテキスト ファイル ビューアーです。</span><span class="sxs-lookup"><span data-stu-id="4b418-493">The following example is a simple text file viewer that displays the contents of one or more text files to the console.</span></span> <span data-ttu-id="4b418-494">コマンドラインの引数がないか、例ではコマンドライン引数として渡されるすべてのファイルが存在しない場合、<xref:System.Console.SetError%2A>エラー情報をファイルにリダイレクトするメソッドを呼び出す、<xref:System.Console.OpenStandardError%2A>標準エラーを再取得する処理中のメソッドストリーム、およびエラー情報をファイルに書き込まれたことを示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-494">If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <xref:System.Console.SetError%2A> method to redirect error information to a file, calls the <xref:System.Console.OpenStandardError%2A> method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.</span></span>  
  
 [!code-csharp[System.Console.OpenStandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.openstandarderror/cs/viewtextfile.cs#1)]
 [!code-vb[System.Console.OpenStandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.openstandarderror/vb/viewtextfile.vb#1)]  
  
 <span data-ttu-id="4b418-495">なお、<xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType>プロパティに設定されて`true`エラー ストリームを再取得する前にします。</span><span class="sxs-lookup"><span data-stu-id="4b418-495">Note that the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> property is set to `true` before reacquiring the error stream.</span></span> <span data-ttu-id="4b418-496">これにより、出力をバッファーに格納するのではなく、コンソールに直ちに送信するされます。</span><span class="sxs-lookup"><span data-stu-id="4b418-496">This ensures that output will be sent to the console immediately rather than buffered.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardError">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardError (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardError(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardError (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardError(int bufferSize);" />
      <MemberSignature Language="F#" Value="static member OpenStandardError : int -&gt; System.IO.Stream" Usage="System.Console.OpenStandardError bufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bufferSize">
          <span data-ttu-id="4b418-497">内部ストリーム バッファー サイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-497">The internal stream buffer size.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-498">指定したバッファー サイズに設定された標準エラー ストリームを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-498">Acquires the standard error stream, which is set to a specified buffer size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b418-499">標準エラー ストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-499">The standard error stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-500">このメソッドは、標準エラー ストリームを再取得がによって変更された後に使用できます、<xref:System.Console.SetError%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-500">This method can be used to reacquire the standard error stream after it has been changed by the <xref:System.Console.SetError%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-501">
            <paramref name="bufferSize" /> が 0 以下です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-501">
              <paramref name="bufferSize" /> is less than or equal to zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardInput">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-502">標準入力ストリームを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-502">Acquires the standard input stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardInput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardInput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardInput () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardInput();" />
      <MemberSignature Language="F#" Value="static member OpenStandardInput : unit -&gt; System.IO.Stream" Usage="System.Console.OpenStandardInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b418-503">標準入力ストリームを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-503">Acquires the standard input stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b418-504">標準入力ストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-504">The standard input stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-505">このメソッドは、標準入力ストリームを再取得がによって変更された後に使用できます、<xref:System.Console.SetIn%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-505">This method can be used to reacquire the standard input stream after it has been changed by the <xref:System.Console.SetIn%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-506">次の例では、使用、`OpenStandardInput`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-506">The following example illustrates the use of the `OpenStandardInput` property.</span></span>  
  
 [!code-cpp[System.Console.OpenStandartInput#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CPP/decode.cpp#1)]
 [!code-csharp[System.Console.OpenStandartInput#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CS/decode.cs#1)]
 [!code-vb[System.Console.OpenStandartInput#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.OpenStandartInput/VB/decode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardInput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardInput (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardInput(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardInput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardInput (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardInput(int bufferSize);" />
      <MemberSignature Language="F#" Value="static member OpenStandardInput : int -&gt; System.IO.Stream" Usage="System.Console.OpenStandardInput bufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bufferSize">
          <span data-ttu-id="4b418-507">内部ストリーム バッファー サイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-507">The internal stream buffer size.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-508">指定したバッファー サイズに設定された標準入力ストリームを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-508">Acquires the standard input stream, which is set to a specified buffer size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b418-509">標準入力ストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-509">The standard input stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-510">このメソッドは、標準出力ストリームを再取得がによって変更された後に使用できます、<xref:System.Console.SetIn%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-510">This method can be used to reacquire the standard output stream after it has been changed by the <xref:System.Console.SetIn%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-511">次の例では、使用、`OpenStandardInput`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-511">The following example illustrates the use of the `OpenStandardInput` property.</span></span>  
  
 [!code-cpp[System.Console.OpenStandartInput#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CPP/decode.cpp#1)]
 [!code-csharp[System.Console.OpenStandartInput#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CS/decode.cs#1)]
 [!code-vb[System.Console.OpenStandartInput#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.OpenStandartInput/VB/decode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-512">
            <paramref name="bufferSize" /> が 0 以下です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-512">
              <paramref name="bufferSize" /> is less than or equal to zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardOutput">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-513">標準出力ストリームを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-513">Acquires the standard output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardOutput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardOutput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardOutput () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardOutput();" />
      <MemberSignature Language="F#" Value="static member OpenStandardOutput : unit -&gt; System.IO.Stream" Usage="System.Console.OpenStandardOutput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b418-514">標準出力ストリームを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-514">Acquires the standard output stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b418-515">標準出力ストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-515">The standard output stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-516">このメソッドは、標準出力ストリームを再取得がによって変更された後に使用できます、<xref:System.Console.SetOut%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-516">This method can be used to reacquire the standard output stream after it has been changed by the <xref:System.Console.SetOut%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-517"><xref:System.Console.OpenStandardOutput%2A> メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-517">The following example illustrates the use of the <xref:System.Console.OpenStandardOutput%2A> method.</span></span> <span data-ttu-id="4b418-518">これにより、文字列内の 4 個の連続する空白文字がタブ文字に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="4b418-518">It replaces four consecutive space characters in a string with a tab character.</span></span> <span data-ttu-id="4b418-519">これを実行するには、2 つのコマンドライン引数を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-519">To run it, you must supply two command-line arguments.</span></span> <span data-ttu-id="4b418-520">1 つ目は、標準入力ストリームのリダイレクト先となる既存のテキスト ファイルの名前です。</span><span class="sxs-lookup"><span data-stu-id="4b418-520">The first is the name of an existing text file to redirect the standard input stream to.</span></span> <span data-ttu-id="4b418-521">2 つ目は、標準出力ストリームのリダイレクト先となるファイルの名前です。</span><span class="sxs-lookup"><span data-stu-id="4b418-521">The second is the name of a file to redirect the standard output stream to.</span></span> <span data-ttu-id="4b418-522">このファイルは存在する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="4b418-522">This file need not exist.</span></span> <span data-ttu-id="4b418-523">ファイルが存在する場合は、その内容が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="4b418-523">If it does, its contents will be overwritten.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsOutputRedirected" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardOutput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardOutput (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardOutput(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardOutput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardOutput (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardOutput(int bufferSize);" />
      <MemberSignature Language="F#" Value="static member OpenStandardOutput : int -&gt; System.IO.Stream" Usage="System.Console.OpenStandardOutput bufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bufferSize">
          <span data-ttu-id="4b418-524">内部ストリーム バッファー サイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-524">The internal stream buffer size.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-525">指定したバッファー サイズに設定された標準出力ストリームを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-525">Acquires the standard output stream, which is set to a specified buffer size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b418-526">標準出力ストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-526">The standard output stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-527">このメソッドは、標準出力ストリームを再取得がによって変更された後に使用できます、<xref:System.Console.SetOut%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-527">This method can be used to reacquire the standard output stream after it has been changed by the <xref:System.Console.SetOut%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-528"><xref:System.Console.OpenStandardOutput%2A> メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-528">The following example illustrates the use of the <xref:System.Console.OpenStandardOutput%2A> method.</span></span> <span data-ttu-id="4b418-529">これにより、文字列内の 4 個の連続する空白文字がタブ文字に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="4b418-529">It replaces four consecutive space characters in a string with a tab character.</span></span> <span data-ttu-id="4b418-530">これを実行するには、2 つのコマンドライン引数を指定してください。</span><span class="sxs-lookup"><span data-stu-id="4b418-530">To run it, you must supply two command line arguments.</span></span> <span data-ttu-id="4b418-531">1 つ目は、標準入力ストリームのリダイレクト先となる既存のテキスト ファイルの名前です。</span><span class="sxs-lookup"><span data-stu-id="4b418-531">The first is the name of an existing text file to redirect the standard input stream to.</span></span> <span data-ttu-id="4b418-532">2 つ目は、標準出力ストリームのリダイレクト先となるファイルの名前です。</span><span class="sxs-lookup"><span data-stu-id="4b418-532">The second is the name of a file to redirect the standard output stream to.</span></span> <span data-ttu-id="4b418-533">このファイルは存在する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="4b418-533">This file need not exist.</span></span> <span data-ttu-id="4b418-534">ファイルが存在する場合は、その内容が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="4b418-534">If it does, its contents will be overwritten.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-535">
            <paramref name="bufferSize" /> が 0 以下です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-535">
              <paramref name="bufferSize" /> is less than or equal to zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsOutputRedirected" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="Out">
      <MemberSignature Language="C#" Value="public static System.IO.TextWriter Out { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextWriter Out" />
      <MemberSignature Language="DocId" Value="P:System.Console.Out" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Out As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextWriter ^ Out { System::IO::TextWriter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Out : System.IO.TextWriter" Usage="System.Console.Out" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-536">標準出力ストリームを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-536">Gets the standard output stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-537">標準出力ストリームを表す <see cref="T:System.IO.TextWriter" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-537">A <see cref="T:System.IO.TextWriter" /> that represents the standard output stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-538">このプロパティは、既定では標準出力ストリームに設定します。</span><span class="sxs-lookup"><span data-stu-id="4b418-538">This property is set to the standard output stream by default.</span></span> <span data-ttu-id="4b418-539">別のストリームにこのプロパティを設定することができます、<xref:System.Console.SetOut%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-539">This property can be set to another stream with the <xref:System.Console.SetOut%2A> method.</span></span>  
  
 <span data-ttu-id="4b418-540">呼び出す`Console.Out.WriteLine`メソッドは、対応する呼び出しに相当<xref:System.Console.WriteLine%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-540">Note that calls to `Console.Out.WriteLine` methods are equivalent to calls to the corresponding <xref:System.Console.WriteLine%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-541">次の例では、<xref:System.Console.Out%2A>プロパティを標準出力デバイスにアプリケーションの現在のディレクトリ内のファイルの名前を含む配列を表示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-541">The following example uses the <xref:System.Console.Out%2A> property to display an array containing the names of files in the application's current directory to the standard output device.</span></span> <span data-ttu-id="4b418-542">Files.txt という名前のファイルを標準出力に設定し、配列要素をファイルを一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-542">It then sets the standard output to a file named Files.txt and lists the array elements to the file.</span></span> <span data-ttu-id="4b418-543">最後に、標準出力ストリームに出力を設定し、もう一度標準出力デバイスに配列の要素が表示されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-543">Finally, it sets the output to the standard output stream and again displays the array elements to the standard output device.</span></span>  
  
 [!code-csharp[System.Console.Out#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.out/cs/out1.cs#1)]
 [!code-vb[System.Console.Out#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.out/vb/out1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.In" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OutputEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding OutputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding OutputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Console.OutputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property OutputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ OutputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OutputEncoding : System.Text.Encoding with get, set" Usage="System.Console.OutputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-544">コンソールが出力内容の書き込み時に使用するエンコーディングを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-544">Gets or sets the encoding the console uses to write output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-545">コンソールが出力内容の書き込みに使用するエンコーディング。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-545">The encoding used to write console output.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-546">コンソールは、出力エンコードを使用に対応する文字のコンソール表示に、アプリケーションによって書き込まれた文字を変換します。</span><span class="sxs-lookup"><span data-stu-id="4b418-546">The console uses the output encoding to translate characters written by an application into corresponding console display characters.</span></span> <span data-ttu-id="4b418-547">コンソールを使用する既定のコード ページは、システム ロケールによって決まります。</span><span class="sxs-lookup"><span data-stu-id="4b418-547">The default code page that the console uses is determined by the system locale.</span></span>  
  
 <span data-ttu-id="4b418-548">以降では、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]プロパティの取得操作は、コンソールの現在の出力エンコーディングではなくキャッシュされた値を返す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-548">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], a property get operation may return a cached value instead of the console's current output encoding.</span></span> <span data-ttu-id="4b418-549">これは、場合に発生の値、<xref:System.Console.OutputEncoding%2A>以外への代入をいくつかの方法でプロパティが変更された、 <xref:System.Console.OutputEncoding%2A> 、Windows の呼び出しなどのプロパティ`SetConsoleOutputCP`関数。</span><span class="sxs-lookup"><span data-stu-id="4b418-549">This can occur if the value of the <xref:System.Console.OutputEncoding%2A> property is modified by some means other than an assignment to the <xref:System.Console.OutputEncoding%2A> property, such as calling the Windows `SetConsoleOutputCP` function.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b418-550">設定操作でのプロパティ値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-550">The property value in a set operation is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-551">この操作の実行中にエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-551">An error occurred during the execution of this operation.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4b418-552">アプリケーションに、この操作を実行するための権限がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-552">Your application does not have permission to perform this operation.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-553">最上位ウィンドウとセーフ サブウィンドウの中に読み書きする方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-553">for reading and writing to top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-554">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-554">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <span data-ttu-id="4b418-555">
            <para>Unicode のエンコードの<see cref="T:System.Console" />クラスは、utf-8 でエンコードをサポートしている、<see cref="T:System.Text.UTF8Encoding" />クラスと、以降では、 [!INCLUDE[net_v45](~/includes/net-v45-md.md)]、utf-16 でエンコードをサポートしています、<see cref="T:System.Text.UnicodeEncoding" />クラス。Utf-32 エンコーディング、<see cref="T:System.Text.UTF32Encoding" />クラスがサポートされていません。Utf-32 スローする出力エンコードを設定すると、<see cref="T:System.IO.IOException" />します。コンソールに正常に Unicode 文字を表示すると、次が必要があります。-コンソールは、Lucida Console や、Consolas などの TrueType フォントを使用して文字を表示する必要があります。 コンソールで使用されるフォントには、特定のグリフまたは表示するグリフを定義する必要があります。コンソールでは、フォントの基本フォントにそのグリフの定義が含まれていない場合は、リンクしたフォントからグリフを表示するリンクを利用できます。Unicode のサポートの詳細については、コンソールでのエンコードを参照してください」Unicode サポートの「コンソール」、<see cref="T:System.Console" />クラス。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-555">
              <para>Of the Unicode encodings, the <see cref="T:System.Console" /> class supports UTF-8 encoding with the <see cref="T:System.Text.UTF8Encoding" /> class and, starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it supports UTF-16 encoding with the <see cref="T:System.Text.UnicodeEncoding" /> class. UTF-32 encoding with the <see cref="T:System.Text.UTF32Encoding" /> class is not supported. Attempting to set the output encoding to UTF-32 throws an <see cref="T:System.IO.IOException" />.  Note that successfully displaying Unicode characters to the console requires the following:  -   The console must use a TrueType font, such as Lucida Console or Consolas, to display characters.  -   A font used by the console must define the particular glyph or glyphs to be displayed. The console can take advantage of font linking to display glyphs from linked fonts if the base font does not contain a definition for that glyph.  For more information about support for Unicode encoding by the console, see the "Unicode Support for the Console" section in the <see cref="T:System.Console" /> class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Read" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Read();" />
      <MemberSignature Language="F#" Value="static member Read : unit -&gt; int" Usage="System.Console.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b418-556">標準入力ストリームから次の文字を読み取ります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-556">Reads the next character from the standard input stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b418-557">入力ストリームの次の文字。または次の文字がない場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-557">The next character from the input stream, or negative one (-1) if there are currently no more characters to be read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-558"><xref:System.Console.Read%2A>メソッドの入力文字を入力するときに、戻り値をブロックは、キーを押すを終了しますが、<xref:System.ConsoleKey.Enter>キー。</span><span class="sxs-lookup"><span data-stu-id="4b418-558">The <xref:System.Console.Read%2A> method blocks its return while you type input characters; it terminates when you press the <xref:System.ConsoleKey.Enter> key.</span></span> <span data-ttu-id="4b418-559">入力プラットフォームに依存する行の終了シーケンス Enter キーを押して追加します (たとえば、Windows がキャリッジ リターンとラインフィードのシーケンスを追加する)。</span><span class="sxs-lookup"><span data-stu-id="4b418-559">Pressing Enter appends a platform-dependent line termination sequence to your input (for example, Windows appends a carriage return-linefeed sequence).</span></span> <span data-ttu-id="4b418-560">後続の呼び出し、<xref:System.Console.Read%2A>メソッドは、時に、入力の 1 つの文字を取得します。</span><span class="sxs-lookup"><span data-stu-id="4b418-560">Subsequent calls to the <xref:System.Console.Read%2A> method retrieve your input one character at a time.</span></span> <span data-ttu-id="4b418-561">最後の文字が取得された後<xref:System.Console.Read%2A>ブロック、戻り値をもう一度と、サイクルが繰り返されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-561">After the final character is retrieved, <xref:System.Console.Read%2A> blocks its return again and the cycle repeats.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4b418-562"><xref:System.Console.ReadLine%2A>メソッド、または<xref:System.Console.KeyAvailable%2A>プロパティと<xref:System.Console.ReadKey%2A>メソッドを使用することをお勧め、<xref:System.Console.Read%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-562">The <xref:System.Console.ReadLine%2A> method, or the <xref:System.Console.KeyAvailable%2A> property and <xref:System.Console.ReadKey%2A> method are preferable to using the <xref:System.Console.Read%2A> method.</span></span>  
  
 <span data-ttu-id="4b418-563">メソッドが返さないこと-1、次の操作のいずれかを実行しない限りに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4b418-563">Note that the method does not return -1 unless you perform one of the following actions:</span></span>  
  
-   <span data-ttu-id="4b418-564">同時にキーを押して、<xref:System.ConsoleModifiers.Control>修飾子キーと<xref:System.ConsoleKey.Z>コンソール キー (Ctrl + Z)、ファイルの終端状態を通知します。</span><span class="sxs-lookup"><span data-stu-id="4b418-564">Simultaneously press the <xref:System.ConsoleModifiers.Control> modifier key and <xref:System.ConsoleKey.Z> console key (Ctrl+Z), which signals the end-of-file condition.</span></span>  
  
-   <span data-ttu-id="4b418-565">Windows で F6 キーなど、ファイルの終わり条件を通知する、同じキーを押します。</span><span class="sxs-lookup"><span data-stu-id="4b418-565">Press an equivalent key that signals the end-of-file condition, such as the F6 function key in Windows.</span></span>  
  
-   <span data-ttu-id="4b418-566">実際のファイルの終端文字が含まれるテキスト ファイルなどのソースへの入力ストリームをリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="4b418-566">Redirect the input stream to a source, such as a text file, that has an actual end-of-file character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-567">次の例で、<xref:System.Console.Read%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-567">The following example demonstrates the <xref:System.Console.Read%2A> method.</span></span>  
  
 [!code-cpp[console.read#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.read/CPP/read.cpp#1)]
 [!code-csharp[console.read#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.read/CS/read.cs#1)]
 [!code-vb[console.read#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.read/VB/read.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-568">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-568">An I/O error occurred.</span>
          </span>
        </exception>
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadKey">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-569">ユーザーによって押された次の文字キーまたはファンクション キーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-569">Obtains the next character or function key pressed by the user.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadKey">
      <MemberSignature Language="C#" Value="public static ConsoleKeyInfo ReadKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ConsoleKeyInfo ReadKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadKey () As ConsoleKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ConsoleKeyInfo ReadKey();" />
      <MemberSignature Language="F#" Value="static member ReadKey : unit -&gt; ConsoleKeyInfo" Usage="System.Console.ReadKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b418-570">ユーザーによって押された次の文字キーまたはファンクション キーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-570">Obtains the next character or function key pressed by the user.</span>
          </span>
          <span data-ttu-id="4b418-571">押されたキーは、コンソール ウィンドウに表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-571">The pressed key is displayed in the console window.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b418-572">押されたコンソール キーに対応する <see cref="T:System.ConsoleKey" /> 定数と Unicode 文字 (存在する場合) を記述するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-572">An object that describes the <see cref="T:System.ConsoleKey" /> constant and Unicode character, if any, that correspond to the pressed console key.</span>
          </span>
          <span data-ttu-id="4b418-573">また、<see cref="T:System.ConsoleKeyInfo" /> オブジェクトは、1 つ以上の Shift、Alt、Ctrl の各修飾子キーがコンソール キーと同時に押されたかどうかを <see cref="T:System.ConsoleModifiers" /> 値のビットごとの組み合わせで記述します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-573">The <see cref="T:System.ConsoleKeyInfo" /> object also describes, in a bitwise combination of <see cref="T:System.ConsoleModifiers" /> values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-574"><xref:System.Console.ReadKey%2A>メソッド待機、つまり、発行元のスレッド上のブロック、<xref:System.Console.ReadKey%2A>メソッド、文字またはファンクション キーが押されるまでです。</span><span class="sxs-lookup"><span data-stu-id="4b418-574">The <xref:System.Console.ReadKey%2A> method waits, that is, blocks on the thread issuing the <xref:System.Console.ReadKey%2A> method, until a character or function key is pressed.</span></span> <span data-ttu-id="4b418-575">1 つまたは複数の Alt、ctrl キー、または Shift 修飾子キーの組み合わせ文字またはファンクション キーを押すこともできます。</span><span class="sxs-lookup"><span data-stu-id="4b418-575">A character or function key can be pressed in combination with one or more Alt, Ctrl, or Shift modifier keys.</span></span> <span data-ttu-id="4b418-576">ただし、修飾子キーを押すと、単独では発生しません、<xref:System.Console.ReadKey%2A>を返すメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-576">However, pressing a modifier key by itself will not cause the <xref:System.Console.ReadKey%2A> method to return.</span></span>  
  
 <span data-ttu-id="4b418-577">アプリケーションによっては、使用する場合があります、<xref:System.Console.ReadKey%2A>メソッドと組み合わせて、<xref:System.Console.KeyAvailable%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-577">Depending on your application, you might want to use the <xref:System.Console.ReadKey%2A> method in conjunction with the <xref:System.Console.KeyAvailable%2A> property.</span></span>  
  
 <span data-ttu-id="4b418-578"><xref:System.Console.ReadKey%2A>メソッドは、ファイルに標準の入力がリダイレクトされる場合でも、キーボードから読み取り、<xref:System.Console.SetIn%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-578">The <xref:System.Console.ReadKey%2A> method reads from the keyboard even if the standard input is redirected to a file with the <xref:System.Console.SetIn%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-579">最も一般的なのいずれかを使用して、<xref:System.Console.ReadKey>は、ユーザー キーを押すと、アプリが終了または情報の追加のウィンドウを表示するまで、プログラムの実行を停止する方法です。</span><span class="sxs-lookup"><span data-stu-id="4b418-579">One of the most common uses of the <xref:System.Console.ReadKey> method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information.</span></span> <span data-ttu-id="4b418-580">次の例では、<xref:System.Console.ReadKey>メソッドをユーザーにアプリを終了する前に、Enter キーを押すまで待機します。</span><span class="sxs-lookup"><span data-stu-id="4b418-580">The following example uses the  <xref:System.Console.ReadKey> method to wait for the user to press the Enter key before terminating the app.</span></span>  
  
 [!code-csharp[System.Console.ReadKey#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Console.ReadKey/cs/ReadKey1.cs#1)]
 [!code-vb[System.Console.ReadKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Console.ReadKey/vb/ReadKey1.vb#1)]  
  
 <span data-ttu-id="4b418-581">このオーバー ロードはのメモ、<xref:System.Console.ReadKey%2A>メソッドが既定では、表示可能なキーをコンソールに、ユーザーがキーを押したをエコーします。</span><span class="sxs-lookup"><span data-stu-id="4b418-581">Note that this overload of the <xref:System.Console.ReadKey%2A> method by default echoes any displayable keys that the user presses to the console.</span></span> <span data-ttu-id="4b418-582">非表示にしたりを呼び出す、<xref:System.Console.ReadKey%2A>メソッドを`intercept`の引数`true`します。</span><span class="sxs-lookup"><span data-stu-id="4b418-582">To suppress them, call the  <xref:System.Console.ReadKey%2A> method with an `intercept` argument of `true`.</span></span>  
  
 <span data-ttu-id="4b418-583">次の例では、<xref:System.Console.ReadKey>メソッドは、ユーザーが押されたキーに関する情報を表示する.</span><span class="sxs-lookup"><span data-stu-id="4b418-583">The following example uses the <xref:System.Console.ReadKey> method to display information about which key the user pressed..</span></span>  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4b418-584">
            <see cref="P:System.Console.In" /> プロパティは、コンソール以外のストリームからリダイレクトされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-584">The <see cref="P:System.Console.In" /> property is redirected from some stream other than the console.</span>
          </span>
        </exception>
        <altmember cref="T:System.ConsoleKey" />
        <altmember cref="P:System.Console.KeyAvailable" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="ReadKey">
      <MemberSignature Language="C#" Value="public static ConsoleKeyInfo ReadKey (bool intercept);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ConsoleKeyInfo ReadKey(bool intercept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadKey(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadKey (intercept As Boolean) As ConsoleKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ConsoleKeyInfo ReadKey(bool intercept);" />
      <MemberSignature Language="F#" Value="static member ReadKey : bool -&gt; ConsoleKeyInfo" Usage="System.Console.ReadKey intercept" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ConsoleKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intercept" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="intercept">
          <span data-ttu-id="4b418-585">押されたキーをコンソール ウィンドウに表示するかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-585">Determines whether to display the pressed key in the console window.</span>
          </span>
          <span data-ttu-id="4b418-586">押されたキーを表示しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-586">
              <see langword="true" /> to not display the pressed key; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-587">ユーザーによって押された次の文字キーまたはファンクション キーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-587">Obtains the next character or function key pressed by the user.</span>
          </span>
          <span data-ttu-id="4b418-588">押されたキーは、オプションでコンソール ウィンドウに表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-588">The pressed key is optionally displayed in the console window.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b418-589">押されたコンソール キーに対応する <see cref="T:System.ConsoleKey" /> 定数と Unicode 文字 (存在する場合) を記述するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-589">An object that describes the <see cref="T:System.ConsoleKey" /> constant and Unicode character, if any, that correspond to the pressed console key.</span>
          </span>
          <span data-ttu-id="4b418-590">また、<see cref="T:System.ConsoleKeyInfo" /> オブジェクトは、1 つ以上の Shift、Alt、Ctrl の各修飾子キーがコンソール キーと同時に押されたかどうかを <see cref="T:System.ConsoleModifiers" /> 値のビットごとの組み合わせで記述します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-590">The <see cref="T:System.ConsoleKeyInfo" /> object also describes, in a bitwise combination of <see cref="T:System.ConsoleModifiers" /> values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-591"><xref:System.Console.ReadKey%2A>メソッド待機、つまり、発行元のスレッド上のブロック、<xref:System.Console.ReadKey%2A>メソッド、文字またはファンクション キーが押されるまでです。</span><span class="sxs-lookup"><span data-stu-id="4b418-591">The <xref:System.Console.ReadKey%2A> method waits, that is, blocks on the thread issuing the <xref:System.Console.ReadKey%2A> method, until a character or function key is pressed.</span></span> <span data-ttu-id="4b418-592">1 つまたは複数の Alt、ctrl キー、または Shift 修飾子キーの組み合わせ文字またはファンクション キーを押すこともできます。</span><span class="sxs-lookup"><span data-stu-id="4b418-592">A character or function key can be pressed in combination with one or more Alt, Ctrl, or Shift modifier keys.</span></span> <span data-ttu-id="4b418-593">ただし、修飾子キーを押すと、単独では発生しません、<xref:System.Console.ReadKey%2A>を返すメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-593">However, pressing a modifier key by itself will not cause the <xref:System.Console.ReadKey%2A> method to return.</span></span>  
  
 <span data-ttu-id="4b418-594">場合、`intercept`パラメーターが`true`、押されたキーが傍受およびいません、コンソール ウィンドウに表示されます。 それ以外の場合、押されたキーが表示されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-594">If the `intercept` parameter is `true`, the pressed key is intercepted and not displayed in the console window; otherwise, the pressed key is displayed.</span></span>  
  
 <span data-ttu-id="4b418-595">アプリケーションによっては、使用する場合があります、<xref:System.Console.ReadKey%2A>メソッドと組み合わせて、<xref:System.Console.KeyAvailable%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-595">Depending on your application, you might want to use the <xref:System.Console.ReadKey%2A> method in conjunction with the <xref:System.Console.KeyAvailable%2A> property.</span></span>  
  
 <span data-ttu-id="4b418-596"><xref:System.Console.ReadKey%2A>メソッドは、ファイルに標準の入力がリダイレクトされる場合でも、キーボードから読み取り、<xref:System.Console.SetIn%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-596">The <xref:System.Console.ReadKey%2A> method reads from the keyboard even if the standard input is redirected to a file with the <xref:System.Console.SetIn%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-597">最も一般的なのいずれかを使用して、<xref:System.Console.ReadKey%2A>は、ユーザー キーを押すと、アプリが終了または情報の追加のウィンドウを表示するまで、プログラムの実行を停止する方法です。</span><span class="sxs-lookup"><span data-stu-id="4b418-597">One of the most common uses of the <xref:System.Console.ReadKey%2A> method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information.</span></span> <span data-ttu-id="4b418-598">次の例では、<xref:System.Console.ReadKey%28System.Boolean%29>メソッドをユーザーにアプリを終了する前に、Enter キーを押すまで待機します。</span><span class="sxs-lookup"><span data-stu-id="4b418-598">The following example uses the  <xref:System.Console.ReadKey%28System.Boolean%29> method to wait for the user to press the Enter key before terminating the app.</span></span> <span data-ttu-id="4b418-599">場合は、ユーザーは、その他の任意のキーを押すと、それがいない、コンソールにエコーに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4b418-599">Note that, if the user presses any other key, it is not echoed to the console.</span></span>  
  
 [!code-csharp[System.Console.ReadKey#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Console.ReadKey/cs/ReadKey2.cs#2)]
 [!code-vb[System.Console.ReadKey#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Console.ReadKey/vb/ReadKey2.vb#2)]  
  
 <span data-ttu-id="4b418-600">次の例では、<xref:System.Console.ReadKey%28System.Boolean%29>メソッドは、コンソールにそのキーをエコーしないで、ユーザーによって押されたキーに関する情報を表示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-600">The following example uses the <xref:System.Console.ReadKey%28System.Boolean%29> method to display information about the key pressed by a user without echoing that key to the console.</span></span>  
  
 [!code-cpp[console.readkey2#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey2/CPP/rkbool.cpp#1)]
 [!code-csharp[console.readkey2#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey2/CS/rkbool.cs#1)]
 [!code-vb[console.readkey2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey2/VB/rkbool.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4b418-601">
            <see cref="P:System.Console.In" /> プロパティは、コンソール以外のストリームからリダイレクトされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-601">The <see cref="P:System.Console.In" /> property is redirected from some stream other than the console.</span>
          </span>
        </exception>
        <altmember cref="T:System.ConsoleKey" />
        <altmember cref="P:System.Console.KeyAvailable" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public static string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="static member ReadLine : unit -&gt; string" Usage="System.Console.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b418-602">標準入力ストリームから次の 1 行分の文字を読み取ります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-602">Reads the next line of characters from the standard input stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b418-603">入力ストリームの次の行。または次の行がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-603">The next line of characters from the input stream, or <see langword="null" /> if no more lines are available.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-604"><xref:System.Console.ReadLine%2A>メソッドは、標準入力ストリームから行を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4b418-604">The <xref:System.Console.ReadLine%2A> method reads a line from the standard input stream.</span></span> <span data-ttu-id="4b418-605">(行の定義を次の一覧の後、段落を参照してください)。これによって、次のことが起こります。</span><span class="sxs-lookup"><span data-stu-id="4b418-605">(For the definition of a line, see the paragraph after the following list.) This means that:</span></span>  
  
-   <span data-ttu-id="4b418-606">標準入力デバイスが、キーボードの場合、<xref:System.Console.ReadLine%2A>メソッドは、ユーザーがまでブロック、 **Enter**キー。</span><span class="sxs-lookup"><span data-stu-id="4b418-606">If the standard input device is the keyboard, the <xref:System.Console.ReadLine%2A> method blocks until the user presses the **Enter** key.</span></span>  
  
     <span data-ttu-id="4b418-607">最も一般的なのいずれかを使用して、<xref:System.Console.ReadLine%2A>メソッドは、コンソールをクリアして、新しい情報を表示する前にプログラムの実行を一時停止するか、またはユーザーに、アプリケーションを終了する前に、Enter キーを押すを確認します。</span><span class="sxs-lookup"><span data-stu-id="4b418-607">One of the most common uses of the <xref:System.Console.ReadLine%2A> method is to pause program execution before clearing the console and displaying new information to it, or to prompt the user to press the Enter key before terminating the application.</span></span> <span data-ttu-id="4b418-608">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-608">The following example illustrates this.</span></span>  
  
     [!code-cpp[System.Console.ReadLine#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.ReadLine/cpp/ReadLineSimple.cpp#6)]
     [!code-csharp[System.Console.ReadLine#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLineSimple.cs#6)]
     [!code-vb[System.Console.ReadLine#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLineSimple.vb#6)]  
  
-   <span data-ttu-id="4b418-609">標準入力は、ファイルにリダイレクトされる場合、<xref:System.Console.ReadLine%2A>メソッドは、ファイルからテキスト行を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4b418-609">If standard input is redirected to a file, the <xref:System.Console.ReadLine%2A> method reads a line of text from a file.</span></span> <span data-ttu-id="4b418-610">たとえば、ReadLine1.txt をという名前のテキスト ファイルは、次のように。</span><span class="sxs-lookup"><span data-stu-id="4b418-610">For example, the following is a text file named ReadLine1.txt:</span></span>  
  
    ```  
  
    This is the first line.  
    This is the second line.  
    This is the third line.  
    This is the fourth line.  
  
    ```  
  
     <span data-ttu-id="4b418-611">次の例では、<xref:System.Console.ReadLine%2A>ファイルからリダイレクトは、入力を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="4b418-611">The following example uses the <xref:System.Console.ReadLine%2A> method to read input that is redirected from a file.</span></span> <span data-ttu-id="4b418-612">メソッドが戻るときに、読み取り操作が終了する`null`、読み取る行が残っていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-612">The read operation terminates when the  method returns `null`, which indicates that no lines remain to be read.</span></span>  
  
     [!code-csharp[System.Console.ReadLine#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLine3.cs#3)]
     [!code-vb[System.Console.ReadLine#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLine3.vb#3)]  
  
     <span data-ttu-id="4b418-613">実行可能ファイルの名前付き ReadLine1.exe に例をコンパイルすた後には、行うことができますが、構文を使用してコマンドラインから</span><span class="sxs-lookup"><span data-stu-id="4b418-613">After compiling the example to an executable named ReadLine1.exe, you can run it from the command line with the syntax</span></span>  
  
    ```  
    ReadLine1 < ReadLine1.txt  
    ```  
  
     <span data-ttu-id="4b418-614">ファイルの内容を読み取るし、それらをコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-614">to read the contents of the file and display them to the console.</span></span>  
  
 <span data-ttu-id="4b418-615">行が文字の後にキャリッジ リターン (16 進数の 0x000d)、ライン フィード (16 進数の 0x000a)、またはの値のシーケンスとして定義されている、<xref:System.Environment.NewLine%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-615">A line is defined as a sequence of characters followed by a carriage return (hexadecimal 0x000d), a line feed (hexadecimal 0x000a), or the value of the <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="4b418-616">返される文字列に終端文字が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="4b418-616">The returned string does not contain the terminating character(s).</span></span> <span data-ttu-id="4b418-617">既定では、メソッドは、256 文字の入力バッファーから入力を読み取る。</span><span class="sxs-lookup"><span data-stu-id="4b418-617">By default, the method reads input from a 256-character input buffer.</span></span> <span data-ttu-id="4b418-618">これに含まれているため、<xref:System.Environment.NewLine%2A?displayProperty=nameWithType>文字、メソッドは最大 254 文字を含む行を読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="4b418-618">Because this includes the <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> character(s), the method can read lines that contain up to 254 characters.</span></span> <span data-ttu-id="4b418-619">長い行を読み取り、呼び出し、<xref:System.Console.OpenStandardInput%28System.Int32%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-619">To read longer lines, call the <xref:System.Console.OpenStandardInput%28System.Int32%29> method.</span></span>  
  
 <span data-ttu-id="4b418-620"><xref:System.Console.ReadLine%2A>メソッドは同期的に実行されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-620">The <xref:System.Console.ReadLine%2A> method executes synchronously.</span></span> <span data-ttu-id="4b418-621">これは、行が読み取られるか、ctrl キーを押しながら Z キーの組み合わせが押されるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="4b418-621">That is, it blocks until a line is read or the Ctrl+Z keyboard combination is pressed.</span></span> <span data-ttu-id="4b418-622"><xref:System.Console.In%2A>プロパティが返す、<xref:System.IO.TextReader>オブジェクトを表す標準入力ストリームとが両方同期<xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType>メソッドと非同期<xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-622">The <xref:System.Console.In%2A> property returns a <xref:System.IO.TextReader> object that represents the standard input stream and that has both a synchronous <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> method and an asynchronous <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4b418-623">ただし、コンソールの標準入力ストリームとして使用すると、<xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType>非同期的にではなく同期的に実行し、返します、`Task<String>`読み取り操作が完了した後にのみです。</span><span class="sxs-lookup"><span data-stu-id="4b418-623">However, when used as the console's standard input stream, the <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType> executes synchronously rather than asynchronously and returns a `Task<String>` only after the read operation has completed.</span></span>  
  
 <span data-ttu-id="4b418-624">このメソッドがスローした場合、<xref:System.OutOfMemoryException>例外を基になるリーダーの位置<xref:System.IO.Stream>文字を読み取るには、メソッドができましたが、内部に既に読み取られた文字の数によってオブジェクトが高度な<xref:System.Console.ReadLine%2A>バッファーには破棄されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-624">If this method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.Console.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="4b418-625">既に読み取られた文字は回復不可能で再初期化によってのみアクセスできると、ストリーム内のリーダーの位置を変更できないため、<xref:System.IO.TextReader>します。</span><span class="sxs-lookup"><span data-stu-id="4b418-625">Since the position of the reader in the stream cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="4b418-626">ストリーム内の初期位置が不明またはストリームがシークを基になるをサポートしていない場合<xref:System.IO.Stream>も再初期化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-626">If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.</span></span> <span data-ttu-id="4b418-627">使用する必要があります、このような状況を回避して、堅牢なコードを生成するために、<xref:System.Console.KeyAvailable%2A>プロパティと<xref:System.Console.ReadKey%2A>メソッドとストア、読み取りが事前に割り当てられたバッファーの文字します。</span><span class="sxs-lookup"><span data-stu-id="4b418-627">To avoid such a situation and to produce robust code, you should use the <xref:System.Console.KeyAvailable%2A> property and <xref:System.Console.ReadKey%2A> method and store the read characters in a pre-allocated buffer.</span></span>  
  
 <span data-ttu-id="4b418-628">メソッドを返しますのかどうか、メソッドは、コンソールから入力を読み取るときに、Ctrl + Z の文字が押された、`null`します。</span><span class="sxs-lookup"><span data-stu-id="4b418-628">If the Ctrl+Z character is pressed when the method is reading input from the console, the method returns `null`.</span></span> <span data-ttu-id="4b418-629">これにより、さらにキーボードを防ぐためにユーザー入力ときに、<xref:System.Console.ReadLine%2A>ループ内でメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-629">This enables the user to prevent further keyboard input when the <xref:System.Console.ReadLine%2A> method is called in a loop.</span></span> <span data-ttu-id="4b418-630">次の例では、このシナリオを示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-630">The following example illustrates this scenario.</span></span>  
  
 [!code-cpp[System.Console.ReadLine#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.ReadLine/cpp/readline2.cpp#1)]
 [!code-csharp[System.Console.ReadLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLine2.cs#1)]
 [!code-vb[System.Console.ReadLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLine2.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="4b418-631">次の例では、2 つのコマンドライン引数が必要です。 既存のテキスト ファイルの名前と、出力を書き込むファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="4b418-631">The following example requires two command line arguments: the name of an existing text file, and the name of a file to write the output to.</span></span> <span data-ttu-id="4b418-632">既存のテキスト ファイルを開くし、キーボードからそのファイルへの標準入力をリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="4b418-632">It opens the existing text file and redirects the standard input from the keyboard to that file.</span></span> <span data-ttu-id="4b418-633">また、出力ファイルに、コンソールから、標準出力をリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="4b418-633">It also redirects the standard output from the console to the output file.</span></span> <span data-ttu-id="4b418-634">次を使用して、<xref:System.Console.ReadLine%2A?displayProperty=nameWithType>をファイルの各行を読み取るメソッドは、すべてのシーケンスの 4 つのスペース、タブ文字で置き換えますを使用して、<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>結果を出力ファイルに記述するメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-634">It then uses the <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> method to read each line in the file, replaces every sequence of four spaces with a tab character, and uses the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method to write the result to the output file.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-635">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-635">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="4b418-636">返却された文字列にバッファーを割り当てるには、メモリが不足しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-636">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-637">次の文字行の文字数が <see cref="F:System.Int32.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-637">The number of characters in the next line of characters is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="ResetColor">
      <MemberSignature Language="C#" Value="public static void ResetColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ResetColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ResetColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ResetColor();" />
      <MemberSignature Language="F#" Value="static member ResetColor : unit -&gt; unit" Usage="System.Console.ResetColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b418-638">コンソールの前景色および背景色を既定値に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-638">Sets the foreground and background console colors to their defaults.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-639">前景色と背景色は、現在のプロセスを開始したときに存在していた色に復元されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-639">The foreground and background colors are restored to the colors that existed when the current process began.</span></span> <span data-ttu-id="4b418-640">詳細については、次を参照してください。、<xref:System.Console.ForegroundColor%2A>と<xref:System.Console.BackgroundColor%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-640">For more information, see the <xref:System.Console.ForegroundColor%2A> and <xref:System.Console.BackgroundColor%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-641">次の例の値を保存する、<xref:System.ConsoleColor>列挙型を配列の現在の値を格納し、<xref:System.Console.BackgroundColor%2A>と<xref:System.Console.ForegroundColor%2A>変数するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-641">The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and <xref:System.Console.ForegroundColor%2A> properties to variables.</span></span> <span data-ttu-id="4b418-642">前景色の各色に変わりますが、<xref:System.ConsoleColor>列挙体の色に現在の背景に一致しての各色を背景色を変更点を除いて、<xref:System.ConsoleColor>と一致する色を除く列挙型、現在の前景色。</span><span class="sxs-lookup"><span data-stu-id="4b418-642">It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground.</span></span> <span data-ttu-id="4b418-643">(前景色、背景色と同じである場合、テキストは表示されません。)最後に、呼び出し、<xref:System.Console.ResetColor%2A>を元のコンソールの色を復元します。</span><span class="sxs-lookup"><span data-stu-id="4b418-643">(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.</span></span>  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4b418-644">ユーザーにこの操作を実行するアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-644">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-645">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-645">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-646">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-646">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-647">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-647">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetBufferSize">
      <MemberSignature Language="C#" Value="public static void SetBufferSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBufferSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetBufferSize(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetBufferSize (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetBufferSize(int width, int height);" />
      <MemberSignature Language="F#" Value="static member SetBufferSize : int * int -&gt; unit" Usage="System.Console.SetBufferSize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">
          <span data-ttu-id="4b418-648">列数で指定されたバッファー領域の幅。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-648">The width of the buffer area measured in columns.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="4b418-649">行数で指定されたバッファー領域の高さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-649">The height of the buffer area measured in rows.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-650">画面バッファー領域の高さと幅を指定された値に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-650">Sets the height and width of the screen buffer area to the specified values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4b418-651">次の例で、 <xref:System.Console.WindowLeft%2A>、 <xref:System.Console.WindowTop%2A>、 <xref:System.Console.WindowWidth%2A>、 <xref:System.Console.WindowHeight%2A>、 <xref:System.Console.BufferWidth%2A>、 <xref:System.Console.BufferHeight%2A>、および<xref:System.Console.CursorVisible%2A>; のプロパティと<xref:System.Console.SetWindowPosition%2A>、<xref:System.Console.SetBufferSize%2A>と<xref:System.Console.ReadKey%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-651">The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods.</span></span> <span data-ttu-id="4b418-652">例では、画面バッファーの幅に基づく画面バッファーをグリッド パターンを描画します。</span><span class="sxs-lookup"><span data-stu-id="4b418-652">The example draws a grid pattern in the screen buffer based on the screen buffer width.</span></span> <span data-ttu-id="4b418-653">例では、応答には、上方向キーのうち、下矢印、左方向キーまたは右矢印のコンソール キーが押されたコンソール ウィンドウが移動します。</span><span class="sxs-lookup"><span data-stu-id="4b418-653">Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</span></span> <span data-ttu-id="4b418-654">グリッド パターンでは、画面バッファーに対する相対コンソール ウィンドウの移動を確認できます。</span><span class="sxs-lookup"><span data-stu-id="4b418-654">The grid pattern helps you see the movement of the console window relative to the screen buffer.</span></span>  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-655">
            <paramref name="height" /> または <paramref name="width" /> が 0 以下です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-655">
              <paramref name="height" /> or <paramref name="width" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="4b418-656">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-656">-or-</span>
          </span>
          <span data-ttu-id="4b418-657">
            <paramref name="height" /> または <paramref name="width" /> が <see cref="F:System.Int16.MaxValue" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-657">
              <paramref name="height" /> or <paramref name="width" /> is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
          <span data-ttu-id="4b418-658">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-658">-or-</span>
          </span>
          <span data-ttu-id="4b418-659">
            <paramref name="width" /> は <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" /> より小さい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-659">
              <paramref name="width" /> is less than <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />.</span>
          </span>
          <span data-ttu-id="4b418-660">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-660">-or-</span>
          </span>
          <span data-ttu-id="4b418-661">
            <paramref name="height" /> は <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" /> より小さい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-661">
              <paramref name="height" /> is less than <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4b418-662">ユーザーにこの操作を実行するアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-662">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-663">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-663">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-664">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-664">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-665">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-665">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPosition">
      <MemberSignature Language="C#" Value="public static void SetCursorPosition (int left, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCursorPosition(int32 left, int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetCursorPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCursorPosition (left As Integer, top As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCursorPosition(int left, int top);" />
      <MemberSignature Language="F#" Value="static member SetCursorPosition : int * int -&gt; unit" Usage="System.Console.SetCursorPosition (left, top)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="4b418-666">カーソルを置く列の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-666">The column position of the cursor.</span>
          </span>
          <span data-ttu-id="4b418-667">列には、左から右に向かって 0 から始まる番号が付けられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-667">Columns are numbered from left to right starting at 0.</span>
          </span>
        </param>
        <param name="top">
          <span data-ttu-id="4b418-668">カーソルを置く行の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-668">The row position of the cursor.</span>
          </span>
          <span data-ttu-id="4b418-669">行には、上から下に向かって 0 から始まる番号が付けられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-669">Rows are numbered from top to bottom starting at 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-670">カーソルの位置を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-670">Sets the position of the cursor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-671">使用して、<xref:System.Console.SetCursorPosition%2A>コンソール ウィンドウに次の書き込み操作の開始位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="4b418-671">Use the <xref:System.Console.SetCursorPosition%2A> method to specify where the next write operation in the console window is to begin.</span></span> <span data-ttu-id="4b418-672">指定したカーソル位置が、コンソール ウィンドウに表示されている領域の外側にある場合は、カーソルを表示するウィンドウの原点を自動的に変更します。</span><span class="sxs-lookup"><span data-stu-id="4b418-672">If the specified cursor position is outside the area that is currently visible in the console window, the window origin changes automatically to make the cursor visible.</span></span>  
  
 <span data-ttu-id="4b418-673">文字がコンソール ウィンドウに書き込まれるたびに次の文字位置にカーソルが自動的に移動します。</span><span class="sxs-lookup"><span data-stu-id="4b418-673">The cursor automatically moves to the next character position each time a character is written to the console window.</span></span> <span data-ttu-id="4b418-674">カーソルが、コンソール ウィンドウの下部にある右の文字位置にある場合は、次の書き込み操作の原因スクロール カーソルが表示されるようにする、コンソール ウィンドウ。</span><span class="sxs-lookup"><span data-stu-id="4b418-674">If the cursor is at the bottom right character position of the console window, the next write operation causes the console window to scroll so the cursor remains visible.</span></span> <span data-ttu-id="4b418-675">スクロールを使用して、コンソール ウィンドウを使用せずに下の右の文字位置に文字を書き込む場合、<xref:System.Console.MoveBufferArea%2A>文字をその位置に移動するメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-675">If you want to write a character to the bottom right character position without causing the console window to scroll, use the <xref:System.Console.MoveBufferArea%2A> method to move a character to that position.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-676">この例では、<xref:System.Console.CursorLeft%2A>と<xref:System.Console.CursorTop%2A>プロパティ、および<xref:System.Console.SetCursorPosition%2A>と<xref:System.Console.Clear%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-676">This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods.</span></span> <span data-ttu-id="4b418-677">例では、位置の組み合わせを使用して 5 の文字の四角形で 5 文字を描画するために、次の書き込みが行われるかを決定する、カーソルは、「+」、"&#124;"、および"-"文字列。</span><span class="sxs-lookup"><span data-stu-id="4b418-677">The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&#124;", and "-" strings.</span></span> <span data-ttu-id="4b418-678">その他の文字列の組み合わせを使用して、少ない手順で四角形を描画することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4b418-678">Note that the rectangle could be drawn with fewer steps using a combination of other strings.</span></span>  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-679">
            <paramref name="left" /> または <paramref name="top" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-679">
              <paramref name="left" /> or <paramref name="top" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4b418-680">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-680">-or-</span>
          </span>
          <span data-ttu-id="4b418-681">
            <paramref name="left" /> が <see cref="P:System.Console.BufferWidth" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-681">
              <paramref name="left" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span>
          </span>
          <span data-ttu-id="4b418-682">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-682">-or-</span>
          </span>
          <span data-ttu-id="4b418-683">
            <paramref name="top" /> が <see cref="P:System.Console.BufferHeight" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-683">
              <paramref name="top" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4b418-684">ユーザーにこの操作を実行するアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-684">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-685">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-685">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-686">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-686">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-687">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-687">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetError">
      <MemberSignature Language="C#" Value="public static void SetError (System.IO.TextWriter newError);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetError(class System.IO.TextWriter newError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetError(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetError (newError As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetError(System::IO::TextWriter ^ newError);" />
      <MemberSignature Language="F#" Value="static member SetError : System.IO.TextWriter -&gt; unit" Usage="System.Console.SetError newError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newError" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="newError">
          <span data-ttu-id="4b418-688">新しい標準エラー出力であるストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-688">A stream that is the new standard error output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-689">
            <see cref="P:System.Console.Error" /> プロパティを、指定した <see cref="T:System.IO.TextWriter" /> オブジェクトに設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-689">Sets the <see cref="P:System.Console.Error" /> property to the specified <see cref="T:System.IO.TextWriter" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-690">既定で、<xref:System.Console.Error%2A>プロパティが標準エラー出力ストリームに設定します。</span><span class="sxs-lookup"><span data-stu-id="4b418-690">By default, the <xref:System.Console.Error%2A> property is set to the standard error output stream.</span></span>  
  
 <span data-ttu-id="4b418-691">A<xref:System.IO.StreamWriter>をカプセル化する、<xref:System.IO.FileStream>ファイルにエラー メッセージを送信するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="4b418-691">A <xref:System.IO.StreamWriter> that encapsulates a <xref:System.IO.FileStream> can be used to send error messages to a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-692">次の例では、標準エラー ストリームをファイルにリダイレクトする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-692">The following example shows how to redirect the standard error stream to a file.</span></span>  
  
 [!code-cpp[System.Console.SetError#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.SetError/cpp/seterror1.cpp#1)]
 [!code-csharp[System.Console.SetError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.SetError/cs/SetError1.cs#1)]
 [!code-vb[System.Console.SetError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.SetError/vb/SetError1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b418-693">
            <paramref name="newError" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-693">
              <paramref name="newError" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4b418-694">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-694">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="4b418-695">アンマネージ コードを呼び出す。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-695">for calling unmanaged code.</span>
          </span>
          <span data-ttu-id="4b418-696">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-696">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="P:System.Console.Error" />
      </Docs>
    </Member>
    <Member MemberName="SetIn">
      <MemberSignature Language="C#" Value="public static void SetIn (System.IO.TextReader newIn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIn(class System.IO.TextReader newIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetIn(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIn (newIn As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIn(System::IO::TextReader ^ newIn);" />
      <MemberSignature Language="F#" Value="static member SetIn : System.IO.TextReader -&gt; unit" Usage="System.Console.SetIn newIn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newIn" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="newIn">
          <span data-ttu-id="4b418-697">新しい標準入力であるストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-697">A stream that is the new standard input.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-698">
            <see cref="P:System.Console.In" /> プロパティを、指定した <see cref="T:System.IO.TextReader" /> オブジェクトに設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-698">Sets the <see cref="P:System.Console.In" /> property to the specified <see cref="T:System.IO.TextReader" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-699">既定で、<xref:System.Console.In%2A>プロパティが標準入力ストリームに設定します。</span><span class="sxs-lookup"><span data-stu-id="4b418-699">By default, the <xref:System.Console.In%2A> property is set to the standard input stream.</span></span>  
  
 <span data-ttu-id="4b418-700">A<xref:System.IO.StreamReader>をカプセル化する、<xref:System.IO.FileStream>ファイルからの入力を受信するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="4b418-700">A <xref:System.IO.StreamReader> that encapsulates a <xref:System.IO.FileStream> can be used to receive input from a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-701"><xref:System.Console.SetIn%2A> メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-701">The following example illustrates the use of the <xref:System.Console.SetIn%2A> method.</span></span> <span data-ttu-id="4b418-702">これにより、文字列内の 4 個の連続する空白文字がタブ文字に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="4b418-702">It replaces four consecutive space characters in a string with a tab character.</span></span> <span data-ttu-id="4b418-703">これを実行するには、2 つのコマンドライン引数を指定してください。</span><span class="sxs-lookup"><span data-stu-id="4b418-703">To run it, you must supply two command line arguments.</span></span> <span data-ttu-id="4b418-704">1 つ目は、標準入力ストリームのリダイレクト先となる既存のテキスト ファイルの名前です。</span><span class="sxs-lookup"><span data-stu-id="4b418-704">The first is the name of an existing text file to redirect the standard input stream to.</span></span> <span data-ttu-id="4b418-705">2 つ目は、標準出力ストリームのリダイレクト先となるファイルの名前です。</span><span class="sxs-lookup"><span data-stu-id="4b418-705">The second is the name of a file to redirect the standard output stream to.</span></span> <span data-ttu-id="4b418-706">このファイルは存在する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="4b418-706">This file need not exist.</span></span> <span data-ttu-id="4b418-707">ファイルが存在する場合は、その内容が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="4b418-707">If it does, its contents will be overwritten.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b418-708">
            <paramref name="newIn" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-708">
              <paramref name="newIn" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4b418-709">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-709">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="4b418-710">アンマネージ コードを呼び出す。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-710">for calling unmanaged code.</span>
          </span>
          <span data-ttu-id="4b418-711">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-711">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Console.In" />
      </Docs>
    </Member>
    <Member MemberName="SetOut">
      <MemberSignature Language="C#" Value="public static void SetOut (System.IO.TextWriter newOut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetOut(class System.IO.TextWriter newOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetOut(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetOut (newOut As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetOut(System::IO::TextWriter ^ newOut);" />
      <MemberSignature Language="F#" Value="static member SetOut : System.IO.TextWriter -&gt; unit" Usage="System.Console.SetOut newOut" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newOut" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="newOut">
          <span data-ttu-id="4b418-712">新しい標準出力であるストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-712">A stream that is the new standard output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-713">
            <see cref="P:System.Console.Out" /> プロパティを、指定した <see cref="T:System.IO.TextWriter" /> オブジェクトに設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-713">Sets the <see cref="P:System.Console.Out" /> property to the specified <see cref="T:System.IO.TextWriter" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-714">既定で、<xref:System.Console.Out%2A>プロパティが標準出力ストリームに設定します。</span><span class="sxs-lookup"><span data-stu-id="4b418-714">By default, the <xref:System.Console.Out%2A> property is set to the standard output stream.</span></span>  
  
 <span data-ttu-id="4b418-715">A<xref:System.IO.StreamWriter>をカプセル化する、<xref:System.IO.FileStream>出力ファイルを送信するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="4b418-715">A <xref:System.IO.StreamWriter> that encapsulates a <xref:System.IO.FileStream> can be used to send output to a file.</span></span> <span data-ttu-id="4b418-716">例:</span><span class="sxs-lookup"><span data-stu-id="4b418-716">For example:</span></span>  
  
 [!code-cpp[System.Console.SetOut#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.setout/cpp/source.cpp#1)]
 [!code-csharp[System.Console.SetOut#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.setout/cs/source.cs#1)]
 [!code-vb[System.Console.SetOut#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.setout/vb/source.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="4b418-717"><xref:System.Console.SetOut%2A> メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-717">The following example illustrates the use of the <xref:System.Console.SetOut%2A> method.</span></span> <span data-ttu-id="4b418-718">これにより、文字列内の 4 個の連続する空白文字がタブ文字に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="4b418-718">It replaces four consecutive space characters in a string with a tab character.</span></span> <span data-ttu-id="4b418-719">これを実行するには、2 つのコマンドライン引数を指定してください。</span><span class="sxs-lookup"><span data-stu-id="4b418-719">To run it, you must supply two command line arguments.</span></span> <span data-ttu-id="4b418-720">1 つ目は、標準入力ストリームのリダイレクト先となる既存のテキスト ファイルの名前です。</span><span class="sxs-lookup"><span data-stu-id="4b418-720">The first is the name of an existing text file to redirect the standard input stream to.</span></span> <span data-ttu-id="4b418-721">2 つ目は、標準出力ストリームのリダイレクト先となるファイルの名前です。</span><span class="sxs-lookup"><span data-stu-id="4b418-721">The second is the name of a file to redirect the standard output stream to.</span></span> <span data-ttu-id="4b418-722">このファイルは存在する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="4b418-722">This file need not exist.</span></span> <span data-ttu-id="4b418-723">ファイルが存在する場合は、その内容が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="4b418-723">If it does, its contents will be overwritten.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b418-724">
            <paramref name="newOut" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-724">
              <paramref name="newOut" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4b418-725">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-725">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="4b418-726">アンマネージ コードを呼び出す。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-726">for calling unmanaged code.</span>
          </span>
          <span data-ttu-id="4b418-727">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-727">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Console.Out" />
      </Docs>
    </Member>
    <Member MemberName="SetWindowPosition">
      <MemberSignature Language="C#" Value="public static void SetWindowPosition (int left, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWindowPosition(int32 left, int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetWindowPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetWindowPosition (left As Integer, top As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetWindowPosition(int left, int top);" />
      <MemberSignature Language="F#" Value="static member SetWindowPosition : int * int -&gt; unit" Usage="System.Console.SetWindowPosition (left, top)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="4b418-728">コンソール ウィンドウの左上隅の列位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-728">The column position of the upper left  corner of the console window.</span>
          </span>
        </param>
        <param name="top">
          <span data-ttu-id="4b418-729">コンソール ウィンドウの左上隅の行位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-729">The row position of the upper left corner of the console window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-730">画面バッファーに対するコンソール ウィンドウの相対位置を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-730">Sets the position of the console window relative to the screen buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-731">オペレーティング システムのウィンドウには、コンソール ウィンドウが表示されます。 し、コンソール ウィンドウが画面バッファーの一部を表示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-731">The operating system window displays the console window, and the console window displays a portion of the screen buffer.</span></span> <span data-ttu-id="4b418-732"><xref:System.Console.SetWindowPosition%2A>メソッドは、画面バッファーに対する相対コンソール ウィンドウの位置に影響が、デスクトップの基準としたオペレーティング システムのウィンドウの位置には影響しません。</span><span class="sxs-lookup"><span data-stu-id="4b418-732">The <xref:System.Console.SetWindowPosition%2A> method affects the position of the console window relative to the screen buffer, but does not affect the position of the operating system window relative to the desktop.</span></span>  
  
 <span data-ttu-id="4b418-733">コンソールとオペレーティング システムの windows 一般的には互いに影響しません。</span><span class="sxs-lookup"><span data-stu-id="4b418-733">The console and operating system windows generally do not affect each other.</span></span> <span data-ttu-id="4b418-734">ただし場合は、コンソール ウィンドウの現在の境界では、画面バッファーを表示できない場合、オペレーティング システム自動的にスクロール バーをオペレーティング システムのウィンドウにします。</span><span class="sxs-lookup"><span data-stu-id="4b418-734">However, if the screen buffer cannot be displayed in the current boundaries of the console window, the operating system automatically appends scroll bars to the operating system window.</span></span> <span data-ttu-id="4b418-735">その場合は、オペレーティング システムのウィンドウのスクロール バー、コンソール ウィンドウの位置に影響を移動し、コンソール ウィンドウに移動、<xref:System.Console.SetWindowPosition%2A>メソッド オペレーティング システムのウィンドウのスクロール バーの位置に影響します。</span><span class="sxs-lookup"><span data-stu-id="4b418-735">In that case, moving the operating system window scroll bars affects the position of the console window, and moving the console window with the <xref:System.Console.SetWindowPosition%2A> method affects the position of the operating system window scroll bars.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-736">次の例で、 <xref:System.Console.WindowLeft%2A>、 <xref:System.Console.WindowTop%2A>、 <xref:System.Console.WindowWidth%2A>、 <xref:System.Console.WindowHeight%2A>、 <xref:System.Console.BufferWidth%2A>、 <xref:System.Console.BufferHeight%2A>、および<xref:System.Console.CursorVisible%2A>; のプロパティと<xref:System.Console.SetWindowPosition%2A>、<xref:System.Console.SetBufferSize%2A>と<xref:System.Console.ReadKey%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-736">The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods.</span></span> <span data-ttu-id="4b418-737">例では、画面バッファーの幅に基づく画面バッファーをグリッド パターンを描画します。</span><span class="sxs-lookup"><span data-stu-id="4b418-737">The example draws a grid pattern in the screen buffer based on the screen buffer width.</span></span> <span data-ttu-id="4b418-738">例では、応答には、上方向キーのうち、下矢印、左方向キーまたは右矢印のコンソール キーが押されたコンソール ウィンドウが移動します。</span><span class="sxs-lookup"><span data-stu-id="4b418-738">Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</span></span> <span data-ttu-id="4b418-739">グリッド パターンでは、画面バッファーに対する相対コンソール ウィンドウの移動を確認できます。</span><span class="sxs-lookup"><span data-stu-id="4b418-739">The grid pattern helps you see the movement of the console window relative to the screen buffer.</span></span>  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-740">
            <paramref name="left" /> または <paramref name="top" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-740">
              <paramref name="left" /> or <paramref name="top" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4b418-741">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-741">-or-</span>
          </span>
          <span data-ttu-id="4b418-742">
            <paramref name="left" /> + <see cref="P:System.Console.WindowWidth" /> は <see cref="P:System.Console.BufferWidth" /> より大きくなっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-742">
              <paramref name="left" /> + <see cref="P:System.Console.WindowWidth" /> is greater than <see cref="P:System.Console.BufferWidth" />.</span>
          </span>
          <span data-ttu-id="4b418-743">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-743">-or-</span>
          </span>
          <span data-ttu-id="4b418-744">
            <paramref name="top" /> + <see cref="P:System.Console.WindowHeight" /> は <see cref="P:System.Console.BufferHeight" /> より大きくなっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-744">
              <paramref name="top" /> + <see cref="P:System.Console.WindowHeight" /> is greater than <see cref="P:System.Console.BufferHeight" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4b418-745">ユーザーにこの操作を実行するアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-745">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-746">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-746">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-747">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-747">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-748">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-748">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetWindowSize">
      <MemberSignature Language="C#" Value="public static void SetWindowSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWindowSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetWindowSize(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetWindowSize (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetWindowSize(int width, int height);" />
      <MemberSignature Language="F#" Value="static member SetWindowSize : int * int -&gt; unit" Usage="System.Console.SetWindowSize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">
          <span data-ttu-id="4b418-749">列数で指定されたコンソール ウィンドウの幅。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-749">The width of the console window measured in columns.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="4b418-750">行数で指定されたコンソール ウィンドウの高さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-750">The height of the console window measured in rows.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-751">コンソール ウィンドウの高さと幅を指定された値に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-751">Sets the height and width of the console window to the specified values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4b418-752">この例では、<xref:System.Console.SetWindowSize%2A>メソッド、および<xref:System.Console.WindowWidth%2A>と<xref:System.Console.WindowHeight%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-752">This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the <xref:System.Console.WindowWidth%2A> and <xref:System.Console.WindowHeight%2A> properties.</span></span> <span data-ttu-id="4b418-753">コンソール ウィンドウのサイズを変更する効果を確認する例を実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-753">You must run the example to see the full effect of changing the console window size.</span></span>  
  
 <span data-ttu-id="4b418-754">例は 85 列を 43 行は、コンソール ウィンドウのサイズを報告し、キーが押されるまで待機します。</span><span class="sxs-lookup"><span data-stu-id="4b418-754">The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key to be pressed.</span></span> <span data-ttu-id="4b418-755">任意のキーが押されたときに、コンソール ウィンドウのサイズが半分に、新しいディメンションが報告され、例では、別のキーの押下を待ちます。</span><span class="sxs-lookup"><span data-stu-id="4b418-755">When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</span></span> <span data-ttu-id="4b418-756">最後に、任意のキーが押されたときに、コンソール ウィンドウが元の寸法に復元し、例では、終了します。</span><span class="sxs-lookup"><span data-stu-id="4b418-756">Finally, when any key is pressed, the console window is restored to its original dimensions and the example terminates.</span></span>  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-757">
            <paramref name="width" /> または <paramref name="height" /> が 0 以下です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-757">
              <paramref name="width" /> or <paramref name="height" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="4b418-758">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-758">-or-</span>
          </span>
          <span data-ttu-id="4b418-759">
            <paramref name="width" /> に <see cref="P:System.Console.WindowLeft" /> を加算した値、または <paramref name="height" /> に <see cref="P:System.Console.WindowTop" /> を加算した値が <see cref="F:System.Int16.MaxValue" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-759">
              <paramref name="width" /> plus <see cref="P:System.Console.WindowLeft" /> or <paramref name="height" /> plus <see cref="P:System.Console.WindowTop" /> is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
          <span data-ttu-id="4b418-760">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-760">-or-</span>
          </span>
          <span data-ttu-id="4b418-761">
            <paramref name="width" /> または <paramref name="height" /> が、現在の画面解像度とコンソールのフォントで利用可能なウィンドウの最大幅または高さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-761">
              <paramref name="width" /> or <paramref name="height" /> is greater than the largest possible window width or height for the current screen resolution and console font.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4b418-762">ユーザーにこの操作を実行するアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-762">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-763">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-763">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-764">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-764">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-765">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-765">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public static string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string Title" />
      <MemberSignature Language="DocId" Value="P:System.Console.Title" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Console.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-766">コンソールのタイトル バーに表示するタイトルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-766">Gets or sets the title to display in the console title bar.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-767">コンソールのタイトル バーに表示される文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-767">The string to be displayed in the title bar of the console.</span>
          </span>
          <span data-ttu-id="4b418-768">タイトル文字列の最大長は 24500 文字です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-768">The maximum length of the title string is 24500 characters.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4b418-769">この例では、<xref:System.Console.Title%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-769">This example demonstrates the <xref:System.Console.Title%2A> property.</span></span> <span data-ttu-id="4b418-770">例が現在のオペレーティング システム ウィンドウのタイトルが表示されます、キーを押すまで待機し、新しいタイトルを表示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-770">The example displays the current title of the operating system window, waits for a key press, then displays a new title.</span></span>  
  
 [!code-cpp[console.title#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.title/CPP/mytitle.cpp#1)]
 [!code-csharp[console.title#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.title/CS/mytitle.cs#1)]
 [!code-vb[console.title#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.title/VB/mytitle.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4b418-771">取得操作において、取得したタイトルが 24500 文字を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-771">In a get operation, the retrieved title is longer than 24500 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-772">設定操作において、指定されたしたタイトルが 24500 文字を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-772">In a set operation, the specified title is longer than 24500 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b418-773">設定操作で、指定されたタイトルが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-773">In a set operation, the specified title is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-774">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-774">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-775">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-775">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-776">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-776">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="TreatControlCAsInput">
      <MemberSignature Language="C#" Value="public static bool TreatControlCAsInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool TreatControlCAsInput" />
      <MemberSignature Language="DocId" Value="P:System.Console.TreatControlCAsInput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property TreatControlCAsInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool TreatControlCAsInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TreatControlCAsInput : bool with get, set" Usage="System.Console.TreatControlCAsInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-777">
            <see cref="F:System.ConsoleModifiers.Control" /> 修飾キーと <see cref="F:System.ConsoleKey.C" /> コンソール キーの組み合わせ (Ctrl + C) を、通常の入力として扱うか、オペレーティング システムにより処理される割り込みとして扱うかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-777">Gets or sets a value indicating whether the combination of the <see cref="F:System.ConsoleModifiers.Control" /> modifier key and <see cref="F:System.ConsoleKey.C" /> console key (Ctrl+C) is treated as ordinary input or as an interruption that is handled by the operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-778">Ctrl + C を通常の入力として扱う場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-778">
              <see langword="true" /> if Ctrl+C is treated as ordinary input; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-779">場合の値、<xref:System.Console.TreatControlCAsInput%2A>プロパティは`false`Ctrl キーを押しながら C キーを押すと、押されたキーは、入力バッファーに格納されませんおよびオペレーティング システムが現在実行中のプロセスを終了します。</span><span class="sxs-lookup"><span data-stu-id="4b418-779">If the value of the <xref:System.Console.TreatControlCAsInput%2A> property is `false` and Ctrl+C is pressed, the pressed keys are not stored in the input buffer and the operating system terminates the currently executing process.</span></span> <span data-ttu-id="4b418-780">これが既定値です。</span><span class="sxs-lookup"><span data-stu-id="4b418-780">This is the default value.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4b418-781">設定するため、慎重にこのプロパティを使用して`true`このような大きな効果があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-781">Use this property judiciously because setting it to `true` has such a dramatic effect.</span></span> <span data-ttu-id="4b418-782">ほとんどのユーザーは、コンソール アプリケーションを終了するには、Ctrl + C を期待します。</span><span class="sxs-lookup"><span data-stu-id="4b418-782">Most users expect Ctrl+C to terminate a console application.</span></span> <span data-ttu-id="4b418-783">Ctrl + C の効果を無効にした場合、ユーザーは、Ctrl + Break を使用して、あまり知られていないキーの組み合わせであると、アプリケーションを終了する忘れないでください。</span><span class="sxs-lookup"><span data-stu-id="4b418-783">If you disable the effect of Ctrl+C, the user must remember to use Ctrl+Break to terminate the application, which is a less familiar key combination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-784">次の例で、<xref:System.Console.TreatControlCAsInput%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-784">The following example demonstrates the <xref:System.Console.TreatControlCAsInput%2A> property.</span></span>  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-785">コンソールの入力バッファーの入力モードを取得または設定できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-785">Unable to get or set the input mode of the console input buffer.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-786">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-786">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-787">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-787">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="F:System.ConsoleModifiers.Control" />
        <altmember cref="F:System.ConsoleKey.C" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="WindowHeight">
      <MemberSignature Language="C#" Value="public static int WindowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowHeight : int with get, set" Usage="System.Console.WindowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-788">コンソール ウィンドウ領域の高さを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-788">Gets or sets the height of the console window area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-789">行数で指定されたコンソール ウィンドウの高さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-789">The height of the console window measured in rows.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-790">値を設定しようとすると、<xref:System.Console.WindowHeight%2A>出力がリダイレクトされたときのプロパティでは、いずれかがスローされます、<xref:System.ArgumentOutOfRangeException>または<xref:System.IO.IOException>例外。</span><span class="sxs-lookup"><span data-stu-id="4b418-790">Attempting to set the value of the <xref:System.Console.WindowHeight%2A> property when output is redirected throws either an <xref:System.ArgumentOutOfRangeException> or an <xref:System.IO.IOException> exception.</span></span> <span data-ttu-id="4b418-791">例外を回避する場合にのみ、このプロパティの値を設定することができます、<xref:System.Console.IsOutputRedirected%2A>プロパティが返す`false`します。</span><span class="sxs-lookup"><span data-stu-id="4b418-791">To prevent an exception, you can set the value of this property only if the <xref:System.Console.IsOutputRedirected%2A> property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-792">この例では、<xref:System.Console.SetWindowSize%2A>メソッド、および<xref:System.Console.WindowWidth%2A>と<xref:System.Console.WindowHeight%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-792">This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the <xref:System.Console.WindowWidth%2A> and <xref:System.Console.WindowHeight%2A> properties.</span></span> <span data-ttu-id="4b418-793">コンソール ウィンドウのサイズを変更する効果を確認する例を実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-793">You must run the example to see the full effect of changing the console window size.</span></span>  
  
 <span data-ttu-id="4b418-794">例は 85 列を 43 行は、コンソール ウィンドウのサイズを報告し、キーを押すまで待機します。</span><span class="sxs-lookup"><span data-stu-id="4b418-794">The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press.</span></span> <span data-ttu-id="4b418-795">任意のキーが押されたときに、コンソール ウィンドウのサイズが半分に、新しいディメンションが報告され、例では、別のキーの押下を待ちます。</span><span class="sxs-lookup"><span data-stu-id="4b418-795">When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</span></span> <span data-ttu-id="4b418-796">最後に、任意のキーが押されたときに、コンソール ウィンドウが元の寸法に復元し、例では、終了します。</span><span class="sxs-lookup"><span data-stu-id="4b418-796">Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.</span></span>  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-797">
            <see cref="P:System.Console.WindowWidth" /> プロパティの値または <see cref="P:System.Console.WindowHeight" /> プロパティの値が 0 以下です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-797">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is less than or equal to 0.</span>
          </span>
          <span data-ttu-id="4b418-798">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-798">-or-</span>
          </span>
          <span data-ttu-id="4b418-799">
            <see cref="P:System.Console.WindowHeight" /> プロパティの値と <see cref="P:System.Console.WindowTop" /> プロパティの値を加算した値が <see cref="F:System.Int16.MaxValue" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-799">The value of the <see cref="P:System.Console.WindowHeight" /> property plus the value of the <see cref="P:System.Console.WindowTop" /> property is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
          <span data-ttu-id="4b418-800">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-800">-or-</span>
          </span>
          <span data-ttu-id="4b418-801">
            <see cref="P:System.Console.WindowWidth" /> プロパティの値または <see cref="P:System.Console.WindowHeight" /> プロパティの値が、現在の画面の解像度およびコンソールのフォントで利用可能なウィンドウの最大幅か最大の高さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-801">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is greater than the largest possible window width or height for the current screen resolution and console font.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-802">読み取りまたは書き込み情報エラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-802">Error reading or writing information.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WindowLeft">
      <MemberSignature Language="C#" Value="public static int WindowLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowLeft" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowLeft { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowLeft : int with get, set" Usage="System.Console.WindowLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-803">コンソール ウィンドウ領域の左端の位置を、画面バッファーの相対位置として取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-803">Gets or sets the leftmost position of the console window area relative to the screen buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-804">列で測定されるコンソール ウィンドウの左端の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-804">The leftmost console window position measured in columns.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-805">コンソールより大きな四角形のバッファー領域に四角形のウィンドウを表します。</span><span class="sxs-lookup"><span data-stu-id="4b418-805">The console represents a rectangular window into a larger rectangular buffer area.</span></span> <span data-ttu-id="4b418-806">行の番号および列の番号で水平方向には、ウィンドウと、バッファーの両方が垂直方向に測定されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-806">Both the window and the buffer are measured vertically by their number of rows and horizontally by their number of columns.</span></span> <span data-ttu-id="4b418-807">バッファー領域のディメンションがによって定義されている、<xref:System.Console.BufferHeight%2A>と<xref:System.Console.BufferWidth%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-807">The dimensions of the buffer area are defined by the <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties.</span></span> <span data-ttu-id="4b418-808">コンソール領域のディメンションがによって定義されている、<xref:System.Console.WindowHeight%2A>と<xref:System.Console.WindowWidth%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-808">The dimensions of the console area are defined by the <xref:System.Console.WindowHeight%2A> and <xref:System.Console.WindowWidth%2A> properties.</span></span> <span data-ttu-id="4b418-809"><xref:System.Console.WindowLeft%2A>バッファー領域の列は、コンソール ウィンドウの最初の列に表示されるプロパティを決定します。</span><span class="sxs-lookup"><span data-stu-id="4b418-809">The <xref:System.Console.WindowLeft%2A> property determines which column of the buffer area is displayed in the first column of the console window.</span></span> <span data-ttu-id="4b418-810">値、<xref:System.Console.WindowLeft%2A>プロパティの範囲は 0 ~ <xref:System.Console.BufferWidth%2A>  - <xref:System.Console.WindowWidth%2A>します。</span><span class="sxs-lookup"><span data-stu-id="4b418-810">The value of the <xref:System.Console.WindowLeft%2A> property can range from 0 to <xref:System.Console.BufferWidth%2A> - <xref:System.Console.WindowWidth%2A>.</span></span> <span data-ttu-id="4b418-811">それ以外の値に設定しようとしての範囲がスローされます、<xref:System.ArgumentOutOfRangeException>します。</span><span class="sxs-lookup"><span data-stu-id="4b418-811">Attempting to set it to a value outside that range throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="4b418-812">コンソール ウィンドウを最初に開いたときの既定値、<xref:System.Console.WindowLeft%2A>プロパティが 0 で、コンソールで表示される最初の列がバッファー領域の最初の列 (位置 0 にある列) に対応していることを示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-812">When a console window first opens, the default value of the <xref:System.Console.WindowLeft%2A> property is zero, which indicates that the first column shown by the console corresponds to the first column (the column at position zero) in the buffer area.</span></span> <span data-ttu-id="4b418-813">コンソール ウィンドウとバッファー領域の両方の既定の幅は、80 列です。</span><span class="sxs-lookup"><span data-stu-id="4b418-813">The default width of both the console window and the buffer area is 80 columns.</span></span> <span data-ttu-id="4b418-814">つまり、<xref:System.Console.WindowLeft%2A>プロパティは、コンソール ウィンドウを狭く、またはバッファー領域を広くしている場合にのみ変更できます。</span><span class="sxs-lookup"><span data-stu-id="4b418-814">This means that the <xref:System.Console.WindowLeft%2A> property can be modified only if the console window is made narrower or the buffer area is made wider.</span></span>  
  
 <span data-ttu-id="4b418-815">バッファー領域の幅は、コンソール ウィンドウの値の幅を超える場合、<xref:System.Console.WindowLeft%2A>プロパティは、ユーザーでは、水平スクロール バーを使用して、バッファー領域をウィンドウのリレーションシップを定義するときに自動的に調整します。</span><span class="sxs-lookup"><span data-stu-id="4b418-815">Note that if the width of the buffer area exceeds the width of the console window, the value of the <xref:System.Console.WindowLeft%2A> property is automatically adjusted when the user uses the horizontal scroll bar to define the window's relationship to the buffer area.</span></span>  
  
 <span data-ttu-id="4b418-816">値を設定しようとすると、<xref:System.Console.WindowLeft%2A>プロパティの出力がリダイレクトがスローされます、<xref:System.IO.IOException>例外。</span><span class="sxs-lookup"><span data-stu-id="4b418-816">Attempting to set the value of the <xref:System.Console.WindowLeft%2A> property when output is redirected throws an <xref:System.IO.IOException> exception.</span></span> <span data-ttu-id="4b418-817">例外を回避する場合にのみ、このプロパティの値を設定することができます、<xref:System.Console.IsOutputRedirected%2A>プロパティが返す`false`します。</span><span class="sxs-lookup"><span data-stu-id="4b418-817">To prevent the exception, you can set the value of this property only if the <xref:System.Console.IsOutputRedirected%2A> property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-818">次の例では、80 列のコンソール ウィンドウを開きし、120 の列の幅であるバッファー領域を定義します。</span><span class="sxs-lookup"><span data-stu-id="4b418-818">The following example opens an 80-column console window and defines a buffer area that is 120 columns wide.</span></span> <span data-ttu-id="4b418-819">ウィンドウとバッファーのサイズに関する情報を表示し、ユーザーが左矢印キーまたは右方向キーを押すまで待機します。</span><span class="sxs-lookup"><span data-stu-id="4b418-819">It displays information on window and buffer size, and then waits for the user to press either the LEFT ARROW key or the RIGHT ARROW key.</span></span> <span data-ttu-id="4b418-820">前者の場合、デクリメントの値、<xref:System.Console.WindowLeft%2A>プロパティを 1 つの結果が有効な値である場合。</span><span class="sxs-lookup"><span data-stu-id="4b418-820">In the former case, it decrements the value of the <xref:System.Console.WindowLeft%2A> property by one if the result is a legal value.</span></span> <span data-ttu-id="4b418-821">値を増加している後者の場合、<xref:System.Console.WindowLeft%2A>プロパティを 1 の場合は、結果は有効になります。</span><span class="sxs-lookup"><span data-stu-id="4b418-821">In the latter case, it increases the value of the <xref:System.Console.WindowLeft%2A> property by one if the result would be legal.</span></span> <span data-ttu-id="4b418-822">例が処理する必要はありませんが、<xref:System.ArgumentOutOfRangeException>をチェックするために割り当てられる値、<xref:System.Console.WindowLeft%2A>プロパティが負でないの合計は発生しません、<xref:System.Console.WindowLeft%2A>と<xref:System.Console.WindowWidth%2A>プロパティを超える、 <xref:System.Console.BufferWidth%2A>プロパティ値です。</span><span class="sxs-lookup"><span data-stu-id="4b418-822">Note that the example does not have to handle an <xref:System.ArgumentOutOfRangeException>, because it checks that the value to be assigned to the <xref:System.Console.WindowLeft%2A> property is not negative and does not cause the sum of the <xref:System.Console.WindowLeft%2A> and <xref:System.Console.WindowWidth%2A> properties to exceed the <xref:System.Console.BufferWidth%2A> property value.</span></span>  
  
 [!code-cpp[System.Console.WindowLeft#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.windowleft/cpp/windowleft1.cpp#1)]
 [!code-csharp[System.Console.WindowLeft#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.windowleft/cs/windowleft1.cs#1)]
 [!code-vb[System.Console.WindowLeft#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.windowleft/vb/windowleft1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-823">設定操作で、割り当てられる値が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-823">In a set operation, the value to be assigned is less than zero.</span>
          </span>
          <span data-ttu-id="4b418-824">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-824">-or-</span>
          </span>
          <span data-ttu-id="4b418-825">代入結果として、<see cref="P:System.Console.WindowLeft" /> に <see cref="P:System.Console.WindowWidth" /> を加算すると <see cref="P:System.Console.BufferWidth" /> より大きくなります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-825">As a result of the assignment, <see cref="P:System.Console.WindowLeft" /> plus <see cref="P:System.Console.WindowWidth" /> would exceed <see cref="P:System.Console.BufferWidth" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-826">読み取りまたは書き込み情報エラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-826">Error reading or writing information.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WindowTop">
      <MemberSignature Language="C#" Value="public static int WindowTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowTop" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowTop" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowTop As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowTop { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowTop : int with get, set" Usage="System.Console.WindowTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-827">コンソール ウィンドウ領域の上端の位置を、画面バッファーに対する相対位置として取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-827">Gets or sets the top position of the console window area relative to the screen buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-828">コンソール ウィンドウの上端の位置 (行)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-828">The uppermost console window position measured in rows.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-829">コンソールより大きな四角形のバッファー領域に四角形のウィンドウを表します。</span><span class="sxs-lookup"><span data-stu-id="4b418-829">The console represents a rectangular window into a larger rectangular buffer area.</span></span> <span data-ttu-id="4b418-830">行の番号および列の番号で水平方向には、ウィンドウと、バッファーの両方が垂直方向に測定されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-830">Both the window and the buffer are measured vertically by their number of rows and horizontally by their number of columns.</span></span> <span data-ttu-id="4b418-831">バッファー領域のディメンションがによって定義されている、<xref:System.Console.BufferHeight%2A>と<xref:System.Console.BufferWidth%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-831">The dimensions of the buffer area are defined by the <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties.</span></span> <span data-ttu-id="4b418-832">コンソール領域のディメンションがによって定義されている、<xref:System.Console.WindowHeight%2A>と<xref:System.Console.WindowWidth%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-832">The dimensions of the console area are defined by the <xref:System.Console.WindowHeight%2A> and <xref:System.Console.WindowWidth%2A> properties.</span></span> <span data-ttu-id="4b418-833"><xref:System.Console.WindowTop%2A>バッファー領域の行は、コンソール ウィンドウの最初の列に表示されるプロパティを決定します。</span><span class="sxs-lookup"><span data-stu-id="4b418-833">The <xref:System.Console.WindowTop%2A> property determines which row of the buffer area is displayed in the first column of the console window.</span></span> <span data-ttu-id="4b418-834">値、<xref:System.Console.WindowTop%2A>プロパティの範囲は 0 ~ <xref:System.Console.BufferHeight%2A>  - <xref:System.Console.WindowHeight%2A>します。</span><span class="sxs-lookup"><span data-stu-id="4b418-834">The value of the <xref:System.Console.WindowTop%2A> property can range from 0 to <xref:System.Console.BufferHeight%2A> - <xref:System.Console.WindowHeight%2A>.</span></span> <span data-ttu-id="4b418-835">それ以外の値に設定しようとしての範囲がスローされます、<xref:System.ArgumentOutOfRangeException>します。</span><span class="sxs-lookup"><span data-stu-id="4b418-835">Attempting to set it to a value outside that range throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="4b418-836">値を設定しようとすると、<xref:System.Console.WindowTop%2A>プロパティの出力がリダイレクトがスローされます、<xref:System.IO.IOException>例外。</span><span class="sxs-lookup"><span data-stu-id="4b418-836">Attempting to set the value of the <xref:System.Console.WindowTop%2A> property when output is redirected throws an <xref:System.IO.IOException> exception.</span></span> <span data-ttu-id="4b418-837">例外を回避する場合にのみ、このプロパティの値を設定することができます、<xref:System.Console.IsOutputRedirected%2A>プロパティが返す`false`します。</span><span class="sxs-lookup"><span data-stu-id="4b418-837">To prevent the exception, you can set the value of this property only if the <xref:System.Console.IsOutputRedirected%2A> property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-838">次の例で、 <xref:System.Console.WindowLeft%2A>、 <xref:System.Console.WindowTop%2A>、 <xref:System.Console.WindowWidth%2A>、 <xref:System.Console.WindowHeight%2A>、 <xref:System.Console.BufferWidth%2A>、 <xref:System.Console.BufferHeight%2A>、および<xref:System.Console.CursorVisible%2A>; のプロパティと<xref:System.Console.SetWindowPosition%2A>、<xref:System.Console.SetBufferSize%2A>と<xref:System.Console.ReadKey%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-838">The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods.</span></span> <span data-ttu-id="4b418-839">例では、画面バッファーの幅に基づく画面バッファーをグリッド パターンを描画します。</span><span class="sxs-lookup"><span data-stu-id="4b418-839">The example draws a grid pattern in the screen buffer based on the screen buffer width.</span></span> <span data-ttu-id="4b418-840">例では、応答には、上方向キーのうち、下矢印、左方向キーまたは右矢印のコンソール キーが押されたコンソール ウィンドウが移動します。</span><span class="sxs-lookup"><span data-stu-id="4b418-840">Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</span></span> <span data-ttu-id="4b418-841">グリッド パターンでは、画面バッファーに対する相対コンソール ウィンドウの移動を確認できます。</span><span class="sxs-lookup"><span data-stu-id="4b418-841">The grid pattern helps you see the movement of the console window relative to the screen buffer.</span></span>  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-842">設定操作で、割り当てられる値が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-842">In a set operation, the value to be assigned is less than zero.</span>
          </span>
          <span data-ttu-id="4b418-843">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-843">-or-</span>
          </span>
          <span data-ttu-id="4b418-844">代入結果として、<see cref="P:System.Console.WindowTop" /> に <see cref="P:System.Console.WindowHeight" /> を加算すると <see cref="P:System.Console.BufferHeight" /> より大きくなります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-844">As a result of the assignment, <see cref="P:System.Console.WindowTop" /> plus <see cref="P:System.Console.WindowHeight" /> would exceed <see cref="P:System.Console.BufferHeight" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-845">読み取りまたは書き込み情報エラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-845">Error reading or writing information.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WindowWidth">
      <MemberSignature Language="C#" Value="public static int WindowWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowWidth : int with get, set" Usage="System.Console.WindowWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-846">コンソール ウィンドウの幅を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-846">Gets or sets the width of the console window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b418-847">列数で指定されたコンソール ウィンドウの幅。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-847">The width of the console window measured in columns.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-848">値を設定しようとすると、<xref:System.Console.WindowWidth%2A>出力がリダイレクトされたときのプロパティでは、いずれかがスローされます、<xref:System.ArgumentOutOfRangeException>または<xref:System.IO.IOException>例外。</span><span class="sxs-lookup"><span data-stu-id="4b418-848">Attempting to set the value of the <xref:System.Console.WindowWidth%2A> property when output is redirected throws either an <xref:System.ArgumentOutOfRangeException> or an <xref:System.IO.IOException> exception.</span></span> <span data-ttu-id="4b418-849">例外を回避する場合にのみ、このプロパティの値を設定することができます、<xref:System.Console.IsOutputRedirected%2A>プロパティが返す`false`します。</span><span class="sxs-lookup"><span data-stu-id="4b418-849">To prevent an exception, you can set the value of this property only if the <xref:System.Console.IsOutputRedirected%2A> property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-850">この例では、<xref:System.Console.SetWindowSize%2A>メソッド、および<xref:System.Console.WindowWidth%2A>と<xref:System.Console.WindowHeight%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-850">This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the <xref:System.Console.WindowWidth%2A> and <xref:System.Console.WindowHeight%2A> properties.</span></span> <span data-ttu-id="4b418-851">コンソール ウィンドウのサイズを変更する効果を確認する例を実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-851">You must run the example to see the full effect of changing the console window size.</span></span>  
  
 <span data-ttu-id="4b418-852">例は 85 列を 43 行は、コンソール ウィンドウのサイズを報告し、キーを押すまで待機します。</span><span class="sxs-lookup"><span data-stu-id="4b418-852">The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press.</span></span> <span data-ttu-id="4b418-853">任意のキーが押されたときに、コンソール ウィンドウのサイズが半分に、新しいディメンションが報告され、例では、別のキーの押下を待ちます。</span><span class="sxs-lookup"><span data-stu-id="4b418-853">When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</span></span> <span data-ttu-id="4b418-854">最後に、任意のキーが押されたときに、コンソール ウィンドウが元の寸法に復元し、例では、終了します。</span><span class="sxs-lookup"><span data-stu-id="4b418-854">Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.</span></span>  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-855">
            <see cref="P:System.Console.WindowWidth" /> プロパティの値または <see cref="P:System.Console.WindowHeight" /> プロパティの値が 0 以下です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-855">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is less than or equal to 0.</span>
          </span>
          <span data-ttu-id="4b418-856">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-856">-or-</span>
          </span>
          <span data-ttu-id="4b418-857">
            <see cref="P:System.Console.WindowHeight" /> プロパティの値と <see cref="P:System.Console.WindowTop" /> プロパティの値を加算した値が <see cref="F:System.Int16.MaxValue" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-857">The value of the <see cref="P:System.Console.WindowHeight" /> property plus the value of the <see cref="P:System.Console.WindowTop" /> property is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
          <span data-ttu-id="4b418-858">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-858">-or-</span>
          </span>
          <span data-ttu-id="4b418-859">
            <see cref="P:System.Console.WindowWidth" /> プロパティの値または <see cref="P:System.Console.WindowHeight" /> プロパティの値が、現在の画面の解像度およびコンソールのフォントで利用可能なウィンドウの最大幅か最大の高さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-859">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is greater than the largest possible window width or height for the current screen resolution and console font.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-860">読み取りまたは書き込み情報エラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-860">Error reading or writing information.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-861">指定した値のテキスト形式を標準出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-861">Writes the text representation of the specified value or values to the standard output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(bool value);" />
      <MemberSignature Language="F#" Value="static member Write : bool -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-862">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-862">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-863">指定した Boolean 値のテキスト形式を標準出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-863">Writes the text representation of the specified Boolean value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-864">テキスト表現`value`呼び出しによって生成される<xref:System.Boolean.ToString%2A?displayProperty=nameWithType>、いずれかの出力<xref:System.Boolean.TrueString?displayProperty=nameWithType>または<xref:System.Boolean.FalseString?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="4b418-864">The text representation of `value` is produced by calling <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>, which outputs either <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-865">`Write` メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-865">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-866">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-866">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-867">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-867">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-868">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-868">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(char value);" />
      <MemberSignature Language="F#" Value="static member Write : char -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-869">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-869">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-870">指定した Unicode 文字値を標準出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-870">Writes the specified Unicode character value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4b418-871">`Write` メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-871">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-872">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-872">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-873">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-873">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-874">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-874">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="static member Write : char[] -&gt; unit" Usage="System.Console.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="4b418-875">Unicode 文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-875">A Unicode character array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-876">指定した Unicode 文字配列を標準出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-876">Writes the specified array of Unicode characters to the standard output stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-877">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-877">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-878">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-878">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-879">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-879">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Write : decimal -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-880">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-880">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-881">指定した <see cref="T:System.Decimal" /> 値のテキスト形式を標準出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-881">Writes the text representation of the specified <see cref="T:System.Decimal" /> value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-882">テキスト表現`value`呼び出しによって生成される<xref:System.Decimal.ToString%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="4b418-882">The text representation of `value` is produced by calling <xref:System.Decimal.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-883">`Write` メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-883">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-884">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-884">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-885">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-885">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-886">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-886">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(double value);" />
      <MemberSignature Language="F#" Value="static member Write : double -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-887">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-887">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-888">指定した倍精度浮動小数点値のテキスト形式を標準出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-888">Writes the text representation of the specified double-precision floating-point value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-889">テキスト表現`value`呼び出しによって生成される、<xref:System.Double.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-889">The text representation of `value` is produced by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-890">`Write` メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-890">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-891">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-891">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-892">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-892">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-893">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-893">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(int value);" />
      <MemberSignature Language="F#" Value="static member Write : int -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-894">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-894">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-895">指定した 32 ビット符号付き整数値のテキスト形式を標準出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-895">Writes the text representation of the specified 32-bit signed integer value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-896">テキスト表現`value`呼び出しによって生成される、<xref:System.Int32.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-896">The text representation of `value` is produced by calling the <xref:System.Int32.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-897">`Write` メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-897">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-898">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-898">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-899">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-899">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-900">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-900">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(long value);" />
      <MemberSignature Language="F#" Value="static member Write : int64 -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-901">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-901">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-902">指定した 64 ビット符号付き整数値のテキスト形式を標準出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-902">Writes the text representation of the specified 64-bit signed integer value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-903">テキスト表現`value`呼び出しによって生成される、<xref:System.Int64.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-903">The text representation of `value` is produced by calling the <xref:System.Int64.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-904">`Write` メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-904">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-905">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-905">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-906">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-906">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-907">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-907">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : obj -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-908">書き込む値または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-908">The value to write, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-909">指定したオブジェクトのテキスト形式を標準出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-909">Writes the text representation of the specified object to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-910">場合`value`は`null`何も書き込まれませんが、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="4b418-910">If `value` is `null`, nothing is written and no exception is thrown.</span></span> <span data-ttu-id="4b418-911">それ以外の場合、`ToString`メソッドの`value`文字列表現を生成するために呼び出されると、結果の文字列が標準出力ストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="4b418-911">Otherwise, the `ToString` method of `value` is called to produce its string representation, and the resulting string is written to the standard output stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-912">`Write` メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-912">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-913">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-913">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-914">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-914">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-915">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-915">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(float value);" />
      <MemberSignature Language="F#" Value="static member Write : single -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-916">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-916">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-917">指定した単精度浮動小数点値のテキスト形式を標準出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-917">Writes the text representation of the specified single-precision floating-point value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-918">テキスト表現`value`呼び出しによって生成される、<xref:System.Single.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-918">The text representation of `value` is produced by calling the <xref:System.Single.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-919">`Write` メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-919">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-920">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-920">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-921">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-921">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-922">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-922">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : string -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-923">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-923">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-924">指定した文字列値を標準出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-924">Writes the specified string value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-925">値が場合`null`、標準出力ストリームに何も書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="4b418-925">If value is `null`, nothing is written to the standard output stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-926">`Write` メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-926">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-927">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-927">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-928">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-928">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-929">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-929">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member Write : uint32 -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-930">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-930">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-931">指定した 32 ビット符号なし整数値のテキスト形式を標準出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-931">Writes the text representation of the specified 32-bit unsigned integer value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-932">テキスト表現`value`呼び出しによって生成される、<xref:System.UInt32.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-932">The text representation of `value` is produced by calling the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-933">`Write` メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-933">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-934">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-934">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-935">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-935">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-936">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-936">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member Write : uint64 -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-937">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-937">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-938">指定した 64 ビット符号なし整数値のテキスト形式を標準出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-938">Writes the text representation of the specified 64-bit unsigned integer value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-939">テキスト表現`value`呼び出しによって生成される、<xref:System.UInt64.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-939">The text representation of `value` is produced by calling the <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-940">`Write` メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-940">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-941">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-941">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-942">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-942">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-943">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-943">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj -&gt; unit" Usage="System.Console.Write (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="4b418-944">複合書式設定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-944">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="4b418-945">
            <c>format</c> を使用して書き込むオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-945">An object to write using <c>format</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-946">指定した書式情報を使用して、指定したオブジェクトのテキスト表現を標準出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-946">Writes the text representation of the specified object to the standard output stream using the specified format information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-947">このメソッドを使用して、[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)をテキスト形式のオブジェクトの値に変換し、その表現を文字列に埋め込む .NET Framework の。</span><span class="sxs-lookup"><span data-stu-id="4b418-947">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="4b418-948">結果の文字列は、出力ストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="4b418-948">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="4b418-949">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="4b418-949">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="4b418-950">書式設定プロセスでは、対応するオブジェクトの値のテキスト形式で各書式項目が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="4b418-950">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="4b418-951">書式指定項目の構文は`{`*インデックス*[`,`*配置*] [`:`*formatString*]`}`を指定します、必須のインデックス、オプションの長さと、書式設定されたテキストの配置、およびオプションの対応するオブジェクトの値の書式を設定する方法を制御する書式指定子文字の文字列。</span><span class="sxs-lookup"><span data-stu-id="4b418-951">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="4b418-952">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="4b418-952">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="4b418-953">などのメソッドでサポートされている複合書式指定機能の詳細については<xref:System.String.Format%2A>、 <xref:System.Text.StringBuilder.AppendFormat%2A>、および一部のオーバー ロードの<xref:System.Console.WriteLine%2A>を参照してください[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-953">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="4b418-954">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-954">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-955">についての日付と時刻の書式指定子の詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-955">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-956">列挙型書式指定子の詳細については、次を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-956">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-957">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-957">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-958">次の例では、`WriteLine` メソッドを使用して、数値、日付、および列挙体の標準的な書式指定子を示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-958">The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)] 
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="4b418-959"><xref:System.Console.Write%2A> メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-959">The following example illustrates the use of the <xref:System.Console.Write%2A> method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-960">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-960">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b418-961">
            <paramref name="format" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-961">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4b418-962">
            <paramref name="format" /> の書式指定が正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-962">The format specification in <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-963">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-963">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-964">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-964">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj[] -&gt; unit" Usage="System.Console.Write (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="4b418-965">複合書式設定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-965">A composite format string.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="4b418-966">
            <c>format</c> を使用して書き込むオブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-966">An array of objects to write using <c>format</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-967">指定された書式情報を使用して、指定したオブジェクト配列のテキスト表現を標準出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-967">Writes the text representation of the specified array of objects to the standard output stream using the specified format information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-968">このメソッドを使用して、[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)をテキスト形式のオブジェクトの値に変換し、その表現を文字列に埋め込む .NET Framework の。</span><span class="sxs-lookup"><span data-stu-id="4b418-968">This method uses the  [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="4b418-969">結果の文字列は、出力ストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="4b418-969">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="4b418-970">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="4b418-970">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="4b418-971">書式設定プロセスでは、対応するオブジェクトの値のテキスト形式で各書式項目が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="4b418-971">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="4b418-972">書式指定項目の構文は`{`*インデックス*[`,`*配置*] [`:`*formatString*]`}`を指定します、必須のインデックス、オプションの長さと、書式設定されたテキストの配置、およびオプションの対応するオブジェクトの値の書式を設定する方法を制御する書式指定子文字の文字列。</span><span class="sxs-lookup"><span data-stu-id="4b418-972">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="4b418-973">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="4b418-973">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="4b418-974">などのメソッドでサポートされている複合書式指定機能の詳細については<xref:System.String.Format%2A>、 <xref:System.Text.StringBuilder.AppendFormat%2A>、および一部のオーバー ロードの<xref:System.Console.WriteLine%2A>を参照してください[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-974">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="4b418-975">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-975">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-976">についての日付と時刻の書式指定子の詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-976">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-977">列挙型書式指定子の詳細については、次を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-977">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-978">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-978">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="4b418-979">`arg`パラメーターはパラメーター配列です。</span><span class="sxs-lookup"><span data-stu-id="4b418-979">The `arg` parameter is a parameter array.</span></span> <span data-ttu-id="4b418-980">引数は、配列、または 5 つ以上の項目のリストとして、メソッドに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="4b418-980">Arguments  can be passed to the method either as an array or as list of five or more items.</span></span> <span data-ttu-id="4b418-981">メソッドの呼び出しの両方の形式の例を示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-981">The examples illustrate both forms of method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-982">次の例では、定義、`Person`さまざまな個人に関する情報を提供するプロパティを持つクラス。</span><span class="sxs-lookup"><span data-stu-id="4b418-982">The following example defines a `Person` class with a number of properties that provide information about a person.</span></span> <span data-ttu-id="4b418-983">その`GetDescription`メソッド、プロパティの値を 1 つを除くのすべてを含む配列を返します。</span><span class="sxs-lookup"><span data-stu-id="4b418-983">Its `GetDescription` method returns an array that contains all of the property values except one.</span></span> <span data-ttu-id="4b418-984">によって返される配列を使用して、 `GetDescription` Person オブジェクトの値を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-984">The example then uses the array returned by the  `GetDescription` method  to display the values of the Person object.</span></span>  
  
 [!code-csharp[System.Console.Write#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.write/cs/WriteParams1.cs#1)]
 [!code-vb[System.Console.Write#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.write/vb/WriteParams1.vb#1)]  
  
 <span data-ttu-id="4b418-985">例では、メモ、<xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29>メソッドではなく、<xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29>メソッドの値を表示しようとするため、`Person.Remarks`プロパティが同じ行にします。</span><span class="sxs-lookup"><span data-stu-id="4b418-985">Note that the example calls the <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29> method rather than the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29> method because it attempts to display the value of the `Person.Remarks` property on the same line.</span></span> <span data-ttu-id="4b418-986">これを行うには、値を検査、<xref:System.Console.CursorLeft%2A>と<xref:System.Console.WindowWidth%2A>に合わせて注釈に十分な領域があるかどうかを決定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="4b418-986">To do this, it examines the value of the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.WindowWidth%2A> properties to determine whether there is enough space for the remark to fit.</span></span>  <span data-ttu-id="4b418-987">発生した場合は、行が表示されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-987">If there is, it displays the line.</span></span> <span data-ttu-id="4b418-988">存在しない場合、その行を書き込む、3 つのスペースのインデントを設定、注釈が表示されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-988">If not, it writes a line, indents three spaces, and displays the remark.</span></span>  
  
 <span data-ttu-id="4b418-989">として 5 項目一覧を提供する点を除いて、次の例は、最初と同じ、`arg`引数パラメーター配列の代わりにします。</span><span class="sxs-lookup"><span data-stu-id="4b418-989">The following example is identical to the first, except that it supplies a five-item list as the `arg` argument instead of a parameter array.</span></span>  
  
 [!code-csharp[System.Console.Write#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.write/cs/WriteParams2.cs#2)]
 [!code-vb[System.Console.Write#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.write/vb/WriteParams2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-990">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-990">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b418-991">
            <paramref name="format" /> または <paramref name="arg" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-991">
              <paramref name="format" /> or <paramref name="arg" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4b418-992">
            <paramref name="format" /> の書式指定が正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-992">The format specification in <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-993">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-993">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-994">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-994">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <span data-ttu-id="4b418-995">
            <para>このメソッドは、C++ コードでは呼び出されません。C++ コンパイラへの呼び出しを解決する[System.Console.Write](xref:System.Console.Write*)への呼び出しとして文字列と 4 つ以上のオブジェクト パラメーターの一覧を含む<see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" />します。呼び出しを解決[System.Console.Write](xref:System.Console.Write*)への呼び出しとして文字列とオブジェクトの配列を含む<see cref="M:System.Console.Write(System.String,System.Object)" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-995">
              <para>This method is not called by C++ code. The C++ compiler resolves calls to [System.Console.Write](xref:System.Console.Write*) that include a string and a list of four or more object parameters as a call to <see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" />. It resolves calls to [System.Console.Write](xref:System.Console.Write*) that include a string and an object array as a call to <see cref="M:System.Console.Write(System.String,System.Object)" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="static member Write : char[] * int * int -&gt; unit" Usage="System.Console.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="4b418-996">Unicode 文字の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-996">An array of Unicode characters.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4b418-997">
            <c>buffer</c> 内の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-997">The starting position in <c>buffer</c>.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4b418-998">書き込む文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-998">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-999">指定した Unicode 文字の部分配列を標準出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-999">Writes the specified subarray of Unicode characters to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1000">このメソッドは書き込みます`count`位置から始まる文字`index`の`buffer`を標準出力ストリームにします。</span><span class="sxs-lookup"><span data-stu-id="4b418-1000">This method writes `count` characters starting at position `index` of `buffer` to the standard output stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b418-1001">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1001">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-1002">
            <paramref name="index" /> または <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1002">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4b418-1003">
            <paramref name="index" /> と <paramref name="count" /> の合計が指定する位置は、<paramref name="buffer" /> 内ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1003">
              <paramref name="index" /> plus <paramref name="count" /> specify a position that is not within <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1004">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1004">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1005">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1005">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1006">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1006">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj * obj -&gt; unit" Usage="System.Console.Write (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="4b418-1007">複合書式設定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1007">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="4b418-1008">
            <c>format</c> を使用して書き込む最初のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1008">The first object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="4b418-1009">
            <c>format</c> を使用して書き込む 2 番目のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1009">The second object to write using <c>format</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1010">指定した書式情報を使用して、指定したオブジェクトのテキスト表現を標準出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1010">Writes the text representation of the specified objects to the standard output stream using the specified format information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1011">このメソッドを使用して、[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)をテキスト形式のオブジェクトの値に変換し、その表現を文字列に埋め込む .NET Framework の。</span><span class="sxs-lookup"><span data-stu-id="4b418-1011">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="4b418-1012">結果の文字列は、出力ストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1012">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="4b418-1013">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1013">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="4b418-1014">書式設定プロセスでは、対応するオブジェクトの値のテキスト形式で各書式項目が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1014">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="4b418-1015">書式指定項目の構文は`{`*インデックス*[`,`*配置*] [`:`*formatString*]`}`を指定します、必須のインデックス、オプションの長さと、書式設定されたテキストの配置、およびオプションの対応するオブジェクトの値の書式を設定する方法を制御する書式指定子文字の文字列。</span><span class="sxs-lookup"><span data-stu-id="4b418-1015">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="4b418-1016">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1016">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="4b418-1017">などのメソッドでサポートされている複合書式指定機能の詳細については<xref:System.String.Format%2A>、 <xref:System.Text.StringBuilder.AppendFormat%2A>、および一部のオーバー ロードの<xref:System.Console.WriteLine%2A>を参照してください[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1017">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="4b418-1018">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1018">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1019">についての日付と時刻の書式指定子の詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1019">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1020">列挙型書式指定子の詳細については、次を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1020">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1021">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1021">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-1022">次の例では、`WriteLine` メソッドを使用して、数値、日付、および列挙体の標準的な書式指定子を示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1022">The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="4b418-1023">`Write` メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1023">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1024">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1024">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b418-1025">
            <paramref name="format" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1025">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4b418-1026">
            <paramref name="format" /> の書式指定が正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1026">The format specification in <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1027">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1027">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1028">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1028">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj * obj * obj -&gt; unit" Usage="System.Console.Write (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="4b418-1029">複合書式設定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1029">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="4b418-1030">
            <c>format</c> を使用して書き込む最初のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1030">The first object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="4b418-1031">
            <c>format</c> を使用して書き込む 2 番目のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1031">The second object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="4b418-1032">
            <c>format</c> を使用して書き込む 3 番目のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1032">The third object to write using <c>format</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1033">指定した書式情報を使用して、指定したオブジェクトのテキスト表現を標準出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1033">Writes the text representation of the specified objects to the standard output stream using the specified format information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1034">このメソッドを使用して、[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)をテキスト形式のオブジェクトの値に変換し、その表現を文字列に埋め込む .NET Framework の。</span><span class="sxs-lookup"><span data-stu-id="4b418-1034">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="4b418-1035">結果の文字列は、出力ストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1035">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="4b418-1036">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1036">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="4b418-1037">書式設定プロセスでは、対応するオブジェクトの値のテキスト形式で各書式項目が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1037">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="4b418-1038">書式指定項目の構文は`{`*インデックス*[`,`*配置*] [`:`*formatString*]`}`を指定します、必須のインデックス、オプションの長さと、書式設定されたテキストの配置、およびオプションの対応するオブジェクトの値の書式を設定する方法を制御する書式指定子文字の文字列。</span><span class="sxs-lookup"><span data-stu-id="4b418-1038">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="4b418-1039">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1039">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="4b418-1040">などのメソッドでサポートされている複合書式指定機能の詳細については<xref:System.String.Format%2A>、 <xref:System.Text.StringBuilder.AppendFormat%2A>、および一部のオーバー ロードの<xref:System.Console.WriteLine%2A>を参照してください[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1040">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="4b418-1041">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1041">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1042">についての日付と時刻の書式指定子の詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1042">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1043">列挙型書式指定子の詳細については、次を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1043">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1044">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1044">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-1045">次の例では、`WriteLine` メソッドを使用して、数値、日付、および列挙体の標準的な書式指定子を示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1045">The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="4b418-1046">`Write` メソッドの使用例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1046">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1047">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1047">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b418-1048">
            <paramref name="format" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1048">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4b418-1049">
            <paramref name="format" /> の書式指定が正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1049">The format specification in <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1050">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1050">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1051">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1051">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1, object arg2, object arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1, object arg2, object arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object, arg2 As Object, arg3 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2, System::Object ^ arg3);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj * obj * obj * obj -&gt; unit" Usage="System.Console.Write (format, arg0, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
        <Parameter Name="arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="4b418-1052">複合書式設定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1052">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="4b418-1053">
            <c>format</c> を使用して書き込む最初のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1053">The first object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="4b418-1054">
            <c>format</c> を使用して書き込む 2 番目のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1054">The second object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="4b418-1055">
            <c>format</c> を使用して書き込む 3 番目のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1055">The third object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="4b418-1056">
            <c>format</c> を使用して書き込む 4 番目のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1056">The fourth object to write using <c>format</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1057">指定した書式情報を使用して、指定したオブジェクトのテキスト表現と可変長パラメーター リストを標準出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1057">Writes the text representation of the specified objects and variable-length parameter list to the standard output stream using the specified format information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="4b418-1058">この API は、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="4b418-1058">This API is not CLS-compliant.</span></span> <span data-ttu-id="4b418-1059">CLS 準拠の代わりとして <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> を使用できます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1059">The CLS-compliant alternative is <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4b418-1060">C# および Visual Basic のコンパイラへの呼び出しとして、このメソッドの呼び出しを自動的に解決<xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1060">The C# and Visual Basic compilers automatically resolve a call to this method as a call to <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4b418-1061">このメソッドを使用して、[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)をテキスト形式のオブジェクトの値に変換し、その表現を文字列に埋め込む .NET Framework の。</span><span class="sxs-lookup"><span data-stu-id="4b418-1061">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="4b418-1062">結果の文字列は、出力ストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1062">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="4b418-1063">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1063">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="4b418-1064">書式設定プロセスでは、対応するオブジェクトの値のテキスト形式で各書式項目が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1064">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="4b418-1065">書式指定項目の構文は`{`*インデックス*[`,`*配置*] [`:`*formatString*]`}`を指定します、必須のインデックス、オプションの長さと、書式設定されたテキストの配置、およびオプションの対応するオブジェクトの値の書式を設定する方法を制御する書式指定子文字の文字列。</span><span class="sxs-lookup"><span data-stu-id="4b418-1065">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="4b418-1066">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1066">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="4b418-1067">などのメソッドでサポートされている複合書式指定機能の詳細については<xref:System.String.Format%2A>、 <xref:System.Text.StringBuilder.AppendFormat%2A>、および一部のオーバー ロードの<xref:System.Console.WriteLine%2A>を参照してください[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1067">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="4b418-1068">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1068">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1069">についての日付と時刻の書式指定子の詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1069">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1070">列挙型書式指定子の詳細については、次を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1070">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1071">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1071">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-1072">次の例では、変数パラメーターの使用、<xref:System.Console.Write%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1072">The following example illustrates the use of variable parameters with the <xref:System.Console.Write%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="4b418-1073">メソッドは、複合書式指定文字列と 5 つの書式指定項目で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1073">The method is called with a composite format string and five format items.</span></span>  
  
 [!code-cpp[System.Console.Write#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.write/cpp/con_write.cpp#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1074">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1074">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b418-1075">
            <paramref name="format" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1075">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4b418-1076">
            <paramref name="format" /> の書式指定が正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1076">The format specification in <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1077">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1077">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1078">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1078">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <span data-ttu-id="4b418-1079">
            <para>このメソッドが設定されて、<see langword="vararg" />キーワードで、可変個のパラメーターをサポートしていることを意味します。Visual C からメソッドを呼び出すことができますが、c# または Visual Basic コードから呼び出せることはできません。C# および Visual Basic のコンパイラへの呼び出しを解決する<see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" />呼び出しとして<see cref="M:System.Console.Write(System.String,System.Object[])" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1079">
              <para>This method is marked with the <see langword="vararg" /> keyword, which means that it supports a variable number of parameters. The method can be called from Visual C++, but it cannot be called from C# or Visual Basic code. The C# and Visual Basic compilers resolve calls to <see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /> as calls to <see cref="M:System.Console.Write(System.String,System.Object[])" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b418-1080">指定したデータを標準出力ストリームに書き込み、続けて現在の行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1080">Writes the specified data, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1081">既定の行終端記号がキャリッジ リターンとライン フィードの値の文字列 (c# の場合は、"\r\n"または`vbCrLf`Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="4b418-1081">The default line terminator is a string whose value is a carriage return followed by a line feed ("\r\n" in C#, or `vbCrLf` in Visual Basic).</span></span> <span data-ttu-id="4b418-1082">設定して、行終端記号を変更することができます、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>のプロパティ、<xref:System.Console.Out%2A>プロパティを別の文字列にします。</span><span class="sxs-lookup"><span data-stu-id="4b418-1082">You can change the line terminator by setting the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property of the <xref:System.Console.Out%2A> property to another string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine();" />
      <MemberSignature Language="F#" Value="static member WriteLine : unit -&gt; unit" Usage="System.Console.WriteLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b418-1083">現在の行終端記号を標準出力ストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1083">Writes the current line terminator to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1084">既定の行終端記号がキャリッジ リターンとライン フィードの値の文字列 (c# の場合は、"\r\n"または`vbCrLf`Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="4b418-1084">The default line terminator is a string whose value is a carriage return followed by a line feed ("\r\n" in C#, or `vbCrLf` in Visual Basic).</span></span> <span data-ttu-id="4b418-1085">設定して、行終端記号を変更することができます、<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>のプロパティ、<xref:System.Console.Out%2A>プロパティを別の文字列にします。</span><span class="sxs-lookup"><span data-stu-id="4b418-1085">You can change the line terminator by setting the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property of the <xref:System.Console.Out%2A> property to another string.</span></span> <span data-ttu-id="4b418-1086">具体的な例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1086">The example provides an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-1087">例は、"\r\n"の既定値からの行終端記号の変更または`vbCrLf`"\r\n\r\n"にまたは`vbCrLf`  + `vbCrLf`します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1087">The example changes the line terminator from its default value of "\r\n" or `vbCrLf` to "\r\n\r\n" or `vbCrLf` + `vbCrLf`.</span></span> <span data-ttu-id="4b418-1088">呼び出して、<xref:System.Console.WriteLine>と<xref:System.Console.WriteLine%28System.String%29>コンソールに出力を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1088">It then calls the <xref:System.Console.WriteLine> and <xref:System.Console.WriteLine%28System.String%29> methods to display output to the console.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/newline1.cpp#2)]
 [!code-csharp[System.Console.WriteLine#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/newline1.cs#2)]
 [!code-vb[System.Console.WriteLine#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/newline1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1089">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1089">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1090">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1090">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1091">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1091">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="P:System.IO.TextWriter.NewLine" />
        <altmember cref="P:System.Console.Out" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(bool value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : bool -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-1092">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1092">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1093">指定した Boolean 値のテキスト形式を標準出力ストリームに書き込み、続けて現在の行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1093">Writes the text representation of the specified Boolean value, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1094">テキスト表現`value`呼び出しによって生成される、<xref:System.Boolean.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1094">The text representation of `value` is produced by calling the <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4b418-1095">行終端記号の詳細については、の「解説」を参照してください、<xref:System.Console.WriteLine%2A>パラメーターをとらないメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1095">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-1096">次の例は、10 個の整数の乱数を生成しを使用して、<xref:System.Console.WriteLine%28System.Boolean%29?displayProperty=nameWithType>でもいるかどうかを指定するメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1096">The following example generates ten random integers and uses the <xref:System.Console.WriteLine%28System.Boolean%29?displayProperty=nameWithType> method to indicate whether they are even.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_boolean1.cpp#4)]
 [!code-csharp[System.Console.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/writeline_boolean1.cs#4)]
 [!code-vb[System.Console.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/writeline_boolean1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1097">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1097">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1098">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1098">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1099">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1099">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(char value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : char -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-1100">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1100">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1101">指定した Unicode 文字を標準出力ストリームに書き込み、続けて現在の行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1101">Writes the specified Unicode character, followed by the current line terminator, value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1102">行終端記号の詳細については、の「解説」を参照してください、<xref:System.Console.WriteLine%2A>パラメーターをとらないメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1102">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-1103">次の例は、18% ヒントを計算し、使用するヒント電卓、<xref:System.Console.WriteLine%2A>元の料金の金額、チップの金額や合計金額を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1103">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="4b418-1104">例は、コンソール アプリケーションをユーザーにコマンド ライン パラメーターとして元の料金の金額を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-1104">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1105">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1105">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1106">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1106">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1107">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1107">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="static member WriteLine : char[] -&gt; unit" Usage="System.Console.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="4b418-1108">Unicode 文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1108">A Unicode character array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1109">指定した Unicode 文字配列を標準出力ストリームに書き込み、続けて現在の行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1109">Writes the specified array of Unicode characters, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1110">行終端記号の詳細については、の「解説」を参照してください、<xref:System.Console.WriteLine%2A>パラメーターをとらないメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1110">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1111">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1111">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1112">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1112">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1113">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1113">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : decimal -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-1114">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1114">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1115">指定した <see cref="T:System.Decimal" /> 値のテキスト形式を標準出力ストリームに書き込み、続けて現在の行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1115">Writes the text representation of the specified <see cref="T:System.Decimal" /> value, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1116">テキスト表現`value`呼び出しによって生成される、<xref:System.Decimal.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1116">The text representation of `value` is produced by calling the <xref:System.Decimal.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4b418-1117">行終端記号の詳細については、の「解説」を参照してください、<xref:System.Console.WriteLine%2A>パラメーターをとらないメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1117">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-1118">次の例は、18% ヒントを計算し、使用するヒント電卓、<xref:System.Console.WriteLine%2A>元の料金の金額、チップの金額や合計金額を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1118">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="4b418-1119">例は、コンソール アプリケーションをユーザーにコマンド ライン パラメーターとして元の料金の金額を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-1119">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1120">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1120">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1121">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1121">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1122">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1122">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(double value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : double -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-1123">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1123">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1124">指定した倍精度浮動小数点値のテキスト形式を標準出力ストリームに書き込み、続けて現在の行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1124">Writes the text representation of the specified double-precision floating-point value, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1125">テキスト表現`value`呼び出しによって生成される、<xref:System.Double.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1125">The text representation of `value` is produced by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4b418-1126">行終端記号の詳細については、の「解説」を参照してください、<xref:System.Console.WriteLine%2A>パラメーターをとらないメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1126">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-1127">次の例は、18% ヒントを計算し、使用するヒント電卓、<xref:System.Console.WriteLine%2A>元の料金の金額、チップの金額や合計金額を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1127">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="4b418-1128">例は、コンソール アプリケーションをユーザーにコマンド ライン パラメーターとして元の料金の金額を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-1128">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1129">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1129">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1130">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1130">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1131">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1131">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(int value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : int -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-1132">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1132">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1133">指定した 32 ビット符号付き整数値のテキスト形式を標準出力ストリームに書き込み、続けて現在の行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1133">Writes the text representation of the specified 32-bit signed integer value, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1134">テキスト表現`value`呼び出しによって生成される、<xref:System.Int32.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1134">The text representation of `value` is produced by calling the <xref:System.Int32.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4b418-1135">行終端記号の詳細については、の「解説」を参照してください、<xref:System.Console.WriteLine%2A>パラメーターをとらないメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1135">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-1136">次の例は、18% ヒントを計算し、使用するヒント電卓、<xref:System.Console.WriteLine%2A>元の料金の金額、チップの金額や合計金額を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1136">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="4b418-1137">例は、コンソール アプリケーションをユーザーにコマンド ライン パラメーターとして元の料金の金額を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-1137">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1138">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1138">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1139">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1139">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1140">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1140">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(long value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : int64 -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-1141">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1141">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1142">指定した 64 ビット符号付き整数値のテキスト形式を標準出力ストリームに書き込み、続けて現在の行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1142">Writes the text representation of the specified 64-bit signed integer value, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1143">テキスト表現`value`呼び出しによって生成される、<xref:System.Int64.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1143">The text representation of `value` is produced by calling the <xref:System.Int64.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4b418-1144">行終端記号の詳細については、の「解説」を参照してください、<xref:System.Console.WriteLine%2A>パラメーターをとらないメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1144">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-1145">次の例は、18% ヒントを計算し、使用するヒント電卓、<xref:System.Console.WriteLine%2A>元の料金の金額、チップの金額や合計金額を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1145">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="4b418-1146">例は、コンソール アプリケーションをユーザーにコマンド ライン パラメーターとして元の料金の金額を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-1146">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1147">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1147">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1148">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1148">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1149">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1149">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-1150">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1150">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1151">指定したオブジェクトのテキスト形式を標準出力ストリームに書き込み、続けて現在の行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1151">Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1152">`value` が `null` の場合は、行終端記号だけを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1152">If `value` is `null`, only the line terminator is written.</span></span> <span data-ttu-id="4b418-1153">それ以外の場合、`ToString`メソッドの`value`文字列表現を生成するために呼び出されると、結果の文字列が標準出力ストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1153">Otherwise, the `ToString` method of `value` is called to produce its string representation, and the resulting string is written to the standard output stream.</span></span>  
  
 <span data-ttu-id="4b418-1154">行終端記号の詳細については、の「解説」を参照してください、<xref:System.Console.WriteLine%2A>パラメーターをとらないメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1154">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-1155">次の例では、<xref:System.Console.WriteLine%28System.Object%29>コンソールに、オブジェクトの配列内の各値を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1155">The following example uses the <xref:System.Console.WriteLine%28System.Object%29> method to display each value in an object array to the console.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_obj1.cpp#3)]
 [!code-csharp[System.Console.WriteLine#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/writeline_obj1.cs#3)]
 [!code-vb[System.Console.WriteLine#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/writeline_obj1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1156">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1156">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1157">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1157">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1158">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1158">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(float value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : single -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-1159">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1159">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1160">指定した単精度浮動小数点値のテキスト形式を標準出力ストリームに書き込み、続けて現在の行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1160">Writes the text representation of the specified single-precision floating-point value, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1161">テキスト表現`value`呼び出しによって生成される、<xref:System.Single.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1161">The text representation of `value` is produced by calling the <xref:System.Single.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4b418-1162">行終端記号の詳細については、の「解説」を参照してください、<xref:System.Console.WriteLine%2A>パラメーターをとらないメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1162">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-1163">次の例は、18% ヒントを計算し、使用するヒント電卓、<xref:System.Console.WriteLine%2A>元の料金の金額、チップの金額や合計金額を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1163">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="4b418-1164">例は、コンソール アプリケーションをユーザーにコマンド ライン パラメーターとして元の料金の金額を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-1164">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1165">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1165">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1166">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1166">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1167">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1167">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-1168">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1168">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1169">指定した文字列値を標準出力ストリームに書き込み、続けて現在の行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1169">Writes the specified string value, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1170">値が場合`null`、行終端記号だけが標準出力ストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1170">If value is `null`, only the line terminator is written to the standard output stream.</span></span>  
  
 <span data-ttu-id="4b418-1171">行終端記号の詳細については、の「解説」を参照してください、<xref:System.Console.WriteLine>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1171">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-1172">例は、"\r\n"の既定値からの行終端記号の変更または`vbCrLf`"\r\n\r\n"にまたは`vbCrLf`  + `vbCrLf`します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1172">The example changes the line terminator from its default value of "\r\n" or `vbCrLf` to "\r\n\r\n" or `vbCrLf` + `vbCrLf`.</span></span> <span data-ttu-id="4b418-1173">呼び出して、<xref:System.Console.WriteLine>と<xref:System.Console.WriteLine%28System.String%29>コンソールに出力を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1173">It then calls the <xref:System.Console.WriteLine> and <xref:System.Console.WriteLine%28System.String%29> methods to display output to the console.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/newline1.cpp#2)]
 [!code-csharp[System.Console.WriteLine#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/newline1.cs#2)]
 [!code-vb[System.Console.WriteLine#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/newline1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1174">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1174">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1175">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1175">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1176">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1176">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : uint32 -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-1177">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1177">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1178">指定した 32 ビット符号なし整数値のテキスト形式を標準出力ストリームに書き込み、続けて現在の行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1178">Writes the text representation of the specified 32-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1179">テキスト表現`value`呼び出しによって生成される、<xref:System.UInt32.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1179">The text representation of `value` is produced by calling the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4b418-1180">行終端記号の詳細については、の「解説」を参照してください、<xref:System.Console.WriteLine%2A>パラメーターをとらないメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1180">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-1181">次の例は、18% ヒントを計算し、使用するヒント電卓、<xref:System.Console.WriteLine%2A>元の料金の金額、チップの金額や合計金額を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1181">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="4b418-1182">例は、コンソール アプリケーションをユーザーにコマンド ライン パラメーターとして元の料金の金額を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-1182">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1183">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1183">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1184">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1184">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1185">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1185">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : uint64 -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b418-1186">書き込む値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1186">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1187">指定した 64 ビット符号なし整数値のテキスト形式を標準出力ストリームに書き込み、続けて現在の行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1187">Writes the text representation of the specified 64-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1188">テキスト表現`value`呼び出しによって生成される、<xref:System.UInt64.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1188">The text representation of `value` is produced by calling the <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4b418-1189">行終端記号の詳細については、の「解説」を参照してください、<xref:System.Console.WriteLine%2A>パラメーターをとらないメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1189">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-1190">次の例は、18% ヒントを計算し、使用するヒント電卓、<xref:System.Console.WriteLine%2A>元の料金の金額、チップの金額や合計金額を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1190">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="4b418-1191">例は、コンソール アプリケーションをユーザーにコマンド ライン パラメーターとして元の料金の金額を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-1191">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1192">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1192">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1193">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1193">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1194">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1194">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj -&gt; unit" Usage="System.Console.WriteLine (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="4b418-1195">複合書式設定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1195">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="4b418-1196">
            <c>format</c> を使用して書き込むオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1196">An object to write using <c>format</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1197">指定した書式情報を使用して、指定したオブジェクトのテキスト表現を標準出力ストリームに書き込み、続けて現在の行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1197">Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream using the specified format information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1198">このメソッドを使用して、[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)をテキスト形式のオブジェクトの値に変換し、その表現を文字列に埋め込む .NET Framework の。</span><span class="sxs-lookup"><span data-stu-id="4b418-1198">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="4b418-1199">結果の文字列は、出力ストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1199">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="4b418-1200">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1200">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="4b418-1201">書式設定プロセスでは、対応するオブジェクトの値のテキスト形式で各書式項目が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1201">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="4b418-1202">書式指定項目の構文は`{`*インデックス*[`,`*配置*] [`:`*formatString*]`}`を指定します、必須のインデックス、オプションの長さと、書式設定されたテキストの配置、およびオプションの対応するオブジェクトの値の書式を設定する方法を制御する書式指定子文字の文字列。</span><span class="sxs-lookup"><span data-stu-id="4b418-1202">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="4b418-1203">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1203">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="4b418-1204">などのメソッドでサポートされている複合書式指定機能の詳細については<xref:System.String.Format%2A>、 <xref:System.Text.StringBuilder.AppendFormat%2A>、および一部のオーバー ロードの<xref:System.Console.WriteLine%2A>を参照してください[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1204">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="4b418-1205">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1205">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1206">についての日付と時刻の書式指定子の詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1206">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1207">列挙型書式指定子の詳細については、次を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1207">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1208">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1208">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="4b418-1209">行終端記号の詳細については、の「解説」を参照してください、<xref:System.Console.WriteLine%2A>パラメーターをとらないメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1209">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-1210">次の例では、<xref:System.Console.WriteLine%28System.String%2CSystem.Object%29>ランダムに生成された 5 つを表示するメソッドを<xref:System.Boolean>値。</span><span class="sxs-lookup"><span data-stu-id="4b418-1210">The following example calls the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29> method to display five randomly generated <xref:System.Boolean> values.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/WriteLine6.cs#6)]
 [!code-vb[System.Console.WriteLine#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/WriteLine6.vb#6)]  
  
 <span data-ttu-id="4b418-1211">次の例では、<xref:System.Console.WriteLine%28System.String%2CSystem.Object%29>メソッドを現在の日付を表示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1211">The following example calls the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29> method to display the current date.</span></span>   <span data-ttu-id="4b418-1212">項目の形式に注意してください、`format`引数には、"D"が使用されます。[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)、現在のカルチャの長い日付形式で日付を表示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1212">Note that the format item in the `format` argument uses the "D" [standard date and time format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) to display the date in the long date format of the current culture.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/WriteLine7.cs#7)]
 [!code-vb[System.Console.WriteLine#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/WriteLine7.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1213">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1213">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b418-1214">
            <paramref name="format" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1214">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4b418-1215">
            <paramref name="format" /> の書式指定が正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1215">The format specification in <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1216">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1216">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1217">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1217">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj[] -&gt; unit" Usage="System.Console.WriteLine (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="4b418-1218">複合書式設定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1218">A composite format string.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="4b418-1219">
            <c>format</c> を使用して書き込むオブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1219">An array of objects to write using <c>format</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1220">指定した書式情報を使用して、指定したオブジェクト配列のテキスト表現を標準出力ストリームに書き込み、続けて現在の行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1220">Writes the text representation of the specified array of objects, followed by the current line terminator, to the standard output stream using the specified format information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1221">このメソッドを使用して、[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)をテキスト形式のオブジェクトの値に変換し、その表現を文字列に埋め込む .NET Framework の。</span><span class="sxs-lookup"><span data-stu-id="4b418-1221">This method uses the  [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="4b418-1222">結果の文字列は、出力ストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1222">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="4b418-1223">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1223">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="4b418-1224">書式設定プロセスでは、対応するオブジェクトの値のテキスト形式で各書式項目が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1224">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="4b418-1225">書式指定項目の構文は`{`*インデックス*[`,`*配置*] [`:`*formatString*]`}`を指定します、必須のインデックス、オプションの長さと、書式設定されたテキストの配置、およびオプションの対応するオブジェクトの値の書式を設定する方法を制御する書式指定子文字の文字列。</span><span class="sxs-lookup"><span data-stu-id="4b418-1225">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="4b418-1226">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1226">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="4b418-1227">などのメソッドでサポートされている複合書式指定機能の詳細については<xref:System.String.Format%2A>、 <xref:System.Text.StringBuilder.AppendFormat%2A>、および一部のオーバー ロードの<xref:System.Console.WriteLine%2A>を参照してください[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1227">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="4b418-1228">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1228">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1229">についての日付と時刻の書式指定子の詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1229">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1230">列挙型書式指定子の詳細については、次を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1230">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1231">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1231">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="4b418-1232">行終端記号の詳細については、の「解説」を参照してください、<xref:System.Console.WriteLine%2A>パラメーターをとらないメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1232">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-1233">次の例では、数値、日付、および列挙体の標準的な書式指定子を示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1233">The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="4b418-1234">次の例は、18% ヒントを計算し、使用するヒント電卓、<xref:System.Console.WriteLine%2A>元の料金の金額、チップの金額や合計金額を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1234">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="4b418-1235">例は、コンソール アプリケーションをユーザーにコマンド ライン パラメーターとして元の料金の金額を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-1235">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1236">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1236">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b418-1237">
            <paramref name="format" /> または <paramref name="arg" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1237">
              <paramref name="format" /> or <paramref name="arg" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4b418-1238">
            <paramref name="format" /> の書式指定が正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1238">The format specification in <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1239">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1239">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1240">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1240">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <span data-ttu-id="4b418-1241">
            <para>このメソッドは、C++ コードでは呼び出されません。C++ コンパイラへの呼び出しを解決する[System.Console.WriteLine](xref:System.Console.WriteLine*)への呼び出しとして文字列と 4 つ以上のオブジェクト パラメーターの一覧を含む<see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" />します。呼び出しを解決[System.Console.WriteLine](xref:System.Console.WriteLine*)への呼び出しとして文字列とオブジェクトの配列を含む<see cref="M:System.Console.WriteLine(System.String,System.Object)" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1241">
              <para>This method is not called by C++ code. The C++ compiler resolves calls to [System.Console.WriteLine](xref:System.Console.WriteLine*) that include a string and a list of four or more object parameters as a call to <see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" />. It resolves calls to [System.Console.WriteLine](xref:System.Console.WriteLine*) that include a string and an object array as a call to <see cref="M:System.Console.WriteLine(System.String,System.Object)" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="static member WriteLine : char[] * int * int -&gt; unit" Usage="System.Console.WriteLine (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="4b418-1242">Unicode 文字の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1242">An array of Unicode characters.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4b418-1243">
            <c>buffer</c> 内の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1243">The starting position in <c>buffer</c>.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4b418-1244">書き込む文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1244">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1245">指定した Unicode 文字の部分配列を標準出力ストリームに書き込み、続けて現在の行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1245">Writes the specified subarray of Unicode characters, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1246">このメソッドは書き込みます`count`位置から始まる文字`index`の`buffer`を標準出力ストリームにします。</span><span class="sxs-lookup"><span data-stu-id="4b418-1246">This method writes `count` characters starting at position `index` of `buffer` to the standard output stream.</span></span>  
  
 <span data-ttu-id="4b418-1247">行終端記号の詳細については、の「解説」を参照してください、<xref:System.Console.WriteLine%2A>パラメーターをとらないメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1247">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b418-1248">
            <paramref name="buffer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1248">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b418-1249">
            <paramref name="index" /> または <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1249">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4b418-1250">
            <paramref name="index" /> と <paramref name="count" /> の合計が指定する位置は、<paramref name="buffer" /> 内ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1250">
              <paramref name="index" /> plus <paramref name="count" /> specify a position that is not within <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1251">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1251">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1252">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1252">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1253">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1253">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj * obj -&gt; unit" Usage="System.Console.WriteLine (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="4b418-1254">複合書式設定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1254">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="4b418-1255">
            <c>format</c> を使用して書き込む最初のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1255">The first object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="4b418-1256">
            <c>format</c> を使用して書き込む 2 番目のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1256">The second object to write using <c>format</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1257">指定した書式情報を使用して、指定したオブジェクトのテキスト表現を標準出力ストリームに書き込み、続けて現在の行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1257">Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1258">このメソッドを使用して、[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)をテキスト形式のオブジェクトの値に変換し、その表現を文字列に埋め込む .NET Framework の。</span><span class="sxs-lookup"><span data-stu-id="4b418-1258">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="4b418-1259">結果の文字列は、出力ストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1259">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="4b418-1260">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1260">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="4b418-1261">書式設定プロセスでは、対応するオブジェクトの値のテキスト形式で各書式項目が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1261">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="4b418-1262">書式指定項目の構文は`{`*インデックス*[`,`*配置*] [`:`*formatString*]`}`を指定します、必須のインデックス、オプションの長さと、書式設定されたテキストの配置、およびオプションの対応するオブジェクトの値の書式を設定する方法を制御する書式指定子文字の文字列。</span><span class="sxs-lookup"><span data-stu-id="4b418-1262">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="4b418-1263">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1263">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="4b418-1264">などのメソッドでサポートされている複合書式指定機能の詳細については<xref:System.String.Format%2A>、 <xref:System.Text.StringBuilder.AppendFormat%2A>、および一部のオーバー ロードの<xref:System.Console.WriteLine%2A>を参照してください[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1264">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="4b418-1265">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1265">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1266">についての日付と時刻の書式指定子の詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1266">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1267">列挙型書式指定子の詳細については、次を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1267">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1268">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1268">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="4b418-1269">行終端記号の詳細については、の「解説」を参照してください、<xref:System.Console.WriteLine%2A>パラメーターをとらないメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1269">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-1270">次の例では、数値、日付、および列挙体の標準的な書式指定子を示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1270">The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="4b418-1271">次の例は、18% ヒントを計算し、使用するヒント電卓、<xref:System.Console.WriteLine%2A>元の料金の金額、チップの金額や合計金額を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1271">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="4b418-1272">例は、コンソール アプリケーションをユーザーにコマンド ライン パラメーターとして元の料金の金額を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-1272">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1273">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1273">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b418-1274">
            <paramref name="format" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1274">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4b418-1275">
            <paramref name="format" /> の書式指定が正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1275">The format specification in <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1276">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1276">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1277">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1277">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj * obj * obj -&gt; unit" Usage="System.Console.WriteLine (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="4b418-1278">複合書式設定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1278">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="4b418-1279">
            <c>format</c> を使用して書き込む最初のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1279">The first object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="4b418-1280">
            <c>format</c> を使用して書き込む 2 番目のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1280">The second object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="4b418-1281">
            <c>format</c> を使用して書き込む 3 番目のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1281">The third object to write using <c>format</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1282">指定した書式情報を使用して、指定したオブジェクトのテキスト表現を標準出力ストリームに書き込み、続けて現在の行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1282">Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b418-1283">このメソッドを使用して、[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)をテキスト形式のオブジェクトの値に変換し、その表現を文字列に埋め込む .NET Framework の。</span><span class="sxs-lookup"><span data-stu-id="4b418-1283">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="4b418-1284">結果の文字列は、出力ストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1284">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="4b418-1285">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1285">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="4b418-1286">書式設定プロセスでは、対応するオブジェクトの値のテキスト形式で各書式項目が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1286">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="4b418-1287">書式指定項目の構文は`{`*インデックス*[`,`*配置*] [`:`*formatString*]`}`を指定します、必須のインデックス、オプションの長さと、書式設定されたテキストの配置、およびオプションの対応するオブジェクトの値の書式を設定する方法を制御する書式指定子文字の文字列。</span><span class="sxs-lookup"><span data-stu-id="4b418-1287">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="4b418-1288">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1288">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="4b418-1289">などのメソッドでサポートされている複合書式指定機能の詳細については<xref:System.String.Format%2A>、 <xref:System.Text.StringBuilder.AppendFormat%2A>、および一部のオーバー ロードの<xref:System.Console.WriteLine%2A>を参照してください[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1289">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="4b418-1290">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1290">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1291">についての日付と時刻の書式指定子の詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1291">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1292">列挙型書式指定子の詳細については、次を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1292">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1293">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1293">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="4b418-1294">行終端記号の詳細については、の「解説」を参照してください、<xref:System.Console.WriteLine%2A>パラメーターをとらないメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1294">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-1295">次の例では、数値、日付、および列挙体の標準的な書式指定子を示します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1295">The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="4b418-1296">次の例は、18% ヒントを計算し、使用するヒント電卓、<xref:System.Console.WriteLine%2A>元の料金の金額、チップの金額や合計金額を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1296">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="4b418-1297">例は、コンソール アプリケーションをユーザーにコマンド ライン パラメーターとして元の料金の金額を入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4b418-1297">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1298">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1298">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b418-1299">
            <paramref name="format" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1299">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4b418-1300">
            <paramref name="format" /> の書式指定が正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1300">The format specification in <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1301">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1301">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1302">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1302">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1, object arg2, object arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1, object arg2, object arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object, arg2 As Object, arg3 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2, System::Object ^ arg3);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj * obj * obj * obj -&gt; unit" Usage="System.Console.WriteLine (format, arg0, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
        <Parameter Name="arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="4b418-1303">複合書式設定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1303">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="4b418-1304">
            <c>format</c> を使用して書き込む最初のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1304">The first object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="4b418-1305">
            <c>format</c> を使用して書き込む 2 番目のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1305">The second object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="4b418-1306">
            <c>format</c> を使用して書き込む 3 番目のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1306">The third object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="4b418-1307">
            <c>format</c> を使用して書き込む 4 番目のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1307">The fourth object to write using <c>format</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b418-1308">指定した書式情報を使用して、指定したオブジェクトのテキスト表現と可変長パラメーター リストを標準出力ストリームに書き込み、続けて現在の行終端記号を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1308">Writes the text representation of the specified objects and variable-length parameter list, followed by the current line terminator, to the standard output stream using the specified format information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="4b418-1309">この API は、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="4b418-1309">This API is not CLS-compliant.</span></span> <span data-ttu-id="4b418-1310">CLS 準拠の代わりとして <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> を使用できます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1310">The CLS-compliant alternative is <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4b418-1311">C# および Visual Basic のコンパイラへの呼び出しとして、このメソッドの呼び出しを自動的に解決<xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1311">The C# and Visual Basic compilers automatically resolve a call to this method as a call to <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4b418-1312">このメソッドを使用して、[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)をテキスト形式のオブジェクトの値に変換し、その表現を文字列に埋め込む .NET Framework の。</span><span class="sxs-lookup"><span data-stu-id="4b418-1312">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="4b418-1313">結果の文字列は、出力ストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1313">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="4b418-1314">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1314">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="4b418-1315">書式設定プロセスでは、対応するオブジェクトの値のテキスト形式で各書式項目が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1315">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="4b418-1316">書式指定項目の構文は`{`*インデックス*[`,`*配置*] [`:`*formatString*]`}`を指定します、必須のインデックス、オプションの長さと、書式設定されたテキストの配置、およびオプションの対応するオブジェクトの値の書式を設定する方法を制御する書式指定子文字の文字列。</span><span class="sxs-lookup"><span data-stu-id="4b418-1316">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="4b418-1317">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1317">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="4b418-1318">などのメソッドでサポートされている複合書式指定機能の詳細については<xref:System.String.Format%2A>、 <xref:System.Text.StringBuilder.AppendFormat%2A>、および一部のオーバー ロードの<xref:System.Console.WriteLine%2A>を参照してください[複合書式指定](~/docs/standard/base-types/composite-formatting.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1318">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="4b418-1319">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1319">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1320">についての日付と時刻の書式指定子の詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1320">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1321">列挙型書式指定子の詳細については、次を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1321">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4b418-1322">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="4b418-1322">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="4b418-1323">行終端記号の詳細については、の「解説」を参照してください、<xref:System.Console.WriteLine%2A>パラメーターをとらないメソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1323">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b418-1324">次の例では、可変個の引数での使用、<xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="4b418-1324">The following example illustrates the use of variable arguments with the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="4b418-1325">メソッドは、複合書式指定文字列と 5 つの書式指定項目で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4b418-1325">The method is called with a composite format string and five format items.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_vararg.cpp#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4b418-1326">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1326">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b418-1327">
            <paramref name="format" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1327">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4b418-1328">
            <paramref name="format" /> の書式指定が正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1328">The format specification in <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b418-1329">セーフ トップレベル ウィンドウとセーフ サブウィンドウの中に変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1329">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="4b418-1330">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1330">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <span data-ttu-id="4b418-1331">
            <para>このメソッドが設定されて、<see langword="vararg" />キーワードで、可変個のパラメーターをサポートしていることを意味します。Visual C からメソッドを呼び出すことができますが、c# または Visual Basic コードから呼び出せることはできません。C# および Visual Basic のコンパイラへの呼び出しを解決する<see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" />呼び出しとして<see cref="M:System.Console.WriteLine(System.String,System.Object[])" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4b418-1331">
              <para>This method is marked with the <see langword="vararg" /> keyword, which means that it supports a variable number of parameters. The method can be called from Visual C++, but it cannot be called from C# or Visual Basic code. The C# and Visual Basic compilers resolve calls to <see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /> as calls to <see cref="M:System.Console.WriteLine(System.String,System.Object[])" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>