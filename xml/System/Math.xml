<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Math.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56a39de6b97b3c66a627389533d2be8301980ccdd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a39de6b97b3c66a627389533d2be8301980ccdd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Math">
          <source>Provides constants and static methods for trigonometric, logarithmic, and other common mathematical functions.</source>
          <target state="translated">三角関数や対数関数などの一般的な数値関数の定数と静的メソッドを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The following example uses several mathematical and trigonometric functions from the <ph id="ph1">&lt;xref:System.Math&gt;</ph> class to calculate the inner angles of a trapezoid.</source>
          <target state="translated">次の例では、いくつか数学関数と三角関数から、<ph id="ph1">&lt;xref:System.Math&gt;</ph>台形の内部の角度を計算するクラス。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Math">
          <source>Returns the absolute value of a specified number.</source>
          <target state="translated">指定された数値の絶対値を返します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Decimal)">
          <source>A number that is greater than or equal to <ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>, but less than or equal to <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> 以上で、<ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph> 以下の数値。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Decimal)">
          <source>Returns the absolute value of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> number.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 数値の絶対値を返します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Decimal)">
          <source>A decimal number, x, such that 0 ≤ x ≤<ph id="ph1">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">0 ≤ x ≤<ph id="ph1">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph> の 10 進数 x。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Decimal)">
          <source>The absolute value of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> is its numeric value without its sign.</source>
          <target state="translated">絶対値を<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>符号なし数値の値です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Decimal)">
          <source>For example, the absolute value of both 1.2 and -1.2 is 1.2.</source>
          <target state="translated">たとえば、1.2 および-1.2 の両方の絶対値は、1.2 です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Decimal)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Math.Abs%28System.Decimal%29&gt;</ph> method to get the absolute value of a number of <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Math.Abs%28System.Decimal%29&gt;</ph>の数値の絶対値を取得するメソッド<ph id="ph2">&lt;xref:System.Decimal&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Double)">
          <source>A number that is greater than or equal to <ph id="ph1">&lt;see cref="F:System.Double.MinValue" /&gt;</ph>, but less than or equal to <ph id="ph2">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Double.MinValue" /&gt;</ph> 以上で、<ph id="ph2">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph> 以下の数値。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Double)">
          <source>Returns the absolute value of a double-precision floating-point number.</source>
          <target state="translated">倍精度浮動小数点数の絶対値を返します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Double)">
          <source>A double-precision floating-point number, x, such that 0 ≤ x ≤<ph id="ph1">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</source>
          <target state="translated">0 ≤ x ≤<ph id="ph1">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph> の倍精度浮動小数点数 x。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Double)">
          <source>The absolute value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> is its numeric value without its sign.</source>
          <target state="translated">絶対値を<ph id="ph1">&lt;xref:System.Double&gt;</ph>符号なし数値の値です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Double)">
          <source>For example, the absolute value of both 1.2e03 and -1.2e03 is 1.2e03.</source>
          <target state="translated">たとえば、1.2e03 と 1.2e03 の両方の絶対値は、1.2e03 です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Double)">
          <source>If <ph id="ph1">`value`</ph> is equal to <ph id="ph2">&lt;xref:System.Double.NegativeInfinity&gt;</ph> or <ph id="ph3">&lt;xref:System.Double.PositiveInfinity&gt;</ph>, the return value is <ph id="ph4">&lt;xref:System.Double.PositiveInfinity&gt;</ph>.</source>
          <target state="translated">場合<ph id="ph1">`value`</ph>と等しい<ph id="ph2">&lt;xref:System.Double.NegativeInfinity&gt;</ph>または<ph id="ph3">&lt;xref:System.Double.PositiveInfinity&gt;</ph>、戻り値は<ph id="ph4">&lt;xref:System.Double.PositiveInfinity&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Double)">
          <source>If <ph id="ph1">`value`</ph> is equal to <ph id="ph2">&lt;xref:System.Double.NaN&gt;</ph>, the return value is <ph id="ph3">&lt;xref:System.Double.NaN&gt;</ph>.</source>
          <target state="translated">場合<ph id="ph1">`value`</ph>と等しい<ph id="ph2">&lt;xref:System.Double.NaN&gt;</ph>、戻り値は<ph id="ph3">&lt;xref:System.Double.NaN&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Double)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Math.Abs%28System.Double%29&gt;</ph> method to get the absolute value of a number of <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Math.Abs%28System.Double%29&gt;</ph>の数値の絶対値を取得するメソッド<ph id="ph2">&lt;xref:System.Double&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Int16)">
          <source>A number that is greater than <ph id="ph1">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>, but less than or equal to <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph> より大きく、<ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph> 以下の数値。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Int16)">
          <source>Returns the absolute value of a 16-bit signed integer.</source>
          <target state="translated">16 ビット符号付き整数の絶対値を返します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Int16)">
          <source>A 16-bit signed integer, x, such that 0 ≤ x ≤<ph id="ph1">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated">0 ≤ x ≤<ph id="ph1">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph> である 16 ビット符号付き整数 x。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Int16)">
          <source>The absolute value of an <ph id="ph1">&lt;xref:System.Int16&gt;</ph> is its numeric value without its sign.</source>
          <target state="translated">絶対値、<ph id="ph1">&lt;xref:System.Int16&gt;</ph>符号なし数値の値です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Int16)">
          <source>For example, the absolute value of both 123 and -123 is 123.</source>
          <target state="translated">たとえば、123 と-123 の両方の絶対値は 123 です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Int16)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Math.Abs%28System.Int16%29&gt;</ph> method to get the absolute value of a number of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> values.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Math.Abs%28System.Int16%29&gt;</ph>の数値の絶対値を取得するメソッド<ph id="ph2">&lt;xref:System.Int16&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Int16)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> equals <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> と <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph> は等しい。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Int32)">
          <source>A number that is greater than <ph id="ph1">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>, but less than or equal to <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> より大きく、<ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> 以下の数値。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Int32)">
          <source>Returns the absolute value of a 32-bit signed integer.</source>
          <target state="translated">32 ビット符号付き整数の絶対値を返します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Int32)">
          <source>A 32-bit signed integer, x, such that 0 ≤ x ≤<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">0 ≤ x ≤<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> である 32 ビット符号付き整数 x。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Int32)">
          <source>The absolute value of an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> is its numeric value without its sign.</source>
          <target state="translated">絶対値、<ph id="ph1">&lt;xref:System.Int32&gt;</ph>符号なし数値の値です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Int32)">
          <source>For example, the absolute value of both 123 and -123 is 123.</source>
          <target state="translated">たとえば、123 と-123 の両方の絶対値は 123 です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Math.Abs%28System.Int32%29&gt;</ph> method to get the absolute value of a number of <ph id="ph2">&lt;xref:System.Int32&gt;</ph> values.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Math.Abs%28System.Int32%29&gt;</ph>の数値の絶対値を取得するメソッド<ph id="ph2">&lt;xref:System.Int32&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> equals <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> と <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> は等しい。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Int64)">
          <source>A number that is greater than <ph id="ph1">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph>, but less than or equal to <ph id="ph2">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph> より大きく、<ph id="ph2">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph> 以下の数値。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Int64)">
          <source>Returns the absolute value of a 64-bit signed integer.</source>
          <target state="translated">64 ビット符号付き整数の絶対値を返します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Int64)">
          <source>A 64-bit signed integer, x, such that 0 ≤ x ≤<ph id="ph1">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated">0 ≤ x ≤<ph id="ph1">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph> である 64 ビット符号付き整数 x。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Int64)">
          <source>The absolute value of an <ph id="ph1">&lt;xref:System.Int64&gt;</ph> is its numeric value without its sign.</source>
          <target state="translated">絶対値、<ph id="ph1">&lt;xref:System.Int64&gt;</ph>符号なし数値の値です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Int64)">
          <source>For example, the absolute value of both 123 and -123 is 123.</source>
          <target state="translated">たとえば、123 と-123 の両方の絶対値は 123 です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Int64)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Math.Abs%28System.Int64%29&gt;</ph> method to get the absolute value of a number of <ph id="ph2">&lt;xref:System.Int64&gt;</ph> values.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Math.Abs%28System.Int64%29&gt;</ph>の数値の絶対値を取得するメソッド<ph id="ph2">&lt;xref:System.Int64&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Int64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> equals <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> と <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph> は等しい。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.SByte)">
          <source>A number that is greater than <ph id="ph1">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>, but less than or equal to <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph> より大きく、<ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph> 以下の数値。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.SByte)">
          <source>Returns the absolute value of an 8-bit signed integer.</source>
          <target state="translated">8 ビット符号付き整数の絶対値を返します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.SByte)">
          <source>An 8-bit signed integer, x, such that 0 ≤ x ≤<ph id="ph1">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</source>
          <target state="translated">0 ≤ x ≤<ph id="ph1">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph> である 8 ビット符号付き整数 x。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.SByte)">
          <source>The absolute value of a signed byte is its numeric value without its sign.</source>
          <target state="translated">符号付きバイトの絶対値は、符号なし数値の値です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.SByte)">
          <source>For example, the absolute value of both 12 and -12 is 12.</source>
          <target state="translated">たとえば、12 と-12 の両方の絶対値は 12 です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.SByte)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Math.Abs%28System.SByte%29&gt;</ph> method to get the absolute value of a number of <ph id="ph2">&lt;xref:System.SByte&gt;</ph> values.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Math.Abs%28System.SByte%29&gt;</ph>の数値の絶対値を取得するメソッド<ph id="ph2">&lt;xref:System.SByte&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.SByte)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> equals <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> と <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph> は等しい。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Single)">
          <source>A number that is greater than or equal to <ph id="ph1">&lt;see cref="F:System.Single.MinValue" /&gt;</ph>, but less than or equal to <ph id="ph2">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Single.MinValue" /&gt;</ph> 以上で、<ph id="ph2">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph> 以下の数値。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Single)">
          <source>Returns the absolute value of a single-precision floating-point number.</source>
          <target state="translated">単精度浮動小数点数の絶対値を返します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Math.Abs(System.Single)">
          <source>A single-precision floating-point number, x, such that 0 ≤ x ≤<ph id="ph1">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</source>
          <target state="translated">0 ≤ x ≤<ph id="ph1">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph> の単精度浮動小数点数 x。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Single)">
          <source>The absolute value of a <ph id="ph1">&lt;xref:System.Single&gt;</ph> is its numeric value without its sign.</source>
          <target state="translated">絶対値を<ph id="ph1">&lt;xref:System.Single&gt;</ph>符号なし数値の値です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Single)">
          <source>For example, the absolute value of both 1.2e-03 and -1.2e03 is 1.2e03.</source>
          <target state="translated">たとえば、値の絶対値両方 1.2 e-03 と 1.2e03 は 1.2e03 します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Single)">
          <source>If <ph id="ph1">`value`</ph> is equal to <ph id="ph2">&lt;xref:System.Single.NegativeInfinity&gt;</ph> or <ph id="ph3">&lt;xref:System.Single.PositiveInfinity&gt;</ph>, the return value is <ph id="ph4">&lt;xref:System.Single.PositiveInfinity&gt;</ph>.</source>
          <target state="translated">場合<ph id="ph1">`value`</ph>と等しい<ph id="ph2">&lt;xref:System.Single.NegativeInfinity&gt;</ph>または<ph id="ph3">&lt;xref:System.Single.PositiveInfinity&gt;</ph>、戻り値は<ph id="ph4">&lt;xref:System.Single.PositiveInfinity&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Single)">
          <source>If <ph id="ph1">`value`</ph> is equal to <ph id="ph2">&lt;xref:System.Single.NaN&gt;</ph>, the return value is <ph id="ph3">&lt;xref:System.Single.NaN&gt;</ph>.</source>
          <target state="translated">場合<ph id="ph1">`value`</ph>と等しい<ph id="ph2">&lt;xref:System.Single.NaN&gt;</ph>、戻り値は<ph id="ph3">&lt;xref:System.Single.NaN&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Abs(System.Single)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Math.Abs%28System.Single%29&gt;</ph> method to get the absolute value of a number of <ph id="ph2">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Math.Abs%28System.Single%29&gt;</ph>の数値の絶対値を取得するメソッド<ph id="ph2">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Math.Acos(System.Double)">
          <source>A number representing a cosine, where <bpt id="p1">&lt;c&gt;</bpt>d<ept id="p1">&lt;/c&gt;</ept> must be greater than or equal to -1, but less than or equal to 1.</source>
          <target state="translated">コサインを表す数で、<bpt id="p1">&lt;c&gt;</bpt>d<ept id="p1">&lt;/c&gt;</ept> が -1 以上 1 以下である必要があります。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Math.Acos(System.Double)">
          <source>Returns the angle whose cosine is the specified number.</source>
          <target state="translated">コサインが指定数となる角度を返します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Math.Acos(System.Double)">
          <source>An angle, θ, measured in radians, such that 0 ≤θ≤π</source>
          <target state="translated">0 ≤θ≤π の、ラジアンで表した角度 θ。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Math.Acos(System.Double)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Math.Acos(System.Double)">
          <source><ph id="ph1">&lt;see cref="F:System.Double.NaN" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d" /&gt;</ph> <ph id="ph3">&amp;lt;</ph> -1 or <ph id="ph4">&lt;paramref name="d" /&gt;</ph> <ph id="ph5">&amp;gt;</ph> 1 or <ph id="ph6">&lt;paramref name="d" /&gt;</ph> equals <ph id="ph7">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="d" /&gt;</ph> <ph id="ph3">&amp;lt;</ph> -1 または <ph id="ph4">&lt;paramref name="d" /&gt;</ph> <ph id="ph5">&amp;gt;</ph> 1、あるいは <ph id="ph6">&lt;paramref name="d" /&gt;</ph> が <ph id="ph7">&lt;see cref="F:System.Double.NaN" /&gt;</ph> と等しい場合は、<ph id="ph1">&lt;see cref="F:System.Double.NaN" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Acos(System.Double)">
          <source>Multiply the return value by 180/<ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph> to convert from radians to degrees.</source>
          <target state="translated">戻り値を乗算 180/<ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>ラジアンから度に変換します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Acos(System.Double)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Math.Acos%2A&gt;</ph> method to assist in the computation of the inner angles of a given trapezoid.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Math.Acos%2A&gt;</ph>特定台形の内部の角度の計算を支援するメソッド。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Math.Asin(System.Double)">
          <source>A number representing a sine, where <bpt id="p1">&lt;c&gt;</bpt>d<ept id="p1">&lt;/c&gt;</ept> must be greater than or equal to -1, but less than or equal to 1.</source>
          <target state="translated">サインを表す数で、<bpt id="p1">&lt;c&gt;</bpt>d<ept id="p1">&lt;/c&gt;</ept> が -1 以上 1 以下である必要があります。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Math.Asin(System.Double)">
          <source>Returns the angle whose sine is the specified number.</source>
          <target state="translated">サインが指定数となる角度を返します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Math.Asin(System.Double)">
          <source>An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2</source>
          <target state="translated">-π/2 ≤θ≤π/2 の、ラジアンで表した角度 θ。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Math.Asin(System.Double)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Math.Asin(System.Double)">
          <source><ph id="ph1">&lt;see cref="F:System.Double.NaN" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d" /&gt;</ph> <ph id="ph3">&amp;lt;</ph> -1 or <ph id="ph4">&lt;paramref name="d" /&gt;</ph> <ph id="ph5">&amp;gt;</ph> 1 or <ph id="ph6">&lt;paramref name="d" /&gt;</ph> equals <ph id="ph7">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="d" /&gt;</ph> <ph id="ph3">&amp;lt;</ph> -1 または <ph id="ph4">&lt;paramref name="d" /&gt;</ph> <ph id="ph5">&amp;gt;</ph> 1、あるいは <ph id="ph6">&lt;paramref name="d" /&gt;</ph> が <ph id="ph7">&lt;see cref="F:System.Double.NaN" /&gt;</ph> と等しい場合は、<ph id="ph1">&lt;see cref="F:System.Double.NaN" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Asin(System.Double)">
          <source>A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</source>
          <target state="translated">戻り値が正の値が x 軸から反時計回りに回転角度を表す負の値の戻り値は、時計回りの角度を表します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Asin(System.Double)">
          <source>Multiply the return value by 180/<ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph> to convert from radians to degrees.</source>
          <target state="translated">戻り値を乗算 180/<ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>ラジアンから度に変換します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Asin(System.Double)">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Math.Asin%2A&gt;</ph> to assist in the computation of the inner angles of a given trapezoid.</source>
          <target state="translated">次の例では<ph id="ph1">&lt;xref:System.Math.Asin%2A&gt;</ph>特定台形の内部の角度の計算を支援します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Math.Atan(System.Double)">
          <source>A number representing a tangent.</source>
          <target state="translated">タンジェントを表す数。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Math.Atan(System.Double)">
          <source>Returns the angle whose tangent is the specified number.</source>
          <target state="translated">タンジェントが指定数となる角度を返します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Math.Atan(System.Double)">
          <source>An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2.</source>
          <target state="translated">-π/2 ≤θ≤π/2 の、ラジアンで表した角度 θ。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Math.Atan(System.Double)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Math.Atan(System.Double)">
          <source><ph id="ph1">&lt;see cref="F:System.Double.NaN" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d" /&gt;</ph> equals <ph id="ph3">&lt;see cref="F:System.Double.NaN" /&gt;</ph>, -π/2 rounded to double precision (-1.5707963267949) if <ph id="ph4">&lt;paramref name="d" /&gt;</ph> equals <ph id="ph5">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>, or π/2 rounded to double precision (1.5707963267949) if <ph id="ph6">&lt;paramref name="d" /&gt;</ph> equals <ph id="ph7">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="d" /&gt;</ph> が <ph id="ph3">&lt;see cref="F:System.Double.NaN" /&gt;</ph> に等しい場合は <ph id="ph1">&lt;see cref="F:System.Double.NaN" /&gt;</ph>。<ph id="ph4">&lt;paramref name="d" /&gt;</ph> が <ph id="ph5">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph> に等しい場合は、倍精度に丸めた -π/2 (-1.5707963267949)。<ph id="ph6">&lt;paramref name="d" /&gt;</ph> が <ph id="ph7">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> に等しい場合は、倍精度に丸めた π/2 (1.5707963267949)。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Atan(System.Double)">
          <source>A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</source>
          <target state="translated">戻り値が正の値が x 軸から反時計回りに回転角度を表す負の値の戻り値は、時計回りの角度を表します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Atan(System.Double)">
          <source>Multiply the return value by 180/<ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph> to convert from radians to degrees.</source>
          <target state="translated">戻り値を乗算 180/<ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>ラジアンから度に変換します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Atan(System.Double)">
          <source>The following example demonstrates how to calculate the arctangent of a value and display it to the console.</source>
          <target state="translated">次の例では、値の逆正接を計算し、それをコンソールに表示する方法を示します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Math.Atan2(System.Double,System.Double)">
          <source>The y coordinate of a point.</source>
          <target state="translated">点の y 座標。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Math.Atan2(System.Double,System.Double)">
          <source>The x coordinate of a point.</source>
          <target state="translated">点の x 座標。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Math.Atan2(System.Double,System.Double)">
          <source>Returns the angle whose tangent is the quotient of two specified numbers.</source>
          <target state="translated">タンジェントが 2 つの指定された数の商である角度を返します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Math.Atan2(System.Double,System.Double)">
          <source>An angle, θ, measured in radians, such that -π≤θ≤π, and tan(θ) = <ph id="ph1">&lt;paramref name="y" /&gt;</ph><ph id="ph2"> / </ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph>, where (<ph id="ph4">&lt;paramref name="x" /&gt;</ph>, <ph id="ph5">&lt;paramref name="y" /&gt;</ph>) is a point in the Cartesian plane.</source>
          <target state="translated">-π≤θ≤π および tan(θ) = <ph id="ph1">&lt;paramref name="y" /&gt;</ph><ph id="ph2"> / </ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> の、ラジアンで示した角度 θ。(<ph id="ph4">&lt;paramref name="x" /&gt;</ph>, <ph id="ph5">&lt;paramref name="y" /&gt;</ph>) は、デカルト座標の点を示します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Math.Atan2(System.Double,System.Double)">
          <source>Observe the following:</source>
          <target state="translated">次の点に注意してください。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Math.Atan2(System.Double,System.Double)">
          <source>For (<ph id="ph1">&lt;paramref name="x" /&gt;</ph>, <ph id="ph2">&lt;paramref name="y" /&gt;</ph>) in quadrant 1, 0 <ph id="ph3">&amp;lt;</ph> θ <ph id="ph4">&amp;lt;</ph> π/2.</source>
          <target state="translated">クワドラント 1 の (<ph id="ph1">&lt;paramref name="x" /&gt;</ph>, <ph id="ph2">&lt;paramref name="y" /&gt;</ph>) の場合は、0 <ph id="ph3">&amp;lt;</ph> θ <ph id="ph4">&amp;lt;</ph> π/2。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Math.Atan2(System.Double,System.Double)">
          <source>For (<ph id="ph1">&lt;paramref name="x" /&gt;</ph>, <ph id="ph2">&lt;paramref name="y" /&gt;</ph>) in quadrant 2, π/2 <ph id="ph3">&amp;lt;</ph> θ≤π.</source>
          <target state="translated">クワドラント 2 の (<ph id="ph1">&lt;paramref name="x" /&gt;</ph>, <ph id="ph2">&lt;paramref name="y" /&gt;</ph>) の場合は、π/2 <ph id="ph3">&amp;lt;</ph> θ≤π。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Math.Atan2(System.Double,System.Double)">
          <source>For (<ph id="ph1">&lt;paramref name="x" /&gt;</ph>, <ph id="ph2">&lt;paramref name="y" /&gt;</ph>) in quadrant 3, -π <ph id="ph3">&amp;lt;</ph> θ <ph id="ph4">&amp;lt;</ph> -π/2.</source>
          <target state="translated">クワドラント 3 の (<ph id="ph1">&lt;paramref name="x" /&gt;</ph>, <ph id="ph2">&lt;paramref name="y" /&gt;</ph>) の場合は、-π <ph id="ph3">&amp;lt;</ph> θ <ph id="ph4">&amp;lt;</ph> -π/2。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Math.Atan2(System.Double,System.Double)">
          <source>For (<ph id="ph1">&lt;paramref name="x" /&gt;</ph>, <ph id="ph2">&lt;paramref name="y" /&gt;</ph>) in quadrant 4, -π/2 <ph id="ph3">&amp;lt;</ph> θ <ph id="ph4">&amp;lt;</ph> 0.</source>
          <target state="translated">クワドラント 4 の (<ph id="ph1">&lt;paramref name="x" /&gt;</ph>, <ph id="ph2">&lt;paramref name="y" /&gt;</ph>) の場合は、-π/2 <ph id="ph3">&amp;lt;</ph> θ <ph id="ph4">&amp;lt;</ph> 0。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Math.Atan2(System.Double,System.Double)">
          <source>For points on the boundaries of the quadrants, the return value is the following:</source>
          <target state="translated">クワドラント間の境界上にある点の場合は、次の戻り値になります。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Math.Atan2(System.Double,System.Double)">
          <source>If y is 0 and x is not negative, θ = 0.</source>
          <target state="translated">y が 0 で x が負数でない場合は、θ = 0。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Math.Atan2(System.Double,System.Double)">
          <source>If y is 0 and x is negative, θ = π.</source>
          <target state="translated">y が 0 で x が負の場合は、θ = π。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Math.Atan2(System.Double,System.Double)">
          <source>If y is positive and x is 0, θ = π/2.</source>
          <target state="translated">y が正で x が 0 の場合は、θ = π/2。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Math.Atan2(System.Double,System.Double)">
          <source>If y is negative and x is 0, θ = -π/2.</source>
          <target state="translated">y が負数で x が 0 の場合は、θ = -π/2。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Math.Atan2(System.Double,System.Double)">
          <source>If y is 0 and x is 0, θ = 0.</source>
          <target state="translated">y が 0 かつ x が 0 の場合は、θ = 0。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Math.Atan2(System.Double,System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="x" /&gt;</ph> or <ph id="ph2">&lt;paramref name="y" /&gt;</ph> is <ph id="ph3">&lt;see cref="F:System.Double.NaN" /&gt;</ph>, or if <ph id="ph4">&lt;paramref name="x" /&gt;</ph> and <ph id="ph5">&lt;paramref name="y" /&gt;</ph> are either <ph id="ph6">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> or <ph id="ph7">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>, the method returns <ph id="ph8">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="x" /&gt;</ph> または <ph id="ph2">&lt;paramref name="y" /&gt;</ph> が <ph id="ph3">&lt;see cref="F:System.Double.NaN" /&gt;</ph> であるか、<ph id="ph4">&lt;paramref name="x" /&gt;</ph> または <ph id="ph5">&lt;paramref name="y" /&gt;</ph> が <ph id="ph6">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> または <ph id="ph7">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph> のいずれである場合、メソッドは <ph id="ph8">&lt;see cref="F:System.Double.NaN" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Atan2(System.Double,System.Double)">
          <source>The return value is the angle in the Cartesian plane formed by the x-axis, and a vector starting from the origin, (0,0), and terminating at the point, (x,y).</source>
          <target state="translated">戻り値は、デカルト座標で、x 軸と原点 (0, 0) から開始し、ポイント、(x, y) で終了してベクターの角度です。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Atan2(System.Double,System.Double)">
          <source>The following example demonstrates how to calculate the arctangent of an angle and a vector.</source>
          <target state="translated">次の例では、角度とベクターの逆正接を計算する方法を示します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Atan2(System.Double,System.Double)">
          <source>The resulting value is displayed in the console.</source>
          <target state="translated">結果の値は、コンソールに表示されます。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Math.BigMul(System.Int32,System.Int32)">
          <source>The first number to multiply.</source>
          <target state="translated">乗算対象の最初の数。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Math.BigMul(System.Int32,System.Int32)">
          <source>The second number to multiply.</source>
          <target state="translated">乗算対象の 2 番目の数。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Math.BigMul(System.Int32,System.Int32)">
          <source>Produces the full product of two 32-bit numbers.</source>
          <target state="translated">2 つの 32 ビット数値の完全な積を生成します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Math.BigMul(System.Int32,System.Int32)">
          <source>The number containing the product of the specified numbers.</source>
          <target state="translated">指定した数値の積を含む数。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.BigMul(System.Int32,System.Int32)">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Math.BigMul%2A&gt;</ph> method to calculate the product of two integer values.</source>
          <target state="translated">次の例での使用、<ph id="ph1">&lt;xref:System.Math.BigMul%2A&gt;</ph>メソッドを 2 つの整数値の積を計算します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="T:System.Math">
          <source>Returns the smallest integral value greater than or equal to the specified number.</source>
          <target state="translated">指定した数以上の数のうち、最小の整数値を返します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The behavior of this method follows IEEE Standard 754, section 4.</source>
          <target state="translated">このメソッドの動作は IEEE 標準 754、セクション 4 に従います。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>This kind of rounding is sometimes called rounding toward positive infinity.</source>
          <target state="translated">この種の丸め処理を行うには、正の無限大に向かって丸め処理を行うことがあります呼び出されます。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Math.Ceiling(System.Decimal)">
          <source>A decimal number.</source>
          <target state="translated">10 進数。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Math.Ceiling(System.Decimal)">
          <source>Returns the smallest integral value that is greater than or equal to the specified decimal number.</source>
          <target state="translated">指定した 10 進数以上の数のうち、最小の整数値を返します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Math.Ceiling(System.Decimal)">
          <source>The smallest integral value that is greater than or equal to <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> 以上の最小の整数値。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Math.Ceiling(System.Decimal)">
          <source>Note that this method returns a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> instead of an integral type.</source>
          <target state="translated">このメソッドは、整数型ではなく <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Ceiling(System.Decimal)">
          <source>The behavior of this method follows IEEE Standard 754, section 4.</source>
          <target state="translated">このメソッドの動作は IEEE 標準 754、セクション 4 に従います。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Ceiling(System.Decimal)">
          <source>This kind of rounding is sometimes called rounding toward positive infinity.</source>
          <target state="translated">この種の丸め処理を行うには、正の無限大に向かって丸め処理を行うことがあります呼び出されます。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Ceiling(System.Decimal)">
          <source>In other words, if <ph id="ph1">`d`</ph> is positive, the presence of any fractional component causes <ph id="ph2">`d`</ph> to be rounded to the next highest integer.</source>
          <target state="translated">つまり場合、<ph id="ph1">`d`</ph>が正の値の小数部の原因が存在する<ph id="ph2">`d`</ph>を次に大きい整数に丸められます。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Ceiling(System.Decimal)">
          <source>If <ph id="ph1">`d`</ph> is negative, the rounding operation causes any fractional component of <ph id="ph2">`d`</ph> to be discarded.</source>
          <target state="translated">場合<ph id="ph1">`d`</ph>は負の場合、丸め処理によりの小数部<ph id="ph2">`d`</ph>破棄されます。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Ceiling(System.Decimal)">
          <source>The operation of this method differs from the <ph id="ph1">&lt;xref:System.Math.Floor%28System.Decimal%29&gt;</ph> method, which supports rounding toward negative infinity.</source>
          <target state="translated">このメソッドの動作と異なります、<ph id="ph1">&lt;xref:System.Math.Floor%28System.Decimal%29&gt;</ph>メソッドで、負の無限大方向に丸め処理をサポートしています。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Ceiling(System.Decimal)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method and contrasts it with the <ph id="ph2">&lt;xref:System.Math.Floor%28System.Decimal%29&gt;</ph> method.</source>
          <target state="translated">次の例を示しています、<ph id="ph1">&lt;xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType&gt;</ph>メソッドとの比較、<ph id="ph2">&lt;xref:System.Math.Floor%28System.Decimal%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Math.Ceiling(System.Double)">
          <source>A double-precision floating-point number.</source>
          <target state="translated">倍精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Math.Ceiling(System.Double)">
          <source>Returns the smallest integral value that is greater than or equal to the specified double-precision floating-point number.</source>
          <target state="translated">指定した倍精度浮動小数点数以上の数のうち、最小の整数値を返します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Math.Ceiling(System.Double)">
          <source>The smallest integral value that is greater than or equal to <ph id="ph1">&lt;paramref name="a" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="a" /&gt;</ph> 以上の最小の整数値。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Math.Ceiling(System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="a" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>, that value is returned.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="a" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>、<ph id="ph4">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> のいずれかに等しい場合は、その値が返されます。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Math.Ceiling(System.Double)">
          <source>Note that this method returns a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> instead of an integral type.</source>
          <target state="translated">このメソッドは、整数型ではなく <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Ceiling(System.Double)">
          <source>The behavior of this method follows IEEE Standard 754, section 4.</source>
          <target state="translated">このメソッドの動作は IEEE 標準 754、セクション 4 に従います。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Ceiling(System.Double)">
          <source>This kind of rounding is sometimes called rounding toward positive infinity.</source>
          <target state="translated">この種の丸め処理を行うには、正の無限大に向かって丸め処理を行うことがあります呼び出されます。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Ceiling(System.Double)">
          <source>In other words, if <ph id="ph1">`a`</ph> is positive, the presence of any fractional component causes <ph id="ph2">`a`</ph> to be rounded to the next highest integer.</source>
          <target state="translated">つまり場合、<ph id="ph1">`a`</ph>が正の値の小数部の原因が存在する<ph id="ph2">`a`</ph>を次に大きい整数に丸められます。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Ceiling(System.Double)">
          <source>If <ph id="ph1">`a`</ph> is negative, the rounding operation causes any fractional component of <ph id="ph2">`a`</ph> to be discarded.</source>
          <target state="translated">場合<ph id="ph1">`a`</ph>は負の場合、丸め処理によりの小数部<ph id="ph2">`a`</ph>破棄されます。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Ceiling(System.Double)">
          <source>The operation of this method differs from the <ph id="ph1">&lt;xref:System.Math.Floor%28System.Double%29&gt;</ph> method, which supports rounding toward negative infinity.</source>
          <target state="translated">このメソッドの動作と異なります、<ph id="ph1">&lt;xref:System.Math.Floor%28System.Double%29&gt;</ph>メソッドで、負の無限大方向に丸め処理をサポートしています。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Ceiling(System.Double)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType&gt;</ph> method and contrasts it with the <ph id="ph2">&lt;xref:System.Math.Floor%28System.Double%29&gt;</ph> method.</source>
          <target state="translated">次の例を示しています、<ph id="ph1">&lt;xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType&gt;</ph>メソッドとの比較、<ph id="ph2">&lt;xref:System.Math.Floor%28System.Double%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Math.Cos(System.Double)">
          <source>An angle, measured in radians.</source>
          <target state="translated">ラジアンで表した角度。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Math.Cos(System.Double)">
          <source>Returns the cosine of the specified angle.</source>
          <target state="translated">指定された角度のコサインを返します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Math.Cos(System.Double)">
          <source>The cosine of <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> のコサイン。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Math.Cos(System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="d" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>, this method returns <ph id="ph5">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>、<ph id="ph4">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> のいずれかに等しい場合、このメソッドは <ph id="ph5">&lt;see cref="F:System.Double.NaN" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Cos(System.Double)">
          <source>The angle, <ph id="ph1">`d`</ph>, must be in radians.</source>
          <target state="translated">角度を<ph id="ph1">`d`</ph>ラジアンである必要があります。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Cos(System.Double)">
          <source>Multiply by <ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>/180 to convert degrees to radians.</source>
          <target state="translated">乗算 <ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph> /180 度をラジアンに変換します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Cos(System.Double)">
          <source>Acceptable values of <ph id="ph1">`d`</ph> range from approximately -9223372036854775295 to approximately 9223372036854775295.</source>
          <target state="translated">使用できる値の<ph id="ph1">`d`</ph>約-9223372036854775295 約 9223372036854775295 の範囲です。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Cos(System.Double)">
          <source>For values outside this range, the <ph id="ph1">&lt;xref:System.Math.Cos%2A&gt;</ph> method returns <ph id="ph2">`d`</ph> unchanged rather than throwing an exception.</source>
          <target state="translated">この範囲外の値を<ph id="ph1">&lt;xref:System.Math.Cos%2A&gt;</ph>メソッドを返します。<ph id="ph2">`d`</ph>例外をスローするのではなく変更されません。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Cos(System.Double)">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Math.Cos%2A&gt;</ph> to evaluate certain trigonometric identities for selected angles.</source>
          <target state="translated">次の例では<ph id="ph1">&lt;xref:System.Math.Cos%2A&gt;</ph>を選択した角度の三角関数の特定の id を評価します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Math.Cosh(System.Double)">
          <source>An angle, measured in radians.</source>
          <target state="translated">ラジアンで表した角度。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Math.Cosh(System.Double)">
          <source>Returns the hyperbolic cosine of the specified angle.</source>
          <target state="translated">指定された角度のハイパーボリック コサインを返します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Math.Cosh(System.Double)">
          <source>The hyperbolic cosine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> のハイパーボリック コサイン。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Math.Cosh(System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>, <ph id="ph4">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> is returned.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph> または <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> に等しい場合は、<ph id="ph4">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> が返されます。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Math.Cosh(System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Double.NaN" /&gt;</ph> is returned.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph> に等しい場合は、<ph id="ph3">&lt;see cref="F:System.Double.NaN" /&gt;</ph> が返されます。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Cosh(System.Double)">
          <source>The angle, <ph id="ph1">`value`</ph>, must be in radians.</source>
          <target state="translated">角度を<ph id="ph1">`value`</ph>ラジアンである必要があります。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Cosh(System.Double)">
          <source>Multiply by <ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>/180 to convert degrees to radians.</source>
          <target state="translated">乗算 <ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph> /180 度をラジアンに変換します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Cosh(System.Double)">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Math.Cosh%2A&gt;</ph> to evaluate certain hyperbolic identities for selected values.</source>
          <target state="translated">次の例では<ph id="ph1">&lt;xref:System.Math.Cosh%2A&gt;</ph>を選択した値の特定の双曲線 id を評価します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="T:System.Math">
          <source>Calculates the quotient of two numbers and also returns the remainder in an output parameter.</source>
          <target state="translated">2 つの数値の商を計算し、出力パラメーターの剰余を返します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)">
          <source>The dividend.</source>
          <target state="translated">被除数。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)">
          <source>The divisor.</source>
          <target state="translated">除数。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)">
          <source>The remainder.</source>
          <target state="translated">剰余。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)">
          <source>Calculates the quotient of two 32-bit signed integers and also returns the remainder in an output parameter.</source>
          <target state="translated">2 つの 32 ビット符号付き整数の商を計算し、出力パラメーターの剰余を返します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)">
          <source>The quotient of the specified numbers.</source>
          <target state="translated">指定した数値の商。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)">
          <source>The remainder is calculated by using the modulus operation.</source>
          <target state="translated">残りの部分は、剰余演算を使用して計算されます。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)">
          <source><ph id="ph1">&lt;paramref name="b" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="b" /&gt;</ph> が 0 です。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)">
          <source>The dividend.</source>
          <target state="translated">被除数。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)">
          <source>The divisor.</source>
          <target state="translated">除数。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)">
          <source>The remainder.</source>
          <target state="translated">剰余。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)">
          <source>Calculates the quotient of two 64-bit signed integers and also returns the remainder in an output parameter.</source>
          <target state="translated">2 つの 64 ビット符号付き整数の商を計算し、出力パラメーターの剰余を返します。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)">
          <source>The quotient of the specified numbers.</source>
          <target state="translated">指定した数値の商。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)">
          <source>The remainder is calculated by using the modulus operation.</source>
          <target state="translated">残りの部分は、剰余演算を使用して計算されます。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)">
          <source><ph id="ph1">&lt;paramref name="b" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="b" /&gt;</ph> が 0 です。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="F:System.Math.E">
          <source>Represents the natural logarithmic base, specified by the constant, <ph id="ph1">&lt;see langword="e" /&gt;</ph>.</source>
          <target state="translated">定数 <ph id="ph1">&lt;see langword="e" /&gt;</ph> によって示される、自然対数の底を表します。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Math.E">
          <source>The value of this field is 2.7182818284590452354.</source>
          <target state="translated">このフィールドの値は、2.7182818284590452354 です。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Math.E">
          <source>The following example compares <ph id="ph1">&lt;xref:System.Math.E&gt;</ph> with the value calculated from a power series.</source>
          <target state="translated">次の例を比較して<ph id="ph1">&lt;xref:System.Math.E&gt;</ph>power 系列から計算された値を使用します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Math.Exp(System.Double)">
          <source>A number specifying a power.</source>
          <target state="translated">累乗を指定する数値。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Math.Exp(System.Double)">
          <source>Returns <ph id="ph1">&lt;see langword="e" /&gt;</ph> raised to the specified power.</source>
          <target state="translated">指定した値で <ph id="ph1">&lt;see langword="e" /&gt;</ph> を累乗した値を返します。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Math.Exp(System.Double)">
          <source>The number <ph id="ph1">&lt;see langword="e" /&gt;</ph> raised to the power <ph id="ph2">&lt;paramref name="d" /&gt;</ph>.</source>
          <target state="translated">数値 <ph id="ph1">&lt;see langword="e" /&gt;</ph> を <ph id="ph2">&lt;paramref name="d" /&gt;</ph> で累乗した値。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Math.Exp(System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="d" /&gt;</ph> equals <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>, that value is returned.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph> または <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> のいずれかに等しい場合は、その値が返されます。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Math.Exp(System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="d" /&gt;</ph> equals <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>, 0 is returned.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph> に等しい場合は、0 が返されます。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Exp(System.Double)">
          <source><ph id="ph1">`e`</ph> is a mathematical constant whose value is approximately 2.71828.</source>
          <target state="translated"><ph id="ph1">`e`</ph> 値を持つは約 2.71828 数学定数です。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Exp(System.Double)">
          <source>Use the <ph id="ph1">&lt;xref:System.Math.Pow%2A&gt;</ph> method to calculate powers of other bases.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Math.Pow%2A&gt;</ph>メソッドを他のベースのべき乗を計算します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Exp(System.Double)">
          <source><ph id="ph1">&lt;xref:System.Math.Exp%2A&gt;</ph> is the inverse of <ph id="ph2">&lt;xref:System.Math.Log%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Math.Exp%2A&gt;</ph> 逆関数は、<ph id="ph2">&lt;xref:System.Math.Log%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Exp(System.Double)">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Math.Exp%2A&gt;</ph> to evaluate certain exponential and logarithmic identities for selected values.</source>
          <target state="translated">次の例では<ph id="ph1">&lt;xref:System.Math.Exp%2A&gt;</ph>を選択した値の特定の指数と対数 id を評価します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="T:System.Math">
          <source>Returns the largest integral value less than or equal to the specified number.</source>
          <target state="translated">指定した数以下の数のうち、最大の整数値を返します。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The behavior of this method follows IEEE Standard 754, section 4.</source>
          <target state="translated">このメソッドの動作は IEEE 標準 754、セクション 4 に従います。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>This kind of rounding is sometimes called rounding toward negative infinity.</source>
          <target state="translated">このような丸めと呼ぶことが負の無限大に丸めます。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Math.Floor(System.Decimal)">
          <source>A decimal number.</source>
          <target state="translated">10 進数。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Math.Floor(System.Decimal)">
          <source>Returns the largest integral value less than or equal to the specified decimal number.</source>
          <target state="translated">指定した 10 進数以下の数のうち、最大の整数値を返します。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Math.Floor(System.Decimal)">
          <source>The largest integral value less than or equal to <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> 以下の最大の整数値。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Math.Floor(System.Decimal)">
          <source>Note that the method returns an integral value of type <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 型の整数値を返すことに注意してください。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Floor(System.Decimal)">
          <source>The behavior of this method follows IEEE Standard 754, section 4.</source>
          <target state="translated">このメソッドの動作は IEEE 標準 754、セクション 4 に従います。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Floor(System.Decimal)">
          <source>This kind of rounding is sometimes called rounding toward negative infinity.</source>
          <target state="translated">このような丸めと呼ぶことが負の無限大に丸めます。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Floor(System.Decimal)">
          <source>In other words, if <ph id="ph1">`d`</ph> is positive, any fractional component is truncated.</source>
          <target state="translated">つまり場合、<ph id="ph1">`d`</ph>が正の値、小数部が切り捨てられます。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Floor(System.Decimal)">
          <source>If <ph id="ph1">`d`</ph> is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</source>
          <target state="translated">場合<ph id="ph1">`d`</ph>は負の場合、小数部が存在するより小さい整数に丸められます。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Floor(System.Decimal)">
          <source>The operation of this method differs from the <ph id="ph1">&lt;xref:System.Math.Ceiling%2A&gt;</ph> method, which supports rounding toward positive infinity.</source>
          <target state="translated">このメソッドの動作と異なります、<ph id="ph1">&lt;xref:System.Math.Ceiling%2A&gt;</ph>メソッドで、正の無限大に向かって丸め処理をサポートしています。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Floor(System.Decimal)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType&gt;</ph> method and contrasts it with the <ph id="ph2">&lt;xref:System.Math.Ceiling%28System.Decimal%29&gt;</ph> method.</source>
          <target state="translated">次の例を示しています、<ph id="ph1">&lt;xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType&gt;</ph>メソッドとの比較、<ph id="ph2">&lt;xref:System.Math.Ceiling%28System.Decimal%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Math.Floor(System.Double)">
          <source>A double-precision floating-point number.</source>
          <target state="translated">倍精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Math.Floor(System.Double)">
          <source>Returns the largest integral value less than or equal to the specified double-precision floating-point number.</source>
          <target state="translated">指定した倍精度浮動小数点数以下の数のうち、最大の整数値を返します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Math.Floor(System.Double)">
          <source>The largest integral value less than or equal to <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> 以下の最大の整数値。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Math.Floor(System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="d" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>, that value is returned.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>、<ph id="ph4">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> のいずれかに等しい場合は、その値が返されます。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Floor(System.Double)">
          <source>The behavior of this method follows IEEE Standard 754, section 4.</source>
          <target state="translated">このメソッドの動作は IEEE 標準 754、セクション 4 に従います。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Floor(System.Double)">
          <source>This kind of rounding is sometimes called rounding toward negative infinity.</source>
          <target state="translated">このような丸めと呼ぶことが負の無限大に丸めます。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Floor(System.Double)">
          <source>In other words, if <ph id="ph1">`d`</ph> is positive, any fractional component is truncated.</source>
          <target state="translated">つまり場合、<ph id="ph1">`d`</ph>が正の値、小数部が切り捨てられます。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Floor(System.Double)">
          <source>If <ph id="ph1">`d`</ph> is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</source>
          <target state="translated">場合<ph id="ph1">`d`</ph>は負の場合、小数部が存在するより小さい整数に丸められます。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Floor(System.Double)">
          <source>The operation of this method differs from the <ph id="ph1">&lt;xref:System.Math.Ceiling%2A&gt;</ph> method, which supports rounding toward positive infinity.</source>
          <target state="translated">このメソッドの動作と異なります、<ph id="ph1">&lt;xref:System.Math.Ceiling%2A&gt;</ph>メソッドで、正の無限大に向かって丸め処理をサポートしています。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Floor(System.Double)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType&gt;</ph> method and contrasts it with the <ph id="ph2">&lt;xref:System.Math.Ceiling%28System.Double%29&gt;</ph> method.</source>
          <target state="translated">次の例を示しています、<ph id="ph1">&lt;xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType&gt;</ph>メソッドとの比較、<ph id="ph2">&lt;xref:System.Math.Ceiling%28System.Double%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Math.IEEERemainder(System.Double,System.Double)">
          <source>A dividend.</source>
          <target state="translated">被除数。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Math.IEEERemainder(System.Double,System.Double)">
          <source>A divisor.</source>
          <target state="translated">除数。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Math.IEEERemainder(System.Double,System.Double)">
          <source>Returns the remainder resulting from the division of a specified number by another specified number.</source>
          <target state="translated">指定した数を別の指定数で除算した結果の剰余を返します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Math.IEEERemainder(System.Double,System.Double)">
          <source>A number equal to <ph id="ph1">&lt;paramref name="x" /&gt;</ph> - (<ph id="ph2">&lt;paramref name="y" /&gt;</ph> Q), where Q is the quotient of <ph id="ph3">&lt;paramref name="x" /&gt;</ph><ph id="ph4"> / </ph><ph id="ph5">&lt;paramref name="y" /&gt;</ph> rounded to the nearest integer (if <ph id="ph6">&lt;paramref name="x" /&gt;</ph><ph id="ph7"> / </ph><ph id="ph8">&lt;paramref name="y" /&gt;</ph> falls halfway between two integers, the even integer is returned).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="x" /&gt;</ph> - (<ph id="ph2">&lt;paramref name="y" /&gt;</ph> Q) に等しい数値。Q は <ph id="ph3">&lt;paramref name="x" /&gt;</ph><ph id="ph4"> / </ph><ph id="ph5">&lt;paramref name="y" /&gt;</ph> の商を丸めた近似整数を示します。<ph id="ph6">&lt;paramref name="x" /&gt;</ph><ph id="ph7"> / </ph><ph id="ph8">&lt;paramref name="y" /&gt;</ph> が 2 つの整数の中間に位置する場合は、偶数の整数が返されます。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Math.IEEERemainder(System.Double,System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="x" /&gt;</ph> - (<ph id="ph2">&lt;paramref name="y" /&gt;</ph> Q) is zero, the value +0 is returned if <ph id="ph3">&lt;paramref name="x" /&gt;</ph> is positive, or -0 if <ph id="ph4">&lt;paramref name="x" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="x" /&gt;</ph> - (<ph id="ph2">&lt;paramref name="y" /&gt;</ph> Q) がゼロのとき、<ph id="ph3">&lt;paramref name="x" /&gt;</ph> が正である場合は値 +0、<ph id="ph4">&lt;paramref name="x" /&gt;</ph> が負である場合は -0 が返されます。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Math.IEEERemainder(System.Double,System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="y" /&gt;</ph> = 0, <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph> is returned.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="y" /&gt;</ph> = 0 の場合は、<ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph> が返されます。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.IEEERemainder(System.Double,System.Double)">
          <source>This operation complies with the remainder operation defined in Section 5.1 of ANSI/IEEE Std 754-1985; IEEE Standard for Binary Floating-Point Arithmetic; Institute of Electrical and Electronics Engineers, Inc; 1985.</source>
          <target state="translated">この操作は、ANSI/IEEE Std 754-1985; のセクション 5.1 で定義されている剰余演算に準拠していますIEEE 標準バイナリ浮動小数点演算です。Institute of Electrical と Electronics Engineers, Inc です。1985 です。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.IEEERemainder(System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Math.IEEERemainder%2A&gt;</ph> method is not the same as the modulus operator.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Math.IEEERemainder%2A&gt;</ph>メソッドは、剰余演算子と同じではありません。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.IEEERemainder(System.Double,System.Double)">
          <source>Although both return the remainder after division, the formulas they use are different.</source>
          <target state="translated">除算の後、残りの部分を返す両方を使用する数式は異なります。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.IEEERemainder(System.Double,System.Double)">
          <source>The formula for the <ph id="ph1">&lt;xref:System.Math.IEEERemainder%2A&gt;</ph> method is:</source>
          <target state="translated">式、<ph id="ph1">&lt;xref:System.Math.IEEERemainder%2A&gt;</ph>メソッドは。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.IEEERemainder(System.Double,System.Double)">
          <source>In contrast, the formula for the modulus operator is:</source>
          <target state="translated">これに対し、剰余演算子の数式は次のとおりです。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.IEEERemainder(System.Double,System.Double)">
          <source>The following example contrasts the remainder returned by the <ph id="ph1">&lt;xref:System.Math.IEEERemainder%2A&gt;</ph> method with the remainder returned by the modulus division operator.</source>
          <target state="translated">によって返される残りの部分を比較する次の例、<ph id="ph1">&lt;xref:System.Math.IEEERemainder%2A&gt;</ph>剰余除算演算子によって返される残りの部分を持つメソッドです。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="T:System.Math">
          <source>Returns the logarithm of a specified number.</source>
          <target state="translated">指定した数の対数を返します。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double)">
          <source>The number whose logarithm is to be found.</source>
          <target state="translated">対数を求める対象の数値。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double)">
          <source>Returns the natural (base <ph id="ph1">&lt;see langword="e" /&gt;</ph>) logarithm of a specified number.</source>
          <target state="translated">指定した数の自然 (底 <ph id="ph1">&lt;see langword="e" /&gt;</ph>) 対数を返します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double)">
          <source>One of the values in the following table.</source>
          <target state="translated">次の表に示した値のいずれか</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph><ph id="ph4">&lt;paramref name="d" /&gt;</ph> parameter</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph><ph id="ph4">&lt;paramref name="d" /&gt;</ph> パラメーター</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 戻り値</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Positive</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 正</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt> The natural logarithm of <ph id="ph2">&lt;paramref name="d" /&gt;</ph>; that is, ln <ph id="ph3">&lt;paramref name="d" /&gt;</ph>, or log e <ph id="ph4">&lt;paramref name="d" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph5">&lt;/item&gt;</ph><ph id="ph6">&lt;item&gt;</ph><ph id="ph7">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt> <ph id="ph2">&lt;paramref name="d" /&gt;</ph> の自然の対数。つまり、ln <ph id="ph3">&lt;paramref name="d" /&gt;</ph> または log e <ph id="ph4">&lt;paramref name="d" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph5">&lt;/item&gt;</ph><ph id="ph6">&lt;item&gt;</ph><ph id="ph7">&lt;term&gt;</ph> 0。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> Negative</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> 負</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><bpt id="p2">&lt;item&gt;</bpt><bpt id="p3">&lt;term&gt;</bpt> Equal to <ph id="ph4">&lt;see cref="F:System.Double.NaN" /&gt;</ph><ept id="p3">&lt;/term&gt;</ept><bpt id="p4">&lt;description&gt;</bpt><ph id="ph5">&lt;see cref="F:System.Double.NaN" /&gt;</ph><ept id="p4">&lt;/description&gt;</ept><ept id="p2">&lt;/item&gt;</ept><bpt id="p5">&lt;item&gt;</bpt><bpt id="p6">&lt;term&gt;</bpt> Equal to <ph id="ph6">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph><ept id="p6">&lt;/term&gt;</ept><bpt id="p7">&lt;description&gt;</bpt><ph id="ph7">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph><ept id="p7">&lt;/description&gt;</ept><ept id="p5">&lt;/item&gt;</ept><ph id="ph8">&lt;/list&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><bpt id="p2">&lt;item&gt;</bpt><bpt id="p3">&lt;term&gt;</bpt> <ph id="ph4">&lt;see cref="F:System.Double.NaN" /&gt;</ph><ept id="p3">&lt;/term&gt;</ept><bpt id="p4">&lt;description&gt;</bpt><ph id="ph5">&lt;see cref="F:System.Double.NaN" /&gt;</ph><ept id="p4">&lt;/description&gt;</ept><ept id="p2">&lt;/item&gt;</ept><bpt id="p5">&lt;item&gt;</bpt><bpt id="p6">&lt;term&gt;</bpt> に等しい <ph id="ph6">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph><ept id="p6">&lt;/term&gt;</ept><bpt id="p7">&lt;description&gt;</bpt><ph id="ph7">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph><ept id="p7">&lt;/description&gt;</ept><ept id="p5">&lt;/item&gt;</ept><ph id="ph8">&lt;/list&gt;</ph> に等しい</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Log(System.Double)">
          <source>Parameter <ph id="ph1">`d`</ph> is specified as a base 10 number.</source>
          <target state="translated">パラメーター<ph id="ph1">`d`</ph>底 10 の数値として指定されます。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Log(System.Double)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Math.Log%2A&gt;</ph> method.</source>
          <target state="translated">次の例を示しています、<ph id="ph1">&lt;xref:System.Math.Log%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source>The number whose logarithm is to be found.</source>
          <target state="translated">対数を求める対象の数値。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source>The base of the logarithm.</source>
          <target state="translated">対数の底。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source>Returns the logarithm of a specified number in a specified base.</source>
          <target state="translated">指定した数値の指定した底での対数を返します。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source>One of the values in the following table.</source>
          <target state="translated">次の表に示した値のいずれか</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source>(+Infinity denotes <ph id="ph1">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>, -Infinity denotes <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>, and NaN denotes <ph id="ph3">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.)</source>
          <target state="translated">(+Infinity は <ph id="ph1">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>、-Infinity は <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>、NaN は <ph id="ph3">&lt;see cref="F:System.Double.NaN" /&gt;</ph> をそれぞれ示しています。)</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph3">&lt;paramref name="a" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><bpt id="p2">&lt;description&gt;</bpt><ph id="ph4">&lt;paramref name="newBase" /&gt;</ph><ept id="p2">&lt;/description&gt;</ept><ph id="ph5">&lt;description&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph3">&lt;paramref name="a" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><bpt id="p2">&lt;description&gt;</bpt><ph id="ph4">&lt;paramref name="newBase" /&gt;</ph><ept id="p2">&lt;/description&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 戻り値</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph><ph id="ph6">&amp;gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph><ph id="ph6">&amp;gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> (0 <ph id="ph3">&amp;lt;</ph><ph id="ph4">&lt;paramref name="newBase" /&gt;</ph><ph id="ph5">&amp;lt;</ph> 1) -or-(<ph id="ph6">&lt;paramref name="newBase" /&gt;</ph><ph id="ph7">&amp;gt;</ph> 1)</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> (0 <ph id="ph3">&amp;lt;</ph><ph id="ph4">&lt;paramref name="newBase" /&gt;</ph><ph id="ph5">&amp;lt;</ph> 1) - または -(<ph id="ph6">&lt;paramref name="newBase" /&gt;</ph><ph id="ph7">&amp;gt;</ph> 1)</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> lognewBase(a)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> lognewBase(a)</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph><ph id="ph6">&amp;lt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph><ph id="ph6">&amp;lt;</ph> 0</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> (any value)</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> (任意の値)</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> NaN</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> NaN</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> (any value)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> (任意の値)</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="newBase" /&gt;</ph><ph id="ph4">&amp;lt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="newBase" /&gt;</ph><ph id="ph4">&amp;lt;</ph> 0</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> NaN</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> NaN</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph> != 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph> != 1</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="newBase" /&gt;</ph> = 0</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="newBase" /&gt;</ph> = 0</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> NaN</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> NaN</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph> != 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph> != 1</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="newBase" /&gt;</ph> = +Infinity</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="newBase" /&gt;</ph> = +無限大</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> NaN</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> NaN</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph> = NaN</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph> = NaN</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> (any value)</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> (任意の値)</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> NaN</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> NaN</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> (any value)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> (任意の値)</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="newBase" /&gt;</ph> = NaN</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="newBase" /&gt;</ph> = NaN</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> NaN</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> NaN</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> (any value)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> (任意の値)</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="newBase" /&gt;</ph> = 1</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="newBase" /&gt;</ph> = 1</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> NaN</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> NaN</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph> = 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph> = 0</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 0 <ph id="ph3">&amp;lt;</ph><ph id="ph4">&lt;paramref name="newBase" /&gt;</ph><ph id="ph5">&amp;lt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 0 <ph id="ph3">&amp;lt;</ph><ph id="ph4">&lt;paramref name="newBase" /&gt;</ph><ph id="ph5">&amp;lt;</ph> 1</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> +Infinity</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> +無限大</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph> = 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph> = 0</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="newBase" /&gt;</ph><ph id="ph4">&amp;gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="newBase" /&gt;</ph><ph id="ph4">&amp;gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> -Infinity</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> -無限大</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph> =  +Infinity</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph> =  +無限大</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 0 <ph id="ph3">&amp;lt;</ph><ph id="ph4">&lt;paramref name="newBase" /&gt;</ph><ph id="ph5">&amp;lt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 0 <ph id="ph3">&amp;lt;</ph><ph id="ph4">&lt;paramref name="newBase" /&gt;</ph><ph id="ph5">&amp;lt;</ph> 1</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> -Infinity</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> -無限大</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph> =  +Infinity</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph> =  +無限大</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="newBase" /&gt;</ph><ph id="ph4">&amp;gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="newBase" /&gt;</ph><ph id="ph4">&amp;gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> +Infinity</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> +無限大</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph> = 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph> = 1</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="newBase" /&gt;</ph> = 0</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="newBase" /&gt;</ph> = 0</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph> = 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;paramref name="a" /&gt;</ph> = 1</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="newBase" /&gt;</ph> = +Infinity</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="newBase" /&gt;</ph> = +無限大</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Math.Log(System.Double,System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Log(System.Double,System.Double)">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Math.Log%2A&gt;</ph> to evaluate certain logarithmic identities for selected values.</source>
          <target state="translated">次の例では<ph id="ph1">&lt;xref:System.Math.Log%2A&gt;</ph>を選択した値の対数の特定の id を評価します。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Math.Log10(System.Double)">
          <source>A number whose logarithm is to be found.</source>
          <target state="translated">対数を検索する対象の数値。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Math.Log10(System.Double)">
          <source>Returns the base 10 logarithm of a specified number.</source>
          <target state="translated">指定した数の底 10 の対数を返します。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Math.Log10(System.Double)">
          <source>One of the values in the following table.</source>
          <target state="translated">次の表に示した値のいずれか</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Math.Log10(System.Double)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph><ph id="ph4">&lt;paramref name="d" /&gt;</ph> parameter</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph><ph id="ph4">&lt;paramref name="d" /&gt;</ph> パラメーター</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Math.Log10(System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 戻り値</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Math.Log10(System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Positive</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 正</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Math.Log10(System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The base 10 log of <ph id="ph3">&lt;paramref name="d" /&gt;</ph>; that is, log 10<ph id="ph4">&lt;paramref name="d" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> <ph id="ph3">&lt;paramref name="d" /&gt;</ph> の底 10 の log。つまり、log 10<ph id="ph4">&lt;paramref name="d" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Math.Log10(System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Math.Log10(System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> Negative</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> 負</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Math.Log10(System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><bpt id="p2">&lt;item&gt;</bpt><bpt id="p3">&lt;term&gt;</bpt> Equal to <ph id="ph4">&lt;see cref="F:System.Double.NaN" /&gt;</ph><ept id="p3">&lt;/term&gt;</ept><bpt id="p4">&lt;description&gt;</bpt><ph id="ph5">&lt;see cref="F:System.Double.NaN" /&gt;</ph><ept id="p4">&lt;/description&gt;</ept><ept id="p2">&lt;/item&gt;</ept><bpt id="p5">&lt;item&gt;</bpt><bpt id="p6">&lt;term&gt;</bpt> Equal to <ph id="ph6">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph><ept id="p6">&lt;/term&gt;</ept><bpt id="p7">&lt;description&gt;</bpt><ph id="ph7">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph><ept id="p7">&lt;/description&gt;</ept><ept id="p5">&lt;/item&gt;</ept><ph id="ph8">&lt;/list&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><bpt id="p2">&lt;item&gt;</bpt><bpt id="p3">&lt;term&gt;</bpt> <ph id="ph4">&lt;see cref="F:System.Double.NaN" /&gt;</ph><ept id="p3">&lt;/term&gt;</ept><bpt id="p4">&lt;description&gt;</bpt><ph id="ph5">&lt;see cref="F:System.Double.NaN" /&gt;</ph><ept id="p4">&lt;/description&gt;</ept><ept id="p2">&lt;/item&gt;</ept><bpt id="p5">&lt;item&gt;</bpt><bpt id="p6">&lt;term&gt;</bpt> に等しい <ph id="ph6">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph><ept id="p6">&lt;/term&gt;</ept><bpt id="p7">&lt;description&gt;</bpt><ph id="ph7">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph><ept id="p7">&lt;/description&gt;</ept><ept id="p5">&lt;/item&gt;</ept><ph id="ph8">&lt;/list&gt;</ph> に等しい</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Log10(System.Double)">
          <source>Parameter <ph id="ph1">`d`</ph> is specified as a base 10 number.</source>
          <target state="translated">パラメーター<ph id="ph1">`d`</ph>底 10 の数値として指定されます。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Log10(System.Double)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Math.Log10%2A&gt;</ph> method to return the base 10 logarithm for selected values.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Math.Log10%2A&gt;</ph>選択された値の底 10 の対数を返します。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="T:System.Math">
          <source>Returns the larger of two specified numbers.</source>
          <target state="translated">指定された 2 つの数のうち、大きい方を返します。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Byte,System.Byte)">
          <source>The first of two 8-bit unsigned integers to compare.</source>
          <target state="translated">比較する 2 つの 8 ビット符号なし整数の最初の数値。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Byte,System.Byte)">
          <source>The second of two 8-bit unsigned integers to compare.</source>
          <target state="translated">比較する 2 つの 8 ビット符号なし整数の 2 番目の数値。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Byte,System.Byte)">
          <source>Returns the larger of two 8-bit unsigned integers.</source>
          <target state="translated">2 つの 8 ビット符号なし整数のうち、大きな方を返します。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Byte,System.Byte)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is larger.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか大きい方。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Max(System.Byte,System.Byte)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph> method to return and display the greater of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph>メソッドを返し、2 つの変数の大きい方を表示します。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Decimal,System.Decimal)">
          <source>The first of two decimal numbers to compare.</source>
          <target state="translated">比較する 2 つの 10 進数の最初の数。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Decimal,System.Decimal)">
          <source>The second of two decimal numbers to compare.</source>
          <target state="translated">比較する 2 つの 10 進数の 2 番目の数。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Decimal,System.Decimal)">
          <source>Returns the larger of two decimal numbers.</source>
          <target state="translated">2 つの 10 進数のうち、大きい方を返します。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Decimal,System.Decimal)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is larger.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか大きい方。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Max(System.Decimal,System.Decimal)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph> method to return and display the greater of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph>メソッドを返し、2 つの変数の大きい方を表示します。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Double,System.Double)">
          <source>The first of two double-precision floating-point numbers to compare.</source>
          <target state="translated">比較する 2 つの倍精度浮動小数点数の最初の数。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Double,System.Double)">
          <source>The second of two double-precision floating-point numbers to compare.</source>
          <target state="translated">比較する 2 つの倍精度浮動小数点数の 2 番目の数。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Double,System.Double)">
          <source>Returns the larger of two double-precision floating-point numbers.</source>
          <target state="translated">2 つの倍精度浮動小数点数のうち、大きい方を返します。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Double,System.Double)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is larger.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか大きい方。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Double,System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="val1" /&gt;</ph>, <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, or both <ph id="ph3">&lt;paramref name="val1" /&gt;</ph> and <ph id="ph4">&lt;paramref name="val2" /&gt;</ph> are equal to <ph id="ph5">&lt;see cref="F:System.Double.NaN" /&gt;</ph>, <ph id="ph6">&lt;see cref="F:System.Double.NaN" /&gt;</ph> is returned.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="val1" /&gt;</ph>、<ph id="ph2">&lt;paramref name="val2" /&gt;</ph>、または <ph id="ph3">&lt;paramref name="val1" /&gt;</ph> と <ph id="ph4">&lt;paramref name="val2" /&gt;</ph> の両方が <ph id="ph5">&lt;see cref="F:System.Double.NaN" /&gt;</ph> に等しい場合、<ph id="ph6">&lt;see cref="F:System.Double.NaN" /&gt;</ph> が返されます。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Max(System.Double,System.Double)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph> method to return and display the greater of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph>メソッドを返し、2 つの変数の大きい方を表示します。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Int16,System.Int16)">
          <source>The first of two 16-bit signed integers to compare.</source>
          <target state="translated">比較する 2 つの 16 ビット符号付き整数の最初の数値。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Int16,System.Int16)">
          <source>The second of two 16-bit signed integers to compare.</source>
          <target state="translated">比較する 2 つの 16 ビット符号付き整数の 2 番目の数値。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Int16,System.Int16)">
          <source>Returns the larger of two 16-bit signed integers.</source>
          <target state="translated">2 つの 16 ビット符号付き整数のうち、大きい方を返します。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Int16,System.Int16)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is larger.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか大きい方。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Max(System.Int16,System.Int16)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph> method to return and display the greater of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph>メソッドを返し、2 つの変数の大きい方を表示します。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Int32,System.Int32)">
          <source>The first of two 32-bit signed integers to compare.</source>
          <target state="translated">比較する 2 つの 32 ビット符号付き整数の最初の数値。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Int32,System.Int32)">
          <source>The second of two 32-bit signed integers to compare.</source>
          <target state="translated">比較する 2 つの 32 ビット符号付き整数の 2 番目の数値。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Int32,System.Int32)">
          <source>Returns the larger of two 32-bit signed integers.</source>
          <target state="translated">2 つの 32 ビット符号付き整数のうち、大きい方を返します。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Int32,System.Int32)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is larger.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか大きい方。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Max(System.Int32,System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph> method to return and display the greater of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph>メソッドを返し、2 つの変数の大きい方を表示します。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Int64,System.Int64)">
          <source>The first of two 64-bit signed integers to compare.</source>
          <target state="translated">比較する 2 つの 64 ビット符号付き整数の最初の数値。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Int64,System.Int64)">
          <source>The second of two 64-bit signed integers to compare.</source>
          <target state="translated">比較する 2 つの 64 ビット符号付き整数の 2 番目の数値。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Int64,System.Int64)">
          <source>Returns the larger of two 64-bit signed integers.</source>
          <target state="translated">2 つの 64 ビット符号付き整数のうち、大きい方を返します。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Int64,System.Int64)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is larger.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか大きい方。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Max(System.Int64,System.Int64)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph> method to return and display the greater of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph>メソッドを返し、2 つの変数の大きい方を表示します。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.SByte,System.SByte)">
          <source>The first of two 8-bit signed integers to compare.</source>
          <target state="translated">比較する 2 つの 8 ビット符号付き整数の最初の数値。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.SByte,System.SByte)">
          <source>The second of two 8-bit signed integers to compare.</source>
          <target state="translated">比較する 2 つの 8 ビット符号付き整数の 2 番目の数値。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.SByte,System.SByte)">
          <source>Returns the larger of two 8-bit signed integers.</source>
          <target state="translated">2 つの 8 ビット符号付き整数のうち、大きい方を返します。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.SByte,System.SByte)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is larger.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか大きい方。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Max(System.SByte,System.SByte)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph> method to return and display the greater of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph>メソッドを返し、2 つの変数の大きい方を表示します。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Single,System.Single)">
          <source>The first of two single-precision floating-point numbers to compare.</source>
          <target state="translated">比較する 2 つの単精度浮動小数点数の最初の数。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Single,System.Single)">
          <source>The second of two single-precision floating-point numbers to compare.</source>
          <target state="translated">比較する 2 つの単精度浮動小数点数の 2 番目の数。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Single,System.Single)">
          <source>Returns the larger of two single-precision floating-point numbers.</source>
          <target state="translated">2 つの単精度浮動小数点数のうち、大きい方を返します。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Single,System.Single)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is larger.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか大きい方。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.Single,System.Single)">
          <source>If <ph id="ph1">&lt;paramref name="val1" /&gt;</ph>, or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, or both <ph id="ph3">&lt;paramref name="val1" /&gt;</ph> and <ph id="ph4">&lt;paramref name="val2" /&gt;</ph> are equal to <ph id="ph5">&lt;see cref="F:System.Single.NaN" /&gt;</ph>, <ph id="ph6">&lt;see cref="F:System.Single.NaN" /&gt;</ph> is returned.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="val1" /&gt;</ph>、または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>、または <ph id="ph3">&lt;paramref name="val1" /&gt;</ph> と <ph id="ph4">&lt;paramref name="val2" /&gt;</ph> の両方が <ph id="ph5">&lt;see cref="F:System.Single.NaN" /&gt;</ph> に等しい場合、<ph id="ph6">&lt;see cref="F:System.Single.NaN" /&gt;</ph> が返されます。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Max(System.Single,System.Single)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph> method to return and display the greater of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph>メソッドを返し、2 つの変数の大きい方を表示します。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.UInt16,System.UInt16)">
          <source>The first of two 16-bit unsigned integers to compare.</source>
          <target state="translated">比較する 2 つの 16 ビット符号なし整数の最初の数値。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.UInt16,System.UInt16)">
          <source>The second of two 16-bit unsigned integers to compare.</source>
          <target state="translated">比較する 2 つの 16 ビット符号なし整数の 2 番目の数値。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.UInt16,System.UInt16)">
          <source>Returns the larger of two 16-bit unsigned integers.</source>
          <target state="translated">2 つの 16 ビット符号なし整数のうち、大きな方を返します。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.UInt16,System.UInt16)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is larger.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか大きい方。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Max(System.UInt16,System.UInt16)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph> method to return and display the greater of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph>メソッドを返し、2 つの変数の大きい方を表示します。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.UInt32,System.UInt32)">
          <source>The first of two 32-bit unsigned integers to compare.</source>
          <target state="translated">比較する 2 つの 32 ビット符号なし整数の最初の数値。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.UInt32,System.UInt32)">
          <source>The second of two 32-bit unsigned integers to compare.</source>
          <target state="translated">比較する 2 つの 32 ビット符号なし整数の 2 番目の数値。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.UInt32,System.UInt32)">
          <source>Returns the larger of two 32-bit unsigned integers.</source>
          <target state="translated">2 つの 32 ビット符号なし整数のうち、大きな方を返します。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.UInt32,System.UInt32)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is larger.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか大きい方。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Max(System.UInt32,System.UInt32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph> method to return and display the greater of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph>メソッドを返し、2 つの変数の大きい方を表示します。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.UInt64,System.UInt64)">
          <source>The first of two 64-bit unsigned integers to compare.</source>
          <target state="translated">比較する 2 つの 64 ビット符号なし整数の最初の数値。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.UInt64,System.UInt64)">
          <source>The second of two 64-bit unsigned integers to compare.</source>
          <target state="translated">比較する 2 つの 64 ビット符号なし整数の 2 番目の数値。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.UInt64,System.UInt64)">
          <source>Returns the larger of two 64-bit unsigned integers.</source>
          <target state="translated">2 つの 64 ビット符号なし整数のうち、大きな方を返します。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Math.Max(System.UInt64,System.UInt64)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is larger.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか大きい方。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Max(System.UInt64,System.UInt64)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph> method to return and display the greater of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Max%2A&gt;</ph>メソッドを返し、2 つの変数の大きい方を表示します。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="T:System.Math">
          <source>Returns the smaller of two numbers.</source>
          <target state="translated">2 つの数のうち、小さい方を返します。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Byte,System.Byte)">
          <source>The first of two 8-bit unsigned integers to compare.</source>
          <target state="translated">比較する 2 つの 8 ビット符号なし整数の最初の数値。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Byte,System.Byte)">
          <source>The second of two 8-bit unsigned integers to compare.</source>
          <target state="translated">比較する 2 つの 8 ビット符号なし整数の 2 番目の数値。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Byte,System.Byte)">
          <source>Returns the smaller of two 8-bit unsigned integers.</source>
          <target state="translated">2 つの 8 ビット符号なし整数のうち、小さい方を返します。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Byte,System.Byte)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is smaller.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか小さい方。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Min(System.Byte,System.Byte)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph> method to return and display the smaller of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph>メソッドを返し、2 つの変数のいずれか小さい方を表示します。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Decimal,System.Decimal)">
          <source>The first of two decimal numbers to compare.</source>
          <target state="translated">比較する 2 つの 10 進数の最初の数。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Decimal,System.Decimal)">
          <source>The second of two decimal numbers to compare.</source>
          <target state="translated">比較する 2 つの 10 進数の 2 番目の数。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Decimal,System.Decimal)">
          <source>Returns the smaller of two decimal numbers.</source>
          <target state="translated">2 つの 10 進数のうち、小さい方を返します。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Decimal,System.Decimal)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is smaller.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか小さい方。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Min(System.Decimal,System.Decimal)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph> method to return and display the smaller of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph>メソッドを返し、2 つの変数のいずれか小さい方を表示します。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Double,System.Double)">
          <source>The first of two double-precision floating-point numbers to compare.</source>
          <target state="translated">比較する 2 つの倍精度浮動小数点数の最初の数。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Double,System.Double)">
          <source>The second of two double-precision floating-point numbers to compare.</source>
          <target state="translated">比較する 2 つの倍精度浮動小数点数の 2 番目の数。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Double,System.Double)">
          <source>Returns the smaller of two double-precision floating-point numbers.</source>
          <target state="translated">2 つの倍精度浮動小数点数のうち、小さい方を返します。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Double,System.Double)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is smaller.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか小さい方。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Double,System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="val1" /&gt;</ph>, <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, or both <ph id="ph3">&lt;paramref name="val1" /&gt;</ph> and <ph id="ph4">&lt;paramref name="val2" /&gt;</ph> are equal to <ph id="ph5">&lt;see cref="F:System.Double.NaN" /&gt;</ph>, <ph id="ph6">&lt;see cref="F:System.Double.NaN" /&gt;</ph> is returned.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="val1" /&gt;</ph>、<ph id="ph2">&lt;paramref name="val2" /&gt;</ph>、または <ph id="ph3">&lt;paramref name="val1" /&gt;</ph> と <ph id="ph4">&lt;paramref name="val2" /&gt;</ph> の両方が <ph id="ph5">&lt;see cref="F:System.Double.NaN" /&gt;</ph> に等しい場合、<ph id="ph6">&lt;see cref="F:System.Double.NaN" /&gt;</ph> が返されます。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Min(System.Double,System.Double)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph> method to return and display the smaller of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph>メソッドを返し、2 つの変数のいずれか小さい方を表示します。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Int16,System.Int16)">
          <source>The first of two 16-bit signed integers to compare.</source>
          <target state="translated">比較する 2 つの 16 ビット符号付き整数の最初の数値。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Int16,System.Int16)">
          <source>The second of two 16-bit signed integers to compare.</source>
          <target state="translated">比較する 2 つの 16 ビット符号付き整数の 2 番目の数値。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Int16,System.Int16)">
          <source>Returns the smaller of two 16-bit signed integers.</source>
          <target state="translated">2 つの 16 ビット符号付き整数のうち、小さい方を返します。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Int16,System.Int16)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is smaller.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか小さい方。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Min(System.Int16,System.Int16)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph> method to return and display the smaller of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph>メソッドを返し、2 つの変数のいずれか小さい方を表示します。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Int32,System.Int32)">
          <source>The first of two 32-bit signed integers to compare.</source>
          <target state="translated">比較する 2 つの 32 ビット符号付き整数の最初の数値。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Int32,System.Int32)">
          <source>The second of two 32-bit signed integers to compare.</source>
          <target state="translated">比較する 2 つの 32 ビット符号付き整数の 2 番目の数値。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Int32,System.Int32)">
          <source>Returns the smaller of two 32-bit signed integers.</source>
          <target state="translated">2 つの 32 ビット符号付き整数のうち、小さい方を返します。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Int32,System.Int32)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is smaller.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか小さい方。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Min(System.Int32,System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph> method to return and display the smaller of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph>メソッドを返し、2 つの変数のいずれか小さい方を表示します。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Int64,System.Int64)">
          <source>The first of two 64-bit signed integers to compare.</source>
          <target state="translated">比較する 2 つの 64 ビット符号付き整数の最初の数値。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Int64,System.Int64)">
          <source>The second of two 64-bit signed integers to compare.</source>
          <target state="translated">比較する 2 つの 64 ビット符号付き整数の 2 番目の数値。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Int64,System.Int64)">
          <source>Returns the smaller of two 64-bit signed integers.</source>
          <target state="translated">2 つの 64 ビット符号付き整数のうち、小さい方を返します。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Int64,System.Int64)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is smaller.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか小さい方。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Min(System.Int64,System.Int64)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph> method to return and display the smaller of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph>メソッドを返し、2 つの変数のいずれか小さい方を表示します。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.SByte,System.SByte)">
          <source>The first of two 8-bit signed integers to compare.</source>
          <target state="translated">比較する 2 つの 8 ビット符号付き整数の最初の数値。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.SByte,System.SByte)">
          <source>The second of two 8-bit signed integers to compare.</source>
          <target state="translated">比較する 2 つの 8 ビット符号付き整数の 2 番目の数値。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.SByte,System.SByte)">
          <source>Returns the smaller of two 8-bit signed integers.</source>
          <target state="translated">2 つの 8 ビット符号付き整数のうち、小さい方を返します。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.SByte,System.SByte)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is smaller.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか小さい方。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Min(System.SByte,System.SByte)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph> method to return and display the smaller of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph>メソッドを返し、2 つの変数のいずれか小さい方を表示します。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Single,System.Single)">
          <source>The first of two single-precision floating-point numbers to compare.</source>
          <target state="translated">比較する 2 つの単精度浮動小数点数の最初の数。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Single,System.Single)">
          <source>The second of two single-precision floating-point numbers to compare.</source>
          <target state="translated">比較する 2 つの単精度浮動小数点数の 2 番目の数。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Single,System.Single)">
          <source>Returns the smaller of two single-precision floating-point numbers.</source>
          <target state="translated">2 つの単精度浮動小数点数のうち、小さい方を返します。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Single,System.Single)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is smaller.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか小さい方。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.Single,System.Single)">
          <source>If <ph id="ph1">&lt;paramref name="val1" /&gt;</ph>, <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, or both <ph id="ph3">&lt;paramref name="val1" /&gt;</ph> and <ph id="ph4">&lt;paramref name="val2" /&gt;</ph> are equal to <ph id="ph5">&lt;see cref="F:System.Single.NaN" /&gt;</ph>, <ph id="ph6">&lt;see cref="F:System.Single.NaN" /&gt;</ph> is returned.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="val1" /&gt;</ph>、<ph id="ph2">&lt;paramref name="val2" /&gt;</ph>、または <ph id="ph3">&lt;paramref name="val1" /&gt;</ph> と <ph id="ph4">&lt;paramref name="val2" /&gt;</ph> の両方が <ph id="ph5">&lt;see cref="F:System.Single.NaN" /&gt;</ph> に等しい場合、<ph id="ph6">&lt;see cref="F:System.Single.NaN" /&gt;</ph> が返されます。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Min(System.Single,System.Single)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph> method to return and display the smaller of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph>メソッドを返し、2 つの変数のいずれか小さい方を表示します。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.UInt16,System.UInt16)">
          <source>The first of two 16-bit unsigned integers to compare.</source>
          <target state="translated">比較する 2 つの 16 ビット符号なし整数の最初の数値。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.UInt16,System.UInt16)">
          <source>The second of two 16-bit unsigned integers to compare.</source>
          <target state="translated">比較する 2 つの 16 ビット符号なし整数の 2 番目の数値。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.UInt16,System.UInt16)">
          <source>Returns the smaller of two 16-bit unsigned integers.</source>
          <target state="translated">2 つの 16 ビット符号なし整数のうち、小さい方を返します。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.UInt16,System.UInt16)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is smaller.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか小さい方。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Min(System.UInt16,System.UInt16)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph> method to return and display the smaller of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph>メソッドを返し、2 つの変数のいずれか小さい方を表示します。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.UInt32,System.UInt32)">
          <source>The first of two 32-bit unsigned integers to compare.</source>
          <target state="translated">比較する 2 つの 32 ビット符号なし整数の最初の数値。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.UInt32,System.UInt32)">
          <source>The second of two 32-bit unsigned integers to compare.</source>
          <target state="translated">比較する 2 つの 32 ビット符号なし整数の 2 番目の数値。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.UInt32,System.UInt32)">
          <source>Returns the smaller of two 32-bit unsigned integers.</source>
          <target state="translated">2 つの 32 ビット符号なし整数のうち、小さい方を返します。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.UInt32,System.UInt32)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is smaller.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか小さい方。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Min(System.UInt32,System.UInt32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph> method to return and display the smaller of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph>メソッドを返し、2 つの変数のいずれか小さい方を表示します。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.UInt64,System.UInt64)">
          <source>The first of two 64-bit unsigned integers to compare.</source>
          <target state="translated">比較する 2 つの 64 ビット符号なし整数の最初の数値。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.UInt64,System.UInt64)">
          <source>The second of two 64-bit unsigned integers to compare.</source>
          <target state="translated">比較する 2 つの 64 ビット符号なし整数の 2 番目の数値。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.UInt64,System.UInt64)">
          <source>Returns the smaller of two 64-bit unsigned integers.</source>
          <target state="translated">2 つの 64 ビット符号なし整数のうち、小さい方を返します。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Math.Min(System.UInt64,System.UInt64)">
          <source>Parameter <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="val2" /&gt;</ph>, whichever is smaller.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="val1" /&gt;</ph> または <ph id="ph2">&lt;paramref name="val2" /&gt;</ph> のいずれか小さい方。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Min(System.UInt64,System.UInt64)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph> method to return and display the smaller of two variables.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Min%2A&gt;</ph>メソッドを返し、2 つの変数のいずれか小さい方を表示します。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="F:System.Math.PI">
          <source>Represents the ratio of the circumference of a circle to its diameter, specified by the constant, π.</source>
          <target state="translated">定数 (π) を指定して、円の直径に対する円周の割合を表します。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Math.PI">
          <source>The value of this field is 3.14159265358979323846.</source>
          <target state="translated">このフィールドの値は、3.14159265358979323846 です。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Math.PI">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Math.PI&gt;</ph> to assist in the computation of the inner angles of a given trapezoid.</source>
          <target state="translated">次の例では<ph id="ph1">&lt;xref:System.Math.PI&gt;</ph>特定台形の内部の角度の計算を支援します。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source>A double-precision floating-point number to be raised to a power.</source>
          <target state="translated">累乗対象の倍精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source>A double-precision floating-point number that specifies a power.</source>
          <target state="translated">累乗を指定する倍精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source>Returns a specified number raised to the specified power.</source>
          <target state="translated">指定の数値を指定した値で累乗した値を返します。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source>The number <ph id="ph1">&lt;paramref name="x" /&gt;</ph> raised to the power <ph id="ph2">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated">数値 <ph id="ph1">&lt;paramref name="x" /&gt;</ph> を <ph id="ph2">&lt;paramref name="y" /&gt;</ph> で累乗した値。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source>The following table indicates the return value when various values or ranges of values are specified for the <ph id="ph1">`x`</ph> and <ph id="ph2">`y`</ph> parameters.</source>
          <target state="translated">次の表は、さまざまな値または値の範囲がに対して指定した場合に、戻り値を示します、<ph id="ph1">`x`</ph>と<ph id="ph2">`y`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">詳細については、「<ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>「<ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>および「<ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source>Parameters</source>
          <target state="translated">パラメーター</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source>Return value</source>
          <target state="translated">戻り値</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source><ph id="ph1">`x`</ph> or <ph id="ph2">`y`</ph><ph id="ph3"> = </ph><ph id="ph4">`NaN`</ph>.</source>
          <target state="translated"><ph id="ph1">`x`</ph> または<ph id="ph2">`y`</ph> <ph id="ph3"> = </ph><ph id="ph4">`NaN`</ph>です。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source><ph id="ph1">`x`</ph> = Any value except <ph id="ph2">`NaN`</ph>; <ph id="ph3">`y`</ph> = 0.</source>
          <target state="translated"><ph id="ph1">`x`</ph> = すべての値を除く<ph id="ph2">`NaN`</ph>です。<ph id="ph3">`y`</ph> 0 を = です。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source><ph id="ph1">`x`</ph><ph id="ph2"> = </ph><ph id="ph3">`NegativeInfinity`</ph>; <ph id="ph4">`y`</ph> &lt; 0.</source>
          <target state="translated"><ph id="ph1">`x`</ph><ph id="ph2"> = </ph><ph id="ph3">`NegativeInfinity`</ph>; <ph id="ph4">`y`</ph> &lt; 0.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source><ph id="ph1">`x`</ph><ph id="ph2"> = </ph><ph id="ph3">`NegativeInfinity`</ph>; <ph id="ph4">`y`</ph> is a positive odd integer.</source>
          <target state="translated"><ph id="ph1">`x`</ph><ph id="ph2"> = </ph><ph id="ph3">`NegativeInfinity`</ph>;<ph id="ph4">`y`</ph>が奇数の正の整数。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source><ph id="ph1">`x`</ph><ph id="ph2"> = </ph><ph id="ph3">`NegativeInfinity`</ph>; <ph id="ph4">`y`</ph> is positive but not an odd integer.</source>
          <target state="translated"><ph id="ph1">`x`</ph><ph id="ph2"> = </ph><ph id="ph3">`NegativeInfinity`</ph>;<ph id="ph4">`y`</ph>は正の値が奇数の整数ではありません。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source><ph id="ph1">`x`</ph> &lt; 0 but not <ph id="ph2">`NegativeInfinity`</ph>; <ph id="ph3">`y`</ph> is not an integer, <ph id="ph4">`NegativeInfinity`</ph>, or <ph id="ph5">`PositiveInfinity`</ph>.</source>
          <target state="translated"><ph id="ph1">`x`</ph> &lt; 0 は対象外<ph id="ph2">`NegativeInfinity`</ph>です。<ph id="ph3">`y`</ph> 、整数ではない<ph id="ph4">`NegativeInfinity`</ph>、または<ph id="ph5">`PositiveInfinity`</ph>です。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source><ph id="ph1">`x`</ph> = -1; <ph id="ph2">`y`</ph><ph id="ph3"> = </ph><ph id="ph4">`NegativeInfinity`</ph> or <ph id="ph5">`PositiveInfinity`</ph>.</source>
          <target state="translated"><ph id="ph1">`x`</ph> =-1 です。<ph id="ph2">`y`</ph> <ph id="ph3"> = </ph> <ph id="ph4">`NegativeInfinity`</ph>または<ph id="ph5">`PositiveInfinity`</ph>です。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source>-1 &lt; <ph id="ph1">`x`</ph> &lt; 1; <ph id="ph2">`y`</ph><ph id="ph3"> = </ph><ph id="ph4">`NegativeInfinity`</ph>.</source>
          <target state="translated">-1 &lt; <ph id="ph1">`x`</ph> &lt; 1; <ph id="ph2">`y`</ph><ph id="ph3"> = </ph><ph id="ph4">`NegativeInfinity`</ph>.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source>-1 &lt; <ph id="ph1">`x`</ph> &lt; 1; <ph id="ph2">`y`</ph><ph id="ph3"> = </ph><ph id="ph4">`PositiveInfinity`</ph>.</source>
          <target state="translated">-1 &lt; <ph id="ph1">`x`</ph> &lt; 1; <ph id="ph2">`y`</ph><ph id="ph3"> = </ph><ph id="ph4">`PositiveInfinity`</ph>.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source><ph id="ph1">`x`</ph> &lt; -1 or <ph id="ph2">`x`</ph> &gt; 1; <ph id="ph3">`y`</ph><ph id="ph4"> = </ph><ph id="ph5">`NegativeInfinity`</ph>.</source>
          <target state="translated"><ph id="ph1">`x`</ph> &lt;-1 または<ph id="ph2">`x`</ph>&gt; 1 になります;<ph id="ph3">`y`</ph><ph id="ph4"> = </ph><ph id="ph5">`NegativeInfinity`</ph>.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source><ph id="ph1">`x`</ph> &lt; -1 or <ph id="ph2">`x`</ph> &gt; 1; <ph id="ph3">`y`</ph><ph id="ph4"> = </ph><ph id="ph5">`PositiveInfinity`</ph>.</source>
          <target state="translated"><ph id="ph1">`x`</ph> &lt;-1 または<ph id="ph2">`x`</ph>&gt; 1 になります;<ph id="ph3">`y`</ph><ph id="ph4"> = </ph><ph id="ph5">`PositiveInfinity`</ph>.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source><ph id="ph1">`x`</ph> = 0; <ph id="ph2">`y`</ph> &lt; 0.</source>
          <target state="translated"><ph id="ph1">`x`</ph> = 0; <ph id="ph2">`y`</ph> &amp;lt; 0.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source><ph id="ph1">`x`</ph> = 0; <ph id="ph2">`y`</ph> &gt; 0.</source>
          <target state="translated"><ph id="ph1">`x`</ph> = 0; <ph id="ph2">`y`</ph> &amp;gt; 0.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source><ph id="ph1">`x`</ph> = 1; <ph id="ph2">`y`</ph> is any value except <ph id="ph3">`NaN`</ph>.</source>
          <target state="translated"><ph id="ph1">`x`</ph> = 1 です。<ph id="ph2">`y`</ph>以外の値は、<ph id="ph3">`NaN`</ph>です。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source><ph id="ph1">`x`</ph><ph id="ph2"> = </ph><ph id="ph3">`PositiveInfinity`</ph>; <ph id="ph4">`y`</ph> &lt; 0.</source>
          <target state="translated"><ph id="ph1">`x`</ph><ph id="ph2"> = </ph><ph id="ph3">`PositiveInfinity`</ph>; <ph id="ph4">`y`</ph> &lt; 0.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source><ph id="ph1">`x`</ph><ph id="ph2"> = </ph><ph id="ph3">`PositiveInfinity`</ph>; <ph id="ph4">`y`</ph> &gt; 0.</source>
          <target state="translated"><ph id="ph1">`x`</ph><ph id="ph2"> = </ph><ph id="ph3">`PositiveInfinity`</ph>; <ph id="ph4">`y`</ph> &gt; 0.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Pow(System.Double,System.Double)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Math.Pow%2A&gt;</ph> method to calculate the value that results from raising 2 to a power ranging from 0 to 32.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Math.Pow%2A&gt;</ph>させると、0 ~ 32 の電源を 2 から結果の値を計算する方法です。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="T:System.Math">
          <source>Rounds a value to the nearest integer or to the specified number of fractional digits.</source>
          <target state="translated">最も近い整数または指定した小数点以下の桁数に値を丸めます。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>In this section:</source>
          <target state="translated">このセクションの内容:</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><bpt id="p1">[</bpt>Overloaded method syntax<ept id="p1">](#Syntax)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>オーバー ロードされたメソッドの構文<ept id="p1">](#Syntax)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><bpt id="p1">[</bpt>Parameters<ept id="p1">](#Params)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>パラメーター<ept id="p1">](#Params)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><bpt id="p1">[</bpt>Return value<ept id="p1">](#Returns)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>戻り値<ept id="p1">](#Returns)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><bpt id="p1">[</bpt>Exceptions<ept id="p1">](#Exceptions)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>例外<ept id="p1">](#Exceptions)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><bpt id="p1">[</bpt>Which method do I call?<ept id="p1">](#Tasks)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>どのメソッドが呼び出ししますか。<ept id="p1">](#Tasks)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><bpt id="p1">[</bpt>Midpoint values and rounding conventions<ept id="p1">](#Midpoint)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>中間値と丸め処理を行う規則<ept id="p1">](#Midpoint)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><bpt id="p1">[</bpt>Rounding and precision<ept id="p1">](#Precision)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>丸め処理や有効桁数<ept id="p1">](#Precision)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><bpt id="p1">[</bpt>Rounding and single-precision floating-point values<ept id="p1">](#Single)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>丸めと単精度浮動小数点値<ept id="p1">](#Single)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Examples:</source>
          <target state="translated">次に例を示します。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><bpt id="p1">[</bpt>Math.Round(Decimal)<ept id="p1">](#Round1_Example)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Math.Round(Decimal)<ept id="p1">](#Round1_Example)</ept></target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><bpt id="p1">[</bpt>Math.Round(Double)<ept id="p1">](#Round2_Example)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Math.Round(Double)<ept id="p1">](#Round2_Example)</ept></target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><bpt id="p1">[</bpt>Math.Round(Decimal, Int32)<ept id="p1">](#Round3_Example)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Math.Round (10 進数、int32 型)<ept id="p1">](#Round3_Example)</ept></target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><bpt id="p1">[</bpt>Math.Round(Decimal, MidpointRounding)<ept id="p1">](#Round4_Example)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Math.Round (10 進数、MidpointRounding)<ept id="p1">](#Round4_Example)</ept></target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><bpt id="p1">[</bpt>Math.Round(Double, Int32)<ept id="p1">](#Round5_Example)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Math.Round (Double、int32 型)<ept id="p1">](#Round5_Example)</ept></target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><bpt id="p1">[</bpt>Math.Round(Double, MidpointRounding)<ept id="p1">](#Round6_Example)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Math.Round (Double、MidpointRounding)<ept id="p1">](#Round6_Example)</ept></target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><bpt id="p1">[</bpt>Math.Round(Decimal, Int32, MidpointRounding)<ept id="p1">](#Round7_Example)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Math.Round (10 進数、Int32、MidpointRounding)<ept id="p1">](#Round7_Example)</ept></target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><bpt id="p1">[</bpt>Math.Round(Double, Int32, MidpointRounding)<ept id="p1">](#Round8_Example)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Math.Round (Double、Int32、MidpointRounding)<ept id="p1">](#Round8_Example)</ept></target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><bpt id="p1">[</bpt>Version information<ept id="p1">](#Round_Versions)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>バージョン情報<ept id="p1">](#Round_Versions)</ept></target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Overloaded method syntax</source>
          <target state="translated">オーバー ロードされたメソッドの構文</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>For additional guidance on choosing an overload, see <bpt id="p1">[</bpt>Which method do I call?<ept id="p1">](#Tasks)</ept></source>
          <target state="translated">オーバー ロードを選択するための追加のガイダンスについては、次を参照してください<bpt id="p1">[</bpt>どのメソッドが呼び出ししますか?。<ept id="p1">](#Tasks)</ept></target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><ph id="ph1">`Decimal Math.Round(Decimal`</ph> <ph id="ph2">`d`</ph> <ph id="ph3">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Decimal Math.Round(Decimal`</ph> <ph id="ph2">`d`</ph> <ph id="ph3">`)`</ph></target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Rounds a decimal value to the nearest integer, and rounds midpoint values to the nearest even number (<bpt id="p1">[</bpt>example<ept id="p1">](#Round1_Example)</ept>).</source>
          <target state="translated">10 進数の値を最も近い整数に丸め、最も近い偶数に中間値を丸めます (<bpt id="p1">[</bpt>例<ept id="p1">](#Round1_Example)</ept>)。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><ph id="ph1">`Double Math.Round(Double`</ph> <ph id="ph2">`a`</ph> <ph id="ph3">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Double Math.Round(Double`</ph> <ph id="ph2">`a`</ph> <ph id="ph3">`)`</ph></target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Rounds a double-precision floating-point value to the nearest integer, and rounds midpoint values to the nearest even number (<bpt id="p1">[</bpt>example<ept id="p1">](#Round2_Example)</ept>).</source>
          <target state="translated">倍精度浮動小数点値を最も近い整数に丸め、最も近い偶数に中間値を丸めます (<bpt id="p1">[</bpt>例<ept id="p1">](#Round2_Example)</ept>)。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><ph id="ph1">`Decimal Math.Round(Decimal`</ph> <ph id="ph2">`d`</ph> <ph id="ph3">`, Int32`</ph>  <ph id="ph4">`decimals`</ph> <ph id="ph5">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Decimal Math.Round(Decimal`</ph> <ph id="ph2">`d`</ph> <ph id="ph3">`, Int32`</ph>  <ph id="ph4">`decimals`</ph> <ph id="ph5">`)`</ph></target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Rounds a decimal value to a specified number of fractional digits, and rounds midpoint values to the nearest even number (<bpt id="p1">[</bpt>example<ept id="p1">](#Round3_Example)</ept>).</source>
          <target state="translated">指定した小数部の桁の 10 進値に丸め、最も近い偶数に中間値を丸めます (<bpt id="p1">[</bpt>例<ept id="p1">](#Round3_Example)</ept>)。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><ph id="ph1">`Double Math.Round(Double`</ph> <ph id="ph2">`value`</ph> <ph id="ph3">`, Int32`</ph>  <ph id="ph4">`digits`</ph> <ph id="ph5">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Double Math.Round(Double`</ph> <ph id="ph2">`value`</ph> <ph id="ph3">`, Int32`</ph>  <ph id="ph4">`digits`</ph> <ph id="ph5">`)`</ph></target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Rounds a double-precision floating-point value to a specified number of fractional digits, and rounds midpoint values to the nearest even number (<bpt id="p1">[</bpt>example<ept id="p1">](#Round4_Example)</ept>).</source>
          <target state="translated">指定された数の小数部の桁を倍精度浮動小数点値に丸めますおよび最も近い偶数に中間値に丸めます (<bpt id="p1">[</bpt>例<ept id="p1">](#Round4_Example)</ept>)。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><ph id="ph1">`Decimal Math.Round(Decimal`</ph> <ph id="ph2">`d`</ph> <ph id="ph3">`, MidpointRounding`</ph>  <ph id="ph4">`mode`</ph> <ph id="ph5">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Decimal Math.Round(Decimal`</ph> <ph id="ph2">`d`</ph> <ph id="ph3">`, MidpointRounding`</ph>  <ph id="ph4">`mode`</ph> <ph id="ph5">`)`</ph></target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Rounds a decimal value to the nearest integer, and uses the specified rounding convention for midpoint values (<bpt id="p1">[</bpt>example<ept id="p1">](#Round5_Example)</ept>).</source>
          <target state="translated">10 進数の値を最も近い整数に丸めます、中間値を指定した丸め処理を行う規則を使用して (<bpt id="p1">[</bpt>例<ept id="p1">](#Round5_Example)</ept>)。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><ph id="ph1">`Double Math.Round(Double`</ph> <ph id="ph2">`value`</ph> <ph id="ph3">`, MidpointRounding`</ph>  <ph id="ph4">`mode`</ph> <ph id="ph5">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Double Math.Round(Double`</ph> <ph id="ph2">`value`</ph> <ph id="ph3">`, MidpointRounding`</ph>  <ph id="ph4">`mode`</ph> <ph id="ph5">`)`</ph></target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Rounds a double-precision floating-point value to the nearest integer, and uses the specified rounding convention for midpoint values (<bpt id="p1">[</bpt>example<ept id="p1">](#Round6_Example)</ept>).</source>
          <target state="translated">倍精度浮動小数点値を最も近い整数に丸めます、中間値を指定した丸め処理を行う規則を使用して (<bpt id="p1">[</bpt>例<ept id="p1">](#Round6_Example)</ept>)。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><ph id="ph1">`Decimal Math.Round(Decimal`</ph> <ph id="ph2">`d`</ph> <ph id="ph3">`, Int32`</ph>  <ph id="ph4">`decimals`</ph> <ph id="ph5">`, MidpointRounding`</ph>  <ph id="ph6">`mode`</ph> <ph id="ph7">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Decimal Math.Round(Decimal`</ph> <ph id="ph2">`d`</ph> <ph id="ph3">`, Int32`</ph>  <ph id="ph4">`decimals`</ph> <ph id="ph5">`, MidpointRounding`</ph>  <ph id="ph6">`mode`</ph> <ph id="ph7">`)`</ph></target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Rounds a decimal value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values (<bpt id="p1">[</bpt>example<ept id="p1">](#Round7_Example)</ept>).</source>
          <target state="translated">指定した小数部の桁の 10 進数値を四捨五入し、中間値の指定の丸め処理を行う規則を使用 (<bpt id="p1">[</bpt>例<ept id="p1">](#Round7_Example)</ept>)。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><ph id="ph1">`Double Math.Round(Double`</ph> <ph id="ph2">`value`</ph> <ph id="ph3">`, Int32`</ph>  <ph id="ph4">`digits`</ph> <ph id="ph5">`, MidpointRounding`</ph>  <ph id="ph6">`mode`</ph> <ph id="ph7">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Double Math.Round(Double`</ph> <ph id="ph2">`value`</ph> <ph id="ph3">`, Int32`</ph>  <ph id="ph4">`digits`</ph> <ph id="ph5">`, MidpointRounding`</ph>  <ph id="ph6">`mode`</ph> <ph id="ph7">`)`</ph></target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Rounds a double-precision floating-point value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values (<bpt id="p1">[</bpt>example<ept id="p1">](#Round8_Example)</ept>).</source>
          <target state="translated">指定された数の小数部の桁を倍精度浮動小数点値に丸めますおよび中間値の指定の丸め処理を行う規則を使用 (<bpt id="p1">[</bpt>例<ept id="p1">](#Round8_Example)</ept>)。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Parameters</source>
          <target state="translated">パラメーター</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>This is a complete list of parameters for the <ph id="ph1">&lt;xref:System.Math.Round%2A&gt;</ph> method.</source>
          <target state="translated">これは、パラメーターの完全な一覧、<ph id="ph1">&lt;xref:System.Math.Round%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>For the parameters used by each overload, see the overload syntax above.</source>
          <target state="translated">各オーバー ロードで使用するパラメーター、上記のオーバー ロードの構文を参照してください。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Parameter</source>
          <target state="translated">パラメーター</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Type</source>
          <target state="translated">型</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>A number to be rounded.</source>
          <target state="translated">丸め対象の数です。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>A double-precision floating-point number to be rounded.</source>
          <target state="translated">丸め対象の倍精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The number of fractional digits in the return value.</source>
          <target state="translated">戻り値の小数部の桁数。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>For <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values, it can range from 0 to 28.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Decimal&gt;</ph>値、その範囲は 0 ~ 28 です。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>For <ph id="ph1">&lt;xref:System.Double&gt;</ph> values, it can range from 0 to 15.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double&gt;</ph>値、その範囲は 0 ~ 15 です。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Note that 15 is the maximum number of integral and fractional digits supported by the <ph id="ph1">&lt;xref:System.Double&gt;</ph> type.</source>
          <target state="translated">サポートされている整数部と小数部の桁数の最大数は、15、<ph id="ph1">&lt;xref:System.Double&gt;</ph>型です。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Default value: 0, which rounds to an integer</source>
          <target state="translated">既定値: 0 で、整数に丸められます</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>A flag that specifies the convention to use for rounding midpoint values.</source>
          <target state="translated">中間の値を丸めるに使用する規則を指定するフラグ。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>See <bpt id="p1">[</bpt>Midpoint values and rounding conventions<ept id="p1">](#Midpoint)</ept>.</source>
          <target state="translated">参照してください<bpt id="p1">[</bpt>中間値と丸め処理を行う規則<ept id="p1">](#Midpoint)</ept>です。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Default value: <ph id="ph1">&lt;xref:System.MidpointRounding.ToEven?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">既定値: <ph id="ph1">&lt;xref:System.MidpointRounding.ToEven?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Return value</source>
          <target state="translated">戻り値</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Type: <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> or <ph id="ph2">&lt;xref:System.Double&gt;</ph>, depending on the type of the value to be rounded.</source>
          <target state="translated">型:<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>または<ph id="ph2">&lt;xref:System.Double&gt;</ph>丸め対象の値の型に応じて、します。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>A numeric value of the same type as <ph id="ph1">`d`</ph>, <ph id="ph2">`a`</ph>, or <ph id="ph3">`value`</ph>, but rounded either to an integer or to the specified number of decimal digits.</source>
          <target state="translated">同じ型の数値<ph id="ph1">`d`</ph>、 <ph id="ph2">`a`</ph>、または<ph id="ph3">`value`</ph>、整数または指定した 10 進数のいずれかが丸みのあります。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>See <bpt id="p1">[</bpt>Midpoint values and rounding conventions<ept id="p1">](#Midpoint)</ept> for information about rounding numbers with midpoint values.</source>
          <target state="translated">参照してください<bpt id="p1">[</bpt>中間値と丸め処理を行う規則<ept id="p1">](#Midpoint)</ept>については、中間値を持つ数値丸め処理を行います。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>When rounding midpoint values, the rounding algorithm performs an equality test.</source>
          <target state="translated">中間値を丸め、丸め、アルゴリズムは、等値テストを実行します。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Because of problems of binary representation and precision in the floating-point format, the value returned by the method can be unexpected.</source>
          <target state="translated">バイナリ表現と精度浮動小数点形式での問題、原因は、メソッドによって返される値を予期できないことができます。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>For more information, see <bpt id="p1">[</bpt>Rounding and precision<ept id="p1">](#Precision)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>丸めと精度<ept id="p1">](#Precision)</ept>です。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>If an overload with a <ph id="ph1">&lt;xref:System.Double&gt;</ph> parameter is called with <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>, the method returns <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">オーバー ロードの場合、<ph id="ph1">&lt;xref:System.Double&gt;</ph>パラメーターがで呼び出された<ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>、メソッドを返します<ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>If it is called with <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, the method returns <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, respectively.</source>
          <target state="translated">使用して呼び出した場合<ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>または<ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>、メソッドを返します<ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>または<ph id="ph4">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>、それぞれします。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Exceptions</source>
          <target state="translated">例外</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Exception</source>
          <target state="translated">例外</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Condition</source>
          <target state="translated">条件</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Thrown by</source>
          <target state="translated">によってスローされます。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The result is outside the range of the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> type.</source>
          <target state="translated">結果は、範囲の<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>型です。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><ph id="ph1">`decimals`</ph> is less than 0 or greater than 28.</source>
          <target state="translated"><ph id="ph1">`decimals`</ph> が 0 未満か、28 を超えています。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><ph id="ph1">`digits`</ph> is less than 0 or greater than 15.</source>
          <target state="translated"><ph id="ph1">`digits`</ph> が 0 より小さいか、15 を超えています。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><ph id="ph1">`mode`</ph> is not a valid value of <ph id="ph2">&lt;xref:System.MidpointRounding&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`mode`</ph> が有効な <ph id="ph2">&lt;xref:System.MidpointRounding&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Which method do I call?</source>
          <target state="translated">どのメソッドが呼び出ししますか。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>To</source>
          <target state="translated">終了</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Call</source>
          <target state="translated">Call</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Round a number to an integer by using the rounding to nearest convention.</source>
          <target state="translated">最も近い規則に丸め処理を使用して整数の数値を丸めます。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Round a number to an integer by using a specified rounding convention.</source>
          <target state="translated">円形の数値を指定されたを使用して、整数丸めの規約です。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Round a number to a specified number of fractional digits by using the rounding to nearest convention.</source>
          <target state="translated">最も近い規則に丸め処理を使用して指定した小数部の桁数に数値を丸めます。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Round a number to a specified number of fractional digits by using a specified rounding convention.</source>
          <target state="translated">指定した小数部の桁数の指定を使用してに数値を丸め規約丸め処理します。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Round a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value to a specified number of fractional digits by using a specified rounding convention and minimizing the loss of precision.</source>
          <target state="translated">Round、<ph id="ph1">&lt;xref:System.Single&gt;</ph>値を指定した小数部の桁数とを使用して、指定された規約の丸め処理を行う有効桁数の損失を最小限に抑えられます。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Convert the <ph id="ph1">&lt;xref:System.Single&gt;</ph> to a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> and call <ph id="ph3">&lt;xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29&gt;</ph>.</source>
          <target state="translated">変換、<ph id="ph1">&lt;xref:System.Single&gt;</ph>を<ph id="ph2">&lt;xref:System.Decimal&gt;</ph>を呼び出すと<ph id="ph3">&lt;xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Round a number to a specified number of fractional digits while minimizing problems of precision in rounding midpoint values.</source>
          <target state="translated">中間の値を丸めるの精度の問題を最小限に抑えながらを指定した小数部の桁数の数値を丸めます。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Call a rounding method that implements a "greater than or approximately equal to" comparison.</source>
          <target state="translated">「以上にほぼ等しい」比較を実装する丸め処理を行うメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>See <bpt id="p1">[</bpt>Rounding and precision<ept id="p1">](#Precision)</ept>.</source>
          <target state="translated">参照してください<bpt id="p1">[</bpt>丸めと精度<ept id="p1">](#Precision)</ept>です。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Round a fractional value to an integer that is greater than the fractional value.</source>
          <target state="translated">小数部の値を整数ラウンド小数部の値よりも大きいです。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>For example, round 3.1 to 4.</source>
          <target state="translated">たとえば、round 3.1 ~ 4 です。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Round a fractional value to an integer that is less than the fractional value.</source>
          <target state="translated">小数部の値を整数 round は小数部の値よりも小さいです。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>For example, round 3.9 to 3.</source>
          <target state="translated">たとえば、3.9. ~ 3. を丸められます。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Midpoint values and rounding conventions</source>
          <target state="translated">中間値と丸め処理を行う規則</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Rounding involves converting a numeric value with a specified precision to the nearest value with less precision.</source>
          <target state="translated">丸め処理を行うには、精度が低いと最も近い値に指定された有効桁数を持つ数値の値を変換するが含まれます。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.Math.Round%28System.Double%29&gt;</ph> method to round a value of 3.4 to 3.0, and the <ph id="ph2">&lt;xref:System.Math.Round%28System.Double%2CSystem.Int32%29&gt;</ph> method to round a value of 3.579 to 3.58.</source>
          <target state="translated">たとえば、使用することができます、 <ph id="ph1">&lt;xref:System.Math.Round%28System.Double%29&gt;</ph> 3.4 3.0 への値を丸めるメソッドおよび<ph id="ph2">&lt;xref:System.Math.Round%28System.Double%2CSystem.Int32%29&gt;</ph>3.579 に 3.58 の値を丸めるメソッド。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</source>
          <target state="translated">中間値では、結果の最下位の数字の後の値は 2 つの数値の中間正確にします。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</source>
          <target state="translated">たとえば、3.47500 は、中間の値である場合に 2 つの小数点以下桁数が丸められますや 7.500 中間の値は整数に丸め 場合です。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>In these cases, the nearest value can't be easily identified without a rounding convention.</source>
          <target state="translated">このような場合は、最も近い値簡単に識別できません丸め方法なし。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The <ph id="ph1">&lt;xref:System.Math.Round%2A&gt;</ph> method supports two rounding conventions for handling midpoint values:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Math.Round%2A&gt;</ph>メソッドは、中間値を処理するための丸め処理を行う 2 つの規則をサポートしています。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><bpt id="p1">**</bpt>Rounding away from zero<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>ゼロから離れる方向に丸め処理<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Midpoint values are rounded to the next number away from zero.</source>
          <target state="translated">中間値は、次の番号をゼロから離れる方向に丸められます。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</source>
          <target state="translated">3.8 に 3.75 が次の例では、四捨五入-3.8 に 3.9 に 3.85 ラウンド-3.75 丸める-3.9 に丸められます-3.85 とします。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>This form of rounding is represented by the <ph id="ph1">&lt;xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType&gt;</ph> enumeration member.</source>
          <target state="translated">この形式の丸めがによって表される、<ph id="ph1">&lt;xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType&gt;</ph>列挙体のメンバーです。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Rounding away from zero is the most widely known form of rounding.</source>
          <target state="translated">ゼロから離れる方向に丸め処理は、丸めた最もよく知られた形式です。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source><bpt id="p1">**</bpt>Rounding to nearest, or banker's rounding<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>、近似値に丸め処理や銀行型丸め方式<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Midpoint values are rounded to the nearest even number.</source>
          <target state="translated">中間値は、最も近い偶数に丸められます。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</source>
          <target state="translated">たとえば、3.75 と 3.85 の両方が 3.8 に丸める、-3.75 と-3.85 の両方が-3.8 に丸めます。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>This form of rounding is represented by the <ph id="ph1">&lt;xref:System.MidpointRounding.ToEven?displayProperty=nameWithType&gt;</ph> enumeration member.</source>
          <target state="translated">この形式の丸めがによって表される、<ph id="ph1">&lt;xref:System.MidpointRounding.ToEven?displayProperty=nameWithType&gt;</ph>列挙体のメンバーです。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Rounding to nearest is the standard form of rounding used in financial and statistical operations.</source>
          <target state="translated">近似値に丸め処理は、財務や統計に関する操作で使用される丸め処理の標準的な形式です。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>It conforms to IEEE Standard 754, section 4.</source>
          <target state="translated">IEEE 標準 754、セクション 4 に準拠しています。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</source>
          <target state="translated">複数の丸め処理で使用する場合、常に中間値を単一方向に丸めるによって引き起こされる出る丸めの誤差が減少します。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>In some cases, this rounding error can be significant.</source>
          <target state="translated">場合によっては、この丸めエラーを重要なことがあります。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The following example illustrates the bias that can result from consistently rounding midpoint values in a single direction.</source>
          <target state="translated">次の例は、常に中間値を単一方向に丸めるに生じるバイアスを示しています。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The example computes the true mean of an array of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values, and then computes the mean when the values in the array are rounded by using the two conventions.</source>
          <target state="translated">例では、配列の真の平均を計算する<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>値、および 2 つの規則を使用して、配列内の値が丸められる場合、平均を計算します。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>In this example, the true mean and the mean that results when rounding to nearest are the same.</source>
          <target state="translated">この例では真の平均および近似値に丸め処理を行うときに結果の平均は同じです。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>However, the mean that results when rounding away from zero differs by .05 (or by 3.6%) from the true mean.</source>
          <target state="translated">ただし、ゼロから離れる方向丸め処理を行うときに結果を平均値とは異なります.05 (または 3.6%) 真の平均です。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>By default, the <ph id="ph1">&lt;xref:System.Math.Round%2A&gt;</ph> method uses the rounding to nearest convention.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;xref:System.Math.Round%2A&gt;</ph>メソッドは、最も近い規則に丸めを使用します。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The following table lists the overloads of the <ph id="ph1">&lt;xref:System.Math.Round%2A&gt;</ph> method and the rounding convention that each uses.</source>
          <target state="translated">次の表のオーバー ロードの一覧、<ph id="ph1">&lt;xref:System.Math.Round%2A&gt;</ph>メソッドおよび丸め規約それぞれ使用します。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Overload</source>
          <target state="translated">オーバーロード</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Rounding convention</source>
          <target state="translated">規則の丸め処理を行う</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Determined by <ph id="ph1">`mode`</ph> parameter.</source>
          <target state="translated">によって決定<ph id="ph1">`mode`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Determined by <ph id="ph1">`mode`</ph> parameter</source>
          <target state="translated">によって決定<ph id="ph1">`mode`</ph>パラメーター</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Determined by <ph id="ph1">`mode`</ph> parameter</source>
          <target state="translated">によって決定<ph id="ph1">`mode`</ph>パラメーター</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Determined by <ph id="ph1">`mode`</ph> parameter</source>
          <target state="translated">によって決定<ph id="ph1">`mode`</ph>パラメーター</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Rounding and precision</source>
          <target state="translated">丸め処理や有効桁数</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>In order to determine whether a rounding operation involves a midpoint value, the <ph id="ph1">&lt;xref:System.Math.Round%2A&gt;</ph> method multiplies the original value to be rounded by 10<bpt id="p1">&lt;sup&gt;</bpt>n<ept id="p1">&lt;/sup&gt;</ept>, where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is the desired number of fractional digits in the return value, and then determines whether the remaining fractional portion of the value is greater than or equal to .5.</source>
          <target state="translated">丸め操作は、中間値かどうかを判断するため、<ph id="ph1">&lt;xref:System.Math.Round%2A&gt;</ph>メソッドは元の値が 10 で切り捨てられます、乗算<bpt id="p1">&lt;sup&gt;</bpt>n<ept id="p1">&lt;/sup&gt;</ept>ここで、 <bpt id="p2">*</bpt>n<ept id="p2">*</ept>小数部の必要な数です戻り値、数字、値の残りの小数部が.5 以上かどうかを判断します。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>This is a slight variation on a test for equality, and as discussed in the "Testing for Equality" section of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> reference topic, tests for equality with floating-point values are problematic because of the floating-point format's issues with binary representation and precision.</source>
          <target state="translated">これは、「テストの等値」セクションに等しいかどうか、および説明したようにテストを少し変えたバリエーションとして、<ph id="ph1">&lt;xref:System.Double&gt;</ph>リファレンス トピックでは、浮動小数点値の等価性のテストが問題になるバイナリ浮動小数点の書式の問題のため形式と有効桁数です。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>This means that any fractional portion of a number that is slightly less than .5 (because of a loss of precision) will not be rounded upward.</source>
          <target state="translated">これは、こと (精度が低下する) ため .5 よりもやや少ない数値の任意の小数部は丸められません上方向を意味します。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The following example illustrates the problem.</source>
          <target state="translated">この問題を説明する例を次に示します。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>It repeatedly adds .1 to 11.0 and rounds the result to the nearest integer.</source>
          <target state="translated">繰り返し、.1 のどちらに 11.0 を追加し、結果を最も近い整数に丸めます。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Regardless of the rounding convention, 11.5 should round to 12.</source>
          <target state="translated">丸めの方法に関係なく 11.5 は 12 に丸める必要があります。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>However, as the output from the example shows, it does not.</source>
          <target state="translated">ただしの例から出力として存在しません。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The example uses the "R" <bpt id="p1">[</bpt>standard numeric format string<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> to display the floating point value's full precision, and shows that the value to be rounded has lost precision during repeated additions, and its value is actually 11.499999999999998.</source>
          <target state="translated">例では、"R"を使用して<bpt id="p1">[</bpt>標準数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>を表示する、浮動小数点値の完全な精度、丸め対象の値が繰り返しの追加中に有効桁数を失ったことを示していますし、その値が実際には11.499999999999998 です。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Because .499999999999998 is less than .5, the value is not rounded to the next highest integer.</source>
          <target state="translated">.499999999999998 が.5 より小さいであるために、値は次に大きい整数に丸められません。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>As the example also shows, this problem does not occur if we simply assign the constant value 11.5 to a <ph id="ph1">&lt;xref:System.Double&gt;</ph> variable.</source>
          <target state="translated">定数値 11.5 に割り当てているだけの場合、例に示すもこの問題は発生しません、<ph id="ph1">&lt;xref:System.Double&gt;</ph>変数。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Problems of precision in rounding midpoint values are most likely to arise in the following conditions:</source>
          <target state="translated">中間の値を丸めるの精度の問題は、次の条件が発生する可能性が最も高いです。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>When a fractional value cannot be expressed precisely in the floating-point type's binary format.</source>
          <target state="translated">ときに、浮動小数点型のバイナリ形式で正確に小数部の値は表現できません。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>When the value to be rounded is calculated from one or more floating-point operations.</source>
          <target state="translated">ときに値が切り捨てられますが、1 つまたは複数の浮動小数点演算から計算されます。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>When the value to be rounded is a <ph id="ph1">&lt;xref:System.Single&gt;</ph> rather than a <ph id="ph2">&lt;xref:System.Double&gt;</ph> or <ph id="ph3">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">丸め対象の値がの場合、<ph id="ph1">&lt;xref:System.Single&gt;</ph>ではなく、<ph id="ph2">&lt;xref:System.Double&gt;</ph>または<ph id="ph3">&lt;xref:System.Decimal&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>For more information, see the next section, <bpt id="p1">[</bpt>Rounding and single-precision floating-point values<ept id="p1">](#Single)</ept>.</source>
          <target state="translated">詳細については、次のセクションを参照してください。<bpt id="p1">[</bpt>丸めと単精度浮動小数点値<ept id="p1">](#Single)</ept>です。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>In cases where the lack of precision in rounding operations is problematic, you can do the following:</source>
          <target state="translated">丸め操作の精度の不足が問題のある場合には、次の操作を行うことができます。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>If the rounding operation calls an overload that rounds a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value, you can change the <ph id="ph2">&lt;xref:System.Double&gt;</ph> to a <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> value and call an overload that rounds a <ph id="ph4">&lt;xref:System.Decimal&gt;</ph> value instead.</source>
          <target state="translated">丸め操作は、四捨五入するオーバー ロードを呼び出す場合、<ph id="ph1">&lt;xref:System.Double&gt;</ph>値を変更できます、<ph id="ph2">&lt;xref:System.Double&gt;</ph>を<ph id="ph3">&lt;xref:System.Decimal&gt;</ph>値および丸くオーバー ロードを呼び出して、<ph id="ph4">&lt;xref:System.Decimal&gt;</ph>値の代わりにします。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Although the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> data type also has problems of representation and loss of precision, these issues are far less common.</source>
          <target state="translated">ただし、<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>データ型は、有効桁数の損失と表現の問題にもに、これらの問題ははるかにあまり一般的です。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Define a custom rounding algorithm that performs a "nearly equal" test to determine whether the value to be rounded is acceptably close to a midpoint value.</source>
          <target state="translated">丸め対象の値が許容可能な中間値に近いかを判断する「とほぼ同じ」テストを実行するカスタムの丸め処理を行うアルゴリズムを定義します。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The following example defines a <ph id="ph1">`RoundApproximate`</ph> method that examines whether a fractional value is sufficiently near to a midpoint value to be subject to midpoint rounding.</source>
          <target state="translated">次の例では定義、<ph id="ph1">`RoundApproximate`</ph>小数部の値が中間丸め処理を行う対象となることに中間値の近くに十分かどうかを検査するメソッド。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>As the output from the example shows, it corrects the rounding problem shown in the previous example.</source>
          <target state="translated">例の出力では、前の例に示すように丸めの問題を修正します。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Rounding and single-precision floating-point values</source>
          <target state="translated">丸めと単精度浮動小数点値</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The <ph id="ph1">&lt;xref:System.Math.Round%2A&gt;</ph> method includes overloads that accept arguments of type <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> and <ph id="ph3">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Math.Round%2A&gt;</ph>メソッドには、型の引数を受け入れるオーバー ロードが含まれています。<ph id="ph2">&lt;xref:System.Decimal&gt;</ph>と<ph id="ph3">&lt;xref:System.Double&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>There are no methods that round values of type <ph id="ph1">&lt;xref:System.Single&gt;</ph>.</source>
          <target state="translated">型の値を丸める方法がない<ph id="ph1">&lt;xref:System.Single&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>If you pass a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value to one of the overloads of the <ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph> method, it is cast (in C#) or converted (in Visual Basic) to a <ph id="ph3">&lt;xref:System.Double&gt;</ph>, and the corresponding <ph id="ph4">&lt;xref:System.Math.Round%2A&gt;</ph> overload with a <ph id="ph5">&lt;xref:System.Double&gt;</ph> parameter is called.</source>
          <target state="translated">渡す場合、<ph id="ph1">&lt;xref:System.Single&gt;</ph>のオーバー ロードのいずれかの値、<ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph>にキャスト (C# の場合) は、メソッド、またはに (Visual Basic) の変換、<ph id="ph3">&lt;xref:System.Double&gt;</ph>と、対応する<ph id="ph4">&lt;xref:System.Math.Round%2A&gt;</ph>を持つオーバー ロード、<ph id="ph5">&lt;xref:System.Double&gt;</ph>パラメーターと呼びます。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Although this is a widening conversion, it often involves a loss of precision, as the following example illustrates.</source>
          <target state="translated">これは、拡大変換が、多くの場合に関係する、有効桁数の損失次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>When a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value of 16.325 is passed to the <ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph> method and rounded to two decimal places using the rounding to nearest convention, the result is 16.33 and not the expected result of 16.32.</source>
          <target state="translated">ときに、 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 16.325 の値は、<ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph>メソッドされ、結果は 16.32 の 16.33、されません、期待される結果を最も近い規則に丸め処理を使用して 2 つの小数点以下桁数に丸められます、します。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>This unexpected result is due to a loss of precision in the conversion of the <ph id="ph1">&lt;xref:System.Single&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">この予期しない結果がへの変換の精度の損失によるは、<ph id="ph1">&lt;xref:System.Single&gt;</ph>値を<ph id="ph2">&lt;xref:System.Double&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Because the resulting <ph id="ph1">&lt;xref:System.Double&gt;</ph> value of 16.325000762939453 is not a midpoint value and is greater than 16.325, it is always rounded upward.</source>
          <target state="translated">結果として得られる<ph id="ph1">&lt;xref:System.Double&gt;</ph>16.325000762939453 の値の中間値ではありません 16.325 より大きい、上方向へ常に丸められます。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>In many cases, as the example illustrates, the loss of precision can be minimized or eliminated by casting or converting the <ph id="ph1">&lt;xref:System.Single&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">多くの場合、例のように、精度が失われることが最小化またはキャストまたは変換で削除されました、<ph id="ph1">&lt;xref:System.Single&gt;</ph>値を<ph id="ph2">&lt;xref:System.Decimal&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Note that, because this is a narrowing conversion, it requires using a cast operator or calling a conversion method.</source>
          <target state="translated">これは縮小変換であるため、必要でキャスト演算子を使用して、または変換メソッドを呼び出すことに注意してください。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Math.Round(Decimal) example</source>
          <target state="translated">Math.Round(Decimal) 例</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Math.Round%28System.Decimal%29&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Math.Round%28System.Decimal%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Note that the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value of 4.5 rounds to 4 rather than 5, because this overload uses the default <ph id="ph2">&lt;xref:System.MidpointRounding.ToEven&gt;</ph> convention.</source>
          <target state="translated">なお、<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>このオーバー ロードは、既定値を使用するために、4.5 の値が 5 ではなく 4 に丸める<ph id="ph2">&lt;xref:System.MidpointRounding.ToEven&gt;</ph>規則。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Math.Round(Double) example</source>
          <target state="translated">Math.Round(Double) 例</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The following example demonstrates rounding to the nearest integer value.</source>
          <target state="translated">次の例では、最も近い整数に丸め処理を示します。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Math.Round(Decimal, Int32) example</source>
          <target state="translated">Math.Round (10 進数、int32 型) の例</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The following example rounds decimal values with two fractional digits to values that have a single fractional digit.</source>
          <target state="translated">次の例では、2 桁の小数部を 1 つの桁の小数部を持つ値を含む 10 進数値を丸めます。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Math.Round(Double, Int32) example</source>
          <target state="translated">Math.Round (Double、int32 型) の例</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The following example rounds double values with two fractional digits to doubles that have a single fractional digit.</source>
          <target state="translated">次の例を 1 つの桁の小数部を持つ 1 個の double を 2 桁の小数部の数字を倍精度値に丸めます。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Math.Round(Decimal, MidpointRounding) example</source>
          <target state="translated">Math.Round (10 進数、MidpointRounding) の例</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The following example displays values returned by the <ph id="ph1">&lt;xref:System.Math.Round%28System.Decimal%29&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29&gt;</ph> method with a <ph id="ph3">`mode`</ph> argument of <ph id="ph4">&lt;xref:System.MidpointRounding.ToEven&gt;</ph>, and the <ph id="ph5">&lt;xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29&gt;</ph> method with a <ph id="ph6">`mode`</ph> argument of <ph id="ph7">&lt;xref:System.MidpointRounding.AwayFromZero&gt;</ph>.</source>
          <target state="translated">次の例は、によって返される値を表示、<ph id="ph1">&lt;xref:System.Math.Round%28System.Decimal%29&gt;</ph>メソッド、<ph id="ph2">&lt;xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29&gt;</ph>メソッドを<ph id="ph3">`mode`</ph>の引数<ph id="ph4">&lt;xref:System.MidpointRounding.ToEven&gt;</ph>、および<ph id="ph5">&lt;xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29&gt;</ph>メソッドを<ph id="ph6">`mode`</ph>の引数<ph id="ph7">&lt;xref:System.MidpointRounding.AwayFromZero&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Math.Round(Double, MidpointRounding) example</source>
          <target state="translated">Math.Round (Double、MidpointRounding) の例</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The following example displays values returned by the <ph id="ph1">&lt;xref:System.Math.Round%28System.Double%29&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29&gt;</ph> method with a <ph id="ph3">`mode`</ph> argument of <ph id="ph4">&lt;xref:System.MidpointRounding.ToEven&gt;</ph>, and the <ph id="ph5">&lt;xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29&gt;</ph> method with a <ph id="ph6">`mode`</ph> argument of <ph id="ph7">&lt;xref:System.MidpointRounding.AwayFromZero&gt;</ph>.</source>
          <target state="translated">次の例は、によって返される値を表示、<ph id="ph1">&lt;xref:System.Math.Round%28System.Double%29&gt;</ph>メソッド、<ph id="ph2">&lt;xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29&gt;</ph>メソッドを<ph id="ph3">`mode`</ph>の引数<ph id="ph4">&lt;xref:System.MidpointRounding.ToEven&gt;</ph>、および<ph id="ph5">&lt;xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29&gt;</ph>メソッドを<ph id="ph6">`mode`</ph>の引数<ph id="ph7">&lt;xref:System.MidpointRounding.AwayFromZero&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Math.Round(Decimal, Int32, MidpointRounding) example</source>
          <target state="translated">Math.Round (10 進数、Int32、MidpointRounding) の例</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Round%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.MidpointRounding&gt;</ph> enumeration.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Round%2A&gt;</ph>メソッドを<ph id="ph2">&lt;xref:System.MidpointRounding&gt;</ph>列挙します。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Math.Round(Double, Int32, MidpointRounding) example</source>
          <target state="translated">Math.Round (Double、Int32、MidpointRounding) の例</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29&gt;</ph> method with the <ph id="ph2">&lt;xref:System.MidpointRounding&gt;</ph> enumeration.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29&gt;</ph>メソッドを<ph id="ph2">&lt;xref:System.MidpointRounding&gt;</ph>列挙します。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Version information</source>
          <target state="translated">バージョン情報</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>.NET Framework</source>
          <target state="translated">.NET Framework</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Overloads without a <ph id="ph1">&lt;xref:System.MidpointRounding&gt;</ph> parameter are supported in: 4.5, 4, 3.5, 3.0, 2.0, 1.1, 1.0</source>
          <target state="translated">せずオーバー ロード、<ph id="ph1">&lt;xref:System.MidpointRounding&gt;</ph>でパラメーターがサポートされます: 4.5、4、3.5、3.0、2.0、1.1、1.0</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Overloads with a <ph id="ph1">&lt;xref:System.MidpointRounding&gt;</ph> parameter are supported in: 4.5, 4, 3.5, 3.0, 2.0</source>
          <target state="translated">オーバー ロード、<ph id="ph1">&lt;xref:System.MidpointRounding&gt;</ph>でパラメーターがサポートされます: 4.5、4、3.5、3.0、2.0</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>.NET Framework Client Profile</source>
          <target state="translated">.NET Framework Client Profile</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>All overloads are supported in: 4, 3.5 SP1</source>
          <target state="translated">すべてのオーバー ロードではサポートされて: 4、3.5 SP1</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>Portable Class Library</source>
          <target state="translated">ポータブル クラス ライブラリ</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>All overloads are supported</source>
          <target state="translated">すべてのオーバー ロードがサポートされています。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>.NET for Windows Store apps</source>
          <target state="translated">Windows ストア アプリ用 .NET</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>All overloads are supported in: Windows 8</source>
          <target state="translated">すべてのオーバー ロードではサポートされて: Windows 8</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal)">
          <source>A decimal number to be rounded.</source>
          <target state="translated">丸め対象の 10 進数。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal)">
          <source>Rounds a decimal value to the nearest integral value.</source>
          <target state="translated">10 進値を最も近い整数値に丸めます。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal)">
          <source>The integer nearest parameter <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          <target state="translated">パラメーター <ph id="ph1">&lt;paramref name="d" /&gt;</ph> に最も近い整数。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal)">
          <source>If the fractional component of <ph id="ph1">&lt;paramref name="d" /&gt;</ph> is halfway between two integers, one of which is even and the other odd, the even number is returned.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> の小数部が 2 つの整数 (一方が偶数で、もう一方が奇数) の中間にある場合は、偶数が返されます。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal)">
          <source>Note that this method returns a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> instead of an integral type.</source>
          <target state="translated">このメソッドは、整数型ではなく <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Round(System.Decimal)">
          <source>For examples and comprehensive usage information about this and other overloads of the <ph id="ph1">`Round`</ph> method, see the <ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph> reference page.</source>
          <target state="translated">例と包括的な使用状況についての他のオーバー ロードは、<ph id="ph1">`Round`</ph>メソッドを参照してください、<ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph>リファレンス ページ。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal)">
          <source>The result is outside the range of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">結果が <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> の範囲外です。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double)">
          <source>A double-precision floating-point number to be rounded.</source>
          <target state="translated">丸め対象の倍精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double)">
          <source>Rounds a double-precision floating-point value to the nearest integral value.</source>
          <target state="translated">倍精度浮動小数点値を最も近い整数値に丸めます。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double)">
          <source>The integer nearest <ph id="ph1">&lt;paramref name="a" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="a" /&gt;</ph> に最も近い整数。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double)">
          <source>If the fractional component of <ph id="ph1">&lt;paramref name="a" /&gt;</ph> is halfway between two integers, one of which is even and the other odd, then the even number is returned.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="a" /&gt;</ph> の小数部が 2 つの整数 (一方が偶数で、もう一方が奇数) の中間にある場合は、偶数が返されます。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double)">
          <source>Note that this method returns a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> instead of an integral type.</source>
          <target state="translated">このメソッドは、整数型ではなく <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Round(System.Double)">
          <source>For examples and comprehensive usage information about this and other overloads of the <ph id="ph1">`Round`</ph> method, see the <ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph> reference page.</source>
          <target state="translated">例と包括的な使用状況についての他のオーバー ロードは、<ph id="ph1">`Round`</ph>メソッドを参照してください、<ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph>リファレンス ページ。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Round(System.Double)">
          <source>Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <ph id="ph1">&lt;see cref="M:System.Math.Round(System.Double)" /&gt;</ph> method may not appear to round midpoint values to the nearest even integer.</source>
          <target state="translated">単精度浮動小数点数としての 10 進数の値を表すまたは場合によっては、浮動小数点値に対する算術演算を実行することができますの失われたのため、<ph id="ph1">&lt;see cref="M:System.Math.Round(System.Double)" /&gt;</ph>を中間値を丸めるには、メソッドは含めることはできません、近い偶数の整数。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Round(System.Double)">
          <source>In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <ph id="ph1">&lt;see cref="M:System.Math.Round(System.Double)" /&gt;</ph> method with a value of 11.5 returns 11 instead of 12.</source>
          <target state="translated">次の例では、浮動小数点値.1 は有限のバイナリ表現があるないため、最初の呼び出しで、 <ph id="ph1">&lt;see cref="M:System.Math.Round(System.Double)" /&gt;</ph> 11.5 の値を持つメソッドには、12 の代わりに 11 が返されます。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.Int32)">
          <source>A decimal number to be rounded.</source>
          <target state="translated">丸め対象の 10 進数。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.Int32)">
          <source>The number of decimal places in the return value.</source>
          <target state="translated">戻り値の小数部の桁数。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.Int32)">
          <source>Rounds a decimal value to a specified number of fractional digits.</source>
          <target state="translated">10 進値を、指定した小数部の桁数に丸めます。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.Int32)">
          <source>The number nearest to <ph id="ph1">&lt;paramref name="d" /&gt;</ph> that contains a number of fractional digits equal to <ph id="ph2">&lt;paramref name="decimals" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> に等しい小数部の桁数を格納する <ph id="ph2">&lt;paramref name="decimals" /&gt;</ph> に最も近い数値。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Round(System.Decimal,System.Int32)">
          <source>For examples and comprehensive usage information about this and other overloads of the <ph id="ph1">`Round`</ph> method, see the <ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph> reference page.</source>
          <target state="translated">例と包括的な使用状況についての他のオーバー ロードは、<ph id="ph1">`Round`</ph>メソッドを参照してください、<ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph>リファレンス ページ。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="decimals" /&gt;</ph> is less than 0 or greater than 28.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="decimals" /&gt;</ph> が 0 未満か、28 を超えています。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.Int32)">
          <source>The result is outside the range of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">結果が <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> の範囲外です。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.MidpointRounding)">
          <source>A decimal number to be rounded.</source>
          <target state="translated">丸め対象の 10 進数。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.MidpointRounding)">
          <source>Specification for how to round <bpt id="p1">&lt;c&gt;</bpt>d<ept id="p1">&lt;/c&gt;</ept> if it is midway between two other numbers.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>d<ept id="p1">&lt;/c&gt;</ept> が 2 つの数値の中間にある場合に丸める方法を指定します。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.MidpointRounding)">
          <source>Rounds a decimal value to the nearest integer.</source>
          <target state="translated">10 進値を最も近い整数に丸めます。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.MidpointRounding)">
          <source>A parameter specifies how to round the value if it is midway between two numbers.</source>
          <target state="translated">値が 2 つの数値の中間にある場合にその値を丸める方法をパラメーターで指定します。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.MidpointRounding)">
          <source>The integer nearest <ph id="ph1">&lt;paramref name="d" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> に最も近い整数。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.MidpointRounding)">
          <source>If <ph id="ph1">&lt;paramref name="d" /&gt;</ph> is halfway between two numbers, one of which is even and the other odd, then <ph id="ph2">&lt;paramref name="mode" /&gt;</ph> determines which of the two is returned.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> が 2 つの数値 (一方が偶数でもう一方が奇数) の中間にある場合、<ph id="ph2">&lt;paramref name="mode" /&gt;</ph> によって 2 つの数値のどちらが返されるかが決まります。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Round(System.Decimal,System.MidpointRounding)">
          <source>For examples and comprehensive usage information about this and other overloads of the <ph id="ph1">`Round`</ph> method, see the <ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph> reference page.</source>
          <target state="translated">例と包括的な使用状況についての他のオーバー ロードは、<ph id="ph1">`Round`</ph>メソッドを参照してください、<ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph>リファレンス ページ。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.MidpointRounding)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is not a valid value of <ph id="ph2">&lt;see cref="T:System.MidpointRounding" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> が有効な <ph id="ph2">&lt;see cref="T:System.MidpointRounding" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.MidpointRounding)">
          <source>The result is outside the range of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">結果が <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> の範囲外です。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.Int32)">
          <source>A double-precision floating-point number to be rounded.</source>
          <target state="translated">丸め対象の倍精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.Int32)">
          <source>The number of fractional digits in the return value.</source>
          <target state="translated">戻り値の小数部の桁数。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.Int32)">
          <source>Rounds a double-precision floating-point value to a specified number of fractional digits.</source>
          <target state="translated">倍精度浮動小数点値を指定した小数部の桁数に丸めます。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.Int32)">
          <source>The number nearest to <ph id="ph1">&lt;paramref name="value" /&gt;</ph> that contains a number of fractional digits equal to <ph id="ph2">&lt;paramref name="digits" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> に等しい小数部の桁数を格納する <ph id="ph2">&lt;paramref name="digits" /&gt;</ph> に最も近い数値。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Round(System.Double,System.Int32)">
          <source>For examples and comprehensive usage information about this and other overloads of the <ph id="ph1">`Round`</ph> method, see the <ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph> reference page.</source>
          <target state="translated">例と包括的な使用状況についての他のオーバー ロードは、<ph id="ph1">`Round`</ph>メソッドを参照してください、<ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph>リファレンス ページ。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="digits" /&gt;</ph> is less than 0 or greater than 15.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="digits" /&gt;</ph> が 0 より小さいか、15 を超えています。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Round(System.Double,System.Int32)">
          <source>Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <ph id="ph1">&lt;see cref="M:System.Math.Round(System.Double,System.Int32)" /&gt;</ph> method may not appear to round midpoint values to the nearest even value in the <ph id="ph2">&lt;paramref name="digits" /&gt;</ph> decimal position.</source>
          <target state="translated">単精度浮動小数点数としての 10 進数の値を表すまたは場合によっては、浮動小数点値に対する算術演算を実行することができますの失われたのため、<ph id="ph1">&lt;see cref="M:System.Math.Round(System.Double,System.Int32)" /&gt;</ph>を中間値を丸めるには、メソッドは含めることはできません、最も近い偶数の値で、<ph id="ph2">&lt;paramref name="digits" /&gt;</ph>小数部の位置。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Round(System.Double,System.Int32)">
          <source>This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</source>
          <target state="translated">これにより、2.135 は 2.14 ではなく 2.13 に丸められますここで、次の例を示します。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Round(System.Double,System.Int32)">
          <source>This occurs because internally the method multiplies <ph id="ph1">&lt;paramref name="value" /&gt;</ph> by 10<bpt id="p1">&lt;sup&gt;</bpt>digits<ept id="p1">&lt;/sup&gt;</ept>, and the multiplication operation in this case suffers from a loss of precision.</source>
          <target state="translated">これは、内部的には、メソッドは、乗算<ph id="ph1">&lt;paramref name="value" /&gt;</ph>10<bpt id="p1">&lt;sup&gt;</bpt>桁<ept id="p1">&lt;/sup&gt;</ept>、し、乗算操作は、有効桁数の損失からここでは低下します。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.MidpointRounding)">
          <source>A double-precision floating-point number to be rounded.</source>
          <target state="translated">丸め対象の倍精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.MidpointRounding)">
          <source>Specification for how to round <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> if it is midway between two other numbers.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> が 2 つの数値の中間にある場合に丸める方法を指定します。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.MidpointRounding)">
          <source>Rounds a double-precision floating-point value to the nearest integer.</source>
          <target state="translated">倍精度浮動小数点値を最も近い整数に丸めます。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.MidpointRounding)">
          <source>A parameter specifies how to round the value if it is midway between two numbers.</source>
          <target state="translated">値が 2 つの数値の中間にある場合にその値を丸める方法をパラメーターで指定します。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.MidpointRounding)">
          <source>The integer nearest <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> に最も近い整数。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.MidpointRounding)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two integers, one of which is even and the other odd, then <ph id="ph2">&lt;paramref name="mode" /&gt;</ph> determines which of the two is returned.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> が 2 つの整数 (一方が偶数でもう一方が奇数) の中間にある場合、<ph id="ph2">&lt;paramref name="mode" /&gt;</ph> によって 2 つの数値のどちらが返されるかが決まります。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Round(System.Double,System.MidpointRounding)">
          <source>For examples and comprehensive usage information about this and other overloads of the <ph id="ph1">`Round`</ph> method, see the <ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph> reference page.</source>
          <target state="translated">例と包括的な使用状況についての他のオーバー ロードは、<ph id="ph1">`Round`</ph>メソッドを参照してください、<ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph>リファレンス ページ。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.MidpointRounding)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is not a valid value of <ph id="ph2">&lt;see cref="T:System.MidpointRounding" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> が有効な <ph id="ph2">&lt;see cref="T:System.MidpointRounding" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Round(System.Double,System.MidpointRounding)">
          <source>Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <ph id="ph1">&lt;see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /&gt;</ph> method may not appear to round midpoint values to the nearest even integer.</source>
          <target state="translated">単精度浮動小数点数としての 10 進数の値を表すまたは場合によっては、浮動小数点値に対する算術演算を実行することができますの失われたのため、<ph id="ph1">&lt;see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /&gt;</ph>を中間値を丸めるには、メソッドは含めることはできません、近い偶数の整数。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Round(System.Double,System.MidpointRounding)">
          <source>In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <ph id="ph1">&lt;see cref="M:System.Math.Round(System.Double)" /&gt;</ph> method with a value of 11.5 returns 11 instead of 12.</source>
          <target state="translated">次の例では、浮動小数点値.1 は有限のバイナリ表現があるないため、最初の呼び出しで、 <ph id="ph1">&lt;see cref="M:System.Math.Round(System.Double)" /&gt;</ph> 11.5 の値を持つメソッドには、12 の代わりに 11 が返されます。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>A decimal number to be rounded.</source>
          <target state="translated">丸め対象の 10 進数。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>The number of decimal places in the return value.</source>
          <target state="translated">戻り値の小数部の桁数。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>Specification for how to round <bpt id="p1">&lt;c&gt;</bpt>d<ept id="p1">&lt;/c&gt;</ept> if it is midway between two other numbers.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>d<ept id="p1">&lt;/c&gt;</ept> が 2 つの数値の中間にある場合に丸める方法を指定します。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>Rounds a decimal value to a specified number of fractional digits.</source>
          <target state="translated">10 進値を、指定した小数部の桁数に丸めます。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>A parameter specifies how to round the value if it is midway between two numbers.</source>
          <target state="translated">値が 2 つの数値の中間にある場合にその値を丸める方法をパラメーターで指定します。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>The number nearest to <ph id="ph1">&lt;paramref name="d" /&gt;</ph> that contains a number of fractional digits equal to <ph id="ph2">&lt;paramref name="decimals" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> に等しい小数部の桁数を格納する <ph id="ph2">&lt;paramref name="decimals" /&gt;</ph> に最も近い数値。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>If <ph id="ph1">&lt;paramref name="d" /&gt;</ph> has fewer fractional digits than <ph id="ph2">&lt;paramref name="decimals" /&gt;</ph>, <ph id="ph3">&lt;paramref name="d" /&gt;</ph> is returned unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> の小数部の桁数が <ph id="ph2">&lt;paramref name="decimals" /&gt;</ph> よりも少ない場合、<ph id="ph3">&lt;paramref name="d" /&gt;</ph> がそのまま返されます。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>For examples and comprehensive usage information about this and other overloads of the <ph id="ph1">`Round`</ph> method, see the <ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph> reference page.</source>
          <target state="translated">例と包括的な使用状況についての他のオーバー ロードは、<ph id="ph1">`Round`</ph>メソッドを参照してください、<ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph>リファレンス ページ。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source><ph id="ph1">&lt;paramref name="decimals" /&gt;</ph> is less than 0 or greater than 28.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="decimals" /&gt;</ph> が 0 未満か、28 を超えています。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is not a valid value of <ph id="ph2">&lt;see cref="T:System.MidpointRounding" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> が有効な <ph id="ph2">&lt;see cref="T:System.MidpointRounding" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)">
          <source>The result is outside the range of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">結果が <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> の範囲外です。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)">
          <source>A double-precision floating-point number to be rounded.</source>
          <target state="translated">丸め対象の倍精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)">
          <source>The number of fractional digits in the return value.</source>
          <target state="translated">戻り値の小数部の桁数。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)">
          <source>Specification for how to round <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> if it is midway between two other numbers.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> が 2 つの数値の中間にある場合に丸める方法を指定します。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)">
          <source>Rounds a double-precision floating-point value to a specified number of fractional digits.</source>
          <target state="translated">倍精度浮動小数点値を指定した小数部の桁数に丸めます。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)">
          <source>A parameter specifies how to round the value if it is midway between two numbers.</source>
          <target state="translated">値が 2 つの数値の中間にある場合にその値を丸める方法をパラメーターで指定します。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)">
          <source>The number nearest to <ph id="ph1">&lt;paramref name="value" /&gt;</ph> that has a number of fractional digits equal to <ph id="ph2">&lt;paramref name="digits" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="digits" /&gt;</ph> に等しい小数部の桁数を格納する <ph id="ph1">&lt;paramref name="value" /&gt;</ph> に最も近い数値。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> has fewer fractional digits than <ph id="ph2">&lt;paramref name="digits" /&gt;</ph>, <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is returned unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> の小数部の桁数が <ph id="ph2">&lt;paramref name="digits" /&gt;</ph> よりも少ない場合、<ph id="ph3">&lt;paramref name="value" /&gt;</ph> がそのまま返されます。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)">
          <source>For examples and comprehensive usage information about this and other overloads of the <ph id="ph1">`Round`</ph> method, see the <ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph> reference page.</source>
          <target state="translated">例と包括的な使用状況についての他のオーバー ロードは、<ph id="ph1">`Round`</ph>メソッドを参照してください、<ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph>リファレンス ページ。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)">
          <source><ph id="ph1">&lt;paramref name="digits" /&gt;</ph> is less than 0 or greater than 15.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="digits" /&gt;</ph> が 0 より小さいか、15 を超えています。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is not a valid value of <ph id="ph2">&lt;see cref="T:System.MidpointRounding" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> が有効な <ph id="ph2">&lt;see cref="T:System.MidpointRounding" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)">
          <source>Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <ph id="ph1">&lt;see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /&gt;</ph> method may not appear to round midpoint values as specified by the <ph id="ph2">&lt;paramref name="mode" /&gt;</ph> parameter.</source>
          <target state="translated">単精度浮動小数点数としての 10 進数の値を表すまたは場合によっては、浮動小数点値に対する算術演算を実行することができますの失われたのため、<ph id="ph1">&lt;see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /&gt;</ph>メソッドが指定された中間値を丸めるされない可能性がありますによって、<ph id="ph2">&lt;paramref name="mode" /&gt;</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)">
          <source>This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</source>
          <target state="translated">これにより、2.135 は 2.14 ではなく 2.13 に丸められますここで、次の例を示します。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)">
          <source>This occurs because internally the method multiplies <ph id="ph1">&lt;paramref name="value" /&gt;</ph> by 10<bpt id="p1">&lt;sup&gt;</bpt>digits<ept id="p1">&lt;/sup&gt;</ept>, and the multiplication operation in this case suffers from a loss of precision.</source>
          <target state="translated">これは、内部的には、メソッドは、乗算<ph id="ph1">&lt;paramref name="value" /&gt;</ph>10<bpt id="p1">&lt;sup&gt;</bpt>桁<ept id="p1">&lt;/sup&gt;</ept>、し、乗算操作は、有効桁数の損失からここでは低下します。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="T:System.Math">
          <source>Returns an integer that indicates the sign of a number.</source>
          <target state="translated">数の符号を示す整数を返します。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Decimal)">
          <source>A signed decimal number.</source>
          <target state="translated">符号付きの 10 進数。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Decimal)">
          <source>Returns an integer that indicates the sign of a decimal number.</source>
          <target state="translated">10 進数の符号を示す整数を返します。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Decimal)">
          <source>A number that indicates the sign of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> の符号を示す数値 (次の表を参照)。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Decimal)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 戻り値</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Decimal)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 意味</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Decimal)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> -1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> -1</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Decimal)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Decimal)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Decimal)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 に等しい値です。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Decimal)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Decimal)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is greater than zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 より大きい値です。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Sign(System.Decimal)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Sign%28System.Decimal%29&gt;</ph> method to determine the sign of a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value and display it to the console.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Sign%28System.Decimal%29&gt;</ph>の符号を判断するメソッド、<ph id="ph2">&lt;xref:System.Decimal&gt;</ph>値し、それをコンソールに表示します。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Double)">
          <source>A signed number.</source>
          <target state="translated">符号付き数値。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Double)">
          <source>Returns an integer that indicates the sign of a double-precision floating-point number.</source>
          <target state="translated">倍精度浮動小数点数の符号を示す整数を返します。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Double)">
          <source>A number that indicates the sign of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> の符号を示す数値 (次の表を参照)。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Double)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 戻り値</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 意味</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> -1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> -1</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 に等しい値です。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is greater than zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 より大きい値です。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Sign(System.Double)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Sign%28System.Double%29&gt;</ph> method to determine the sign of a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value and display it to the console.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Sign%28System.Double%29&gt;</ph>の符号を判断するメソッド、<ph id="ph2">&lt;xref:System.Double&gt;</ph>値し、それをコンソールに表示します。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> と <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph> が等価です。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int16)">
          <source>A signed number.</source>
          <target state="translated">符号付き数値。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int16)">
          <source>Returns an integer that indicates the sign of a 16-bit signed integer.</source>
          <target state="translated">16 ビット符号付き整数の符号を示す整数を返します。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int16)">
          <source>A number that indicates the sign of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> の符号を示す数値 (次の表を参照)。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int16)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 戻り値</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int16)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 意味</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int16)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> -1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> -1</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int16)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int16)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int16)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 に等しい値です。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int16)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int16)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is greater than zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 より大きい値です。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Sign(System.Int16)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Sign%28System.Int16%29&gt;</ph> method to determine the sign of an <ph id="ph2">&lt;xref:System.Int16&gt;</ph> value and display it to the console.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Sign%28System.Int16%29&gt;</ph>の符号を判断するメソッド、<ph id="ph2">&lt;xref:System.Int16&gt;</ph>値し、それをコンソールに表示します。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int32)">
          <source>A signed number.</source>
          <target state="translated">符号付き数値。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int32)">
          <source>Returns an integer that indicates the sign of a 32-bit signed integer.</source>
          <target state="translated">32 ビット符号付き整数の符号を示す整数を返します。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int32)">
          <source>A number that indicates the sign of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> の符号を示す数値 (次の表を参照)。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int32)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 戻り値</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 意味</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> -1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> -1</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 に等しい値です。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is greater than zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 より大きい値です。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Sign(System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Sign%28System.Int32%29&gt;</ph> method to determine the sign of an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> value and display it to the console.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Sign%28System.Int32%29&gt;</ph>の符号を判断するメソッド、<ph id="ph2">&lt;xref:System.Int32&gt;</ph>値し、それをコンソールに表示します。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int64)">
          <source>A signed number.</source>
          <target state="translated">符号付き数値。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int64)">
          <source>Returns an integer that indicates the sign of a 64-bit signed integer.</source>
          <target state="translated">64 ビット符号付き整数の符号を示す正数を返します。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int64)">
          <source>A number that indicates the sign of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> の符号を示す数値 (次の表を参照)。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int64)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 戻り値</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 意味</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> -1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> -1</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 に等しい値です。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Int64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is greater than zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 より大きい値です。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Sign(System.Int64)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Sign%28System.Int64%29&gt;</ph> method to determine the sign of an <ph id="ph2">&lt;xref:System.Int64&gt;</ph> value and display it to the console.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Sign%28System.Int64%29&gt;</ph>の符号を判断するメソッド、<ph id="ph2">&lt;xref:System.Int64&gt;</ph>値し、それをコンソールに表示します。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.SByte)">
          <source>A signed number.</source>
          <target state="translated">符号付き数値。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.SByte)">
          <source>Returns an integer that indicates the sign of an 8-bit signed integer.</source>
          <target state="translated">8 ビット符号付き整数の符号を示す整数を返します。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.SByte)">
          <source>A number that indicates the sign of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> の符号を示す数値 (次の表を参照)。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.SByte)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 戻り値</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.SByte)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 意味</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.SByte)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> -1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> -1</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.SByte)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.SByte)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.SByte)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 に等しい値です。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.SByte)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.SByte)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is greater than zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 より大きい値です。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Sign(System.SByte)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Sign%28System.SByte%29&gt;</ph> method to determine the sign of an <ph id="ph2">&lt;xref:System.SByte&gt;</ph> value and display it to the console.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Sign%28System.SByte%29&gt;</ph>の符号を判断するメソッド、<ph id="ph2">&lt;xref:System.SByte&gt;</ph>値し、それをコンソールに表示します。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Single)">
          <source>A signed number.</source>
          <target state="translated">符号付き数値。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Single)">
          <source>Returns an integer that indicates the sign of a single-precision floating-point number.</source>
          <target state="translated">単精度浮動小数点数の符号を示す値を返します。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Single)">
          <source>A number that indicates the sign of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> の符号を示す数値 (次の表を参照)。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Single)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 戻り値</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Single)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 意味</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Single)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> -1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> -1</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Single)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Single)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Single)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 に等しい値です。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Single)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Single)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> is greater than zero.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="value" /&gt;</ph> が 0 より大きい値です。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Sign(System.Single)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Math.Sign%28System.Single%29&gt;</ph> method to determine the sign of a <ph id="ph2">&lt;xref:System.Single&gt;</ph> value and display it to the console.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Math.Sign%28System.Single%29&gt;</ph>の符号を判断するメソッド、<ph id="ph2">&lt;xref:System.Single&gt;</ph>値し、それをコンソールに表示します。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Math.Sign(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> と <ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph> が等価です。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Math.Sin(System.Double)">
          <source>An angle, measured in radians.</source>
          <target state="translated">ラジアンで表した角度。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Math.Sin(System.Double)">
          <source>Returns the sine of the specified angle.</source>
          <target state="translated">指定された角度のサインを返します。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Math.Sin(System.Double)">
          <source>The sine of <ph id="ph1">&lt;paramref name="a" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="a" /&gt;</ph> のサイン。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Math.Sin(System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="a" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>, this method returns <ph id="ph5">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="a" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>、<ph id="ph4">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> のいずれかに等しい場合、このメソッドは <ph id="ph5">&lt;see cref="F:System.Double.NaN" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Sin(System.Double)">
          <source>The angle, <ph id="ph1">`a`</ph>, must be in radians.</source>
          <target state="translated">角度を<ph id="ph1">`a`</ph>ラジアンである必要があります。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Sin(System.Double)">
          <source>Multiply by <ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>/180 to convert degrees to radians.</source>
          <target state="translated">乗算 <ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph> /180 度をラジアンに変換します。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Sin(System.Double)">
          <source>Acceptable values of <ph id="ph1">`a`</ph> range from approximately -9223372036854775295 to approximately 9223372036854775295.</source>
          <target state="translated">使用できる値の<ph id="ph1">`a`</ph>約-9223372036854775295 約 9223372036854775295 の範囲です。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Sin(System.Double)">
          <source>For values outside of this range, the <ph id="ph1">&lt;xref:System.Math.Sin%2A&gt;</ph> method returns <ph id="ph2">`a`</ph> unchanged rather than throwing an exception.</source>
          <target state="translated">この範囲外の値を<ph id="ph1">&lt;xref:System.Math.Sin%2A&gt;</ph>メソッドを返します。<ph id="ph2">`a`</ph>例外をスローするのではなく変更されません。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Sin(System.Double)">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Math.Sin%2A&gt;</ph> to evaluate certain trigonometric identities for selected angles.</source>
          <target state="translated">次の例では<ph id="ph1">&lt;xref:System.Math.Sin%2A&gt;</ph>を選択した角度の三角関数の特定の id を評価します。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Math.Sinh(System.Double)">
          <source>An angle, measured in radians.</source>
          <target state="translated">ラジアンで表した角度。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Math.Sinh(System.Double)">
          <source>Returns the hyperbolic sine of the specified angle.</source>
          <target state="translated">指定された角度のハイパーボリック サインを返します。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Math.Sinh(System.Double)">
          <source>The hyperbolic sine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> のハイパーボリック サイン。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Math.Sinh(System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Double.NaN" /&gt;</ph>, this method returns a <ph id="ph5">&lt;see cref="T:System.Double" /&gt;</ph> equal to <ph id="ph6">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>、または <ph id="ph4">&lt;see cref="F:System.Double.NaN" /&gt;</ph> のいずれかに等しい場合、このメソッドは <ph id="ph6">&lt;paramref name="value" /&gt;</ph> に等しい <ph id="ph5">&lt;see cref="T:System.Double" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Sinh(System.Double)">
          <source>The angle, <ph id="ph1">`value`</ph>, must be in radians.</source>
          <target state="translated">角度を<ph id="ph1">`value`</ph>ラジアンである必要があります。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Sinh(System.Double)">
          <source>Multiply by <ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>/180 to convert degrees to radians.</source>
          <target state="translated">乗算 <ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph> /180 度をラジアンに変換します。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Sinh(System.Double)">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Math.Sinh%2A&gt;</ph> to evaluate certain hyperbolic identities for selected values.</source>
          <target state="translated">次の例では<ph id="ph1">&lt;xref:System.Math.Sinh%2A&gt;</ph>を選択した値の特定の双曲線 id を評価します。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Math.Sqrt(System.Double)">
          <source>The number whose square root is to be found.</source>
          <target state="translated">平方根を求める対象の数値。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.Math.Sqrt(System.Double)">
          <source>Returns the square root of a specified number.</source>
          <target state="translated">指定された数値の平方根を返します。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Math.Sqrt(System.Double)">
          <source>One of the values in the following table.</source>
          <target state="translated">次の表に示した値のいずれか</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Math.Sqrt(System.Double)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph><ph id="ph4">&lt;paramref name="d" /&gt;</ph> parameter</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph><ph id="ph4">&lt;paramref name="d" /&gt;</ph> パラメーター</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.Math.Sqrt(System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 戻り値</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" uid="M:System.Math.Sqrt(System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero or positive</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0 または正</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Math.Sqrt(System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The positive square root of <ph id="ph3">&lt;paramref name="d" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> <ph id="ph3">&lt;paramref name="d" /&gt;</ph> の正の平方根。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Math.Sqrt(System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Negative</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 負</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Math.Sqrt(System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><bpt id="p2">&lt;item&gt;</bpt><bpt id="p3">&lt;term&gt;</bpt> Equals <ph id="ph4">&lt;see cref="F:System.Double.NaN" /&gt;</ph><ept id="p3">&lt;/term&gt;</ept><bpt id="p4">&lt;description&gt;</bpt><ph id="ph5">&lt;see cref="F:System.Double.NaN" /&gt;</ph><ept id="p4">&lt;/description&gt;</ept><ept id="p2">&lt;/item&gt;</ept><bpt id="p5">&lt;item&gt;</bpt><bpt id="p6">&lt;term&gt;</bpt> Equals <ph id="ph6">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph><ept id="p6">&lt;/term&gt;</ept><bpt id="p7">&lt;description&gt;</bpt><ph id="ph7">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph><ept id="p7">&lt;/description&gt;</ept><ept id="p5">&lt;/item&gt;</ept><ph id="ph8">&lt;/list&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><bpt id="p2">&lt;item&gt;</bpt><bpt id="p3">&lt;term&gt;</bpt> 等しい <ph id="ph4">&lt;see cref="F:System.Double.NaN" /&gt;</ph><ept id="p3">&lt;/term&gt;</ept><bpt id="p4">&lt;description&gt;</bpt><ph id="ph5">&lt;see cref="F:System.Double.NaN" /&gt;</ph><ept id="p4">&lt;/description&gt;</ept><ept id="p2">&lt;/item&gt;</ept><bpt id="p5">&lt;item&gt;</bpt><bpt id="p6">&lt;term&gt;</bpt> 等しい <ph id="ph6">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph><ept id="p6">&lt;/term&gt;</ept><bpt id="p7">&lt;description&gt;</bpt><ph id="ph7">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph><ept id="p7">&lt;/description&gt;</ept><ept id="p5">&lt;/item&gt;</ept><ph id="ph8">&lt;/list&gt;</ph></target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Sqrt(System.Double)">
          <source>The square root of the area of a square represents the length of any side of the square.</source>
          <target state="translated">正方形の領域の平方根では、任意の正方形の辺の長さを表します。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Sqrt(System.Double)">
          <source>The following example displays the area of some cities in the United States and gives an impression of each city's size if it were represented by a square.</source>
          <target state="translated">次の例では、米国の都市一部の領域を表示し、四角形で表示された場合は、各都市のサイズのような印象を提供します。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Math.Tan(System.Double)">
          <source>An angle, measured in radians.</source>
          <target state="translated">ラジアンで表した角度。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:System.Math.Tan(System.Double)">
          <source>Returns the tangent of the specified angle.</source>
          <target state="translated">指定された角度のタンジェントを返します。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Math.Tan(System.Double)">
          <source>The tangent of <ph id="ph1">&lt;paramref name="a" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="a" /&gt;</ph> のタンジェント。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Math.Tan(System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="a" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>, this method returns <ph id="ph5">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="a" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>、<ph id="ph4">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> のいずれかに等しい場合、このメソッドは <ph id="ph5">&lt;see cref="F:System.Double.NaN" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Tan(System.Double)">
          <source>The angle, <ph id="ph1">`a`</ph>, must be in radians.</source>
          <target state="translated">角度を<ph id="ph1">`a`</ph>ラジアンである必要があります。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Tan(System.Double)">
          <source>Multiply by <ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>/180 to convert degrees to radians.</source>
          <target state="translated">乗算 <ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph> /180 度をラジアンに変換します。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Tan(System.Double)">
          <source>The following example demonstrates how to calculate the tangent of an angle and display it to the console.</source>
          <target state="translated">次の例では、指定した角度のタンジェントを計算し、それをコンソールに表示する方法を示します。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Math.Tanh(System.Double)">
          <source>An angle, measured in radians.</source>
          <target state="translated">ラジアンで表した角度。</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Math.Tanh(System.Double)">
          <source>Returns the hyperbolic tangent of the specified angle.</source>
          <target state="translated">指定された角度のハイパーボリック タンジェントを返します。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="M:System.Math.Tanh(System.Double)">
          <source>The hyperbolic tangent of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> のハイパーボリック タンジェント。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="M:System.Math.Tanh(System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>, this method returns -1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph> に等しい場合、このメソッドは -1 を返します。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Math.Tanh(System.Double)">
          <source>If value is equal to <ph id="ph1">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>, this method returns 1.</source>
          <target state="translated">値が <ph id="ph1">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> に等しい場合、このメソッドは 1 を返します。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Math.Tanh(System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>, this method returns <ph id="ph3">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph> に等しい場合、このメソッドは <ph id="ph3">&lt;see cref="F:System.Double.NaN" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Tanh(System.Double)">
          <source>The angle, <ph id="ph1">`value`</ph>, must be in radians.</source>
          <target state="translated">角度を<ph id="ph1">`value`</ph>ラジアンである必要があります。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Tanh(System.Double)">
          <source>Multiply by <ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>/180 to convert degrees to radians.</source>
          <target state="translated">乗算 <ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph> /180 度をラジアンに変換します。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Tanh(System.Double)">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Math.Tanh%2A&gt;</ph> to evaluate certain hyperbolic tangent identities for selected values.</source>
          <target state="translated">次の例では<ph id="ph1">&lt;xref:System.Math.Tanh%2A&gt;</ph>を特定の双曲線正接 id の選択した値を評価します。</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" uid="T:System.Math">
          <source>Calculates the integral part of a number.</source>
          <target state="translated">数値の整数部を計算します。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Math">
          <source>The number is rounded to the nearest integer towards zero.</source>
          <target state="translated">0 方向に最も近い整数に丸められます。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="M:System.Math.Truncate(System.Decimal)">
          <source>A number to truncate.</source>
          <target state="translated">切り捨て対象の数値。</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" uid="M:System.Math.Truncate(System.Decimal)">
          <source>Calculates the integral part of a specified decimal number.</source>
          <target state="translated">指定した 10 進数の整数部を計算します。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Math.Truncate(System.Decimal)">
          <source>The integral part of <ph id="ph1">&lt;paramref name="d" /&gt;</ph>; that is, the number that remains after any fractional digits have been discarded.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> の整数部。つまり、小数部の桁を破棄した後に残る数値。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Truncate(System.Decimal)">
          <source><ph id="ph1">&lt;xref:System.Math.Truncate%2A&gt;</ph> rounds <ph id="ph2">`d`</ph> to the nearest integer towards zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Math.Truncate%2A&gt;</ph> 丸めます<ph id="ph2">`d`</ph>0 方向に最も近い整数にします。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Truncate(System.Decimal)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Math.Truncate%28System.Decimal%29&gt;</ph> method to truncate both a positive and a negative <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Math.Truncate%28System.Decimal%29&gt;</ph>を正および負の両方を切り捨てるメソッド<ph id="ph2">&lt;xref:System.Decimal&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="M:System.Math.Truncate(System.Double)">
          <source>A number to truncate.</source>
          <target state="translated">切り捨て対象の数値。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="M:System.Math.Truncate(System.Double)">
          <source>Calculates the integral part of a specified double-precision floating-point number.</source>
          <target state="translated">指定した倍精度浮動小数点数の整数部を計算します。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" uid="M:System.Math.Truncate(System.Double)">
          <source>The integral part of <ph id="ph1">&lt;paramref name="d" /&gt;</ph>; that is, the number that remains after any fractional digits have been discarded, or one of the values listed in the following table.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> の整数部。つまり、小数部の桁を破棄した後に残る数値 (次の表にリストされている値のいずれか)。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" uid="M:System.Math.Truncate(System.Double)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph3">&lt;paramref name="d" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph4">&lt;description&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph3">&lt;paramref name="d" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph4">&lt;description&gt;</ph> 戻り値</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Truncate(System.Double)">
          <source><ph id="ph1">&lt;xref:System.Math.Truncate%2A&gt;</ph> rounds <ph id="ph2">`d`</ph> to the nearest integer towards zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Math.Truncate%2A&gt;</ph> 丸めます<ph id="ph2">`d`</ph>0 方向に最も近い整数にします。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Math.Truncate(System.Double)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Math.Truncate%28System.Double%29&gt;</ph> method to truncate both a positive and a negative <ph id="ph2">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Math.Truncate%28System.Double%29&gt;</ph>を正および負の両方を切り捨てるメソッド<ph id="ph2">&lt;xref:System.Double&gt;</ph>値。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>