<Type Name="Math" FullName="System.Math">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e3ca93d348ea6b5994c4cad247a073d0648f0694" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52255381" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Math" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Math extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Math" />
  <TypeSignature Language="VB.NET" Value="Public Class Math" />
  <TypeSignature Language="C++ CLI" Value="public ref class Math abstract sealed" />
  <TypeSignature Language="F#" Value="type Math = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="218ac-101">三角関数や対数関数などの一般的な数値関数の定数と静的メソッドを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="218ac-101">Provides constants and static methods for trigonometric, logarithmic, and other common mathematical functions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-102">次のコードの例では、数学および三角関数の関数を<xref:System.Math>台形の内部の角度を計算するクラス。</span><span class="sxs-lookup"><span data-stu-id="218ac-102">The following example uses several mathematical and trigonometric functions from the <xref:System.Math> class to calculate the inner angles of a trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Abs">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="218ac-103">指定された数値の絶対値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-103">Returns the absolute value of a specified number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static decimal Abs (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Abs(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Abs(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Abs : decimal -&gt; decimal" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="218ac-104">
            <see cref="F:System.Decimal.MinValue" /> 以上で、<see cref="F:System.Decimal.MaxValue" /> 以下の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-104">A number that is greater than or equal to <see cref="F:System.Decimal.MinValue" />, but less than or equal to <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-105">
            <see cref="T:System.Decimal" /> 数値の絶対値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-105">Returns the absolute value of a <see cref="T:System.Decimal" /> number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-106">0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" /> の 10 進数 x。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-106">A decimal number, x, such that 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-107">絶対値を<xref:System.Decimal>は、符号なし数値の値です。</span><span class="sxs-lookup"><span data-stu-id="218ac-107">The absolute value of a <xref:System.Decimal> is its numeric value without its sign.</span></span> <span data-ttu-id="218ac-108">たとえば、1.2 および-1.2 の両方の絶対値は、1.2 です。</span><span class="sxs-lookup"><span data-stu-id="218ac-108">For example, the absolute value of both 1.2 and -1.2 is 1.2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-109">次の例では、<xref:System.Math.Abs%28System.Decimal%29>の数の絶対値を取得するメソッドを<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="218ac-109">The following example uses the <xref:System.Math.Abs%28System.Decimal%29> method to get the absolute value of a number of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/Abs1.cs#1)]
 [!code-vb[System.Math.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/Abs1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static double Abs (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Abs(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Abs(double value);" />
      <MemberSignature Language="F#" Value="static member Abs : double -&gt; double" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="218ac-110">
            <see cref="F:System.Double.MinValue" /> 以上で、<see cref="F:System.Double.MaxValue" /> 以下の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-110">A number that is greater than or equal to <see cref="F:System.Double.MinValue" />, but less than or equal to <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-111">倍精度浮動小数点数の絶対値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-111">Returns the absolute value of a double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-112">0 ≤ x ≤<see cref="F:System.Double.MaxValue" /> の倍精度浮動小数点数 x。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-112">A double-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-113">絶対値を<xref:System.Double>は、符号なし数値の値です。</span><span class="sxs-lookup"><span data-stu-id="218ac-113">The absolute value of a <xref:System.Double> is its numeric value without its sign.</span></span> <span data-ttu-id="218ac-114">たとえば、1.2e03 と 1.2e03 の両方の絶対値は 1.2e03 です。</span><span class="sxs-lookup"><span data-stu-id="218ac-114">For example, the absolute value of both 1.2e03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="218ac-115">場合`value`と等しい<xref:System.Double.NegativeInfinity>または<xref:System.Double.PositiveInfinity>、戻り値は<xref:System.Double.PositiveInfinity>します。</span><span class="sxs-lookup"><span data-stu-id="218ac-115">If `value` is equal to <xref:System.Double.NegativeInfinity> or <xref:System.Double.PositiveInfinity>, the return value is <xref:System.Double.PositiveInfinity>.</span></span> <span data-ttu-id="218ac-116">場合`value`と等しい<xref:System.Double.NaN>、戻り値は<xref:System.Double.NaN>します。</span><span class="sxs-lookup"><span data-stu-id="218ac-116">If `value` is equal to <xref:System.Double.NaN>, the return value is <xref:System.Double.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-117">次の例では、<xref:System.Math.Abs%28System.Double%29>の数の絶対値を取得するメソッドを<xref:System.Double>値。</span><span class="sxs-lookup"><span data-stu-id="218ac-117">The following example uses the <xref:System.Math.Abs%28System.Double%29> method to get the absolute value of a number of <xref:System.Double> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs2.cs#2)]
 [!code-vb[System.Math.Abs#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static short Abs (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Abs(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Abs(short value);" />
      <MemberSignature Language="F#" Value="static member Abs : int16 -&gt; int16" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="218ac-118">
            <see cref="F:System.Int16.MinValue" /> より大きく、<see cref="F:System.Int16.MaxValue" /> 以下の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-118">A number that is greater than <see cref="F:System.Int16.MinValue" />, but less than or equal to <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-119">16 ビット符号付き整数の絶対値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-119">Returns the absolute value of a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-120">0 ≤ x ≤<see cref="F:System.Int16.MaxValue" /> である 16 ビット符号付き整数 x。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-120">A 16-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-121">絶対値を<xref:System.Int16>は、符号なし数値の値です。</span><span class="sxs-lookup"><span data-stu-id="218ac-121">The absolute value of an <xref:System.Int16> is its numeric value without its sign.</span></span> <span data-ttu-id="218ac-122">たとえば、123 と-123 の両方の絶対値は、123 が。</span><span class="sxs-lookup"><span data-stu-id="218ac-122">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-123">次の例では、<xref:System.Math.Abs%28System.Int16%29>の数の絶対値を取得するメソッドを<xref:System.Int16>値。</span><span class="sxs-lookup"><span data-stu-id="218ac-123">The following example uses the <xref:System.Math.Abs%28System.Int16%29> method to get the absolute value of a number of <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs3.cs#3)]
 [!code-vb[System.Math.Abs#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="218ac-124">
            <paramref name="value" /> と <see cref="F:System.Int16.MinValue" /> は等しい。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-124">
              <paramref name="value" /> equals <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static int Abs (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Abs(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Abs(int value);" />
      <MemberSignature Language="F#" Value="static member Abs : int -&gt; int" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="218ac-125">
            <see cref="F:System.Int32.MinValue" /> より大きく、<see cref="F:System.Int32.MaxValue" /> 以下の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-125">A number that is greater than <see cref="F:System.Int32.MinValue" />, but less than or equal to <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-126">32 ビット符号付き整数の絶対値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-126">Returns the absolute value of a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-127">0 ≤ x ≤<see cref="F:System.Int32.MaxValue" /> である 32 ビット符号付き整数 x。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-127">A 32-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-128">絶対値を<xref:System.Int32>は、符号なし数値の値です。</span><span class="sxs-lookup"><span data-stu-id="218ac-128">The absolute value of an <xref:System.Int32> is its numeric value without its sign.</span></span> <span data-ttu-id="218ac-129">たとえば、123 と-123 の両方の絶対値は、123 が。</span><span class="sxs-lookup"><span data-stu-id="218ac-129">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-130">次の例では、<xref:System.Math.Abs%28System.Int32%29>の数の絶対値を取得するメソッドを<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="218ac-130">The following example uses the <xref:System.Math.Abs%28System.Int32%29> method to get the absolute value of a number of <xref:System.Int32> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs4.cs#4)]
 [!code-vb[System.Math.Abs#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="218ac-131">
            <paramref name="value" /> と <see cref="F:System.Int32.MinValue" /> は等しい。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-131">
              <paramref name="value" /> equals <see cref="F:System.Int32.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static long Abs (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Abs(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Abs(long value);" />
      <MemberSignature Language="F#" Value="static member Abs : int64 -&gt; int64" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="218ac-132">
            <see cref="F:System.Int64.MinValue" /> より大きく、<see cref="F:System.Int64.MaxValue" /> 以下の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-132">A number that is greater than <see cref="F:System.Int64.MinValue" />, but less than or equal to <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-133">64 ビット符号付き整数の絶対値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-133">Returns the absolute value of a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-134">0 ≤ x ≤<see cref="F:System.Int64.MaxValue" /> である 64 ビット符号付き整数 x。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-134">A 64-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-135">絶対値を<xref:System.Int64>は、符号なし数値の値です。</span><span class="sxs-lookup"><span data-stu-id="218ac-135">The absolute value of an <xref:System.Int64> is its numeric value without its sign.</span></span> <span data-ttu-id="218ac-136">たとえば、123 と-123 の両方の絶対値は、123 が。</span><span class="sxs-lookup"><span data-stu-id="218ac-136">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-137">次の例では、<xref:System.Math.Abs%28System.Int64%29>の数の絶対値を取得するメソッドを<xref:System.Int64>値。</span><span class="sxs-lookup"><span data-stu-id="218ac-137">The following example uses the <xref:System.Math.Abs%28System.Int64%29> method to get the absolute value of a number of <xref:System.Int64> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs5.cs#5)]
 [!code-vb[System.Math.Abs#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="218ac-138">
            <paramref name="value" /> と <see cref="F:System.Int64.MinValue" /> は等しい。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-138">
              <paramref name="value" /> equals <see cref="F:System.Int64.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static sbyte Abs (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Abs(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Abs(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member Abs : sbyte -&gt; sbyte" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="218ac-139">
            <see cref="F:System.SByte.MinValue" /> より大きく、<see cref="F:System.SByte.MaxValue" /> 以下の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-139">A number that is greater than <see cref="F:System.SByte.MinValue" />, but less than or equal to <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-140">8 ビット符号付き整数の絶対値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-140">Returns the absolute value of an 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-141">0 ≤ x ≤<see cref="F:System.SByte.MaxValue" /> である 8 ビット符号付き整数 x。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-141">An 8-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-142">符号付きバイトの絶対値は、符号なし数値の値です。</span><span class="sxs-lookup"><span data-stu-id="218ac-142">The absolute value of a signed byte is its numeric value without its sign.</span></span> <span data-ttu-id="218ac-143">たとえば、12 と-12 の両方の絶対値は、12 です。</span><span class="sxs-lookup"><span data-stu-id="218ac-143">For example, the absolute value of both 12 and -12 is 12.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-144">次の例では、<xref:System.Math.Abs%28System.SByte%29>の数の絶対値を取得するメソッドを<xref:System.SByte>値。</span><span class="sxs-lookup"><span data-stu-id="218ac-144">The following example uses the <xref:System.Math.Abs%28System.SByte%29> method to get the absolute value of a number of <xref:System.SByte> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs6.cs#6)]
 [!code-vb[System.Math.Abs#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="218ac-145">
            <paramref name="value" /> と <see cref="F:System.SByte.MinValue" /> は等しい。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-145">
              <paramref name="value" /> equals <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static float Abs (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Abs(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Abs(float value);" />
      <MemberSignature Language="F#" Value="static member Abs : single -&gt; single" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="218ac-146">
            <see cref="F:System.Single.MinValue" /> 以上で、<see cref="F:System.Single.MaxValue" /> 以下の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-146">A number that is greater than or equal to <see cref="F:System.Single.MinValue" />, but less than or equal to <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-147">単精度浮動小数点数の絶対値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-147">Returns the absolute value of a single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-148">0 ≤ x ≤<see cref="F:System.Single.MaxValue" /> の単精度浮動小数点数 x。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-148">A single-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-149">絶対値を<xref:System.Single>は、符号なし数値の値です。</span><span class="sxs-lookup"><span data-stu-id="218ac-149">The absolute value of a <xref:System.Single> is its numeric value without its sign.</span></span> <span data-ttu-id="218ac-150">たとえば、両方の 1.2 e の絶対値-03 と 1.2e03 は 1.2e03 します。</span><span class="sxs-lookup"><span data-stu-id="218ac-150">For example, the absolute value of both 1.2e-03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="218ac-151">場合`value`と等しい<xref:System.Single.NegativeInfinity>または<xref:System.Single.PositiveInfinity>、戻り値は<xref:System.Single.PositiveInfinity>します。</span><span class="sxs-lookup"><span data-stu-id="218ac-151">If `value` is equal to <xref:System.Single.NegativeInfinity> or <xref:System.Single.PositiveInfinity>, the return value is <xref:System.Single.PositiveInfinity>.</span></span> <span data-ttu-id="218ac-152">場合`value`と等しい<xref:System.Single.NaN>、戻り値は<xref:System.Single.NaN>します。</span><span class="sxs-lookup"><span data-stu-id="218ac-152">If `value` is equal to <xref:System.Single.NaN>, the return value is <xref:System.Single.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-153">次の例では、<xref:System.Math.Abs%28System.Single%29>の数の絶対値を取得するメソッドを<xref:System.Single>値。</span><span class="sxs-lookup"><span data-stu-id="218ac-153">The following example uses the <xref:System.Math.Abs%28System.Single%29> method to get the absolute value of a number of <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs7.cs#7)]
 [!code-vb[System.Math.Abs#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs7.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static double Acos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acos(double d);" />
      <MemberSignature Language="F#" Value="static member Acos : double -&gt; double" Usage="System.Math.Acos d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="218ac-154">コサインを表す数で、<paramref name="d" /> が -1 以上 1 以下である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-154">A number representing a cosine, where <paramref name="d" /> must be greater than or equal to -1, but less than or equal to 1.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-155">コサインが指定数となる角度を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-155">Returns the angle whose cosine is the specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-156">0 ≤θ≤π の、ラジアンで表した角度 θ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-156">An angle, θ, measured in radians, such that 0 ≤θ≤π</span>
          </span>
          <span data-ttu-id="218ac-157">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-157">-or-</span>
          </span>
          <span data-ttu-id="218ac-158">
            <paramref name="d" /> &lt; -1 または <paramref name="d" /> &gt; 1、あるいは <paramref name="d" /> が <see cref="F:System.Double.NaN" /> と等しい場合は、<see cref="F:System.Double.NaN" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-158">
              <see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-159">戻り値を 180 で乗算/<xref:System.Math.PI?displayProperty=nameWithType>をラジアンから度に変換します。</span><span class="sxs-lookup"><span data-stu-id="218ac-159">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-160">次の例では、<xref:System.Math.Acos%2A>台形の特定の内部の角度の計算を支援するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-160">The following example uses the <xref:System.Math.Acos%2A> method to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acosh">
      <MemberSignature Language="C#" Value="public static double Acosh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acosh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acosh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acosh(double d);" />
      <MemberSignature Language="F#" Value="static member Acosh : double -&gt; double" Usage="System.Math.Acosh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static double Asin (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asin(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asin (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asin(double d);" />
      <MemberSignature Language="F#" Value="static member Asin : double -&gt; double" Usage="System.Math.Asin d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="218ac-161">サインを表す数で、<paramref name="d" /> が -1 以上 1 以下である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-161">A number representing a sine, where <paramref name="d" /> must be greater than or equal to -1, but less than or equal to 1.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-162">サインが指定数となる角度を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-162">Returns the angle whose sine is the specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-163">-π/2 ≤θ≤π/2 の、ラジアンで表した角度 θ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-163">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2</span>
          </span>
          <span data-ttu-id="218ac-164">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-164">-or-</span>
          </span>
          <span data-ttu-id="218ac-165">
            <paramref name="d" /> &lt; -1 または <paramref name="d" /> &gt; 1、あるいは <paramref name="d" /> が <see cref="F:System.Double.NaN" /> と等しい場合は、<see cref="F:System.Double.NaN" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-165">
              <see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-166">正の戻り値は、x 軸から反時計回りに回転の角度を表します負の値の戻り値は時計回りの角度を表します。</span><span class="sxs-lookup"><span data-stu-id="218ac-166">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="218ac-167">戻り値を 180 で乗算/<xref:System.Math.PI?displayProperty=nameWithType>をラジアンから度に変換します。</span><span class="sxs-lookup"><span data-stu-id="218ac-167">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-168">次の例では<xref:System.Math.Asin%2A>台形の特定の内部の角度の計算を支援します。</span><span class="sxs-lookup"><span data-stu-id="218ac-168">The following example uses <xref:System.Math.Asin%2A> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asinh">
      <MemberSignature Language="C#" Value="public static double Asinh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asinh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asinh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asinh(double d);" />
      <MemberSignature Language="F#" Value="static member Asinh : double -&gt; double" Usage="System.Math.Asinh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static double Atan (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan(double d);" />
      <MemberSignature Language="F#" Value="static member Atan : double -&gt; double" Usage="System.Math.Atan d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="218ac-169">タンジェントを表す数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-169">A number representing a tangent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-170">タンジェントが指定数となる角度を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-170">Returns the angle whose tangent is the specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-171">-π/2 ≤θ≤π/2 の、ラジアンで表した角度 θ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-171">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2.</span>
          </span>
          <span data-ttu-id="218ac-172">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-172">-or-</span>
          </span>
          <span data-ttu-id="218ac-173">
            <paramref name="d" /> が <see cref="F:System.Double.NaN" /> に等しい場合は <see cref="F:System.Double.NaN" />。<paramref name="d" /> が <see cref="F:System.Double.NegativeInfinity" /> に等しい場合は、倍精度に丸めた -π/2 (-1.5707963267949)。<paramref name="d" /> が <see cref="F:System.Double.PositiveInfinity" /> に等しい場合は、倍精度に丸めた π/2 (1.5707963267949)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-173">
              <see cref="F:System.Double.NaN" /> if <paramref name="d" /> equals <see cref="F:System.Double.NaN" />, -π/2 rounded to double precision (-1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, or π/2 rounded to double precision (1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.PositiveInfinity" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-174">正の戻り値は、x 軸から反時計回りに回転の角度を表します負の値の戻り値は時計回りの角度を表します。</span><span class="sxs-lookup"><span data-stu-id="218ac-174">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="218ac-175">戻り値を 180 で乗算/<xref:System.Math.PI?displayProperty=nameWithType>をラジアンから度に変換します。</span><span class="sxs-lookup"><span data-stu-id="218ac-175">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-176">次の例では、値のアーク タンジェントを計算し、コンソールに表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="218ac-176">The following example demonstrates how to calculate the arctangent of a value and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static double Atan2 (double y, double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan2(float64 y, float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan2(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan2 (y As Double, x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan2(double y, double x);" />
      <MemberSignature Language="F#" Value="static member Atan2 : double * double -&gt; double" Usage="System.Math.Atan2 (y, x)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="y">
          <span data-ttu-id="218ac-177">点の y 座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-177">The y coordinate of a point.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="218ac-178">点の x 座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-178">The x coordinate of a point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-179">タンジェントが 2 つの指定された数の商である角度を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-179">Returns the angle whose tangent is the quotient of two specified numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-180">-π≤θ≤π および tan(θ) = <paramref name="y" /> / <paramref name="x" /> の、ラジアンで示した角度 θ。(<paramref name="x" />, <paramref name="y" />) は、デカルト座標の点を示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-180">An angle, θ, measured in radians, such that -π≤θ≤π, and tan(θ) = <paramref name="y" /> / <paramref name="x" />, where (<paramref name="x" />, <paramref name="y" />) is a point in the Cartesian plane.</span>
          </span>
          <span data-ttu-id="218ac-181">次の点に注意してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-181">Observe the following:</span>
          </span>
          <span data-ttu-id="218ac-182">-   クワドラント 1 の (<paramref name="x" />, <paramref name="y" />) の場合は、0 &lt; θ &lt; π/2。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-182">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 1, 0 &lt; θ &lt; π/2.</span>
          </span>
          <span data-ttu-id="218ac-183">-   クワドラント 2 の (<paramref name="x" />, <paramref name="y" />) の場合は、π/2 &lt; θ≤π。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-183">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 2, π/2 &lt; θ≤π.</span>
          </span>
          <span data-ttu-id="218ac-184">-   クワドラント 3 の (<paramref name="x" />, <paramref name="y" />) の場合は、-π &lt; θ &lt; -π/2。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-184">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 3, -π &lt; θ &lt; -π/2.</span>
          </span>
          <span data-ttu-id="218ac-185">-   クワドラント 4 の (<paramref name="x" />, <paramref name="y" />) の場合は、-π/2 &lt; θ &lt; 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-185">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 4, -π/2 &lt; θ &lt; 0.</span>
          </span>
          <span data-ttu-id="218ac-186">クワドラント間の境界上にある点の場合は、次の戻り値になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-186">For points on the boundaries of the quadrants, the return value is the following:</span>
          </span>
          <span data-ttu-id="218ac-187">-   y が 0 で x が負数でない場合は、θ = 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-187">-   If y is 0 and x is not negative, θ = 0.</span>
          </span>
          <span data-ttu-id="218ac-188">-   y が 0 で x が負の場合は、θ = π。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-188">-   If y is 0 and x is negative, θ = π.</span>
          </span>
          <span data-ttu-id="218ac-189">-   y が正で x が 0 の場合は、θ = π/2。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-189">-   If y is positive and x is 0, θ = π/2.</span>
          </span>
          <span data-ttu-id="218ac-190">-   y が負数で x が 0 の場合は、θ = -π/2。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-190">-   If y is negative and x is 0, θ = -π/2.</span>
          </span>
          <span data-ttu-id="218ac-191">-   y が 0 かつ x が 0 の場合は、θ = 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-191">-   If y is 0 and x is 0, θ = 0.</span>
          </span>
          <span data-ttu-id="218ac-192">
            <paramref name="x" /> または <paramref name="y" /> が <see cref="F:System.Double.NaN" /> であるか、<paramref name="x" /> または <paramref name="y" /> が <see cref="F:System.Double.PositiveInfinity" /> または <see cref="F:System.Double.NegativeInfinity" /> のいずれである場合、メソッドは <see cref="F:System.Double.NaN" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-192">If <paramref name="x" /> or <paramref name="y" /> is <see cref="F:System.Double.NaN" />, or if <paramref name="x" /> and <paramref name="y" /> are either <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" />, the method returns <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-193">戻り値は、x 軸、およびベクトルは原点 (0, 0) から開始し、ポイント、(x, y) で終了して形成されたデカルト角度です。</span><span class="sxs-lookup"><span data-stu-id="218ac-193">The return value is the angle in the Cartesian plane formed by the x-axis, and a vector starting from the origin, (0,0), and terminating at the point, (x,y).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-194">次の例では、角度とベクトルのアーク タンジェントを計算する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="218ac-194">The following example demonstrates how to calculate the arctangent of an angle and a vector.</span></span> <span data-ttu-id="218ac-195">結果の値は、コンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="218ac-195">The resulting value is displayed in the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atanh">
      <MemberSignature Language="C#" Value="public static double Atanh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atanh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atanh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atanh(double d);" />
      <MemberSignature Language="F#" Value="static member Atanh : double -&gt; double" Usage="System.Math.Atanh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BigMul">
      <MemberSignature Language="C#" Value="public static long BigMul (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 BigMul(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.BigMul(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BigMul (a As Integer, b As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long BigMul(int a, int b);" />
      <MemberSignature Language="F#" Value="static member BigMul : int * int -&gt; int64" Usage="System.Math.BigMul (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="218ac-196">乗算対象の最初の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-196">The first number to multiply.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="218ac-197">乗算対象の 2 番目の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-197">The second number to multiply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-198">2 つの 32 ビット数値の完全な積を生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-198">Produces the full product of two 32-bit numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-199">指定した数値の積を含む数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-199">The number containing the product of the specified numbers.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-200">次の例では、使用、 <xref:System.Math.BigMul%2A> 2 つの整数値の積を計算するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-200">The following example demonstrates the use of the <xref:System.Math.BigMul%2A> method to calculate the product of two integer values.</span></span>  
  
 [!code-cpp[math.bigmul#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.bigmul/CPP/bigmul.cpp#1)]
 [!code-csharp[math.bigmul#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.bigmul/CS/bigmul.cs#1)]
 [!code-vb[math.bigmul#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.bigmul/VB/bigmul.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cbrt">
      <MemberSignature Language="C#" Value="public static double Cbrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cbrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cbrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cbrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cbrt(double d);" />
      <MemberSignature Language="F#" Value="static member Cbrt : double -&gt; double" Usage="System.Math.Cbrt d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ceiling">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="218ac-201">指定した数以上の数のうち、最小の整数値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-201">Returns the smallest integral value greater than or equal to the specified number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-202">このメソッドの動作では、IEEE Standard 754、セクション 4 に従います。</span><span class="sxs-lookup"><span data-stu-id="218ac-202">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="218ac-203">この種の丸め処理を行うには、正の無限大に丸めるも呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="218ac-203">This kind of rounding is sometimes called rounding toward positive infinity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static decimal Ceiling (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Ceiling(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Ceiling(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Ceiling : decimal -&gt; decimal" Usage="System.Math.Ceiling d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="218ac-204">10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-204">A decimal number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-205">指定した 10 進数以上の数のうち、最小の整数値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-205">Returns the smallest integral value that is greater than or equal to the specified decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-206">
            <paramref name="d" /> 以上の最小の整数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-206">The smallest integral value that is greater than or equal to <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="218ac-207">このメソッドは、整数型ではなく <see cref="T:System.Decimal" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-207">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-208">このメソッドの動作では、IEEE Standard 754、セクション 4 に従います。</span><span class="sxs-lookup"><span data-stu-id="218ac-208">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="218ac-209">この種の丸め処理を行うには、正の無限大に丸めるも呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="218ac-209">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="218ac-210">つまり場合、`d`が正の値の小数部の原因のプレゼンス`d`[次へ] の最大の整数に切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="218ac-210">In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer.</span></span> <span data-ttu-id="218ac-211">場合`d`が負の場合、丸め処理によりの小数部`d`破棄されます。</span><span class="sxs-lookup"><span data-stu-id="218ac-211">If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded.</span></span> <span data-ttu-id="218ac-212">このメソッドの操作とは異なります、<xref:System.Math.Floor%28System.Decimal%29>メソッドは、負の無限大方向に丸め処理をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="218ac-212">The operation of this method differs from the <xref:System.Math.Floor%28System.Decimal%29> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-213">次の例を示しています、<xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType>メソッドとの比較、<xref:System.Math.Floor%28System.Decimal%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-213">The following example illustrates the <xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static double Ceiling (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Ceiling(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Ceiling(double a);" />
      <MemberSignature Language="F#" Value="static member Ceiling : double -&gt; double" Usage="System.Math.Ceiling a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="218ac-214">倍精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-214">A double-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-215">指定した倍精度浮動小数点数以上の数のうち、最小の整数値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-215">Returns the smallest integral value that is greater than or equal to the specified double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-216">
            <paramref name="a" /> 以上の最小の整数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-216">The smallest integral value that is greater than or equal to <paramref name="a" />.</span>
          </span>
          <span data-ttu-id="218ac-217">
            <paramref name="a" /> が <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" />、<see cref="F:System.Double.PositiveInfinity" /> のいずれかに等しい場合は、その値が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-217">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span>
          </span>
          <span data-ttu-id="218ac-218">このメソッドは、整数型ではなく <see cref="T:System.Double" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-218">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-219">このメソッドの動作では、IEEE Standard 754、セクション 4 に従います。</span><span class="sxs-lookup"><span data-stu-id="218ac-219">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="218ac-220">この種の丸め処理を行うには、正の無限大に丸めるも呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="218ac-220">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="218ac-221">つまり場合、`a`が正の値の小数部の原因のプレゼンス`a`[次へ] の最大の整数に切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="218ac-221">In other words, if `a` is positive, the presence of any fractional component causes `a` to be rounded to the next highest integer.</span></span> <span data-ttu-id="218ac-222">場合`a`が負の場合、丸め処理によりの小数部`a`破棄されます。</span><span class="sxs-lookup"><span data-stu-id="218ac-222">If `a` is negative, the rounding operation causes any fractional component of `a` to be discarded.</span></span> <span data-ttu-id="218ac-223">このメソッドの操作とは異なります、<xref:System.Math.Floor%28System.Double%29>メソッドは、負の無限大方向に丸め処理をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="218ac-223">The operation of this method differs from the <xref:System.Math.Floor%28System.Double%29> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-224">次の例を示しています、<xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType>メソッドとの比較、<xref:System.Math.Floor%28System.Double%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-224">The following example illustrates the <xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static byte Clamp (byte value, byte min, byte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Clamp(unsigned int8 value, unsigned int8 min, unsigned int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Byte, min As Byte, max As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Clamp(System::Byte value, System::Byte min, System::Byte max);" />
      <MemberSignature Language="F#" Value="static member Clamp : byte * byte * byte -&gt; byte" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="min" Type="System.Byte" />
        <Parameter Name="max" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static decimal Clamp (decimal value, decimal min, decimal max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Clamp(valuetype System.Decimal value, valuetype System.Decimal min, valuetype System.Decimal max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Decimal,System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Decimal, min As Decimal, max As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Clamp(System::Decimal value, System::Decimal min, System::Decimal max);" />
      <MemberSignature Language="F#" Value="static member Clamp : decimal * decimal * decimal -&gt; decimal" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="min" Type="System.Decimal" />
        <Parameter Name="max" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static double Clamp (double value, double min, double max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Clamp(float64 value, float64 min, float64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Double, min As Double, max As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Clamp(double value, double min, double max);" />
      <MemberSignature Language="F#" Value="static member Clamp : double * double * double -&gt; double" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="min" Type="System.Double" />
        <Parameter Name="max" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static short Clamp (short value, short min, short max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Clamp(int16 value, int16 min, int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int16,System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Short, min As Short, max As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Clamp(short value, short min, short max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int16 * int16 * int16 -&gt; int16" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="min" Type="System.Int16" />
        <Parameter Name="max" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static int Clamp (int value, int min, int max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Clamp(int32 value, int32 min, int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Integer, min As Integer, max As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Clamp(int value, int min, int max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int * int * int -&gt; int" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static long Clamp (long value, long min, long max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Clamp(int64 value, int64 min, int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Long, min As Long, max As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Clamp(long value, long min, long max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int64 * int64 * int64 -&gt; int64" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="min" Type="System.Int64" />
        <Parameter Name="max" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static sbyte Clamp (sbyte value, sbyte min, sbyte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Clamp(int8 value, int8 min, int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.SByte,System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As SByte, min As SByte, max As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Clamp(System::SByte value, System::SByte min, System::SByte max);" />
      <MemberSignature Language="F#" Value="static member Clamp : sbyte * sbyte * sbyte -&gt; sbyte" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="min" Type="System.SByte" />
        <Parameter Name="max" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static float Clamp (float value, float min, float max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Clamp(float32 value, float32 min, float32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Single, min As Single, max As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Clamp(float value, float min, float max);" />
      <MemberSignature Language="F#" Value="static member Clamp : single * single * single -&gt; single" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="min" Type="System.Single" />
        <Parameter Name="max" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ushort Clamp (ushort value, ushort min, ushort max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Clamp(unsigned int16 value, unsigned int16 min, unsigned int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt16,System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UShort, min As UShort, max As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Clamp(System::UInt16 value, System::UInt16 min, System::UInt16 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint16 * uint16 * uint16 -&gt; uint16" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="min" Type="System.UInt16" />
        <Parameter Name="max" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static uint Clamp (uint value, uint min, uint max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Clamp(unsigned int32 value, unsigned int32 min, unsigned int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt32,System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UInteger, min As UInteger, max As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Clamp(System::UInt32 value, System::UInt32 min, System::UInt32 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint32 * uint32 * uint32 -&gt; uint32" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="min" Type="System.UInt32" />
        <Parameter Name="max" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ulong Clamp (ulong value, ulong min, ulong max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Clamp(unsigned int64 value, unsigned int64 min, unsigned int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt64,System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As ULong, min As ULong, max As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Clamp(System::UInt64 value, System::UInt64 min, System::UInt64 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint64 * uint64 * uint64 -&gt; uint64" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="min" Type="System.UInt64" />
        <Parameter Name="max" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static double Cos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cos(double d);" />
      <MemberSignature Language="F#" Value="static member Cos : double -&gt; double" Usage="System.Math.Cos d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="218ac-225">ラジアンで表した角度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-225">An angle, measured in radians.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-226">指定された角度のコサインを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-226">Returns the cosine of the specified angle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-227">
            <paramref name="d" /> のコサイン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-227">The cosine of <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="218ac-228">
            <paramref name="d" /> が <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" />、<see cref="F:System.Double.PositiveInfinity" /> のいずれかに等しい場合、このメソッドは <see cref="F:System.Double.NaN" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-228">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-229">角度、 `d`、ラジアン単位である必要があります。</span><span class="sxs-lookup"><span data-stu-id="218ac-229">The angle, `d`, must be in radians.</span></span> <span data-ttu-id="218ac-230">乗算 <xref:System.Math.PI?displayProperty=nameWithType> /180 度をラジアンに変換します。</span><span class="sxs-lookup"><span data-stu-id="218ac-230">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="218ac-231">許容値は`d`約-9223372036854775295 から約 9223372036854775295 の範囲。</span><span class="sxs-lookup"><span data-stu-id="218ac-231">Acceptable values of `d` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="218ac-232">この範囲外の値を<xref:System.Math.Cos%2A>メソッドを返します。`d`例外がスローされるのではなく変更されません。</span><span class="sxs-lookup"><span data-stu-id="218ac-232">For values outside this range, the <xref:System.Math.Cos%2A> method returns `d` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-233">次の例では<xref:System.Math.Cos%2A>特定選択した角度の三角関数の id を評価します。</span><span class="sxs-lookup"><span data-stu-id="218ac-233">The following example uses <xref:System.Math.Cos%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cosh">
      <MemberSignature Language="C#" Value="public static double Cosh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cosh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cosh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cosh(double value);" />
      <MemberSignature Language="F#" Value="static member Cosh : double -&gt; double" Usage="System.Math.Cosh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="218ac-234">ラジアンで表した角度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-234">An angle, measured in radians.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-235">指定された角度のハイパーボリック コサインを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-235">Returns the hyperbolic cosine of the specified angle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-236">
            <paramref name="value" /> のハイパーボリック コサイン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-236">The hyperbolic cosine of <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="218ac-237">
            <paramref name="value" /> が <see cref="F:System.Double.NegativeInfinity" /> または <see cref="F:System.Double.PositiveInfinity" /> に等しい場合は、<see cref="F:System.Double.PositiveInfinity" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-237">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" /> or <see cref="F:System.Double.PositiveInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> is returned.</span>
          </span>
          <span data-ttu-id="218ac-238">
            <paramref name="value" /> が <see cref="F:System.Double.NaN" /> に等しい場合は、<see cref="F:System.Double.NaN" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-238">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-239">角度、 `value`、ラジアン単位である必要があります。</span><span class="sxs-lookup"><span data-stu-id="218ac-239">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="218ac-240">乗算 <xref:System.Math.PI?displayProperty=nameWithType> /180 度をラジアンに変換します。</span><span class="sxs-lookup"><span data-stu-id="218ac-240">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-241">次の例では<xref:System.Math.Cosh%2A>の選択した値を評価します。</span><span class="sxs-lookup"><span data-stu-id="218ac-241">The following example uses <xref:System.Math.Cosh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DivRem">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="218ac-242">2 つの数値の商を計算し、出力パラメーターの剰余を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-242">Calculates the quotient of two numbers and also returns the remainder in an output parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static int DivRem (int a, int b, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DivRem(int32 a, int32 b, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Integer, b As Integer, ByRef result As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DivRem(int a, int b, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member DivRem : int * int *  -&gt; int" Usage="System.Math.DivRem (a, b, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
        <Parameter Name="result" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="218ac-243">被除数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-243">The dividend.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="218ac-244">除数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-244">The divisor.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="218ac-245">剰余。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-245">The remainder.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-246">2 つの 32 ビット符号付き整数の商を計算し、出力パラメーターの剰余を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-246">Calculates the quotient of two 32-bit signed integers and also returns the remainder in an output parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-247">指定した数値の商。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-247">The quotient of the specified numbers.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-248">残りの部分の値がの結果、[剰余演算子](~/docs/csharp/language-reference/operators/remainder-operator.md)します。</span><span class="sxs-lookup"><span data-stu-id="218ac-248">The remainder value equals the result of the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
   
## Examples  
 <span data-ttu-id="218ac-249">次の例で、<xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-249">The following example demonstrates the <xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem1.cs#1)]
 [!code-vb[System.Math.DivRem#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="218ac-250">
            <paramref name="b" /> が 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-250">
              <paramref name="b" /> is zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static long DivRem (long a, long b, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DivRem(int64 a, int64 b, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Long, b As Long, ByRef result As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long DivRem(long a, long b, [Runtime::InteropServices::Out] long % result);" />
      <MemberSignature Language="F#" Value="static member DivRem : int64 * int64 *  -&gt; int64" Usage="System.Math.DivRem (a, b, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" />
        <Parameter Name="b" Type="System.Int64" />
        <Parameter Name="result" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="218ac-251">被除数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-251">The dividend.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="218ac-252">除数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-252">The divisor.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="218ac-253">剰余。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-253">The remainder.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-254">2 つの 64 ビット符号付き整数の商を計算し、出力パラメーターの剰余を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-254">Calculates the quotient of two 64-bit signed integers and also returns the remainder in an output parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-255">指定した数値の商。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-255">The quotient of the specified numbers.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-256">残りの部分の値がの結果、[剰余演算子](~/docs/csharp/language-reference/operators/remainder-operator.md)します。</span><span class="sxs-lookup"><span data-stu-id="218ac-256">The remainder value equals the result of the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-257">次の例で、<xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-257">The following example demonstrates the <xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem2.cs#2)]
 [!code-vb[System.Math.DivRem#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="218ac-258">
            <paramref name="b" /> が 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-258">
              <paramref name="b" /> is zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="E">
      <MemberSignature Language="C#" Value="public const double E = 2.71828182845905;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 E = (2.71828182845905)" />
      <MemberSignature Language="DocId" Value="F:System.Math.E" />
      <MemberSignature Language="VB.NET" Value="Public Const E As Double  = 2.71828182845905" />
      <MemberSignature Language="C++ CLI" Value="public: double E = 2.71828182845905;" />
      <MemberSignature Language="F#" Value="val mutable E : double" Usage="System.Math.E" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>2.71828182845905</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="218ac-259">定数 <see langword="e" /> によって示される、自然対数の底を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-259">Represents the natural logarithmic base, specified by the constant, <see langword="e" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-260">このフィールドの値は、2.7182818284590452354 です。</span><span class="sxs-lookup"><span data-stu-id="218ac-260">The value of this field is 2.7182818284590452354.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-261">次の例では、比較<xref:System.Math.E>power シリーズから計算した値にします。</span><span class="sxs-lookup"><span data-stu-id="218ac-261">The following example compares <xref:System.Math.E> with the value calculated from a power series.</span></span>  
  
 [!code-cpp[System.Math.E#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.E/CPP/efield.cpp#1)]
 [!code-csharp[System.Math.E#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.E/CS/efield.cs#1)]
 [!code-vb[System.Math.E#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.E/VB/efield.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static double Exp (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Exp(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Exp(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exp (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Exp(double d);" />
      <MemberSignature Language="F#" Value="static member Exp : double -&gt; double" Usage="System.Math.Exp d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="218ac-262">累乗を指定する数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-262">A number specifying a power.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-263">指定した値で <see langword="e" /> を累乗した値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-263">Returns <see langword="e" /> raised to the specified power.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-264">数値 <see langword="e" /> を <paramref name="d" /> で累乗した値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-264">The number <see langword="e" /> raised to the power <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="218ac-265">
            <paramref name="d" /> が <see cref="F:System.Double.NaN" /> または <see cref="F:System.Double.PositiveInfinity" /> のいずれかに等しい場合は、その値が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-265">If <paramref name="d" /> equals <see cref="F:System.Double.NaN" /> or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span>
          </span>
          <span data-ttu-id="218ac-266">
            <paramref name="d" /> が <see cref="F:System.Double.NegativeInfinity" /> に等しい場合は、0 が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-266">If <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, 0 is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-267">`e` 値が約 2.71828 数学定数です。</span><span class="sxs-lookup"><span data-stu-id="218ac-267">`e` is a mathematical constant whose value is approximately 2.71828.</span></span>  
  
 <span data-ttu-id="218ac-268">使用して、<xref:System.Math.Pow%2A>他の底の累乗を計算するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-268">Use the <xref:System.Math.Pow%2A> method to calculate powers of other bases.</span></span>  
  
 <span data-ttu-id="218ac-269"><xref:System.Math.Exp%2A> 逆です<xref:System.Math.Log%2A>します。</span><span class="sxs-lookup"><span data-stu-id="218ac-269"><xref:System.Math.Exp%2A> is the inverse of <xref:System.Math.Log%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-270">次の例では<xref:System.Math.Exp%2A>を選択した値の特定の指数と対数 id を評価します。</span><span class="sxs-lookup"><span data-stu-id="218ac-270">The following example uses <xref:System.Math.Exp%2A> to evaluate certain exponential and logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Exp#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Exp/CPP/exp.cpp#1)]
 [!code-csharp[System.Math.Exp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Exp/CS/exp.cs#1)]
 [!code-vb[System.Math.Exp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Exp/VB/exp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
        <altmember cref="M:System.Math.Log(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Floor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="218ac-271">指定した数以下の数のうち、最大の整数値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-271">Returns the largest integral value less than or equal to the specified number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-272">このメソッドの動作では、IEEE Standard 754、セクション 4 に従います。</span><span class="sxs-lookup"><span data-stu-id="218ac-272">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="218ac-273">この種の丸め処理を行うには、負の無限大に丸めるも呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="218ac-273">This kind of rounding is sometimes called rounding toward negative infinity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static decimal Floor (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Floor(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Floor(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Floor : decimal -&gt; decimal" Usage="System.Math.Floor d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="218ac-274">10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-274">A decimal number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-275">指定した 10 進数以下の数のうち、最大の整数値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-275">Returns the largest integral value less than or equal to the specified decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-276">
            <paramref name="d" /> 以下の最大の整数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-276">The largest integral value less than or equal to <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="218ac-277">このメソッドは、<see cref="T:System.Decimal" /> 型の整数値を返すことに注意してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-277">Note that the method returns an integral value of type <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-278">このメソッドの動作では、IEEE Standard 754、セクション 4 に従います。</span><span class="sxs-lookup"><span data-stu-id="218ac-278">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="218ac-279">この種の丸め処理を行うには、負の無限大に丸めるも呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="218ac-279">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="218ac-280">つまり場合、`d`が正の値、小数部が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="218ac-280">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="218ac-281">場合`d`が負の場合、小数部が存在すると、その小さな整数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="218ac-281">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="218ac-282">このメソッドの操作とは異なります、<xref:System.Math.Ceiling%2A>メソッドは、正の無限大方向に丸め処理をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="218ac-282">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-283">次の例を示しています、<xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType>メソッドとの比較、<xref:System.Math.Ceiling%28System.Decimal%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-283">The following example illustrates the <xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static double Floor (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Floor(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Floor(double d);" />
      <MemberSignature Language="F#" Value="static member Floor : double -&gt; double" Usage="System.Math.Floor d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="218ac-284">倍精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-284">A double-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-285">指定した倍精度浮動小数点数以下の数のうち、最大の整数値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-285">Returns the largest integral value less than or equal to the specified double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-286">
            <paramref name="d" /> 以下の最大の整数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-286">The largest integral value less than or equal to <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="218ac-287">
            <paramref name="d" /> が <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" />、<see cref="F:System.Double.PositiveInfinity" /> のいずれかに等しい場合は、その値が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-287">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-288">このメソッドの動作では、IEEE Standard 754、セクション 4 に従います。</span><span class="sxs-lookup"><span data-stu-id="218ac-288">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="218ac-289">この種の丸め処理を行うには、負の無限大に丸めるも呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="218ac-289">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="218ac-290">つまり場合、`d`が正の値、小数部が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="218ac-290">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="218ac-291">場合`d`が負の場合、小数部が存在すると、その小さな整数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="218ac-291">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="218ac-292">このメソッドの操作とは異なります、<xref:System.Math.Ceiling%2A>メソッドは、正の無限大方向に丸め処理をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="218ac-292">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-293">次の例を示しています、<xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType>メソッドとの比較、<xref:System.Math.Ceiling%28System.Double%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-293">The following example illustrates the <xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="IEEERemainder">
      <MemberSignature Language="C#" Value="public static double IEEERemainder (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 IEEERemainder(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IEEERemainder (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double IEEERemainder(double x, double y);" />
      <MemberSignature Language="F#" Value="static member IEEERemainder : double * double -&gt; double" Usage="System.Math.IEEERemainder (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="218ac-294">被除数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-294">A dividend.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="218ac-295">除数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-295">A divisor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-296">指定した数を別の指定数で除算した結果の剰余を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-296">Returns the remainder resulting from the division of a specified number by another specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-297">
            <paramref name="x" /> - (<paramref name="y" /> Q) に等しい数値。Q は <paramref name="x" /> / <paramref name="y" /> の商を丸めた近似整数を示します。<paramref name="x" /> / <paramref name="y" /> が 2 つの整数の中間に位置する場合は、偶数の整数が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-297">A number equal to <paramref name="x" /> - (<paramref name="y" /> Q), where Q is the quotient of <paramref name="x" /> / <paramref name="y" /> rounded to the nearest integer (if <paramref name="x" /> / <paramref name="y" /> falls halfway between two integers, the even integer is returned).</span>
          </span>
          <span data-ttu-id="218ac-298">
            <paramref name="x" /> - (<paramref name="y" /> Q) がゼロのとき、<paramref name="x" /> が正である場合は値 +0、<paramref name="x" /> が負である場合は -0 が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-298">If <paramref name="x" /> - (<paramref name="y" /> Q) is zero, the value +0 is returned if <paramref name="x" /> is positive, or -0 if <paramref name="x" /> is negative.</span>
          </span>
          <span data-ttu-id="218ac-299">
            <paramref name="y" /> = 0 の場合は、<see cref="F:System.Double.NaN" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-299">If <paramref name="y" /> = 0, <see cref="F:System.Double.NaN" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-300">この操作は、ANSI/IEEE Std 754-1985; のセクション 5.1 で定義されている剰余演算に準拠しています。バイナリ浮動小数点演算; の IEEE 標準Institute of Electrical と Electronics エンジニア, Inc;1985 します。</span><span class="sxs-lookup"><span data-stu-id="218ac-300">This operation complies with the remainder operation defined in Section 5.1 of ANSI/IEEE Std 754-1985; IEEE Standard for Binary Floating-Point Arithmetic; Institute of Electrical and Electronics Engineers, Inc; 1985.</span></span>  
  
 <span data-ttu-id="218ac-301"><xref:System.Math.IEEERemainder%2A>メソッドがないと同じ、[剰余演算子](~/docs/csharp/language-reference/operators/remainder-operator.md)します。</span><span class="sxs-lookup"><span data-stu-id="218ac-301">The <xref:System.Math.IEEERemainder%2A> method is not the same as the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span> <span data-ttu-id="218ac-302">除算の後、残りの部分を返す両方が使用する数式は異なります。</span><span class="sxs-lookup"><span data-stu-id="218ac-302">Although both return the remainder after division, the formulas they use are different.</span></span> <span data-ttu-id="218ac-303">数式、<xref:System.Math.IEEERemainder%2A>メソッドは。</span><span class="sxs-lookup"><span data-stu-id="218ac-303">The formula for the <xref:System.Math.IEEERemainder%2A> method is:</span></span>  
  
```  
IEEERemainder = dividend - (divisor * Math.Round(dividend / divisor))  
```  
  
 <span data-ttu-id="218ac-304">これに対し、剰余演算子の数式は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="218ac-304">In contrast, the formula for the remainder operator is:</span></span>  
  
```  
Remainder = (Math.Abs(dividend) - (Math.Abs(divisor) *   
            (Math.Floor(Math.Abs(dividend) / Math.Abs(divisor))))) *   
            Math.Sign(dividend)  
```  
  
   
  
## Examples  
 <span data-ttu-id="218ac-305">次の例では、によって返される残りの部分は対照的です、<xref:System.Math.IEEERemainder%2A>メソッドによって返される残りの部分を[剰余演算子](~/docs/csharp/language-reference/operators/remainder-operator.md)します。</span><span class="sxs-lookup"><span data-stu-id="218ac-305">The following example contrasts the remainder returned by the <xref:System.Math.IEEERemainder%2A> method with the remainder returned by the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
  
 [!code-csharp[System.Math.IEEERemainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.ieeeremainder/cs/ieeeremainder1.cs#1)]
 [!code-vb[System.Math.IEEERemainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.ieeeremainder/vb/ieeeremainder1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="218ac-306">指定した数の対数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-306">Returns the logarithm of a specified number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double d);" />
      <MemberSignature Language="F#" Value="static member Log : double -&gt; double" Usage="System.Math.Log d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="218ac-307">対数を求める対象の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-307">The number whose logarithm is to be found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-308">指定した数の自然 (底 <see langword="e" />) 対数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-308">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-309">次の表に示した値のいずれか</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-309">One of the values in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="218ac-310">
                  <paramref name="d" /> パラメーター</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-310">
                    <paramref name="d" /> parameter</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-311">戻り値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-311">Return value</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="218ac-312">正</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-312">Positive</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-313">
                  <paramref name="d" /> の自然対数。つまり、ln <paramref name="d" /> または log e <paramref name="d" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-313">The natural logarithm of <paramref name="d" />; that is, ln <paramref name="d" />, or log e <paramref name="d" /></span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-314">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-314">Zero</span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NegativeInfinity" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-315">負</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-315">Negative</span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-316">
                  <see cref="F:System.Double.NaN" /> と等価です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-316">Equal to <see cref="F:System.Double.NaN" /></span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-317">
                  <see cref="F:System.Double.PositiveInfinity" /> と等価です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-317">Equal to <see cref="F:System.Double.PositiveInfinity" /></span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.PositiveInfinity" />
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-318">パラメーター`d`底 10 の値として指定されます。</span><span class="sxs-lookup"><span data-stu-id="218ac-318">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-319">次の例を示しています、<xref:System.Math.Log%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-319">The following example illustrates the <xref:System.Math.Log%2A> method.</span></span>  
  
 [!code-csharp[System.Math.Log_Overloads#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/log1.cs#2)]
 [!code-vb[System.Math.Log_Overloads#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/log1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Exp(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double a, double newBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 a, float64 newBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (a As Double, newBase As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double a, double newBase);" />
      <MemberSignature Language="F#" Value="static member Log : double * double -&gt; double" Usage="System.Math.Log (a, newBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
        <Parameter Name="newBase" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="218ac-320">対数を求める対象の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-320">The number whose logarithm is to be found.</span>
          </span>
        </param>
        <param name="newBase">
          <span data-ttu-id="218ac-321">対数の底。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-321">The base of the logarithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-322">指定した数値の指定した底での対数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-322">Returns the logarithm of a specified number in a specified base.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-323">次の表に示した値のいずれか</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-323">One of the values in the following table.</span>
          </span>
          <span data-ttu-id="218ac-324">(+Infinity は <see cref="F:System.Double.PositiveInfinity" />、-Infinity は <see cref="F:System.Double.NegativeInfinity" />、NaN は <see cref="F:System.Double.NaN" /> をそれぞれ示しています。)</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-324">(+Infinity denotes <see cref="F:System.Double.PositiveInfinity" />, -Infinity denotes <see cref="F:System.Double.NegativeInfinity" />, and NaN denotes <see cref="F:System.Double.NaN" />.)</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <paramref name="a" />
              </term>
              <description>
                <paramref name="newBase" />
              </description>
              <description>
                <span data-ttu-id="218ac-325">戻り値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-325">Return value</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="218ac-326">
                  <paramref name="a" />&gt; 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-326">
                    <paramref name="a" />&gt; 0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-327">(0 &lt;<paramref name="newBase" />&lt; 1) - または -(<paramref name="newBase" />&gt; 1)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-327">(0 &lt;<paramref name="newBase" />&lt; 1) -or-(<paramref name="newBase" />&gt; 1)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="218ac-328">lognewBase(a)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-328">lognewBase(a)</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-329">
                  <paramref name="a" />&lt; 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-329">
                    <paramref name="a" />&lt; 0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-330">(任意の値)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-330">(any value)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="218ac-331">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-331">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-332">(任意の値)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-332">(any value)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-333">
                  <paramref name="newBase" />&lt; 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-333">
                    <paramref name="newBase" />&lt; 0</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="218ac-334">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-334">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-335">
                  <paramref name="a" /> != 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-335">
                    <paramref name="a" /> != 1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-336">
                  <paramref name="newBase" /> = 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-336">
                    <paramref name="newBase" /> = 0</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="218ac-337">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-337">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-338">
                  <paramref name="a" /> != 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-338">
                    <paramref name="a" /> != 1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-339">
                  <paramref name="newBase" /> = +Infinity</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-339">
                    <paramref name="newBase" /> = +Infinity</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="218ac-340">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-340">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-341">
                  <paramref name="a" /> = NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-341">
                    <paramref name="a" /> = NaN</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-342">(任意の値)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-342">(any value)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="218ac-343">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-343">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-344">(任意の値)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-344">(any value)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-345">
                  <paramref name="newBase" /> = NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-345">
                    <paramref name="newBase" /> = NaN</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="218ac-346">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-346">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-347">(任意の値)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-347">(any value)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-348">
                  <paramref name="newBase" /> = 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-348">
                    <paramref name="newBase" /> = 1</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="218ac-349">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-349">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-350">
                  <paramref name="a" /> = 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-350">
                    <paramref name="a" /> = 0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-351">0 &lt;<paramref name="newBase" />&lt; 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-351">0 &lt;<paramref name="newBase" />&lt; 1</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="218ac-352">+Infinity</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-352">+Infinity</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-353">
                  <paramref name="a" /> = 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-353">
                    <paramref name="a" /> = 0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-354">
                  <paramref name="newBase" />&gt; 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-354">
                    <paramref name="newBase" />&gt; 1</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="218ac-355">-Infinity</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-355">-Infinity</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-356">
                  <paramref name="a" /> =  +無限大</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-356">
                    <paramref name="a" /> =  +Infinity</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-357">0 &lt;<paramref name="newBase" />&lt; 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-357">0 &lt;<paramref name="newBase" />&lt; 1</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="218ac-358">-Infinity</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-358">-Infinity</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-359">
                  <paramref name="a" /> =  +無限大</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-359">
                    <paramref name="a" /> =  +Infinity</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-360">
                  <paramref name="newBase" />&gt; 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-360">
                    <paramref name="newBase" />&gt; 1</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="218ac-361">+Infinity</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-361">+Infinity</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-362">
                  <paramref name="a" /> = 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-362">
                    <paramref name="a" /> = 1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-363">
                  <paramref name="newBase" /> = 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-363">
                    <paramref name="newBase" /> = 0</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="218ac-364">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-364">0</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-365">
                  <paramref name="a" /> = 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-365">
                    <paramref name="a" /> = 1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-366">
                  <paramref name="newBase" /> = +Infinity</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-366">
                    <paramref name="newBase" /> = +Infinity</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="218ac-367">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-367">0</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-368">次の例では<xref:System.Math.Log%2A>の選択した値を評価します。</span><span class="sxs-lookup"><span data-stu-id="218ac-368">The following example uses <xref:System.Math.Log%2A> to evaluate certain logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Log_Overloads#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CPP/loggen.cpp#1)]
 [!code-csharp[System.Math.Log_Overloads#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/loggen.cs#1)]
 [!code-vb[System.Math.Log_Overloads#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/loggen.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static double Log10 (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log10(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log10(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log10(double d);" />
      <MemberSignature Language="F#" Value="static member Log10 : double -&gt; double" Usage="System.Math.Log10 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="218ac-369">対数を検索する対象の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-369">A number whose logarithm is to be found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-370">指定した数の底 10 の対数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-370">Returns the base 10 logarithm of a specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-371">次の表に示した値のいずれか</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-371">One of the values in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="218ac-372">
                  <paramref name="d" /> パラメーター</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-372">
                    <paramref name="d" /> parameter</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-373">戻り値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-373">Return value</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="218ac-374">正</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-374">Positive</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-375">
                  <paramref name="d" /> の底 10 の log。つまり、log 10<paramref name="d" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-375">The base 10 log of <paramref name="d" />; that is, log 10<paramref name="d" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-376">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-376">Zero</span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NegativeInfinity" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-377">負</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-377">Negative</span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-378">
                  <see cref="F:System.Double.NaN" /> と等価です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-378">Equal to <see cref="F:System.Double.NaN" /></span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-379">
                  <see cref="F:System.Double.PositiveInfinity" /> と等価です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-379">Equal to <see cref="F:System.Double.PositiveInfinity" /></span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.PositiveInfinity" />
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-380">パラメーター`d`底 10 の値として指定されます。</span><span class="sxs-lookup"><span data-stu-id="218ac-380">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-381">次の例では、<xref:System.Math.Log10%2A>メソッドを選択した値の底 10 の対数を返します。</span><span class="sxs-lookup"><span data-stu-id="218ac-381">The following example uses the <xref:System.Math.Log10%2A> method to return the base 10 logarithm for selected values.</span></span>  
  
 [!code-csharp[System.Math.Log10#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log10/CS/log10.cs#1)]
 [!code-vb[System.Math.Log10#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log10/VB/log10.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Max">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="218ac-382">指定された 2 つの数のうち、大きい方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-382">Returns the larger of two specified numbers.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static byte Max (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Max(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Max(System::Byte val1, System::Byte val2);" />
      <MemberSignature Language="F#" Value="static member Max : byte * byte -&gt; byte" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-383">比較する 2 つの 8 ビット符号なし整数の最初の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-383">The first of two 8-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-384">比較する 2 つの 8 ビット符号なし整数の 2 番目の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-384">The second of two 8-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-385">2 つの 8 ビット符号なし整数のうち、大きな方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-385">Returns the larger of two 8-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-386">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-386">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-387">次の例では、使用する方法、<xref:System.Math.Max%2A>大きく 2 つの変数に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-387">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static decimal Max (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Max(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Max(System::Decimal val1, System::Decimal val2);" />
      <MemberSignature Language="F#" Value="static member Max : decimal * decimal -&gt; decimal" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-388">比較する 2 つの 10 進数の最初の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-388">The first of two decimal numbers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-389">比較する 2 つの 10 進数の 2 番目の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-389">The second of two decimal numbers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-390">2 つの 10 進数のうち、大きい方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-390">Returns the larger of two decimal numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-391">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-391">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-392">次の例では、使用する方法、<xref:System.Math.Max%2A>大きく 2 つの変数に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-392">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static double Max (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Max(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Max(double val1, double val2);" />
      <MemberSignature Language="F#" Value="static member Max : double * double -&gt; double" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-393">比較する 2 つの倍精度浮動小数点数の最初の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-393">The first of two double-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-394">比較する 2 つの倍精度浮動小数点数の 2 番目の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-394">The second of two double-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-395">2 つの倍精度浮動小数点数のうち、大きい方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-395">Returns the larger of two double-precision floating-point numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-396">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-396">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
          <span data-ttu-id="218ac-397">
            <paramref name="val1" />、<paramref name="val2" />、または <paramref name="val1" /> と <paramref name="val2" /> の両方が <see cref="F:System.Double.NaN" /> に等しい場合、<see cref="F:System.Double.NaN" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-397">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-398">次の例では、使用する方法、<xref:System.Math.Max%2A>大きく 2 つの変数に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-398">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static short Max (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Max(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Max(short val1, short val2);" />
      <MemberSignature Language="F#" Value="static member Max : int16 * int16 -&gt; int16" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-399">比較する 2 つの 16 ビット符号付き整数の最初の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-399">The first of two 16-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-400">比較する 2 つの 16 ビット符号付き整数の 2 番目の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-400">The second of two 16-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-401">2 つの 16 ビット符号付き整数のうち、大きい方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-401">Returns the larger of two 16-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-402">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-402">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-403">次の例では、使用する方法、<xref:System.Math.Max%2A>大きく 2 つの変数に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-403">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static int Max (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Max(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Max(int val1, int val2);" />
      <MemberSignature Language="F#" Value="static member Max : int * int -&gt; int" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-404">比較する 2 つの 32 ビット符号付き整数の最初の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-404">The first of two 32-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-405">比較する 2 つの 32 ビット符号付き整数の 2 番目の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-405">The second of two 32-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-406">2 つの 32 ビット符号付き整数のうち、大きい方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-406">Returns the larger of two 32-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-407">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-407">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-408">次の例では、使用する方法、<xref:System.Math.Max%2A>大きく 2 つの変数に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-408">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static long Max (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Max(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Max(long val1, long val2);" />
      <MemberSignature Language="F#" Value="static member Max : int64 * int64 -&gt; int64" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-409">比較する 2 つの 64 ビット符号付き整数の最初の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-409">The first of two 64-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-410">比較する 2 つの 64 ビット符号付き整数の 2 番目の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-410">The second of two 64-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-411">2 つの 64 ビット符号付き整数のうち、大きい方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-411">Returns the larger of two 64-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-412">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-412">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-413">次の例では、使用する方法、<xref:System.Math.Max%2A>大きく 2 つの変数に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-413">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static sbyte Max (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Max(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Max(System::SByte val1, System::SByte val2);" />
      <MemberSignature Language="F#" Value="static member Max : sbyte * sbyte -&gt; sbyte" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-414">比較する 2 つの 8 ビット符号付き整数の最初の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-414">The first of two 8-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-415">比較する 2 つの 8 ビット符号付き整数の 2 番目の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-415">The second of two 8-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-416">2 つの 8 ビット符号付き整数のうち、大きい方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-416">Returns the larger of two 8-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-417">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-417">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-418">次の例では、使用する方法、<xref:System.Math.Max%2A>大きく 2 つの変数に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-418">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static float Max (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Max(float val1, float val2);" />
      <MemberSignature Language="F#" Value="static member Max : single * single -&gt; single" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-419">比較する 2 つの単精度浮動小数点数の最初の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-419">The first of two single-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-420">比較する 2 つの単精度浮動小数点数の 2 番目の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-420">The second of two single-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-421">2 つの単精度浮動小数点数のうち、大きい方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-421">Returns the larger of two single-precision floating-point numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-422">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-422">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
          <span data-ttu-id="218ac-423">
            <paramref name="val1" />、または <paramref name="val2" />、または <paramref name="val1" /> と <paramref name="val2" /> の両方が <see cref="F:System.Single.NaN" /> に等しい場合、<see cref="F:System.Single.NaN" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-423">If <paramref name="val1" />, or <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-424">次の例では、使用する方法、<xref:System.Math.Max%2A>大きく 2 つの変数に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-424">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ushort Max (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Max(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Max(System::UInt16 val1, System::UInt16 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint16 * uint16 -&gt; uint16" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-425">比較する 2 つの 16 ビット符号なし整数の最初の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-425">The first of two 16-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-426">比較する 2 つの 16 ビット符号なし整数の 2 番目の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-426">The second of two 16-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-427">2 つの 16 ビット符号なし整数のうち、大きな方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-427">Returns the larger of two 16-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-428">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-428">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-429">次の例では、使用する方法、<xref:System.Math.Max%2A>大きく 2 つの変数に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-429">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static uint Max (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Max(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Max(System::UInt32 val1, System::UInt32 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint32 * uint32 -&gt; uint32" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-430">比較する 2 つの 32 ビット符号なし整数の最初の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-430">The first of two 32-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-431">比較する 2 つの 32 ビット符号なし整数の 2 番目の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-431">The second of two 32-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-432">2 つの 32 ビット符号なし整数のうち、大きな方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-432">Returns the larger of two 32-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-433">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-433">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-434">次の例では、使用する方法、<xref:System.Math.Max%2A>大きく 2 つの変数に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-434">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ulong Max (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Max(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Max(System::UInt64 val1, System::UInt64 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint64 * uint64 -&gt; uint64" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-435">比較する 2 つの 64 ビット符号なし整数の最初の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-435">The first of two 64-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-436">比較する 2 つの 64 ビット符号なし整数の 2 番目の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-436">The second of two 64-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-437">2 つの 64 ビット符号なし整数のうち、大きな方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-437">Returns the larger of two 64-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-438">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-438">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-439">次の例では、使用する方法、<xref:System.Math.Max%2A>大きく 2 つの変数に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-439">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Min">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="218ac-440">2 つの数のうち、小さい方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-440">Returns the smaller of two numbers.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static byte Min (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Min(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Min(System::Byte val1, System::Byte val2);" />
      <MemberSignature Language="F#" Value="static member Min : byte * byte -&gt; byte" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-441">比較する 2 つの 8 ビット符号なし整数の最初の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-441">The first of two 8-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-442">比較する 2 つの 8 ビット符号なし整数の 2 番目の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-442">The second of two 8-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-443">2 つの 8 ビット符号なし整数のうち、小さい方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-443">Returns the smaller of two 8-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-444">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-444">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-445">次の例では、使用する方法、 <xref:System.Math.Min%2A> 2 つの変数のうち、小さい方に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-445">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static decimal Min (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Min(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Min(System::Decimal val1, System::Decimal val2);" />
      <MemberSignature Language="F#" Value="static member Min : decimal * decimal -&gt; decimal" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-446">比較する 2 つの 10 進数の最初の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-446">The first of two decimal numbers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-447">比較する 2 つの 10 進数の 2 番目の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-447">The second of two decimal numbers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-448">2 つの 10 進数のうち、小さい方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-448">Returns the smaller of two decimal numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-449">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-449">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-450">次の例では、使用する方法、 <xref:System.Math.Min%2A> 2 つの変数のうち、小さい方に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-450">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static double Min (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Min(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Min(double val1, double val2);" />
      <MemberSignature Language="F#" Value="static member Min : double * double -&gt; double" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-451">比較する 2 つの倍精度浮動小数点数の最初の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-451">The first of two double-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-452">比較する 2 つの倍精度浮動小数点数の 2 番目の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-452">The second of two double-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-453">2 つの倍精度浮動小数点数のうち、小さい方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-453">Returns the smaller of two double-precision floating-point numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-454">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-454">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
          <span data-ttu-id="218ac-455">
            <paramref name="val1" />、<paramref name="val2" />、または <paramref name="val1" /> と <paramref name="val2" /> の両方が <see cref="F:System.Double.NaN" /> に等しい場合、<see cref="F:System.Double.NaN" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-455">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-456">次の例では、使用する方法、 <xref:System.Math.Min%2A> 2 つの変数のうち、小さい方に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-456">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static short Min (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Min(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Min(short val1, short val2);" />
      <MemberSignature Language="F#" Value="static member Min : int16 * int16 -&gt; int16" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-457">比較する 2 つの 16 ビット符号付き整数の最初の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-457">The first of two 16-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-458">比較する 2 つの 16 ビット符号付き整数の 2 番目の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-458">The second of two 16-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-459">2 つの 16 ビット符号付き整数のうち、小さい方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-459">Returns the smaller of two 16-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-460">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-460">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-461">次の例では、使用する方法、 <xref:System.Math.Min%2A> 2 つの変数のうち、小さい方に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-461">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static int Min (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Min(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Min(int val1, int val2);" />
      <MemberSignature Language="F#" Value="static member Min : int * int -&gt; int" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-462">比較する 2 つの 32 ビット符号付き整数の最初の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-462">The first of two 32-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-463">比較する 2 つの 32 ビット符号付き整数の 2 番目の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-463">The second of two 32-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-464">2 つの 32 ビット符号付き整数のうち、小さい方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-464">Returns the smaller of two 32-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-465">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-465">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-466">次の例では、使用する方法、 <xref:System.Math.Min%2A> 2 つの変数のうち、小さい方に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-466">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static long Min (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Min(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Min(long val1, long val2);" />
      <MemberSignature Language="F#" Value="static member Min : int64 * int64 -&gt; int64" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-467">比較する 2 つの 64 ビット符号付き整数の最初の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-467">The first of two 64-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-468">比較する 2 つの 64 ビット符号付き整数の 2 番目の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-468">The second of two 64-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-469">2 つの 64 ビット符号付き整数のうち、小さい方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-469">Returns the smaller of two 64-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-470">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-470">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-471">次の例では、使用する方法、 <xref:System.Math.Min%2A> 2 つの変数のうち、小さい方に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-471">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static sbyte Min (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Min(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Min(System::SByte val1, System::SByte val2);" />
      <MemberSignature Language="F#" Value="static member Min : sbyte * sbyte -&gt; sbyte" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-472">比較する 2 つの 8 ビット符号付き整数の最初の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-472">The first of two 8-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-473">比較する 2 つの 8 ビット符号付き整数の 2 番目の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-473">The second of two 8-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-474">2 つの 8 ビット符号付き整数のうち、小さい方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-474">Returns the smaller of two 8-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-475">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-475">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-476">次の例では、使用する方法、 <xref:System.Math.Min%2A> 2 つの変数のうち、小さい方に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-476">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static float Min (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Min(float val1, float val2);" />
      <MemberSignature Language="F#" Value="static member Min : single * single -&gt; single" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-477">比較する 2 つの単精度浮動小数点数の最初の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-477">The first of two single-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-478">比較する 2 つの単精度浮動小数点数の 2 番目の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-478">The second of two single-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-479">2 つの単精度浮動小数点数のうち、小さい方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-479">Returns the smaller of two single-precision floating-point numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-480">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-480">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
          <span data-ttu-id="218ac-481">
            <paramref name="val1" />、<paramref name="val2" />、または <paramref name="val1" /> と <paramref name="val2" /> の両方が <see cref="F:System.Single.NaN" /> に等しい場合、<see cref="F:System.Single.NaN" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-481">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-482">次の例では、使用する方法、 <xref:System.Math.Min%2A> 2 つの変数のうち、小さい方に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-482">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ushort Min (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Min(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Min(System::UInt16 val1, System::UInt16 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint16 * uint16 -&gt; uint16" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-483">比較する 2 つの 16 ビット符号なし整数の最初の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-483">The first of two 16-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-484">比較する 2 つの 16 ビット符号なし整数の 2 番目の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-484">The second of two 16-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-485">2 つの 16 ビット符号なし整数のうち、小さい方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-485">Returns the smaller of two 16-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-486">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-486">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-487">次の例では、使用する方法、 <xref:System.Math.Min%2A> 2 つの変数のうち、小さい方に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-487">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static uint Min (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Min(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Min(System::UInt32 val1, System::UInt32 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint32 * uint32 -&gt; uint32" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-488">比較する 2 つの 32 ビット符号なし整数の最初の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-488">The first of two 32-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-489">比較する 2 つの 32 ビット符号なし整数の 2 番目の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-489">The second of two 32-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-490">2 つの 32 ビット符号なし整数のうち、小さい方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-490">Returns the smaller of two 32-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-491">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-491">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-492">次の例では、使用する方法、 <xref:System.Math.Min%2A> 2 つの変数のうち、小さい方に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-492">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ulong Min (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Min(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Min(System::UInt64 val1, System::UInt64 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint64 * uint64 -&gt; uint64" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="218ac-493">比較する 2 つの 64 ビット符号なし整数の最初の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-493">The first of two 64-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="218ac-494">比較する 2 つの 64 ビット符号なし整数の 2 番目の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-494">The second of two 64-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-495">2 つの 64 ビット符号なし整数のうち、小さい方を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-495">Returns the smaller of two 64-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-496">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-496">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-497">次の例では、使用する方法、 <xref:System.Math.Min%2A> 2 つの変数のうち、小さい方に表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-497">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PI">
      <MemberSignature Language="C#" Value="public const double PI = 3.14159265358979;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 PI = (3.14159265358979)" />
      <MemberSignature Language="DocId" Value="F:System.Math.PI" />
      <MemberSignature Language="VB.NET" Value="Public Const PI As Double  = 3.14159265358979" />
      <MemberSignature Language="C++ CLI" Value="public: double PI = 3.14159265358979;" />
      <MemberSignature Language="F#" Value="val mutable PI : double" Usage="System.Math.PI" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>3.14159265358979</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="218ac-498">定数 (π) を指定して、円の直径に対する円周の割合を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-498">Represents the ratio of the circumference of a circle to its diameter, specified by the constant, π.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-499">このフィールドの値は、3.14159265358979323846 です。</span><span class="sxs-lookup"><span data-stu-id="218ac-499">The value of this field is 3.14159265358979323846.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-500">次の例では<xref:System.Math.PI>台形の特定の内部の角度の計算を支援します。</span><span class="sxs-lookup"><span data-stu-id="218ac-500">The following example uses <xref:System.Math.PI> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static double Pow (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Pow(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Pow(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Pow(double x, double y);" />
      <MemberSignature Language="F#" Value="static member Pow : double * double -&gt; double" Usage="System.Math.Pow (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="218ac-501">累乗対象の倍精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-501">A double-precision floating-point number to be raised to a power.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="218ac-502">累乗を指定する倍精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-502">A double-precision floating-point number that specifies a power.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-503">指定の数値を指定した値で累乗した値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-503">Returns a specified number raised to the specified power.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-504">数値 <paramref name="x" /> を <paramref name="y" /> で累乗した値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-504">The number <paramref name="x" /> raised to the power <paramref name="y" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-505">さまざまな値または範囲の値を指定する、次の表は、戻り値を示します、`x`と`y`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="218ac-505">The following table indicates the return value when various values or ranges of values are specified for the `x` and `y` parameters.</span></span> <span data-ttu-id="218ac-506">詳細については、「<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>「<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>および「<xref:System.Double.NaN?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="218ac-506">For more information, see <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, and <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
|<span data-ttu-id="218ac-507">パラメーター</span><span class="sxs-lookup"><span data-stu-id="218ac-507">Parameters</span></span>|<span data-ttu-id="218ac-508">戻り値</span><span class="sxs-lookup"><span data-stu-id="218ac-508">Return value</span></span>|  
|----------------|------------------|  
|<span data-ttu-id="218ac-509">`x` または`y`  = `NaN`します。</span><span class="sxs-lookup"><span data-stu-id="218ac-509">`x` or `y` = `NaN`.</span></span>|`NaN`|  
|<span data-ttu-id="218ac-510">`x` = すべての値を除く`NaN`;`y` = 0。</span><span class="sxs-lookup"><span data-stu-id="218ac-510">`x` = Any value except `NaN`; `y` = 0.</span></span>|<span data-ttu-id="218ac-511">1</span><span class="sxs-lookup"><span data-stu-id="218ac-511">1</span></span>|  
|<span data-ttu-id="218ac-512">`x` = `NegativeInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="218ac-512">`x` = `NegativeInfinity`; `y` < 0.</span></span>|<span data-ttu-id="218ac-513">0</span><span class="sxs-lookup"><span data-stu-id="218ac-513">0</span></span>|  
|<span data-ttu-id="218ac-514">`x` = `NegativeInfinity`;`y`が奇数の正の整数。</span><span class="sxs-lookup"><span data-stu-id="218ac-514">`x` = `NegativeInfinity`; `y` is a positive odd integer.</span></span>|`NegativeInfinity`|  
|<span data-ttu-id="218ac-515">`x` = `NegativeInfinity`;`y`は正の値が奇数の整数ではありません。</span><span class="sxs-lookup"><span data-stu-id="218ac-515">`x` = `NegativeInfinity`; `y` is positive but not an odd integer.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="218ac-516">`x` < 0 なく`NegativeInfinity`;`y` 、整数ではない`NegativeInfinity`、または`PositiveInfinity`します。</span><span class="sxs-lookup"><span data-stu-id="218ac-516">`x` < 0 but not `NegativeInfinity`; `y` is not an integer, `NegativeInfinity`, or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="218ac-517">`x` =-1。`y`  =  `NegativeInfinity`または`PositiveInfinity`します。</span><span class="sxs-lookup"><span data-stu-id="218ac-517">`x` = -1; `y` = `NegativeInfinity` or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="218ac-518">-1 < `x` < 1 になります;`y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="218ac-518">-1 < `x` < 1; `y` = `NegativeInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="218ac-519">-1 < `x` < 1 になります;`y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="218ac-519">-1 < `x` < 1; `y` = `PositiveInfinity`.</span></span>|<span data-ttu-id="218ac-520">0</span><span class="sxs-lookup"><span data-stu-id="218ac-520">0</span></span>|  
|<span data-ttu-id="218ac-521">`x` <-1 または`x`> 1 になります;`y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="218ac-521">`x` < -1 or `x` > 1; `y` = `NegativeInfinity`.</span></span>|<span data-ttu-id="218ac-522">0</span><span class="sxs-lookup"><span data-stu-id="218ac-522">0</span></span>|  
|<span data-ttu-id="218ac-523">`x` <-1 または`x`> 1 になります;`y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="218ac-523">`x` < -1 or `x` > 1; `y` = `PositiveInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="218ac-524">`x` = 0; `y` &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="218ac-524">`x` = 0; `y` < 0.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="218ac-525">`x` = 0; `y` &gt; 0.</span><span class="sxs-lookup"><span data-stu-id="218ac-525">`x` = 0; `y` > 0.</span></span>|<span data-ttu-id="218ac-526">0</span><span class="sxs-lookup"><span data-stu-id="218ac-526">0</span></span>|  
|<span data-ttu-id="218ac-527">`x` = 1 になります。`y`以外の値は、`NaN`します。</span><span class="sxs-lookup"><span data-stu-id="218ac-527">`x` = 1; `y` is any value except `NaN`.</span></span>|<span data-ttu-id="218ac-528">1</span><span class="sxs-lookup"><span data-stu-id="218ac-528">1</span></span>|  
|<span data-ttu-id="218ac-529">`x` = `PositiveInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="218ac-529">`x` = `PositiveInfinity`; `y` < 0.</span></span>|<span data-ttu-id="218ac-530">0</span><span class="sxs-lookup"><span data-stu-id="218ac-530">0</span></span>|  
|<span data-ttu-id="218ac-531">`x` = `PositiveInfinity`;`y` > 0。</span><span class="sxs-lookup"><span data-stu-id="218ac-531">`x` = `PositiveInfinity`; `y` > 0.</span></span>|`PositiveInfinity`|  
  
   
  
## Examples  
 <span data-ttu-id="218ac-532">次の例では、 <xref:System.Math.Pow%2A> 2 0 から 32 まで電源を発生させるから結果値を計算するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-532">The following example uses the <xref:System.Math.Pow%2A> method to calculate the value that results from raising 2 to a power ranging from 0 to 32.</span></span>  
  
 [!code-csharp[System.Math.Pow#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.pow/cs/pow1.cs#1)]
 [!code-vb[System.Math.Pow#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.pow/vb/pow1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Sqrt(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="218ac-533">最も近い整数または指定した小数点以下の桁数に値を丸めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-533">Rounds a value to the nearest integer or to the specified number of fractional digits.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-534">このセクションの内容:</span><span class="sxs-lookup"><span data-stu-id="218ac-534">In this section:</span></span>  
  
 <span data-ttu-id="218ac-535">[オーバー ロードされたメソッドの構文](#Syntax) </span><span class="sxs-lookup"><span data-stu-id="218ac-535">[Overloaded method syntax](#Syntax) </span></span>  
 <span data-ttu-id="218ac-536">[パラメーター](#Params) </span><span class="sxs-lookup"><span data-stu-id="218ac-536">[Parameters](#Params) </span></span>  
 <span data-ttu-id="218ac-537">[戻り値](#Returns) </span><span class="sxs-lookup"><span data-stu-id="218ac-537">[Return value](#Returns) </span></span>  
 <span data-ttu-id="218ac-538">[例外](#Exceptions) </span><span class="sxs-lookup"><span data-stu-id="218ac-538">[Exceptions](#Exceptions) </span></span>  
 <span data-ttu-id="218ac-539">[どのメソッドが呼び出しですか。](#Tasks) </span><span class="sxs-lookup"><span data-stu-id="218ac-539">[Which method do I call?](#Tasks) </span></span>  
 <span data-ttu-id="218ac-540">[中間値と丸め規則](#Midpoint) </span><span class="sxs-lookup"><span data-stu-id="218ac-540">[Midpoint values and rounding conventions](#Midpoint) </span></span>  
 <span data-ttu-id="218ac-541">[丸め処理や有効桁数](#Precision) </span><span class="sxs-lookup"><span data-stu-id="218ac-541">[Rounding and precision](#Precision) </span></span>  
 <span data-ttu-id="218ac-542">[丸めと単精度浮動小数点値](#Single) </span><span class="sxs-lookup"><span data-stu-id="218ac-542">[Rounding and single-precision floating-point values](#Single) </span></span>  
 <span data-ttu-id="218ac-543">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="218ac-543">Examples:</span></span>   
 [<span data-ttu-id="218ac-544">Math.Round(Decimal)</span><span class="sxs-lookup"><span data-stu-id="218ac-544">Math.Round(Decimal)</span></span>](#Round1_Example)  
 [<span data-ttu-id="218ac-545">Math.Round(Double)</span><span class="sxs-lookup"><span data-stu-id="218ac-545">Math.Round(Double)</span></span>](#Round2_Example)  
 [<span data-ttu-id="218ac-546">Math.Round (10 進数、int32 型)</span><span class="sxs-lookup"><span data-stu-id="218ac-546">Math.Round(Decimal, Int32)</span></span>](#Round3_Example)  
 [<span data-ttu-id="218ac-547">Math.Round (10 進数、MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="218ac-547">Math.Round(Decimal, MidpointRounding)</span></span>](#Round4_Example)  
 [<span data-ttu-id="218ac-548">Math.Round (Double、int32 型)</span><span class="sxs-lookup"><span data-stu-id="218ac-548">Math.Round(Double, Int32)</span></span>](#Round5_Example)  
 [<span data-ttu-id="218ac-549">Math.Round (Double MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="218ac-549">Math.Round(Double, MidpointRounding)</span></span>](#Round6_Example)  
 [<span data-ttu-id="218ac-550">Math.Round (10 進数、Int32、MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="218ac-550">Math.Round(Decimal, Int32, MidpointRounding)</span></span>](#Round7_Example)  
 [<span data-ttu-id="218ac-551">Math.Round (Double、Int32、MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="218ac-551">Math.Round(Double, Int32, MidpointRounding)</span></span>](#Round8_Example)  
[<span data-ttu-id="218ac-552">バージョン情報</span><span class="sxs-lookup"><span data-stu-id="218ac-552">Version information</span></span>](#Round_Versions)  
  
<a name="Syntax"></a>   
## <a name="overloaded-method-syntax"></a><span data-ttu-id="218ac-553">オーバー ロードされたメソッドの構文</span><span class="sxs-lookup"><span data-stu-id="218ac-553">Overloaded method syntax</span></span>  
 <span data-ttu-id="218ac-554">オーバー ロードの選択に追加のガイダンスについては、次を参照してください[どのメソッドが呼び出しですか?。](#Tasks)</span><span class="sxs-lookup"><span data-stu-id="218ac-554">For additional guidance on choosing an overload, see [Which method do I call?](#Tasks)</span></span>  
  
 <span data-ttu-id="218ac-555">`Decimal Math.Round(Decimal` `d` `)`</span><span class="sxs-lookup"><span data-stu-id="218ac-555">`Decimal Math.Round(Decimal` `d` `)`</span></span>  
 <span data-ttu-id="218ac-556">10 進値を最も近い整数に丸めます、最も近い偶数に中間値を丸めます ([例](#Round1_Example))。</span><span class="sxs-lookup"><span data-stu-id="218ac-556">Rounds a decimal value to the nearest integer, and rounds midpoint values to the nearest even number ([example](#Round1_Example)).</span></span>  
  
 <span data-ttu-id="218ac-557">`Double Math.Round(Double` `a` `)`</span><span class="sxs-lookup"><span data-stu-id="218ac-557">`Double Math.Round(Double` `a` `)`</span></span>  
 <span data-ttu-id="218ac-558">最も近い整数、倍精度浮動小数点値を丸めます、最も近い偶数に中間値を丸めます ([例](#Round2_Example))。</span><span class="sxs-lookup"><span data-stu-id="218ac-558">Rounds a double-precision floating-point value to the nearest integer, and rounds midpoint values to the nearest even number ([example](#Round2_Example)).</span></span>  
  
 <span data-ttu-id="218ac-559">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `)`</span><span class="sxs-lookup"><span data-stu-id="218ac-559">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `)`</span></span>  
 <span data-ttu-id="218ac-560">指定した小数部の桁数の 10 進数値を四捨五入し、中間値を最も近い偶数の桁に丸めます ([例](#Round3_Example))。</span><span class="sxs-lookup"><span data-stu-id="218ac-560">Rounds a decimal value to a specified number of fractional digits, and rounds midpoint values to the nearest even number ([example](#Round3_Example)).</span></span>  
  
 <span data-ttu-id="218ac-561">`Double Math.Round(Double` `value` `, Int32`  `digits` `)`</span><span class="sxs-lookup"><span data-stu-id="218ac-561">`Double Math.Round(Double` `value` `, Int32`  `digits` `)`</span></span>  
 <span data-ttu-id="218ac-562">指定された数の小数部の桁数を倍精度浮動小数点値を丸めます、最も近い偶数に中間値を丸めます ([例](#Round4_Example))。</span><span class="sxs-lookup"><span data-stu-id="218ac-562">Rounds a double-precision floating-point value to a specified number of fractional digits, and rounds midpoint values to the nearest even number ([example](#Round4_Example)).</span></span>  
  
 <span data-ttu-id="218ac-563">`Decimal Math.Round(Decimal` `d` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="218ac-563">`Decimal Math.Round(Decimal` `d` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="218ac-564">10 進値を最も近い整数に丸めます、中間値の指定した丸め規則を使用して ([例](#Round5_Example))。</span><span class="sxs-lookup"><span data-stu-id="218ac-564">Rounds a decimal value to the nearest integer, and uses the specified rounding convention for midpoint values ([example](#Round5_Example)).</span></span>  
  
 <span data-ttu-id="218ac-565">`Double Math.Round(Double` `value` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="218ac-565">`Double Math.Round(Double` `value` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="218ac-566">最も近い整数、倍精度浮動小数点値を四捨五入し、中間値の指定した丸め規則を使用して ([例](#Round6_Example))。</span><span class="sxs-lookup"><span data-stu-id="218ac-566">Rounds a double-precision floating-point value to the nearest integer, and uses the specified rounding convention for midpoint values ([example](#Round6_Example)).</span></span>  
  
 <span data-ttu-id="218ac-567">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="218ac-567">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="218ac-568">指定した小数部の桁数の 10 進値を四捨五入し、中間値の指定した丸め規則を使用して ([例](#Round7_Example))。</span><span class="sxs-lookup"><span data-stu-id="218ac-568">Rounds a decimal value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values ([example](#Round7_Example)).</span></span>  
  
 <span data-ttu-id="218ac-569">`Double Math.Round(Double` `value` `, Int32`  `digits` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="218ac-569">`Double Math.Round(Double` `value` `, Int32`  `digits` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="218ac-570">指定した桁の小数部の倍精度浮動小数点値を四捨五入し、中間値の指定した丸め規則を使用して ([例](#Round8_Example))。</span><span class="sxs-lookup"><span data-stu-id="218ac-570">Rounds a double-precision floating-point value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values ([example](#Round8_Example)).</span></span>  
  
<a name="Params"></a>   
## <a name="parameters"></a><span data-ttu-id="218ac-571">パラメーター</span><span class="sxs-lookup"><span data-stu-id="218ac-571">Parameters</span></span>  
 <span data-ttu-id="218ac-572">これは、パラメーターの完全な一覧、<xref:System.Math.Round%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-572">This is a complete list of parameters for the <xref:System.Math.Round%2A> method.</span></span> <span data-ttu-id="218ac-573">各オーバー ロードによって使用されるパラメーター、上記のオーバー ロードの構文を参照してください。</span><span class="sxs-lookup"><span data-stu-id="218ac-573">For the parameters used by each overload, see the overload syntax above.</span></span>  
  
|<span data-ttu-id="218ac-574">パラメーター</span><span class="sxs-lookup"><span data-stu-id="218ac-574">Parameter</span></span>|<span data-ttu-id="218ac-575">型</span><span class="sxs-lookup"><span data-stu-id="218ac-575">Type</span></span>|<span data-ttu-id="218ac-576">説明</span><span class="sxs-lookup"><span data-stu-id="218ac-576">Description</span></span>|  
|---------------|----------|-----------------|  
|`d`|<xref:System.Decimal>|<span data-ttu-id="218ac-577">丸め対象の数。</span><span class="sxs-lookup"><span data-stu-id="218ac-577">A number to be rounded.</span></span>|  
|`a`<br /><br /> <span data-ttu-id="218ac-578">- または -</span><span class="sxs-lookup"><span data-stu-id="218ac-578">-or-</span></span><br /><br /> `value`|<xref:System.Double>|<span data-ttu-id="218ac-579">丸め対象の倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="218ac-579">A double-precision floating-point number to be rounded.</span></span>|  
|`decimals`<br /><br /> <span data-ttu-id="218ac-580">- または -</span><span class="sxs-lookup"><span data-stu-id="218ac-580">-or-</span></span><br /><br /> `digits`|<xref:System.Int32>|<span data-ttu-id="218ac-581">戻り値の小数部の桁数。</span><span class="sxs-lookup"><span data-stu-id="218ac-581">The number of fractional digits in the return value.</span></span> <span data-ttu-id="218ac-582"><xref:System.Decimal>値、その範囲は 0 から 28。</span><span class="sxs-lookup"><span data-stu-id="218ac-582">For <xref:System.Decimal> values, it can range from 0 to 28.</span></span> <span data-ttu-id="218ac-583"><xref:System.Double>値、その範囲は 0 を 15 にします。</span><span class="sxs-lookup"><span data-stu-id="218ac-583">For <xref:System.Double> values, it can range from 0 to 15.</span></span> <span data-ttu-id="218ac-584">サポートされている整数部と小数桁の数字の最大数は、15、<xref:System.Double>型。</span><span class="sxs-lookup"><span data-stu-id="218ac-584">Note that 15 is the maximum number of integral and fractional digits supported by the <xref:System.Double> type.</span></span><br /><br /> <span data-ttu-id="218ac-585">既定値: 0 で、整数に丸められます</span><span class="sxs-lookup"><span data-stu-id="218ac-585">Default value: 0, which rounds to an integer</span></span>|  
|`mode`|<xref:System.MidpointRounding>|<span data-ttu-id="218ac-586">中間の値を丸めるに使用する規則を指定するフラグ。</span><span class="sxs-lookup"><span data-stu-id="218ac-586">A flag that specifies the convention to use for rounding midpoint values.</span></span> <span data-ttu-id="218ac-587">参照してください[中間値と丸め規則](#Midpoint)します。</span><span class="sxs-lookup"><span data-stu-id="218ac-587">See [Midpoint values and rounding conventions](#Midpoint).</span></span><br /><br /> <span data-ttu-id="218ac-588">既定値: <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="218ac-588">Default value: <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType></span></span>|  
  
<a name="Returns"></a>   
## <a name="return-value"></a><span data-ttu-id="218ac-589">戻り値</span><span class="sxs-lookup"><span data-stu-id="218ac-589">Return value</span></span>  
 <span data-ttu-id="218ac-590">型:<xref:System.Decimal>または<xref:System.Double>を丸めた後の値の型に応じて、します。</span><span class="sxs-lookup"><span data-stu-id="218ac-590">Type: <xref:System.Decimal> or <xref:System.Double>, depending on the type of the value to be rounded.</span></span>   
<span data-ttu-id="218ac-591">同じ型の数値`d`、 `a`、または`value`、整数または指定した 10 進数のいずれかが丸みのあります。</span><span class="sxs-lookup"><span data-stu-id="218ac-591">A numeric value of the same type as `d`, `a`, or `value`, but rounded either to an integer or to the specified number of decimal digits.</span></span> <span data-ttu-id="218ac-592">参照してください[中間値と丸め規則](#Midpoint)中間値を持つ数値丸め処理を行う方法についてはします。</span><span class="sxs-lookup"><span data-stu-id="218ac-592">See [Midpoint values and rounding conventions](#Midpoint) for information about rounding numbers with midpoint values.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="218ac-593">中間値を丸め、丸め処理を行うアルゴリズムは、等値テストを実行します。</span><span class="sxs-lookup"><span data-stu-id="218ac-593">When rounding midpoint values, the rounding algorithm performs an equality test.</span></span> <span data-ttu-id="218ac-594">バイナリ表現と単精度浮動小数点形式での問題、原因は、メソッドによって返される値を予期できないことができます。</span><span class="sxs-lookup"><span data-stu-id="218ac-594">Because of problems of binary representation and precision in the floating-point format, the value returned by the method can be unexpected.</span></span> <span data-ttu-id="218ac-595">詳細については、次を参照してください。[丸めと有効桁数](#Precision)します。</span><span class="sxs-lookup"><span data-stu-id="218ac-595">For more information, see [Rounding and precision](#Precision).</span></span>  
  
 <span data-ttu-id="218ac-596">オーバー ロードの場合、<xref:System.Double>パラメーターを使用して呼び出した<xref:System.Double.NaN?displayProperty=nameWithType>、メソッドを返します<xref:System.Double.NaN?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="218ac-596">If an overload with a <xref:System.Double> parameter is called with <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="218ac-597">使用して呼び出した場合<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>または<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>、メソッドを返します<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>または<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="218ac-597">If it is called with <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
<a name="Exceptions"></a>   
## <a name="exceptions"></a><span data-ttu-id="218ac-598">例外</span><span class="sxs-lookup"><span data-stu-id="218ac-598">Exceptions</span></span>  
  
|<span data-ttu-id="218ac-599">例外</span><span class="sxs-lookup"><span data-stu-id="218ac-599">Exception</span></span>|<span data-ttu-id="218ac-600">条件</span><span class="sxs-lookup"><span data-stu-id="218ac-600">Condition</span></span>|<span data-ttu-id="218ac-601">によってスローされます。</span><span class="sxs-lookup"><span data-stu-id="218ac-601">Thrown by</span></span>|  
|---------------|---------------|---------------|  
|<xref:System.OverflowException>|<span data-ttu-id="218ac-602">範囲外の結果は、<xref:System.Decimal>型。</span><span class="sxs-lookup"><span data-stu-id="218ac-602">The result is outside the range of the <xref:System.Decimal> type.</span></span>|<xref:System.Math.Round%28System.Decimal%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="218ac-603">`decimals` が 0 未満か、28 を超えています。</span><span class="sxs-lookup"><span data-stu-id="218ac-603">`decimals` is less than 0 or greater than 28.</span></span><br /><br /> <span data-ttu-id="218ac-604">- または -</span><span class="sxs-lookup"><span data-stu-id="218ac-604">-or-</span></span><br /><br /> <span data-ttu-id="218ac-605">`digits` が 0 より小さいか、15 を超えています。</span><span class="sxs-lookup"><span data-stu-id="218ac-605">`digits` is less than 0 or greater than 15.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<xref:System.ArgumentException>|<span data-ttu-id="218ac-606">`mode` が <xref:System.MidpointRounding> の有効な値ではありません。</span><span class="sxs-lookup"><span data-stu-id="218ac-606">`mode` is not a valid value of <xref:System.MidpointRounding>.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
  
<a name="Tasks"></a>   
## <a name="which-method-do-i-call"></a><span data-ttu-id="218ac-607">どのメソッドが呼び出しですか。</span><span class="sxs-lookup"><span data-stu-id="218ac-607">Which method do I call?</span></span>  
  
|<span data-ttu-id="218ac-608">終了</span><span class="sxs-lookup"><span data-stu-id="218ac-608">To</span></span>|<span data-ttu-id="218ac-609">Call</span><span class="sxs-lookup"><span data-stu-id="218ac-609">Call</span></span>|  
|--------|----------|  
|<span data-ttu-id="218ac-610">最も近い規則への丸めを使用して整数に四捨五入します。</span><span class="sxs-lookup"><span data-stu-id="218ac-610">Round a number to an integer by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%29><br /><br /> <span data-ttu-id="218ac-611">- または -</span><span class="sxs-lookup"><span data-stu-id="218ac-611">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%29>|  
|<span data-ttu-id="218ac-612">数値を指定したを使用して、整数丸め規則を丸め処理します。</span><span class="sxs-lookup"><span data-stu-id="218ac-612">Round a number to an integer by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="218ac-613">- または -</span><span class="sxs-lookup"><span data-stu-id="218ac-613">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="218ac-614">最も近い規則への丸めを使用して指定した小数部の桁数に数値を丸めます。</span><span class="sxs-lookup"><span data-stu-id="218ac-614">Round a number to a specified number of fractional digits by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <span data-ttu-id="218ac-615">- または -</span><span class="sxs-lookup"><span data-stu-id="218ac-615">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|  
|<span data-ttu-id="218ac-616">指定して、指定した小数部の桁数に数値を丸め、規則を丸めです。</span><span class="sxs-lookup"><span data-stu-id="218ac-616">Round a number to a specified number of fractional digits by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="218ac-617">- または -</span><span class="sxs-lookup"><span data-stu-id="218ac-617">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="218ac-618">Round、<xref:System.Single>を指定した指定した丸め規則と有効桁数の損失を最小限に抑えることを使用して桁の小数部の値。</span><span class="sxs-lookup"><span data-stu-id="218ac-618">Round a <xref:System.Single> value to a specified number of fractional digits by using a specified rounding convention and minimizing the loss of precision.</span></span>|<span data-ttu-id="218ac-619">変換、<xref:System.Single>を<xref:System.Decimal>を呼び出すと<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>します。</span><span class="sxs-lookup"><span data-stu-id="218ac-619">Convert the <xref:System.Single> to a <xref:System.Decimal> and call <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>.</span></span>|  
|<span data-ttu-id="218ac-620">中間の値を丸める有効桁数の問題を最小限に抑えながらを指定した小数部の桁の数値を丸めます。</span><span class="sxs-lookup"><span data-stu-id="218ac-620">Round a number to a specified number of fractional digits while minimizing problems of precision in rounding midpoint values.</span></span>|<span data-ttu-id="218ac-621">「より大きいまたはにほぼ等しい」比較を実装する丸め処理を行うメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="218ac-621">Call a rounding method that implements a "greater than or approximately equal to" comparison.</span></span> <span data-ttu-id="218ac-622">参照してください[丸めと有効桁数](#Precision)します。</span><span class="sxs-lookup"><span data-stu-id="218ac-622">See [Rounding and precision](#Precision).</span></span>|  
|<span data-ttu-id="218ac-623">円形の小数部の値を整数に小数部の値よりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="218ac-623">Round a fractional value to an integer that is greater than the fractional value.</span></span> <span data-ttu-id="218ac-624">たとえば、3.1 を 4 に切り上げられます。</span><span class="sxs-lookup"><span data-stu-id="218ac-624">For example, round 3.1 to 4.</span></span>|<xref:System.Math.Ceiling%2A>|  
|<span data-ttu-id="218ac-625">小数部の値を整数に丸めが小数部の値より小さいです。</span><span class="sxs-lookup"><span data-stu-id="218ac-625">Round a fractional value to an integer that is less than the fractional value.</span></span> <span data-ttu-id="218ac-626">たとえば、3.9 を 3 に切り上げられます。</span><span class="sxs-lookup"><span data-stu-id="218ac-626">For example, round 3.9 to 3.</span></span>|<xref:System.Math.Floor%2A>|  
  
<a name="Midpoint"></a>   
## <a name="midpoint-values-and-rounding-conventions"></a><span data-ttu-id="218ac-627">中間値と丸め規則</span><span class="sxs-lookup"><span data-stu-id="218ac-627">Midpoint values and rounding conventions</span></span>  
 <span data-ttu-id="218ac-628">丸め処理を行うには、指定された有効桁数で数値を低精度の最も近い値に変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="218ac-628">Rounding involves converting a numeric value with a specified precision to the nearest value with less precision.</span></span> <span data-ttu-id="218ac-629">たとえば、使用することができます、 <xref:System.Math.Round%28System.Double%29> 3.4 と 3.0 の値を丸めるメソッドと<xref:System.Math.Round%28System.Double%2CSystem.Int32%29>3.579 に 3.58 の値を丸めます。</span><span class="sxs-lookup"><span data-stu-id="218ac-629">For example, you can use the <xref:System.Math.Round%28System.Double%29> method to round a value of 3.4 to 3.0, and the <xref:System.Math.Round%28System.Double%2CSystem.Int32%29> method to round a value of 3.579 to 3.58.</span></span>  
  
 <span data-ttu-id="218ac-630">中間値では、結果の最下位の数字の後の値は、2 つの数値の間で正確に半分方法です。</span><span class="sxs-lookup"><span data-stu-id="218ac-630">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="218ac-631">たとえば、3.47500 は中間の値である場合に 2 つの小数点以下桁数が丸められます、7.500 中間値を整数に丸め 場合は、です。</span><span class="sxs-lookup"><span data-stu-id="218ac-631">For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="218ac-632">このような場合は、最も近い値は丸め規則なし簡単に識別することはできません。</span><span class="sxs-lookup"><span data-stu-id="218ac-632">In these cases, the nearest value can't be easily identified without a rounding convention.</span></span>  
  
 <span data-ttu-id="218ac-633"><xref:System.Math.Round%2A>メソッドは、中間値を処理するための 2 つの丸め規則をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="218ac-633">The <xref:System.Math.Round%2A> method supports two rounding conventions for handling midpoint values:</span></span>  
  
 <span data-ttu-id="218ac-634">**ゼロから離れる方向に丸め処理**</span><span class="sxs-lookup"><span data-stu-id="218ac-634">**Rounding away from zero**</span></span>  
 <span data-ttu-id="218ac-635">中間値は、次の番号をゼロから離れる方向に丸められます。</span><span class="sxs-lookup"><span data-stu-id="218ac-635">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="218ac-636">次の例では、3.75 が 3.8 に四捨五入-3.8 に 3.9 に 3.85 ラウンド-3.75 が丸められ、-3.85-3.9 に桁に丸めます。</span><span class="sxs-lookup"><span data-stu-id="218ac-636">For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</span></span> <span data-ttu-id="218ac-637">この形式の丸めがによって表される、<xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType>列挙型のメンバー。</span><span class="sxs-lookup"><span data-stu-id="218ac-637">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="218ac-638">ゼロから離れる方向に丸め処理は、丸め処理の最もよく知られた形式です。</span><span class="sxs-lookup"><span data-stu-id="218ac-638">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="218ac-639">**、近似値に丸め処理や銀行型丸め**</span><span class="sxs-lookup"><span data-stu-id="218ac-639">**Rounding to nearest, or banker's rounding**</span></span>  
 <span data-ttu-id="218ac-640">中間値は、最も近い偶数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="218ac-640">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="218ac-641">たとえば、3.75 と 3.85 の両方が 3.8 に丸める、-3.75 と-3.85 の両方が-3.8 に丸めます。</span><span class="sxs-lookup"><span data-stu-id="218ac-641">For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</span></span> <span data-ttu-id="218ac-642">この形式の丸めがによって表される、<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>列挙型のメンバー。</span><span class="sxs-lookup"><span data-stu-id="218ac-642">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="218ac-643">近似値に丸め処理は、財務や統計操作で使用される丸め処理の標準的な形式です。</span><span class="sxs-lookup"><span data-stu-id="218ac-643">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="218ac-644">IEEE 標準 754、セクション 4 に準拠しています。</span><span class="sxs-lookup"><span data-stu-id="218ac-644">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="218ac-645">複数の丸め処理で使用する場合、常に中間値を 1 つの方向に丸めるによって引き起こされる丸めエラーが減少します。</span><span class="sxs-lookup"><span data-stu-id="218ac-645">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="218ac-646">場合によっては、この丸めエラーは大幅にできます。</span><span class="sxs-lookup"><span data-stu-id="218ac-646">In some cases, this rounding error can be significant.</span></span>  
  
 <span data-ttu-id="218ac-647">次の例は、常に中間値を 1 つの方向に丸めることができます、バイアスを示しています。</span><span class="sxs-lookup"><span data-stu-id="218ac-647">The following example illustrates the bias that can result from consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="218ac-648">配列の真の平均を計算する例では、<xref:System.Decimal>値、および 2 つの規則を使用して、配列内の値が丸められたときに、平均を計算します。</span><span class="sxs-lookup"><span data-stu-id="218ac-648">The example computes the true mean of an array of <xref:System.Decimal> values, and then computes the mean when the values in the array are rounded by using the two conventions.</span></span> <span data-ttu-id="218ac-649">この例では、真の平均と、平均の近似値に丸め処理を行うときに、結果は同じです。</span><span class="sxs-lookup"><span data-stu-id="218ac-649">In this example, the true mean and the mean that results when rounding to nearest are the same.</span></span> <span data-ttu-id="218ac-650">ただし、ゼロから離れる方向丸め処理を行うときに、結果、平均値とは異なる.05 (または 3.6%) 真の平均から。</span><span class="sxs-lookup"><span data-stu-id="218ac-650">However, the mean that results when rounding away from zero differs by .05 (or by 3.6%) from the true mean.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mean1.cs#2)]
 [!code-vb[System.Math.Round.Overload#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mean1.vb#2)]  
  
 <span data-ttu-id="218ac-651">既定で、<xref:System.Math.Round%2A>メソッドは、最も近い規則に丸めを使用します。</span><span class="sxs-lookup"><span data-stu-id="218ac-651">By default, the <xref:System.Math.Round%2A> method uses the rounding to nearest convention.</span></span> <span data-ttu-id="218ac-652">次の表のオーバー ロード、<xref:System.Math.Round%2A>メソッドと、丸め規則それぞれの使用します。</span><span class="sxs-lookup"><span data-stu-id="218ac-652">The following table lists the overloads of the <xref:System.Math.Round%2A> method and the rounding convention that each uses.</span></span>  
  
|<span data-ttu-id="218ac-653">オーバーロード</span><span class="sxs-lookup"><span data-stu-id="218ac-653">Overload</span></span>|<span data-ttu-id="218ac-654">規則の丸め処理を行う</span><span class="sxs-lookup"><span data-stu-id="218ac-654">Rounding convention</span></span>|  
|--------------|-------------------------|  
|<xref:System.Math.Round%28System.Decimal%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>|<span data-ttu-id="218ac-655">によって決定`mode`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="218ac-655">Determined by `mode` parameter.</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|<span data-ttu-id="218ac-656">によって決定`mode`パラメーター</span><span class="sxs-lookup"><span data-stu-id="218ac-656">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="218ac-657">によって決定`mode`パラメーター</span><span class="sxs-lookup"><span data-stu-id="218ac-657">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="218ac-658">によって決定`mode`パラメーター</span><span class="sxs-lookup"><span data-stu-id="218ac-658">Determined by `mode` parameter</span></span>|  
  
<a name="Precision"></a>   
## <a name="rounding-and-precision"></a><span data-ttu-id="218ac-659">丸め処理や有効桁数</span><span class="sxs-lookup"><span data-stu-id="218ac-659">Rounding and precision</span></span>  
 <span data-ttu-id="218ac-660">丸め操作を中間値は、かどうかを判断するために、<xref:System.Math.Round%2A>メソッドは元の値が 10 で切り捨てられます、乗算<sup>n</sup>ここで、 *n*小数部の桁数は、戻り値、数字、値の小数部から成る残りの部分が.5 以上かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="218ac-660">In order to determine whether a rounding operation involves a midpoint value, the <xref:System.Math.Round%2A> method multiplies the original value to be rounded by 10<sup>n</sup>, where *n* is the desired number of fractional digits in the return value, and then determines whether the remaining fractional portion of the value is greater than or equal to .5.</span></span> <span data-ttu-id="218ac-661">これは、若干のバリエーションの「テストの等価性」セクションでテストし、等しいかどうか、で説明したように、<xref:System.Double>リファレンス トピックでは、テスト浮動小数点値と等しいかどうかは問題のあるバイナリ浮動小数点形式問題が原因形式と有効桁数。</span><span class="sxs-lookup"><span data-stu-id="218ac-661">This is a slight variation on a test for equality, and as discussed in the "Testing for Equality" section of the <xref:System.Double> reference topic, tests for equality with floating-point values are problematic because of the floating-point format's issues with binary representation and precision.</span></span> <span data-ttu-id="218ac-662">これは、こと (精度が低下する) ため .5 より若干小さい数値の任意の小数部は丸められません上方向を意味します。</span><span class="sxs-lookup"><span data-stu-id="218ac-662">This means that any fractional portion of a number that is slightly less than .5 (because of a loss of precision) will not be rounded upward.</span></span>  
  
 <span data-ttu-id="218ac-663">この問題を説明する例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="218ac-663">The following example illustrates the problem.</span></span> <span data-ttu-id="218ac-664">繰り返し、.1 に 11.0 を追加し、結果を最も近い整数に丸めます。</span><span class="sxs-lookup"><span data-stu-id="218ac-664">It repeatedly adds .1 to 11.0 and rounds the result to the nearest integer.</span></span> <span data-ttu-id="218ac-665">丸めの規則に関係なく 11.5 は 12 に丸める必要があります。</span><span class="sxs-lookup"><span data-stu-id="218ac-665">Regardless of the rounding convention, 11.5 should round to 12.</span></span> <span data-ttu-id="218ac-666">ただし、例の出力として存在しません。</span><span class="sxs-lookup"><span data-stu-id="218ac-666">However, as the output from the example shows, it does not.</span></span> <span data-ttu-id="218ac-667">例では、"R"を使用して[標準数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)表示には、値の完全な有効桁数、および値は切り捨てられますが、繰り返しの追加中に有効桁数を失ったことを示しています、浮動小数点し、その値が実際には11.499999999999998 します。</span><span class="sxs-lookup"><span data-stu-id="218ac-667">The example uses the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) to display the floating point value's full precision, and shows that the value to be rounded has lost precision during repeated additions, and its value is actually 11.499999999999998.</span></span> <span data-ttu-id="218ac-668">.499999999999998.5 未満であるため、値は [次へ] の最大の整数に丸められません。</span><span class="sxs-lookup"><span data-stu-id="218ac-668">Because .499999999999998 is less than .5, the value is not rounded to the next highest integer.</span></span> <span data-ttu-id="218ac-669">定数の値に対して 11.5 に割り当てるだけですがある場合、例に示すことも、この問題は発生しません、<xref:System.Double>変数。</span><span class="sxs-lookup"><span data-stu-id="218ac-669">As the example also shows, this problem does not occur if we simply assign the constant value 11.5 to a <xref:System.Double> variable.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision1.cs#7)]
 [!code-vb[System.Math.Round.Overload#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision1.vb#7)]  
  
 <span data-ttu-id="218ac-670">中間の値を丸める有効桁数の問題は、次の条件で発生する可能性が高いです。</span><span class="sxs-lookup"><span data-stu-id="218ac-670">Problems of precision in rounding midpoint values are most likely to arise in the following conditions:</span></span>  
  
-   <span data-ttu-id="218ac-671">ときに小数部の値は、浮動小数点型のバイナリ形式で正確に表現できません。</span><span class="sxs-lookup"><span data-stu-id="218ac-671">When a fractional value cannot be expressed precisely in the floating-point type's binary format.</span></span>  
  
-   <span data-ttu-id="218ac-672">ときに値が切り捨てられますが、1 つまたは複数の浮動小数点演算から計算されます。</span><span class="sxs-lookup"><span data-stu-id="218ac-672">When the value to be rounded is calculated from one or more floating-point operations.</span></span>  
  
-   <span data-ttu-id="218ac-673">丸め対象の値が、<xref:System.Single>なく<xref:System.Double>または<xref:System.Decimal>します。</span><span class="sxs-lookup"><span data-stu-id="218ac-673">When the value to be rounded is a <xref:System.Single> rather than a <xref:System.Double> or <xref:System.Decimal>.</span></span> <span data-ttu-id="218ac-674">詳細については、次のセクションを参照してください。[丸めと単精度浮動小数点値](#Single)します。</span><span class="sxs-lookup"><span data-stu-id="218ac-674">For more information, see the next section, [Rounding and single-precision floating-point values](#Single).</span></span>  
  
 <span data-ttu-id="218ac-675">操作を丸める有効桁数が不足しているが問題のある場合には、次の操作を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="218ac-675">In cases where the lack of precision in rounding operations is problematic, you can do the following:</span></span>  
  
-   <span data-ttu-id="218ac-676">丸め演算が四捨五入するオーバー ロードを呼び出す場合、<xref:System.Double>値を変更できます、<xref:System.Double>を<xref:System.Decimal>値し、四捨五入するオーバー ロードを呼び出して、<xref:System.Decimal>値の代わりにします。</span><span class="sxs-lookup"><span data-stu-id="218ac-676">If the rounding operation calls an overload that rounds a <xref:System.Double> value, you can change the <xref:System.Double> to a <xref:System.Decimal> value and call an overload that rounds a <xref:System.Decimal> value instead.</span></span> <span data-ttu-id="218ac-677">ただし、<xref:System.Decimal>データ型は、有効桁数の損失と表現の問題にもが、これらの問題は、はるかにまれです。</span><span class="sxs-lookup"><span data-stu-id="218ac-677">Although the <xref:System.Decimal> data type also has problems of representation and loss of precision, these issues are far less common.</span></span>  
  
-   <span data-ttu-id="218ac-678">中間値に近い値は切り捨てられますが期待がかどうかを判断する「ほぼ等しい」テストを実行するカスタムの丸め処理を行うアルゴリズムを定義します。</span><span class="sxs-lookup"><span data-stu-id="218ac-678">Define a custom rounding algorithm that performs a "nearly equal" test to determine whether the value to be rounded is acceptably close to a midpoint value.</span></span> <span data-ttu-id="218ac-679">次の例では、定義、`RoundApproximate`小数部の値は、十分に中間丸め処理の対象に中間値の近くにあるかどうかを検査するメソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-679">The following example defines a `RoundApproximate` method that examines whether a fractional value is sufficiently near to a midpoint value to be subject to midpoint rounding.</span></span> <span data-ttu-id="218ac-680">例の出力が示すように、前の例に示すように丸めの問題を修正します。</span><span class="sxs-lookup"><span data-stu-id="218ac-680">As the output from the example shows, it corrects the rounding problem shown in the previous example.</span></span>  
  
     [!code-csharp[System.Math.Round.Overload#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision2.cs#8)]
     [!code-vb[System.Math.Round.Overload#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision2.vb#8)]  
  
<a name="Single"></a>   
## <a name="rounding-and-single-precision-floating-point-values"></a><span data-ttu-id="218ac-681">丸めと単精度浮動小数点値</span><span class="sxs-lookup"><span data-stu-id="218ac-681">Rounding and single-precision floating-point values</span></span>  
 <span data-ttu-id="218ac-682"><xref:System.Math.Round%2A>メソッドには、型の引数を受け入れるオーバー ロードが含まれています。<xref:System.Decimal>と<xref:System.Double>します。</span><span class="sxs-lookup"><span data-stu-id="218ac-682">The <xref:System.Math.Round%2A> method includes overloads that accept arguments of type <xref:System.Decimal> and <xref:System.Double>.</span></span> <span data-ttu-id="218ac-683">型の値を丸めるメソッドがない<xref:System.Single>します。</span><span class="sxs-lookup"><span data-stu-id="218ac-683">There are no methods that round values of type <xref:System.Single>.</span></span> <span data-ttu-id="218ac-684">渡す場合、<xref:System.Single>のオーバー ロードのいずれかに値、<xref:System.Math.Round%2A>キャスト (c#) は、メソッド、または変換 (Visual Basic) で、 <xref:System.Double>、および対応する<xref:System.Math.Round%2A>オーバー ロードを<xref:System.Double>パラメーターと呼びます。</span><span class="sxs-lookup"><span data-stu-id="218ac-684">If you pass a <xref:System.Single> value to one of the overloads of the <xref:System.Math.Round%2A> method, it is cast (in C#) or converted (in Visual Basic) to a <xref:System.Double>, and the corresponding <xref:System.Math.Round%2A> overload with a <xref:System.Double> parameter is called.</span></span> <span data-ttu-id="218ac-685">拡大変換ですが、多くの場合が、精度の損失次の例に示すようにします。</span><span class="sxs-lookup"><span data-stu-id="218ac-685">Although this is a widening conversion, it often involves a loss of precision, as the following example illustrates.</span></span> <span data-ttu-id="218ac-686">ときに、<xref:System.Single>に 16.325 の値が渡される、<xref:System.Math.Round%2A>メソッドされ、結果は 16.32 の 16.33、いない期待される結果を最も近い規則への丸めを使用して 2 つの小数点以下桁数に丸められます、します。</span><span class="sxs-lookup"><span data-stu-id="218ac-686">When a <xref:System.Single> value of 16.325 is passed to the <xref:System.Math.Round%2A> method and rounded to two decimal places using the rounding to nearest convention, the result is 16.33 and not the expected result of 16.32.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/single1.cs#1)]
 [!code-vb[System.Math.Round.Overload#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/single1.vb#1)]  
  
 <span data-ttu-id="218ac-687">この予期しない結果での変換で精度の損失、<xref:System.Single>値を<xref:System.Double>します。</span><span class="sxs-lookup"><span data-stu-id="218ac-687">This unexpected result is due to a loss of precision in the conversion of the <xref:System.Single> value to a <xref:System.Double>.</span></span> <span data-ttu-id="218ac-688">その結果<xref:System.Double>は上方向に丸められます常に、16.325000762939453 の値の中間値でないし、16.325 より大きい。</span><span class="sxs-lookup"><span data-stu-id="218ac-688">Because the resulting <xref:System.Double> value of 16.325000762939453 is not a midpoint value and is greater than 16.325, it is always rounded upward.</span></span>  
  
 <span data-ttu-id="218ac-689">多くの場合、例に示すように、有効桁数の損失を最小限に抑えるしたり、キャストまたは変換で排除、<xref:System.Single>値を<xref:System.Decimal>します。</span><span class="sxs-lookup"><span data-stu-id="218ac-689">In many cases, as the example illustrates, the loss of precision can be minimized or eliminated by casting or converting the <xref:System.Single> value to a <xref:System.Decimal>.</span></span> <span data-ttu-id="218ac-690">、これは、縮小変換であるため、必要があること、キャスト演算子を使用して、または変換メソッドを呼び出すことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="218ac-690">Note that, because this is a narrowing conversion, it requires using a cast operator or calling a conversion method.</span></span>  
  
<a name="Round1_Example"></a>   
## <a name="mathrounddecimal-example"></a><span data-ttu-id="218ac-691">Math.Round(Decimal) 例</span><span class="sxs-lookup"><span data-stu-id="218ac-691">Math.Round(Decimal) example</span></span>  
 <span data-ttu-id="218ac-692">次の例で、<xref:System.Math.Round%28System.Decimal%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="218ac-692">The following example demonstrates the <xref:System.Math.Round%28System.Decimal%29> method.</span></span> <span data-ttu-id="218ac-693">なお、<xref:System.Decimal>このオーバー ロードは既定値を使用するため、4.5 の値が 5 ではなく 4 に丸められます<xref:System.MidpointRounding.ToEven>規則。</span><span class="sxs-lookup"><span data-stu-id="218ac-693">Note that the <xref:System.Decimal> value of 4.5 rounds to 4 rather than 5, because this overload uses the default <xref:System.MidpointRounding.ToEven> convention.</span></span>  
  
 [!code-csharp[System.Math.Round#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/rounddecimal1.cs#6)]
 [!code-vb[System.Math.Round#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/rounddecimal1.vb#6)]  
  
<a name="Round2_Example"></a>   
## <a name="mathrounddouble-example"></a><span data-ttu-id="218ac-694">Math.Round(Double) 例</span><span class="sxs-lookup"><span data-stu-id="218ac-694">Math.Round(Double) example</span></span>  
 <span data-ttu-id="218ac-695">次の例では、最も近い整数に丸め処理を示します。</span><span class="sxs-lookup"><span data-stu-id="218ac-695">The following example demonstrates rounding to the nearest integer value.</span></span>  
  
 [!code-cpp[Classic Math.Round Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Math.Round Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round Example/CS/source.cs#1)]
 [!code-vb[Classic Math.Round Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round Example/VB/source.vb#1)]  
  
<a name="Round3_Example"></a>   
## <a name="mathrounddecimal-int32-example"></a><span data-ttu-id="218ac-696">Math.Round (10 進数, Int32) の例</span><span class="sxs-lookup"><span data-stu-id="218ac-696">Math.Round(Decimal, Int32) example</span></span>  
 <span data-ttu-id="218ac-697">次の例では、2 桁の小数部を 1 つの桁の小数部を持つ値を含む 10 進数値を丸めます。</span><span class="sxs-lookup"><span data-stu-id="218ac-697">The following example rounds decimal values with two fractional digits to values that have a single fractional digit.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/source.cs#3)]
 [!code-vb[System.Math.Round.Overload#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/source.vb#3)]  
  
<a name="Round4_Example"></a>   
## <a name="mathrounddouble-int32-example"></a><span data-ttu-id="218ac-698">Math.Round (Double、int32 型) の例</span><span class="sxs-lookup"><span data-stu-id="218ac-698">Math.Round(Double, Int32) example</span></span>  
 <span data-ttu-id="218ac-699">次の例では、2 桁の小数部を 1 つの桁の小数部が double 型の double 値を丸めます。</span><span class="sxs-lookup"><span data-stu-id="218ac-699">The following example rounds double values with two fractional digits to doubles that have a single fractional digit.</span></span>  
  
 [!code-cpp[Classic Math.Round2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Math.Round2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CS/source.cs#1)]
 [!code-vb[Classic Math.Round2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round2 Example/VB/source.vb#1)]  
  
<a name="Round5_Example"></a>   
## <a name="mathrounddecimal-midpointrounding-example"></a><span data-ttu-id="218ac-700">Math.Round (10 進数、MidpointRounding) の例</span><span class="sxs-lookup"><span data-stu-id="218ac-700">Math.Round(Decimal, MidpointRounding) example</span></span>  
 <span data-ttu-id="218ac-701">次の例は、によって返される値を表示、<xref:System.Math.Round%28System.Decimal%29>メソッド、<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>メソッドを`mode`の引数<xref:System.MidpointRounding.ToEven>、および<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>メソッドを`mode`の引数<xref:System.MidpointRounding.AwayFromZero>。</span><span class="sxs-lookup"><span data-stu-id="218ac-701">The following example displays values returned by the <xref:System.Math.Round%28System.Decimal%29> method, the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint1.cs#5)]
 [!code-vb[System.Math.Round.Overload#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint1.vb#5)]  
  
<a name="Round6_Example"></a>   
## <a name="mathrounddouble-midpointrounding-example"></a><span data-ttu-id="218ac-702">Math.Round (Double MidpointRounding) の例</span><span class="sxs-lookup"><span data-stu-id="218ac-702">Math.Round(Double, MidpointRounding) example</span></span>  
 <span data-ttu-id="218ac-703">次の例は、によって返される値を表示、<xref:System.Math.Round%28System.Double%29>メソッド、<xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>メソッドを`mode`の引数<xref:System.MidpointRounding.ToEven>、および<xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>メソッドを`mode`の引数<xref:System.MidpointRounding.AwayFromZero>。</span><span class="sxs-lookup"><span data-stu-id="218ac-703">The following example displays values returned by the <xref:System.Math.Round%28System.Double%29> method, the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint2.cs#6)]
 [!code-vb[System.Math.Round.Overload#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint2.vb#6)]  
  
<a name="Round7_Example"></a>   
## <a name="mathrounddecimal-int32-midpointrounding-example"></a><span data-ttu-id="218ac-704">Math.Round (10 進数、Int32、MidpointRounding) の例</span><span class="sxs-lookup"><span data-stu-id="218ac-704">Math.Round(Decimal, Int32, MidpointRounding) example</span></span>  
 <span data-ttu-id="218ac-705">次の例では、使用する方法、<xref:System.Math.Round%2A>メソッドを<xref:System.MidpointRounding>列挙体。</span><span class="sxs-lookup"><span data-stu-id="218ac-705">The following example demonstrates how to use the <xref:System.Math.Round%2A> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
<a name="Round8_Example"></a>   
## <a name="mathrounddouble-int32-midpointrounding-example"></a><span data-ttu-id="218ac-706">Math.Round (Double、Int32、MidpointRounding) の例</span><span class="sxs-lookup"><span data-stu-id="218ac-706">Math.Round(Double, Int32, MidpointRounding) example</span></span>  
 <span data-ttu-id="218ac-707">次の例では、使用する方法、<xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>メソッドを<xref:System.MidpointRounding>列挙体。</span><span class="sxs-lookup"><span data-stu-id="218ac-707">The following example demonstrates how to use the <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mpr.cs#4)]
 [!code-vb[System.Math.Round.Overload#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mpr.vb#4)]  
  
<a name="Round_Versions"></a>   
## <a name="version-information"></a><span data-ttu-id="218ac-708">バージョン情報</span><span class="sxs-lookup"><span data-stu-id="218ac-708">Version information</span></span>  
 <span data-ttu-id="218ac-709">.NET Framework</span><span class="sxs-lookup"><span data-stu-id="218ac-709">.NET Framework</span></span>  
 <span data-ttu-id="218ac-710">なしのオーバー ロードを<xref:System.MidpointRounding>でパラメーターがサポートされています: 4.5、4、3.5、3.0、2.0、1.1、1.0</span><span class="sxs-lookup"><span data-stu-id="218ac-710">Overloads without a <xref:System.MidpointRounding> parameter are supported in: 4.5, 4, 3.5, 3.0, 2.0, 1.1, 1.0</span></span>  
<span data-ttu-id="218ac-711">オーバー ロードを<xref:System.MidpointRounding>でパラメーターがサポートされています: 4.5、4、3.5、3.0、2.0</span><span class="sxs-lookup"><span data-stu-id="218ac-711">Overloads with a <xref:System.MidpointRounding> parameter are supported in: 4.5, 4, 3.5, 3.0, 2.0</span></span>  
  
 <span data-ttu-id="218ac-712">.NET Framework Client Profile</span><span class="sxs-lookup"><span data-stu-id="218ac-712">.NET Framework Client Profile</span></span>  
 <span data-ttu-id="218ac-713">すべてのオーバー ロードではサポートされて: 4、3.5 SP1</span><span class="sxs-lookup"><span data-stu-id="218ac-713">All overloads are supported in: 4, 3.5 SP1</span></span>  
  
 <span data-ttu-id="218ac-714">ポータブル クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="218ac-714">Portable Class Library</span></span>  
 <span data-ttu-id="218ac-715">すべてのオーバー ロードがサポートされています</span><span class="sxs-lookup"><span data-stu-id="218ac-715">All overloads are supported</span></span>  
  
 <span data-ttu-id="218ac-716">Windows ストア アプリ用 .NET</span><span class="sxs-lookup"><span data-stu-id="218ac-716">.NET for Windows Store apps</span></span>  
 <span data-ttu-id="218ac-717">すべてのオーバー ロードがサポートされています: Windows 8</span><span class="sxs-lookup"><span data-stu-id="218ac-717">All overloads are supported in: Windows 8</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
        <altmember cref="M:System.Math.Truncate(System.Decimal)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Round : decimal -&gt; decimal" Usage="System.Math.Round d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="218ac-718">丸め対象の 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-718">A decimal number to be rounded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-719">10 進値を最も近い整数値に丸めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-719">Rounds a decimal value to the nearest integral value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-720">パラメーター <paramref name="d" /> に最も近い整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-720">The integer nearest parameter <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="218ac-721">
            <paramref name="d" /> の小数部が 2 つの整数 (一方が偶数で、もう一方が奇数) の中間にある場合は、偶数が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-721">If the fractional component of <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned.</span>
          </span>
          <span data-ttu-id="218ac-722">このメソッドは、整数型ではなく <see cref="T:System.Decimal" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-722">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="218ac-723">例との他のオーバー ロードの包括的な使用状況について、`Round`メソッドを参照してください、<xref:System.Math.Round%2A>リファレンス ページです。</span><span class="sxs-lookup"><span data-stu-id="218ac-723">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="218ac-724">結果が <see cref="T:System.Decimal" /> の範囲外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-724">The result is outside the range of a <see cref="T:System.Decimal" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double a);" />
      <MemberSignature Language="F#" Value="static member Round : double -&gt; double" Usage="System.Math.Round a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="218ac-725">丸め対象の倍精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-725">A double-precision floating-point number to be rounded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-726">倍精度浮動小数点値を最も近い整数値に丸めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-726">Rounds a double-precision floating-point value to the nearest integral value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-727">
            <paramref name="a" /> に最も近い整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-727">The integer nearest <paramref name="a" />.</span>
          </span>
          <span data-ttu-id="218ac-728">
            <paramref name="a" /> の小数部が 2 つの整数 (一方が偶数で、もう一方が奇数) の中間にある場合は、偶数が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-728">If the fractional component of <paramref name="a" /> is halfway between two integers, one of which is even and the other odd, then the even number is returned.</span>
          </span>
          <span data-ttu-id="218ac-729">このメソッドは、整数型ではなく <see cref="T:System.Double" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-729">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="218ac-730">例との他のオーバー ロードの包括的な使用状況について、`Round`メソッドを参照してください、<xref:System.Math.Round%2A>リファレンス ページです。</span><span class="sxs-lookup"><span data-stu-id="218ac-730">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="218ac-731">結果を浮動小数点数としての 10 進数の値を表すまたは場合によっては、浮動小数点値に対する算術演算を実行する精度が失われるのため、<see cref="M:System.Math.Round(System.Double)" />メソッドが、中間の値を丸めるされない可能性があります、近い偶数の整数。</span>
            <span class="sxs-lookup">
              <span data-stu-id="218ac-731">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double)" /> method may not appear to round midpoint values to the nearest even integer.</span>
            </span>
            <span data-ttu-id="218ac-732">次の例では、浮動小数点値.1 は有限のバイナリ表現があるないため、最初の呼び出し、 <see cref="M:System.Math.Round(System.Double)" /> 11.5 の値を持つメソッドには、12 の代わりに 11 が返されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="218ac-732">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span>
            </span>
            <span data-ttu-id="218ac-733">[! コード csharp[System.Math.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round2.cs#1)] [! コード vb[System.Math.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round2.vb#1)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="218ac-733">[!code-csharp[System.Math.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round2.cs#1)] [!code-vb[System.Math.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round2.vb#1)]</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int -&gt; decimal" Usage="System.Math.Round (d, decimals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="218ac-734">丸め対象の 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-734">A decimal number to be rounded.</span>
          </span>
        </param>
        <param name="decimals">
          <span data-ttu-id="218ac-735">戻り値の小数部の桁数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-735">The number of decimal places in the return value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-736">10 進値を、指定した小数部の桁数に丸めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-736">Rounds a decimal value to a specified number of fractional digits.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-737">
            <paramref name="d" /> に等しい小数部の桁数を格納する <paramref name="decimals" /> に最も近い数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-737">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="218ac-738">例との他のオーバー ロードの包括的な使用状況について、`Round`メソッドを参照してください、<xref:System.Math.Round%2A>リファレンス ページです。</span><span class="sxs-lookup"><span data-stu-id="218ac-738">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="218ac-739">
            <paramref name="decimals" /> が 0 未満か、28 を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-739">
              <paramref name="decimals" /> is less than 0 or greater than 28.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="218ac-740">結果が <see cref="T:System.Decimal" /> の範囲外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-740">The result is outside the range of a <see cref="T:System.Decimal" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * MidpointRounding -&gt; decimal" Usage="System.Math.Round (d, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="218ac-741">丸め対象の 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-741">A decimal number to be rounded.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="218ac-742">
            <paramref name="d" /> が 2 つの数値の中間にある場合に丸める方法を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-742">Specification for how to round <paramref name="d" /> if it is midway between two other numbers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-743">10 進値を最も近い整数に丸めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-743">Rounds a decimal value to the nearest integer.</span>
          </span>
          <span data-ttu-id="218ac-744">値が 2 つの数値の中間にある場合にその値を丸める方法をパラメーターで指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-744">A parameter specifies how to round the value if it is midway between two numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-745">
            <paramref name="d" /> に最も近い整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-745">The integer nearest <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="218ac-746">
            <paramref name="d" /> が 2 つの数値 (一方が偶数でもう一方が奇数) の中間にある場合、<paramref name="mode" /> によって 2 つの数値のどちらが返されるかが決まります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-746">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="218ac-747">例との他のオーバー ロードの包括的な使用状況について、`Round`メソッドを参照してください、<xref:System.Math.Round%2A>リファレンス ページです。</span><span class="sxs-lookup"><span data-stu-id="218ac-747">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="218ac-748">
            <paramref name="mode" /> が <see cref="T:System.MidpointRounding" /> の有効な値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-748">
              <paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="218ac-749">結果が <see cref="T:System.Decimal" /> の範囲外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-749">The result is outside the range of a <see cref="T:System.Decimal" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits);" />
      <MemberSignature Language="F#" Value="static member Round : double * int -&gt; double" Usage="System.Math.Round (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="218ac-750">丸め対象の倍精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-750">A double-precision floating-point number to be rounded.</span>
          </span>
        </param>
        <param name="digits">
          <span data-ttu-id="218ac-751">戻り値の小数部の桁数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-751">The number of fractional digits in the return value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-752">倍精度浮動小数点値を指定した小数部の桁数に丸めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-752">Rounds a double-precision floating-point value to a specified number of fractional digits.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-753">
            <paramref name="value" /> に等しい小数部の桁数を格納する <paramref name="digits" /> に最も近い数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-753">The number nearest to <paramref name="value" /> that contains a number of fractional digits equal to <paramref name="digits" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="218ac-754">例との他のオーバー ロードの包括的な使用状況について、`Round`メソッドを参照してください、<xref:System.Math.Round%2A>リファレンス ページです。</span><span class="sxs-lookup"><span data-stu-id="218ac-754">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="218ac-755">
            <paramref name="digits" /> が 0 より小さいか、15 を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-755">
              <paramref name="digits" /> is less than 0 or greater than 15.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="218ac-756">結果を浮動小数点数としての 10 進数の値を表すまたは場合によっては、浮動小数点値に対する算術演算を実行する精度が失われるのため、<see cref="M:System.Math.Round(System.Double,System.Int32)" />メソッドが、中間の値を丸めるされない可能性があります、最も近い偶数値で、<paramref name="digits" />小数部の位置。</span>
            <span class="sxs-lookup">
              <span data-stu-id="218ac-756">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32)" /> method may not appear to round midpoint values to the nearest even value in the <paramref name="digits" /> decimal position.</span>
            </span>
            <span data-ttu-id="218ac-757">これは 2.135 が 2.14 ではなく 2.13 に丸められますの次の例に示します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="218ac-757">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span>
            </span>
            <span data-ttu-id="218ac-758">これは、メソッドを内部的に乗算するために発生<paramref name="value" />10<sup>桁</sup>、し、乗算操作は、ここでは精度の損失から低下します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="218ac-758">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span>
            </span>
            <span data-ttu-id="218ac-759">[! コード csharp[System.Math.Round#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round3.cs#2)] [! コード vb[System.Math.Round#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round3.vb#2)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="218ac-759">[!code-csharp[System.Math.Round#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round3.cs#2)] [!code-vb[System.Math.Round#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round3.vb#2)]</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : double * MidpointRounding -&gt; double" Usage="System.Math.Round (value, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="218ac-760">丸め対象の倍精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-760">A double-precision floating-point number to be rounded.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="218ac-761">
            <paramref name="value" /> が 2 つの数値の中間にある場合に丸める方法を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-761">Specification for how to round <paramref name="value" /> if it is midway between two other numbers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-762">倍精度浮動小数点値を最も近い整数に丸めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-762">Rounds a double-precision floating-point value to the nearest integer.</span>
          </span>
          <span data-ttu-id="218ac-763">値が 2 つの数値の中間にある場合にその値を丸める方法をパラメーターで指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-763">A parameter specifies how to round the value if it is midway between two numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-764">
            <paramref name="value" /> に最も近い整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-764">The integer nearest <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="218ac-765">
            <paramref name="value" /> が 2 つの整数 (一方が偶数でもう一方が奇数) の中間にある場合、<paramref name="mode" /> によって 2 つの数値のどちらが返されるかが決まります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-765">If <paramref name="value" /> is halfway between two integers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="218ac-766">例との他のオーバー ロードの包括的な使用状況について、`Round`メソッドを参照してください、<xref:System.Math.Round%2A>リファレンス ページです。</span><span class="sxs-lookup"><span data-stu-id="218ac-766">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="218ac-767">
            <paramref name="mode" /> が <see cref="T:System.MidpointRounding" /> の有効な値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-767">
              <paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="218ac-768">結果を浮動小数点数としての 10 進数の値を表すまたは場合によっては、浮動小数点値に対する算術演算を実行する精度が失われるのため、<see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" />メソッドが、中間の値を丸めるされない可能性があります、近い偶数の整数。</span>
            <span class="sxs-lookup">
              <span data-stu-id="218ac-768">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> method may not appear to round midpoint values to the nearest even integer.</span>
            </span>
            <span data-ttu-id="218ac-769">次の例では、浮動小数点値.1 は有限のバイナリ表現があるないため、最初の呼び出し、 <see cref="M:System.Math.Round(System.Double)" /> 11.5 の値を持つメソッドには、12 の代わりに 11 が返されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="218ac-769">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span>
            </span>
            <span data-ttu-id="218ac-770">[! コード csharp[System.Math.Round#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round5.cs#4)] [! コード vb[System.Math.Round#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round5.vb#4)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="218ac-770">[!code-csharp[System.Math.Round#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round5.cs#4)] [!code-vb[System.Math.Round#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round5.vb#4)]</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int * MidpointRounding -&gt; decimal" Usage="System.Math.Round (d, decimals, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="218ac-771">丸め対象の 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-771">A decimal number to be rounded.</span>
          </span>
        </param>
        <param name="decimals">
          <span data-ttu-id="218ac-772">戻り値の小数部の桁数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-772">The number of decimal places in the return value.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="218ac-773">
            <paramref name="d" /> が 2 つの数値の中間にある場合に丸める方法を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-773">Specification for how to round <paramref name="d" /> if it is midway between two other numbers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-774">10 進値を、指定した小数部の桁数に丸めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-774">Rounds a decimal value to a specified number of fractional digits.</span>
          </span>
          <span data-ttu-id="218ac-775">値が 2 つの数値の中間にある場合にその値を丸める方法をパラメーターで指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-775">A parameter specifies how to round the value if it is midway between two numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-776">
            <paramref name="d" /> に等しい小数部の桁数を格納する <paramref name="decimals" /> に最も近い数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-776">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span>
          </span>
          <span data-ttu-id="218ac-777">
            <paramref name="d" /> の小数部の桁数が <paramref name="decimals" /> よりも少ない場合、<paramref name="d" /> がそのまま返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-777">If <paramref name="d" /> has fewer fractional digits than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="218ac-778">例との他のオーバー ロードの包括的な使用状況について、`Round`メソッドを参照してください、<xref:System.Math.Round%2A>リファレンス ページです。</span><span class="sxs-lookup"><span data-stu-id="218ac-778">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="218ac-779">
            <paramref name="decimals" /> が 0 未満か、28 を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-779">
              <paramref name="decimals" /> is less than 0 or greater than 28.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="218ac-780">
            <paramref name="mode" /> が <see cref="T:System.MidpointRounding" /> の有効な値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-780">
              <paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="218ac-781">結果が <see cref="T:System.Decimal" /> の範囲外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-781">The result is outside the range of a <see cref="T:System.Decimal" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : double * int * MidpointRounding -&gt; double" Usage="System.Math.Round (value, digits, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="218ac-782">丸め対象の倍精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-782">A double-precision floating-point number to be rounded.</span>
          </span>
        </param>
        <param name="digits">
          <span data-ttu-id="218ac-783">戻り値の小数部の桁数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-783">The number of fractional digits in the return value.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="218ac-784">
            <paramref name="value" /> が 2 つの数値の中間にある場合に丸める方法を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-784">Specification for how to round <paramref name="value" /> if it is midway between two other numbers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-785">倍精度浮動小数点値を指定した小数部の桁数に丸めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-785">Rounds a double-precision floating-point value to a specified number of fractional digits.</span>
          </span>
          <span data-ttu-id="218ac-786">値が 2 つの数値の中間にある場合にその値を丸める方法をパラメーターで指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-786">A parameter specifies how to round the value if it is midway between two numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-787">
            <paramref name="digits" /> に等しい小数部の桁数を格納する <paramref name="value" /> に最も近い数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-787">The number nearest to <paramref name="value" /> that has a number of fractional digits equal to <paramref name="digits" />.</span>
          </span>
          <span data-ttu-id="218ac-788">
            <paramref name="value" /> の小数部の桁数が <paramref name="digits" /> よりも少ない場合、<paramref name="value" /> がそのまま返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-788">If <paramref name="value" /> has fewer fractional digits than <paramref name="digits" />, <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="218ac-789">例との他のオーバー ロードの包括的な使用状況について、`Round`メソッドを参照してください、<xref:System.Math.Round%2A>リファレンス ページです。</span><span class="sxs-lookup"><span data-stu-id="218ac-789">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="218ac-790">
            <paramref name="digits" /> が 0 より小さいか、15 を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-790">
              <paramref name="digits" /> is less than 0 or greater than 15.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="218ac-791">
            <paramref name="mode" /> が <see cref="T:System.MidpointRounding" /> の有効な値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-791">
              <paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="218ac-792">結果を浮動小数点数としての 10 進数の値を表すまたは場合によっては、浮動小数点値に対する算術演算を実行する精度が失われるのため、<see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" />メソッドが指定された中間値を丸めるされない可能性がありますによって、<paramref name="mode" />パラメーター。</span>
            <span class="sxs-lookup">
              <span data-stu-id="218ac-792">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> method may not appear to round midpoint values as specified by the <paramref name="mode" /> parameter.</span>
            </span>
            <span data-ttu-id="218ac-793">これは 2.135 が 2.14 ではなく 2.13 に丸められますの次の例に示します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="218ac-793">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span>
            </span>
            <span data-ttu-id="218ac-794">これは、メソッドを内部的に乗算するために発生<paramref name="value" />10<sup>桁</sup>、し、乗算操作は、ここでは精度の損失から低下します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="218ac-794">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span>
            </span>
            <span data-ttu-id="218ac-795">[! コード csharp[System.Math.Round#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round4.cs#3)] [! コード vb[System.Math.Round#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round4.vb#3)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="218ac-795">[!code-csharp[System.Math.Round#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round4.cs#3)] [!code-vb[System.Math.Round#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round4.vb#3)]</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="218ac-796">数の符号を示す整数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-796">Returns an integer that indicates the sign of a number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Sign : decimal -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="218ac-797">符号付きの 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-797">A signed decimal number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-798">10 進数の符号を示す整数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-798">Returns an integer that indicates the sign of a decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-799">
            <paramref name="value" /> の符号を示す数値 (次の表を参照)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-799">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="218ac-800">戻り値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-800">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-801">説明</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-801">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="218ac-802">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-802">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-803">
                  <paramref name="value" /> が 0 未満です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-803">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-804">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-804">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-805">
                  <paramref name="value" /> が 0 です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-805">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-806">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-806">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-807">
                  <paramref name="value" /> が 0 より大きい値です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-807">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-808">次の例では、使用する方法、<xref:System.Math.Sign%28System.Decimal%29>の符号を決定する方法、<xref:System.Decimal>値し、それをコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="218ac-808">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Decimal%29> method to determine the sign of a <xref:System.Decimal> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(double value);" />
      <MemberSignature Language="F#" Value="static member Sign : double -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="218ac-809">符号付き数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-809">A signed number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-810">倍精度浮動小数点数の符号を示す整数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-810">Returns an integer that indicates the sign of a double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-811">
            <paramref name="value" /> の符号を示す数値 (次の表を参照)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-811">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="218ac-812">戻り値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-812">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-813">説明</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-813">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="218ac-814">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-814">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-815">
                  <paramref name="value" /> が 0 未満です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-815">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-816">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-816">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-817">
                  <paramref name="value" /> が 0 です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-817">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-818">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-818">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-819">
                  <paramref name="value" /> が 0 より大きい値です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-819">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-820">次の例では、使用する方法、<xref:System.Math.Sign%28System.Double%29>の符号を決定する方法、<xref:System.Double>値し、それをコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="218ac-820">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Double%29> method to determine the sign of a <xref:System.Double> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException">
          <span data-ttu-id="218ac-821">
            <paramref name="value" /> と <see cref="F:System.Double.NaN" /> が等価です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-821">
              <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(short value);" />
      <MemberSignature Language="F#" Value="static member Sign : int16 -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="218ac-822">符号付き数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-822">A signed number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-823">16 ビット符号付き整数の符号を示す整数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-823">Returns an integer that indicates the sign of a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-824">
            <paramref name="value" /> の符号を示す数値 (次の表を参照)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-824">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="218ac-825">戻り値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-825">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-826">説明</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-826">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="218ac-827">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-827">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-828">
                  <paramref name="value" /> が 0 未満です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-828">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-829">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-829">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-830">
                  <paramref name="value" /> が 0 です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-830">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-831">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-831">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-832">
                  <paramref name="value" /> が 0 より大きい値です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-832">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-833">次の例では、使用する方法、<xref:System.Math.Sign%28System.Int16%29>の符号を決定する方法、<xref:System.Int16>値し、それをコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="218ac-833">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int16%29> method to determine the sign of an <xref:System.Int16> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(int value);" />
      <MemberSignature Language="F#" Value="static member Sign : int -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="218ac-834">符号付き数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-834">A signed number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-835">32 ビット符号付き整数の符号を示す整数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-835">Returns an integer that indicates the sign of a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-836">
            <paramref name="value" /> の符号を示す数値 (次の表を参照)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-836">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="218ac-837">戻り値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-837">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-838">説明</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-838">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="218ac-839">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-839">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-840">
                  <paramref name="value" /> が 0 未満です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-840">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-841">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-841">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-842">
                  <paramref name="value" /> が 0 です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-842">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-843">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-843">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-844">
                  <paramref name="value" /> が 0 より大きい値です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-844">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-845">次の例では、使用する方法、<xref:System.Math.Sign%28System.Int32%29>の符号を決定する方法、<xref:System.Int32>値し、それをコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="218ac-845">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int32%29> method to determine the sign of an <xref:System.Int32> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(long value);" />
      <MemberSignature Language="F#" Value="static member Sign : int64 -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="218ac-846">符号付き数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-846">A signed number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-847">64 ビット符号付き整数の符号を示す正数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-847">Returns an integer that indicates the sign of a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-848">
            <paramref name="value" /> の符号を示す数値 (次の表を参照)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-848">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="218ac-849">戻り値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-849">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-850">説明</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-850">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="218ac-851">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-851">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-852">
                  <paramref name="value" /> が 0 未満です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-852">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-853">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-853">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-854">
                  <paramref name="value" /> が 0 です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-854">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-855">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-855">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-856">
                  <paramref name="value" /> が 0 より大きい値です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-856">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-857">次の例では、使用する方法、<xref:System.Math.Sign%28System.Int64%29>の符号を決定する方法、<xref:System.Int64>値し、それをコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="218ac-857">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int64%29> method to determine the sign of an <xref:System.Int64> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member Sign : sbyte -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="218ac-858">符号付き数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-858">A signed number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-859">8 ビット符号付き整数の符号を示す整数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-859">Returns an integer that indicates the sign of an 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-860">
            <paramref name="value" /> の符号を示す数値 (次の表を参照)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-860">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="218ac-861">戻り値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-861">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-862">説明</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-862">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="218ac-863">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-863">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-864">
                  <paramref name="value" /> が 0 未満です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-864">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-865">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-865">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-866">
                  <paramref name="value" /> が 0 です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-866">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-867">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-867">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-868">
                  <paramref name="value" /> が 0 より大きい値です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-868">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-869">次の例では、使用する方法、<xref:System.Math.Sign%28System.SByte%29>の符号を決定する方法、<xref:System.SByte>値し、それをコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="218ac-869">The following example demonstrates how to use the <xref:System.Math.Sign%28System.SByte%29> method to determine the sign of an <xref:System.SByte> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(float value);" />
      <MemberSignature Language="F#" Value="static member Sign : single -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="218ac-870">符号付き数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-870">A signed number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-871">単精度浮動小数点数の符号を示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-871">Returns an integer that indicates the sign of a single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-872">
            <paramref name="value" /> の符号を示す数値 (次の表を参照)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-872">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="218ac-873">戻り値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-873">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-874">説明</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-874">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="218ac-875">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-875">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-876">
                  <paramref name="value" /> が 0 未満です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-876">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-877">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-877">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-878">
                  <paramref name="value" /> が 0 です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-878">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-879">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-879">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-880">
                  <paramref name="value" /> が 0 より大きい値です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-880">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-881">次の例では、使用する方法、<xref:System.Math.Sign%28System.Single%29>の符号を決定する方法、<xref:System.Single>値し、それをコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="218ac-881">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Single%29> method to determine the sign of a <xref:System.Single> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException">
          <span data-ttu-id="218ac-882">
            <paramref name="value" /> と <see cref="F:System.Single.NaN" /> が等価です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-882">
              <paramref name="value" /> is equal to <see cref="F:System.Single.NaN" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static double Sin (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sin(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sin (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sin(double a);" />
      <MemberSignature Language="F#" Value="static member Sin : double -&gt; double" Usage="System.Math.Sin a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="218ac-883">ラジアンで表した角度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-883">An angle, measured in radians.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-884">指定された角度のサインを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-884">Returns the sine of the specified angle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-885">
            <paramref name="a" /> のサイン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-885">The sine of <paramref name="a" />.</span>
          </span>
          <span data-ttu-id="218ac-886">
            <paramref name="a" /> が <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" />、<see cref="F:System.Double.PositiveInfinity" /> のいずれかに等しい場合、このメソッドは <see cref="F:System.Double.NaN" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-886">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-887">角度、 `a`、ラジアン単位である必要があります。</span><span class="sxs-lookup"><span data-stu-id="218ac-887">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="218ac-888">乗算 <xref:System.Math.PI?displayProperty=nameWithType> /180 度をラジアンに変換します。</span><span class="sxs-lookup"><span data-stu-id="218ac-888">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="218ac-889">許容値は`a`約-9223372036854775295 から約 9223372036854775295 の範囲。</span><span class="sxs-lookup"><span data-stu-id="218ac-889">Acceptable values of `a` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="218ac-890">この範囲外の値を<xref:System.Math.Sin%2A>メソッドを返します。`a`例外がスローされるのではなく変更されません。</span><span class="sxs-lookup"><span data-stu-id="218ac-890">For values outside of this range, the <xref:System.Math.Sin%2A> method returns `a` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-891">次の例では<xref:System.Math.Sin%2A>特定選択した角度の三角関数の id を評価します。</span><span class="sxs-lookup"><span data-stu-id="218ac-891">The following example uses <xref:System.Math.Sin%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sinh">
      <MemberSignature Language="C#" Value="public static double Sinh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sinh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sinh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sinh(double value);" />
      <MemberSignature Language="F#" Value="static member Sinh : double -&gt; double" Usage="System.Math.Sinh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="218ac-892">ラジアンで表した角度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-892">An angle, measured in radians.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-893">指定された角度のハイパーボリック サインを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-893">Returns the hyperbolic sine of the specified angle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-894">
            <paramref name="value" /> のハイパーボリック サイン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-894">The hyperbolic sine of <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="218ac-895">
            <paramref name="value" /> が <see cref="F:System.Double.NegativeInfinity" />、<see cref="F:System.Double.PositiveInfinity" />、または <see cref="F:System.Double.NaN" /> のいずれかに等しい場合、このメソッドは <paramref name="value" /> に等しい <see cref="T:System.Double" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-895">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NaN" />, this method returns a <see cref="T:System.Double" /> equal to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-896">角度、 `value`、ラジアン単位である必要があります。</span><span class="sxs-lookup"><span data-stu-id="218ac-896">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="218ac-897">乗算 <xref:System.Math.PI?displayProperty=nameWithType> /180 度をラジアンに変換します。</span><span class="sxs-lookup"><span data-stu-id="218ac-897">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-898">次の例では<xref:System.Math.Sinh%2A>の選択した値を評価します。</span><span class="sxs-lookup"><span data-stu-id="218ac-898">The following example uses <xref:System.Math.Sinh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sqrt">
      <MemberSignature Language="C#" Value="public static double Sqrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sqrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sqrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sqrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sqrt(double d);" />
      <MemberSignature Language="F#" Value="static member Sqrt : double -&gt; double" Usage="System.Math.Sqrt d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="218ac-899">平方根を求める対象の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-899">The number whose square root is to be found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-900">指定された数値の平方根を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-900">Returns the square root of a specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-901">次の表に示した値のいずれか</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-901">One of the values in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="218ac-902">
                  <paramref name="d" /> パラメーター</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-902">
                    <paramref name="d" /> parameter</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-903">戻り値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-903">Return value</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="218ac-904">0 または正</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-904">Zero or positive</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="218ac-905">
                  <paramref name="d" /> の正の平方根。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-905">The positive square root of <paramref name="d" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-906">負</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-906">Negative</span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-907">
                  <see cref="F:System.Double.NaN" /> と等しい</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-907">Equals <see cref="F:System.Double.NaN" /></span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="218ac-908">
                  <see cref="F:System.Double.PositiveInfinity" /> と等しい</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-908">Equals <see cref="F:System.Double.PositiveInfinity" /></span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.PositiveInfinity" />
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="218ac-909">正方形の領域の平方根は、任意の正方形の辺の長さを表します。</span><span class="sxs-lookup"><span data-stu-id="218ac-909">The square root of the area of a square represents the length of any side of the square.</span></span> <span data-ttu-id="218ac-910">次の例では、米国の州の都市の領域を表示し、四角形で表示された場合は、各都市のサイズのような印象を提供します。</span><span class="sxs-lookup"><span data-stu-id="218ac-910">The following example displays the area of some cities in the United States and gives an impression of each city's size if it were represented by a square.</span></span>  
  
 [!code-csharp[System.Math.Sqrt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.sqrt/cs/sqrt1.cs#1)]
 [!code-vb[System.Math.Sqrt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.sqrt/vb/sqrt1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static double Tan (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tan(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tan (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tan(double a);" />
      <MemberSignature Language="F#" Value="static member Tan : double -&gt; double" Usage="System.Math.Tan a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="218ac-911">ラジアンで表した角度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-911">An angle, measured in radians.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-912">指定された角度のタンジェントを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-912">Returns the tangent of the specified angle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-913">
            <paramref name="a" /> のタンジェント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-913">The tangent of <paramref name="a" />.</span>
          </span>
          <span data-ttu-id="218ac-914">
            <paramref name="a" /> が <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" />、<see cref="F:System.Double.PositiveInfinity" /> のいずれかに等しい場合、このメソッドは <see cref="F:System.Double.NaN" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-914">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-915">角度、 `a`、ラジアン単位である必要があります。</span><span class="sxs-lookup"><span data-stu-id="218ac-915">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="218ac-916">乗算 <xref:System.Math.PI?displayProperty=nameWithType> /180 度をラジアンに変換します。</span><span class="sxs-lookup"><span data-stu-id="218ac-916">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-917">次の例では、角度のタンジェントを計算し、コンソールに表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="218ac-917">The following example demonstrates how to calculate the tangent of an angle and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tanh">
      <MemberSignature Language="C#" Value="public static double Tanh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tanh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tanh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tanh(double value);" />
      <MemberSignature Language="F#" Value="static member Tanh : double -&gt; double" Usage="System.Math.Tanh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="218ac-918">ラジアンで表した角度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-918">An angle, measured in radians.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-919">指定された角度のハイパーボリック タンジェントを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-919">Returns the hyperbolic tangent of the specified angle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-920">
            <paramref name="value" /> のハイパーボリック タンジェント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-920">The hyperbolic tangent of <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="218ac-921">
            <paramref name="value" /> が <see cref="F:System.Double.NegativeInfinity" /> に等しい場合、このメソッドは -1 を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-921">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, this method returns -1.</span>
          </span>
          <span data-ttu-id="218ac-922">値が <see cref="F:System.Double.PositiveInfinity" /> に等しい場合、このメソッドは 1 を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-922">If value is equal to <see cref="F:System.Double.PositiveInfinity" />, this method returns 1.</span>
          </span>
          <span data-ttu-id="218ac-923">
            <paramref name="value" /> が <see cref="F:System.Double.NaN" /> に等しい場合、このメソッドは <see cref="F:System.Double.NaN" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-923">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, this method returns <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-924">角度、 `value`、ラジアン単位である必要があります。</span><span class="sxs-lookup"><span data-stu-id="218ac-924">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="218ac-925">乗算 <xref:System.Math.PI?displayProperty=nameWithType> /180 度をラジアンに変換します。</span><span class="sxs-lookup"><span data-stu-id="218ac-925">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-926">次の例では<xref:System.Math.Tanh%2A>を特定の双曲線正接 id の選択した値を評価します。</span><span class="sxs-lookup"><span data-stu-id="218ac-926">The following example uses <xref:System.Math.Tanh%2A> to evaluate certain hyperbolic tangent identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Tanh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Tanh/CPP/tanh.cpp#1)]
 [!code-csharp[System.Math.Tanh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Tanh/CS/tanh.cs#1)]
 [!code-vb[System.Math.Tanh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Tanh/VB/tanh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Truncate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="218ac-927">数値の整数部を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-927">Calculates the integral part of a number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-928">0 方向に最も近い整数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="218ac-928">The number is rounded to the nearest integer towards zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static decimal Truncate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Truncate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Truncate(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Truncate : decimal -&gt; decimal" Usage="System.Math.Truncate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="218ac-929">切り捨て対象の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-929">A number to truncate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-930">指定した 10 進数の整数部を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-930">Calculates the integral part of a specified decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-931">
            <paramref name="d" /> の整数部。つまり、小数部の桁を破棄した後に残る数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-931">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-932"><xref:System.Math.Truncate%2A> 丸めます`d`0 方向に最も近い整数にします。</span><span class="sxs-lookup"><span data-stu-id="218ac-932"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-933">次の例では、<xref:System.Math.Truncate%28System.Decimal%29>正と負の両方を短く<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="218ac-933">The following example calls the <xref:System.Math.Truncate%28System.Decimal%29> method to truncate both a positive and a negative <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#2)]
 [!code-vb[System.Math.Truncate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static double Truncate (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Truncate(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Truncate(double d);" />
      <MemberSignature Language="F#" Value="static member Truncate : double -&gt; double" Usage="System.Math.Truncate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="218ac-934">切り捨て対象の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-934">A number to truncate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="218ac-935">指定した倍精度浮動小数点数の整数部を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-935">Calculates the integral part of a specified double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="218ac-936">
            <paramref name="d" /> の整数部。つまり、小数部の桁を破棄した後に残る数値 (次の表にリストされている値のいずれか)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="218ac-936">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded, or one of the values listed in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <paramref name="d" />
              </term>
              <description>
                <span data-ttu-id="218ac-937">戻り値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="218ac-937">Return value</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <see cref="F:System.Double.NaN" />
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <see cref="F:System.Double.NegativeInfinity" />
              </term>
              <description>
                <see cref="F:System.Double.NegativeInfinity" />
              </description>
            </item>
            <item>
              <term>
                <see cref="F:System.Double.PositiveInfinity" />
              </term>
              <description>
                <see cref="F:System.Double.PositiveInfinity" />
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="218ac-938"><xref:System.Math.Truncate%2A> 丸めます`d`0 方向に最も近い整数にします。</span><span class="sxs-lookup"><span data-stu-id="218ac-938"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="218ac-939">次の例では、<xref:System.Math.Truncate%28System.Double%29>正と負の両方を短く<xref:System.Double>値。</span><span class="sxs-lookup"><span data-stu-id="218ac-939">The following example calls the <xref:System.Math.Truncate%28System.Double%29> method to truncate both a positive and a negative <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#1)]
 [!code-vb[System.Math.Truncate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>