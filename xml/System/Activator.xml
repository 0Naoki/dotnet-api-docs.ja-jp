<Type Name="Activator" FullName="System.Activator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc9f282d4e7f67372755f93d1902e96fbd34ab9d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37483474" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Activator : System.Runtime.InteropServices._Activator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Activator extends System.Object implements class System.Runtime.InteropServices._Activator" />
  <TypeSignature Language="DocId" Value="T:System.Activator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Activator&#xA;Implements _Activator" />
  <TypeSignature Language="C++ CLI" Value="public ref class Activator sealed : System::Runtime::InteropServices::_Activator" />
  <TypeSignature Language="F#" Value="type Activator = class&#xA;    interface _Activator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Activator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Activator))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1882f-101">オブジェクトの型をローカル サイトまたはリモート サイトに作成するメソッド、または既存のリモート オブジェクトへの参照を取得するメソッドを保持します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1882f-101">Contains methods to create types of objects locally or remotely, or obtain references to existing remote objects.</span>
      </span>
      <span data-ttu-id="1882f-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1882f-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-103"><xref:System.Activator.CreateInstance%2A>メソッドは、指定された引数の最もよく一致するコンス トラクターを呼び出すことによって、アセンブリで定義されている型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="1882f-103">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type defined in an assembly by invoking the constructor that best matches the specified arguments.</span></span> <span data-ttu-id="1882f-104">引数が指定されていない場合、既定コンス トラクターは、パラメーターを受け取らないコンス トラクターが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1882f-104">If no arguments are specified, the constructor that takes no parameters, that is, the default constructor, is invoked.</span></span>  
  
 <span data-ttu-id="1882f-105">検索し、コンス トラクターを呼び出すための十分な権限が必要それ以外の場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1882f-105">You must have sufficient permission to search for and call a constructor; otherwise, an exception is thrown.</span></span> <span data-ttu-id="1882f-106">既定では、コンス トラクターの検索中に、パブリック コンス トラクターのみと見なされます。</span><span class="sxs-lookup"><span data-stu-id="1882f-106">By default, only public constructors are considered during the search for a constructor.</span></span> <span data-ttu-id="1882f-107">コンス トラクターまたは既定のコンス トラクターが見つからない場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1882f-107">If no constructor or default constructor can be found, an exception is thrown.</span></span>  
  
 <span data-ttu-id="1882f-108">バインダーのパラメーターには、適切なコンス トラクターのアセンブリを検索するオブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="1882f-108">A binder parameter specifies an object that searches an assembly for a suitable constructor.</span></span> <span data-ttu-id="1882f-109">バインダーと検索条件を指定できます。</span><span class="sxs-lookup"><span data-stu-id="1882f-109">You can specify your own binder and search criteria.</span></span> <span data-ttu-id="1882f-110">バインダーが指定されていない場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="1882f-110">If no binder is specified, a default binder is used.</span></span> <span data-ttu-id="1882f-111">詳細については、<xref:System.Reflection.Binder?displayProperty=nameWithType> クラスおよび <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="1882f-111">For more information, see the <xref:System.Reflection.Binder?displayProperty=nameWithType> and <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> classes.</span></span>  
  
 <span data-ttu-id="1882f-112">証拠パラメーターは、セキュリティ ポリシーと、コンス トラクターのアクセス許可に影響します。</span><span class="sxs-lookup"><span data-stu-id="1882f-112">An evidence parameter affects the security policy and permissions for the constructor.</span></span> <span data-ttu-id="1882f-113">詳細については、<xref:System.Security.Policy.Evidence?displayProperty=nameWithType> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="1882f-113">For more information, see the <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="1882f-114">ローカルまたはリモート サイトでは、型のインスタンスを作成できます。</span><span class="sxs-lookup"><span data-stu-id="1882f-114">An instance of a type can be created at a local or remote site.</span></span> <span data-ttu-id="1882f-115">型がリモートで作成すると、アクティベーション属性パラメーターは、リモート サイトの URI を指定します。</span><span class="sxs-lookup"><span data-stu-id="1882f-115">If the type is created remotely, an activation attribute parameter specifies the URI of the remote site.</span></span> <span data-ttu-id="1882f-116">インスタンスを作成する呼び出しは、リモート サイトに到達する前に、中間サイトを通過可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-116">The call to create the instance might pass through intermediary sites before it reaches the remote site.</span></span> <span data-ttu-id="1882f-117">その他のアクティベーション属性には、環境、またはリモートの中間サイトでの呼び出しが動作するコンテキストを変更できます。</span><span class="sxs-lookup"><span data-stu-id="1882f-117">Other activation attributes can modify the environment, or context, in which the call operates at the remote and intermediary sites.</span></span>  
  
 <span data-ttu-id="1882f-118">インスタンスがローカルに作成される場合は、そのオブジェクトへの参照が返されます。</span><span class="sxs-lookup"><span data-stu-id="1882f-118">If the instance is created locally, a reference to that object is returned.</span></span> <span data-ttu-id="1882f-119">インスタンスがリモートで作成された場合、プロキシへの参照が返されます。</span><span class="sxs-lookup"><span data-stu-id="1882f-119">If the instance is created remotely, a reference to a proxy is returned.</span></span> <span data-ttu-id="1882f-120">リモート オブジェクトは、ローカル オブジェクトの場合と同様に、プロキシを介して操作されます。</span><span class="sxs-lookup"><span data-stu-id="1882f-120">The remote object is manipulated through the proxy as if it were a local object.</span></span>  
  
 <span data-ttu-id="1882f-121"><xref:System.Activator.GetObject%2A>メソッドは、現在実行しているリモート オブジェクト、よく知られているオブジェクトのサーバー側でアクティブまたは XML Web サービス プロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="1882f-121">The <xref:System.Activator.GetObject%2A> method creates a proxy to a currently running remote object, server-activated well-known object, or XML Web service.</span></span> <span data-ttu-id="1882f-122">接続メディア、チャネルを指定することができます。</span><span class="sxs-lookup"><span data-stu-id="1882f-122">You can specify the connection medium, that is, the channel.</span></span> <span data-ttu-id="1882f-123">詳細については、<xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="1882f-123">For more information, see the <xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="1882f-124">アセンブリには、型定義が含まれます。</span><span class="sxs-lookup"><span data-stu-id="1882f-124">Assemblies contain type definitions.</span></span> <span data-ttu-id="1882f-125"><xref:System.Activator.CreateInstance%2A>メソッドは、現在実行中のアセンブリから型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="1882f-125">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type from a currently running assembly.</span></span> <span data-ttu-id="1882f-126"><xref:System.Activator.CreateInstanceFrom%2A>メソッドは、アセンブリを含むファイルからインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="1882f-126">The <xref:System.Activator.CreateInstanceFrom%2A> method creates an instance from a file that contains an assembly.</span></span> <span data-ttu-id="1882f-127"><xref:System.Activator.CreateComInstanceFrom%2A>メソッドは、アセンブリを含むファイルから COM オブジェクトのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="1882f-127">The <xref:System.Activator.CreateComInstanceFrom%2A> method creates an instance of a COM object from a file that contains an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1882f-128">次の例は、使用する方法を示します、<xref:System.Activator>クラスを動的に実行時にオブジェクトを構築します。</span><span class="sxs-lookup"><span data-stu-id="1882f-128">The following example shows how to use the <xref:System.Activator> class to dynamically construct objects at run time.</span></span>  
  
 [!code-cpp[ActivatorX#1](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#1)]
 [!code-csharp[ActivatorX#1](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#1)]
 [!code-vb[ActivatorX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateComInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1882f-129">名前を指定した COM オブジェクトのインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-129">Creates an instance of the COM object whose name is specified.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateComInstanceFrom : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateComInstanceFrom (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="1882f-130">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-130">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1882f-131">推奨される型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-131">The name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-132">名前を指定したアセンブリ ファイルと、既定のコンストラクターを使用して、名前を指定した COM オブジェクトのインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-132">Creates an instance of the COM object whose name is specified, using the named assembly file and the default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-133">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-133">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-134">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-134">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="1882f-135">A<xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>属性の値`true`COM 型を明示的にまたは既定で適用する必要がありますので、<xref:System.Activator.CreateComInstanceFrom%2A>メソッドは、その型のインスタンスを作成できます。 そうしないと、<xref:System.TypeLoadException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1882f-135">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="1882f-136">その他の呼び出されたメソッドによってスローされる例外については、例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-136">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1882f-137">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、呼び出し元が許可されている場合は、非パブリックな型を作成するこのメソッドを使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型を含むアセンブリの許可セットは、呼び出し元の許可に制限されているかどうか設定またはそのサブセットにします。</span><span class="sxs-lookup"><span data-stu-id="1882f-137">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1882f-138">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="1882f-138">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1882f-139">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-139">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-140">
            <paramref name="typeName" /> または <paramref name="assemblyName" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-140">
              <paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-141">COM を使用してインスタンスを作成できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-141">An instance cannot be created through COM.</span>
          </span>
          <span data-ttu-id="1882f-142">または、<paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-142">-or-  <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-143">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-143">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1882f-144">
            <paramref name="assemblyName" /> が見つからないか、読み込もうとしているモジュールにファイル名拡張子が指定されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-144">
              <paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-145">抽象クラスのインスタンスを作成できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-145">Cannot create an instance of an abstract class.</span>
          </span>
          <span data-ttu-id="1882f-146">または、このメンバーは、遅延バインディング メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-146">-or-  This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1882f-147">呼び出し元は、<see cref="T:System.MarshalByRefObject" /> を継承しないオブジェクトのアクティベーション属性を提供できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-147">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1882f-148">
            <paramref name="assemblyName" /> が空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-148">
              <paramref name="assemblyName" /> is the empty string ("").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-149">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-149">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1882f-150">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-150">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="F#" Value="static member CreateComInstanceFrom : string * string * byte[] * System.Configuration.Assemblies.AssemblyHashAlgorithm -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateComInstanceFrom (assemblyName, typeName, hashValue, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="1882f-151">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-151">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1882f-152">推奨される型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-152">The name of the preferred type.</span>
          </span>
        </param>
        <param name="hashValue">
          <span data-ttu-id="1882f-153">計算されたハッシュ コードの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-153">The value of the computed hash code.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="1882f-154">ファイルのハッシュ処理および厳密な名前の生成に使用されるハッシュ アルゴリズム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-154">The hash algorithm used for hashing files and generating the strong name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-155">名前を指定したアセンブリ ファイルと、既定のコンストラクターを使用して、名前を指定した COM オブジェクトのインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-155">Creates an instance of the COM object whose name is specified, using the named assembly file and the default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-156">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-156">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-157">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-157">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="1882f-158">A<xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>属性の値`true`COM 型を明示的にまたは既定で適用する必要がありますので、<xref:System.Activator.CreateComInstanceFrom%2A>メソッドは、その型のインスタンスを作成できます。 そうしないと、<xref:System.TypeLoadException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1882f-158">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="1882f-159">その他の呼び出されたメソッドによってスローされる例外については、例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-159">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1882f-160">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、呼び出し元が許可されている場合は、非パブリックな型を作成するこのメソッドを使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型を含むアセンブリの許可セットは、呼び出し元の許可に制限されているかどうか設定またはそのサブセットにします。</span><span class="sxs-lookup"><span data-stu-id="1882f-160">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1882f-161">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="1882f-161">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1882f-162">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-162">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-163">
            <paramref name="typeName" /> または <paramref name="assemblyName" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-163">
              <paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1882f-164">
            <paramref name="assemblyName" /> が空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-164">
              <paramref name="assemblyName" /> is the empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="1882f-165">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-165">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="1882f-166">または、<paramref name="assemblyName" /> がシステム定義の最大長を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-166">-or-  <paramref name="assemblyName" /> is longer than the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1882f-167">
            <paramref name="assemblyName" /> が見つからないか、読み込もうとしているモジュールにファイル名拡張子が指定されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-167">
              <paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1882f-168">
            <paramref name="assemblyName" /> が見つかりましたが、読み込めません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-168">
              <paramref name="assemblyName" /> is found but cannot be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1882f-169">
            <paramref name="assemblyName" /> は有効なアセンブリ名ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-169">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1882f-170">"file://" で始まっていないコードベースが、必須の <see langword="WebPermission" /> なしで指定されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-170">A code base that does not start with "file://" was specified without the required <see langword="WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-171">COM を使用してインスタンスを作成できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-171">An instance cannot be created through COM.</span>
          </span>
          <span data-ttu-id="1882f-172">または、<paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-172">-or-  <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-173">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-173">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-174">抽象クラスのインスタンスを作成できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-174">An instance of an abstract class cannot be created.</span>
          </span>
          <span data-ttu-id="1882f-175">または、このメンバーは、遅延バインディング メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-175">-or-  This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1882f-176">呼び出し元は、<see cref="T:System.MarshalByRefObject" /> を継承しないオブジェクトのアクティベーション属性を提供できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-176">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-177">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-177">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1882f-178">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-178">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="1882f-179">file:// で始まる URI を読み取る。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-179">for reading a URI that begins with "file://".</span>
          </span>
          <span data-ttu-id="1882f-180">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-180">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="1882f-181">file:// で始まらないする URI を読み取る。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-181">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1882f-182">指定したパラメーターに最も一致するコンストラクターを使用して、指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-182">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : ActivationContext -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance activationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
      </Parameters>
      <Docs>
        <param name="activationContext">
          <span data-ttu-id="1882f-183">作成するオブジェクトを指定するアクティベーション コンテキスト オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-183">An activation context object that specifies the object to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-184">指定した <see cref="T:System.ActivationContext" /> オブジェクトによって決定される型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-184">Creates an instance of the type designated by the specified <see cref="T:System.ActivationContext" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-185">新しく作成されたオブジェクトにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-185">A handle that must be unwrapped to access the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-186">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-186">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="1882f-187">ドメイン ポリシーを設定して、アプリケーション ベースのセキュリティ モデルを提供するマニフェストに基づくアクティベーション中にアクティブ化コンテキストが使用されます。</span><span class="sxs-lookup"><span data-stu-id="1882f-187">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="1882f-188"><xref:System.ActivationContext>クラスが含まれています、<xref:System.ApplicationIdentity>アプリケーション マニフェストへのアクセスを提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1882f-188">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="1882f-189">詳細については、<xref:System.Security.Policy.ApplicationSecurityManager> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="1882f-189">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type -&gt; obj" Usage="System.Activator.CreateInstance type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1882f-190">作成するオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-190">The type of object to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-191">指定された型の既定のコンストラクターを使用して、指定された型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-191">Creates an instance of the specified type using that type's default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-192">新しく作成されたオブジェクトへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-192">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-193">呼び出されるコンス トラクターは、アクセス可能である必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-193">The constructor to be invoked must be accessible.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1882f-194">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が許可されている非パブリックな型へのアクセスに使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型を含むアセンブリの許可セットは、呼び出し元の許可に制限されているかどうか設定またはそのサブセットにします。</span><span class="sxs-lookup"><span data-stu-id="1882f-194">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1882f-195">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="1882f-195">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1882f-196">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-196">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1882f-197">次のコード例を呼び出す方法を示します、<xref:System.Activator.CreateInstance%28System.Type%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-197">The following code example demonstrates how to call the <xref:System.Activator.CreateInstance%28System.Type%29> method.</span></span> <span data-ttu-id="1882f-198">さまざまな種類のインスタンスが作成され、その既定値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="1882f-198">Instances of several different types are created and their default values are displayed.</span></span>  
  
 [!code-cpp[ActivatorX#4](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/source2.cpp#4)]
 [!code-csharp[ActivatorX#4](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/source2.cs#4)]
 [!code-vb[ActivatorX#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/source2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-199">
            <paramref name="type" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-199">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1882f-200">
            <paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-200">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="1882f-201">または、<paramref name="type" /> がオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-201">-or-  <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1882f-202">
            <paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-202">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="1882f-203">または、<see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-203">-or-  Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1882f-204">または、<paramref name="type" /> を含むアセンブリは、<see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> で作成された動的アセンブリです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-204">-or-  The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1882f-205">呼び出されるコンストラクターは例外をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-205">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1882f-206">
            <block subset="none" type="note">
              <para> [Windows ストア アプリ用 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) または [ポータブル クラス ライブラリ](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) では、基本クラスの例外である <see cref="T:System.MemberAccessException" /> を代わりにキャッチします。</para>
            </block>  呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-206">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.  </para>
              </block>  The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-207">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-207">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1882f-208">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-208">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-209">
            <block subset="none" type="note">
              <para> [Windows ストア アプリ用 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) または [ポータブル クラス ライブラリ](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) では、基本クラスの例外である <see cref="T:System.MissingMemberException" /> を代わりにキャッチします。</para>
            </block>  一致するパブリック コンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-209">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.  </para>
              </block>  No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="1882f-210">
            <paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-210">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-211">
            <paramref name="type" /> は有効な型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-211">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1882f-212">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-212">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1882f-213">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-213">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-214">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-214">for accessing nonpublic types regardless of their grant sets.</span>
          </span>
          <span data-ttu-id="1882f-215">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-215">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext, string[] activationCustomData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext, cli::array &lt;System::String ^&gt; ^ activationCustomData);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : ActivationContext * string[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (activationContext, activationCustomData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
        <Parameter Name="activationCustomData" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="activationContext">
          <span data-ttu-id="1882f-216">作成するオブジェクトを指定するアクティベーション コンテキスト オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-216">An activation context object that specifies the object to create.</span>
          </span>
        </param>
        <param name="activationCustomData">
          <span data-ttu-id="1882f-217">カスタム アクティベーション データを格納する Unicode 文字列の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-217">An array of Unicode strings that contain custom activation data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-218">指定した <see cref="T:System.ActivationContext" /> オブジェクトによって決定され、指定したカスタム アクティベーション データによってアクティブにされる型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-218">Creates an instance of the type that is designated by the specified <see cref="T:System.ActivationContext" /> object and activated with the specified custom activation data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-219">新しく作成されたオブジェクトにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-219">A handle that must be unwrapped to access the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-220">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-220">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="1882f-221">ドメイン ポリシーを設定して、アプリケーション ベースのセキュリティ モデルを提供するマニフェストに基づくアクティベーション中にアクティブ化コンテキストが使用されます。</span><span class="sxs-lookup"><span data-stu-id="1882f-221">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="1882f-222"><xref:System.ActivationContext>クラスが含まれています、<xref:System.ApplicationIdentity>アプリケーション マニフェストへのアクセスを提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1882f-222">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="1882f-223">詳細については、<xref:System.Security.Policy.ApplicationSecurityManager> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="1882f-223">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="1882f-224">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-224">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="1882f-225">
            <c>assemblyName</c> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-225">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1882f-226">必要な型の完全修飾名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-226">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-227">名前を指定したアセンブリと、既定のコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-227">Creates an instance of the type whose name is specified, using the named assembly and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-228">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-228">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-229">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="1882f-229">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
 <span data-ttu-id="1882f-230">`assemblyName` 次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="1882f-230">`assemblyName` can be either of the following:</span></span>  
  
-   <span data-ttu-id="1882f-231">アセンブリでは、パスまたはファイル拡張子なしの簡易名。</span><span class="sxs-lookup"><span data-stu-id="1882f-231">The simple name of an assembly, without its path or file extension.</span></span> <span data-ttu-id="1882f-232">たとえばは指定`TypeExtensions`のパスと名前は.\bin\TypeExtensions.dll アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="1882f-232">For example, you would specify `TypeExtensions` for an assembly whose path and name are .\bin\TypeExtensions.dll.</span></span>  
  
-   <span data-ttu-id="1882f-233">簡易名、バージョン、カルチャ、およびパブリック キー トークンで構成される署名されたアセンブリの完全名たとえば、"TypeExtensions、バージョン 1.0.0.0、カルチャを = = neutral, PublicKeyToken = 181869f2f7435b51"。</span><span class="sxs-lookup"><span data-stu-id="1882f-233">The full name of a signed assembly, which consists of its simple name, version, culture, and public key token; for example, "TypeExtensions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=181869f2f7435b51".</span></span>  
  
 <span data-ttu-id="1882f-234">共通言語ランタイムの識別し、アセンブリの読み込みの詳細については、次を参照してください。[ランタイムがアセンブリを検索する方法](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md)します。</span><span class="sxs-lookup"><span data-stu-id="1882f-234">For more information on how the common language runtime identifies and loads assemblies, see [How the Runtime Locates Assemblies](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span></span> <span data-ttu-id="1882f-235">アプリケーション構成ファイルを使用して、アセンブリの場所を定義する方法の詳細については、次を参照してください。[アセンブリの場所を指定する](~/docs/framework/configure-apps/specify-assembly-location.md)します。</span><span class="sxs-lookup"><span data-stu-id="1882f-235">For information on using the application configuration file to define assembly locations, see [Specifying an Assembly's Location](~/docs/framework/configure-apps/specify-assembly-location.md).</span></span> <span data-ttu-id="1882f-236">場合`assemblyName`が見つかると、既定のコンテキストに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="1882f-236">If `assemblyName` is found, it is loaded in the default context.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1882f-237">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、呼び出し元が許可されている場合は、非パブリックな型を作成するこのメソッドを使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型を含むアセンブリの許可セットは、呼び出し元の許可に制限されているかどうか設定またはそのサブセットにします。</span><span class="sxs-lookup"><span data-stu-id="1882f-237">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1882f-238">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="1882f-238">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1882f-239">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-239">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1882f-240">次の例は、という名前のクラスを定義します。`Person`という名前のアセンブリで`PersonInfo`します。</span><span class="sxs-lookup"><span data-stu-id="1882f-240">The following example defines a class named `Person` in an assembly named `PersonInfo`.</span></span> <span data-ttu-id="1882f-241">なお、`Person`クラスにはパラメーターなしのうちの 1 つは、2 つのコンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="1882f-241">Note that the `Person` class has two constructors, one of which is parameterless.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/personinfo.cs#1)]
 [!code-vb[System.Activator.CreateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/personinfo.vb#1)]  
  
 <span data-ttu-id="1882f-242">次の例では、<xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29>をインスタンス化するメソッド、`Person`クラス。</span><span class="sxs-lookup"><span data-stu-id="1882f-242">The following example calls the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method to instantiate the `Person` class.</span></span> <span data-ttu-id="1882f-243">プロジェクトに追加する PersonInfo.dll への参照が必要です。</span><span class="sxs-lookup"><span data-stu-id="1882f-243">It requires a reference to PersonInfo.dll to be added to the project.</span></span> <span data-ttu-id="1882f-244"><xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29>メソッドの呼び出し、`Person`クラスの既定のコンス トラクターに値を割り当てます例では、その`Name`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="1882f-244">Because the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method calls the `Person` class default constructor,  the example assigns a value to its `Name` property.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1.cs#2)]
 [!code-vb[System.Activator.CreateInstance#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1.vb#2)]  
  
 <span data-ttu-id="1882f-245">ただし、<xref:System.Activator.CreateInstance%2A>はマシン境界を越えているかをデザイン時に不明な型をインスタンス化に頻繁に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1882f-245">However, <xref:System.Activator.CreateInstance%2A> is frequently called to instantiate a type that crosses machine boundaries or that is not known at design time.</span></span> <span data-ttu-id="1882f-246">この場合、プロジェクトのアセンブリへの参照を含めることはできませんし、型のメンバーへの事前バインディングされた呼び出しを行うことはできません。</span><span class="sxs-lookup"><span data-stu-id="1882f-246">In this case, you cannot include a reference to the assembly in the project and cannot make early-bound calls to the type's members.</span></span> <span data-ttu-id="1882f-247">この制限を回避するには、次の例を使用して、<xref:System.Activator.CreateInstance%2A>メソッドに値を代入するためにリフレクションと、`Person`オブジェクトの`Name`プロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="1882f-247">To work around this limitation, the following example uses the <xref:System.Activator.CreateInstance%2A> method along with reflection to assign a value to the `Person` object's `Name` property and to display its value.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1a.cs#3)]
 [!code-vb[System.Activator.CreateInstance#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1a.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-248">
            <paramref name="typeName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-248">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-249">一致するパブリック コンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-249">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-250">
            <paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-250">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1882f-251">
            <paramref name="assemblyName" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-251">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1882f-252">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-252">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-253">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-253">You cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1882f-254">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-254">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1882f-255">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-255">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1882f-256">
            <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-256">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1882f-257">
            <paramref name="assemblyName" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-257">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1882f-258">または、共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-258">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1882f-259">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-259">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1882f-260">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-260">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="1882f-261">または、アセンブリ名かコード ベースが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-261">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1882f-262">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-262">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1882f-263">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-263">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-264">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-264">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1882f-265">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-265">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, bool nonPublic);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * bool -&gt; obj" Usage="System.Activator.CreateInstance (type, nonPublic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1882f-266">作成するオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-266">The type of object to create.</span>
          </span>
        </param>
        <param name="nonPublic">
          <span data-ttu-id="1882f-267">パブリックまたはパブリックでない既定コンストラクターを一致させる場合は <see langword="true" />。パブリックの既定コンストラクターだけを一致させる場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-267">
              <see langword="true" /> if a public or nonpublic default constructor can match; <see langword="false" /> if only a public default constructor can match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-268">指定された型の既定のコンストラクターを使用して、指定された型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-268">Creates an instance of the specified type using that type's default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-269">新しく作成されたオブジェクトへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-269">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1882f-270">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が許可されている場合、非パブリックな型とメンバーのアクセスに使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型とメンバーを含むアセンブリの許可セットが制限されているかどうか呼び出し元の設定またはそのサブセットを付与します。</span><span class="sxs-lookup"><span data-stu-id="1882f-270">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1882f-271">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="1882f-271">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1882f-272">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-272">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-273">
            <paramref name="type" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-273">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1882f-274">
            <paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-274">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="1882f-275">または、<paramref name="type" /> がオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-275">-or-  <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1882f-276">
            <paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-276">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="1882f-277">または、<see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-277">-or-  Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1882f-278">または、<paramref name="type" /> を含むアセンブリは、<see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> で作成された動的アセンブリです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-278">-or-  The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1882f-279">呼び出されるコンストラクターは例外をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-279">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1882f-280">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-280">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-281">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-281">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1882f-282">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-282">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-283">一致するパブリック コンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-283">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="1882f-284">
            <paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-284">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-285">
            <paramref name="type" /> は有効な型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-285">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1882f-286">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-286">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1882f-287">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-287">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-288">非パブリックな型およびそのアクセス許可セットに関係なくのメンバーにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-288">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1882f-289">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-289">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1882f-290">作成するオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-290">The type of object to create.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1882f-291">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-291">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1882f-292">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-292">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-293">指定したパラメーターに最も一致するコンストラクターを使用して、指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-293">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-294">新しく作成されたオブジェクトへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-294">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-295">呼び出されるコンス トラクターは、アクセス可能である必要があり、指定した引数リストを最も具体的な一致を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-295">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1882f-296">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が許可されている非パブリックな型へのアクセスに使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型を含むアセンブリの許可セットは、呼び出し元の許可に制限されているかどうか設定またはそのサブセットにします。</span><span class="sxs-lookup"><span data-stu-id="1882f-296">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1882f-297">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="1882f-297">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1882f-298">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-298">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1882f-299">次の例では、<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29>を作成する方法、<xref:System.String>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1882f-299">The following example calls the  <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to create a <xref:System.String> object.</span></span> <span data-ttu-id="1882f-300">呼び出す、 <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> 14 番目の位置から文字配列から 10 個の要素を含む文字列のインスタンスを作成するコンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="1882f-300">It calls the <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor to instantiate a string that contains ten elements from a character array starting at the fourteenth position.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/CreateInstance5.cs#5)]
 [!code-vb[System.Activator.CreateInstance#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/CreateInstance5.vb#5)]  
  
 <span data-ttu-id="1882f-301">次の例に渡される引数を要素として持つジャグ配列を作成、<xref:System.String>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="1882f-301">The following example creates a jagged array whose elements are arguments to be passed to a <xref:System.String> constructor.</span></span> <span data-ttu-id="1882f-302">各配列を渡します、<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29>に適切な文字列コンス トラクターを呼び出すメソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-302">The example then passes each array to the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to invoke the appropriate string constructor.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstance2.cs#4)]
 [!code-vb[System.Activator.CreateInstance#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstance2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-303">
            <paramref name="type" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-303">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1882f-304">
            <paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-304">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="1882f-305">または、<paramref name="type" /> がオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-305">-or-  <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1882f-306">
            <paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-306">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="1882f-307">または、<see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-307">-or-  Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1882f-308">または、<paramref name="type" /> を含むアセンブリは、<see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> で作成された動的アセンブリです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-308">-or-  The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
          <span data-ttu-id="1882f-309">または、<paramref name="args" /> と最も一致するコンストラクターに <see langword="varargs" /> 引数があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-309">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1882f-310">呼び出されるコンストラクターは例外をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-310">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1882f-311">
            <block subset="none" type="note">
              <para> [Windows ストア アプリ用 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) または [ポータブル クラス ライブラリ](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) では、基本クラスの例外である <see cref="T:System.MemberAccessException" /> を代わりにキャッチします。</para>
            </block>  呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-311">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.  </para>
              </block>  The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-312">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-312">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1882f-313">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-313">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-314">
            <block subset="none" type="note">
              <para> [Windows ストア アプリ用 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) または [ポータブル クラス ライブラリ](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) では、基本クラスの例外である <see cref="T:System.MissingMemberException" /> を代わりにキャッチします。</para>
            </block>  一致するパブリック コンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-314">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.  </para>
              </block>  No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="1882f-315">
            <paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-315">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-316">
            <paramref name="type" /> は有効な型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-316">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1882f-317">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-317">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1882f-318">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-318">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-319">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-319">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1882f-320">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-320">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (domain As AppDomain, assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="1882f-321">
            <c>typeName</c> という名前の型が作成されるリモート ドメイン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-321">The remote domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyName">
          <span data-ttu-id="1882f-322">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-322">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="1882f-323">
            <c>assemblyName</c> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-323">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1882f-324">必要な型の完全修飾名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-324">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-325">名前を指定したアセンブリと既定のコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-325">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-326">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-326">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-327">使用<xref:System.Activator.CreateInstance%2A>ホストがセキュリティのアクセス許可が制限されているアプリケーション ドメインでコードを実行する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="1882f-327">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="1882f-328">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="1882f-328">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1882f-329">このメソッドを使用して<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>に完全な信頼の直前の呼び出し元が必要です。</span><span class="sxs-lookup"><span data-stu-id="1882f-329">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-330">
            <paramref name="typeName" /> または <paramref name="domain" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-330">
              <paramref name="typeName" /> or <paramref name="domain" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-331">一致するパブリック コンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-331">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-332">
            <paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-332">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1882f-333">
            <paramref name="assemblyName" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-333">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1882f-334">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-334">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-335">抽象型のインスタンスは作成できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-335">Cannot create an instance of an abstract type.</span>
          </span>
          <span data-ttu-id="1882f-336">または、このメンバーは、遅延バインディング メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-336">-or-  This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1882f-337">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-337">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1882f-338">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-338">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1882f-339">
            <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-339">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1882f-340">
            <paramref name="assemblyName" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-340">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1882f-341">または、共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-341">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1882f-342">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-342">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1882f-343">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-343">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="1882f-344">または、アセンブリ名かコード ベースが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-344">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1882f-345">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-345">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1882f-346">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-346">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-347">すべての型のメンバーに対して操作を呼び出す権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-347">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="1882f-348">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-348">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1882f-349">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-349">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1882f-350">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-350">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="1882f-351">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-351">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="1882f-352">
            <c>assemblyName</c> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-352">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1882f-353">必要な型の完全修飾名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-353">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1882f-354">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-354">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1882f-355">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-355">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1882f-356">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-356">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1882f-357">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-357">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1882f-358">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-358">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-359">名前を指定したアセンブリと、既定のコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-359">Creates an instance of the type whose name is specified, using the named assembly and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-360">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-360">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-361">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="1882f-361">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1882f-362">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、呼び出し元が許可されている場合は、非パブリックな型を作成するこのメソッドを使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型の許可セット、呼び出し元の許可セット、またはそのサブセットに制限されます。</span><span class="sxs-lookup"><span data-stu-id="1882f-362">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1882f-363">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="1882f-363">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1882f-364">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-364">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-365">
            <paramref name="typeName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-365">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-366">一致するパブリック コンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-366">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-367">
            <paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-367">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1882f-368">
            <paramref name="assemblyName" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-368">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1882f-369">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-369">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-370">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-370">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1882f-371">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-371">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1882f-372">
            <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-372">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1882f-373">または、<paramref name="activationAttributes" /> が空の配列ではなく、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-373">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="1882f-374">または、<paramref name="activationAttributes" /> が <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> の配列ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-374">-or-  <paramref name="activationAttributes" /> is not a <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />  array.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1882f-375">
            <paramref name="assemblyName" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-375">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1882f-376">または、共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-376">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1882f-377">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-377">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1882f-378">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-378">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="1882f-379">または、アセンブリ名かコード ベースが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-379">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1882f-380">
            <paramref name="activationAttributes" /> で指定されたターゲットでリモート アクティベーションを試行したときにエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-380">An error occurred when attempting remote activation in a target specified in <paramref name="activationAttributes" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1882f-381">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-381">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1882f-382">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-382">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-383">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-383">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1882f-384">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-384">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, object[] args, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj[] * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, args, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1882f-385">作成するオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-385">The type of object to create.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1882f-386">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-386">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1882f-387">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-387">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1882f-388">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-388">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1882f-389">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-389">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1882f-390">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-390">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1882f-391">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-391">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1882f-392">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-392">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-393">指定したパラメーターに最も一致するコンストラクターを使用して、指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-393">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-394">新しく作成されたオブジェクトへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-394">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-395">呼び出されるコンス トラクターは、アクセス可能である必要があり、指定した引数リストを最も具体的な一致を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-395">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1882f-396">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が許可されている非パブリックな型へのアクセスに使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型を含むアセンブリの許可セットは、呼び出し元の許可に制限されているかどうか設定またはそのサブセットにします。</span><span class="sxs-lookup"><span data-stu-id="1882f-396">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1882f-397">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="1882f-397">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1882f-398">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-398">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-399">
            <paramref name="type" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-399">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1882f-400">
            <paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-400">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="1882f-401">または、<paramref name="type" /> がオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-401">-or-  <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1882f-402">
            <paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-402">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="1882f-403">または、<see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-403">-or-  Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1882f-404">または、<paramref name="activationAttributes" /> が空の配列ではなく、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-404">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="1882f-405">または、<paramref name="type" /> を含むアセンブリは、<see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> で作成された動的アセンブリです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-405">-or-  The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
          <span data-ttu-id="1882f-406">または、<paramref name="args" /> と最も一致するコンストラクターに <see langword="varargs" /> 引数があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-406">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1882f-407">呼び出されるコンストラクターは例外をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-407">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1882f-408">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-408">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-409">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-409">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1882f-410">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-410">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-411">一致するパブリック コンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-411">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="1882f-412">
            <paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-412">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-413">
            <paramref name="type" /> は有効な型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-413">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1882f-414">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-414">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1882f-415">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-415">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-416">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-416">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1882f-417">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-417">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="System.Activator.CreateInstance (type, bindingAttr, binder, args, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1882f-418">作成するオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-418">The type of object to create.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="1882f-419">
            <c>type</c> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-419">A combination of zero or more bit flags that affect the search for the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-420">
            <c>bindingAttr</c> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-420">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="1882f-421">
            <c>bindingAttr</c> と <c>args</c> を使用して、<c>type</c> コンストラクターをシークおよび識別するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-421">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-422">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-422">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1882f-423">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-423">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1882f-424">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-424">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="1882f-425">
            <c>args</c> から <c>type</c> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-425">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-426">
            <c>culture</c>が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" />が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-426">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-427">指定したパラメーターに最も一致するコンストラクターを使用して、指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-427">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-428">新しく作成されたオブジェクトへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-428">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-429">呼び出されるコンス トラクターには、指定したバインダーとバインディング属性の制約下で指定された引数リストと最もよく一致を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-429">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1882f-430">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が許可されている場合、非パブリックな型とメンバーのアクセスに使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型とメンバーを含むアセンブリの許可セットが制限されているかどうか呼び出し元の設定またはそのサブセットを付与します。</span><span class="sxs-lookup"><span data-stu-id="1882f-430">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1882f-431">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="1882f-431">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1882f-432">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-432">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-433">
            <paramref name="type" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-433">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1882f-434">
            <paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-434">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="1882f-435">または、<paramref name="type" /> がオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-435">-or-  <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1882f-436">
            <paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-436">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="1882f-437">または、<see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-437">-or-  Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1882f-438">または、<paramref name="type" /> を含むアセンブリは、<see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> で作成された動的アセンブリです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-438">-or-  The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
          <span data-ttu-id="1882f-439">または、<paramref name="args" /> と最も一致するコンストラクターに <see langword="varargs" /> 引数があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-439">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1882f-440">呼び出されるコンストラクターは例外をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-440">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1882f-441">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-441">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-442">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-442">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1882f-443">COM 型が <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> 経由で取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-443">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-444">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-444">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="1882f-445">
            <paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-445">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-446">
            <paramref name="type" /> は有効な型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-446">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1882f-447">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-447">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1882f-448">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-448">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-449">非パブリックな型およびそのアクセス許可セットに関係なくのメンバーにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-449">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1882f-450">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-450">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1882f-451">作成するオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-451">The type of object to create.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="1882f-452">
            <c>type</c> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-452">A combination of zero or more bit flags that affect the search for the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-453">
            <c>bindingAttr</c> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-453">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="1882f-454">
            <c>bindingAttr</c> と <c>args</c> を使用して、<c>type</c> コンストラクターをシークおよび識別するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-454">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-455">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-455">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1882f-456">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-456">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1882f-457">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-457">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="1882f-458">
            <c>args</c> から <c>type</c> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-458">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-459">
            <c>culture</c>が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" />が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-459">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1882f-460">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-460">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1882f-461">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-461">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1882f-462">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-462">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1882f-463">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-463">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1882f-464">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-464">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-465">指定したパラメーターに最も一致するコンストラクターを使用して、指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-465">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-466">新しく作成されたオブジェクトへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-466">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-467">呼び出されるコンス トラクターには、指定したバインダーとバインディング属性の制約下で指定された引数リストと最もよく一致を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-467">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1882f-468">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が許可されている場合、非パブリックな型とメンバーのアクセスに使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型とメンバーの許可セットが呼び出し元の制限されたセットを許可またはそのサブセットに。</span><span class="sxs-lookup"><span data-stu-id="1882f-468">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1882f-469">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="1882f-469">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1882f-470">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-470">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-471">
            <paramref name="type" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-471">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1882f-472">
            <paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-472">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="1882f-473">または、<paramref name="type" /> がオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-473">-or-  <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1882f-474">
            <paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-474">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="1882f-475">または、<see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-475">-or-  Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1882f-476">または、<paramref name="activationAttributes" /> が空の配列ではなく、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-476">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="1882f-477">または、<paramref name="type" /> を含むアセンブリは、<see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> で作成された動的アセンブリです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-477">-or-  The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
          <span data-ttu-id="1882f-478">または、<paramref name="args" /> と最も一致するコンストラクターに <see langword="varargs" /> 引数があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-478">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1882f-479">呼び出されるコンストラクターは例外をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-479">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1882f-480">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-480">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-481">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-481">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1882f-482">COM 型が <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> 経由で取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-482">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-483">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-483">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="1882f-484">
            <paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-484">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-485">
            <paramref name="type" /> は有効な型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-485">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1882f-486">証拠を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-486">for supplying evidence.</span>
          </span>
          <span data-ttu-id="1882f-487">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-487">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-488">非パブリックな型およびそのアクセス許可セットに関係なくのメンバーにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-488">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1882f-489">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-489">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="1882f-490">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-490">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="1882f-491">
            <c>assemblyName</c> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-491">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1882f-492">必要な型の完全修飾名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-492">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1882f-493">
            <c>typeName</c> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-493">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="1882f-494">
            <c>typeName</c> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-494">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-495">
            <c>bindingAttr</c> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-495">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="1882f-496">
            <c>bindingAttr</c> と <c>args</c> を使用して、<c>typeName</c> コンストラクターをシークおよび識別するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-496">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-497">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-497">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1882f-498">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-498">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1882f-499">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-499">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="1882f-500">
            <c>args</c> から <c>typeName</c> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-500">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-501">
            <c>culture</c>が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" />が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-501">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1882f-502">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-502">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1882f-503">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-503">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1882f-504">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-504">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1882f-505">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-505">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1882f-506">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-506">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-507">名前を指定したアセンブリと、指定したパラメーターに最も一致するコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-507">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-508">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-508">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-509">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="1882f-509">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1882f-510">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が許可されている場合、非パブリックな型とメンバーの作成に使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型とメンバーを含むアセンブリの許可セットが制限されているかどうか呼び出し元の設定またはそのサブセットを付与します。</span><span class="sxs-lookup"><span data-stu-id="1882f-510">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1882f-511">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)42d9dc2a-8fcc-4ff3-b002-4ff260ef3dc5)。</span><span class="sxs-lookup"><span data-stu-id="1882f-511">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)42d9dc2a-8fcc-4ff3-b002-4ff260ef3dc5.)</span></span>  
>   
>  <span data-ttu-id="1882f-512">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-512">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-513">
            <paramref name="typeName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-513">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-514">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-514">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-515">
            <paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-515">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1882f-516">
            <paramref name="assemblyName" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-516">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1882f-517">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-517">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-518">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-518">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1882f-519">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-519">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1882f-520">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-520">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1882f-521">
            <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-521">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1882f-522">または、<paramref name="activationAttributes" /> が空の配列ではなく、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-522">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="1882f-523">または、<paramref name="args" /> と最も一致するコンストラクターに <see langword="varargs" /> 引数があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-523">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1882f-524">
            <paramref name="assemblyName" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-524">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1882f-525">または、共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-525">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1882f-526">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-526">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1882f-527">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-527">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="1882f-528">または、アセンブリ名かコード ベースが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-528">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1882f-529">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-529">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1882f-530">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-530">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-531">非パブリックな型およびそのアクセス許可セットに関係なくのメンバーにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-531">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1882f-532">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-532">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="1882f-533">
            <c>typeName</c> という名前の型が作成されるドメイン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-533">The domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyName">
          <span data-ttu-id="1882f-534">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-534">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="1882f-535">
            <c>assemblyName</c> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-535">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1882f-536">必要な型の完全修飾名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-536">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1882f-537">
            <c>typeName</c> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-537">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="1882f-538">
            <c>typeName</c> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-538">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-539">
            <c>bindingAttr</c> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-539">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="1882f-540">
            <c>bindingAttr</c> と <c>args</c> を使用して、<c>typeName</c> コンストラクターをシークおよび識別するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-540">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-541">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-541">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1882f-542">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-542">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1882f-543">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-543">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="1882f-544">
            <c>args</c> から <c>typeName</c> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-544">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-545">
            <c>culture</c>が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" />が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-545">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1882f-546">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-546">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1882f-547">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-547">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1882f-548">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-548">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1882f-549">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-549">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1882f-550">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-550">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-551">名前を指定したアセンブリと、指定したパラメーターに最も適したコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-551">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-552">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-552">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-553">使用<xref:System.Activator.CreateInstance%2A>ホストがセキュリティのアクセス許可が制限されているアプリケーション ドメインでコードを実行する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="1882f-553">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="1882f-554">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="1882f-554">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1882f-555">このメソッドを使用して<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>に完全な信頼の直前の呼び出し元が必要です。</span><span class="sxs-lookup"><span data-stu-id="1882f-555">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-556">
            <paramref name="domain" /> または <paramref name="typeName" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-556">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-557">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-557">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-558">
            <paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-558">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1882f-559">
            <paramref name="assemblyName" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-559">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1882f-560">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-560">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-561">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-561">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1882f-562">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-562">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1882f-563">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-563">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1882f-564">
            <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-564">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1882f-565">または、<paramref name="activationAttributes" /> が空の配列ではなく、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-565">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="1882f-566">または、<paramref name="args" /> と最も一致するコンストラクターに <see langword="varargs" /> 引数があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-566">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1882f-567">
            <paramref name="assemblyName" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-567">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1882f-568">または、共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-568">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1882f-569">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-569">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1882f-570">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-570">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="1882f-571">または、アセンブリ名かコード ベースが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-571">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1882f-572">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-572">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1882f-573">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-573">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1882f-574">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-574">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1882f-575">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-575">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-576">すべての型のメンバーに対して操作を呼び出す権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-576">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="1882f-577">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-577">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="1882f-578">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-578">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="1882f-579">
            <c>assemblyName</c> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-579">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1882f-580">必要な型の完全修飾名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-580">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1882f-581">
            <c>typeName</c> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-581">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="1882f-582">
            <c>typeName</c> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-582">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-583">
            <c>bindingAttr</c> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-583">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="1882f-584">
            <c>bindingAttr</c> と <c>args</c> を使用して、<c>typeName</c> コンストラクターをシークおよび識別するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-584">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-585">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-585">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1882f-586">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-586">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1882f-587">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-587">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="1882f-588">
            <c>args</c> から <c>typeName</c> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-588">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-589">
            <c>culture</c>が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" />が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-589">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1882f-590">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-590">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1882f-591">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-591">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1882f-592">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-592">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1882f-593">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-593">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1882f-594">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-594">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <param name="securityInfo">
          <span data-ttu-id="1882f-595">セキュリティ ポリシーがコードに与えるアクセス許可を決定するために使用する情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-595">Information used to make security policy decisions and grant code permissions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-596">名前を指定したアセンブリと、指定したパラメーターに最も一致するコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-596">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-597">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-597">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-598">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="1882f-598">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1882f-599">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が許可されている場合、非パブリックな型とメンバーの作成に使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型とメンバーを含むアセンブリの許可セットが制限されているかどうか呼び出し元の設定またはそのサブセットを付与します。</span><span class="sxs-lookup"><span data-stu-id="1882f-599">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="1882f-600">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="1882f-600">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="1882f-601">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-601">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-602">
            <paramref name="typeName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-602">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-603">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-603">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-604">
            <paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-604">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1882f-605">
            <paramref name="assemblyName" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-605">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1882f-606">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-606">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-607">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-607">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1882f-608">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-608">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1882f-609">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-609">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1882f-610">
            <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-610">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1882f-611">または、<paramref name="activationAttributes" /> が空の配列ではなく、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-611">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="1882f-612">または、<paramref name="args" /> と最も一致するコンストラクターに <see langword="varargs" /> 引数があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-612">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1882f-613">
            <paramref name="assemblyName" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-613">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1882f-614">または、共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-614">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1882f-615">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-615">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1882f-616">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-616">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="1882f-617">または、アセンブリ名かコード ベースが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-617">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1882f-618">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-618">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1882f-619">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-619">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-620">非パブリックな型およびそのアクセス許可セットに関係なくのメンバーにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-620">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1882f-621">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-621">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="1882f-622">
            <c>typeName</c> という名前の型が作成されるドメイン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-622">The domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyName">
          <span data-ttu-id="1882f-623">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-623">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="1882f-624">
            <c>assemblyName</c> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-624">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1882f-625">必要な型の完全修飾名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-625">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1882f-626">
            <c>typeName</c> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-626">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="1882f-627">
            <c>typeName</c> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-627">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-628">
            <c>bindingAttr</c> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-628">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="1882f-629">
            <c>bindingAttr</c> と <c>args</c> を使用して、<c>typeName</c> コンストラクターをシークおよび識別するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-629">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-630">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-630">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1882f-631">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-631">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1882f-632">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-632">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="1882f-633">
            <c>args</c> から <c>typeName</c> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-633">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-634">
            <c>culture</c>が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" />が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-634">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1882f-635">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-635">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1882f-636">通常、これは単一の <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-636">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object.</span>
          </span>
          <span data-ttu-id="1882f-637">
            <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> により、リモート オブジェクトのアクティブ化に必要な URL が指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-637">The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object.</span>
          </span>
        </param>
        <param name="securityAttributes">
          <span data-ttu-id="1882f-638">セキュリティ ポリシーがコードに与えるアクセス許可を決定するために使用する情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-638">Information used to make security policy decisions and grant code permissions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-639">名前を指定したアセンブリと、指定したパラメーターに最も適したコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-639">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-640">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-640">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-641">使用<xref:System.Activator.CreateInstance%2A>ホストがセキュリティのアクセス許可が制限されているアプリケーション ドメインでコードを実行する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="1882f-641">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="1882f-642">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="1882f-642">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1882f-643">このメソッドを使用して<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>に完全な信頼の直前の呼び出し元が必要です。</span><span class="sxs-lookup"><span data-stu-id="1882f-643">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-644">
            <paramref name="domain" /> または <paramref name="typeName" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-644">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-645">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-645">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-646">
            <paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-646">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1882f-647">
            <paramref name="assemblyName" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-647">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1882f-648">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-648">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-649">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-649">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1882f-650">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-650">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="1882f-651">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-651">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1882f-652">
            <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-652">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="1882f-653">または、<paramref name="activationAttributes" /> が空の配列ではなく、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-653">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="1882f-654">または、<paramref name="args" /> と最も一致するコンストラクターに <see langword="varargs" /> 引数があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-654">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1882f-655">
            <paramref name="assemblyName" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-655">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1882f-656">または、共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-656">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1882f-657">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-657">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="1882f-658">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-658">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="1882f-659">または、アセンブリ名かコード ベースが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-659">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1882f-660">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-660">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1882f-661">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-661">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-662">すべての型のメンバーに対して操作を呼び出す権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-662">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="1882f-663">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-663">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1882f-664">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-664">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1882f-665">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-665">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T CreateInstance&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T CreateInstance&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T CreateInstance();" />
      <MemberSignature Language="F#" Value="static member CreateInstance : unit -&gt; 'T" Usage="System.Activator.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="1882f-666">作成する型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-666">The type to create.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="1882f-667">パラメーターなしのコンストラクターを使用して、指定されたジェネリック型パラメーターによって決定される型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-667">Creates an instance of the type designated by the specified generic type parameter, using the parameterless constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-668">新しく作成されたオブジェクトへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-668">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-669"><xref:System.Activator.CreateInstance%60%601>ジェネリック メソッドは、コンパイラで型パラメーターで指定された型のインスタンス化を実装するために使用します。</span><span class="sxs-lookup"><span data-stu-id="1882f-669">The <xref:System.Activator.CreateInstance%60%601> generic method is used by compilers to implement the instantiation of types specified by type parameters.</span></span> <span data-ttu-id="1882f-670">たとえば、次のジェネリック メソッドの実装で`new T()`(`gcnew T()` C++ で) を使用して、<xref:System.Activator.CreateInstance%60%601>ジェネリック メソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-670">For example, in the following generic method, the implementation of `new T()` (`gcnew T()` in C++) uses the <xref:System.Activator.CreateInstance%60%601> generic method.</span></span>  
  
 [!code-cpp[System.Activation.CreateInstance~~1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cpp/remarks.cpp#1)]
 [!code-csharp[System.Activation.CreateInstance~~1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cs/remarks.cs#1)]
 [!code-vb[System.Activation.CreateInstance~~1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activation.createinstance~~1/vb/remarks.vb#1)]  
  
 <span data-ttu-id="1882f-671">一般の使用はありません、<xref:System.Activator.CreateInstance%60%601>型は、コンパイル時に認識する必要がありますので、アプリケーションでジェネリック メソッドのコードします。</span><span class="sxs-lookup"><span data-stu-id="1882f-671">In general, there is no use for the <xref:System.Activator.CreateInstance%60%601> generic method in application code, because the type must be known at compile time.</span></span> <span data-ttu-id="1882f-672">型がコンパイル時に既知の場合は、通常のインスタンス化の構文を使用できます (`new` c# 演算子`New`Visual basic で`gcnew`C++ で)。</span><span class="sxs-lookup"><span data-stu-id="1882f-672">If the type is known at compile time, normal instantiation syntax can be used (`new` operator in C#, `New` in Visual Basic, `gcnew` in C++).</span></span> <span data-ttu-id="1882f-673">コンパイル時に、型が不明な場合は、非ジェネリック オーバー ロードを呼び出すことができます<xref:System.Activator.CreateInstance%2A>します。</span><span class="sxs-lookup"><span data-stu-id="1882f-673">If the type is not known at compile time, you can call a non-generic overload of <xref:System.Activator.CreateInstance%2A>.</span></span>  
  
 <span data-ttu-id="1882f-674">オーバー ロードはありません、<xref:System.Activator.CreateInstance%60%601>ジェネリック メソッドのオーバー ロード、汎用でないため、引数リストを取る<xref:System.Activator.CreateInstance%2A>既に遅延バインディングのコンス トラクターの解決を提供します。</span><span class="sxs-lookup"><span data-stu-id="1882f-674">There are no overloads of the <xref:System.Activator.CreateInstance%60%601> generic method that take argument lists, because the non-generic overloads of <xref:System.Activator.CreateInstance%2A> already provide late-bound constructor resolution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-675">
            <block subset="none" type="note">
              <para> [Windows ストア アプリ用 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) または [ポータブル クラス ライブラリ](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) では、基本クラスの例外である <see cref="T:System.MissingMemberException" /> を代わりにキャッチします。</para>
            </block>
            <paramref name="T" /> に指定されている型には、パラメーターなしのコンストラクターがありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-675">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.  </para>
              </block>  The type that is specified for <paramref name="T" /> does not have a parameterless constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1882f-676">名前を指定したアセンブリ ファイルと、指定したパラメーターに最も一致するコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-676">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="1882f-677">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-677">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1882f-678">推奨される型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-678">The name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-679">名前を指定したアセンブリ ファイルと、既定のコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-679">Creates an instance of the type whose name is specified, using the named assembly file and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-680">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-680">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-681">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-681">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="1882f-682">その他の呼び出されたメソッドによってスローされる例外については、例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-682">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1882f-683">次のコード例を呼び出す方法を示します、<xref:System.Activator.CreateInstanceFrom%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-683">The following code example demonstrates how to call the <xref:System.Activator.CreateInstanceFrom%2A> method.</span></span> <span data-ttu-id="1882f-684">このコード例が示されている例の一部、<xref:System.Activator>クラス。</span><span class="sxs-lookup"><span data-stu-id="1882f-684">This code example is part of a larger example provided for the <xref:System.Activator> class.</span></span>  
  
 [!code-cpp[ActivatorX#3](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#3)]
 [!code-csharp[ActivatorX#3](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#3)]
 [!code-vb[ActivatorX#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-685">
            <paramref name="typeName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-685">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-686">一致するパブリック コンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-686">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-687">
            <paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-687">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1882f-688">
            <paramref name="assemblyFile" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-688">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1882f-689">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-689">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-690">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-690">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1882f-691">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-691">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1882f-692">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-692">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1882f-693">
            <paramref name="assemblyFile" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-693">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1882f-694">または、共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-694">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1882f-695">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-695">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1882f-696">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-696">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1882f-697">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-697">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="1882f-698">ディレクトリ パスを検索し、その内容を読み取る権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-698">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="1882f-699">列挙体に関連付けられている:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-699">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-700">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-700">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1882f-701">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-701">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (domain As AppDomain, assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="1882f-702">
            <c>typeName</c> という名前の型が作成されるリモート ドメイン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-702">The remote domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyFile">
          <span data-ttu-id="1882f-703">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-703">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1882f-704">推奨される型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-704">The name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-705">名前を指定したアセンブリ ファイルと既定のコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-705">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-706">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-706">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-707">使用<xref:System.Activator.CreateInstanceFrom%2A>ホストがセキュリティのアクセス許可が制限されているアプリケーション ドメインでコードを実行する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="1882f-707">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="1882f-708">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-708">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1882f-709">このメソッドを使用して<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>に完全な信頼の直前の呼び出し元が必要です。</span><span class="sxs-lookup"><span data-stu-id="1882f-709">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="1882f-710">その他の呼び出されたメソッドによってスローされる例外については、例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-710">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-711">
            <paramref name="domain" /> または <paramref name="typeName" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-711">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-712">一致するパブリック コンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-712">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-713">
            <paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-713">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1882f-714">
            <paramref name="assemblyFile" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-714">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1882f-715">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-715">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-716">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-716">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1882f-717">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-717">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1882f-718">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-718">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1882f-719">
            <paramref name="assemblyFile" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-719">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1882f-720">または、共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-720">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1882f-721">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-721">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1882f-722">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-722">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1882f-723">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-723">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="1882f-724">ディレクトリ パスを検索し、その内容を読み取る権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-724">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="1882f-725">列挙体に関連付けられている:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-725">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1882f-726">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-726">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1882f-727">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-727">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="1882f-728">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-728">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1882f-729">推奨される型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-729">The name of the preferred type.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1882f-730">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-730">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1882f-731">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-731">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1882f-732">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-732">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1882f-733">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-733">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1882f-734">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-734">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-735">名前を指定したアセンブリ ファイルと、既定のコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-735">Creates an instance of the type whose name is specified, using the named assembly file and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-736">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-736">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-737">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-737">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="1882f-738">その他の呼び出されたメソッドによってスローされる例外については、例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-738">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-739">
            <paramref name="typeName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-739">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-740">一致するパブリック コンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-740">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-741">
            <paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-741">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1882f-742">
            <paramref name="assemblyFile" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-742">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1882f-743">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-743">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-744">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-744">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1882f-745">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-745">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1882f-746">
            <paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-746">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1882f-747">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-747">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1882f-748">
            <paramref name="assemblyFile" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-748">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1882f-749">または、共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-749">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1882f-750">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-750">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1882f-751">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-751">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1882f-752">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-752">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="1882f-753">ディレクトリ パスを検索し、その内容を読み取る権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-753">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="1882f-754">列挙体に関連付けられている:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-754">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-755">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-755">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1882f-756">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-756">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="1882f-757">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-757">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1882f-758">推奨される型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-758">The name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1882f-759">
            <c>typeName</c> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-759">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="1882f-760">
            <c>typeName</c> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-760">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-761">
            <c>bindingAttr</c> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-761">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="1882f-762">
            <c>bindingAttr</c> と <c>args</c> を使用して、<c>typeName</c> コンストラクターをシークおよび識別するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-762">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-763">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-763">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1882f-764">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-764">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1882f-765">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-765">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="1882f-766">
            <c>args</c> から <c>typeName</c> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-766">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-767">
            <c>culture</c>が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" />が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-767">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1882f-768">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-768">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1882f-769">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-769">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1882f-770">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-770">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1882f-771">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-771">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1882f-772">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-772">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-773">名前を指定したアセンブリ ファイルと、指定したパラメーターに最も一致するコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-773">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-774">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-774">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-775">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-775">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="1882f-776">その他の呼び出されたメソッドによってスローされる例外については、例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-776">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-777">
            <paramref name="typeName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-777">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-778">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-778">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-779">
            <paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-779">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1882f-780">
            <paramref name="assemblyFile" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-780">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1882f-781">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-781">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-782">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-782">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1882f-783">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-783">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1882f-784">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-784">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1882f-785">
            <paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-785">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1882f-786">
            <paramref name="assemblyFile" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-786">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1882f-787">または、共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-787">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1882f-788">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-788">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1882f-789">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-789">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1882f-790">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-790">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="1882f-791">ディレクトリ パスを検索し、その内容を読み取る権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-791">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="1882f-792">列挙体に関連付けられている:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-792">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-793">非パブリックな型およびそのアクセス許可セットに関係なくのメンバーにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-793">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1882f-794">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-794">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="1882f-795">
            <c>typeName</c> という名前の型が作成されるリモート ドメイン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-795">The remote domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyFile">
          <span data-ttu-id="1882f-796">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-796">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1882f-797">推奨される型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-797">The name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1882f-798">
            <c>typeName</c> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-798">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="1882f-799">
            <c>typeName</c> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-799">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-800">
            <c>bindingAttr</c> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-800">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="1882f-801">
            <c>bindingAttr</c> と <c>args</c> を使用して、<c>typeName</c> コンストラクターをシークおよび識別するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-801">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-802">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-802">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1882f-803">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-803">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1882f-804">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-804">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="1882f-805">
            <c>args</c> から <c>typeName</c> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-805">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-806">
            <c>culture</c>が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" />が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-806">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1882f-807">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-807">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1882f-808">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-808">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1882f-809">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-809">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1882f-810">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-810">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1882f-811">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-811">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-812">名前を指定したアセンブリ ファイルと、指定したパラメーターに最も適したコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-812">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-813">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-813">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-814">使用<xref:System.Activator.CreateInstanceFrom%2A>ホストがセキュリティのアクセス許可が制限されているアプリケーション ドメインでコードを実行する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="1882f-814">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="1882f-815">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-815">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="1882f-816">その他の呼び出されたメソッドによってスローされる例外については、例外セクションを参照して、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-816">For information about other exceptions that can be thrown by invoked methods, see the Exceptions sections of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-817">
            <paramref name="domain" /> または <paramref name="typeName" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-817">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-818">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-818">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-819">
            <paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-819">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1882f-820">
            <paramref name="assemblyFile" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-820">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1882f-821">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-821">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-822">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-822">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1882f-823">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-823">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1882f-824">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-824">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1882f-825">
            <paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-825">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1882f-826">
            <paramref name="assemblyFile" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-826">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1882f-827">または、<paramref name="assemblyName" /> が、現在読み込まれているバージョンよりも新しいバージョンの共通言語ランタイムを対象としてコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-827">-or-  <paramref name="assemblyName" /> was compiled for a version of the common language runtime that is later than the version that is currently loaded.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1882f-828">証拠を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-828">for supplying evidence.</span>
          </span>
          <span data-ttu-id="1882f-829">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-829">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="1882f-830">ディレクトリ パスを検索し、その内容を読み取る権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-830">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="1882f-831">列挙体に関連付けられている:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-831">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-832">非パブリックな型およびそのアクセス許可セットに関係なくのメンバーにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-832">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1882f-833">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-833">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1882f-834">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-834">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1882f-835">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-835">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="1882f-836">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-836">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1882f-837">推奨される型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-837">The name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1882f-838">
            <c>typeName</c> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-838">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="1882f-839">
            <c>typeName</c> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-839">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-840">
            <c>bindingAttr</c> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-840">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="1882f-841">
            <c>bindingAttr</c> と <c>args</c> を使用して、<c>typeName</c> コンストラクターをシークおよび識別するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-841">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-842">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-842">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1882f-843">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-843">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1882f-844">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-844">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="1882f-845">
            <c>args</c> から <c>typeName</c> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-845">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-846">
            <c>culture</c>が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" />が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-846">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1882f-847">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-847">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1882f-848">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-848">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1882f-849">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-849">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1882f-850">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-850">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1882f-851">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-851">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <param name="securityInfo">
          <span data-ttu-id="1882f-852">セキュリティ ポリシーがコードに与えるアクセス許可を決定するために使用する情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-852">Information used to make security policy decisions and grant code permissions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-853">名前を指定したアセンブリ ファイルと、指定したパラメーターに最も一致するコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-853">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-854">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-854">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-855">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-855">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="1882f-856">その他の呼び出されたメソッドによってスローされる例外については、例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-856">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-857">
            <paramref name="typeName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-857">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-858">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-858">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-859">
            <paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-859">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1882f-860">
            <paramref name="assemblyFile" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-860">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1882f-861">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-861">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-862">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-862">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1882f-863">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-863">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1882f-864">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-864">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1882f-865">
            <paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-865">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1882f-866">
            <paramref name="assemblyFile" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-866">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1882f-867">または、共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-867">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1882f-868">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-868">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1882f-869">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-869">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="1882f-870">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-870">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="1882f-871">ディレクトリ パスを検索し、その内容を読み取る権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-871">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="1882f-872">列挙体に関連付けられている:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-872">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-873">非パブリックな型およびそのアクセス許可セットに関係なくのメンバーにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-873">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1882f-874">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-874">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Methods which use Evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="1882f-875">
            <c>typeName</c> という名前の型が作成されるリモート ドメイン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-875">The remote domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyFile">
          <span data-ttu-id="1882f-876">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-876">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="1882f-877">推奨される型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-877">The name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1882f-878">
            <c>typeName</c> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-878">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="1882f-879">
            <c>typeName</c> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-879">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-880">
            <c>bindingAttr</c> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-880">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="1882f-881">
            <c>bindingAttr</c> と <c>args</c> を使用して、<c>typeName</c> コンストラクターをシークおよび識別するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-881">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-882">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-882">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1882f-883">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-883">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="1882f-884">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-884">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="1882f-885">
            <c>args</c> から <c>typeName</c> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-885">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="1882f-886">
            <c>culture</c>が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" />が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-886">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="1882f-887">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-887">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="1882f-888">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-888">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="1882f-889">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-889">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="1882f-890">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-890">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="1882f-891">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-891">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <param name="securityAttributes">
          <span data-ttu-id="1882f-892">セキュリティ ポリシーがコードに与えるアクセス許可を決定するために使用する情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-892">Information used to make security policy decisions and grant code permissions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-893">名前を指定したアセンブリ ファイルと、指定したパラメーターに最も適したコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-893">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-894">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-894">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-895">使用<xref:System.Activator.CreateInstanceFrom%2A>ホストがセキュリティのアクセス許可が制限されているアプリケーション ドメインでコードを実行する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="1882f-895">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="1882f-896">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-896">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1882f-897">このメソッドを使用して<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>に完全な信頼の直前の呼び出し元が必要です。</span><span class="sxs-lookup"><span data-stu-id="1882f-897">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="1882f-898">その他の呼び出されたメソッドによってスローされる例外については、例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-898">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-899">
            <paramref name="domain" /> または <paramref name="typeName" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-899">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="1882f-900">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-900">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="1882f-901">
            <paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-901">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1882f-902">
            <paramref name="assemblyFile" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-902">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="1882f-903">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-903">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-904">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-904">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="1882f-905">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-905">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1882f-906">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-906">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1882f-907">
            <paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-907">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1882f-908">
            <paramref name="assemblyFile" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-908">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="1882f-909">または、共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-909">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="1882f-910">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-910">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1882f-911">証拠を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-911">for supplying evidence.</span>
          </span>
          <span data-ttu-id="1882f-912">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-912">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="1882f-913">ディレクトリ パスを検索し、その内容を読み取る権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-913">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="1882f-914">列挙体に関連付けられている:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-914">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="1882f-915">非パブリックな型およびそのアクセス許可セットに関係なくのメンバーにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-915">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="1882f-916">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-916">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1882f-917">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-917">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1882f-918">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-918">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1882f-919">既知のオブジェクト用または XML Web サービス用のプロキシを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-919">Creates a proxy for a well-known object or XML Web service.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url);" />
      <MemberSignature Language="F#" Value="static member GetObject : Type * string -&gt; obj" Usage="System.Activator.GetObject (type, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1882f-920">接続する既知のオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-920">The type of the well-known object to which you want to connect.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="1882f-921">既知のオブジェクトの URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-921">The URL of the well-known object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-922">指定された型と URL が示す既知のオブジェクト用にプロキシを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-922">Creates a proxy for the well-known object indicated by the specified type and URL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-923">要求した既知のオブジェクトによって提供されたエンドポイントを指すプロキシ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-923">A proxy that points to an endpoint served by the requested well-known object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-924">リモート オブジェクトにメッセージを送信プロキシを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1882f-924">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="1882f-925">コンソール アプリケーションは、プロキシでメソッドが呼び出されるまで、ネットワーク経由で、メッセージは送信されません。</span><span class="sxs-lookup"><span data-stu-id="1882f-925">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-926">
            <paramref name="type" /> または <paramref name="url" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-926">
              <paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException">
          <span data-ttu-id="1882f-927">
            <paramref name="type" /> は、参照渡しでマーシャリングされません。インターフェイスでもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-927">
              <paramref name="type" /> is not marshaled by reference and is not an interface.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-928">このメンバーは、遅延バインディング メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-928">This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1882f-929">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-929">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1882f-930">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-930">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member GetObject : Type * string * obj -&gt; obj" Usage="System.Activator.GetObject (type, url, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1882f-931">接続する既知のオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-931">The type of the well-known object to which you want to connect.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="1882f-932">既知のオブジェクトの URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-932">The URL of the well-known object.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1882f-933">チャネル固有データまたは <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-933">Channel-specific data or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-934">指定された型、URL、およびチャネル データが示す既知のオブジェクト用にプロキシを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-934">Creates a proxy for the well-known object indicated by the specified type, URL, and channel data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1882f-935">要求した既知のオブジェクトによって提供されたエンドポイントを指すプロキシ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-935">A proxy that points to an endpoint served by the requested well-known object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-936">リモート オブジェクトにメッセージを送信プロキシを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1882f-936">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="1882f-937">コンソール アプリケーションは、プロキシでメソッドが呼び出されるまで、ネットワーク経由で、メッセージは送信されません。</span><span class="sxs-lookup"><span data-stu-id="1882f-937">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 <span data-ttu-id="1882f-938">`state`パラメーターは、チャネルに情報を通信しに渡される、<xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1882f-938">The `state` parameter communicates information to the channel, and is passed to the <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1882f-939">
            <paramref name="type" /> または <paramref name="url" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-939">
              <paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException">
          <span data-ttu-id="1882f-940">
            <paramref name="type" /> は、参照渡しでマーシャリングされません。インターフェイスでもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-940">
              <paramref name="type" /> is not marshaled by reference and is not an interface.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="1882f-941">このメンバーは、遅延バインディング メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-941">This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1882f-942">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-942">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1882f-943">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-943">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _Activator.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _Activator.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_Activator::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="1882f-944">将来使用するために予約されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-944">Reserved for future use.</span>
          </span>
          <span data-ttu-id="1882f-945">IID_NULL にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-945">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="1882f-946">渡された割り当てる名前の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-946">The passed-in array of names to map.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="1882f-947">割り当てる名前のカウント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-947">The count of the names to map.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="1882f-948">名前を解釈するロケール コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-948">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="1882f-949">名前に対応する ID を受け取る、呼び出し元割り当て済み配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-949">The caller-allocated array that receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-950">一連の名前を対応する一連のディスパッチ識別子に割り当てます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-950">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-951">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするために使用し、マネージ コードから呼び出さないする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-951">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="1882f-952">詳細については`IDispatch::GetIDsOfNames`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="1882f-952">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="1882f-953">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-953">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _Activator.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="1882f-954">返される型情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-954">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="1882f-955">型情報のロケール ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-955">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="1882f-956">要求された型情報オブジェクトへのポインターを受け取るオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-956">An object that receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-957">オブジェクトの型情報を取得します。この型情報を使用して、インターフェイスの型情報を取得できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-957">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-958">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするために使用し、マネージ コードから呼び出さないする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-958">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="1882f-959">詳細については`IDispatch::GetTypeInfo`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="1882f-959">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="1882f-960">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-960">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _Activator.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="1882f-961">このメソッドから制御が戻るときに、オブジェクトが提供する型情報インターフェイスの数を受け取る場所へのポインターが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-961">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
          <span data-ttu-id="1882f-962">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-962">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-963">オブジェクトが提供する型情報インターフェイスの数 (0 または 1) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-963">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-964">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするために使用し、マネージ コードから呼び出さないする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-964">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="1882f-965">詳細については`IDispatch::GetTypeInfoCount`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="1882f-965">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="1882f-966">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-966">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.Invoke">
      <MemberSignature Language="C#" Value="void _Activator.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _Activator.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_Activator::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="1882f-967">メンバーを識別するディパッチ ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-967">A dispatch identifier that identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="1882f-968">将来使用するために予約されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-968">Reserved for future use.</span>
          </span>
          <span data-ttu-id="1882f-969">IID_NULL にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-969">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="1882f-970">引数を解釈する対象のロケール コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-970">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="1882f-971">呼び出しのコンテキストを記述するフラグ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-971">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="1882f-972">引数の配列、名前付き引数の引数 DISPID の配列、および各配列内の要素数のカウントを格納している構造体へのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-972">A pointer to a structure that contains an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="1882f-973">結果が格納される場所へのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-973">A pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="1882f-974">例外情報を格納する構造体へのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-974">A pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="1882f-975">エラーが存在する最初の引数のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-975">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1882f-976">オブジェクトによって公開されたプロパティおよびメソッドへのアクセスを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-976">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1882f-977">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするために使用し、マネージ コードから呼び出さないする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1882f-977">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="1882f-978">詳細については`IDispatch::Invoke`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="1882f-978">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="1882f-979">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1882f-979">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>