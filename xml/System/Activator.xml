<Type Name="Activator" FullName="System.Activator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="33496946a13ba8e7a29674ceaab89361b3bde664" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30730896" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Activator : System.Runtime.InteropServices._Activator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Activator extends System.Object implements class System.Runtime.InteropServices._Activator" />
  <TypeSignature Language="DocId" Value="T:System.Activator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Activator&#xA;Implements _Activator" />
  <TypeSignature Language="C++ CLI" Value="public ref class Activator sealed : System::Runtime::InteropServices::_Activator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Activator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Activator))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bb72d-101">オブジェクトの型をローカル サイトまたはリモート サイトに作成するメソッド、または既存のリモート オブジェクトへの参照を取得するメソッドを保持します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bb72d-101">Contains methods to create types of objects locally or remotely, or obtain references to existing remote objects.</span>
      </span>
      <span data-ttu-id="bb72d-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bb72d-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-103"><xref:System.Activator.CreateInstance%2A>メソッドは、指定された引数を最もよく一致するコンス トラクターを呼び出すことによって、アセンブリで定義されている型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-103">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type defined in an assembly by invoking the constructor that best matches the specified arguments.</span></span> <span data-ttu-id="bb72d-104">引数が指定されていない場合は、既定のコンス トラクターをパラメーターをとらないコンス トラクターが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="bb72d-104">If no arguments are specified, the constructor that takes no parameters, that is, the default constructor, is invoked.</span></span>  
  
 <span data-ttu-id="bb72d-105">検索し、コンス トラクターを呼び出すための十分なアクセス許可が必要それ以外の場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb72d-105">You must have sufficient permission to search for and call a constructor; otherwise, an exception is thrown.</span></span> <span data-ttu-id="bb72d-106">既定では、コンス トラクターを検索中に、パブリック コンス トラクターだけと見なされます。</span><span class="sxs-lookup"><span data-stu-id="bb72d-106">By default, only public constructors are considered during the search for a constructor.</span></span> <span data-ttu-id="bb72d-107">コンス トラクターまたは既定のコンス トラクターが見つかりません、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb72d-107">If no constructor or default constructor can be found, an exception is thrown.</span></span>  
  
 <span data-ttu-id="bb72d-108">バインダー パラメーターは、適切なコンス トラクターのアセンブリを検索するオブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-108">A binder parameter specifies an object that searches an assembly for a suitable constructor.</span></span> <span data-ttu-id="bb72d-109">バインダーと検索条件を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="bb72d-109">You can specify your own binder and search criteria.</span></span> <span data-ttu-id="bb72d-110">バインダーが指定されていない場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="bb72d-110">If no binder is specified, a default binder is used.</span></span> <span data-ttu-id="bb72d-111">詳細については、<xref:System.Reflection.Binder?displayProperty=nameWithType> クラスおよび <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="bb72d-111">For more information, see the <xref:System.Reflection.Binder?displayProperty=nameWithType> and <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> classes.</span></span>  
  
 <span data-ttu-id="bb72d-112">証拠パラメーターは、セキュリティ ポリシーとコンス トラクターのアクセス許可に影響します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-112">An evidence parameter affects the security policy and permissions for the constructor.</span></span> <span data-ttu-id="bb72d-113">詳細については、<xref:System.Security.Policy.Evidence?displayProperty=nameWithType> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="bb72d-113">For more information, see the <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="bb72d-114">型のインスタンスは、ローカルまたはリモート サイトで作成できます。</span><span class="sxs-lookup"><span data-stu-id="bb72d-114">An instance of a type can be created at a local or remote site.</span></span> <span data-ttu-id="bb72d-115">場合は、型がリモートで作成されると、アクティベーション属性パラメーターは、リモート サイトの URI を指定します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-115">If the type is created remotely, an activation attribute parameter specifies the URI of the remote site.</span></span> <span data-ttu-id="bb72d-116">インスタンスを作成するための呼び出しは、リモート サイトに達する前に、仲介サイトを通過可能性があります。</span><span class="sxs-lookup"><span data-stu-id="bb72d-116">The call to create the instance might pass through intermediary sites before it reaches the remote site.</span></span> <span data-ttu-id="bb72d-117">その他のアクティベーション属性は、環境、または呼び出しが、リモート サイトと中間サイトで動作するコンテキストを変更できます。</span><span class="sxs-lookup"><span data-stu-id="bb72d-117">Other activation attributes can modify the environment, or context, in which the call operates at the remote and intermediary sites.</span></span>  
  
 <span data-ttu-id="bb72d-118">インスタンスがローカルに作成される場合は、そのオブジェクトへの参照が返されます。</span><span class="sxs-lookup"><span data-stu-id="bb72d-118">If the instance is created locally, a reference to that object is returned.</span></span> <span data-ttu-id="bb72d-119">インスタンスがリモートで作成された場合、プロキシへの参照が返されます。</span><span class="sxs-lookup"><span data-stu-id="bb72d-119">If the instance is created remotely, a reference to a proxy is returned.</span></span> <span data-ttu-id="bb72d-120">リモート オブジェクトは、ローカル オブジェクトの場合と同様に、プロキシ経由操作されます。</span><span class="sxs-lookup"><span data-stu-id="bb72d-120">The remote object is manipulated through the proxy as if it were a local object.</span></span>  
  
 <span data-ttu-id="bb72d-121"><xref:System.Activator.GetObject%2A>メソッドは、現在実行しているリモート オブジェクト、よく知られているオブジェクトのサーバー側でアクティブまたは XML Web サービス プロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-121">The <xref:System.Activator.GetObject%2A> method creates a proxy to a currently running remote object, server-activated well-known object, or XML Web service.</span></span> <span data-ttu-id="bb72d-122">接続メディア、つまり、チャネルを指定できます。</span><span class="sxs-lookup"><span data-stu-id="bb72d-122">You can specify the connection medium, that is, the channel.</span></span> <span data-ttu-id="bb72d-123">詳細については、<xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="bb72d-123">For more information, see the <xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="bb72d-124">アセンブリには、型定義が含まれています。</span><span class="sxs-lookup"><span data-stu-id="bb72d-124">Assemblies contain type definitions.</span></span> <span data-ttu-id="bb72d-125"><xref:System.Activator.CreateInstance%2A>メソッドは、現在実行中のアセンブリから型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-125">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type from a currently running assembly.</span></span> <span data-ttu-id="bb72d-126"><xref:System.Activator.CreateInstanceFrom%2A>メソッドは、アセンブリを含むファイルからインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-126">The <xref:System.Activator.CreateInstanceFrom%2A> method creates an instance from a file that contains an assembly.</span></span> <span data-ttu-id="bb72d-127"><xref:System.Activator.CreateComInstanceFrom%2A>メソッドは、アセンブリを含むファイルから COM オブジェクトのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-127">The <xref:System.Activator.CreateComInstanceFrom%2A> method creates an instance of a COM object from a file that contains an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb72d-128">次の例を使用する方法を示しています、<xref:System.Activator>を動的に実行時にオブジェクトを構築します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-128">The following example shows how to use the <xref:System.Activator> class to dynamically construct objects at run time.</span></span>  
  
 [!code-cpp[ActivatorX#1](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#1)]
 [!code-csharp[ActivatorX#1](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#1)]
 [!code-vb[ActivatorX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateComInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bb72d-129">名前を指定した COM オブジェクトのインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-129">Creates an instance of the COM object whose name is specified.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="bb72d-130">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-130">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="bb72d-131">推奨される型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-131">The name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-132">名前を指定したアセンブリ ファイルと、既定のコンストラクターを使用して、名前を指定した COM オブジェクトのインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-132">Creates an instance of the COM object whose name is specified, using the named assembly file and the default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-133">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-133">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-134">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="bb72d-134">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="bb72d-135">A<xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>属性の値`true`COM 型に明示的にも既定に適用する必要がありますので、<xref:System.Activator.CreateComInstanceFrom%2A>メソッドは、その型のインスタンスを作成できます。 それ以外の場合、<xref:System.TypeLoadException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb72d-135">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="bb72d-136">その他の呼び出されたメソッドによってスローされる例外については、の例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bb72d-136">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb72d-137">以降で、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、呼び出し元が許可されている場合は、非パブリックの型を作成するこのメソッドを使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックの型を含むアセンブリの許可セットは、呼び出し元の許可セット、またはそのサブセットに制限されているかどうか。</span><span class="sxs-lookup"><span data-stu-id="bb72d-137">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="bb72d-138">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="bb72d-138">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="bb72d-139">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb72d-139">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-140">
            <paramref name="typeName" /> または <paramref name="assemblyName" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-140">
              <paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-141">COM を使用してインスタンスを作成できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-141">An instance cannot be created through COM.</span>
          </span>
          <span data-ttu-id="bb72d-142">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-142">-or-</span>
          </span>
          <span data-ttu-id="bb72d-143">
            <paramref name="typename" /> が <paramref name="assemblyName" /> で見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-143">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="bb72d-144">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-144">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="bb72d-145">
            <paramref name="assemblyName" /> が見つからないか、読み込もうとしているモジュールにファイル名拡張子が指定されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-145">
              <paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-146">抽象クラスのインスタンスを作成できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-146">Cannot create an instance of an abstract class.</span>
          </span>
          <span data-ttu-id="bb72d-147">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-147">-or-</span>
          </span>
          <span data-ttu-id="bb72d-148">このメンバーは、遅延バインディング メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-148">This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb72d-149">呼び出し元は、<see cref="T:System.MarshalByRefObject" /> を継承しないオブジェクトのアクティベーション属性を提供できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-149">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bb72d-150">
            <paramref name="assemblyName" /> が空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-150">
              <paramref name="assemblyName" /> is the empty string ("").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-151">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-151">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="bb72d-152">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-152">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="bb72d-153">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-153">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="bb72d-154">推奨される型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-154">The name of the preferred type.</span>
          </span>
        </param>
        <param name="hashValue">
          <span data-ttu-id="bb72d-155">計算されたハッシュ コードの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-155">The value of the computed hash code.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="bb72d-156">ファイルのハッシュ処理および厳密な名前の生成に使用されるハッシュ アルゴリズム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-156">The hash algorithm used for hashing files and generating the strong name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-157">名前を指定したアセンブリ ファイルと、既定のコンストラクターを使用して、名前を指定した COM オブジェクトのインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-157">Creates an instance of the COM object whose name is specified, using the named assembly file and the default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-158">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-158">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-159">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="bb72d-159">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="bb72d-160">A<xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>属性の値`true`COM 型に明示的にも既定に適用する必要がありますので、<xref:System.Activator.CreateComInstanceFrom%2A>メソッドは、その型のインスタンスを作成できます。 それ以外の場合、<xref:System.TypeLoadException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb72d-160">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="bb72d-161">その他の呼び出されたメソッドによってスローされる例外については、の例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bb72d-161">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb72d-162">以降で、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、呼び出し元が許可されている場合は、非パブリックの型を作成するこのメソッドを使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックの型を含むアセンブリの許可セットは、呼び出し元の許可セット、またはそのサブセットに制限されているかどうか。</span><span class="sxs-lookup"><span data-stu-id="bb72d-162">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="bb72d-163">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="bb72d-163">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="bb72d-164">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb72d-164">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-165">
            <paramref name="typeName" /> または <paramref name="assemblyName" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-165">
              <paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bb72d-166">
            <paramref name="assemblyName" /> が空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-166">
              <paramref name="assemblyName" /> is the empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="bb72d-167">アセンブリまたはモジュールが 2 回読み込まれ、2 つの異なる証拠が出されました。あるいは、アセンブリ名が MAX_PATH の文字数を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-167">An assembly or module was loaded twice with two different evidences, or the assembly name is longer than MAX_PATH characters.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="bb72d-168">
            <paramref name="assemblyName" /> が見つからないか、読み込もうとしているモジュールにファイル名拡張子が指定されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-168">
              <paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="bb72d-169">
            <paramref name="assemblyName" /> が見つかりましたが、読み込めません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-169">
              <paramref name="assemblyName" /> is found but cannot be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="bb72d-170">
            <paramref name="assemblyName" /> は有効なアセンブリ名ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-170">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="bb72d-171">"file://" で始まっていないコードベースが、必須の <see langword="WebPermission" /> なしで指定されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-171">A code base that does not start with "file://" was specified without the required <see langword="WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-172">COM を使用してインスタンスを作成できません</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-172">An instance cannot be created through COM.</span>
          </span>
          <span data-ttu-id="bb72d-173">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-173">-or-</span>
          </span>
          <span data-ttu-id="bb72d-174">
            <paramref name="typename" /> が <paramref name="assemblyName" /> で見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-174">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="bb72d-175">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-175">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-176">抽象クラスのインスタンスを作成できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-176">An instance of an abstract class cannot be created.</span>
          </span>
          <span data-ttu-id="bb72d-177">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-177">-or-</span>
          </span>
          <span data-ttu-id="bb72d-178">このメンバーは、遅延バインディング メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-178">This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb72d-179">呼び出し元は、<see cref="T:System.MarshalByRefObject" /> を継承しないオブジェクトのアクティベーション属性を提供できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-179">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-180">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-180">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="bb72d-181">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-181">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="bb72d-182">file:// で始まる URI を読み取る。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-182">for reading a URI that begins with "file://".</span>
          </span>
          <span data-ttu-id="bb72d-183">関連する列挙。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-183">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="bb72d-184">file:// で始まらないする URI を読み取る。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-184">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bb72d-185">指定したパラメーターに最も一致するコンストラクターを使用して、指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-185">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
      </Parameters>
      <Docs>
        <param name="activationContext">
          <span data-ttu-id="bb72d-186">作成するオブジェクトを指定するアクティベーション コンテキスト オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-186">An activation context object that specifies the object to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-187">指定した <see cref="T:System.ActivationContext" /> オブジェクトによって決定される型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-187">Creates an instance of the type designated by the specified <see cref="T:System.ActivationContext" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-188">新しく作成されたオブジェクトにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-188">A handle that must be unwrapped to access the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-189">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="bb72d-189">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="bb72d-190">アクティブ化コンテキストは、ドメイン ポリシーを設定して、アプリケーション ベースのセキュリティ モデルを提供するマニフェストに基づくアクティベーションに使用されます。</span><span class="sxs-lookup"><span data-stu-id="bb72d-190">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="bb72d-191"><xref:System.ActivationContext>クラスに含まれる、<xref:System.ApplicationIdentity>アプリケーション マニフェストへのアクセスを提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb72d-191">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="bb72d-192">詳細については、<xref:System.Security.Policy.ApplicationSecurityManager> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="bb72d-192">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bb72d-193">作成するオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-193">The type of object to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-194">指定された型の既定のコンストラクターを使用して、指定された型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-194">Creates an instance of the specified type using that type's default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-195">新しく作成されたオブジェクトへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-195">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-196">呼び出されるコンス トラクターは、アクセスできる必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb72d-196">The constructor to be invoked must be accessible.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb72d-197">以降で、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が付与されている非パブリックの型へのアクセスに使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックの型を含むアセンブリの許可セットは、呼び出し元の許可セットまたはそのサブセットに制限されています。</span><span class="sxs-lookup"><span data-stu-id="bb72d-197">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="bb72d-198">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="bb72d-198">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="bb72d-199">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb72d-199">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb72d-200">次のコード例を呼び出す方法を示しています、<xref:System.Activator.CreateInstance%28System.Type%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bb72d-200">The following code example demonstrates how to call the <xref:System.Activator.CreateInstance%28System.Type%29> method.</span></span> <span data-ttu-id="bb72d-201">さまざまな種類のインスタンスが作成され、その既定値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="bb72d-201">Instances of several different types are created and their default values are displayed.</span></span>  
  
 [!code-cpp[ActivatorX#4](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/source2.cpp#4)]
 [!code-csharp[ActivatorX#4](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/source2.cs#4)]
 [!code-vb[ActivatorX#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/source2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-202">
            <paramref name="type" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-202">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bb72d-203">
            <paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-203">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="bb72d-204">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-204">-or-</span>
          </span>
          <span data-ttu-id="bb72d-205">
            <paramref name="type" /> はオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-205">
              <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb72d-206">
            <paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-206">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="bb72d-207">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-207">-or-</span>
          </span>
          <span data-ttu-id="bb72d-208">
            <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-208">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="bb72d-209">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-209">-or-</span>
          </span>
          <span data-ttu-id="bb72d-210">
            <paramref name="type" /> を格納するアセンブリは <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> を使用して作成された動的アセンブリです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-210">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="bb72d-211">呼び出されるコンストラクターは例外をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-211">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="bb72d-212">[Windows ストア アプリ用 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) または[ポータブル クラス ライブラリ](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)では、基本クラスの例外である <see cref="T:System.MemberAccessException" /> を代わりにキャッチします。</span>
              <span class="sxs-lookup">
                <span data-stu-id="bb72d-212">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="bb72d-213">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-213">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-214">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-214">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="bb72d-215">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-215">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="bb72d-216">[Windows ストア アプリ用 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) または[ポータブル クラス ライブラリ](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)では、基本クラスの例外である <see cref="T:System.MissingMemberException" /> を代わりにキャッチします。</span>
              <span class="sxs-lookup">
                <span data-stu-id="bb72d-216">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="bb72d-217">一致するパブリック コンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-217">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="bb72d-218">
            <paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-218">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-219">
            <paramref name="type" /> は有効な型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-219">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb72d-220">アンマネージ コードを呼び出すデリゲートのインスタンスを作成するときに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-220">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="bb72d-221">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-221">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-222">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-222">for accessing nonpublic types regardless of their grant sets.</span>
          </span>
          <span data-ttu-id="bb72d-223">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-223">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext, string[] activationCustomData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext, cli::array &lt;System::String ^&gt; ^ activationCustomData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
        <Parameter Name="activationCustomData" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="activationContext">
          <span data-ttu-id="bb72d-224">作成するオブジェクトを指定するアクティベーション コンテキスト オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-224">An activation context object that specifies the object to create.</span>
          </span>
        </param>
        <param name="activationCustomData">
          <span data-ttu-id="bb72d-225">カスタム アクティベーション データを格納する Unicode 文字列の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-225">An array of Unicode strings that contain custom activation data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-226">指定した <see cref="T:System.ActivationContext" /> オブジェクトによって決定され、指定したカスタム アクティベーション データによってアクティブにされる型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-226">Creates an instance of the type that is designated by the specified <see cref="T:System.ActivationContext" /> object and activated with the specified custom activation data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-227">新しく作成されたオブジェクトにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-227">A handle that must be unwrapped to access the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-228">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="bb72d-228">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="bb72d-229">アクティブ化コンテキストは、ドメイン ポリシーを設定して、アプリケーション ベースのセキュリティ モデルを提供するマニフェストに基づくアクティベーションに使用されます。</span><span class="sxs-lookup"><span data-stu-id="bb72d-229">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="bb72d-230"><xref:System.ActivationContext>クラスに含まれる、<xref:System.ApplicationIdentity>アプリケーション マニフェストへのアクセスを提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb72d-230">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="bb72d-231">詳細については、<xref:System.Security.Policy.ApplicationSecurityManager> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="bb72d-231">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="bb72d-232">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-232">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="bb72d-233">
            <c>assemblyName</c> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-233">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="bb72d-234">必要な型の完全修飾名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-234">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-235">名前を指定したアセンブリと、既定のコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-235">Creates an instance of the type whose name is specified, using the named assembly and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-236">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-236">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-237">使用して<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-237">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
 <span data-ttu-id="bb72d-238">`assemblyName` 次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="bb72d-238">`assemblyName` can be either of the following:</span></span>  
  
-   <span data-ttu-id="bb72d-239">パスまたはファイル拡張子の付かない、アセンブリの簡易名。</span><span class="sxs-lookup"><span data-stu-id="bb72d-239">The simple name of an assembly, without its path or file extension.</span></span> <span data-ttu-id="bb72d-240">たとえばは指定`TypeExtensions`.\bin\TypeExtensions.dll を持つパスと名前はアセンブリのです。</span><span class="sxs-lookup"><span data-stu-id="bb72d-240">For example, you would specify `TypeExtensions` for an assembly whose path and name are .\bin\TypeExtensions.dll.</span></span>  
  
-   <span data-ttu-id="bb72d-241">簡易名、バージョン、カルチャ、およびパブリック キー トークンの署名されたアセンブリの完全名たとえば、"TypeExtensions、バージョン 1.0.0.0、カルチャを = = neutral, PublicKeyToken = 181869f2f7435b51"です。</span><span class="sxs-lookup"><span data-stu-id="bb72d-241">The full name of a signed assembly, which consists of its simple name, version, culture, and public key token; for example, "TypeExtensions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=181869f2f7435b51".</span></span>  
  
 <span data-ttu-id="bb72d-242">共通言語ランタイムがどのようにを識別し、アセンブリを読み込む方法については、次を参照してください。[ランタイムがアセンブリを検索する方法](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md)です。</span><span class="sxs-lookup"><span data-stu-id="bb72d-242">For more information on how the common language runtime identifies and loads assemblies, see [How the Runtime Locates Assemblies](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span></span> <span data-ttu-id="bb72d-243">アプリケーション構成ファイルを使用して、アセンブリの場所を定義する方法については、次を参照してください。[アセンブリの場所を指定する](~/docs/framework/configure-apps/specify-assembly-location.md)です。</span><span class="sxs-lookup"><span data-stu-id="bb72d-243">For information on using the application configuration file to define assembly locations, see [Specifying an Assembly's Location](~/docs/framework/configure-apps/specify-assembly-location.md).</span></span> <span data-ttu-id="bb72d-244">場合`assemblyName`が見つかると、既定のコンテキストに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="bb72d-244">If `assemblyName` is found, it is loaded in the default context.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb72d-245">以降で、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、呼び出し元が許可されている場合は、非パブリックの型を作成するこのメソッドを使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックの型を含むアセンブリの許可セットは、呼び出し元の許可セット、またはそのサブセットに制限されているかどうか。</span><span class="sxs-lookup"><span data-stu-id="bb72d-245">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="bb72d-246">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="bb72d-246">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="bb72d-247">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb72d-247">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb72d-248">次の例は、という名前のクラスを定義`Person`という名前のアセンブリで`PersonInfo`です。</span><span class="sxs-lookup"><span data-stu-id="bb72d-248">The following example defines a class named `Person` in an assembly named `PersonInfo`.</span></span> <span data-ttu-id="bb72d-249">なお、`Person`クラスにはパラメーターなしのうちの 1 つ、2 つのコンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="bb72d-249">Note that the `Person` class has two constructors, one of which is parameterless.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/personinfo.cs#1)]
 [!code-vb[System.Activator.CreateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/personinfo.vb#1)]  
  
 <span data-ttu-id="bb72d-250">次の例では、<xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29>をインスタンス化するメソッド、`Person`クラスです。</span><span class="sxs-lookup"><span data-stu-id="bb72d-250">The following example calls the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method to instantiate the `Person` class.</span></span> <span data-ttu-id="bb72d-251">プロジェクトに追加する PersonInfo.dll への参照が必要です。</span><span class="sxs-lookup"><span data-stu-id="bb72d-251">It requires a reference to PersonInfo.dll to be added to the project.</span></span> <span data-ttu-id="bb72d-252"><xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29>メソッドの呼び出し、`Person`クラスの既定のコンス トラクターに値を割り当てます例では、その`Name`プロパティです。</span><span class="sxs-lookup"><span data-stu-id="bb72d-252">Because the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method calls the `Person` class default constructor,  the example assigns a value to its `Name` property.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1.cs#2)]
 [!code-vb[System.Activator.CreateInstance#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1.vb#2)]  
  
 <span data-ttu-id="bb72d-253">ただし、<xref:System.Activator.CreateInstance%2A>頻繁に呼び出され、コンピューターの境界を越えることかされるデザイン時に不明の型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-253">However, <xref:System.Activator.CreateInstance%2A> is frequently called to instantiate a type that crosses machine boundaries or that is not known at design time.</span></span> <span data-ttu-id="bb72d-254">この場合、プロジェクトのアセンブリへの参照を含めることはできませんし、型のメンバーへの事前バインディングされた呼び出しを行うことはできません。</span><span class="sxs-lookup"><span data-stu-id="bb72d-254">In this case, you cannot include a reference to the assembly in the project and cannot make early-bound calls to the type's members.</span></span> <span data-ttu-id="bb72d-255">この制限を回避するには、次の例を使用して、<xref:System.Activator.CreateInstance%2A>メソッドに値を代入するためにリフレクションと、`Person`オブジェクトの`Name`プロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-255">To work around this limitation, the following example uses the <xref:System.Activator.CreateInstance%2A> method along with reflection to assign a value to the `Person` object's `Name` property and to display its value.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1a.cs#3)]
 [!code-vb[System.Activator.CreateInstance#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1a.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-256">
            <paramref name="typeName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-256">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="bb72d-257">一致するパブリック コンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-257">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-258">
            <paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-258">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="bb72d-259">
            <paramref name="assemblyName" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-259">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="bb72d-260">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-260">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-261">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-261">You cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="bb72d-262">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-262">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="bb72d-263">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-263">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb72d-264">
            <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-264">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="bb72d-265">
            <paramref name="assemblyName" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-265">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="bb72d-266">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-266">-or-</span>
          </span>
          <span data-ttu-id="bb72d-267">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-267">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="bb72d-268">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-268">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="bb72d-269">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-269">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="bb72d-270">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-270">-or-</span>
          </span>
          <span data-ttu-id="bb72d-271">アセンブリ名かコード ベースが正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-271">The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb72d-272">アンマネージ コードを呼び出すデリゲートのインスタンスを作成するときに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-272">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="bb72d-273">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-273">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-274">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-274">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="bb72d-275">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-275">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, bool nonPublic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bb72d-276">作成するオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-276">The type of object to create.</span>
          </span>
        </param>
        <param name="nonPublic">
          <span data-ttu-id="bb72d-277">パブリックまたはパブリックでない既定コンストラクターを一致させる場合は <see langword="true" />。パブリックの既定コンストラクターだけを一致させる場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-277">
              <see langword="true" /> if a public or nonpublic default constructor can match; <see langword="false" /> if only a public default constructor can match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-278">指定された型の既定のコンストラクターを使用して、指定された型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-278">Creates an instance of the specified type using that type's default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-279">新しく作成されたオブジェクトへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-279">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb72d-280">以降で、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、非パブリックの型とメンバーにアクセスすると、呼び出し元が許可されている場合にこのメソッドを使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックの型とメンバーを含むアセンブリの許可セットは、呼び出し元の許可セットまたはそのサブセットに制限されています。</span><span class="sxs-lookup"><span data-stu-id="bb72d-280">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="bb72d-281">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="bb72d-281">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="bb72d-282">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb72d-282">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-283">
            <paramref name="type" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-283">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bb72d-284">
            <paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-284">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="bb72d-285">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-285">-or-</span>
          </span>
          <span data-ttu-id="bb72d-286">
            <paramref name="type" /> はオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-286">
              <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb72d-287">
            <paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-287">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="bb72d-288">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-288">-or-</span>
          </span>
          <span data-ttu-id="bb72d-289">
            <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-289">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="bb72d-290">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-290">-or-</span>
          </span>
          <span data-ttu-id="bb72d-291">
            <paramref name="type" /> を格納するアセンブリは <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> を使用して作成された動的アセンブリです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-291">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="bb72d-292">呼び出されるコンストラクターは例外をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-292">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="bb72d-293">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-293">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-294">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-294">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="bb72d-295">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-295">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="bb72d-296">一致するパブリック コンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-296">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="bb72d-297">
            <paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-297">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-298">
            <paramref name="type" /> は有効な型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-298">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb72d-299">アンマネージ コードを呼び出すデリゲートのインスタンスを作成するときに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-299">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="bb72d-300">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-300">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-301">非パブリックの型と許可に関係なくメンバーにアクセスするため次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-301">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="bb72d-302">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-302">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bb72d-303">作成するオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-303">The type of object to create.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="bb72d-304">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-304">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="bb72d-305">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-305">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-306">指定したパラメーターに最も一致するコンストラクターを使用して、指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-306">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-307">新しく作成されたオブジェクトへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-307">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-308">呼び出されるコンス トラクターは、アクセスできる必要があり、指定した引数リストを最も具体的な一致を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb72d-308">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb72d-309">以降で、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が付与されている非パブリックの型へのアクセスに使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックの型を含むアセンブリの許可セットは、呼び出し元の許可セットまたはそのサブセットに制限されています。</span><span class="sxs-lookup"><span data-stu-id="bb72d-309">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="bb72d-310">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="bb72d-310">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="bb72d-311">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb72d-311">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb72d-312">次の例では、<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29>メソッドを作成、<xref:System.String>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb72d-312">The following example calls the  <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to create a <xref:System.String> object.</span></span> <span data-ttu-id="bb72d-313">呼び出す、 <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> 14 番目の位置から文字配列から 10 個の要素を表す文字列をインスタンス化するコンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="bb72d-313">It calls the <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor to instantiate a string that contains ten elements from a character array starting at the fourteenth position.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/CreateInstance5.cs#5)]
 [!code-vb[System.Activator.CreateInstance#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/CreateInstance5.vb#5)]  
  
 <span data-ttu-id="bb72d-314">次の例は、要素に渡される引数は、ジャグ配列を作成、<xref:System.String>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="bb72d-314">The following example creates a jagged array whose elements are arguments to be passed to a <xref:System.String> constructor.</span></span> <span data-ttu-id="bb72d-315">各配列を渡します、<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29>に適切な文字列のコンス トラクターを呼び出すメソッド。</span><span class="sxs-lookup"><span data-stu-id="bb72d-315">The example then passes each array to the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to invoke the appropriate string constructor.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstance2.cs#4)]
 [!code-vb[System.Activator.CreateInstance#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstance2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-316">
            <paramref name="type" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-316">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bb72d-317">
            <paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-317">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="bb72d-318">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-318">-or-</span>
          </span>
          <span data-ttu-id="bb72d-319">
            <paramref name="type" /> はオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-319">
              <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb72d-320">
            <paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-320">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="bb72d-321">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-321">-or-</span>
          </span>
          <span data-ttu-id="bb72d-322">
            <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-322">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="bb72d-323">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-323">-or-</span>
          </span>
          <span data-ttu-id="bb72d-324">
            <paramref name="type" /> を格納するアセンブリは、<see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> を使用して作成された動的アセンブリです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-324">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
          <span data-ttu-id="bb72d-325">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-325">-or-</span>
          </span>
          <span data-ttu-id="bb72d-326">
            <paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-326">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="bb72d-327">呼び出されるコンストラクターは例外をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-327">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="bb72d-328">[Windows ストア アプリ用 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) または[ポータブル クラス ライブラリ](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)では、基本クラスの例外である <see cref="T:System.MemberAccessException" /> を代わりにキャッチします。</span>
              <span class="sxs-lookup">
                <span data-stu-id="bb72d-328">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="bb72d-329">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-329">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-330">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-330">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="bb72d-331">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-331">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="bb72d-332">[Windows ストア アプリ用 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) または[ポータブル クラス ライブラリ](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)では、基本クラスの例外である <see cref="T:System.MissingMemberException" /> を代わりにキャッチします。</span>
              <span class="sxs-lookup">
                <span data-stu-id="bb72d-332">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="bb72d-333">一致するパブリック コンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-333">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="bb72d-334">
            <paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-334">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-335">
            <paramref name="type" /> は有効な型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-335">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb72d-336">アンマネージ コードを呼び出すデリゲートのインスタンスを作成するときに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-336">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="bb72d-337">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-337">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-338">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-338">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="bb72d-339">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-339">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (domain As AppDomain, assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="bb72d-340">
            <c>typeName</c> という名前の型が作成されるリモート ドメイン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-340">The remote domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyName">
          <span data-ttu-id="bb72d-341">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-341">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="bb72d-342">
            <c>assemblyName</c> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-342">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="bb72d-343">必要な型の完全修飾名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-343">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-344">名前を指定したアセンブリと既定のコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-344">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-345">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-345">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-346">使用して<xref:System.Activator.CreateInstance%2A>ホストがセキュリティのアクセス許可が制限されているアプリケーション ドメインでコードを実行する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="bb72d-346">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="bb72d-347">使用して<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-347">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb72d-348">このメソッドを使用して<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>直前の呼び出し元に完全信頼を要求するようにします。</span><span class="sxs-lookup"><span data-stu-id="bb72d-348">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-349">
            <paramref name="typeName" /> または <paramref name="domain" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-349">
              <paramref name="typeName" /> or <paramref name="domain" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="bb72d-350">一致するパブリック コンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-350">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-351">
            <paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-351">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="bb72d-352">
            <paramref name="assemblyName" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-352">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="bb72d-353">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-353">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-354">抽象型のインスタンスは作成できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-354">Cannot create an instance of an abstract type.</span>
          </span>
          <span data-ttu-id="bb72d-355">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-355">-or-</span>
          </span>
          <span data-ttu-id="bb72d-356">このメンバーは、遅延バインディング メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-356">This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="bb72d-357">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-357">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="bb72d-358">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-358">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb72d-359">
            <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-359">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="bb72d-360">
            <paramref name="assemblyName" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-360">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="bb72d-361">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-361">-or-</span>
          </span>
          <span data-ttu-id="bb72d-362">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-362">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="bb72d-363">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-363">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="bb72d-364">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-364">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="bb72d-365">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-365">-or-</span>
          </span>
          <span data-ttu-id="bb72d-366">アセンブリ名かコード ベースが正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-366">The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb72d-367">アンマネージ コードを呼び出すデリゲートのインスタンスを作成するときに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-367">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="bb72d-368">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-368">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-369">すべての型のメンバーに対して操作の呼び出しに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-369">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="bb72d-370">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-370">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="bb72d-371">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-371">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="bb72d-372">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-372">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="bb72d-373">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-373">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="bb72d-374">
            <c>assemblyName</c> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-374">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="bb72d-375">必要な型の完全修飾名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-375">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="bb72d-376">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-376">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="bb72d-377">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-377">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="bb72d-378">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-378">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="bb72d-379">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-379">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="bb72d-380">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-380">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-381">名前を指定したアセンブリと、既定のコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-381">Creates an instance of the type whose name is specified, using the named assembly and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-382">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-382">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-383">使用して<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-383">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb72d-384">以降で、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、呼び出し元が許可されている場合は、非パブリックの型を作成するこのメソッドを使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックの型の許可セットは、呼び出し元の許可セット、またはそのサブセットに制限されているかどうか。</span><span class="sxs-lookup"><span data-stu-id="bb72d-384">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="bb72d-385">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="bb72d-385">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="bb72d-386">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb72d-386">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-387">
            <paramref name="typeName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-387">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="bb72d-388">一致するパブリック コンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-388">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-389">
            <paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-389">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="bb72d-390">
            <paramref name="assemblyName" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-390">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="bb72d-391">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-391">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-392">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-392">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="bb72d-393">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-393">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb72d-394">
            <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-394">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="bb72d-395">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-395">-or-</span>
          </span>
          <span data-ttu-id="bb72d-396">
            <paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-396">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="bb72d-397">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-397">-or-</span>
          </span>
          <span data-ttu-id="bb72d-398">
            <paramref name="activationAttributes" /> は <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> ではありません</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-398">
              <paramref name="activationAttributes" /> is not a <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /></span>
          </span>
          <span data-ttu-id="bb72d-399">配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-399">array.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="bb72d-400">
            <paramref name="assemblyName" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-400">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="bb72d-401">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-401">-or-</span>
          </span>
          <span data-ttu-id="bb72d-402">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-402">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="bb72d-403">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-403">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="bb72d-404">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-404">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="bb72d-405">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-405">-or-</span>
          </span>
          <span data-ttu-id="bb72d-406">使用できないアセンブリ名またはコード ベースです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-406">The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="bb72d-407">
            <paramref name="activationAttributes" /> で指定されたターゲットでリモート アクティベーションを試行したときにエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-407">An error occurred when attempting remote activation in a target specified in <paramref name="activationAttributes" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb72d-408">アンマネージ コードを呼び出すデリゲートのインスタンスを作成するときに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-408">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="bb72d-409">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-409">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-410">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-410">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="bb72d-411">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-411">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, object[] args, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bb72d-412">作成するオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-412">The type of object to create.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="bb72d-413">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-413">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="bb72d-414">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-414">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="bb72d-415">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-415">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="bb72d-416">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-416">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="bb72d-417">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-417">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="bb72d-418">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-418">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="bb72d-419">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-419">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-420">指定したパラメーターに最も一致するコンストラクターを使用して、指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-420">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-421">新しく作成されたオブジェクトへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-421">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-422">呼び出されるコンス トラクターは、アクセスできる必要があり、指定した引数リストを最も具体的な一致を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb72d-422">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb72d-423">以降で、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が付与されている非パブリックの型へのアクセスに使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックの型を含むアセンブリの許可セットは、呼び出し元の許可セットまたはそのサブセットに制限されています。</span><span class="sxs-lookup"><span data-stu-id="bb72d-423">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="bb72d-424">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="bb72d-424">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="bb72d-425">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb72d-425">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-426">
            <paramref name="type" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-426">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bb72d-427">
            <paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-427">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="bb72d-428">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-428">-or-</span>
          </span>
          <span data-ttu-id="bb72d-429">
            <paramref name="type" /> はオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-429">
              <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb72d-430">
            <paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-430">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="bb72d-431">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-431">-or-</span>
          </span>
          <span data-ttu-id="bb72d-432">
            <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-432">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="bb72d-433">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-433">-or-</span>
          </span>
          <span data-ttu-id="bb72d-434">
            <paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-434">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="bb72d-435">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-435">-or-</span>
          </span>
          <span data-ttu-id="bb72d-436">
            <paramref name="type" /> を格納するアセンブリは、<see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> を使用して作成された動的アセンブリです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-436">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
          <span data-ttu-id="bb72d-437">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-437">-or-</span>
          </span>
          <span data-ttu-id="bb72d-438">
            <paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-438">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="bb72d-439">呼び出されるコンストラクターは例外をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-439">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="bb72d-440">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-440">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-441">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-441">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="bb72d-442">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-442">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="bb72d-443">一致するパブリック コンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-443">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="bb72d-444">
            <paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-444">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-445">
            <paramref name="type" /> は有効な型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-445">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb72d-446">アンマネージ コードを呼び出すデリゲートのインスタンスを作成するときに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-446">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="bb72d-447">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-447">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-448">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-448">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="bb72d-449">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-449">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bb72d-450">作成するオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-450">The type of object to create.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="bb72d-451">
            <c>type</c> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-451">A combination of zero or more bit flags that affect the search for the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-452">
            <c>bindingAttr</c> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-452">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="bb72d-453">
            <c>bindingAttr</c> と <c>args</c> を使用して、<c>type</c> コンストラクターをシークおよび識別するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-453">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-454">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-454">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="bb72d-455">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-455">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="bb72d-456">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-456">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="bb72d-457">
            <c>args</c> から <c>type</c> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-457">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-458">
            <c>culture</c>が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" />が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-458">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-459">指定したパラメーターに最も一致するコンストラクターを使用して、指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-459">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-460">新しく作成されたオブジェクトへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-460">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-461">呼び出されるコンス トラクターは、指定したバインダー、バインディング属性の制約の下で指定した引数リストを持つ最も具体的な一致を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb72d-461">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb72d-462">以降で、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、非パブリックの型とメンバーにアクセスすると、呼び出し元が許可されている場合にこのメソッドを使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックの型とメンバーを含むアセンブリの許可セットは、呼び出し元の許可セットまたはそのサブセットに制限されています。</span><span class="sxs-lookup"><span data-stu-id="bb72d-462">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="bb72d-463">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="bb72d-463">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="bb72d-464">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb72d-464">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-465">
            <paramref name="type" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-465">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bb72d-466">
            <paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-466">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="bb72d-467">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-467">-or-</span>
          </span>
          <span data-ttu-id="bb72d-468">
            <paramref name="type" /> はオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-468">
              <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb72d-469">
            <paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-469">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="bb72d-470">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-470">-or-</span>
          </span>
          <span data-ttu-id="bb72d-471">
            <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-471">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="bb72d-472">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-472">-or-</span>
          </span>
          <span data-ttu-id="bb72d-473">
            <paramref name="type" /> を格納するアセンブリは、<see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> を使用して作成された動的アセンブリです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-473">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
          <span data-ttu-id="bb72d-474">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-474">-or-</span>
          </span>
          <span data-ttu-id="bb72d-475">
            <paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-475">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="bb72d-476">呼び出されるコンストラクターは例外をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-476">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="bb72d-477">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-477">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-478">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-478">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="bb72d-479">COM 型が <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> 経由で取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-479">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="bb72d-480">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-480">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="bb72d-481">
            <paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-481">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-482">
            <paramref name="type" /> は有効な型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-482">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb72d-483">アンマネージ コードを呼び出すデリゲートのインスタンスを作成するときに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-483">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="bb72d-484">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-484">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-485">非パブリックの型と許可に関係なくメンバーにアクセスするため次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-485">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="bb72d-486">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-486">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bb72d-487">作成するオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-487">The type of object to create.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="bb72d-488">
            <c>type</c> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-488">A combination of zero or more bit flags that affect the search for the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-489">
            <c>bindingAttr</c> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-489">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="bb72d-490">
            <c>bindingAttr</c> と <c>args</c> を使用して、<c>type</c> コンストラクターをシークおよび識別するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-490">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-491">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-491">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="bb72d-492">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-492">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="bb72d-493">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-493">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="bb72d-494">
            <c>args</c> から <c>type</c> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-494">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-495">
            <c>culture</c>が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" />が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-495">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="bb72d-496">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-496">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="bb72d-497">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-497">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="bb72d-498">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-498">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="bb72d-499">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-499">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="bb72d-500">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-500">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-501">指定したパラメーターに最も一致するコンストラクターを使用して、指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-501">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-502">新しく作成されたオブジェクトへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-502">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-503">呼び出されるコンス トラクターは、指定したバインダー、バインディング属性の制約の下で指定した引数リストを持つ最も具体的な一致を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb72d-503">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb72d-504">以降で、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、非パブリックの型とメンバーにアクセスすると、呼び出し元が許可されている場合にこのメソッドを使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックの型とメンバーの許可セットは、呼び出し元の許可セットまたはそのサブセットに制限されています。</span><span class="sxs-lookup"><span data-stu-id="bb72d-504">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="bb72d-505">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="bb72d-505">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="bb72d-506">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb72d-506">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-507">
            <paramref name="type" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-507">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bb72d-508">
            <paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-508">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="bb72d-509">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-509">-or-</span>
          </span>
          <span data-ttu-id="bb72d-510">
            <paramref name="type" /> はオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-510">
              <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb72d-511">
            <paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-511">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="bb72d-512">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-512">-or-</span>
          </span>
          <span data-ttu-id="bb72d-513">
            <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-513">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="bb72d-514">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-514">-or-</span>
          </span>
          <span data-ttu-id="bb72d-515">
            <paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-515">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="bb72d-516">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-516">-or-</span>
          </span>
          <span data-ttu-id="bb72d-517">
            <paramref name="type" /> を格納するアセンブリは、<see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> を使用して作成された動的アセンブリです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-517">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
          <span data-ttu-id="bb72d-518">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-518">-or-</span>
          </span>
          <span data-ttu-id="bb72d-519">
            <paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-519">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="bb72d-520">呼び出されるコンストラクターは例外をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-520">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="bb72d-521">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-521">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-522">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-522">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="bb72d-523">COM 型が <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> 経由で取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-523">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="bb72d-524">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-524">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="bb72d-525">
            <paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-525">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-526">
            <paramref name="type" /> は有効な型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-526">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb72d-527">証拠を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-527">for supplying evidence.</span>
          </span>
          <span data-ttu-id="bb72d-528">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-528">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-529">非パブリックの型と許可に関係なくメンバーにアクセスするため次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-529">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="bb72d-530">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-530">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="bb72d-531">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-531">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="bb72d-532">
            <c>assemblyName</c> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-532">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="bb72d-533">必要な型の完全修飾名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-533">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="bb72d-534">
            <c>typeName</c> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-534">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="bb72d-535">
            <c>typeName</c> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-535">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-536">
            <c>bindingAttr</c> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-536">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="bb72d-537">
            <c>bindingAttr</c> と <c>args</c> を使用して、<c>typeName</c> コンストラクターをシークおよび識別するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-537">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-538">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-538">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="bb72d-539">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-539">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="bb72d-540">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-540">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="bb72d-541">
            <c>args</c> から <c>typeName</c> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-541">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-542">
            <c>culture</c>が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" />が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-542">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="bb72d-543">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-543">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="bb72d-544">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-544">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="bb72d-545">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-545">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="bb72d-546">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-546">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="bb72d-547">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-547">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-548">名前を指定したアセンブリと、指定したパラメーターに最も一致するコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-548">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-549">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-549">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-550">使用して<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-550">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb72d-551">以降で、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が許可されている場合、非パブリックの型とメンバーの作成に使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックの型とメンバーを含むアセンブリの許可セットは、呼び出し元の許可セット、またはそのサブセットに制限されているかどうか。</span><span class="sxs-lookup"><span data-stu-id="bb72d-551">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="bb72d-552">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)42d9dc2a-8fcc-4ff3-b002-4ff260ef3dc5)。</span><span class="sxs-lookup"><span data-stu-id="bb72d-552">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)42d9dc2a-8fcc-4ff3-b002-4ff260ef3dc5.)</span></span>  
>   
>  <span data-ttu-id="bb72d-553">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb72d-553">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-554">
            <paramref name="typeName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-554">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="bb72d-555">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-555">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-556">
            <paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-556">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="bb72d-557">
            <paramref name="assemblyName" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-557">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="bb72d-558">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-558">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-559">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-559">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="bb72d-560">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-560">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="bb72d-561">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-561">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb72d-562">
            <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-562">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="bb72d-563">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-563">-or-</span>
          </span>
          <span data-ttu-id="bb72d-564">
            <paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-564">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="bb72d-565">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-565">-or-</span>
          </span>
          <span data-ttu-id="bb72d-566">
            <paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-566">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="bb72d-567">
            <paramref name="assemblyName" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-567">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="bb72d-568">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-568">-or-</span>
          </span>
          <span data-ttu-id="bb72d-569">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-569">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="bb72d-570">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-570">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="bb72d-571">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-571">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="bb72d-572">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-572">-or-</span>
          </span>
          <span data-ttu-id="bb72d-573">アセンブリ名かコード ベースが正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-573">The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb72d-574">アンマネージ コードを呼び出すデリゲートのインスタンスを作成するときに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-574">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="bb72d-575">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-575">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-576">非パブリックの型と許可に関係なくメンバーにアクセスするため次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-576">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="bb72d-577">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-577">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="bb72d-578">
            <c>typeName</c> という名前の型が作成されるドメイン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-578">The domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyName">
          <span data-ttu-id="bb72d-579">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-579">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="bb72d-580">
            <c>assemblyName</c> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-580">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="bb72d-581">必要な型の完全修飾名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-581">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="bb72d-582">
            <c>typeName</c> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-582">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="bb72d-583">
            <c>typeName</c> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-583">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-584">
            <c>bindingAttr</c> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-584">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="bb72d-585">
            <c>bindingAttr</c> と <c>args</c> を使用して、<c>typeName</c> コンストラクターをシークおよび識別するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-585">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-586">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-586">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="bb72d-587">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-587">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="bb72d-588">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-588">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="bb72d-589">
            <c>args</c> から <c>typeName</c> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-589">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-590">
            <c>culture</c>が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" />が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-590">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="bb72d-591">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-591">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="bb72d-592">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-592">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="bb72d-593">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-593">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="bb72d-594">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-594">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="bb72d-595">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-595">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-596">名前を指定したアセンブリと、指定したパラメーターに最も適したコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-596">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-597">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-597">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-598">使用して<xref:System.Activator.CreateInstance%2A>ホストがセキュリティのアクセス許可が制限されているアプリケーション ドメインでコードを実行する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="bb72d-598">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="bb72d-599">使用して<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-599">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb72d-600">このメソッドを使用して<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>直前の呼び出し元に完全信頼を要求するようにします。</span><span class="sxs-lookup"><span data-stu-id="bb72d-600">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-601">
            <paramref name="domain" /> または <paramref name="typeName" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-601">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="bb72d-602">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-602">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-603">
            <paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-603">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="bb72d-604">
            <paramref name="assemblyName" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-604">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="bb72d-605">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-605">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-606">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-606">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="bb72d-607">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-607">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="bb72d-608">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-608">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb72d-609">
            <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-609">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="bb72d-610">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-610">-or-</span>
          </span>
          <span data-ttu-id="bb72d-611">
            <paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-611">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="bb72d-612">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-612">-or-</span>
          </span>
          <span data-ttu-id="bb72d-613">
            <paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-613">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="bb72d-614">
            <paramref name="assemblyName" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-614">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="bb72d-615">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-615">-or-</span>
          </span>
          <span data-ttu-id="bb72d-616">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-616">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="bb72d-617">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-617">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="bb72d-618">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-618">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="bb72d-619">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-619">-or-</span>
          </span>
          <span data-ttu-id="bb72d-620">アセンブリ名かコード ベースが正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-620">The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="bb72d-621">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-621">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="bb72d-622">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-622">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb72d-623">アンマネージ コードを呼び出すデリゲートのインスタンスを作成するときに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-623">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="bb72d-624">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-624">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-625">すべての型のメンバーに対して操作の呼び出しに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-625">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="bb72d-626">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-626">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="bb72d-627">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-627">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="bb72d-628">
            <c>assemblyName</c> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-628">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="bb72d-629">必要な型の完全修飾名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-629">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="bb72d-630">
            <c>typeName</c> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-630">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="bb72d-631">
            <c>typeName</c> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-631">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-632">
            <c>bindingAttr</c> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-632">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="bb72d-633">
            <c>bindingAttr</c> と <c>args</c> を使用して、<c>typeName</c> コンストラクターをシークおよび識別するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-633">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-634">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-634">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="bb72d-635">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-635">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="bb72d-636">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-636">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="bb72d-637">
            <c>args</c> から <c>typeName</c> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-637">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-638">
            <c>culture</c>が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" />が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-638">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="bb72d-639">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-639">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="bb72d-640">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-640">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="bb72d-641">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-641">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="bb72d-642">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-642">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="bb72d-643">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-643">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <param name="securityInfo">
          <span data-ttu-id="bb72d-644">セキュリティ ポリシーがコードに与えるアクセス許可を決定するために使用する情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-644">Information used to make security policy decisions and grant code permissions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-645">名前を指定したアセンブリと、指定したパラメーターに最も一致するコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-645">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-646">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-646">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-647">使用して<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-647">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb72d-648">以降で、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が許可されている場合、非パブリックの型とメンバーの作成に使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックの型とメンバーを含むアセンブリの許可セットは、呼び出し元の許可セット、またはそのサブセットに制限されているかどうか。</span><span class="sxs-lookup"><span data-stu-id="bb72d-648">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="bb72d-649">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="bb72d-649">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="bb72d-650">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb72d-650">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-651">
            <paramref name="typeName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-651">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="bb72d-652">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-652">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-653">
            <paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-653">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="bb72d-654">
            <paramref name="assemblyName" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-654">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="bb72d-655">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-655">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-656">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-656">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="bb72d-657">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-657">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="bb72d-658">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-658">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb72d-659">
            <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-659">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="bb72d-660">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-660">-or-</span>
          </span>
          <span data-ttu-id="bb72d-661">
            <paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-661">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="bb72d-662">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-662">-or-</span>
          </span>
          <span data-ttu-id="bb72d-663">
            <paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-663">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="bb72d-664">
            <paramref name="assemblyName" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-664">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="bb72d-665">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-665">-or-</span>
          </span>
          <span data-ttu-id="bb72d-666">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-666">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="bb72d-667">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-667">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="bb72d-668">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-668">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="bb72d-669">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-669">-or-</span>
          </span>
          <span data-ttu-id="bb72d-670">アセンブリ名かコード ベースが正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-670">The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb72d-671">アンマネージ コードを呼び出すデリゲートのインスタンスを作成するときに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-671">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="bb72d-672">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-672">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-673">非パブリックの型と許可に関係なくメンバーにアクセスするため次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-673">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="bb72d-674">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-674">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="bb72d-675">
            <c>typeName</c> という名前の型が作成されるドメイン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-675">The domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyName">
          <span data-ttu-id="bb72d-676">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-676">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="bb72d-677">
            <c>assemblyName</c> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-677">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="bb72d-678">必要な型の完全修飾名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-678">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="bb72d-679">
            <c>typeName</c> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-679">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="bb72d-680">
            <c>typeName</c> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-680">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-681">
            <c>bindingAttr</c> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-681">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="bb72d-682">
            <c>bindingAttr</c> と <c>args</c> を使用して、<c>typeName</c> コンストラクターをシークおよび識別するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-682">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-683">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-683">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="bb72d-684">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-684">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="bb72d-685">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-685">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="bb72d-686">
            <c>args</c> から <c>typeName</c> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-686">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-687">
            <c>culture</c>が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" />が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-687">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="bb72d-688">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-688">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="bb72d-689">通常、これは単一の <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-689">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object.</span>
          </span>
          <span data-ttu-id="bb72d-690">
            <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> により、リモート オブジェクトのアクティブ化に必要な URL が指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-690">The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object.</span>
          </span>
        </param>
        <param name="securityAttributes">
          <span data-ttu-id="bb72d-691">セキュリティ ポリシーがコードに与えるアクセス許可を決定するために使用する情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-691">Information used to make security policy decisions and grant code permissions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-692">名前を指定したアセンブリと、指定したパラメーターに最も適したコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-692">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-693">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-693">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-694">使用して<xref:System.Activator.CreateInstance%2A>ホストがセキュリティのアクセス許可が制限されているアプリケーション ドメインでコードを実行する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="bb72d-694">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="bb72d-695">使用して<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-695">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb72d-696">このメソッドを使用して<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>直前の呼び出し元に完全信頼を要求するようにします。</span><span class="sxs-lookup"><span data-stu-id="bb72d-696">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-697">
            <paramref name="domain" /> または <paramref name="typeName" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-697">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="bb72d-698">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-698">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-699">
            <paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-699">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="bb72d-700">
            <paramref name="assemblyName" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-700">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="bb72d-701">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-701">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-702">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-702">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="bb72d-703">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-703">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="bb72d-704">
            <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-704">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb72d-705">
            <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-705">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="bb72d-706">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-706">-or-</span>
          </span>
          <span data-ttu-id="bb72d-707">
            <paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-707">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="bb72d-708">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-708">-or-</span>
          </span>
          <span data-ttu-id="bb72d-709">
            <paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-709">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="bb72d-710">
            <paramref name="assemblyName" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-710">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="bb72d-711">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-711">-or-</span>
          </span>
          <span data-ttu-id="bb72d-712">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-712">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="bb72d-713">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-713">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="bb72d-714">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-714">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="bb72d-715">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-715">-or-</span>
          </span>
          <span data-ttu-id="bb72d-716">アセンブリ名かコード ベースが正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-716">The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb72d-717">アンマネージ コードを呼び出すデリゲートのインスタンスを作成するときに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-717">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="bb72d-718">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-718">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-719">すべての型のメンバーに対して操作の呼び出しに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-719">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="bb72d-720">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-720">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="bb72d-721">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-721">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="bb72d-722">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-722">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T CreateInstance&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T CreateInstance&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T CreateInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="bb72d-723">作成する型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-723">The type to create.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="bb72d-724">パラメーターなしのコンストラクターを使用して、指定されたジェネリック型パラメーターによって決定される型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-724">Creates an instance of the type designated by the specified generic type parameter, using the parameterless constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-725">新しく作成されたオブジェクトへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-725">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-726"><xref:System.Activator.CreateInstance%60%601>ジェネリック メソッドは、型パラメーターによって指定された型のインスタンス化を実装するコンパイラで使用します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-726">The <xref:System.Activator.CreateInstance%60%601> generic method is used by compilers to implement the instantiation of types specified by type parameters.</span></span> <span data-ttu-id="bb72d-727">たとえば、次のジェネリック メソッドの実装で`new T()`(`gcnew T()` C++ で) を使用して、<xref:System.Activator.CreateInstance%60%601>ジェネリック メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bb72d-727">For example, in the following generic method, the implementation of `new T()` (`gcnew T()` in C++) uses the <xref:System.Activator.CreateInstance%60%601> generic method.</span></span>  
  
 [!code-cpp[System.Activation.CreateInstance~~1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cpp/remarks.cpp#1)]
 [!code-csharp[System.Activation.CreateInstance~~1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cs/remarks.cs#1)]
 [!code-vb[System.Activation.CreateInstance~~1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activation.createinstance~~1/vb/remarks.vb#1)]  
  
 <span data-ttu-id="bb72d-728">一般の使用はありません、<xref:System.Activator.CreateInstance%60%601>型は、コンパイル時に確認する必要があるため、アプリケーションでのジェネリック メソッドのコードします。</span><span class="sxs-lookup"><span data-stu-id="bb72d-728">In general, there is no use for the <xref:System.Activator.CreateInstance%60%601> generic method in application code, because the type must be known at compile time.</span></span> <span data-ttu-id="bb72d-729">コンパイル時に、型がわかっている場合は、通常のインスタンス化構文を使用できます (`new` 、C# の場合は、演算子`New`Visual basic で`gcnew`C++ で)。</span><span class="sxs-lookup"><span data-stu-id="bb72d-729">If the type is known at compile time, normal instantiation syntax can be used (`new` operator in C#, `New` in Visual Basic, `gcnew` in C++).</span></span> <span data-ttu-id="bb72d-730">コンパイル時に、型が不明な場合は、非ジェネリック オーバー ロードを呼び出すことができます<xref:System.Activator.CreateInstance%2A>です。</span><span class="sxs-lookup"><span data-stu-id="bb72d-730">If the type is not known at compile time, you can call a non-generic overload of <xref:System.Activator.CreateInstance%2A>.</span></span>  
  
 <span data-ttu-id="bb72d-731">オーバー ロードはありません、<xref:System.Activator.CreateInstance%60%601>ジェネリック メソッドを非ジェネリックのオーバー ロードがあるために、引数リストを受け取る<xref:System.Activator.CreateInstance%2A>既に遅延バインディングのコンス トラクターの解像度を指定します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-731">There are no overloads of the <xref:System.Activator.CreateInstance%60%601> generic method that take argument lists, because the non-generic overloads of <xref:System.Activator.CreateInstance%2A> already provide late-bound constructor resolution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMethodException">
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="bb72d-732">[Windows ストア アプリ用 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) または[ポータブル クラス ライブラリ](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)では、基本クラスの例外である <see cref="T:System.MissingMemberException" /> を代わりにキャッチします。</span>
              <span class="sxs-lookup">
                <span data-stu-id="bb72d-732">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="bb72d-733">
            <paramref name="T" /> に指定された型にはパラメーターなしのコンストラクターがありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-733">The type that is specified for <paramref name="T" /> does not have a parameterless constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bb72d-734">名前を指定したアセンブリ ファイルと、指定したパラメーターに最も一致するコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-734">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="bb72d-735">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-735">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="bb72d-736">推奨される型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-736">The name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-737">名前を指定したアセンブリ ファイルと、既定のコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-737">Creates an instance of the type whose name is specified, using the named assembly file and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-738">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-738">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-739">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="bb72d-739">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="bb72d-740">その他の呼び出されたメソッドによってスローされる例外については、の例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bb72d-740">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb72d-741">次のコード例を呼び出す方法を示しています、<xref:System.Activator.CreateInstanceFrom%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bb72d-741">The following code example demonstrates how to call the <xref:System.Activator.CreateInstanceFrom%2A> method.</span></span> <span data-ttu-id="bb72d-742">このコード例に示されている例の一部である、<xref:System.Activator>クラスです。</span><span class="sxs-lookup"><span data-stu-id="bb72d-742">This code example is part of a larger example provided for the <xref:System.Activator> class.</span></span>  
  
 [!code-cpp[ActivatorX#3](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#3)]
 [!code-csharp[ActivatorX#3](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#3)]
 [!code-vb[ActivatorX#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-743">
            <paramref name="typeName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-743">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="bb72d-744">一致するパブリック コンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-744">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-745">
            <paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-745">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="bb72d-746">
            <paramref name="assemblyFile" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-746">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="bb72d-747">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-747">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-748">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-748">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="bb72d-749">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-749">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="bb72d-750">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-750">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="bb72d-751">
            <paramref name="assemblyFile" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-751">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="bb72d-752">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-752">-or-</span>
          </span>
          <span data-ttu-id="bb72d-753">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-753">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="bb72d-754">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-754">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb72d-755">アンマネージ コードを呼び出すデリゲートのインスタンスを作成するときに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-755">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="bb72d-756">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-756">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="bb72d-757">ディレクトリ パスを検索し、その内容を読み取る権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-757">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="bb72d-758">関連する列挙:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-758">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-759">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-759">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="bb72d-760">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-760">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (domain As AppDomain, assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="bb72d-761">
            <c>typeName</c> という名前の型が作成されるリモート ドメイン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-761">The remote domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyFile">
          <span data-ttu-id="bb72d-762">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-762">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="bb72d-763">推奨される型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-763">The name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-764">名前を指定したアセンブリ ファイルと既定のコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-764">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-765">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-765">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-766">使用して<xref:System.Activator.CreateInstanceFrom%2A>ホストがセキュリティのアクセス許可が制限されているアプリケーション ドメインでコードを実行する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="bb72d-766">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="bb72d-767">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="bb72d-767">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb72d-768">このメソッドを使用して<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>直前の呼び出し元に完全信頼を要求するようにします。</span><span class="sxs-lookup"><span data-stu-id="bb72d-768">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="bb72d-769">その他の呼び出されたメソッドによってスローされる例外については、の例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bb72d-769">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-770">
            <paramref name="domain" /> または <paramref name="typeName" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-770">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="bb72d-771">一致するパブリック コンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-771">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-772">
            <paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-772">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="bb72d-773">
            <paramref name="assemblyFile" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-773">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="bb72d-774">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-774">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-775">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-775">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="bb72d-776">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-776">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="bb72d-777">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-777">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="bb72d-778">
            <paramref name="assemblyFile" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-778">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="bb72d-779">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-779">-or-</span>
          </span>
          <span data-ttu-id="bb72d-780">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-780">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="bb72d-781">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-781">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb72d-782">アンマネージ コードを呼び出すデリゲートのインスタンスを作成するときに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-782">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="bb72d-783">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-783">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="bb72d-784">ディレクトリ パスを検索し、その内容を読み取る権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-784">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="bb72d-785">関連する列挙:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-785">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="bb72d-786">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-786">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="bb72d-787">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-787">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="bb72d-788">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-788">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="bb72d-789">推奨される型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-789">The name of the preferred type.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="bb72d-790">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-790">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="bb72d-791">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-791">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="bb72d-792">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-792">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="bb72d-793">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-793">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="bb72d-794">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-794">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-795">名前を指定したアセンブリ ファイルと、既定のコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-795">Creates an instance of the type whose name is specified, using the named assembly file and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-796">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-796">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-797">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="bb72d-797">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="bb72d-798">その他の呼び出されたメソッドによってスローされる例外については、の例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bb72d-798">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-799">
            <paramref name="typeName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-799">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="bb72d-800">一致するパブリック コンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-800">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-801">
            <paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-801">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="bb72d-802">
            <paramref name="assemblyFile" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-802">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="bb72d-803">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-803">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-804">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-804">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="bb72d-805">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-805">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb72d-806">
            <paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-806">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="bb72d-807">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-807">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="bb72d-808">
            <paramref name="assemblyFile" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-808">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="bb72d-809">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-809">-or-</span>
          </span>
          <span data-ttu-id="bb72d-810">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-810">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="bb72d-811">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-811">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb72d-812">アンマネージ コードを呼び出すデリゲートのインスタンスを作成するときに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-812">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="bb72d-813">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-813">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="bb72d-814">ディレクトリ パスを検索し、その内容を読み取る権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-814">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="bb72d-815">関連する列挙:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-815">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-816">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-816">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="bb72d-817">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-817">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="bb72d-818">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-818">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="bb72d-819">推奨される型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-819">The name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="bb72d-820">
            <c>typeName</c> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-820">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="bb72d-821">
            <c>typeName</c> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-821">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-822">
            <c>bindingAttr</c> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-822">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="bb72d-823">
            <c>bindingAttr</c> と <c>args</c> を使用して、<c>typeName</c> コンストラクターをシークおよび識別するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-823">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-824">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-824">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="bb72d-825">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-825">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="bb72d-826">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-826">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="bb72d-827">
            <c>args</c> から <c>typeName</c> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-827">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-828">
            <c>culture</c>が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" />が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-828">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="bb72d-829">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-829">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="bb72d-830">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-830">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="bb72d-831">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-831">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="bb72d-832">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-832">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="bb72d-833">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-833">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-834">名前を指定したアセンブリ ファイルと、指定したパラメーターに最も一致するコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-834">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-835">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-835">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-836">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="bb72d-836">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="bb72d-837">その他の呼び出されたメソッドによってスローされる例外については、の例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bb72d-837">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-838">
            <paramref name="typeName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-838">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="bb72d-839">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-839">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-840">
            <paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-840">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="bb72d-841">
            <paramref name="assemblyFile" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-841">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="bb72d-842">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-842">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-843">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-843">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="bb72d-844">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-844">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="bb72d-845">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-845">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb72d-846">
            <paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-846">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="bb72d-847">
            <paramref name="assemblyFile" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-847">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="bb72d-848">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-848">-or-</span>
          </span>
          <span data-ttu-id="bb72d-849">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-849">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="bb72d-850">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-850">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb72d-851">アンマネージ コードを呼び出すデリゲートのインスタンスを作成するときに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-851">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="bb72d-852">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-852">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="bb72d-853">ディレクトリ パスを検索し、その内容を読み取る権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-853">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="bb72d-854">関連する列挙:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-854">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-855">非パブリックの型と許可に関係なくメンバーにアクセスするため次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-855">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="bb72d-856">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-856">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="bb72d-857">
            <c>typeName</c> という名前の型が作成されるリモート ドメイン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-857">The remote domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyFile">
          <span data-ttu-id="bb72d-858">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-858">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="bb72d-859">推奨される型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-859">The name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="bb72d-860">
            <c>typeName</c> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-860">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="bb72d-861">
            <c>typeName</c> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-861">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-862">
            <c>bindingAttr</c> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-862">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="bb72d-863">
            <c>bindingAttr</c> と <c>args</c> を使用して、<c>typeName</c> コンストラクターをシークおよび識別するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-863">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-864">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-864">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="bb72d-865">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-865">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="bb72d-866">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-866">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="bb72d-867">
            <c>args</c> から <c>typeName</c> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-867">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-868">
            <c>culture</c>が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" />が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-868">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="bb72d-869">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-869">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="bb72d-870">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-870">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="bb72d-871">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-871">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="bb72d-872">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-872">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="bb72d-873">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-873">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-874">名前を指定したアセンブリ ファイルと、指定したパラメーターに最も適したコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-874">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-875">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-875">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-876">使用して<xref:System.Activator.CreateInstanceFrom%2A>ホストがセキュリティのアクセス許可が制限されているアプリケーション ドメインでコードを実行する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="bb72d-876">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="bb72d-877">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="bb72d-877">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="bb72d-878">その他の呼び出されたメソッドによってスローされる例外については、の例外セクションを参照して、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bb72d-878">For information about other exceptions that can be thrown by invoked methods, see the Exceptions sections of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-879">
            <paramref name="domain" /> または <paramref name="typeName" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-879">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="bb72d-880">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-880">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-881">
            <paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-881">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="bb72d-882">
            <paramref name="assemblyFile" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-882">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="bb72d-883">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-883">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-884">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-884">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="bb72d-885">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-885">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="bb72d-886">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-886">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb72d-887">
            <paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-887">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="bb72d-888">
            <paramref name="assemblyFile" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-888">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="bb72d-889">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-889">-or-</span>
          </span>
          <span data-ttu-id="bb72d-890">
            <paramref name="assemblyName" /> が、現在読み込まれているバージョンよりも新しいバージョンの共通言語ランタイムを対象としてコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-890">
              <paramref name="assemblyName" /> was compiled for a version of the common language runtime that is later than the version that is currently loaded.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb72d-891">証拠を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-891">for supplying evidence.</span>
          </span>
          <span data-ttu-id="bb72d-892">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-892">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="bb72d-893">ディレクトリ パスを検索し、その内容を読み取る権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-893">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="bb72d-894">関連する列挙:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-894">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-895">非パブリックの型と許可に関係なくメンバーにアクセスするため次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-895">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="bb72d-896">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-896">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="bb72d-897">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-897">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="bb72d-898">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-898">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="bb72d-899">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-899">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="bb72d-900">推奨される型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-900">The name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="bb72d-901">
            <c>typeName</c> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-901">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="bb72d-902">
            <c>typeName</c> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-902">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-903">
            <c>bindingAttr</c> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-903">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="bb72d-904">
            <c>bindingAttr</c> と <c>args</c> を使用して、<c>typeName</c> コンストラクターをシークおよび識別するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-904">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-905">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-905">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="bb72d-906">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-906">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="bb72d-907">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-907">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="bb72d-908">
            <c>args</c> から <c>typeName</c> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-908">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-909">
            <c>culture</c>が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" />が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-909">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="bb72d-910">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-910">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="bb72d-911">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-911">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="bb72d-912">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-912">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="bb72d-913">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-913">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="bb72d-914">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-914">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <param name="securityInfo">
          <span data-ttu-id="bb72d-915">セキュリティ ポリシーがコードに与えるアクセス許可を決定するために使用する情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-915">Information used to make security policy decisions and grant code permissions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-916">名前を指定したアセンブリ ファイルと、指定したパラメーターに最も一致するコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-916">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-917">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-917">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-918">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="bb72d-918">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="bb72d-919">その他の呼び出されたメソッドによってスローされる例外については、の例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bb72d-919">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-920">
            <paramref name="typeName" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-920">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="bb72d-921">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-921">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-922">
            <paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-922">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="bb72d-923">
            <paramref name="assemblyFile" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-923">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="bb72d-924">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-924">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-925">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-925">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="bb72d-926">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-926">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="bb72d-927">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-927">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb72d-928">
            <paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-928">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="bb72d-929">
            <paramref name="assemblyFile" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-929">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="bb72d-930">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-930">-or-</span>
          </span>
          <span data-ttu-id="bb72d-931">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-931">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="bb72d-932">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-932">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb72d-933">アンマネージ コードを呼び出すデリゲートのインスタンスを作成するときに必要なアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-933">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="bb72d-934">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-934">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="bb72d-935">ディレクトリ パスを検索し、その内容を読み取る権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-935">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="bb72d-936">関連する列挙:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-936">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-937">非パブリックの型と許可に関係なくメンバーにアクセスするため次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-937">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="bb72d-938">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-938">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Methods which use Evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="bb72d-939">
            <c>typeName</c> という名前の型が作成されるリモート ドメイン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-939">The remote domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyFile">
          <span data-ttu-id="bb72d-940">
            <c>typeName</c> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-940">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="bb72d-941">推奨される型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-941">The name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="bb72d-942">
            <c>typeName</c> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-942">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="bb72d-943">
            <c>typeName</c> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-943">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-944">
            <c>bindingAttr</c> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-944">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="bb72d-945">
            <c>bindingAttr</c> と <c>args</c> を使用して、<c>typeName</c> コンストラクターをシークおよび識別するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-945">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-946">
            <c>binder</c> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-946">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="bb72d-947">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-947">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="bb72d-948">
            <c>args</c> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-948">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="bb72d-949">
            <c>args</c> から <c>typeName</c> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-949">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="bb72d-950">
            <c>culture</c>が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" />が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-950">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="bb72d-951">アクティべーションに参加できる 1 つ以上の属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-951">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="bb72d-952">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-952">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="bb72d-953">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-953">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="bb72d-954">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-954">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="bb72d-955">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-955">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <param name="securityAttributes">
          <span data-ttu-id="bb72d-956">セキュリティ ポリシーがコードに与えるアクセス許可を決定するために使用する情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-956">Information used to make security policy decisions and grant code permissions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-957">名前を指定したアセンブリ ファイルと、指定したパラメーターに最も適したコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-957">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-958">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-958">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-959">使用して<xref:System.Activator.CreateInstanceFrom%2A>ホストがセキュリティのアクセス許可が制限されているアプリケーション ドメインでコードを実行する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="bb72d-959">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="bb72d-960">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="bb72d-960">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb72d-961">このメソッドを使用して<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>直前の呼び出し元に完全信頼を要求するようにします。</span><span class="sxs-lookup"><span data-stu-id="bb72d-961">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="bb72d-962">その他の呼び出されたメソッドによってスローされる例外については、の例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bb72d-962">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-963">
            <paramref name="domain" /> または <paramref name="typeName" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-963">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="bb72d-964">一致するコンストラクターが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-964">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="bb72d-965">
            <paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-965">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="bb72d-966">
            <paramref name="assemblyFile" /> が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-966">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="bb72d-967">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-967">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-968">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-968">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="bb72d-969">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-969">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="bb72d-970">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-970">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb72d-971">
            <paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-971">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="bb72d-972">
            <paramref name="assemblyFile" /> は正しいアセンブリではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-972">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="bb72d-973">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-973">-or-</span>
          </span>
          <span data-ttu-id="bb72d-974">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-974">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="bb72d-975">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-975">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb72d-976">証拠を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-976">for supplying evidence.</span>
          </span>
          <span data-ttu-id="bb72d-977">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-977">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="bb72d-978">ディレクトリ パスを検索し、その内容を読み取る権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-978">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="bb72d-979">関連する列挙:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-979">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="bb72d-980">非パブリックの型と許可に関係なくメンバーにアクセスするため次のように設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-980">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="bb72d-981">関連する列挙。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-981">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="bb72d-982">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-982">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="bb72d-983">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-983">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bb72d-984">既知のオブジェクト用または XML Web サービス用のプロキシを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-984">Creates a proxy for a well-known object or XML Web service.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bb72d-985">接続する既知のオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-985">The type of the well-known object to which you want to connect.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="bb72d-986">既知のオブジェクトの URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-986">The URL of the well-known object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-987">指定された型と URL が示す既知のオブジェクト用にプロキシを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-987">Creates a proxy for the well-known object indicated by the specified type and URL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-988">要求した既知のオブジェクトによって提供されたエンドポイントを指すプロキシ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-988">A proxy that points to an endpoint served by the requested well-known object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-989">リモート オブジェクトにメッセージを送信するプロキシを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-989">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="bb72d-990">コンソール アプリケーションは、プロキシでメソッドが呼び出されるまで、ネットワーク経由で、メッセージは送信されません。</span><span class="sxs-lookup"><span data-stu-id="bb72d-990">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-991">
            <paramref name="type" /> または <paramref name="url" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-991">
              <paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException">
          <span data-ttu-id="bb72d-992">
            <paramref name="type" /> は、参照渡しでマーシャリングされません。インターフェイスでもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-992">
              <paramref name="type" /> is not marshaled by reference and is not an interface.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-993">このメンバーは、遅延バインディング メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-993">This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="bb72d-994">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-994">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="bb72d-995">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-995">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bb72d-996">接続する既知のオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-996">The type of the well-known object to which you want to connect.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="bb72d-997">既知のオブジェクトの URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-997">The URL of the well-known object.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="bb72d-998">チャネル固有データまたは <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-998">Channel-specific data or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-999">指定された型、URL、およびチャネル データが示す既知のオブジェクト用にプロキシを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-999">Creates a proxy for the well-known object indicated by the specified type, URL, and channel data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb72d-1000">要求した既知のオブジェクトによって提供されたエンドポイントを指すプロキシ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1000">A proxy that points to an endpoint served by the requested well-known object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-1001">リモート オブジェクトにメッセージを送信するプロキシを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="bb72d-1001">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="bb72d-1002">コンソール アプリケーションは、プロキシでメソッドが呼び出されるまで、ネットワーク経由で、メッセージは送信されません。</span><span class="sxs-lookup"><span data-stu-id="bb72d-1002">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 <span data-ttu-id="bb72d-1003">`state`パラメーターは、チャネルに情報を通信しに渡される、<xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bb72d-1003">The `state` parameter communicates information to the channel, and is passed to the <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb72d-1004">
            <paramref name="type" /> または <paramref name="url" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1004">
              <paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException">
          <span data-ttu-id="bb72d-1005">
            <paramref name="type" /> は、参照渡しでマーシャリングされません。インターフェイスでもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1005">
              <paramref name="type" /> is not marshaled by reference and is not an interface.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="bb72d-1006">このメンバーは、遅延バインディング メカニズムで呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1006">This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="bb72d-1007">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1007">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="bb72d-1008">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1008">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _Activator.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _Activator.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_Activator::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="bb72d-1009">将来使用するために予約されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1009">Reserved for future use.</span>
          </span>
          <span data-ttu-id="bb72d-1010">IID_NULL にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1010">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="bb72d-1011">渡された割り当てる名前の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1011">The passed-in array of names to map.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="bb72d-1012">割り当てる名前のカウント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1012">The count of the names to map.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="bb72d-1013">名前を解釈するロケール コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1013">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="bb72d-1014">名前に対応する ID を受け取る、呼び出し元割り当て済み配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1014">The caller-allocated array that receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-1015">一連の名前を対応する一連のディスパッチ識別子に割り当てます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1015">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-1016">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするために使用し、マネージ コードから呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="bb72d-1016">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="bb72d-1017">詳細については`IDispatch::GetIDsOfNames`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="bb72d-1017">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="bb72d-1018">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1018">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _Activator.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="bb72d-1019">返される型情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1019">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="bb72d-1020">型情報のロケール ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1020">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="bb72d-1021">要求された型情報オブジェクトへのポインターを受け取るオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1021">An object that receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-1022">オブジェクトの型情報を取得します。この型情報を使用して、インターフェイスの型情報を取得できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1022">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-1023">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするために使用し、マネージ コードから呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="bb72d-1023">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="bb72d-1024">詳細については`IDispatch::GetTypeInfo`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="bb72d-1024">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="bb72d-1025">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1025">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _Activator.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="bb72d-1026">このメソッドから制御が戻るときに、オブジェクトが提供する型情報インターフェイスの数を受け取る場所へのポインターが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1026">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
          <span data-ttu-id="bb72d-1027">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1027">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-1028">オブジェクトが提供する型情報インターフェイスの数 (0 または 1) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1028">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-1029">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするために使用し、マネージ コードから呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="bb72d-1029">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="bb72d-1030">詳細については`IDispatch::GetTypeInfoCount`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="bb72d-1030">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="bb72d-1031">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1031">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.Invoke">
      <MemberSignature Language="C#" Value="void _Activator.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _Activator.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_Activator::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="bb72d-1032">メンバーを識別するディパッチ ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1032">A dispatch identifier that identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="bb72d-1033">将来使用するために予約されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1033">Reserved for future use.</span>
          </span>
          <span data-ttu-id="bb72d-1034">IID_NULL にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1034">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="bb72d-1035">引数を解釈する対象のロケール コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1035">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="bb72d-1036">呼び出しのコンテキストを記述するフラグ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1036">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="bb72d-1037">引数の配列、名前付き引数の引数 DISPID の配列、および各配列内の要素数のカウントを格納している構造体へのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1037">A pointer to a structure that contains an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="bb72d-1038">結果が格納される場所へのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1038">A pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="bb72d-1039">例外情報を格納する構造体へのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1039">A pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="bb72d-1040">エラーが存在する最初の引数のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1040">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb72d-1041">オブジェクトによって公開されたプロパティおよびメソッドへのアクセスを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1041">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb72d-1042">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするために使用し、マネージ コードから呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="bb72d-1042">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="bb72d-1043">詳細については`IDispatch::Invoke`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="bb72d-1043">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="bb72d-1044">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb72d-1044">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>