<Type Name="Activator" FullName="System.Activator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7e7f21bdc097b8dd3a620569d7381c3a7d38878d" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56403723" /></Metadata><TypeSignature Language="C#" Value="public sealed class Activator : System.Runtime.InteropServices._Activator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Activator extends System.Object implements class System.Runtime.InteropServices._Activator" />
  <TypeSignature Language="DocId" Value="T:System.Activator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Activator&#xA;Implements _Activator" />
  <TypeSignature Language="C++ CLI" Value="public ref class Activator sealed : System::Runtime::InteropServices::_Activator" />
  <TypeSignature Language="F#" Value="type Activator = class&#xA;    interface _Activator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Activator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Activator))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="114ca-101">オブジェクトの型をローカル サイトまたはリモート サイトに作成するメソッド、または既存のリモート オブジェクトへの参照を取得するメソッドを保持します。</span><span class="sxs-lookup"><span data-stu-id="114ca-101">Contains methods to create types of objects locally or remotely, or obtain references to existing remote objects.</span></span> <span data-ttu-id="114ca-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="114ca-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-103"><xref:System.Activator.CreateInstance%2A>メソッドは、指定された引数の最もよく一致するコンス トラクターを呼び出すことによって、アセンブリで定義されている型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-103">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type defined in an assembly by invoking the constructor that best matches the specified arguments.</span></span> <span data-ttu-id="114ca-104">引数が指定されていない場合、既定コンス トラクターは、パラメーターを受け取らないコンス トラクターが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-104">If no arguments are specified, the constructor that takes no parameters, that is, the default constructor, is invoked.</span></span>  
  
 <span data-ttu-id="114ca-105">検索し、コンス トラクターを呼び出すための十分な権限が必要それ以外の場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="114ca-105">You must have sufficient permission to search for and call a constructor; otherwise, an exception is thrown.</span></span> <span data-ttu-id="114ca-106">既定では、コンス トラクターの検索中に、パブリック コンス トラクターのみと見なされます。</span><span class="sxs-lookup"><span data-stu-id="114ca-106">By default, only public constructors are considered during the search for a constructor.</span></span> <span data-ttu-id="114ca-107">コンス トラクターまたは既定のコンス トラクターが見つからない場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="114ca-107">If no constructor or default constructor can be found, an exception is thrown.</span></span>  
  
 <span data-ttu-id="114ca-108">バインダーのパラメーターには、適切なコンス トラクターのアセンブリを検索するオブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="114ca-108">A binder parameter specifies an object that searches an assembly for a suitable constructor.</span></span> <span data-ttu-id="114ca-109">バインダーと検索条件を指定できます。</span><span class="sxs-lookup"><span data-stu-id="114ca-109">You can specify your own binder and search criteria.</span></span> <span data-ttu-id="114ca-110">バインダーが指定されていない場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-110">If no binder is specified, a default binder is used.</span></span> <span data-ttu-id="114ca-111">詳細については、<xref:System.Reflection.Binder?displayProperty=nameWithType> クラスおよび <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="114ca-111">For more information, see the <xref:System.Reflection.Binder?displayProperty=nameWithType> and <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> classes.</span></span>  
  
 <span data-ttu-id="114ca-112">証拠パラメーターは、セキュリティ ポリシーと、コンス トラクターのアクセス許可に影響します。</span><span class="sxs-lookup"><span data-stu-id="114ca-112">An evidence parameter affects the security policy and permissions for the constructor.</span></span> <span data-ttu-id="114ca-113">詳細については、<xref:System.Security.Policy.Evidence?displayProperty=nameWithType> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="114ca-113">For more information, see the <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="114ca-114">ローカルまたはリモート サイトでは、型のインスタンスを作成できます。</span><span class="sxs-lookup"><span data-stu-id="114ca-114">An instance of a type can be created at a local or remote site.</span></span> <span data-ttu-id="114ca-115">型がリモートで作成すると、アクティベーション属性パラメーターは、リモート サイトの URI を指定します。</span><span class="sxs-lookup"><span data-stu-id="114ca-115">If the type is created remotely, an activation attribute parameter specifies the URI of the remote site.</span></span> <span data-ttu-id="114ca-116">インスタンスを作成する呼び出しは、リモート サイトに到達する前に、中間サイトを通過可能性があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-116">The call to create the instance might pass through intermediary sites before it reaches the remote site.</span></span> <span data-ttu-id="114ca-117">その他のアクティベーション属性には、環境、またはリモートの中間サイトでの呼び出しが動作するコンテキストを変更できます。</span><span class="sxs-lookup"><span data-stu-id="114ca-117">Other activation attributes can modify the environment, or context, in which the call operates at the remote and intermediary sites.</span></span>  
  
 <span data-ttu-id="114ca-118">インスタンスがローカルに作成される場合は、そのオブジェクトへの参照が返されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-118">If the instance is created locally, a reference to that object is returned.</span></span> <span data-ttu-id="114ca-119">インスタンスがリモートで作成された場合、プロキシへの参照が返されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-119">If the instance is created remotely, a reference to a proxy is returned.</span></span> <span data-ttu-id="114ca-120">リモート オブジェクトは、ローカル オブジェクトの場合と同様に、プロキシを介して操作されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-120">The remote object is manipulated through the proxy as if it were a local object.</span></span>  
  
 <span data-ttu-id="114ca-121"><xref:System.Activator.GetObject%2A>メソッドは、現在実行しているリモート オブジェクト、よく知られているオブジェクトのサーバー側でアクティブまたは XML Web サービス プロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-121">The <xref:System.Activator.GetObject%2A> method creates a proxy to a currently running remote object, server-activated well-known object, or XML Web service.</span></span> <span data-ttu-id="114ca-122">接続メディア、チャネルを指定することができます。</span><span class="sxs-lookup"><span data-stu-id="114ca-122">You can specify the connection medium, that is, the channel.</span></span> <span data-ttu-id="114ca-123">詳細については、<xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="114ca-123">For more information, see the <xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="114ca-124">アセンブリには、型定義が含まれます。</span><span class="sxs-lookup"><span data-stu-id="114ca-124">Assemblies contain type definitions.</span></span> <span data-ttu-id="114ca-125"><xref:System.Activator.CreateInstance%2A>メソッドは、現在実行中のアセンブリから型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-125">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type from a currently running assembly.</span></span> <span data-ttu-id="114ca-126"><xref:System.Activator.CreateInstanceFrom%2A>メソッドは、アセンブリを含むファイルからインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-126">The <xref:System.Activator.CreateInstanceFrom%2A> method creates an instance from a file that contains an assembly.</span></span> <span data-ttu-id="114ca-127"><xref:System.Activator.CreateComInstanceFrom%2A>メソッドは、アセンブリを含むファイルから COM オブジェクトのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-127">The <xref:System.Activator.CreateComInstanceFrom%2A> method creates an instance of a COM object from a file that contains an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="114ca-128">次の例は、使用する方法を示します、<xref:System.Activator>クラスを動的に実行時にオブジェクトを構築します。</span><span class="sxs-lookup"><span data-stu-id="114ca-128">The following example shows how to use the <xref:System.Activator> class to dynamically construct objects at run time.</span></span>  
  
 [!code-cpp[ActivatorX#1](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#1)]
 [!code-csharp[ActivatorX#1](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#1)]
 [!code-vb[ActivatorX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateComInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="114ca-129">名前を指定した COM オブジェクトのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-129">Creates an instance of the COM object whose name is specified.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateComInstanceFrom : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateComInstanceFrom (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="114ca-130"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-130">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="114ca-131">推奨される型の名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-131">The name of the preferred type.</span></span></param>
        <summary><span data-ttu-id="114ca-132">名前を指定したアセンブリ ファイルと、既定のコンストラクターを使用して、名前を指定した COM オブジェクトのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-132">Creates an instance of the COM object whose name is specified, using the named assembly file and the default constructor.</span></span></summary>
        <returns><span data-ttu-id="114ca-133">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="114ca-133">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-134">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-134">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="114ca-135">A<xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>属性の値`true`COM 型を明示的にまたは既定で適用する必要がありますので、<xref:System.Activator.CreateComInstanceFrom%2A>メソッドは、その型のインスタンスを作成できます。 そうしないと、<xref:System.TypeLoadException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="114ca-135">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="114ca-136">その他の呼び出されたメソッドによってスローされる例外については、例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-136">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="114ca-137">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、呼び出し元が許可されている場合は、非パブリックな型を作成するこのメソッドを使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型を含むアセンブリの許可セットは、呼び出し元の許可に制限されているかどうか設定またはそのサブセットにします。</span><span class="sxs-lookup"><span data-stu-id="114ca-137">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="114ca-138">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="114ca-138">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="114ca-139">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-139">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-140"><paramref name="typeName" /> または <paramref name="assemblyName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="114ca-140"><paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-141">COM を使用してインスタンスを作成できません。</span><span class="sxs-lookup"><span data-stu-id="114ca-141">An instance cannot be created through COM.</span></span>  
  
<span data-ttu-id="114ca-142">または</span><span class="sxs-lookup"><span data-stu-id="114ca-142">-or-</span></span> 
 <span data-ttu-id="114ca-143"><paramref name="typename" /> が <paramref name="assemblyName" /> で見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-143"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="114ca-144">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-144">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="114ca-145"><paramref name="assemblyName" /> が見つからないか、読み込もうとしているモジュールにファイル名拡張子が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-145"><paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-146">抽象クラスのインスタンスを作成できません。</span><span class="sxs-lookup"><span data-stu-id="114ca-146">Cannot create an instance of an abstract class.</span></span>  
  
<span data-ttu-id="114ca-147">または</span><span class="sxs-lookup"><span data-stu-id="114ca-147">-or-</span></span> 
<span data-ttu-id="114ca-148">このメンバーは、遅延バインディング メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-148">This member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="114ca-149">呼び出し元は、<see cref="T:System.MarshalByRefObject" /> を継承しないオブジェクトのアクティベーション属性を提供できません。</span><span class="sxs-lookup"><span data-stu-id="114ca-149">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="114ca-150"><paramref name="assemblyName" /> が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="114ca-150"><paramref name="assemblyName" /> is the empty string ("").</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-151">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span><span class="sxs-lookup"><span data-stu-id="114ca-151">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="114ca-152">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-152">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="F#" Value="static member CreateComInstanceFrom : string * string * byte[] * System.Configuration.Assemblies.AssemblyHashAlgorithm -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateComInstanceFrom (assemblyName, typeName, hashValue, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="114ca-153"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-153">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="114ca-154">推奨される型の名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-154">The name of the preferred type.</span></span></param>
        <param name="hashValue"><span data-ttu-id="114ca-155">計算されたハッシュ コードの値。</span><span class="sxs-lookup"><span data-stu-id="114ca-155">The value of the computed hash code.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="114ca-156">ファイルのハッシュ処理および厳密な名前の生成に使用されるハッシュ アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="114ca-156">The hash algorithm used for hashing files and generating the strong name.</span></span></param>
        <summary><span data-ttu-id="114ca-157">名前を指定したアセンブリ ファイルと、既定のコンストラクターを使用して、名前を指定した COM オブジェクトのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-157">Creates an instance of the COM object whose name is specified, using the named assembly file and the default constructor.</span></span></summary>
        <returns><span data-ttu-id="114ca-158">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="114ca-158">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-159">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-159">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="114ca-160">A<xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>属性の値`true`COM 型を明示的にまたは既定で適用する必要がありますので、<xref:System.Activator.CreateComInstanceFrom%2A>メソッドは、その型のインスタンスを作成できます。 そうしないと、<xref:System.TypeLoadException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="114ca-160">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="114ca-161">その他の呼び出されたメソッドによってスローされる例外については、例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-161">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="114ca-162">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、呼び出し元が許可されている場合は、非パブリックな型を作成するこのメソッドを使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型を含むアセンブリの許可セットは、呼び出し元の許可に制限されているかどうか設定またはそのサブセットにします。</span><span class="sxs-lookup"><span data-stu-id="114ca-162">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="114ca-163">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="114ca-163">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="114ca-164">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-164">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-165"><paramref name="typeName" /> または <paramref name="assemblyName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="114ca-165"><paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="114ca-166"><paramref name="assemblyName" /> が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="114ca-166"><paramref name="assemblyName" /> is the empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="114ca-167">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="114ca-167">An assembly or module was loaded twice with two different evidences.</span></span>
        
<span data-ttu-id="114ca-168">または</span><span class="sxs-lookup"><span data-stu-id="114ca-168">-or-</span></span> 
 <span data-ttu-id="114ca-169"><paramref name="assemblyName" /> がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="114ca-169"><paramref name="assemblyName" /> is longer than the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="114ca-170"><paramref name="assemblyName" /> が見つからないか、読み込もうとしているモジュールにファイル名拡張子が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-170"><paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="114ca-171"><paramref name="assemblyName" /> が見つかりましたが、読み込めません。</span><span class="sxs-lookup"><span data-stu-id="114ca-171"><paramref name="assemblyName" /> is found but cannot be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="114ca-172"><paramref name="assemblyName" /> は有効なアセンブリ名ではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-172"><paramref name="assemblyName" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="114ca-173">"file://" で始まっていないコードベースが、必須の <see langword="WebPermission" /> なしで指定されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-173">A code base that does not start with "file://" was specified without the required <see langword="WebPermission" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-174">COM を使用してインスタンスを作成できません</span><span class="sxs-lookup"><span data-stu-id="114ca-174">An instance cannot be created through COM.</span></span>  
  
<span data-ttu-id="114ca-175">または</span><span class="sxs-lookup"><span data-stu-id="114ca-175">-or-</span></span> 
 <span data-ttu-id="114ca-176"><paramref name="typename" /> が <paramref name="assemblyName" /> で見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-176"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="114ca-177">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-177">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-178">抽象クラスのインスタンスを作成できません。</span><span class="sxs-lookup"><span data-stu-id="114ca-178">An instance of an abstract class cannot be created.</span></span>  
  
<span data-ttu-id="114ca-179">または</span><span class="sxs-lookup"><span data-stu-id="114ca-179">-or-</span></span> 
<span data-ttu-id="114ca-180">このメンバーは、遅延バインディング メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-180">This member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="114ca-181">呼び出し元は、<see cref="T:System.MarshalByRefObject" /> を継承しないオブジェクトのアクティベーション属性を提供できません。</span><span class="sxs-lookup"><span data-stu-id="114ca-181">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-182">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span><span class="sxs-lookup"><span data-stu-id="114ca-182">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="114ca-183">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-183">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="114ca-184">file:// で始まる URI を読み取る。</span><span class="sxs-lookup"><span data-stu-id="114ca-184">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="114ca-185">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="114ca-185">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="114ca-186">file:// で始まらないする URI を読み取る。</span><span class="sxs-lookup"><span data-stu-id="114ca-186">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="114ca-187">指定したパラメーターに最も一致するコンストラクターを使用して、指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-187">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : ActivationContext -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance activationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
      </Parameters>
      <Docs>
        <param name="activationContext"><span data-ttu-id="114ca-188">作成するオブジェクトを指定するアクティベーション コンテキスト オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="114ca-188">An activation context object that specifies the object to create.</span></span></param>
        <summary><span data-ttu-id="114ca-189">指定した <see cref="T:System.ActivationContext" /> オブジェクトによって決定される型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-189">Creates an instance of the type designated by the specified <see cref="T:System.ActivationContext" /> object.</span></span></summary>
        <returns><span data-ttu-id="114ca-190">新しく作成されたオブジェクトにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="114ca-190">A handle that must be unwrapped to access the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-191">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-191">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="114ca-192">ドメイン ポリシーを設定して、アプリケーション ベースのセキュリティ モデルを提供するマニフェストに基づくアクティベーション中にアクティブ化コンテキストが使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-192">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="114ca-193"><xref:System.ActivationContext>クラスが含まれています、<xref:System.ApplicationIdentity>アプリケーション マニフェストへのアクセスを提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="114ca-193">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="114ca-194">詳細については、<xref:System.Security.Policy.ApplicationSecurityManager> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="114ca-194">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type -&gt; obj" Usage="System.Activator.CreateInstance type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="114ca-195">作成するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="114ca-195">The type of object to create.</span></span></param>
        <summary><span data-ttu-id="114ca-196">指定された型の既定のコンストラクターを使用して、指定された型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-196">Creates an instance of the specified type using that type's default constructor.</span></span></summary>
        <returns><span data-ttu-id="114ca-197">新しく作成されたオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="114ca-197">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-198">呼び出されるコンス トラクターは、アクセス可能である必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-198">The constructor to be invoked must be accessible.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="114ca-199">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が許可されている非パブリックな型へのアクセスに使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型を含むアセンブリの許可セットは、呼び出し元の許可に制限されているかどうか設定またはそのサブセットにします。</span><span class="sxs-lookup"><span data-stu-id="114ca-199">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="114ca-200">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="114ca-200">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="114ca-201">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-201">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="114ca-202">次のコード例を呼び出す方法を示します、<xref:System.Activator.CreateInstance%28System.Type%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-202">The following code example demonstrates how to call the <xref:System.Activator.CreateInstance%28System.Type%29> method.</span></span> <span data-ttu-id="114ca-203">さまざまな種類のインスタンスが作成され、その既定値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-203">Instances of several different types are created and their default values are displayed.</span></span>  
  
 [!code-cpp[ActivatorX#4](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/source2.cpp#4)]
 [!code-csharp[ActivatorX#4](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/source2.cs#4)]
 [!code-vb[ActivatorX#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/source2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-204"><paramref name="type" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="114ca-204"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="114ca-205"><paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-205"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="114ca-206">または</span><span class="sxs-lookup"><span data-stu-id="114ca-206">-or-</span></span> 
 <span data-ttu-id="114ca-207"><paramref name="type" /> はオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span><span class="sxs-lookup"><span data-stu-id="114ca-207"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="114ca-208"><paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="114ca-208"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="114ca-209">または</span><span class="sxs-lookup"><span data-stu-id="114ca-209">-or-</span></span> 
<span data-ttu-id="114ca-210"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-210">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="114ca-211">または</span><span class="sxs-lookup"><span data-stu-id="114ca-211">-or-</span></span> 
<span data-ttu-id="114ca-212"><paramref name="type" /> を格納するアセンブリは <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> を使用して作成された動的アセンブリです。</span><span class="sxs-lookup"><span data-stu-id="114ca-212">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="114ca-213">呼び出されるコンストラクターは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="114ca-213">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="114ca-214"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows ストア アプリ用 .NET</see> または<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">ポータブル クラス ライブラリ</see>では、基本クラスの例外である <see cref="T:System.MemberAccessException" /> を代わりにキャッチします。</span><span class="sxs-lookup"><span data-stu-id="114ca-214">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="114ca-215">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-215">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-216">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-216">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="114ca-217"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-217">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="114ca-218"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows ストア アプリ用 .NET</see> または<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">ポータブル クラス ライブラリ</see>では、基本クラスの例外である <see cref="T:System.MissingMemberException" /> を代わりにキャッチします。</span><span class="sxs-lookup"><span data-stu-id="114ca-218">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="114ca-219">一致するパブリック コンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-219">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="114ca-220"><paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-220"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-221"><paramref name="type" /> は有効な型ではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-221"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="114ca-222">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span><span class="sxs-lookup"><span data-stu-id="114ca-222">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="114ca-223">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="114ca-223">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-224">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span><span class="sxs-lookup"><span data-stu-id="114ca-224">for accessing nonpublic types regardless of their grant sets.</span></span> <span data-ttu-id="114ca-225">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-225">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext, string[] activationCustomData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext, cli::array &lt;System::String ^&gt; ^ activationCustomData);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : ActivationContext * string[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (activationContext, activationCustomData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
        <Parameter Name="activationCustomData" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="activationContext"><span data-ttu-id="114ca-226">作成するオブジェクトを指定するアクティベーション コンテキスト オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="114ca-226">An activation context object that specifies the object to create.</span></span></param>
        <param name="activationCustomData"><span data-ttu-id="114ca-227">カスタム アクティベーション データを格納する Unicode 文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-227">An array of Unicode strings that contain custom activation data.</span></span></param>
        <summary><span data-ttu-id="114ca-228">指定した <see cref="T:System.ActivationContext" /> オブジェクトによって決定され、指定したカスタム アクティベーション データによってアクティブにされる型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-228">Creates an instance of the type that is designated by the specified <see cref="T:System.ActivationContext" /> object and activated with the specified custom activation data.</span></span></summary>
        <returns><span data-ttu-id="114ca-229">新しく作成されたオブジェクトにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="114ca-229">A handle that must be unwrapped to access the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-230">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-230">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="114ca-231">ドメイン ポリシーを設定して、アプリケーション ベースのセキュリティ モデルを提供するマニフェストに基づくアクティベーション中にアクティブ化コンテキストが使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-231">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="114ca-232"><xref:System.ActivationContext>クラスが含まれています、<xref:System.ApplicationIdentity>アプリケーション マニフェストへのアクセスを提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="114ca-232">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="114ca-233">詳細については、<xref:System.Security.Policy.ApplicationSecurityManager> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="114ca-233">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="114ca-234"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-234">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="114ca-235"><paramref name="assemblyName" /> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-235">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="114ca-236">必要な型の完全修飾名。</span><span class="sxs-lookup"><span data-stu-id="114ca-236">The fully qualified name of the preferred type.</span></span></param>
        <summary><span data-ttu-id="114ca-237">名前を指定したアセンブリと、既定のコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-237">Creates an instance of the type whose name is specified, using the named assembly and default constructor.</span></span></summary>
        <returns><span data-ttu-id="114ca-238">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="114ca-238">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-239">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="114ca-239">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
 <span data-ttu-id="114ca-240">`assemblyName` 次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="114ca-240">`assemblyName` can be either of the following:</span></span>  
  
-   <span data-ttu-id="114ca-241">アセンブリでは、パスまたはファイル拡張子なしの簡易名。</span><span class="sxs-lookup"><span data-stu-id="114ca-241">The simple name of an assembly, without its path or file extension.</span></span> <span data-ttu-id="114ca-242">たとえばは指定`TypeExtensions`のパスと名前は.\bin\TypeExtensions.dll アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="114ca-242">For example, you would specify `TypeExtensions` for an assembly whose path and name are .\bin\TypeExtensions.dll.</span></span>  
  
-   <span data-ttu-id="114ca-243">簡易名、バージョン、カルチャ、およびパブリック キー トークンで構成される署名されたアセンブリの完全名たとえば、"TypeExtensions、バージョン 1.0.0.0、カルチャを = = neutral, PublicKeyToken = 181869f2f7435b51"。</span><span class="sxs-lookup"><span data-stu-id="114ca-243">The full name of a signed assembly, which consists of its simple name, version, culture, and public key token; for example, "TypeExtensions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=181869f2f7435b51".</span></span>  
  
 <span data-ttu-id="114ca-244">共通言語ランタイムの識別し、アセンブリの読み込みの詳細については、次を参照してください。[ランタイムがアセンブリを検索する方法](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md)します。</span><span class="sxs-lookup"><span data-stu-id="114ca-244">For more information on how the common language runtime identifies and loads assemblies, see [How the Runtime Locates Assemblies](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span></span> <span data-ttu-id="114ca-245">アプリケーション構成ファイルを使用して、アセンブリの場所を定義する方法の詳細については、次を参照してください。[アセンブリの場所を指定する](~/docs/framework/configure-apps/specify-assembly-location.md)します。</span><span class="sxs-lookup"><span data-stu-id="114ca-245">For information on using the application configuration file to define assembly locations, see [Specifying an Assembly's Location](~/docs/framework/configure-apps/specify-assembly-location.md).</span></span> <span data-ttu-id="114ca-246">場合`assemblyName`が見つかると、既定のコンテキストに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="114ca-246">If `assemblyName` is found, it is loaded in the default context.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="114ca-247">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、呼び出し元が許可されている場合は、非パブリックな型を作成するこのメソッドを使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型を含むアセンブリの許可セットは、呼び出し元の許可に制限されているかどうか設定またはそのサブセットにします。</span><span class="sxs-lookup"><span data-stu-id="114ca-247">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="114ca-248">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="114ca-248">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="114ca-249">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-249">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="114ca-250">次の例は、という名前のクラスを定義します。`Person`という名前のアセンブリで`PersonInfo`します。</span><span class="sxs-lookup"><span data-stu-id="114ca-250">The following example defines a class named `Person` in an assembly named `PersonInfo`.</span></span> <span data-ttu-id="114ca-251">なお、`Person`クラスにはパラメーターなしのうちの 1 つは、2 つのコンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="114ca-251">Note that the `Person` class has two constructors, one of which is parameterless.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/personinfo.cs#1)]
 [!code-vb[System.Activator.CreateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/personinfo.vb#1)]  
  
 <span data-ttu-id="114ca-252">次の例では、<xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29>をインスタンス化するメソッド、`Person`クラス。</span><span class="sxs-lookup"><span data-stu-id="114ca-252">The following example calls the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method to instantiate the `Person` class.</span></span> <span data-ttu-id="114ca-253">プロジェクトに追加する PersonInfo.dll への参照が必要です。</span><span class="sxs-lookup"><span data-stu-id="114ca-253">It requires a reference to PersonInfo.dll to be added to the project.</span></span> <span data-ttu-id="114ca-254"><xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29>メソッドの呼び出し、`Person`クラスの既定のコンス トラクターに値を割り当てます例では、その`Name`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="114ca-254">Because the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method calls the `Person` class default constructor,  the example assigns a value to its `Name` property.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1.cs#2)]
 [!code-vb[System.Activator.CreateInstance#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1.vb#2)]  
  
 <span data-ttu-id="114ca-255">ただし、<xref:System.Activator.CreateInstance%2A>はマシン境界を越えているかをデザイン時に不明な型をインスタンス化に頻繁に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-255">However, <xref:System.Activator.CreateInstance%2A> is frequently called to instantiate a type that crosses machine boundaries or that is not known at design time.</span></span> <span data-ttu-id="114ca-256">この場合、プロジェクトのアセンブリへの参照を含めることはできませんし、型のメンバーへの事前バインディングされた呼び出しを行うことはできません。</span><span class="sxs-lookup"><span data-stu-id="114ca-256">In this case, you cannot include a reference to the assembly in the project and cannot make early-bound calls to the type's members.</span></span> <span data-ttu-id="114ca-257">この制限を回避するには、次の例を使用して、<xref:System.Activator.CreateInstance%2A>メソッドに値を代入するためにリフレクションと、`Person`オブジェクトの`Name`プロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="114ca-257">To work around this limitation, the following example uses the <xref:System.Activator.CreateInstance%2A> method along with reflection to assign a value to the `Person` object's `Name` property and to display its value.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1a.cs#3)]
 [!code-vb[System.Activator.CreateInstance#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1a.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-258"><paramref name="typeName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="114ca-258"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="114ca-259">一致するパブリック コンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-259">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-260"><paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-260"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="114ca-261"><paramref name="assemblyName" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-261"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="114ca-262">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-262">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-263">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-263">You cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="114ca-264">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="114ca-264">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="114ca-265"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-265">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="114ca-266"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-266">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="114ca-267"><paramref name="assemblyName" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-267"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="114ca-268">または</span><span class="sxs-lookup"><span data-stu-id="114ca-268">-or-</span></span> 
<span data-ttu-id="114ca-269">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="114ca-269">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="114ca-270">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="114ca-270">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="114ca-271">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="114ca-271">An assembly or module was loaded twice with two different evidences.</span></span>  
  
<span data-ttu-id="114ca-272">または</span><span class="sxs-lookup"><span data-stu-id="114ca-272">-or-</span></span> 
<span data-ttu-id="114ca-273">アセンブリ名かコード ベースが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-273">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="114ca-274">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span><span class="sxs-lookup"><span data-stu-id="114ca-274">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="114ca-275">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="114ca-275">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-276">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span><span class="sxs-lookup"><span data-stu-id="114ca-276">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="114ca-277">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-277">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, bool nonPublic);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * bool -&gt; obj" Usage="System.Activator.CreateInstance (type, nonPublic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="114ca-278">作成するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="114ca-278">The type of object to create.</span></span></param>
        <param name="nonPublic"><span data-ttu-id="114ca-279">パブリックまたはパブリックでない既定コンストラクターを一致させる場合は <see langword="true" />。パブリックの既定コンストラクターだけを一致させる場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="114ca-279"><see langword="true" /> if a public or nonpublic default constructor can match; <see langword="false" /> if only a public default constructor can match.</span></span></param>
        <summary><span data-ttu-id="114ca-280">指定された型の既定のコンストラクターを使用して、指定された型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-280">Creates an instance of the specified type using that type's default constructor.</span></span></summary>
        <returns><span data-ttu-id="114ca-281">新しく作成されたオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="114ca-281">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="114ca-282">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が許可されている場合、非パブリックな型とメンバーのアクセスに使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型とメンバーを含むアセンブリの許可セットが制限されているかどうか呼び出し元の設定またはそのサブセットを付与します。</span><span class="sxs-lookup"><span data-stu-id="114ca-282">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="114ca-283">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="114ca-283">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="114ca-284">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-284">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-285"><paramref name="type" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="114ca-285"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="114ca-286"><paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-286"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="114ca-287">または</span><span class="sxs-lookup"><span data-stu-id="114ca-287">-or-</span></span> 
 <span data-ttu-id="114ca-288"><paramref name="type" /> はオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span><span class="sxs-lookup"><span data-stu-id="114ca-288"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="114ca-289"><paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="114ca-289"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="114ca-290">または</span><span class="sxs-lookup"><span data-stu-id="114ca-290">-or-</span></span> 
<span data-ttu-id="114ca-291"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-291">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="114ca-292">または</span><span class="sxs-lookup"><span data-stu-id="114ca-292">-or-</span></span> 
<span data-ttu-id="114ca-293"><paramref name="type" /> を格納するアセンブリは <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> を使用して作成された動的アセンブリです。</span><span class="sxs-lookup"><span data-stu-id="114ca-293">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="114ca-294">呼び出されるコンストラクターは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="114ca-294">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="114ca-295">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-295">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-296">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-296">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="114ca-297"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-297">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="114ca-298">一致するパブリック コンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-298">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="114ca-299"><paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-299"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-300"><paramref name="type" /> は有効な型ではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-300"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="114ca-301">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span><span class="sxs-lookup"><span data-stu-id="114ca-301">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="114ca-302">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="114ca-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-303">非パブリックな型およびそのアクセス許可セットに関係なくのメンバーにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="114ca-303">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="114ca-304">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-304">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="114ca-305">作成するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="114ca-305">The type of object to create.</span></span></param>
        <param name="args"><span data-ttu-id="114ca-306">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-306">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="114ca-307"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-307">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <summary><span data-ttu-id="114ca-308">指定したパラメーターに最も一致するコンストラクターを使用して、指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-308">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="114ca-309">新しく作成されたオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="114ca-309">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-310">呼び出されるコンス トラクターは、アクセス可能である必要があり、指定した引数リストを最も具体的な一致を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-310">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="114ca-311">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が許可されている非パブリックな型へのアクセスに使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型を含むアセンブリの許可セットは、呼び出し元の許可に制限されているかどうか設定またはそのサブセットにします。</span><span class="sxs-lookup"><span data-stu-id="114ca-311">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="114ca-312">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="114ca-312">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="114ca-313">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-313">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="114ca-314">次の例では、<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29>を作成する方法、<xref:System.String>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="114ca-314">The following example calls the  <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to create a <xref:System.String> object.</span></span> <span data-ttu-id="114ca-315">呼び出す、 <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> 14 番目の位置から文字配列から 10 個の要素を含む文字列のインスタンスを作成するコンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="114ca-315">It calls the <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor to instantiate a string that contains ten elements from a character array starting at the fourteenth position.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/CreateInstance5.cs#5)]
 [!code-vb[System.Activator.CreateInstance#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/CreateInstance5.vb#5)]  
  
 <span data-ttu-id="114ca-316">次の例に渡される引数を要素として持つジャグ配列を作成、<xref:System.String>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="114ca-316">The following example creates a jagged array whose elements are arguments to be passed to a <xref:System.String> constructor.</span></span> <span data-ttu-id="114ca-317">各配列を渡します、<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29>に適切な文字列コンス トラクターを呼び出すメソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-317">The example then passes each array to the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to invoke the appropriate string constructor.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstance2.cs#4)]
 [!code-vb[System.Activator.CreateInstance#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstance2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-318"><paramref name="type" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="114ca-318"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="114ca-319"><paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-319"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="114ca-320">または</span><span class="sxs-lookup"><span data-stu-id="114ca-320">-or-</span></span> 
 <span data-ttu-id="114ca-321"><paramref name="type" /> はオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span><span class="sxs-lookup"><span data-stu-id="114ca-321"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="114ca-322"><paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="114ca-322"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="114ca-323">または</span><span class="sxs-lookup"><span data-stu-id="114ca-323">-or-</span></span> 
<span data-ttu-id="114ca-324"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-324">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="114ca-325">または</span><span class="sxs-lookup"><span data-stu-id="114ca-325">-or-</span></span> 
<span data-ttu-id="114ca-326"><paramref name="type" /> を格納するアセンブリは、<see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> を使用して作成された動的アセンブリです。</span><span class="sxs-lookup"><span data-stu-id="114ca-326">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
<span data-ttu-id="114ca-327">または</span><span class="sxs-lookup"><span data-stu-id="114ca-327">-or-</span></span> 
<span data-ttu-id="114ca-328"><paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-328">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="114ca-329">呼び出されるコンストラクターは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="114ca-329">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="114ca-330"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows ストア アプリ用 .NET</see> または<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">ポータブル クラス ライブラリ</see>では、基本クラスの例外である <see cref="T:System.MemberAccessException" /> を代わりにキャッチします。</span><span class="sxs-lookup"><span data-stu-id="114ca-330">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="114ca-331">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-331">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-332">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-332">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="114ca-333"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-333">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="114ca-334"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows ストア アプリ用 .NET</see> または<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">ポータブル クラス ライブラリ</see>では、基本クラスの例外である <see cref="T:System.MissingMemberException" /> を代わりにキャッチします。</span><span class="sxs-lookup"><span data-stu-id="114ca-334">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="114ca-335">一致するパブリック コンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-335">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="114ca-336"><paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-336"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-337"><paramref name="type" /> は有効な型ではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-337"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="114ca-338">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span><span class="sxs-lookup"><span data-stu-id="114ca-338">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="114ca-339">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="114ca-339">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-340">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span><span class="sxs-lookup"><span data-stu-id="114ca-340">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="114ca-341">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-341">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (domain As AppDomain, assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="114ca-342"><paramref name="typeName" /> という名前の型が作成されるリモート ドメイン。</span><span class="sxs-lookup"><span data-stu-id="114ca-342">The remote domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="114ca-343"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-343">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="114ca-344"><paramref name="assemblyName" /> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-344">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="114ca-345">必要な型の完全修飾名。</span><span class="sxs-lookup"><span data-stu-id="114ca-345">The fully qualified name of the preferred type.</span></span></param>
        <summary><span data-ttu-id="114ca-346">名前を指定したアセンブリと既定のコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-346">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and default constructor.</span></span></summary>
        <returns><span data-ttu-id="114ca-347">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="114ca-347">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-348">使用<xref:System.Activator.CreateInstance%2A>ホストがセキュリティのアクセス許可が制限されているアプリケーション ドメインでコードを実行する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="114ca-348">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="114ca-349">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="114ca-349">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="114ca-350">このメソッドを使用して<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>に完全な信頼の直前の呼び出し元が必要です。</span><span class="sxs-lookup"><span data-stu-id="114ca-350">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-351"><paramref name="typeName" /> または <paramref name="domain" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="114ca-351"><paramref name="typeName" /> or <paramref name="domain" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="114ca-352">一致するパブリック コンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-352">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-353"><paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-353"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="114ca-354"><paramref name="assemblyName" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-354"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="114ca-355">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-355">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-356">抽象型のインスタンスは作成できません。</span><span class="sxs-lookup"><span data-stu-id="114ca-356">Cannot create an instance of an abstract type.</span></span>  
  
<span data-ttu-id="114ca-357">または</span><span class="sxs-lookup"><span data-stu-id="114ca-357">-or-</span></span> 
<span data-ttu-id="114ca-358">このメンバーは、遅延バインディング メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-358">This member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="114ca-359">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="114ca-359">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="114ca-360"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-360">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="114ca-361"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-361">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="114ca-362"><paramref name="assemblyName" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-362"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="114ca-363">または</span><span class="sxs-lookup"><span data-stu-id="114ca-363">-or-</span></span> 
<span data-ttu-id="114ca-364">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="114ca-364">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="114ca-365">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="114ca-365">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="114ca-366">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="114ca-366">An assembly or module was loaded twice with two different evidences.</span></span>  
  
<span data-ttu-id="114ca-367">または</span><span class="sxs-lookup"><span data-stu-id="114ca-367">-or-</span></span> 
<span data-ttu-id="114ca-368">アセンブリ名かコード ベースが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-368">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="114ca-369">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span><span class="sxs-lookup"><span data-stu-id="114ca-369">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="114ca-370">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="114ca-370">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-371">すべての型のメンバーに対して操作を呼び出す権限です。</span><span class="sxs-lookup"><span data-stu-id="114ca-371">for the ability to invoke operations on all type members.</span></span> <span data-ttu-id="114ca-372">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-372">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="114ca-373">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="114ca-373">requires full trust for the immediate caller.</span></span> <span data-ttu-id="114ca-374">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="114ca-374">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="114ca-375"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-375">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="114ca-376"><paramref name="assemblyName" /> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-376">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="114ca-377">必要な型の完全修飾名。</span><span class="sxs-lookup"><span data-stu-id="114ca-377">The fully qualified name of the preferred type.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="114ca-378">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-378">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="114ca-379">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="114ca-379">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="114ca-380">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="114ca-380">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="114ca-381">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="114ca-381">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="114ca-382">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-382">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="114ca-383">名前を指定したアセンブリと、既定のコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-383">Creates an instance of the type whose name is specified, using the named assembly and default constructor.</span></span></summary>
        <returns><span data-ttu-id="114ca-384">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="114ca-384">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-385">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="114ca-385">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="114ca-386">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、呼び出し元が許可されている場合は、非パブリックな型を作成するこのメソッドを使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型の許可セット、呼び出し元の許可セット、またはそのサブセットに制限されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-386">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="114ca-387">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="114ca-387">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="114ca-388">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-388">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-389"><paramref name="typeName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="114ca-389"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="114ca-390">一致するパブリック コンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-390">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-391"><paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-391"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="114ca-392"><paramref name="assemblyName" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-392"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="114ca-393">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-393">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-394">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-394">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="114ca-395"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-395">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="114ca-396"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-396">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="114ca-397">または</span><span class="sxs-lookup"><span data-stu-id="114ca-397">-or-</span></span> 
 <span data-ttu-id="114ca-398"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-398"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="114ca-399">または</span><span class="sxs-lookup"><span data-stu-id="114ca-399">-or-</span></span> 
 <span data-ttu-id="114ca-400"><paramref name="activationAttributes" /> が <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-400"><paramref name="activationAttributes" /> is not a <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /></span></span>  
  
<span data-ttu-id="114ca-401">配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-401">array.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="114ca-402"><paramref name="assemblyName" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-402"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="114ca-403">または</span><span class="sxs-lookup"><span data-stu-id="114ca-403">-or-</span></span> 
<span data-ttu-id="114ca-404">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="114ca-404">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="114ca-405">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="114ca-405">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="114ca-406">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="114ca-406">An assembly or module was loaded twice with two different evidences.</span></span>  
  
<span data-ttu-id="114ca-407">または</span><span class="sxs-lookup"><span data-stu-id="114ca-407">-or-</span></span> 
<span data-ttu-id="114ca-408">アセンブリ名かコード ベースが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-408">The assembly name or code base is invalid.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="114ca-409"><paramref name="activationAttributes" /> で指定されたターゲットでリモートからのアクティブ化を試みたときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="114ca-409">An error occurred when attempting remote activation in a target specified in <paramref name="activationAttributes" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="114ca-410">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span><span class="sxs-lookup"><span data-stu-id="114ca-410">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="114ca-411">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="114ca-411">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-412">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span><span class="sxs-lookup"><span data-stu-id="114ca-412">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="114ca-413">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-413">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, object[] args, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj[] * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, args, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="114ca-414">作成するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="114ca-414">The type of object to create.</span></span></param>
        <param name="args"><span data-ttu-id="114ca-415">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-415">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="114ca-416"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-416">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="114ca-417">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-417">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="114ca-418">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="114ca-418">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="114ca-419">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="114ca-419">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="114ca-420">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="114ca-420">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="114ca-421">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-421">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="114ca-422">指定したパラメーターに最も一致するコンストラクターを使用して、指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-422">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="114ca-423">新しく作成されたオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="114ca-423">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-424">呼び出されるコンス トラクターは、アクセス可能である必要があり、指定した引数リストを最も具体的な一致を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-424">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="114ca-425">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が許可されている非パブリックな型へのアクセスに使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型を含むアセンブリの許可セットは、呼び出し元の許可に制限されているかどうか設定またはそのサブセットにします。</span><span class="sxs-lookup"><span data-stu-id="114ca-425">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="114ca-426">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="114ca-426">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="114ca-427">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-427">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-428"><paramref name="type" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="114ca-428"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="114ca-429"><paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-429"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="114ca-430">または</span><span class="sxs-lookup"><span data-stu-id="114ca-430">-or-</span></span> 
 <span data-ttu-id="114ca-431"><paramref name="type" /> はオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span><span class="sxs-lookup"><span data-stu-id="114ca-431"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="114ca-432"><paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="114ca-432"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="114ca-433">または</span><span class="sxs-lookup"><span data-stu-id="114ca-433">-or-</span></span> 
<span data-ttu-id="114ca-434"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-434">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="114ca-435">または</span><span class="sxs-lookup"><span data-stu-id="114ca-435">-or-</span></span> 
 <span data-ttu-id="114ca-436"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-436"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="114ca-437">または</span><span class="sxs-lookup"><span data-stu-id="114ca-437">-or-</span></span> 
<span data-ttu-id="114ca-438"><paramref name="type" /> を格納するアセンブリは、<see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> を使用して作成された動的アセンブリです。</span><span class="sxs-lookup"><span data-stu-id="114ca-438">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
<span data-ttu-id="114ca-439">または</span><span class="sxs-lookup"><span data-stu-id="114ca-439">-or-</span></span> 
<span data-ttu-id="114ca-440"><paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-440">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="114ca-441">呼び出されるコンストラクターは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="114ca-441">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="114ca-442">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-442">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-443">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-443">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="114ca-444"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-444">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="114ca-445">一致するパブリック コンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-445">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="114ca-446"><paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-446"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-447"><paramref name="type" /> は有効な型ではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-447"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="114ca-448">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span><span class="sxs-lookup"><span data-stu-id="114ca-448">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="114ca-449">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="114ca-449">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-450">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span><span class="sxs-lookup"><span data-stu-id="114ca-450">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="114ca-451">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-451">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="System.Activator.CreateInstance (type, bindingAttr, binder, args, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="114ca-452">作成するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="114ca-452">The type of object to create.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="114ca-453"><paramref name="type" /> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="114ca-453">A combination of zero or more bit flags that affect the search for the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="114ca-454"><paramref name="bindingAttr" /> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="114ca-454">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="114ca-455"><paramref name="bindingAttr" /> および <paramref name="args" /> を使用して <paramref name="type" /> コンストラクターをシークおよび識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="114ca-455">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="114ca-456"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-456">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="114ca-457">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-457">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="114ca-458"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-458">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="114ca-459"><paramref name="args" /> から <paramref name="type" /> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span><span class="sxs-lookup"><span data-stu-id="114ca-459">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="114ca-460"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-460">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="114ca-461">指定したパラメーターに最も一致するコンストラクターを使用して、指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-461">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="114ca-462">新しく作成されたオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="114ca-462">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-463">呼び出されるコンス トラクターには、指定したバインダーとバインディング属性の制約下で指定された引数リストと最もよく一致を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-463">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="114ca-464">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が許可されている場合、非パブリックな型とメンバーのアクセスに使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型とメンバーを含むアセンブリの許可セットが制限されているかどうか呼び出し元の設定またはそのサブセットを付与します。</span><span class="sxs-lookup"><span data-stu-id="114ca-464">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="114ca-465">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="114ca-465">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="114ca-466">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-466">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-467"><paramref name="type" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="114ca-467"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="114ca-468"><paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-468"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="114ca-469">または</span><span class="sxs-lookup"><span data-stu-id="114ca-469">-or-</span></span> 
 <span data-ttu-id="114ca-470"><paramref name="type" /> はオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span><span class="sxs-lookup"><span data-stu-id="114ca-470"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="114ca-471"><paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="114ca-471"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="114ca-472">または</span><span class="sxs-lookup"><span data-stu-id="114ca-472">-or-</span></span> 
<span data-ttu-id="114ca-473"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-473">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="114ca-474">または</span><span class="sxs-lookup"><span data-stu-id="114ca-474">-or-</span></span> 
<span data-ttu-id="114ca-475"><paramref name="type" /> を格納するアセンブリは、<see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> を使用して作成された動的アセンブリです。</span><span class="sxs-lookup"><span data-stu-id="114ca-475">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
<span data-ttu-id="114ca-476">または</span><span class="sxs-lookup"><span data-stu-id="114ca-476">-or-</span></span> 
<span data-ttu-id="114ca-477"><paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-477">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="114ca-478">呼び出されるコンストラクターは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="114ca-478">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="114ca-479">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-479">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-480">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-480">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="114ca-481">COM 型が <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> 経由で取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-481">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="114ca-482">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-482">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="114ca-483"><paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-483"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-484"><paramref name="type" /> は有効な型ではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-484"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="114ca-485">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span><span class="sxs-lookup"><span data-stu-id="114ca-485">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="114ca-486">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="114ca-486">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-487">非パブリックな型およびそのアクセス許可セットに関係なくのメンバーにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="114ca-487">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="114ca-488">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-488">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="114ca-489">作成するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="114ca-489">The type of object to create.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="114ca-490"><paramref name="type" /> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="114ca-490">A combination of zero or more bit flags that affect the search for the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="114ca-491"><paramref name="bindingAttr" /> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="114ca-491">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="114ca-492"><paramref name="bindingAttr" /> および <paramref name="args" /> を使用して <paramref name="type" /> コンストラクターをシークおよび識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="114ca-492">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="114ca-493"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-493">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="114ca-494">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-494">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="114ca-495"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-495">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="114ca-496"><paramref name="args" /> から <paramref name="type" /> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span><span class="sxs-lookup"><span data-stu-id="114ca-496">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="114ca-497"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-497">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="114ca-498">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-498">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="114ca-499">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="114ca-499">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="114ca-500">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="114ca-500">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="114ca-501">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="114ca-501">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="114ca-502">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-502">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="114ca-503">指定したパラメーターに最も一致するコンストラクターを使用して、指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-503">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="114ca-504">新しく作成されたオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="114ca-504">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-505">呼び出されるコンス トラクターには、指定したバインダーとバインディング属性の制約下で指定された引数リストと最もよく一致を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-505">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="114ca-506">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が許可されている場合、非パブリックな型とメンバーのアクセスに使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型とメンバーの許可セットが呼び出し元の制限されたセットを許可またはそのサブセットに。</span><span class="sxs-lookup"><span data-stu-id="114ca-506">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="114ca-507">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="114ca-507">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="114ca-508">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-508">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-509"><paramref name="type" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="114ca-509"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="114ca-510"><paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-510"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="114ca-511">または</span><span class="sxs-lookup"><span data-stu-id="114ca-511">-or-</span></span> 
 <span data-ttu-id="114ca-512"><paramref name="type" /> はオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span><span class="sxs-lookup"><span data-stu-id="114ca-512"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="114ca-513"><paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="114ca-513"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="114ca-514">または</span><span class="sxs-lookup"><span data-stu-id="114ca-514">-or-</span></span> 
<span data-ttu-id="114ca-515"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-515">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="114ca-516">または</span><span class="sxs-lookup"><span data-stu-id="114ca-516">-or-</span></span> 
 <span data-ttu-id="114ca-517"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-517"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="114ca-518">または</span><span class="sxs-lookup"><span data-stu-id="114ca-518">-or-</span></span> 
<span data-ttu-id="114ca-519"><paramref name="type" /> を格納するアセンブリは、<see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> を使用して作成された動的アセンブリです。</span><span class="sxs-lookup"><span data-stu-id="114ca-519">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
<span data-ttu-id="114ca-520">または</span><span class="sxs-lookup"><span data-stu-id="114ca-520">-or-</span></span> 
<span data-ttu-id="114ca-521"><paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-521">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="114ca-522">呼び出されるコンストラクターは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="114ca-522">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="114ca-523">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-523">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-524">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-524">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="114ca-525">COM 型が <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> 経由で取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-525">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="114ca-526">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-526">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="114ca-527"><paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-527"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-528"><paramref name="type" /> は有効な型ではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-528"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="114ca-529">証拠を指定します。</span><span class="sxs-lookup"><span data-stu-id="114ca-529">for supplying evidence.</span></span> <span data-ttu-id="114ca-530">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="114ca-530">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-531">非パブリックな型およびそのアクセス許可セットに関係なくのメンバーにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="114ca-531">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="114ca-532">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-532">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="114ca-533"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-533">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="114ca-534"><paramref name="assemblyName" /> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-534">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="114ca-535">必要な型の完全修飾名。</span><span class="sxs-lookup"><span data-stu-id="114ca-535">The fully qualified name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="114ca-536"><paramref name="typeName" /> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="114ca-536"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="114ca-537"><paramref name="typeName" /> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="114ca-537">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-538"><paramref name="bindingAttr" /> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="114ca-538">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="114ca-539"><paramref name="bindingAttr" /> および <paramref name="args" /> を使用して <paramref name="typeName" /> コンストラクターをシークおよび識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="114ca-539">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-540"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-540">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="114ca-541">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-541">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="114ca-542"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-542">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="114ca-543"><paramref name="args" /> から <paramref name="typeName" /> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span><span class="sxs-lookup"><span data-stu-id="114ca-543">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-544"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-544">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="114ca-545">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-545">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="114ca-546">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="114ca-546">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="114ca-547">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="114ca-547">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="114ca-548">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="114ca-548">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="114ca-549">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-549">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="114ca-550">名前を指定したアセンブリと、指定したパラメーターに最も一致するコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-550">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="114ca-551">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="114ca-551">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-552">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="114ca-552">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="114ca-553">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が許可されている場合、非パブリックな型とメンバーの作成に使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型とメンバーを含むアセンブリの許可セットが制限されているかどうか呼び出し元の設定またはそのサブセットを付与します。</span><span class="sxs-lookup"><span data-stu-id="114ca-553">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="114ca-554">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="114ca-554">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="114ca-555">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-555">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-556"><paramref name="typeName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="114ca-556"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="114ca-557">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-557">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-558"><paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-558"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="114ca-559"><paramref name="assemblyName" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-559"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="114ca-560">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-560">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-561">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-561">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="114ca-562">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="114ca-562">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="114ca-563"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-563">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="114ca-564"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-564">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="114ca-565">または</span><span class="sxs-lookup"><span data-stu-id="114ca-565">-or-</span></span> 
 <span data-ttu-id="114ca-566"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-566"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="114ca-567">または</span><span class="sxs-lookup"><span data-stu-id="114ca-567">-or-</span></span> 
<span data-ttu-id="114ca-568"><paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-568">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="114ca-569"><paramref name="assemblyName" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-569"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="114ca-570">または</span><span class="sxs-lookup"><span data-stu-id="114ca-570">-or-</span></span> 
<span data-ttu-id="114ca-571">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="114ca-571">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="114ca-572">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="114ca-572">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="114ca-573">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="114ca-573">An assembly or module was loaded twice with two different evidences.</span></span>  
  
<span data-ttu-id="114ca-574">または</span><span class="sxs-lookup"><span data-stu-id="114ca-574">-or-</span></span> 
<span data-ttu-id="114ca-575">アセンブリ名かコード ベースが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-575">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="114ca-576">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span><span class="sxs-lookup"><span data-stu-id="114ca-576">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="114ca-577">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="114ca-577">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-578">非パブリックな型およびそのアクセス許可セットに関係なくのメンバーにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="114ca-578">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="114ca-579">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-579">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="114ca-580"><paramref name="typeName" /> という名前の型が作成されるドメイン。</span><span class="sxs-lookup"><span data-stu-id="114ca-580">The domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="114ca-581"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-581">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="114ca-582"><paramref name="assemblyName" /> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-582">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="114ca-583">必要な型の完全修飾名。</span><span class="sxs-lookup"><span data-stu-id="114ca-583">The fully qualified name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="114ca-584"><paramref name="typeName" /> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="114ca-584"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="114ca-585"><paramref name="typeName" /> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="114ca-585">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-586"><paramref name="bindingAttr" /> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="114ca-586">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="114ca-587"><paramref name="bindingAttr" /> および <paramref name="args" /> を使用して <paramref name="typeName" /> コンストラクターをシークおよび識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="114ca-587">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-588"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-588">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="114ca-589">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-589">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="114ca-590"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-590">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="114ca-591"><paramref name="args" /> から <paramref name="typeName" /> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span><span class="sxs-lookup"><span data-stu-id="114ca-591">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-592"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-592">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="114ca-593">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-593">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="114ca-594">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="114ca-594">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="114ca-595">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="114ca-595">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="114ca-596">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="114ca-596">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="114ca-597">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-597">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="114ca-598">名前を指定したアセンブリと、指定したパラメーターに最も適したコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-598">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="114ca-599">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="114ca-599">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-600">使用<xref:System.Activator.CreateInstance%2A>ホストがセキュリティのアクセス許可が制限されているアプリケーション ドメインでコードを実行する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="114ca-600">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="114ca-601">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="114ca-601">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="114ca-602">このメソッドを使用して<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>に完全な信頼の直前の呼び出し元が必要です。</span><span class="sxs-lookup"><span data-stu-id="114ca-602">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-603"><paramref name="domain" /> または <paramref name="typeName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="114ca-603"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="114ca-604">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-604">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-605"><paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-605"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="114ca-606"><paramref name="assemblyName" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-606"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="114ca-607">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-607">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-608">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-608">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="114ca-609">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="114ca-609">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="114ca-610"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-610">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="114ca-611"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-611">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="114ca-612">または</span><span class="sxs-lookup"><span data-stu-id="114ca-612">-or-</span></span> 
 <span data-ttu-id="114ca-613"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-613"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="114ca-614">または</span><span class="sxs-lookup"><span data-stu-id="114ca-614">-or-</span></span> 
<span data-ttu-id="114ca-615"><paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-615">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="114ca-616"><paramref name="assemblyName" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-616"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="114ca-617">または</span><span class="sxs-lookup"><span data-stu-id="114ca-617">-or-</span></span> 
<span data-ttu-id="114ca-618">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="114ca-618">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="114ca-619">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="114ca-619">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="114ca-620">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="114ca-620">An assembly or module was loaded twice with two different evidences.</span></span>  
  
<span data-ttu-id="114ca-621">または</span><span class="sxs-lookup"><span data-stu-id="114ca-621">-or-</span></span> 
<span data-ttu-id="114ca-622">アセンブリ名かコード ベースが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-622">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="114ca-623">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="114ca-623">requires full trust for the immediate caller.</span></span> <span data-ttu-id="114ca-624">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="114ca-624">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="114ca-625">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span><span class="sxs-lookup"><span data-stu-id="114ca-625">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="114ca-626">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="114ca-626">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-627">すべての型のメンバーに対して操作を呼び出す権限です。</span><span class="sxs-lookup"><span data-stu-id="114ca-627">for the ability to invoke operations on all type members.</span></span> <span data-ttu-id="114ca-628">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-628">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="114ca-629"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-629">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="114ca-630"><paramref name="assemblyName" /> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-630">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="114ca-631">必要な型の完全修飾名。</span><span class="sxs-lookup"><span data-stu-id="114ca-631">The fully qualified name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="114ca-632"><paramref name="typeName" /> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="114ca-632"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="114ca-633"><paramref name="typeName" /> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="114ca-633">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-634"><paramref name="bindingAttr" /> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="114ca-634">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="114ca-635"><paramref name="bindingAttr" /> および <paramref name="args" /> を使用して <paramref name="typeName" /> コンストラクターをシークおよび識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="114ca-635">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-636"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-636">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="114ca-637">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-637">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="114ca-638"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-638">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="114ca-639"><paramref name="args" /> から <paramref name="typeName" /> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span><span class="sxs-lookup"><span data-stu-id="114ca-639">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-640"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-640">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="114ca-641">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-641">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="114ca-642">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="114ca-642">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="114ca-643">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="114ca-643">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="114ca-644">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="114ca-644">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="114ca-645">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-645">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <param name="securityInfo"><span data-ttu-id="114ca-646">セキュリティ ポリシーがコードに与えるアクセス許可を決定するために使用する情報。</span><span class="sxs-lookup"><span data-stu-id="114ca-646">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="114ca-647">名前を指定したアセンブリと、指定したパラメーターに最も一致するコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-647">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="114ca-648">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="114ca-648">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-649">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="114ca-649">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="114ca-650">以降では、 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]、このメソッドは、呼び出し元が許可されている場合、非パブリックな型とメンバーの作成に使用できます<xref:System.Security.Permissions.ReflectionPermission>で、<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>フラグと非パブリックな型とメンバーを含むアセンブリの許可セットが制限されているかどうか呼び出し元の設定またはそのサブセットを付与します。</span><span class="sxs-lookup"><span data-stu-id="114ca-650">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="114ca-651">(を参照してください[リフレクションに関するセキュリティの考慮事項](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md))。</span><span class="sxs-lookup"><span data-stu-id="114ca-651">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="114ca-652">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-652">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-653"><paramref name="typeName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="114ca-653"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="114ca-654">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-654">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-655"><paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-655"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="114ca-656"><paramref name="assemblyName" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-656"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="114ca-657">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-657">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-658">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-658">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="114ca-659">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="114ca-659">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="114ca-660"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-660">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="114ca-661"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-661">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="114ca-662">または</span><span class="sxs-lookup"><span data-stu-id="114ca-662">-or-</span></span> 
 <span data-ttu-id="114ca-663"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-663"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="114ca-664">または</span><span class="sxs-lookup"><span data-stu-id="114ca-664">-or-</span></span> 
<span data-ttu-id="114ca-665"><paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-665">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="114ca-666"><paramref name="assemblyName" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-666"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="114ca-667">または</span><span class="sxs-lookup"><span data-stu-id="114ca-667">-or-</span></span> 
<span data-ttu-id="114ca-668">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="114ca-668">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="114ca-669">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="114ca-669">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="114ca-670">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="114ca-670">An assembly or module was loaded twice with two different evidences.</span></span>  
  
<span data-ttu-id="114ca-671">または</span><span class="sxs-lookup"><span data-stu-id="114ca-671">-or-</span></span> 
<span data-ttu-id="114ca-672">アセンブリ名かコード ベースが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-672">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="114ca-673">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span><span class="sxs-lookup"><span data-stu-id="114ca-673">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="114ca-674">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="114ca-674">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-675">非パブリックな型およびそのアクセス許可セットに関係なくのメンバーにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="114ca-675">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="114ca-676">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-676">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="114ca-677"><paramref name="typeName" /> という名前の型が作成されるドメイン。</span><span class="sxs-lookup"><span data-stu-id="114ca-677">The domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="114ca-678"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-678">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="114ca-679"><paramref name="assemblyName" /> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-679">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="114ca-680">必要な型の完全修飾名。</span><span class="sxs-lookup"><span data-stu-id="114ca-680">The fully qualified name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="114ca-681"><paramref name="typeName" /> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="114ca-681"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="114ca-682"><paramref name="typeName" /> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="114ca-682">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-683"><paramref name="bindingAttr" /> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="114ca-683">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="114ca-684"><paramref name="bindingAttr" /> および <paramref name="args" /> を使用して <paramref name="typeName" /> コンストラクターをシークおよび識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="114ca-684">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-685"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-685">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="114ca-686">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-686">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="114ca-687"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-687">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="114ca-688"><paramref name="args" /> から <paramref name="typeName" /> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span><span class="sxs-lookup"><span data-stu-id="114ca-688">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-689"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-689">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="114ca-690">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-690">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="114ca-691">通常、これは単一の <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="114ca-691">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object.</span></span> <span data-ttu-id="114ca-692"><see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> により、リモート オブジェクトのアクティブ化に必要な URL が指定されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-692">The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object.</span></span></param>
        <param name="securityAttributes"><span data-ttu-id="114ca-693">セキュリティ ポリシーがコードに与えるアクセス許可を決定するために使用する情報。</span><span class="sxs-lookup"><span data-stu-id="114ca-693">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="114ca-694">名前を指定したアセンブリと、指定したパラメーターに最も適したコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-694">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="114ca-695">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="114ca-695">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-696">使用<xref:System.Activator.CreateInstance%2A>ホストがセキュリティのアクセス許可が制限されているアプリケーション ドメインでコードを実行する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="114ca-696">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="114ca-697">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="114ca-697">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="114ca-698">このメソッドを使用して<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>に完全な信頼の直前の呼び出し元が必要です。</span><span class="sxs-lookup"><span data-stu-id="114ca-698">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-699"><paramref name="domain" /> または <paramref name="typeName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="114ca-699"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="114ca-700">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-700">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-701"><paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-701"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="114ca-702"><paramref name="assemblyName" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-702"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="114ca-703">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-703">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-704">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-704">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="114ca-705">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="114ca-705">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="114ca-706"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-706">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="114ca-707"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-707">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="114ca-708">または</span><span class="sxs-lookup"><span data-stu-id="114ca-708">-or-</span></span> 
 <span data-ttu-id="114ca-709"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-709"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="114ca-710">または</span><span class="sxs-lookup"><span data-stu-id="114ca-710">-or-</span></span> 
<span data-ttu-id="114ca-711"><paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-711">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="114ca-712"><paramref name="assemblyName" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-712"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="114ca-713">または</span><span class="sxs-lookup"><span data-stu-id="114ca-713">-or-</span></span> 
<span data-ttu-id="114ca-714">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="114ca-714">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="114ca-715">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="114ca-715">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="114ca-716">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="114ca-716">An assembly or module was loaded twice with two different evidences.</span></span>  
  
<span data-ttu-id="114ca-717">または</span><span class="sxs-lookup"><span data-stu-id="114ca-717">-or-</span></span> 
<span data-ttu-id="114ca-718">アセンブリ名かコード ベースが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-718">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="114ca-719">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span><span class="sxs-lookup"><span data-stu-id="114ca-719">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="114ca-720">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="114ca-720">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-721">すべての型のメンバーに対して操作を呼び出す権限です。</span><span class="sxs-lookup"><span data-stu-id="114ca-721">for the ability to invoke operations on all type members.</span></span> <span data-ttu-id="114ca-722">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-722">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="114ca-723">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="114ca-723">requires full trust for the immediate caller.</span></span> <span data-ttu-id="114ca-724">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="114ca-724">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T CreateInstance&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T CreateInstance&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T CreateInstance();" />
      <MemberSignature Language="F#" Value="static member CreateInstance : unit -&gt; 'T" Usage="System.Activator.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="114ca-725">作成する型。</span><span class="sxs-lookup"><span data-stu-id="114ca-725">The type to create.</span></span></typeparam>
        <summary><span data-ttu-id="114ca-726">パラメーターなしのコンストラクターを使用して、指定されたジェネリック型パラメーターによって決定される型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-726">Creates an instance of the type designated by the specified generic type parameter, using the parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="114ca-727">新しく作成されたオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="114ca-727">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-728"><xref:System.Activator.CreateInstance%60%601>ジェネリック メソッドは、コンパイラで型パラメーターで指定された型のインスタンス化を実装するために使用します。</span><span class="sxs-lookup"><span data-stu-id="114ca-728">The <xref:System.Activator.CreateInstance%60%601> generic method is used by compilers to implement the instantiation of types specified by type parameters.</span></span> <span data-ttu-id="114ca-729">たとえば、次のジェネリック メソッドの実装で`new T()`(`gcnew T()` C++ で) を使用して、<xref:System.Activator.CreateInstance%60%601>ジェネリック メソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-729">For example, in the following generic method, the implementation of `new T()` (`gcnew T()` in C++) uses the <xref:System.Activator.CreateInstance%60%601> generic method.</span></span>  
  
 [!code-cpp[System.Activation.CreateInstance~~1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cpp/remarks.cpp#1)]
 [!code-csharp[System.Activation.CreateInstance~~1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cs/remarks.cs#1)]
 [!code-vb[System.Activation.CreateInstance~~1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activation.createinstance~~1/vb/remarks.vb#1)]  
  
 <span data-ttu-id="114ca-730">一般の使用はありません、<xref:System.Activator.CreateInstance%60%601>型は、コンパイル時に認識する必要がありますので、アプリケーションでジェネリック メソッドのコードします。</span><span class="sxs-lookup"><span data-stu-id="114ca-730">In general, there is no use for the <xref:System.Activator.CreateInstance%60%601> generic method in application code, because the type must be known at compile time.</span></span> <span data-ttu-id="114ca-731">型がコンパイル時に既知の場合は、通常のインスタンス化の構文を使用できます (`new` c# 演算子`New`Visual basic で`gcnew`C++ で)。</span><span class="sxs-lookup"><span data-stu-id="114ca-731">If the type is known at compile time, normal instantiation syntax can be used (`new` operator in C#, `New` in Visual Basic, `gcnew` in C++).</span></span> <span data-ttu-id="114ca-732">コンパイル時に、型が不明な場合は、非ジェネリック オーバー ロードを呼び出すことができます<xref:System.Activator.CreateInstance%2A>します。</span><span class="sxs-lookup"><span data-stu-id="114ca-732">If the type is not known at compile time, you can call a non-generic overload of <xref:System.Activator.CreateInstance%2A>.</span></span>  
  
 <span data-ttu-id="114ca-733">オーバー ロードはありません、<xref:System.Activator.CreateInstance%60%601>ジェネリック メソッドのオーバー ロード、汎用でないため、引数リストを取る<xref:System.Activator.CreateInstance%2A>既に遅延バインディングのコンス トラクターの解決を提供します。</span><span class="sxs-lookup"><span data-stu-id="114ca-733">There are no overloads of the <xref:System.Activator.CreateInstance%60%601> generic method that take argument lists, because the non-generic overloads of <xref:System.Activator.CreateInstance%2A> already provide late-bound constructor resolution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMethodException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="114ca-734"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows ストア アプリ用 .NET</see> または<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">ポータブル クラス ライブラリ</see>では、基本クラスの例外である <see cref="T:System.MissingMemberException" /> を代わりにキャッチします。</span><span class="sxs-lookup"><span data-stu-id="114ca-734">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="114ca-735"><paramref name="T" /> に指定されている型には、パラメーターなしのコンストラクターがありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-735">The type that is specified for <paramref name="T" /> does not have a parameterless constructor.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="114ca-736">名前を指定したアセンブリ ファイルと、指定したパラメーターに最も一致するコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-736">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="114ca-737"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-737">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="114ca-738">推奨される型の名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-738">The name of the preferred type.</span></span></param>
        <summary><span data-ttu-id="114ca-739">名前を指定したアセンブリ ファイルと、既定のコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-739">Creates an instance of the type whose name is specified, using the named assembly file and default constructor.</span></span></summary>
        <returns><span data-ttu-id="114ca-740">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="114ca-740">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-741">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-741">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="114ca-742">その他の呼び出されたメソッドによってスローされる例外については、例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-742">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="114ca-743">次のコード例を呼び出す方法を示します、<xref:System.Activator.CreateInstanceFrom%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-743">The following code example demonstrates how to call the <xref:System.Activator.CreateInstanceFrom%2A> method.</span></span> <span data-ttu-id="114ca-744">このコード例が示されている例の一部、<xref:System.Activator>クラス。</span><span class="sxs-lookup"><span data-stu-id="114ca-744">This code example is part of a larger example provided for the <xref:System.Activator> class.</span></span>  
  
 [!code-cpp[ActivatorX#3](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#3)]
 [!code-csharp[ActivatorX#3](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#3)]
 [!code-vb[ActivatorX#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-745"><paramref name="typeName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="114ca-745"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="114ca-746">一致するパブリック コンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-746">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-747"><paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-747"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="114ca-748"><paramref name="assemblyFile" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-748"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="114ca-749">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-749">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-750">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-750">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="114ca-751">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="114ca-751">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="114ca-752">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-752">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="114ca-753"><paramref name="assemblyFile" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-753"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="114ca-754">または</span><span class="sxs-lookup"><span data-stu-id="114ca-754">-or-</span></span> 
<span data-ttu-id="114ca-755">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="114ca-755">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="114ca-756">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="114ca-756">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="114ca-757">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span><span class="sxs-lookup"><span data-stu-id="114ca-757">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="114ca-758">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="114ca-758">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="114ca-759">ディレクトリ パスを検索し、その内容を読み取る権限です。</span><span class="sxs-lookup"><span data-stu-id="114ca-759">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="114ca-760">列挙体に関連付けられている:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="114ca-760">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-761">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span><span class="sxs-lookup"><span data-stu-id="114ca-761">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="114ca-762">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-762">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (domain As AppDomain, assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="114ca-763"><paramref name="typeName" /> という名前の型が作成されるリモート ドメイン。</span><span class="sxs-lookup"><span data-stu-id="114ca-763">The remote domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="114ca-764"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-764">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="114ca-765">推奨される型の名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-765">The name of the preferred type.</span></span></param>
        <summary><span data-ttu-id="114ca-766">名前を指定したアセンブリ ファイルと既定のコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-766">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and default constructor.</span></span></summary>
        <returns><span data-ttu-id="114ca-767">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="114ca-767">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-768">使用<xref:System.Activator.CreateInstanceFrom%2A>ホストがセキュリティのアクセス許可が制限されているアプリケーション ドメインでコードを実行する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="114ca-768">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="114ca-769">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-769">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="114ca-770">このメソッドを使用して<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>に完全な信頼の直前の呼び出し元が必要です。</span><span class="sxs-lookup"><span data-stu-id="114ca-770">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="114ca-771">その他の呼び出されたメソッドによってスローされる例外については、例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-771">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-772"><paramref name="domain" /> または <paramref name="typeName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="114ca-772"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="114ca-773">一致するパブリック コンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-773">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-774"><paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-774"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="114ca-775"><paramref name="assemblyFile" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-775"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="114ca-776">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-776">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-777">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-777">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="114ca-778">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="114ca-778">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="114ca-779">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-779">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="114ca-780"><paramref name="assemblyFile" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-780"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="114ca-781">または</span><span class="sxs-lookup"><span data-stu-id="114ca-781">-or-</span></span> 
<span data-ttu-id="114ca-782">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="114ca-782">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="114ca-783">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="114ca-783">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="114ca-784">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span><span class="sxs-lookup"><span data-stu-id="114ca-784">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="114ca-785">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="114ca-785">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="114ca-786">ディレクトリ パスを検索し、その内容を読み取る権限です。</span><span class="sxs-lookup"><span data-stu-id="114ca-786">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="114ca-787">列挙体に関連付けられている:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="114ca-787">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="114ca-788">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="114ca-788">requires full trust for the immediate caller.</span></span> <span data-ttu-id="114ca-789">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="114ca-789">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="114ca-790"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-790">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="114ca-791">推奨される型の名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-791">The name of the preferred type.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="114ca-792">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-792">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="114ca-793">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="114ca-793">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="114ca-794">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="114ca-794">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="114ca-795">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="114ca-795">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="114ca-796">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-796">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="114ca-797">名前を指定したアセンブリ ファイルと、既定のコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-797">Creates an instance of the type whose name is specified, using the named assembly file and default constructor.</span></span></summary>
        <returns><span data-ttu-id="114ca-798">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="114ca-798">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-799">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-799">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="114ca-800">その他の呼び出されたメソッドによってスローされる例外については、例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-800">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-801"><paramref name="typeName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="114ca-801"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="114ca-802">一致するパブリック コンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-802">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-803"><paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-803"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="114ca-804"><paramref name="assemblyFile" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-804"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="114ca-805">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-805">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-806">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-806">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="114ca-807">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="114ca-807">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="114ca-808"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-808"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="114ca-809">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-809">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="114ca-810"><paramref name="assemblyFile" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-810"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="114ca-811">または</span><span class="sxs-lookup"><span data-stu-id="114ca-811">-or-</span></span> 
<span data-ttu-id="114ca-812">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="114ca-812">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="114ca-813">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="114ca-813">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="114ca-814">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span><span class="sxs-lookup"><span data-stu-id="114ca-814">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="114ca-815">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="114ca-815">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="114ca-816">ディレクトリ パスを検索し、その内容を読み取る権限です。</span><span class="sxs-lookup"><span data-stu-id="114ca-816">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="114ca-817">列挙体に関連付けられている:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="114ca-817">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-818">アクセス許可に関係なく、非パブリックな型の次のように設定します。</span><span class="sxs-lookup"><span data-stu-id="114ca-818">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="114ca-819">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-819">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="114ca-820"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-820">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="114ca-821">推奨される型の名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-821">The name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="114ca-822"><paramref name="typeName" /> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="114ca-822"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="114ca-823"><paramref name="typeName" /> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="114ca-823">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-824"><paramref name="bindingAttr" /> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="114ca-824">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="114ca-825"><paramref name="bindingAttr" /> および <paramref name="args" /> を使用して <paramref name="typeName" /> コンストラクターをシークおよび識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="114ca-825">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-826"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-826">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="114ca-827">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-827">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="114ca-828"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-828">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="114ca-829"><paramref name="args" /> から <paramref name="typeName" /> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span><span class="sxs-lookup"><span data-stu-id="114ca-829">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-830"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-830">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="114ca-831">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-831">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="114ca-832">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="114ca-832">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="114ca-833">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="114ca-833">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="114ca-834">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="114ca-834">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="114ca-835">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-835">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="114ca-836">名前を指定したアセンブリ ファイルと、指定したパラメーターに最も一致するコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-836">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="114ca-837">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="114ca-837">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-838">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-838">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="114ca-839">その他の呼び出されたメソッドによってスローされる例外については、例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-839">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-840"><paramref name="typeName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="114ca-840"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="114ca-841">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-841">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-842"><paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-842"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="114ca-843"><paramref name="assemblyFile" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-843"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="114ca-844">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-844">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-845">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-845">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="114ca-846">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="114ca-846">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="114ca-847">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-847">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="114ca-848"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-848"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="114ca-849"><paramref name="assemblyFile" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-849"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="114ca-850">または</span><span class="sxs-lookup"><span data-stu-id="114ca-850">-or-</span></span> 
<span data-ttu-id="114ca-851">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="114ca-851">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="114ca-852">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="114ca-852">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="114ca-853">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span><span class="sxs-lookup"><span data-stu-id="114ca-853">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="114ca-854">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="114ca-854">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="114ca-855">ディレクトリ パスを検索し、その内容を読み取る権限です。</span><span class="sxs-lookup"><span data-stu-id="114ca-855">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="114ca-856">列挙体に関連付けられている:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="114ca-856">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-857">非パブリックな型およびそのアクセス許可セットに関係なくのメンバーにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="114ca-857">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="114ca-858">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-858">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="114ca-859"><paramref name="typeName" /> という名前の型が作成されるリモート ドメイン。</span><span class="sxs-lookup"><span data-stu-id="114ca-859">The remote domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="114ca-860"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-860">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="114ca-861">推奨される型の名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-861">The name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="114ca-862"><paramref name="typeName" /> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="114ca-862"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="114ca-863"><paramref name="typeName" /> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="114ca-863">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-864"><paramref name="bindingAttr" /> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="114ca-864">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="114ca-865"><paramref name="bindingAttr" /> および <paramref name="args" /> を使用して <paramref name="typeName" /> コンストラクターをシークおよび識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="114ca-865">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-866"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-866">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="114ca-867">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-867">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="114ca-868"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-868">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="114ca-869"><paramref name="args" /> から <paramref name="typeName" /> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span><span class="sxs-lookup"><span data-stu-id="114ca-869">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-870"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-870">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="114ca-871">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-871">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="114ca-872">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="114ca-872">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="114ca-873">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="114ca-873">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="114ca-874">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="114ca-874">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="114ca-875">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-875">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="114ca-876">名前を指定したアセンブリ ファイルと、指定したパラメーターに最も適したコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-876">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="114ca-877">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="114ca-877">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-878">使用<xref:System.Activator.CreateInstanceFrom%2A>ホストがセキュリティのアクセス許可が制限されているアプリケーション ドメインでコードを実行する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="114ca-878">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="114ca-879">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-879">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="114ca-880">その他の呼び出されたメソッドによってスローされる例外については、例外セクションを参照して、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-880">For information about other exceptions that can be thrown by invoked methods, see the Exceptions sections of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-881"><paramref name="domain" /> または <paramref name="typeName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="114ca-881"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="114ca-882">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-882">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-883"><paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-883"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="114ca-884"><paramref name="assemblyFile" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-884"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="114ca-885">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-885">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-886">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-886">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="114ca-887">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="114ca-887">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="114ca-888">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-888">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="114ca-889"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-889"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="114ca-890"><paramref name="assemblyFile" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-890"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="114ca-891">または</span><span class="sxs-lookup"><span data-stu-id="114ca-891">-or-</span></span> 
 <span data-ttu-id="114ca-892"><paramref name="assemblyName" /> が、現在読み込まれているバージョンよりも新しいバージョンの共通言語ランタイムを対象としてコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="114ca-892"><paramref name="assemblyName" /> was compiled for a version of the common language runtime that is later than the version that is currently loaded.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="114ca-893">証拠を指定します。</span><span class="sxs-lookup"><span data-stu-id="114ca-893">for supplying evidence.</span></span> <span data-ttu-id="114ca-894">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="114ca-894">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="114ca-895">ディレクトリ パスを検索し、その内容を読み取る権限です。</span><span class="sxs-lookup"><span data-stu-id="114ca-895">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="114ca-896">列挙体に関連付けられている:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="114ca-896">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-897">非パブリックな型およびそのアクセス許可セットに関係なくのメンバーにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="114ca-897">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="114ca-898">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-898">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="114ca-899">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="114ca-899">requires full trust for the immediate caller.</span></span> <span data-ttu-id="114ca-900">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="114ca-900">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="114ca-901"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-901">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="114ca-902">推奨される型の名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-902">The name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="114ca-903"><paramref name="typeName" /> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="114ca-903"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="114ca-904"><paramref name="typeName" /> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="114ca-904">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-905"><paramref name="bindingAttr" /> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="114ca-905">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="114ca-906"><paramref name="bindingAttr" /> および <paramref name="args" /> を使用して <paramref name="typeName" /> コンストラクターをシークおよび識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="114ca-906">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-907"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-907">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="114ca-908">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-908">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="114ca-909"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-909">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="114ca-910"><paramref name="args" /> から <paramref name="typeName" /> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span><span class="sxs-lookup"><span data-stu-id="114ca-910">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-911"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-911">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="114ca-912">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-912">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="114ca-913">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="114ca-913">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="114ca-914">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="114ca-914">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="114ca-915">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="114ca-915">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="114ca-916">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-916">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <param name="securityInfo"><span data-ttu-id="114ca-917">セキュリティ ポリシーがコードに与えるアクセス許可を決定するために使用する情報。</span><span class="sxs-lookup"><span data-stu-id="114ca-917">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="114ca-918">名前を指定したアセンブリ ファイルと、指定したパラメーターに最も一致するコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-918">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="114ca-919">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="114ca-919">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-920">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-920">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="114ca-921">その他の呼び出されたメソッドによってスローされる例外については、例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-921">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-922"><paramref name="typeName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="114ca-922"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="114ca-923">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-923">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-924"><paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-924"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="114ca-925"><paramref name="assemblyFile" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-925"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="114ca-926">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-926">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-927">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-927">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="114ca-928">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="114ca-928">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="114ca-929">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-929">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="114ca-930"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-930"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="114ca-931"><paramref name="assemblyFile" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-931"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="114ca-932">または</span><span class="sxs-lookup"><span data-stu-id="114ca-932">-or-</span></span> 
<span data-ttu-id="114ca-933">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="114ca-933">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="114ca-934">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="114ca-934">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="114ca-935">デリゲートのインスタンスを作成するときに、アンマネージ コードを呼び出す機能。</span><span class="sxs-lookup"><span data-stu-id="114ca-935">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="114ca-936">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="114ca-936">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="114ca-937">ディレクトリ パスを検索し、その内容を読み取る権限です。</span><span class="sxs-lookup"><span data-stu-id="114ca-937">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="114ca-938">列挙体に関連付けられている:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="114ca-938">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-939">非パブリックな型およびそのアクセス許可セットに関係なくのメンバーにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="114ca-939">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="114ca-940">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-940">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Methods which use Evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="114ca-941"><paramref name="typeName" /> という名前の型が作成されるリモート ドメイン。</span><span class="sxs-lookup"><span data-stu-id="114ca-941">The remote domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="114ca-942"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-942">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="114ca-943">推奨される型の名前。</span><span class="sxs-lookup"><span data-stu-id="114ca-943">The name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="114ca-944"><paramref name="typeName" /> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="114ca-944"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="114ca-945"><paramref name="typeName" /> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="114ca-945">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-946"><paramref name="bindingAttr" /> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="114ca-946">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="114ca-947"><paramref name="bindingAttr" /> および <paramref name="args" /> を使用して <paramref name="typeName" /> コンストラクターをシークおよび識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="114ca-947">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-948"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-948">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="114ca-949">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-949">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="114ca-950"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターなしのコンストラクター (既定のコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-950">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="114ca-951"><paramref name="args" /> から <paramref name="typeName" /> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span><span class="sxs-lookup"><span data-stu-id="114ca-951">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="114ca-952"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-952">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="114ca-953">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-953">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="114ca-954">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="114ca-954">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="114ca-955">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="114ca-955">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="114ca-956">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="114ca-956">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="114ca-957">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-957">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <param name="securityAttributes"><span data-ttu-id="114ca-958">セキュリティ ポリシーがコードに与えるアクセス許可を決定するために使用する情報。</span><span class="sxs-lookup"><span data-stu-id="114ca-958">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="114ca-959">名前を指定したアセンブリ ファイルと、指定したパラメーターに最も適したコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-959">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="114ca-960">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="114ca-960">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-961">使用<xref:System.Activator.CreateInstanceFrom%2A>ホストがセキュリティのアクセス許可が制限されているアプリケーション ドメインでコードを実行する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="114ca-961">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="114ca-962">使用して、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>戻り値のラップを解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-962">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="114ca-963">このメソッドを使用して<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>に完全な信頼の直前の呼び出し元が必要です。</span><span class="sxs-lookup"><span data-stu-id="114ca-963">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="114ca-964">その他の呼び出されたメソッドによってスローされる例外については、例外セクションを参照してください、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>と<xref:System.Activator.CreateInstance%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-964">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-965"><paramref name="domain" /> または <paramref name="typeName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="114ca-965"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="114ca-966">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-966">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="114ca-967"><paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-967"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="114ca-968"><paramref name="assemblyFile" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="114ca-968"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="114ca-969">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-969">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-970">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-970">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="114ca-971">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="114ca-971">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="114ca-972">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-972">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="114ca-973"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-973"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="114ca-974"><paramref name="assemblyFile" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-974"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="114ca-975">または</span><span class="sxs-lookup"><span data-stu-id="114ca-975">-or-</span></span> 
<span data-ttu-id="114ca-976">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="114ca-976">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="114ca-977">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="114ca-977">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="114ca-978">証拠を指定します。</span><span class="sxs-lookup"><span data-stu-id="114ca-978">for supplying evidence.</span></span> <span data-ttu-id="114ca-979">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="114ca-979">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="114ca-980">ディレクトリ パスを検索し、その内容を読み取る権限です。</span><span class="sxs-lookup"><span data-stu-id="114ca-980">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="114ca-981">列挙体に関連付けられている:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="114ca-981">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="114ca-982">非パブリックな型およびそのアクセス許可セットに関係なくのメンバーにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="114ca-982">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="114ca-983">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="114ca-983">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="114ca-984">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="114ca-984">requires full trust for the immediate caller.</span></span> <span data-ttu-id="114ca-985">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="114ca-985">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="114ca-986">既知のオブジェクト用または XML Web サービス用のプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-986">Creates a proxy for a well-known object or XML Web service.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url);" />
      <MemberSignature Language="F#" Value="static member GetObject : Type * string -&gt; obj" Usage="System.Activator.GetObject (type, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="114ca-987">接続する既知のオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="114ca-987">The type of the well-known object to which you want to connect.</span></span></param>
        <param name="url"><span data-ttu-id="114ca-988">既知のオブジェクトの URL。</span><span class="sxs-lookup"><span data-stu-id="114ca-988">The URL of the well-known object.</span></span></param>
        <summary><span data-ttu-id="114ca-989">指定された型と URL が示す既知のオブジェクト用にプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-989">Creates a proxy for the well-known object indicated by the specified type and URL.</span></span></summary>
        <returns><span data-ttu-id="114ca-990">要求した既知のオブジェクトによって提供されたエンドポイントを指すプロキシ。</span><span class="sxs-lookup"><span data-stu-id="114ca-990">A proxy that points to an endpoint served by the requested well-known object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-991">リモート オブジェクトにメッセージを送信プロキシを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="114ca-991">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="114ca-992">コンソール アプリケーションは、プロキシでメソッドが呼び出されるまで、ネットワーク経由で、メッセージは送信されません。</span><span class="sxs-lookup"><span data-stu-id="114ca-992">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-993"><paramref name="type" /> または <paramref name="url" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="114ca-993"><paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException"><span data-ttu-id="114ca-994"><paramref name="type" /> は、参照渡しでマーシャリングされません。インターフェイスでもありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-994"><paramref name="type" /> is not marshaled by reference and is not an interface.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-995">このメンバーは、遅延バインディング メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-995">This member was invoked with a late-binding mechanism.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="114ca-996">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="114ca-996">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="114ca-997">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="114ca-997">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member GetObject : Type * string * obj -&gt; obj" Usage="System.Activator.GetObject (type, url, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="114ca-998">接続する既知のオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="114ca-998">The type of the well-known object to which you want to connect.</span></span></param>
        <param name="url"><span data-ttu-id="114ca-999">既知のオブジェクトの URL。</span><span class="sxs-lookup"><span data-stu-id="114ca-999">The URL of the well-known object.</span></span></param>
        <param name="state"><span data-ttu-id="114ca-1000">チャネル固有データまたは <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="114ca-1000">Channel-specific data or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="114ca-1001">指定された型、URL、およびチャネル データが示す既知のオブジェクト用にプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="114ca-1001">Creates a proxy for the well-known object indicated by the specified type, URL, and channel data.</span></span></summary>
        <returns><span data-ttu-id="114ca-1002">要求した既知のオブジェクトによって提供されたエンドポイントを指すプロキシ。</span><span class="sxs-lookup"><span data-stu-id="114ca-1002">A proxy that points to an endpoint served by the requested well-known object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-1003">リモート オブジェクトにメッセージを送信プロキシを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="114ca-1003">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="114ca-1004">コンソール アプリケーションは、プロキシでメソッドが呼び出されるまで、ネットワーク経由で、メッセージは送信されません。</span><span class="sxs-lookup"><span data-stu-id="114ca-1004">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 <span data-ttu-id="114ca-1005">`state`パラメーターは、チャネルに情報を通信しに渡される、<xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="114ca-1005">The `state` parameter communicates information to the channel, and is passed to the <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="114ca-1006"><paramref name="type" /> または <paramref name="url" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="114ca-1006"><paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException"><span data-ttu-id="114ca-1007"><paramref name="type" /> は、参照渡しでマーシャリングされません。インターフェイスでもありません。</span><span class="sxs-lookup"><span data-stu-id="114ca-1007"><paramref name="type" /> is not marshaled by reference and is not an interface.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="114ca-1008">このメンバーは、遅延バインディング メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="114ca-1008">This member was invoked with a late-binding mechanism.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="114ca-1009">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="114ca-1009">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="114ca-1010">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="114ca-1010">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _Activator.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _Activator.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_Activator::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="114ca-1011">将来使用するために予約されています。</span><span class="sxs-lookup"><span data-stu-id="114ca-1011">Reserved for future use.</span></span> <span data-ttu-id="114ca-1012">IID_NULL にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-1012">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="114ca-1013">渡された割り当てる名前の配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-1013">The passed-in array of names to map.</span></span></param>
        <param name="cNames"><span data-ttu-id="114ca-1014">割り当てる名前のカウント。</span><span class="sxs-lookup"><span data-stu-id="114ca-1014">The count of the names to map.</span></span></param>
        <param name="lcid"><span data-ttu-id="114ca-1015">名前を解釈するロケール コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="114ca-1015">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="114ca-1016">名前に対応する ID を受け取る、呼び出し元割り当て済み配列。</span><span class="sxs-lookup"><span data-stu-id="114ca-1016">The caller-allocated array that receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="114ca-1017">一連の名前を対応する一連のディスパッチ識別子に割り当てます。</span><span class="sxs-lookup"><span data-stu-id="114ca-1017">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-1018">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするために使用し、マネージ コードから呼び出さないする必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-1018">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="114ca-1019">詳細については`IDispatch::GetIDsOfNames`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="114ca-1019">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="114ca-1020">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-1020">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _Activator.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="114ca-1021">返される型情報。</span><span class="sxs-lookup"><span data-stu-id="114ca-1021">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="114ca-1022">型情報のロケール ID。</span><span class="sxs-lookup"><span data-stu-id="114ca-1022">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="114ca-1023">要求された型情報オブジェクトへのポインターを受け取るオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="114ca-1023">An object that receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="114ca-1024">オブジェクトの型情報を取得します。この型情報を使用して、インターフェイスの型情報を取得できます。</span><span class="sxs-lookup"><span data-stu-id="114ca-1024">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-1025">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするために使用し、マネージ コードから呼び出さないする必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-1025">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="114ca-1026">詳細については`IDispatch::GetTypeInfo`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="114ca-1026">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="114ca-1027">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-1027">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _Activator.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="114ca-1028">このメソッドから制御が戻るときに、オブジェクトが提供する型情報インターフェイスの数を受け取る場所へのポインターが格納されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-1028">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span></span> <span data-ttu-id="114ca-1029">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="114ca-1029">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="114ca-1030">オブジェクトが提供する型情報インターフェイスの数 (0 または 1) を取得します。</span><span class="sxs-lookup"><span data-stu-id="114ca-1030">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-1031">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするために使用し、マネージ コードから呼び出さないする必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-1031">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="114ca-1032">詳細については`IDispatch::GetTypeInfoCount`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="114ca-1032">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="114ca-1033">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-1033">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.Invoke">
      <MemberSignature Language="C#" Value="void _Activator.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _Activator.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_Activator::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="114ca-1034">メンバーを識別するディパッチ ID。</span><span class="sxs-lookup"><span data-stu-id="114ca-1034">A dispatch identifier that identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="114ca-1035">将来使用するために予約されています。</span><span class="sxs-lookup"><span data-stu-id="114ca-1035">Reserved for future use.</span></span> <span data-ttu-id="114ca-1036">IID_NULL にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-1036">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="114ca-1037">引数を解釈する対象のロケール コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="114ca-1037">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="114ca-1038">呼び出しのコンテキストを記述するフラグ。</span><span class="sxs-lookup"><span data-stu-id="114ca-1038">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="114ca-1039">引数の配列、名前付き引数の引数 DISPID の配列、および各配列内の要素数のカウントを格納している構造体へのポインター。</span><span class="sxs-lookup"><span data-stu-id="114ca-1039">A pointer to a structure that contains an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="114ca-1040">結果が格納される場所へのポインター。</span><span class="sxs-lookup"><span data-stu-id="114ca-1040">A pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="114ca-1041">例外情報を格納する構造体へのポインター。</span><span class="sxs-lookup"><span data-stu-id="114ca-1041">A pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="114ca-1042">エラーが存在する最初の引数のインデックス。</span><span class="sxs-lookup"><span data-stu-id="114ca-1042">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="114ca-1043">オブジェクトによって公開されたプロパティおよびメソッドへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="114ca-1043">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="114ca-1044">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするために使用し、マネージ コードから呼び出さないする必要があります。</span><span class="sxs-lookup"><span data-stu-id="114ca-1044">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="114ca-1045">詳細については`IDispatch::Invoke`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="114ca-1045">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="114ca-1046">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="114ca-1046">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>