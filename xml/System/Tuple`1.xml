<Type Name="Tuple&lt;T1&gt;" FullName="System.Tuple&lt;T1&gt;">
  <TypeSignature Language="C#" Value="public class Tuple&lt;T1&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`1&lt;T1&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="e1c09-101">組の唯一のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="e1c09-101">The type of the tuple's only component.</span></span></typeparam>
    <summary><span data-ttu-id="e1c09-102">1 タプル、すなわちシングルトンを表します。</span><span class="sxs-lookup"><span data-stu-id="e1c09-102">Represents a 1-tuple, or singleton.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1c09-103">組は、特定の数と一連の値を持つデータ構造です。</span><span class="sxs-lookup"><span data-stu-id="e1c09-103">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="e1c09-104"><xref:System.Tuple%601>クラスは、1 タプル、すなわちシングルトンを 1 つのコンポーネントを持つタプルであるを表します。</span><span class="sxs-lookup"><span data-stu-id="e1c09-104">The <xref:System.Tuple%601> class represents a 1-tuple, or singleton, which is a tuple that has a single component.</span></span> <span data-ttu-id="e1c09-105">シングルトンは、アプリケーションの開発ではあまり使用されます。</span><span class="sxs-lookup"><span data-stu-id="e1c09-105">A singleton is used comparatively rarely in application development.</span></span>  
  
 <span data-ttu-id="e1c09-106">インスタンス化することができます、<xref:System.Tuple%601>を呼び出して、オブジェクト、<xref:System.Tuple%601.%23ctor%2A>コンス トラクターまたは静的な<xref:System.Tuple.Create%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-106">You can instantiate a <xref:System.Tuple%601> object by calling either the <xref:System.Tuple%601.%23ctor%2A> constructor or the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="e1c09-107">タプルの 1 つのコンポーネントの値を取得するには、読み取り専用を使用して<xref:System.Tuple%601.Item1%2A>インスタンス プロパティです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-107">You can retrieve the value of the tuple's single component by using the read-only <xref:System.Tuple%601.Item1%2A> instance property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="e1c09-108">組の唯一のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="e1c09-108">The value of the tuple's only component.</span></span></param>
        <summary><span data-ttu-id="e1c09-109"><see cref="T:System.Tuple`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e1c09-109">Initializes a new instance of the <see cref="T:System.Tuple`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1c09-110">静的なを使用することもできます。<xref:System.Tuple.Create%2A?displayProperty=nameWithType>メソッドを明示的にそのコンポーネントの種類を指定せずに、1 タプル オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="e1c09-110">You can also use the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method to instantiate a 1-tuple object without having to explicitly specify the type of its component.</span></span> <span data-ttu-id="e1c09-111">次の例では、<xref:System.Tuple.Create%2A>がコンポーネントのタイプは 1 組のインスタンスを作成するメソッド<xref:System.Int32>です。</span><span class="sxs-lookup"><span data-stu-id="e1c09-111">The following example uses the <xref:System.Tuple.Create%2A> method to instantiate a 1-tuple whose component is of type <xref:System.Int32>.</span></span>  
  
 [!code-csharp[System.Tuple.Create#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#1)]
 [!code-vb[System.Tuple.Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#1)]  
  
 <span data-ttu-id="e1c09-112">これは、次の呼び出しに、<xref:System.Tuple%601.%23ctor%2A>クラスのコンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-112">This is equivalent to the following call to the <xref:System.Tuple%601.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple.Create#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#2)]
 [!code-vb[System.Tuple.Create#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e1c09-113">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1c09-113">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="e1c09-114">現在の <see cref="T:System.Tuple`1" /> オブジェクトが、指定されたオブジェクトと等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="e1c09-114">Returns a value that indicates whether the current <see cref="T:System.Tuple`1" /> object is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="e1c09-115">現在のインスタンスが指定したオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1c09-115"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1c09-116">`obj`パラメーターは、次の条件下で現在のインスタンスと等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="e1c09-116">The `obj` parameter is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="e1c09-117"><xref:System.Tuple%601>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1c09-117">It is a <xref:System.Tuple%601> object.</span></span>  
  
-   <span data-ttu-id="e1c09-118">その 1 つのコンポーネントでは、現在のインスタンスと同じ型です。</span><span class="sxs-lookup"><span data-stu-id="e1c09-118">Its single component is of the same type as the current instance.</span></span>  
  
-   <span data-ttu-id="e1c09-119">その 1 つのコンポーネントは、現在のインスタンスのと同じです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-119">Its single component is equal to that of the current instance.</span></span> <span data-ttu-id="e1c09-120">等しいかどうかは、各コンポーネントの既定のオブジェクトの等値比較子によって判断されます。</span><span class="sxs-lookup"><span data-stu-id="e1c09-120">Equality is determined by the default object equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1c09-121">次の例では、<xref:System.Tuple%601.Equals%28System.Object%29?displayProperty=nameWithType>を比較するメソッド、<xref:System.Tuple%601>そのコンポーネントは、オブジェクト、<xref:System.Double>を 3 つの値<xref:System.Tuple%601>コンポーネントが含まれるが、次の特性を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1c09-121">The following example calls the <xref:System.Tuple%601.Equals%28System.Object%29?displayProperty=nameWithType> method to compare a <xref:System.Tuple%601> object whose component is a <xref:System.Double> value with three <xref:System.Tuple%601> objects whose components have the following characteristics:</span></span>  
  
-   <span data-ttu-id="e1c09-122">同じ種類 (<xref:System.Double>) と同じ値です。</span><span class="sxs-lookup"><span data-stu-id="e1c09-122">Same type (<xref:System.Double>) and same value.</span></span>  
  
-   <span data-ttu-id="e1c09-123">同じ種類 (<xref:System.Double>)、別の値。</span><span class="sxs-lookup"><span data-stu-id="e1c09-123">Same type (<xref:System.Double>), but different value.</span></span>  
  
-   <span data-ttu-id="e1c09-124">別の種類 (<xref:System.Single>)、値が同じです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-124">Different type (<xref:System.Single>), but same value.</span></span>  
  
 [!code-csharp[System.Tuple\`1.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`1.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1c09-125">現在の <see cref="T:System.Tuple`1" /> オブジェクトのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="e1c09-125">Returns the hash code for the current <see cref="T:System.Tuple`1" /> object.</span></span></summary>
        <returns><span data-ttu-id="e1c09-126">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="e1c09-126">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`1.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1c09-127"><see cref="T:System.Tuple`1" /> オブジェクトの単一のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e1c09-127">Gets the value of the <see cref="T:System.Tuple`1" /> object's single component.</span></span></summary>
        <value><span data-ttu-id="e1c09-128">現在の <see cref="T:System.Tuple`1" /> オブジェクトの単一のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="e1c09-128">The value of the current <see cref="T:System.Tuple`1" /> object's single component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1c09-129">型を特定することができます、<xref:System.Tuple%601.Item1%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="e1c09-129">You can determine the type of the <xref:System.Tuple%601.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="e1c09-130">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%601.Item1%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-130">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%601.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="e1c09-131">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%601>オブジェクト、および、によって返される配列から最初の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-131">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%601> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="e1c09-132">この例では、両方の方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e1c09-132">The example illustrates both approaches.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1c09-133">次の例では、2 つのシングルトンとそれらのコンポーネントに関する情報を表示します。</span><span class="sxs-lookup"><span data-stu-id="e1c09-133">The following example displays information about two singletons and their components.</span></span>  
  
 [!code-csharp[System.Tuple\`1.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`1.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="e1c09-134">現在のインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1c09-134">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="e1c09-135">比較用のカスタムの規則を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1c09-135">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="e1c09-136">指定された比較子を使用して現在の <see cref="T:System.Tuple`1" /> オブジェクトと指定されたオブジェクトを比較し、並べ替え順序において、現在のオブジェクトの位置が指定されたオブジェクトの前になるか、後ろになるか、同じになるかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="e1c09-136">Compares the current <see cref="T:System.Tuple`1" /> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="e1c09-137">並べ替え順序における、このインスタンスと <paramref name="other" /> の相対位置を示す符号付き整数値 (次の表を参照)。</span><span class="sxs-lookup"><span data-stu-id="e1c09-137">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <span data-ttu-id="e1c09-138"><list type="table"><listheader><term> 値</span><span class="sxs-lookup"><span data-stu-id="e1c09-138"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="e1c09-139"></term><description>説明</span><span class="sxs-lookup"><span data-stu-id="e1c09-139"></term><description> Description</span></span>  
  
 <span data-ttu-id="e1c09-140"></description></listheader><item><term> 負の整数</span><span class="sxs-lookup"><span data-stu-id="e1c09-140"></description></listheader><item><term> A negative integer</span></span>  
  
 <span data-ttu-id="e1c09-141"></term><description> このインスタンスの位置が <paramref name="other" /> よりも前です。</span><span class="sxs-lookup"><span data-stu-id="e1c09-141"></term><description> This instance precedes <paramref name="other" />.</span></span>  
  
 <span data-ttu-id="e1c09-142"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="e1c09-142"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="e1c09-143"></term><description> このインスタンスと <paramref name="other" /> の位置は、並べ替え順序において同じです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-143"></term><description> This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 <span data-ttu-id="e1c09-144"></description></item><item><term> 正の整数</span><span class="sxs-lookup"><span data-stu-id="e1c09-144"></description></item><item><term> A positive integer</span></span>  
  
 <span data-ttu-id="e1c09-145"></term><description> このインスタンスの位置は <paramref name="other" /> よりも後ろです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-145"></term><description> This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1c09-146">並べ替え方法を含むコレクションで呼び出された最もよくはこのメソッドは、直接呼び出すことができます、<xref:System.Collections.IComparer>パラメーター コレクションのメンバーの順序付けをします。</span><span class="sxs-lookup"><span data-stu-id="e1c09-146">Although this method can be called directly, it is most commonly called by collection sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="e1c09-147">たとえば、メソッドによって呼び出されます、<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType>メソッドおよび<xref:System.Collections.SortedList.Add%2A>のメソッド、<xref:System.Collections.SortedList>を使用してインスタンス化されるオブジェクト、<xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-147">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e1c09-148"><xref:System.Tuple%601.System%23Collections%23IStructuralComparable%23CompareTo%2A>並べ替え操作で使用するためのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-148">The <xref:System.Tuple%601.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="e1c09-149">これはありません、比較の主な目的は 2 つのオブジェクトが等しいかどうかを判断するときに使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1c09-149">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="e1c09-150">2 つのオブジェクトが等しいかどうかを判断するを呼び出して、<xref:System.Tuple%601.System%23Collections%23IStructuralEquatable%23Equals%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-150">To determine whether two objects are equal, call the <xref:System.Tuple%601.System%23Collections%23IStructuralEquatable%23Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1c09-151">次の例は、という名前のジェネリック クラスを定義`DescendingComparer`を実装する、<xref:System.Collections.Generic.IComparer%601>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-151">The following example defines a generic class named `DescendingComparer` that implements the <xref:System.Collections.Generic.IComparer%601> interface.</span></span> <span data-ttu-id="e1c09-152">`DescendingComparer` オブジェクトの昇順ではなく、特定の型の既定の比較子によって返される値を反転することによって降順に並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="e1c09-152">`DescendingComparer` sorts objects in descending rather than ascending order by reversing the value returned by the default comparer for a particular type.</span></span> <span data-ttu-id="e1c09-153">ジェネリックのインスタンス`DescendingComparer`クラスに渡され、<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType>メソッドの配列を並べ替えるため<xref:System.Tuple%601>降順内のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1c09-153">An instance of the generic `DescendingComparer` class is then passed to the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method to sort an array of <xref:System.Tuple%601> objects in descending order.</span></span> <span data-ttu-id="e1c09-154">例では、直接呼び出しませんなお、<xref:System.Tuple%601.System%23Collections%23IStructuralComparable%23CompareTo%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-154">Note that the example does not directly call the <xref:System.Tuple%601.System%23Collections%23IStructuralComparable%23CompareTo%2A> method.</span></span> <span data-ttu-id="e1c09-155">このメソッドはによって暗黙的に呼び出されます、<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType>配列内の各要素のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-155">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`1.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`1.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e1c09-156"><paramref name="other" /> は <see cref="T:System.Tuple`1" /> オブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="e1c09-156"><paramref name="other" /> is not a <see cref="T:System.Tuple`1" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="e1c09-157">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1c09-157">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="e1c09-158">2 つのオブジェクトが等しいかどうかの評価に使用するメソッドを定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1c09-158">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="e1c09-159">指定された比較メソッドに基づいて、現在の <see cref="T:System.Tuple`1" /> オブジェクトが指定したオブジェクトと等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="e1c09-159">Returns a value that indicates whether the current <see cref="T:System.Tuple`1" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns>
          <span data-ttu-id="e1c09-160">現在のインスタンスが指定したオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1c09-160"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1c09-161">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e1c09-161">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e1c09-162">これは、<xref:System.Tuple%601> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e1c09-162">It can be used only when the <xref:System.Tuple%601> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="e1c09-163"><xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>実装が呼び出される場合にのみ`other`は`null`、キャスト (c#) またはに (Visual Basic) の変換が正常にすることができるかどうかと、<xref:System.Tuple%601>が 1 つのコンポーネントは、現在のインスタンスと同じ型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1c09-163">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%601> object whose single component is of the same type as the current instance.</span></span> <span data-ttu-id="e1c09-164">メソッドが渡される、<xref:System.Tuple%601.Item1%2A>現在のインスタンスのコンポーネントと<xref:System.Tuple%601.Item1%2A>のコンポーネント、<xref:System.Tuple%601>によって表されるオブジェクト、`other`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="e1c09-164">The method is passed the <xref:System.Tuple%601.Item1%2A> component of the current instance and the <xref:System.Tuple%601.Item1%2A> component of the <xref:System.Tuple%601> object represented by the `other` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1c09-165">次の例では定義、<xref:System.Collections.IEqualityComparer>が等しい場合は約互いに (つまり、1 つの値が場合、その他の.01% 以内) に同等である 2 つの浮動小数点値を考慮しながら実装します。</span><span class="sxs-lookup"><span data-stu-id="e1c09-165">The following example defines an <xref:System.Collections.IEqualityComparer> implementation that considers two floating-point values to be equal if they are approximately equal to each other (that is, if one value is within .01 percent of the other).</span></span>  
  
 [!code-csharp[System.Tuple\`1.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`1.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="e1c09-166">現在の <see cref="T:System.Tuple`1" /> オブジェクトのハッシュ コードを計算する <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> メソッドを持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1c09-166">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`1" /> object.</span></span></param>
        <summary><span data-ttu-id="e1c09-167">指定した計算メソッドを使用して、現在の <see cref="T:System.Tuple`1" /> オブジェクトのハッシュ コードを計算します。</span><span class="sxs-lookup"><span data-stu-id="e1c09-167">Calculates the hash code for the current <see cref="T:System.Tuple`1" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="e1c09-168">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="e1c09-168">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1c09-169">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e1c09-169">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e1c09-170">これは、<xref:System.Tuple%601> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e1c09-170">It can be used only when the <xref:System.Tuple%601> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="e1c09-171">メソッドは、単にへの呼び出しをラップ、`comparer`オブジェクトの<xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType>実装します。</span><span class="sxs-lookup"><span data-stu-id="e1c09-171">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="e1c09-172">2 つのハッシュ コードの計算に使用するアルゴリズムが同じハッシュ コードを返す必要があります<xref:System.Tuple%601>同等であると見なされるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1c09-172">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%601> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e1c09-173">現在のインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1c09-173">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="e1c09-174">現在の <see cref="T:System.Tuple`1" /> オブジェクトと指定されたオブジェクトを比較し、並べ替え順序において、現在のオブジェクトの位置が指定されたオブジェクトの前になるか、後ろになるか、同じになるかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="e1c09-174">Compares the current <see cref="T:System.Tuple`1" /> object to a specified object, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="e1c09-175">並べ替え順序における、このインスタンスと <paramref name="obj" /> の相対位置を示す符号付き整数値 (次の表を参照)。</span><span class="sxs-lookup"><span data-stu-id="e1c09-175">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <span data-ttu-id="e1c09-176"><list type="table"><listheader><term> 値</span><span class="sxs-lookup"><span data-stu-id="e1c09-176"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="e1c09-177"></term><description>説明</span><span class="sxs-lookup"><span data-stu-id="e1c09-177"></term><description> Description</span></span>  
  
 <span data-ttu-id="e1c09-178"></description></listheader><item><term> 負の整数</span><span class="sxs-lookup"><span data-stu-id="e1c09-178"></description></listheader><item><term> A negative integer</span></span>  
  
 <span data-ttu-id="e1c09-179"></term><description> このインスタンスの位置が <paramref name="obj" /> よりも前です。</span><span class="sxs-lookup"><span data-stu-id="e1c09-179"></term><description> This instance precedes <paramref name="obj" />.</span></span>  
  
 <span data-ttu-id="e1c09-180"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="e1c09-180"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="e1c09-181"></term><description> このインスタンスと <paramref name="obj" /> の位置は、並べ替え順序において同じです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-181"></term><description> This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 <span data-ttu-id="e1c09-182"></description></item><item><term> 正の整数</span><span class="sxs-lookup"><span data-stu-id="e1c09-182"></description></item><item><term> A positive integer</span></span>  
  
 <span data-ttu-id="e1c09-183"></term><description> このインスタンスの位置は <paramref name="obj" /> よりも後ろです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-183"></term><description> This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1c09-184">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e1c09-184">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e1c09-185">これは、<xref:System.Tuple%601> のインスタンスが <xref:System.IComparable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e1c09-185">It can be used only when the <xref:System.Tuple%601> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="e1c09-186">このメソッドを提供、<xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType>の実装、<xref:System.Tuple%601>クラスです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-186">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%601> class.</span></span> <span data-ttu-id="e1c09-187">並べ替え方法などのコレクションの既定のオーバー ロードによって最もよく呼び出さは直接メソッドを呼び出すことができます、<xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType>と<xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>コレクションのメンバーの順序付けをします。</span><span class="sxs-lookup"><span data-stu-id="e1c09-187">Although the method can be called directly, it is most commonly called by the default overloads of collection sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e1c09-188"><xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType>並べ替え操作で使用するためのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-188">The <xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method is intended for use in sorting operations.</span></span> <span data-ttu-id="e1c09-189">これはありません、比較の主な目的は 2 つのオブジェクトが等しいかどうかを判断するときに使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1c09-189">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="e1c09-190">2 つのオブジェクトが等しいかどうかを判断するを呼び出して、<xref:System.Tuple%601.Equals%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-190">To determine whether two objects are equal, call the <xref:System.Tuple%601.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="e1c09-191"><xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType>メソッドは、既定値オブジェクトの比較子を使用します。</span><span class="sxs-lookup"><span data-stu-id="e1c09-191">The <xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method uses the default object  comparer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1c09-192">次の例は、そのコンポーネントは、シングルトンの配列を作成、<xref:System.Double>値。</span><span class="sxs-lookup"><span data-stu-id="e1c09-192">The following example creates an array of singletons whose component is a <xref:System.Double> value.</span></span> <span data-ttu-id="e1c09-193">並べ替えられていない組の各コンポーネントの値を表示して、配列を並べ替え、および並べ替え順序で値を表示します。</span><span class="sxs-lookup"><span data-stu-id="e1c09-193">It displays the value of each tuple component in unsorted order, sorts the array, and then displays the values in sorted order.</span></span> <span data-ttu-id="e1c09-194">例では、直接呼び出しませんなお、<xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-194">Note that the example does not directly call the <xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="e1c09-195">このメソッドはによって暗黙的に呼び出されます、<xref:System.Array.Sort%28System.Array%29>配列内の各要素のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-195">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`1.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`1.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e1c09-196"><paramref name="obj" /> は <see cref="T:System.Tuple`1" /> オブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="e1c09-196"><paramref name="obj" /> is not a <see cref="T:System.Tuple`1" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple`1.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`1.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Runtime.CompilerServices.ITuple.Item[int] { System::Object ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="e1c09-197"><see langword="Tuple" /> 要素のインデックス。</span><span class="sxs-lookup"><span data-stu-id="e1c09-197">The index of the <see langword="Tuple" /> element.</span></span> <span data-ttu-id="e1c09-198"><c>index</c> は 0 にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1c09-198"><c>index</c> must be 0.</span></span></param>
        <summary><span data-ttu-id="e1c09-199"><see langword="Tuple" /> 要素の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e1c09-199">Gets the value of the <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="e1c09-200"><see langword="Tuple" /> 要素の値。</span><span class="sxs-lookup"><span data-stu-id="e1c09-200">The value of the <see langword="Tuple" /> element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1c09-201"><xref:System.Tuple%601.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType>プロパティは、明示的なインターフェイス実装です。</span><span class="sxs-lookup"><span data-stu-id="e1c09-201">The <xref:System.Tuple%601.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="e1c09-202">これを呼び出すには、キャストまたは変換する必要があります、<xref:System.Tuple%601>オブジェクトを<xref:System.Runtime.CompilerServices.ITuple>インターフェイス オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1c09-202">To call it, you must cast or convert the <xref:System.Tuple%601> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="e1c09-203"><paramref name="index" /> が 0 より小さいか、0 を超えています。</span><span class="sxs-lookup"><span data-stu-id="e1c09-203"><paramref name="index" /> is less than 0 or greater than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`1.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System.Runtime.CompilerServices.ITuple.Length { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1c09-204"><see langword="Tuple" /> にある要素の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="e1c09-204">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="e1c09-205"><see cref="T:System.Tuple`1" /> オブジェクト内の要素数、1。</span><span class="sxs-lookup"><span data-stu-id="e1c09-205">1, the number of elements in a <see cref="T:System.Tuple`1" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1c09-206"><xref:System.Tuple%601.System%23Runtime%23CompilerServices%23ITuple%23Length%2A>プロパティは、明示的なインターフェイス実装です。</span><span class="sxs-lookup"><span data-stu-id="e1c09-206">The <xref:System.Tuple%601.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="e1c09-207">これを呼び出すには、キャストまたは変換する必要があります、<xref:System.Tuple%601>オブジェクトを<xref:System.Runtime.CompilerServices.ITuple>インターフェイス オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1c09-207">To call it, you must cast or convert the <xref:System.Tuple%601> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1c09-208">この <see cref="T:System.Tuple`1" /> インスタンスの値を表す文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="e1c09-208">Returns a string that represents the value of this <see cref="T:System.Tuple`1" /> instance.</span></span></summary>
        <returns><span data-ttu-id="e1c09-209">この <see cref="T:System.Tuple`1" /> オブジェクトの文字列表現。</span><span class="sxs-lookup"><span data-stu-id="e1c09-209">The string representation of this <see cref="T:System.Tuple`1" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1c09-210">このメソッドによって返される文字列の形式は (*Item1*) ここで、 *Item1*の値を表す、<xref:System.Tuple%601.Item1%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-210">The string returned by this method takes the form (*Item1*), where *Item1* represents the value of the <xref:System.Tuple%601.Item1%2A> property.</span></span> <span data-ttu-id="e1c09-211">場合の値<xref:System.Tuple%601.Item1%2A>は`null`、として表されます<xref:System.String.Empty?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="e1c09-211">If the value of <xref:System.Tuple%601.Item1%2A> is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1c09-212">次の例を示しています、<xref:System.Tuple%601.ToString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e1c09-212">The following example illustrates the <xref:System.Tuple%601.ToString%2A> method.</span></span>  
  
 [!code-csharp[System.Tuple\`1.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`1.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>