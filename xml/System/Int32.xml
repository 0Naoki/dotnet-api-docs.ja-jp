<Type Name="Int32" FullName="System.Int32">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2fe57f430eb7f28b56dee197701837da5c603bac" /><Meta Name="ms.sourcegitcommit" Value="5ef0d02cb57c7153fd9d5417cdcad45665af832e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/29/2019" /><Meta Name="ms.locfileid" Value="70158740" /></Metadata><TypeSignature Language="C#" Value="public struct Int32 : IComparable, IComparable&lt;int&gt;, IConvertible, IEquatable&lt;int&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit int32 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int32&gt;, class System.IConvertible, class System.IEquatable`1&lt;int32&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Int32" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int32&#xA;Implements IComparable, IComparable(Of Integer), IConvertible, IEquatable(Of Integer), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Int32 : IComparable, IComparable&lt;int&gt;, IConvertible, IEquatable&lt;int&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type int = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Int32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Int32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="de1ec-101">32 ビット符号付き整数を表します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-101">Represents a 32-bit signed integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-102"><xref:System.Int32>は、負の 2147483648 ( <xref:System.Int32.MinValue?displayProperty=nameWithType>定数で表されます) から正の 2147483647 ( <xref:System.Int32.MaxValue?displayProperty=nameWithType>定数で表される) までの値を持つ符号付き整数を表す、変更できない値型です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-102"><xref:System.Int32> is an immutable value type that represents signed integers with values that range from negative 2,147,483,648 (which is represented by the <xref:System.Int32.MinValue?displayProperty=nameWithType> constant) through positive 2,147,483,647 (which is represented by the <xref:System.Int32.MaxValue?displayProperty=nameWithType> constant.</span></span> <span data-ttu-id="de1ec-103">.NET Framework には、0 ~ 4294967295 の範囲の値を表す<xref:System.UInt32>、符号なし32ビット整数値型 () も含まれています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-103">The .NET Framework also includes an unsigned 32-bit integer value type, <xref:System.UInt32>, which represents values that range from 0 to 4,294,967,295.</span></span>  
  
## <a name="instantiating-an-int32-value"></a><span data-ttu-id="de1ec-104">Int32 値のインスタンス化</span><span class="sxs-lookup"><span data-stu-id="de1ec-104">Instantiating an Int32 Value</span></span>  
 <span data-ttu-id="de1ec-105">値は<xref:System.Int32>いくつかの方法でインスタンス化できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-105">You can instantiate an <xref:System.Int32> value in several ways:</span></span>  
  
-   <span data-ttu-id="de1ec-106"><xref:System.Int32>変数を宣言し、 <xref:System.Int32>データ型の範囲内のリテラル整数値を割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-106">You can declare an <xref:System.Int32> variable and assign it a literal integer value that is within the range of the <xref:System.Int32> data type.</span></span> <span data-ttu-id="de1ec-107">次の例では<xref:System.Int32> 、2つの変数を宣言し、その値をこのように代入します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-107">The following example declares two <xref:System.Int32> variables and assigns them values in this way.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#1)]
     [!code-vb[System.Int32.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#1)]  
  
-   <span data-ttu-id="de1ec-108">範囲が<xref:System.Int32>型のサブセットである整数型の値を割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-108">You can assign the value of an integer type whose range is a subset of the <xref:System.Int32> type.</span></span> <span data-ttu-id="de1ec-109">これは、のC#キャスト演算子や Visual Basic の変換メソッドを必要としない拡大変換です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-109">This is a widening conversion that does not require a cast operator in C# or a conversion method in Visual Basic.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#4)]
     [!code-vb[System.Int32.Instantiation#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#4)]  
  
-   <span data-ttu-id="de1ec-110">範囲が<xref:System.Int32>型の値を超えている数値型の値を割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-110">You can assign the value of a numeric type whose range exceeds that of the <xref:System.Int32> type.</span></span> <span data-ttu-id="de1ec-111">これは縮小変換であるため、がオンになってC#いる場合`Option Strict`は、のキャスト演算子と Visual Basic の変換メソッドが必要です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-111">This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if `Option Strict` is on.</span></span> <span data-ttu-id="de1ec-112">数値が<xref:System.Single>、小数部分を含む<xref:System.Double>、、 <xref:System.Decimal>またはの値の場合、その小数部の処理は、変換を実行するコンパイラによって異なります。</span><span class="sxs-lookup"><span data-stu-id="de1ec-112">If the numeric value is a <xref:System.Single>, <xref:System.Double>, or <xref:System.Decimal> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion.</span></span> <span data-ttu-id="de1ec-113">次の例では、縮小変換を実行して<xref:System.Int32> 、複数の数値を変数に割り当てています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-113">The following example performs narrowing conversions to assign several numeric values to <xref:System.Int32> variables.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#2)]
     [!code-vb[System.Int32.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#2)]  
  
-   <span data-ttu-id="de1ec-114"><xref:System.Convert>クラスのメソッドを呼び出して、サポートされている任意の型<xref:System.Int32>を値に変換できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-114">You can call a method of the <xref:System.Convert> class to convert any supported type to an <xref:System.Int32> value.</span></span> <span data-ttu-id="de1ec-115">ではインターフェイスが<xref:System.Int32>サポートさ<xref:System.IConvertible>れているため、これが可能です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-115">This is possible because <xref:System.Int32> supports the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="de1ec-116">次の例は、値の<xref:System.Decimal>配列を値に変換する方法を<xref:System.Int32>示しています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-116">The following example illustrates the conversion of an array of <xref:System.Decimal> values to <xref:System.Int32> values.</span></span>  
  
     [!code-csharp[System.Convert.ToInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#4)]
     [!code-vb[System.Convert.ToInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#4)]  
  
-   <span data-ttu-id="de1ec-117"><xref:System.Int32.Parse%2A>または<xref:System.Int32.TryParse%2A>メソッドを呼び出して、 <xref:System.Int32>値<xref:System.Int32>の文字列形式をに変換できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-117">You can call the <xref:System.Int32.Parse%2A> or <xref:System.Int32.TryParse%2A> method to convert the string representation of an <xref:System.Int32> value to an <xref:System.Int32>.</span></span> <span data-ttu-id="de1ec-118">文字列には、10進数または16進数のいずれかを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-118">The string can contain either decimal or hexadecimal digits.</span></span> <span data-ttu-id="de1ec-119">次の例は、10進数と16進数の文字列の両方を使用した解析操作を示しています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-119">The following example illustrates the parse operation by using both a decimal and a hexadecimal string.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#3)]
     [!code-vb[System.Int32.Instantiation#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#3)]  
  
## <a name="performing-operations-on-int32-values"></a><span data-ttu-id="de1ec-120">Int32 値に対する操作の実行</span><span class="sxs-lookup"><span data-stu-id="de1ec-120">Performing Operations on Int32 Values</span></span>  
 <span data-ttu-id="de1ec-121">型<xref:System.Int32>は、加算、減算、除算、乗算、否定、単項否定などの標準的な数値演算をサポートします。</span><span class="sxs-lookup"><span data-stu-id="de1ec-121">The <xref:System.Int32> type supports standard mathematical operations such as addition, subtraction, division, multiplication, negation, and unary negation.</span></span> <span data-ttu-id="de1ec-122">他の整数型と同様に<xref:System.Int32> 、型では、 `AND`ビット`OR`ごと`XOR`の、、、左シフト、および右シフト演算子もサポートされています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-122">Like the other integral types, the <xref:System.Int32> type also supports the bitwise `AND`, `OR`, `XOR`, left shift, and right shift operators.</span></span>  
  
 <span data-ttu-id="de1ec-123">標準の数値演算子を使用して2つ<xref:System.Int32>の値を比較することも<xref:System.Int32.CompareTo%2A> 、 <xref:System.Int32.Equals%2A>メソッドまたはメソッドを呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-123">You can use the standard numeric operators to compare two <xref:System.Int32> values, or you can call the <xref:System.Int32.CompareTo%2A> or <xref:System.Int32.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="de1ec-124">また、 <xref:System.Math>クラスのメンバーを呼び出して、数値の絶対値を取得したり、整数除算から商と剰余を計算したり、最大値または最小値を決定したりするなど、さまざまな数値演算を実行することもできます。整数。数値の符号を取得し、数値を丸めます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-124">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.</span></span>  
  
## <a name="representing-an-int32-as-a-string"></a><span data-ttu-id="de1ec-125">Int32 を文字列として表す</span><span class="sxs-lookup"><span data-stu-id="de1ec-125">Representing an Int32 as a String</span></span>  
 <span data-ttu-id="de1ec-126">型<xref:System.Int32>は、標準およびカスタムの数値書式指定文字列を完全にサポートします。</span><span class="sxs-lookup"><span data-stu-id="de1ec-126">The <xref:System.Int32> type provides full support for standard and custom numeric format strings.</span></span> <span data-ttu-id="de1ec-127">(詳細については、「[書式設定型](~/docs/standard/base-types/formatting-types.md)」、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」、および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください)。</span><span class="sxs-lookup"><span data-stu-id="de1ec-127">(For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md), [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).)</span></span>  
  
 <span data-ttu-id="de1ec-128"><xref:System.Int32>値を、先行ゼロを含まない整数文字列として書式設定するには<xref:System.Int32.ToString> 、パラメーターなしのメソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-128">To format an <xref:System.Int32> value as an integral string with no leading zeros, you can call the parameterless <xref:System.Int32.ToString> method.</span></span> <span data-ttu-id="de1ec-129">"D" 書式指定子を使用すると、指定した数の先行ゼロを文字列形式で含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-129">By using the "D" format specifier, you can also include a specified number of leading zeros in the string representation.</span></span> <span data-ttu-id="de1ec-130">"N" 書式指定子を使用すると、桁区切り記号を含めたり、数値の文字列形式で表示する小数点以下の桁数を指定したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-130">By using the "N" format specifier, you can include group separators and specify the number of decimal digits to appear in the string representation of the number.</span></span> <span data-ttu-id="de1ec-131">"X" 書式指定子を使用すると、 <xref:System.Int32>値を16進文字列として表すことができます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-131">By using the "X" format specifier, you can represent an <xref:System.Int32> value as a hexadecimal string.</span></span> <span data-ttu-id="de1ec-132">次の例では、これらの4つ<xref:System.Int32>の方法で、値の配列の要素の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-132">The following example formats the elements in an array of <xref:System.Int32> values in these four ways.</span></span>  
  
 [!code-csharp[System.Int32.Formatting#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs#1)]
 [!code-vb[System.Int32.Formatting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb#1)]  
  
 <span data-ttu-id="de1ec-133">また、 <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29>メソッドを呼び出し<xref:System.Int32> 、メソッドの2番目のパラメーターとして base を指定することで、バイナリ、8進数、10進数、または16進数の文字列として値を書式設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-133">You can also format an <xref:System.Int32> value as a binary, octal, decimal, or hexadecimal string by calling the <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> method and supplying the base as the method's second parameter.</span></span> <span data-ttu-id="de1ec-134">次の例では、このメソッドを呼び出して、整数値の配列のバイナリ、8進数、および16進数表現を表示します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-134">The following example calls this method to display the binary, octal, and hexadecimal representations of an array of integer values.</span></span>  
  
 [!code-csharp[System.Int32.Formatting#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs#2)]
 [!code-vb[System.Int32.Formatting#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb#2)]  
  
## <a name="working-with-non-decimal-32-bit-integer-values"></a><span data-ttu-id="de1ec-135">10進数以外の32ビット整数値の使用</span><span class="sxs-lookup"><span data-stu-id="de1ec-135">Working with Non-Decimal 32-Bit Integer Values</span></span>  
 <span data-ttu-id="de1ec-136">個々の整数を10進値として使用するだけでなく、整数値を使用してビットごとの演算を実行したり、整数値のバイナリまたは16進表現を使用したりすることもできます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-136">In addition to working with individual integers as decimal values, you may want to perform bitwise operations with integer values, or work with the binary or hexadecimal representations of integer values.</span></span> <span data-ttu-id="de1ec-137"><xref:System.Int32>値は31ビットで表され、30秒のビットは符号ビットとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-137"><xref:System.Int32> values are represented in 31 bits, with the thirty-second bit used as a sign bit.</span></span> <span data-ttu-id="de1ec-138">正の値は、符号と絶対値表現を使用して表されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-138">Positive values are represented by using sign-and-magnitude representation.</span></span> <span data-ttu-id="de1ec-139">負の値は、2の補数表現に含まれています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-139">Negative values are in two's complement representation.</span></span> <span data-ttu-id="de1ec-140">このことは、値に対して<xref:System.Int32>ビットごとの演算を実行する場合や、個々のビットを操作する場合に留意することが重要です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-140">This is important to keep in mind when you perform bitwise operations on <xref:System.Int32> values or when you work with individual bits.</span></span> <span data-ttu-id="de1ec-141">数値、ブール値、または比較演算を任意の2つの非10進値に対して実行するには、両方の値が同じ表現を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="de1ec-141">In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="de1ec-142">この型のすべてのメンバーは、スレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="de1ec-142">All members of this type are thread safe.</span></span> <span data-ttu-id="de1ec-143">インスタンスの状態を変更するように見えるメンバーは、実際には新しい値で初期化された新しいインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-143">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="de1ec-144">他の型と同様に、この型のインスタンスを含む共有変数の読み取りと書き込みは、スレッドセーフを保証するためにロックによって保護される必要があります。</span><span class="sxs-lookup"><span data-stu-id="de1ec-144">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.UInt32" />
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="de1ec-145">サンプル: .NET Core WinForms 書式指定ユーティリティC#()</span><span class="sxs-lookup"><span data-stu-id="de1ec-145">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="de1ec-146">サンプル: .NET Core WinForms の書式設定ユーティリティ (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="de1ec-146">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="de1ec-147">指定したオブジェクトまたは <see cref="T:System.Int32" /> とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-147">Compares this instance to a specified object or <see cref="T:System.Int32" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.CompareTo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(int value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : int -&gt; int&#xA;override this.CompareTo : int -&gt; int" Usage="int.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="de1ec-148">比較対象の整数。</span><span class="sxs-lookup"><span data-stu-id="de1ec-148">An integer to compare.</span></span></param>
        <summary><span data-ttu-id="de1ec-149">指定した 32 ビット符号付き整数とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-149">Compares this instance to a specified 32-bit signed integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="de1ec-150">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="de1ec-150">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="de1ec-151">戻り値</span><span class="sxs-lookup"><span data-stu-id="de1ec-151">Return Value</span></span> 
 </term><description> <span data-ttu-id="de1ec-152">説明</span><span class="sxs-lookup"><span data-stu-id="de1ec-152">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="de1ec-153">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="de1ec-153">Less than zero</span></span> 
 </term><description> <span data-ttu-id="de1ec-154">このインスタンスは <paramref name="value" /> よりも小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-154">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="de1ec-155">0</span><span class="sxs-lookup"><span data-stu-id="de1ec-155">Zero</span></span> 
 </term><description> <span data-ttu-id="de1ec-156">このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-156">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="de1ec-157">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="de1ec-157">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="de1ec-158">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-158">This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-159">このメソッドは、 <xref:System.IComparable%601?displayProperty=nameWithType> `value`パラメーターをオブジェクトに変換する必要<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>がないため、インターフェイスを実装し、メソッドよりも若干優れています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-159">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="de1ec-160">プログラミング言語によっては、パラメーターの型がインスタンスの<xref:System.Int32.CompareTo%2A>型よりも少ない (幅が狭い) メソッドをコーディングすることができます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-160">Depending on your programming language, it might be possible to code a <xref:System.Int32.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="de1ec-161">これが可能なのは、一部のプログラミング言語では、インスタンスと同数のビットを持つ型として、パラメーターを表す暗黙的な拡大変換が実行されるためです。</span><span class="sxs-lookup"><span data-stu-id="de1ec-161">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="de1ec-162">たとえば、インスタンスの型が<xref:System.Int32>で、パラメーターの型がである<xref:System.Byte>とします。</span><span class="sxs-lookup"><span data-stu-id="de1ec-162">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="de1ec-163">C# Microsoft コンパイラは、パラメーターの値をとし<xref:System.Int32>て表す命令を生成し、 <xref:System.Int32>インスタンス<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>と<xref:System.Int32>パラメーターの値を比較するメソッドを生成します。もの.</span><span class="sxs-lookup"><span data-stu-id="de1ec-163">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32>, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="de1ec-164">プログラミング言語のドキュメントを参照して、コンパイラが数値型の暗黙的な拡大変換を実行するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-164">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de1ec-165">メソッドの<xref:System.Int32.CompareTo%28System.Int32%29?displayProperty=nameWithType>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-165">The following example demonstrates the <xref:System.Int32.CompareTo%28System.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="de1ec-166">4つの異なる比較のために、メソッドによって返される値を表示するだけでなく、戻り値を`Comparison`カスタム列挙のメンバーに変換し、値も表示します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-166">In addition to displaying the value returned by the method for four different comparisons, it converts the return value to a member of the custom `Comparison` enumeration, whose value it also displays.</span></span>  
  
 [!code-csharp[System.Int32.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.CompareTo/cs/CompareTo1.cs#1)]
 [!code-vb[System.Int32.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.CompareTo/vb/CompareTo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Int32.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="int.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="de1ec-167">比較対象のオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de1ec-167">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="de1ec-168">指定したオブジェクトとこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-168">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="de1ec-169">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="de1ec-169">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="de1ec-170">戻り値</span><span class="sxs-lookup"><span data-stu-id="de1ec-170">Return Value</span></span> 
 </term><description> <span data-ttu-id="de1ec-171">説明</span><span class="sxs-lookup"><span data-stu-id="de1ec-171">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="de1ec-172">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="de1ec-172">Less than zero</span></span> 
 </term><description> <span data-ttu-id="de1ec-173">このインスタンスは <paramref name="value" /> よりも小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-173">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="de1ec-174">0</span><span class="sxs-lookup"><span data-stu-id="de1ec-174">Zero</span></span> 
 </term><description> <span data-ttu-id="de1ec-175">このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-175">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="de1ec-176">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="de1ec-176">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="de1ec-177">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-177">This instance is greater than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="de1ec-178">- または -</span><span class="sxs-lookup"><span data-stu-id="de1ec-178">-or-</span></span> 
 <span data-ttu-id="de1ec-179"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-179"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-180">のすべての<xref:System.Int32>インスタンスは、その値に関係なく、より`null`も大きいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-180">Any instance of <xref:System.Int32>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="de1ec-181">`value`または`null`の<xref:System.Int32>インスタンスである必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-181">`value` must be `null` or an instance of <xref:System.Int32>; otherwise, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="de1ec-182"><paramref name="value" /> が <see cref="T:System.Int32" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-182"><paramref name="value" /> is not an <see cref="T:System.Int32" />.</span></span></exception>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Int32.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="de1ec-183">対象のインスタンスが、指定したオブジェクトまたは <see cref="T:System.Int32" /> に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-183">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Int32" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (int obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int32 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Equals(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(int obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : int -&gt; bool" Usage="int.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="de1ec-184">このインスタンスと比較する <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="de1ec-184">An <see cref="T:System.Int32" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="de1ec-185">このインスタンスが指定した <see cref="T:System.Int32" /> 値に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-185">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int32" /> value.</span></span></summary>
        <returns><span data-ttu-id="de1ec-186"><paramref name="obj" /> の値がこのインスタンスと同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="de1ec-186"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-187">このメソッドは、 <xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイスを実装し、 `obj`パラメーターを<xref:System.Int32.Equals%28System.Object%29?displayProperty=nameWithType>オブジェクトに変換する必要がないため、より少しのパフォーマンスを発揮します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-187">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Int32.Equals%28System.Object%29?displayProperty=nameWithType> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="de1ec-188">コンパイラのオーバーロードの解決では、2つ<see cref="M:System.Int32.Equals(System.Int32)" />のメソッドオーバーロードの動作の明らかな違いを考慮することができます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-188">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int32.Equals(System.Int32)" /> method overloads.</span></span> <span data-ttu-id="de1ec-189">引数<paramref name="obj" /> <see cref="T:System.Object" />との<see cref="M:System.Int32.Equals(System.Int32)" />間の暗黙の変換が定義されていて、引数がとして型指定されていない場合、コンパイラは暗黙的な変換を実行し、メソッドを呼び出します。<see cref="T:System.Int32" /></span><span class="sxs-lookup"><span data-stu-id="de1ec-189">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int32.Equals(System.Int32)" /> method.</span></span> <span data-ttu-id="de1ec-190">それ以外の場合は<see cref="M:System.Int32.Equals(System.Object)" /> 、メソッドを呼び出します<see langword="false" /> 。この<paramref name="obj" />メソッドは、引数<see cref="T:System.Int32" />が値でない場合は常にを返します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-190">Otherwise, they call the <see cref="M:System.Int32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int32" /> value.</span></span> <span data-ttu-id="de1ec-191">次の例は、2つのメソッドオーバーロード間の動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-191">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="de1ec-192"><see cref="T:System.Byte" /> 、<see cref="T:System.Int16" />、 、および<see cref="T:System.UInt16" />の各値の場合、最初の比較<see cref="M:System.Int32.Equals(System.Int32)" /> では、コンパイラが自動的に拡大変換を実行してメソッドを呼び出します。一方、<see langword="true" /> <see cref="T:System.SByte" />コンパイラがメソッド<see langword="false" />を<see cref="M:System.Int32.Equals(System.Object)" />呼び出すため、2番目の比較はを返します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-192">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.SByte" />, and <see cref="T:System.UInt16" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int32.Equals(System.Int32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int32.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="de1ec-193">[!code-csharp[System.Int32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs#1)] [!code-vb[System.Int32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="de1ec-193">[!code-csharp[System.Int32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs#1)] [!code-vb[System.Int32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb#1)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="int.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="de1ec-194">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="de1ec-194">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="de1ec-195">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-195">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="de1ec-196"><paramref name="obj" /> が <see cref="T:System.Int32" /> のインスタンスで、このインスタンスの値に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="de1ec-196"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Int32" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="de1ec-197">次の例では、の`Equals` `Int32`コンテキストでを使用し、2 `int`つの値`true`を比較して同じ数値を表す`false`かどうかを返します。そうでない場合はを返します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-197">The following example illustrates the use of `Equals` in the context of `Int32`, comparing two `int` values and returning `true` if they represent the same number, or `false` if they do not.</span></span>  
  
 [!code-cpp[Int32_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/Int32_Equals/CPP/int32_equals.cpp#1)]
 [!code-csharp[Int32_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/Int32_Equals/CS/int32_equals.cs#1)]
 [!code-vb[Int32_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Int32_Equals/VB/int32_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="de1ec-198">コンパイラのオーバーロードの解決では、2つ<see cref="M:System.Int32.Equals(System.Int32)" />のメソッドオーバーロードの動作の明らかな違いを考慮することができます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-198">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int32.Equals(System.Int32)" /> method overloads.</span></span> <span data-ttu-id="de1ec-199">引数<paramref name="obj" /> <see cref="T:System.Object" />との<see cref="M:System.Int32.Equals(System.Int32)" />間の暗黙の変換が定義されていて、引数がとして型指定されていない場合、コンパイラは暗黙的な変換を実行し、メソッドを呼び出します。<see cref="T:System.Int32" /></span><span class="sxs-lookup"><span data-stu-id="de1ec-199">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int32.Equals(System.Int32)" /> method.</span></span> <span data-ttu-id="de1ec-200">それ以外の場合は<see cref="M:System.Int32.Equals(System.Object)" /> 、メソッドを呼び出します<see langword="false" /> 。この<paramref name="obj" />メソッドは、引数<see cref="T:System.Int32" />が値でない場合は常にを返します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-200">Otherwise, they call the <see cref="M:System.Int32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int32" /> value.</span></span> <span data-ttu-id="de1ec-201">次の例は、2つのメソッドオーバーロード間の動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-201">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="de1ec-202"><see cref="T:System.Byte" /> 、<see cref="T:System.Int16" />、 、および<see cref="T:System.UInt16" />の各値の場合、最初の比較<see cref="M:System.Int32.Equals(System.Int32)" /> では、コンパイラが自動的に拡大変換を実行してメソッドを呼び出します。一方、<see langword="true" /> <see cref="T:System.SByte" />コンパイラがメソッド<see langword="false" />を<see cref="M:System.Int32.Equals(System.Object)" />呼び出すため、2番目の比較はを返します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-202">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.SByte" />, and <see cref="T:System.UInt16" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int32.Equals(System.Int32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int32.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="de1ec-203">[!code-csharp[System.Int32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs#1)] [!code-vb[System.Int32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="de1ec-203">[!code-csharp[System.Int32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs#1)] [!code-vb[System.Int32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb#1)]</span></span></para></block>
        <altmember cref="M:System.Int32.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="int.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="de1ec-204">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-204">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="de1ec-205">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="de1ec-205">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="int.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="de1ec-206"><see cref="T:System.TypeCode" /> 値型の <see cref="T:System.Int32" />を返します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-206">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="de1ec-207">列挙型定数 <see cref="F:System.TypeCode.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="de1ec-207">The enumerated constant, <see cref="F:System.TypeCode.Int32" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const int MaxValue = 2147483647;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxValue = int32(2147483647)" />
      <MemberSignature Language="DocId" Value="F:System.Int32.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Integer  = 2147483647" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxValue = 2147483647;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : int" Usage="System.int.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2147483647</MemberValue>
      <Docs>
        <summary><span data-ttu-id="de1ec-208"><see cref="T:System.Int32" /> の最大有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-208">Represents the largest possible value of an <see cref="T:System.Int32" />.</span></span> <span data-ttu-id="de1ec-209">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-209">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-210">この定数の値は2147483647です。つまり、16進数の0x7FFFFFFF です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-210">The value of this constant is 2,147,483,647; that is, hexadecimal 0x7FFFFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de1ec-211">次の例では<xref:System.Int32.MaxValue> 、プロパティを使用<xref:System.OverflowException>して、を<xref:System.Int32>値に変換するときに、を使用しないようにします。</span><span class="sxs-lookup"><span data-stu-id="de1ec-211">The following example uses the <xref:System.Int32.MaxValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int32> value.</span></span>  
  
 [!code-cpp[System.Int32.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.int32.maxvalue/cpp/maxvalue1.cpp#1)]
 [!code-csharp[System.Int32.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.maxvalue/cs/maxvalue1.cs#1)]
 [!code-vb[System.Int32.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.maxvalue/vb/maxvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int32.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const int MinValue = -2147483648;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinValue = int32(-2147483648)" />
      <MemberSignature Language="DocId" Value="F:System.Int32.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Integer  = -2147483648" />
      <MemberSignature Language="C++ CLI" Value="public: int MinValue = -2147483648;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : int" Usage="System.int.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147483648</MemberValue>
      <Docs>
        <summary><span data-ttu-id="de1ec-212"><see cref="T:System.Int32" /> の最小有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-212">Represents the smallest possible value of <see cref="T:System.Int32" />.</span></span> <span data-ttu-id="de1ec-213">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-213">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-214">この定数の値は-2147483648 です。つまり、16進数の0x80000000 です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-214">The value of this constant is -2,147,483,648; that is, hexadecimal 0x80000000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de1ec-215">次の例では<xref:System.Int32.MinValue> 、プロパティを使用<xref:System.OverflowException>して、を<xref:System.Int32>値に変換するときに、を使用しないようにします。</span><span class="sxs-lookup"><span data-stu-id="de1ec-215">The following example uses the <xref:System.Int32.MinValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int32> value.</span></span>  
  
 [!code-cpp[System.Int32.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.int32.maxvalue/cpp/maxvalue1.cpp#1)]
 [!code-csharp[System.Int32.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.maxvalue/cs/maxvalue1.cs#1)]
 [!code-vb[System.Int32.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.maxvalue/vb/maxvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int32.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="de1ec-216">数値の文字列形式を、それと等価な 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-216">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.Int32.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; int" Usage="System.int.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="de1ec-217">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="de1ec-217">A string containing a number to convert.</span></span></param>
        <summary><span data-ttu-id="de1ec-218">数値の文字列形式を、それと等価な 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-218">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="de1ec-219"><paramref name="s" /> に格納されている数値と等しい 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="de1ec-219">A 32-bit signed integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-220">パラメーター `s`には、次のような形式の数値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-220">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="de1ec-221">jax-ws[sign] 数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="de1ec-221">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="de1ec-222">角かっこ ([および]) 内の項目は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-222">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="de1ec-223">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-223">The following table describes each element.</span></span>  
  
|<span data-ttu-id="de1ec-224">要素</span><span class="sxs-lookup"><span data-stu-id="de1ec-224">Element</span></span>|<span data-ttu-id="de1ec-225">説明</span><span class="sxs-lookup"><span data-stu-id="de1ec-225">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="de1ec-226">ws</span><span class="sxs-lookup"><span data-stu-id="de1ec-226">ws</span></span>|<span data-ttu-id="de1ec-227">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="de1ec-227">Optional white space.</span></span>|  
|<span data-ttu-id="de1ec-228">sign</span><span class="sxs-lookup"><span data-stu-id="de1ec-228">sign</span></span>|<span data-ttu-id="de1ec-229">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="de1ec-229">An optional sign.</span></span>|  
|<span data-ttu-id="de1ec-230">数字</span><span class="sxs-lookup"><span data-stu-id="de1ec-230">digits</span></span>|<span data-ttu-id="de1ec-231">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="de1ec-231">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="de1ec-232">パラメーターは、 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイルを使用して解釈されます。 `s`</span><span class="sxs-lookup"><span data-stu-id="de1ec-232">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="de1ec-233">10進数に加えて、先頭と末尾のスペースだけでなく先頭の記号も使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-233">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="de1ec-234">で`s`使用できるスタイル要素を明示的に定義するに<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>は、 <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドまたはメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-234">To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="de1ec-235">パラメーターは、現在のシステムカルチャに対して<xref:System.Globalization.NumberFormatInfo>初期化されたオブジェクトの書式情報を使用して解析されます。 `s`</span><span class="sxs-lookup"><span data-stu-id="de1ec-235">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="de1ec-236">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-236">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="de1ec-237">他のカルチャの書式設定情報を使用して文字列を解析する<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>には、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-237">To parse a string using the formatting information of some other culture, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de1ec-238">次の例は、 <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType>メソッドを使用して、文字列値を32ビット符号付き整数値に変換する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-238">The following example demonstrates how to convert a string value into a 32-bit signed integer value using the <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="de1ec-239">結果の整数値がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-239">The resulting integer value is then displayed to the console.</span></span>  
  
 [!code-cpp[System.Int32.Parse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse1.cpp#1)]
 [!code-csharp[System.Int32.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse1.cs#1)]
 [!code-vb[System.Int32.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de1ec-240"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-240"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="de1ec-241"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-241"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="de1ec-242"><paramref name="s" /> は、<see cref="F:System.Int32.MinValue" /> 未満の数値か、<see cref="F:System.Int32.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-242"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="de1ec-243">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="de1ec-243">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; int" Usage="System.int.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="de1ec-244">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="de1ec-244">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="de1ec-245"><paramref name="s" /> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="de1ec-245">A bitwise combination of the enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="de1ec-246">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-246">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="de1ec-247">指定したスタイルの数値の文字列形式を、それと等しい 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-247">Converts the string representation of a number in a specified style to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="de1ec-248"><paramref name="s" /> で指定した数値と等しい 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="de1ec-248">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-249">`style` パラメーター`s`では、解析操作を成功させるためにパラメーターで使用できるスタイル要素 (空白、正または負の記号、または桁区切り記号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-249">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, or the thousands separator symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="de1ec-250"><xref:System.Globalization.NumberStyles>列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="de1ec-250">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="de1ec-251">の`style`値に応じて、パラメーター `s`には次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-251">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="de1ec-252">jax-ws[$]シャープ[数字,] 数字 [. fractional_digits] [e [sign] exponential_digits] [ws]</span><span class="sxs-lookup"><span data-stu-id="de1ec-252">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="de1ec-253">または、 `style`に<xref:System.Globalization.NumberStyles.AllowHexSpecifier>が含まれている場合:</span><span class="sxs-lookup"><span data-stu-id="de1ec-253">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="de1ec-254">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="de1ec-254">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="de1ec-255">角かっこ ([および]) 内の項目は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-255">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="de1ec-256">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-256">The following table describes each element.</span></span>  
  
|<span data-ttu-id="de1ec-257">要素</span><span class="sxs-lookup"><span data-stu-id="de1ec-257">Element</span></span>|<span data-ttu-id="de1ec-258">説明</span><span class="sxs-lookup"><span data-stu-id="de1ec-258">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="de1ec-259">*ws*</span><span class="sxs-lookup"><span data-stu-id="de1ec-259">*ws*</span></span>|<span data-ttu-id="de1ec-260">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="de1ec-260">Optional white space.</span></span> <span data-ttu-id="de1ec-261">が`s` `s` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> `style`フラグを含む`style`場合は、の先頭に空白が表示されます。また、にフラグが含まれている場合は、の末尾に空白文字を含めることができます。 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="de1ec-261">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="de1ec-262">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="de1ec-262">A culture-specific currency symbol.</span></span> <span data-ttu-id="de1ec-263">文字列内での位置は、現在の<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>カルチャ<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>のプロパティとプロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-263">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="de1ec-264">に<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグが含まれている場合`style`は`s` 、現在のカルチャの通貨記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-264">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="de1ec-265">*sign*</span><span class="sxs-lookup"><span data-stu-id="de1ec-265">*sign*</span></span>|<span data-ttu-id="de1ec-266">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="de1ec-266">An optional sign.</span></span> <span data-ttu-id="de1ec-267">`s`に<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> `s` `style`フラグが含ま`style`れている場合は、の先頭に符号が表示されます。また、にフラグが含まれている場合は、の末尾にも表示されます。 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="de1ec-267">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="de1ec-268">に`s` <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグが含まれている場合`style`は、かっこを使用して負の値を示すことができます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-268">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="de1ec-269">*数字*</span><span class="sxs-lookup"><span data-stu-id="de1ec-269">*digits*</span></span><br /><br /> <span data-ttu-id="de1ec-270">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="de1ec-270">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="de1ec-271">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="de1ec-271">*exponential_digits*</span></span>|<span data-ttu-id="de1ec-272">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="de1ec-272">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="de1ec-273">*Fractional_digits*の場合、数字0のみが有効です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-273">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="de1ec-274">*、*</span><span class="sxs-lookup"><span data-stu-id="de1ec-274">*,*</span></span>|<span data-ttu-id="de1ec-275">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="de1ec-275">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="de1ec-276">に<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグが含まれている場合`style` 、 `s`現在のカルチャの桁区切り記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-276">The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="de1ec-277">*.*</span><span class="sxs-lookup"><span data-stu-id="de1ec-277">*.*</span></span>|<span data-ttu-id="de1ec-278">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="de1ec-278">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="de1ec-279">に<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグが含まれている場合`style` 、現在`s`のカルチャの小数点の記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-279">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="de1ec-280">解析操作が成功するためには、数字0のみが小数点の数字として表示されます。*fractional_digits*に他の数字<xref:System.OverflowException>が含まれている場合は、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-280">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="de1ec-281">*e*</span><span class="sxs-lookup"><span data-stu-id="de1ec-281">*e*</span></span>|<span data-ttu-id="de1ec-282">"E" または "E" 文字。値が指数表記で表されることを示します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-282">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="de1ec-283">に`s` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグが含まれている場合`style` 、パラメーターは指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-283">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="de1ec-284">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="de1ec-284">*hexdigits*</span></span>|<span data-ttu-id="de1ec-285">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="de1ec-285">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="de1ec-286">の終端の NUL (U + 0000) 文字`s`は、 `style`引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-286">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="de1ec-287">数字のみを含む文字列 ( <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイルに対応) は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-287">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="de1ec-288">残り<xref:System.Globalization.NumberStyles>のメンバーのほとんどは、入力文字列内に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-288">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="de1ec-289">次の表は、の<xref:System.Globalization.NumberStyles>各メンバーが、に`s`存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-289">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="de1ec-290">NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="de1ec-290">NumberStyles value</span></span>|<span data-ttu-id="de1ec-291">数字に加えてで許可される要素</span><span class="sxs-lookup"><span data-stu-id="de1ec-291">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="de1ec-292">*Digits*要素のみ。</span><span class="sxs-lookup"><span data-stu-id="de1ec-292">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="de1ec-293">小数点 ( *.*</span><span class="sxs-lookup"><span data-stu-id="de1ec-293">The decimal point ( *.*</span></span> <span data-ttu-id="de1ec-294">) と*小数部の数字*の要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-294">) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="de1ec-295">パラメーター `s`では、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-295">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="de1ec-296">の`s`先頭にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-296">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="de1ec-297">の`s`末尾の*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-297">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="de1ec-298">の`s`先頭にある*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-298">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="de1ec-299">の`s`末尾の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-299">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="de1ec-300">数値を囲むかっこ形式の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-300">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="de1ec-301">桁区切り記号 ( *,* ) 要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-301">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="de1ec-302">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-302">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="de1ec-303">すべて。</span><span class="sxs-lookup"><span data-stu-id="de1ec-303">All.</span></span> <span data-ttu-id="de1ec-304">`s`パラメーターは、16進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-304">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="de1ec-305">`s`の\*\* `s`先頭または末尾にある ws 要素、の先頭に*符号*、および小数点 ( *.*</span><span class="sxs-lookup"><span data-stu-id="de1ec-305">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point ( *.*</span></span> <span data-ttu-id="de1ec-306">表す.</span><span class="sxs-lookup"><span data-stu-id="de1ec-306">) symbol.</span></span> <span data-ttu-id="de1ec-307">パラメーター `s`では、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-307">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="de1ec-308">、、桁区切り記号 ( *、* )、および小数点 ( *.* `ws` `sign`</span><span class="sxs-lookup"><span data-stu-id="de1ec-308">The `ws`, `sign`, thousands separator ( *,* ), and decimal point ( *.*</span></span> <span data-ttu-id="de1ec-309">要素.</span><span class="sxs-lookup"><span data-stu-id="de1ec-309">) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="de1ec-310">を除く`s`すべてのスタイルは、16進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-310">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="de1ec-311">フラグが<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用されて`s`いる場合、はプレフィックスのない16進数の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="de1ec-311">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="de1ec-312">たとえば、"C9AF3" は正常に解析されますが、"0xC9AF3" は正常に解析されません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-312">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="de1ec-313">パラメーターと組み合わせることができる他のフラグは、 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>とだけです。<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> `s`</span><span class="sxs-lookup"><span data-stu-id="de1ec-313">The only other flags that can be combined with the `s` parameter it are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="de1ec-314">(列挙<xref:System.Globalization.NumberStyles>体には、両方の空白<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>フラグを含む複合数値スタイルが含まれています)。</span><span class="sxs-lookup"><span data-stu-id="de1ec-314">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="de1ec-315">パラメーターは、現在のシステムカルチャに対して<xref:System.Globalization.NumberFormatInfo>初期化されたオブジェクトの書式情報を使用して解析されます。 `s`</span><span class="sxs-lookup"><span data-stu-id="de1ec-315">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="de1ec-316">解析操作に使用する書式情報を持つカルチャを指定するには、 <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>オーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-316">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de1ec-317">次の例では<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> 、メソッドを使用して、複数<xref:System.Int32>の値の文字列形式を解析します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-317">The following example uses the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> method to parse the string representations of several <xref:System.Int32> values.</span></span> <span data-ttu-id="de1ec-318">この例の現在のカルチャは en-us です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-318">The current culture for the example is en-US.</span></span>  
  
 [!code-cpp[System.Int32.Parse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse2.cpp#2)]
 [!code-csharp[System.Int32.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse2.cs#2)]
 [!code-vb[System.Int32.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de1ec-319"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-319"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="de1ec-320"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-320"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="de1ec-321">または</span><span class="sxs-lookup"><span data-stu-id="de1ec-321">-or-</span></span> 
 <span data-ttu-id="de1ec-322"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-322"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="de1ec-323"><paramref name="s" /> の形式が <paramref name="style" /> に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-323"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="de1ec-324"><paramref name="s" /> は、<see cref="F:System.Int32.MinValue" /> 未満の数値か、<see cref="F:System.Int32.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-324"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
<span data-ttu-id="de1ec-325">- または -</span><span class="sxs-lookup"><span data-stu-id="de1ec-325">-or-</span></span> 
 <span data-ttu-id="de1ec-326"><paramref name="s" /> に 0 以外の小数部の桁が含まれています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-326"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <altmember cref="Overload:System.Int32.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="de1ec-327">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="de1ec-327">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; int" Usage="System.int.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="de1ec-328">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="de1ec-328">A string containing a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="de1ec-329"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="de1ec-329">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="de1ec-330">指定したカルチャに固有の書式による数値の文字列形式を、それと等価な 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-330">Converts the string representation of a number in a specified culture-specific format to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="de1ec-331"><paramref name="s" /> で指定した数値と等しい 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="de1ec-331">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-332"><xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29>メソッドのこのオーバーロードは、通常、さまざまな方法で書式設定できるテキストを<xref:System.Int32>値に変換するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-332">This overload of the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to an <xref:System.Int32> value.</span></span> <span data-ttu-id="de1ec-333">たとえば、ユーザーが入力したテキストを HTML テキストボックスに数値に変換するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-333">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="de1ec-334">パラメーター `s`には、次のような形式の数値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-334">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="de1ec-335">jax-ws[sign] 数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="de1ec-335">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="de1ec-336">角かっこ ([および]) 内の項目は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-336">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="de1ec-337">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-337">The following table describes each element.</span></span>  
  
|<span data-ttu-id="de1ec-338">要素</span><span class="sxs-lookup"><span data-stu-id="de1ec-338">Element</span></span>|<span data-ttu-id="de1ec-339">説明</span><span class="sxs-lookup"><span data-stu-id="de1ec-339">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="de1ec-340">*ws*</span><span class="sxs-lookup"><span data-stu-id="de1ec-340">*ws*</span></span>|<span data-ttu-id="de1ec-341">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="de1ec-341">Optional white space.</span></span>|  
|<span data-ttu-id="de1ec-342">*sign*</span><span class="sxs-lookup"><span data-stu-id="de1ec-342">*sign*</span></span>|<span data-ttu-id="de1ec-343">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="de1ec-343">An optional sign.</span></span>|  
|<span data-ttu-id="de1ec-344">*数字*</span><span class="sxs-lookup"><span data-stu-id="de1ec-344">*digits*</span></span>|<span data-ttu-id="de1ec-345">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="de1ec-345">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="de1ec-346">パラメーターは、 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイルを使用して解釈されます。 `s`</span><span class="sxs-lookup"><span data-stu-id="de1ec-346">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="de1ec-347">10進数に加えて、先頭と末尾のスペースだけでなく先頭の記号も使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-347">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="de1ec-348">`s`で<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>使用できるスタイル要素を明示的に定義するには、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-348">To explicitly define the style elements that can be present in `s`, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="de1ec-349">パラメーターは、オブジェクト<xref:System.Globalization.NumberFormatInfo>やオブジェクト<xref:System.Globalization.CultureInfo>などの実装です。 <xref:System.IFormatProvider> `provider`</span><span class="sxs-lookup"><span data-stu-id="de1ec-349">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="de1ec-350">パラメーター `provider`は、の`s`書式に関するカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-350">The `provider` parameter supplies culture-specific information about the format of `s`.</span></span> <span data-ttu-id="de1ec-351"><xref:System.Globalization.NumberFormatInfo>が`provider` の場合は、現在のカルチャのオブジェクトが使用されます。`null`</span><span class="sxs-lookup"><span data-stu-id="de1ec-351">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de1ec-352">次の例は、Web フォームのボタンクリックイベントハンドラーです。</span><span class="sxs-lookup"><span data-stu-id="de1ec-352">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="de1ec-353">このメソッドは、 <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>プロパティによって返される配列を使用して、ユーザーのロケールを決定します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-353">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="de1ec-354">次に、その<xref:System.Globalization.CultureInfo>ロケールに対応するオブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-354">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="de1ec-355">次に、その<xref:System.Globalization.CultureInfo>オブジェクトに属する<xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> <xref:System.Int32>オブジェクトをメソッドに渡して、ユーザーの入力を値に変換します。 <xref:System.Globalization.NumberFormatInfo></span><span class="sxs-lookup"><span data-stu-id="de1ec-355">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to an <xref:System.Int32> value.</span></span>  
  
 [!code-csharp[ParseMethod#4](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#4)]
 [!code-vb[ParseMethod#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de1ec-356"><paramref name="s" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-356"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="de1ec-357"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-357"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="de1ec-358"><paramref name="s" /> は、<see cref="F:System.Int32.MinValue" /> 未満の数値か、<see cref="F:System.Int32.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-358"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <altmember cref="Overload:System.Int32.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="de1ec-359">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="de1ec-359">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Integer" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; int" Usage="System.int.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; int" Usage="System.int.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="de1ec-360">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="de1ec-360">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="de1ec-361"><paramref name="s" /> で存在する可能性を持つスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="de1ec-361">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="de1ec-362">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-362">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="de1ec-363"><paramref name="s" /> の書式設定に関するカルチャ固有の情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="de1ec-363">An object that supplies culture-specific information about the format of <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="de1ec-364">指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価の 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-364">Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="de1ec-365"><paramref name="s" /> で指定した数値と等しい 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="de1ec-365">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-366">パラメーター `style`は、解析操作を成功させるために`s`パラメーターで使用できるスタイル要素 (空白や正符号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-366">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="de1ec-367"><xref:System.Globalization.NumberStyles>列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="de1ec-367">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="de1ec-368">の`style`値に応じて、パラメーター `s`には次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-368">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="de1ec-369">jax-ws[$]シャープ[数字,] 数字 [. fractional_digist] [e [sign] exponential_digits] [ws]</span><span class="sxs-lookup"><span data-stu-id="de1ec-369">[ws][$][sign][digits,]digits[.fractional_digist][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="de1ec-370">または、 `style`に<xref:System.Globalization.NumberStyles.AllowHexSpecifier>が含まれている場合:</span><span class="sxs-lookup"><span data-stu-id="de1ec-370">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="de1ec-371">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="de1ec-371">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="de1ec-372">角かっこ ([および]) 内の項目は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-372">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="de1ec-373">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-373">The following table describes each element.</span></span>  
  
|<span data-ttu-id="de1ec-374">要素</span><span class="sxs-lookup"><span data-stu-id="de1ec-374">Element</span></span>|<span data-ttu-id="de1ec-375">説明</span><span class="sxs-lookup"><span data-stu-id="de1ec-375">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="de1ec-376">*ws*</span><span class="sxs-lookup"><span data-stu-id="de1ec-376">*ws*</span></span>|<span data-ttu-id="de1ec-377">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="de1ec-377">Optional white space.</span></span> <span data-ttu-id="de1ec-378">が`s` `s` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> `style`フラグを含む`style`場合は、の先頭に空白が表示されます。また、にフラグが含まれている場合は、の末尾に空白文字を含めることができます。 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="de1ec-378">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="de1ec-379">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="de1ec-379">A culture-specific currency symbol.</span></span> <span data-ttu-id="de1ec-380">文字列内での位置<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>は、 `provider`パラメーターの<xref:System.IFormatProvider.GetFormat%2A>メソッドによっ<xref:System.Globalization.NumberFormatInfo>て返されるオブジェクトのプロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-380">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="de1ec-381">に<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグが含まれて`s`いる`style`場合は、通貨記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-381">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="de1ec-382">*sign*</span><span class="sxs-lookup"><span data-stu-id="de1ec-382">*sign*</span></span>|<span data-ttu-id="de1ec-383">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="de1ec-383">An optional sign.</span></span> <span data-ttu-id="de1ec-384">に`s` `style` `s` `style` フラグが<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>含まれている場合、またはの末尾にフラグが含まれている場合は、の先頭に符号が表示されます。 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="de1ec-384">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="de1ec-385">に`s` <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグが含まれている場合`style`は、かっこを使用して負の値を示すことができます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-385">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="de1ec-386">*数字*</span><span class="sxs-lookup"><span data-stu-id="de1ec-386">*digits*</span></span><br /><br /> <span data-ttu-id="de1ec-387">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="de1ec-387">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="de1ec-388">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="de1ec-388">*exponential_digits*</span></span>|<span data-ttu-id="de1ec-389">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="de1ec-389">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="de1ec-390">*Fractional_digits*の場合、数字0のみが有効です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-390">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="de1ec-391">*、*</span><span class="sxs-lookup"><span data-stu-id="de1ec-391">*,*</span></span>|<span data-ttu-id="de1ec-392">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="de1ec-392">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="de1ec-393">で指定さ`provider`れたカルチャの桁区切り記号は、 `style`に<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグが含まれている場合にで`s`使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-393">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="de1ec-394">*.*</span><span class="sxs-lookup"><span data-stu-id="de1ec-394">*.*</span></span>|<span data-ttu-id="de1ec-395">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="de1ec-395">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="de1ec-396">で指定さ`provider`れたカルチャの小数点の記号は`style` 、に<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグが含まれている場合にで`s`使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-396">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span><br /><br /> <span data-ttu-id="de1ec-397">解析操作が成功するためには、数字0のみが小数点の数字として表示されます。*fractional_digits*に他の数字<xref:System.OverflowException>が含まれている場合は、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-397">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="de1ec-398">*e*</span><span class="sxs-lookup"><span data-stu-id="de1ec-398">*e*</span></span>|<span data-ttu-id="de1ec-399">"E" または "E" 文字。値が指数表記で表されることを示します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-399">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="de1ec-400">に`s` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグが含まれている場合`style` 、パラメーターは指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-400">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="de1ec-401">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="de1ec-401">*hexdigits*</span></span>|<span data-ttu-id="de1ec-402">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="de1ec-402">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="de1ec-403">の終端の NUL (U + 0000) 文字`s`は、 `style`引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-403">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="de1ec-404">小数点以下の数字のみを含む文字列 ( <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイルに対応) は、 <xref:System.Int32>型の範囲内にある場合は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-404">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully if it is in the range of the <xref:System.Int32> type.</span></span> <span data-ttu-id="de1ec-405">残り<xref:System.Globalization.NumberStyles>のメンバーのほとんどは、この入力文字列に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-405">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="de1ec-406">次の表は、の<xref:System.Globalization.NumberStyles>各メンバーが、に`s`存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-406">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="de1ec-407">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="de1ec-407">Non-composite NumberStyles values</span></span>|<span data-ttu-id="de1ec-408">数字に加えてで許可される要素</span><span class="sxs-lookup"><span data-stu-id="de1ec-408">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="de1ec-409">10進数のみ。</span><span class="sxs-lookup"><span data-stu-id="de1ec-409">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="de1ec-410">小数点 ( *.*</span><span class="sxs-lookup"><span data-stu-id="de1ec-410">The decimal point ( *.*</span></span> <span data-ttu-id="de1ec-411">) と*小数部の数字*の要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-411">) and *fractional-digits* elements.</span></span> <span data-ttu-id="de1ec-412">ただし、*小数点以下*の桁数は1桁以上の0桁で構成<xref:System.OverflowException>する必要があります。それ以外の場合は、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-412">However, *fractional-digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="de1ec-413">パラメーター `s`では、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-413">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="de1ec-414">が`s`指数表記の数値を表す場合は、0以外の小数部分を含まない<xref:System.Int32>データ型の範囲内の整数を表す必要があります。</span><span class="sxs-lookup"><span data-stu-id="de1ec-414">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="de1ec-415">の`s`先頭にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-415">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="de1ec-416">の`s`末尾の*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-416">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="de1ec-417">正の符号は、*数字*の前に表示できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-417">A positive sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="de1ec-418">正の記号は、*数字*の後に表示されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-418">A positive sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="de1ec-419">数値を囲むかっこ形式の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-419">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="de1ec-420">桁区切り記号 ( *,* ) 要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-420">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="de1ec-421">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-421">The *$* element.</span></span>|  
  
 <span data-ttu-id="de1ec-422">フラグが<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用されて`s`いる場合、はプレフィックスのない16進数の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="de1ec-422">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="de1ec-423">たとえば、"C9AF3" は正常に解析されますが、"0xC9AF3" は正常に解析されません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-423">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="de1ec-424">内に`style` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>存在できるフラグは、とだけです。<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="de1ec-424">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="de1ec-425">(列挙体には、両方の空白<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>フラグを含む複合数値スタイルがあります)。 <xref:System.Globalization.NumberStyles></span><span class="sxs-lookup"><span data-stu-id="de1ec-425">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="de1ec-426">パラメーターは、オブジェクト<xref:System.Globalization.NumberFormatInfo>やオブジェクト<xref:System.Globalization.CultureInfo>などの実装です。 <xref:System.IFormatProvider> `provider`</span><span class="sxs-lookup"><span data-stu-id="de1ec-426">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="de1ec-427">パラメーター `provider`は、解析に使用されるカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-427">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="de1ec-428"><xref:System.Globalization.NumberFormatInfo>が`provider` の場合は、現在のカルチャのオブジェクトが使用されます。`null`</span><span class="sxs-lookup"><span data-stu-id="de1ec-428">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de1ec-429">次の`style` <xref:System.Int32>例では、さまざまなパラメーターを使用して、値の文字列形式を解析します。`provider`</span><span class="sxs-lookup"><span data-stu-id="de1ec-429">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Int32> values.</span></span> <span data-ttu-id="de1ec-430">また、解析操作で書式情報が使用されているカルチャに応じて、同じ文字列を解釈できるいくつかの方法についても説明します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-430">It also illustrates some of the different ways the same string can be interpreted depending on the culture whose formatting information is used for the parsing operation.</span></span>  
  
 [!code-cpp[System.Int32.Parse#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse3.cpp#3)]
 [!code-csharp[System.Int32.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse3.cs#3)]
 [!code-vb[System.Int32.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de1ec-431"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-431"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="de1ec-432"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-432"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="de1ec-433">または</span><span class="sxs-lookup"><span data-stu-id="de1ec-433">-or-</span></span> 
 <span data-ttu-id="de1ec-434"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-434"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="de1ec-435"><paramref name="s" /> の形式が <paramref name="style" /> に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-435"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="de1ec-436"><paramref name="s" /> は、<see cref="F:System.Int32.MinValue" /> 未満の数値か、<see cref="F:System.Int32.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-436"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
<span data-ttu-id="de1ec-437">- または -</span><span class="sxs-lookup"><span data-stu-id="de1ec-437">-or-</span></span> 
 <span data-ttu-id="de1ec-438"><paramref name="s" /> に 0 以外の小数部の桁が含まれています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-438"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="de1ec-439">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="de1ec-439">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="de1ec-440">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-440">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="de1ec-441">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-441">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="de1ec-442">現在のインスタンスの値が 0 でない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="de1ec-442"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-443">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-443">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="de1ec-444">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-444">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="de1ec-445">別の<xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="de1ec-445">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="de1ec-446">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-446">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="de1ec-447">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-447">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="de1ec-448"><see cref="T:System.Byte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="de1ec-448">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-449">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-449">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="de1ec-450">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-450">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="de1ec-451">別の<xref:System.Convert.ToByte%28System.Int32%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="de1ec-451">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="de1ec-452">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-452">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="de1ec-453">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-453">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="de1ec-454"><see cref="T:System.Char" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="de1ec-454">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-455">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-455">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="de1ec-456">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-456">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="de1ec-457">別の<xref:System.Convert.ToChar%28System.Int32%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="de1ec-457">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="de1ec-458">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-458">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="de1ec-459">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-459">This conversion is not supported.</span></span> <span data-ttu-id="de1ec-460">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-460">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="de1ec-461">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-461">This conversion is not supported.</span></span> <span data-ttu-id="de1ec-462">値は返されません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-462">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="de1ec-463">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="de1ec-463">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="de1ec-464">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-464">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="de1ec-465">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-465">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="de1ec-466"><see cref="T:System.Decimal" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="de1ec-466">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-467">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-467">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="de1ec-468">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-468">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="de1ec-469">別の<xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="de1ec-469">The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="de1ec-470">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-470">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="de1ec-471">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-471">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="de1ec-472"><see cref="T:System.Double" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="de1ec-472">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-473">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-473">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="de1ec-474">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-474">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="de1ec-475">別の<xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="de1ec-475">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="de1ec-476">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-476">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="de1ec-477">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-477">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="de1ec-478"><see cref="T:System.Int16" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="de1ec-478">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-479">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-479">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="de1ec-480">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-480">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="de1ec-481">別の<xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="de1ec-481">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="de1ec-482">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-482">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="de1ec-483">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-483">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="de1ec-484">変更されていない、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="de1ec-484">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-485">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-485">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="de1ec-486">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-486">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="de1ec-487">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-487">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="de1ec-488">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-488">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="de1ec-489"><see cref="T:System.Int64" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="de1ec-489">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-490">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-490">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="de1ec-491">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-491">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="de1ec-492">別の<xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="de1ec-492">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="de1ec-493">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-493">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="de1ec-494">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-494">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="de1ec-495"><see cref="T:System.SByte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="de1ec-495">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-496">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-496">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="de1ec-497">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-497">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="de1ec-498">別の<xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="de1ec-498">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="de1ec-499">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-499">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="de1ec-500">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-500">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="de1ec-501"><see cref="T:System.Single" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="de1ec-501">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-502">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-502">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="de1ec-503">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-503">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="de1ec-504">別の<xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="de1ec-504">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="de1ec-505">この <see cref="T:System.Int32" /> 値の変換後の型。</span><span class="sxs-lookup"><span data-stu-id="de1ec-505">The type to which to convert this <see cref="T:System.Int32" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="de1ec-506">戻り値の書式に関する情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="de1ec-506">An object that provides information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="de1ec-507">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-507">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="de1ec-508"><paramref name="type" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="de1ec-508">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-509">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-509">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="de1ec-510">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-510">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="de1ec-511">別の方法として、 `static` (`Shared` Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>メソッドを代わりに呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="de1ec-511">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="de1ec-512">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-512">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="de1ec-513">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-513">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="de1ec-514"><see cref="T:System.UInt16" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="de1ec-514">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-515">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-515">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="de1ec-516">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-516">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="de1ec-517">別の<xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="de1ec-517">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="de1ec-518">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-518">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="de1ec-519">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-519">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="de1ec-520"><see cref="T:System.UInt32" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="de1ec-520">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-521">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-521">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="de1ec-522">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-522">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="de1ec-523">別の<xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="de1ec-523">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="de1ec-524">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-524">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="de1ec-525">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-525">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="de1ec-526"><see cref="T:System.UInt64" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="de1ec-526">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-527">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-527">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="de1ec-528">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-528">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="de1ec-529">別の<xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="de1ec-529">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="de1ec-530">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-530">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="int.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="de1ec-531">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-531">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="de1ec-532">値が負の場合はマイナス記号を伴い、先行ゼロを含まない 0 から 9 の一連の数字から構成される、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="de1ec-532">The string representation of the value of this instance, consisting of a negative sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-533">メソッド<xref:System.Int32.ToString>は、現在<xref:System.Int32>のカルチャの<xref:System.Globalization.NumberFormatInfo>オブジェクトを使用して、既定の ("G" または "general") 形式の値を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-533">The <xref:System.Int32.ToString> method formats an <xref:System.Int32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="de1ec-534">別の形式またはカルチャを指定する場合は、次のように<xref:System.Int32.ToString%2A>メソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-534">If you want to specify a different format or culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="de1ec-535">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="de1ec-535">To use format</span></span>|<span data-ttu-id="de1ec-536">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="de1ec-536">For culture</span></span>|<span data-ttu-id="de1ec-537">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="de1ec-537">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="de1ec-538">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="de1ec-538">Default ("G") format</span></span>|<span data-ttu-id="de1ec-539">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="de1ec-539">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="de1ec-540">特定の形式</span><span class="sxs-lookup"><span data-stu-id="de1ec-540">A specific format</span></span>|<span data-ttu-id="de1ec-541">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="de1ec-541">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
|<span data-ttu-id="de1ec-542">特定の形式</span><span class="sxs-lookup"><span data-stu-id="de1ec-542">A specific format</span></span>|<span data-ttu-id="de1ec-543">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="de1ec-543">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="de1ec-544">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-544">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="de1ec-545">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-545">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="de1ec-546">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-546">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de1ec-547">次の例では<xref:System.Int32> 、既定<xref:System.Int32.ToString>のメソッドを使用して値を表示します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-547">The following example displays an <xref:System.Int32> value using the default <xref:System.Int32.ToString> method.</span></span> <span data-ttu-id="de1ec-548">また、多くの標準書式指定子<xref:System.Int32>を使用した結果として得られる値の文字列形式も表示されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-548">It also displays the string representations of the <xref:System.Int32> value that results from using a number of standard format specifiers.</span></span> <span data-ttu-id="de1ec-549">これらの例は、en-us カルチャの書式指定規則を使用して表示されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-549">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-cpp[System.Int32.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString1.cpp#1)]
 [!code-csharp[System.Int32.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#1)]
 [!code-vb[System.Int32.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="de1ec-550">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="de1ec-550">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="int.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="de1ec-551">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="de1ec-551">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="de1ec-552">このインスタンスの数値を、指定したカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-552">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="de1ec-553"><paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="de1ec-553">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-554">メソッド<xref:System.Int32.ToString%28System.IFormatProvider%29>は、指定<xref:System.Int32>されたカルチャの<xref:System.Globalization.NumberFormatInfo>オブジェクトを使用して、既定の ("G" または "general") 形式の値を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-554">The <xref:System.Int32.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="de1ec-555">別の形式または現在のカルチャを指定する場合は、次のように<xref:System.Int32.ToString%2A>メソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-555">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="de1ec-556">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="de1ec-556">To use format</span></span>|<span data-ttu-id="de1ec-557">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="de1ec-557">For culture</span></span>|<span data-ttu-id="de1ec-558">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="de1ec-558">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="de1ec-559">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="de1ec-559">Default ("G") format</span></span>|<span data-ttu-id="de1ec-560">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="de1ec-560">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="de1ec-561">特定の形式</span><span class="sxs-lookup"><span data-stu-id="de1ec-561">A specific format</span></span>|<span data-ttu-id="de1ec-562">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="de1ec-562">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
|<span data-ttu-id="de1ec-563">特定の形式</span><span class="sxs-lookup"><span data-stu-id="de1ec-563">A specific format</span></span>|<span data-ttu-id="de1ec-564">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="de1ec-564">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="de1ec-565">パラメーターは、インターフェイスを<xref:System.IFormatProvider>実装するオブジェクトです。 `provider`</span><span class="sxs-lookup"><span data-stu-id="de1ec-565">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="de1ec-566">このメソッドは、 <xref:System.Globalization.NumberFormatInfo>このメソッドによって返される文字列の書式に関するカルチャ固有の情報を提供するオブジェクトを返します。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="de1ec-566">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="de1ec-567">を実装<xref:System.IFormatProvider>するオブジェクトは、次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="de1ec-567">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="de1ec-568">書式設定規則を使用するカルチャを表すオブジェクト。<xref:System.Globalization.CultureInfo></span><span class="sxs-lookup"><span data-stu-id="de1ec-568">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="de1ec-569">この値の特定の数値書式情報を格納しているオブジェクト。<xref:System.Globalization.NumberFormatInfo></span><span class="sxs-lookup"><span data-stu-id="de1ec-569">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="de1ec-570">を実装<xref:System.IFormatProvider>し、書式設定情報<xref:System.IFormatProvider.GetFormat%2A>を提供する<xref:System.Globalization.NumberFormatInfo>オブジェクトを返すメソッドを持つカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="de1ec-570">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="de1ec-571">が`provider` <xref:System.Globalization.NumberFormatInfo> <xref:System.Globalization.NumberFormatInfo>であるか、から`provider`オブジェクトを取得できない場合、戻り値は、スレッドの現在のカルチャのオブジェクトを使用して書式設定されます。 `null`</span><span class="sxs-lookup"><span data-stu-id="de1ec-571">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture.</span></span> <span data-ttu-id="de1ec-572">スレッドの現在のカルチャの詳細につい<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>ては、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-572">For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="de1ec-573">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-573">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="de1ec-574">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-574">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="de1ec-575">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-575">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de1ec-576">次の例では、複数の異なる<xref:System.Int32>カルチャを<xref:System.Globalization.CultureInfo>表すオブジェクトを使用して、値の文字列形式を表示します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-576">The following example displays the string representation of an <xref:System.Int32> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-cpp[System.Int32.ToString#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString2.cpp#2)]
 [!code-csharp[System.Int32.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#2)]
 [!code-vb[System.Int32.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="de1ec-577">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="de1ec-577">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="int.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="de1ec-578">標準またはカスタムの数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="de1ec-578">A standard or custom numeric format string.</span></span></param>
        <summary><span data-ttu-id="de1ec-579">指定した書式を使用して、このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-579">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span></span></summary>
        <returns><span data-ttu-id="de1ec-580"><paramref name="format" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="de1ec-580">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-581">メソッド<xref:System.Int32.ToString%28System.String%29>は、現在<xref:System.Int32>のカルチャの規則を表す<xref:System.Globalization.NumberFormatInfo>オブジェクトを使用して、指定した書式で値の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-581">The <xref:System.Int32.ToString%28System.String%29> method formats an <xref:System.Int32> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="de1ec-582">既定の形式 ("G" または一般) を使用する場合、または別のカルチャを指定する場合は、次<xref:System.Int32.ToString%2A>のようにメソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-582">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="de1ec-583">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="de1ec-583">To use format</span></span>|<span data-ttu-id="de1ec-584">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="de1ec-584">For culture</span></span>|<span data-ttu-id="de1ec-585">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="de1ec-585">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="de1ec-586">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="de1ec-586">Default ("G") format</span></span>|<span data-ttu-id="de1ec-587">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="de1ec-587">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="de1ec-588">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="de1ec-588">Default ("G") format</span></span>|<span data-ttu-id="de1ec-589">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="de1ec-589">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="de1ec-590">特定の形式</span><span class="sxs-lookup"><span data-stu-id="de1ec-590">A specific format</span></span>|<span data-ttu-id="de1ec-591">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="de1ec-591">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="de1ec-592">パラメーター `format`には、"R" 以外の任意の有効な標準数値書式指定子、およびカスタム数値書式指定子の任意の組み合わせを指定できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-592">The `format` parameter can be any valid standard numeric format specifier except for "R", as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="de1ec-593">`format` が`null`または空の文字列 ("") の場合、このインスタンスの戻り値は、一般的な数値書式指定子 ("G") で書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-593">If `format` is `null` or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="de1ec-594">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-594">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="de1ec-595">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-595">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="de1ec-596">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-596">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="de1ec-597">このインスタンスの戻り値は、 <xref:System.Globalization.NumberFormatInfo>現在のカルチャので書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-597">The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de1ec-598">次の例では<xref:System.Int32> 、サポートされている各標準数値書式指定子と、2つのカスタム数値書式指定文字列を使用して値を表示します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-598">The following example displays an <xref:System.Int32> value using each of the supported standard numeric format specifiers, together with two custom numeric format strings.</span></span> <span data-ttu-id="de1ec-599">数値を文字列に変換する場合、この例では en-us カルチャの書式指定規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-599">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-cpp[System.Int32.ToString#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString3.cpp#3)]
 [!code-csharp[System.Int32.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#3)]
 [!code-vb[System.Int32.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="de1ec-600"><paramref name="format" /> は使用できないか、またはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-600"><paramref name="format" /> is invalid or not supported.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="de1ec-601">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="de1ec-601">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="de1ec-602">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="de1ec-602">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="de1ec-603">カスタム数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="de1ec-603">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="de1ec-604">方法: 数値に先行するゼロを埋め込む</span><span class="sxs-lookup"><span data-stu-id="de1ec-604">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="int.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="de1ec-605">標準またはカスタムの数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="de1ec-605">A standard or custom numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="de1ec-606">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="de1ec-606">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="de1ec-607">このインスタンスの数値を、指定した書式およびカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-607">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="de1ec-608"><paramref name="format" /> および <paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="de1ec-608">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-609">メソッド<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>は、指定<xref:System.Int32>されたカルチャの<xref:System.Globalization.NumberFormatInfo>オブジェクトを使用して、指定された書式で値の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-609">The <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int32> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="de1ec-610">既定の書式設定またはカルチャ設定を使用する場合は、次のよう<xref:System.Int32.ToString%2A>にメソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-610">If you want to use default format or culture settings, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="de1ec-611">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="de1ec-611">To use format</span></span>|<span data-ttu-id="de1ec-612">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="de1ec-612">For culture</span></span>|<span data-ttu-id="de1ec-613">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="de1ec-613">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="de1ec-614">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="de1ec-614">Default ("G") format</span></span>|<span data-ttu-id="de1ec-615">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="de1ec-615">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="de1ec-616">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="de1ec-616">Default ("G") format</span></span>|<span data-ttu-id="de1ec-617">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="de1ec-617">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="de1ec-618">特定の形式</span><span class="sxs-lookup"><span data-stu-id="de1ec-618">A specific format</span></span>|<span data-ttu-id="de1ec-619">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="de1ec-619">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
  
 <span data-ttu-id="de1ec-620">パラメーター `format`には、標準またはカスタムの数値書式指定文字列を指定できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-620">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="de1ec-621">すべてのカスタム数値書式指定文字と同様に、"R" (または "r") 以外のすべての標準の数値書式指定文字列がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-621">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="de1ec-622">`format` が`null`または空の文字列 ("") の場合、このインスタンスの戻り値は、一般的な数値書式指定子 ("G") で書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-622">If `format` is `null` or an empty string (""), the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="de1ec-623">パラメーターは、インターフェイスを<xref:System.IFormatProvider>実装するオブジェクトです。 `provider`</span><span class="sxs-lookup"><span data-stu-id="de1ec-623">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="de1ec-624">このメソッドは、 <xref:System.Globalization.NumberFormatInfo>このメソッドによって返される文字列の書式に関するカルチャ固有の書式情報を提供するオブジェクトを返します。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="de1ec-624">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific format information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="de1ec-625">を実装<xref:System.IFormatProvider>するオブジェクトは、次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="de1ec-625">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="de1ec-626">書式設定規則を使用するカルチャを表すオブジェクト。<xref:System.Globalization.CultureInfo></span><span class="sxs-lookup"><span data-stu-id="de1ec-626">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="de1ec-627">この値の特定の数値書式情報を格納しているオブジェクト。<xref:System.Globalization.NumberFormatInfo></span><span class="sxs-lookup"><span data-stu-id="de1ec-627">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="de1ec-628">を実装<xref:System.IFormatProvider>し、書式設定情報<xref:System.IFormatProvider.GetFormat%2A>を提供する<xref:System.Globalization.NumberFormatInfo>オブジェクトを返すメソッドを持つカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="de1ec-628">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="de1ec-629">が`provider` <xref:System.Globalization.NumberFormatInfo> <xref:System.Globalization.NumberFormatInfo>であるか、から`provider`オブジェクトを取得できない場合、このインスタンスの戻り値は、現在のカルチャので書式設定されます。 `null`</span><span class="sxs-lookup"><span data-stu-id="de1ec-629">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value for this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
 <span data-ttu-id="de1ec-630">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-630">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="de1ec-631">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-631">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="de1ec-632">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-632">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de1ec-633">次の例では、3つの異なるカルチャに対してサポートされている各標準数値書式指定子を使用して、正の値と負の値を表示します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-633">The following example displays a positive and a negative value using each of the supported standard numeric format specifiers for three different cultures.</span></span>  
  
 [!code-cpp[System.Int32.ToString#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString4.cpp#4)]
 [!code-csharp[System.Int32.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#4)]
 [!code-vb[System.Int32.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="de1ec-634"><paramref name="format" /> は使用できないか、またはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-634"><paramref name="format" /> is invalid or not supported.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="de1ec-635">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="de1ec-635">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="de1ec-636">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="de1ec-636">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="de1ec-637">カスタム数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="de1ec-637">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="de1ec-638">方法: 数値に先行するゼロを埋め込む</span><span class="sxs-lookup"><span data-stu-id="de1ec-638">How to: Pad a Number with Leading Zeros</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="de1ec-639">サンプル: .NET Core WinForms 書式指定ユーティリティC#()</span><span class="sxs-lookup"><span data-stu-id="de1ec-639">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="de1ec-640">サンプル: .NET Core WinForms の書式設定ユーティリティ (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="de1ec-640">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="int.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="de1ec-641">数値の文字列形式を、それと等価な 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-641">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="de1ec-642">戻り値は、演算が成功したかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-642">A return value indicates whether the operation succeeded.</span></span></summary>
        <altmember cref="Overload:System.Int32.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.int.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.String,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.int.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="de1ec-643">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="de1ec-643">A string containing a number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="de1ec-644">変換が成功した場合、このメソッドが返されるときに、<paramref name="s" /> に格納された数値と等価の 32 ビット符号付き整数値を格納します。変換に失敗した場合は 0 を格納します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-644">When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="de1ec-645"><paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、正しい形式ではない、または <see cref="F:System.Int32.MinValue" /> より小さいか <see cref="F:System.Int32.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-645">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="de1ec-646">このパラメーターは初期化されていない状態で渡されています。<paramref name="result" /> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-646">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="de1ec-647">数値の文字列形式を、それと等価な 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-647">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="de1ec-648">戻り値は、変換が成功したかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-648">A return value indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="de1ec-649"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="de1ec-649"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-650">メソッドは<xref:System.Int32.Parse%2A>メソッドに似ていますが<xref:System.Int32.TryParse%2A> 、変換に失敗した場合にメソッドが例外をスローしない点が異なります。 <xref:System.Int32.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="de1ec-650">The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="de1ec-651">これにより、例外処理を使用して、無効<xref:System.FormatException>で、正常に`s`解析できないイベントでをテストする必要がなくなります。</span><span class="sxs-lookup"><span data-stu-id="de1ec-651">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="de1ec-652">パラメーター `s`には、次のような形式の数値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-652">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="de1ec-653">jax-ws[sign] 数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="de1ec-653">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="de1ec-654">角かっこ ([および]) 内の項目は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-654">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="de1ec-655">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-655">The following table describes each element.</span></span>  
  
|<span data-ttu-id="de1ec-656">要素</span><span class="sxs-lookup"><span data-stu-id="de1ec-656">Element</span></span>|<span data-ttu-id="de1ec-657">説明</span><span class="sxs-lookup"><span data-stu-id="de1ec-657">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="de1ec-658">*ws*</span><span class="sxs-lookup"><span data-stu-id="de1ec-658">*ws*</span></span>|<span data-ttu-id="de1ec-659">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="de1ec-659">Optional white space.</span></span>|  
|<span data-ttu-id="de1ec-660">*sign*</span><span class="sxs-lookup"><span data-stu-id="de1ec-660">*sign*</span></span>|<span data-ttu-id="de1ec-661">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="de1ec-661">An optional sign.</span></span>|  
|<span data-ttu-id="de1ec-662">*数字*</span><span class="sxs-lookup"><span data-stu-id="de1ec-662">*digits*</span></span>|<span data-ttu-id="de1ec-663">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="de1ec-663">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="de1ec-664">パラメーターは、 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイルを使用して解釈されます。 `s`</span><span class="sxs-lookup"><span data-stu-id="de1ec-664">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="de1ec-665">10進数の数字に加えて、先頭と末尾のスペースだけでなく先頭の記号も使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-665">In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="de1ec-666">`s`で<xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType>使用できるカルチャ固有の書式情報と共にスタイル要素を明示的に定義するには、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-666">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="de1ec-667">パラメーターは、現在のシステムカルチャに対して<xref:System.Globalization.NumberFormatInfo>初期化されたオブジェクトの書式情報を使用して解析されます。 `s`</span><span class="sxs-lookup"><span data-stu-id="de1ec-667">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="de1ec-668">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="de1ec-668">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="de1ec-669">このメソッドのオーバーロード<xref:System.Int32.TryParse%2A>は、 `s`パラメーター内のすべての桁を10進数として解釈します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-669">This overload of the <xref:System.Int32.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="de1ec-670">16進数の文字列形式を解析するには、 <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType>オーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-670">To parse the string representation of a hexadecimal number, call the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de1ec-671">次の例では<xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29?displayProperty=nameWithType> 、さまざまな文字列値を指定してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-671">The following example calls the <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 [!code-cpp[System.Int32.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.TryParse/cpp/int32.tryparse1.cpp#1)]
 [!code-csharp[System.Int32.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.Int32.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.TryParse/vb/TryParse1.vb#1)]  
  
 <span data-ttu-id="de1ec-672">この例では、 <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29>メソッドが変換できない文字列の一部を次に示します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-672">Some of the strings that the <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29> method is unable to convert in this example are:</span></span>  
  
-   <span data-ttu-id="de1ec-673">"9432.0".</span><span class="sxs-lookup"><span data-stu-id="de1ec-673">"9432.0".</span></span> <span data-ttu-id="de1ec-674">文字列に小数点の区切り文字を含めることができないため、変換に失敗します。整数の数字のみが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="de1ec-674">The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="de1ec-675">"16,667".</span><span class="sxs-lookup"><span data-stu-id="de1ec-675">"16,667".</span></span> <span data-ttu-id="de1ec-676">文字列にはグループ区切り記号を含めることができないため、変換に失敗します。整数の数字のみが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="de1ec-676">The conversion fails because the string cannot contain group separators; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="de1ec-677">"(100)".</span><span class="sxs-lookup"><span data-stu-id="de1ec-677">"(100)".</span></span> <span data-ttu-id="de1ec-678">現在のカルチャの<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>プロパティおよび<xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType>プロパティで定義されているものとは異なる負の符号を文字列に含めることができないため、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-678">The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture's <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> properties.</span></span>  
  
-   <span data-ttu-id="de1ec-679">"01FA"。</span><span class="sxs-lookup"><span data-stu-id="de1ec-679">"01FA".</span></span> <span data-ttu-id="de1ec-680">文字列に16進数の数字を含めることができないため、変換に失敗します。10進数のみが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="de1ec-680">The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="M:System.Int32.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="de1ec-681">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="de1ec-681">Parsing Numeric Strings in .NET</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="de1ec-682">サンプル: .NET Core WinForms 書式指定ユーティリティC#()</span><span class="sxs-lookup"><span data-stu-id="de1ec-682">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="de1ec-683">サンプル: .NET Core WinForms の書式設定ユーティリティ (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="de1ec-683">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.int.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.int.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="de1ec-684">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="de1ec-684">A string containing a number to convert.</span></span> <span data-ttu-id="de1ec-685">文字列は、<paramref name="style" /> で指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-685">The string is interpreted using the style specified by <paramref name="style" />.</span></span></param>
        <param name="style"><span data-ttu-id="de1ec-686"><paramref name="s" /> で存在する可能性を持つスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="de1ec-686">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="de1ec-687">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-687">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="de1ec-688"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="de1ec-688">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="de1ec-689">変換が成功した場合、このメソッドが返されるときに、<paramref name="s" /> に格納された数値と等価の 32 ビット符号付き整数値を格納します。変換に失敗した場合は 0 を格納します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-689">When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="de1ec-690"><paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、<paramref name="style" /> に準拠した形式ではない、または <see cref="F:System.Int32.MinValue" /> より小さいか <see cref="F:System.Int32.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-690">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="de1ec-691">このパラメーターは初期化されていない状態で渡されています。<paramref name="result" /> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-691">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="de1ec-692">指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価の 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-692">Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="de1ec-693">戻り値は、変換が成功したかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-693">A return value indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="de1ec-694"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="de1ec-694"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de1ec-695">メソッドは<xref:System.Int32.Parse%2A>メソッドに似ていますが<xref:System.Int32.TryParse%2A> 、変換に失敗した場合にメソッドが例外をスローしない点が異なります。 <xref:System.Int32.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="de1ec-695">The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="de1ec-696">これにより、例外処理を使用して、無効<xref:System.FormatException>で、正常に`s`解析できないイベントでをテストする必要がなくなります。</span><span class="sxs-lookup"><span data-stu-id="de1ec-696">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="de1ec-697">パラメーター `style`は、解析操作を成功させるために`s`パラメーターで使用できるスタイル要素 (空白、正または負の符号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-697">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="de1ec-698"><xref:System.Globalization.NumberStyles>列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="de1ec-698">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="de1ec-699">の`style`値に応じて、パラメーター `s`には次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-699">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="de1ec-700">jax-ws[$]シャープ[数字,] 数字 [. fractional_digits] [e [sign] 数字] [ws]</span><span class="sxs-lookup"><span data-stu-id="de1ec-700">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="de1ec-701">パラメーターに次の`style`ものが<xref:System.Globalization.NumberStyles.AllowHexSpecifier>含まれている場合は、または。</span><span class="sxs-lookup"><span data-stu-id="de1ec-701">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="de1ec-702">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="de1ec-702">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="de1ec-703">角かっこ ([および]) 内の項目は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-703">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="de1ec-704">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="de1ec-704">The following table describes each element.</span></span>  
  
|<span data-ttu-id="de1ec-705">要素</span><span class="sxs-lookup"><span data-stu-id="de1ec-705">Element</span></span>|<span data-ttu-id="de1ec-706">説明</span><span class="sxs-lookup"><span data-stu-id="de1ec-706">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="de1ec-707">*ws*</span><span class="sxs-lookup"><span data-stu-id="de1ec-707">*ws*</span></span>|<span data-ttu-id="de1ec-708">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="de1ec-708">Optional white space.</span></span> <span data-ttu-id="de1ec-709">`s`に`s` フラグが`style`含まれている<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>場合は、の先頭に空白が表示されます。または、の末尾にフラグが含まれている場合もあります。`style` <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="de1ec-709">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="de1ec-710">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="de1ec-710">A culture-specific currency symbol.</span></span> <span data-ttu-id="de1ec-711">文字列内での位置<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>は、 `provider`パラメーターの<xref:System.IFormatProvider.GetFormat%2A>メソッドによっ<xref:System.Globalization.NumberFormatInfo>て返されるオブジェクトのプロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-711">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="de1ec-712">に<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグが含まれて`s`いる`style`場合は、通貨記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-712">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="de1ec-713">*sign*</span><span class="sxs-lookup"><span data-stu-id="de1ec-713">*sign*</span></span>|<span data-ttu-id="de1ec-714">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="de1ec-714">An optional sign.</span></span> <span data-ttu-id="de1ec-715">にフラグ`s` <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>また`style` は<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグが含まれている場合は、に記号を付けることができます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-715">A sign symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> or <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flags.</span></span>|  
|<span data-ttu-id="de1ec-716">*数字*</span><span class="sxs-lookup"><span data-stu-id="de1ec-716">*digits*</span></span>|<span data-ttu-id="de1ec-717">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="de1ec-717">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="de1ec-718">*、*</span><span class="sxs-lookup"><span data-stu-id="de1ec-718">*,*</span></span>|<span data-ttu-id="de1ec-719">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="de1ec-719">A culture-specific thousands separator.</span></span> <span data-ttu-id="de1ec-720">で指定さ`provider`れたカルチャの桁区切り記号は、 `style`に<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグが含まれている場合にで`s`使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-720">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="de1ec-721">*.*</span><span class="sxs-lookup"><span data-stu-id="de1ec-721">*.*</span></span>|<span data-ttu-id="de1ec-722">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="de1ec-722">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="de1ec-723">で指定さ`provider`れたカルチャの小数点の記号は`style` 、に<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグが含まれている場合にで`s`使用できます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-723">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="de1ec-724">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="de1ec-724">*fractional_digits*</span></span>|<span data-ttu-id="de1ec-725">数字0の1回以上の出現。</span><span class="sxs-lookup"><span data-stu-id="de1ec-725">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="de1ec-726">に<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグが含まれ`s`ている`style`場合にのみ、に小数点以下の桁数が表示されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-726">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="de1ec-727">*e*</span><span class="sxs-lookup"><span data-stu-id="de1ec-727">*e*</span></span>|<span data-ttu-id="de1ec-728">"E" または "E" 文字。値が指数表記で表されることを示します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-728">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="de1ec-729">に`s` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグが含まれている場合`style` 、パラメーターは指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-729">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="de1ec-730">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="de1ec-730">*hexdigits*</span></span>|<span data-ttu-id="de1ec-731">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="de1ec-731">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="de1ec-732">の終端の NUL (U + 0000) 文字`s`は、 `style`引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-732">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="de1ec-733">10進数の数字のみを含む文字列 ( <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>フラグに対応) は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-733">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="de1ec-734">残り<xref:System.Globalization.NumberStyles>のメンバーのほとんどは、この入力文字列に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-734">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="de1ec-735">次の表は、の<xref:System.Globalization.NumberStyles>各メンバーが、に`s`存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="de1ec-735">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="de1ec-736">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="de1ec-736">Non-composite NumberStyles values</span></span>|<span data-ttu-id="de1ec-737">数字に加えてで許可される要素</span><span class="sxs-lookup"><span data-stu-id="de1ec-737">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="de1ec-738">10進数のみ。</span><span class="sxs-lookup"><span data-stu-id="de1ec-738">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="de1ec-739">小数点 (*.*) と*fractional_digits*の要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-739">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="de1ec-740">ただし、 *fractional_digits*は1桁以上の0桁で構成されている`false`必要があります。それ以外の場合、メソッドはを返します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-740">However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="de1ec-741">パラメーター `s`では、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-741">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="de1ec-742">が`s`指数表記の数値を表す場合は、0以外の小数部分を含まない<xref:System.Int32>データ型の範囲内の整数を表す必要があります。</span><span class="sxs-lookup"><span data-stu-id="de1ec-742">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="de1ec-743">の`s`先頭にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-743">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="de1ec-744">の`s`末尾の*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-744">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="de1ec-745">*数字*の前に記号を付けることができます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-745">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="de1ec-746">*数字*の後に符号が表示されます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-746">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="de1ec-747">数値を囲むかっこ形式の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-747">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="de1ec-748">桁区切り記号 (*,*) 要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-748">The thousands separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="de1ec-749">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-749">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency?displayProperty=nameWithType>|<span data-ttu-id="de1ec-750">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-750">All elements.</span></span> <span data-ttu-id="de1ec-751">`s`パラメーターは、16進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-751">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>|<span data-ttu-id="de1ec-752">`s`の\*\* `s`先頭または末尾にある ws 要素、の先頭に*符号*、小数点 (*.*) 記号。</span><span class="sxs-lookup"><span data-stu-id="de1ec-752">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="de1ec-753">パラメーター `s`では、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="de1ec-753">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>|<span data-ttu-id="de1ec-754">*Ws*、 *sign*、桁区切り記号 (*、*)、および小数点 (*.*) の要素。</span><span class="sxs-lookup"><span data-stu-id="de1ec-754">The *ws*, *sign*, thousands separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any?displayProperty=nameWithType>|<span data-ttu-id="de1ec-755">を除く`s`すべてのスタイルは、16進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-755">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="de1ec-756">フラグが<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用されて`s`いる場合、はプレフィックスのない16進数の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="de1ec-756">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="de1ec-757">たとえば、"C9AF3" は正常に解析されますが、"0xC9AF3" は正常に解析されません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-757">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="de1ec-758">内に`style` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>存在できるフラグは、とだけです。<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="de1ec-758">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="de1ec-759">(列挙体には、両方の<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>空白フラグを含む複合スタイルがあります)。 <xref:System.Globalization.NumberStyles></span><span class="sxs-lookup"><span data-stu-id="de1ec-759">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="de1ec-760"><xref:System.Globalization.CultureInfo> <xref:System.IFormatProvider.GetFormat%2A>パラメーターはオブジェクトや<xref:System.Globalization.NumberFormatInfo>オブジェクトなどの実装であり、そのメソッドはオブジェクトを返します。<xref:System.Globalization.NumberFormatInfo> <xref:System.IFormatProvider> `provider`</span><span class="sxs-lookup"><span data-stu-id="de1ec-760">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="de1ec-761">オブジェクト<xref:System.Globalization.NumberFormatInfo>は、の書式に関するカルチャ固有の`s`情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-761">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="de1ec-762"><xref:System.Globalization.NumberFormatInfo>が`provider` の場合は、現在のカルチャのオブジェクトが使用されます。`null`</span><span class="sxs-lookup"><span data-stu-id="de1ec-762">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de1ec-763">次の例では<xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> 、さまざまな文字列と<xref:System.Globalization.NumberStyles>値を指定してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="de1ec-763">The following example calls the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> method with a number of different string and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-cpp[System.Int32.TryParse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.TryParse/cpp/int32.tryparse2.cpp#2)]
 [!code-csharp[System.Int32.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.TryParse/cs/TryParse2.cs#2)]
 [!code-vb[System.Int32.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.TryParse/vb/TryParse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="de1ec-764"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-764"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="de1ec-765">- または -</span><span class="sxs-lookup"><span data-stu-id="de1ec-765">-or-</span></span> 
 <span data-ttu-id="de1ec-766"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="de1ec-766"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int32.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="de1ec-767">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="de1ec-767">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
