<Type Name="Int32" FullName="System.Int32">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f63ecc639823dd2a379361676fce203dca39e6be" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52359850" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Int32 : IComparable, IComparable&lt;int&gt;, IConvertible, IEquatable&lt;int&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit int32 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int32&gt;, class System.IConvertible, class System.IEquatable`1&lt;int32&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Int32" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int32&#xA;Implements IComparable, IComparable(Of Integer), IConvertible, IEquatable(Of Integer), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Int32 : IComparable, IComparable&lt;int&gt;, IConvertible, IEquatable&lt;int&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type int = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Int32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Int32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="44f18-101">32 ビット符号付き整数を表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="44f18-101">Represents a 32-bit signed integer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-102"><xref:System.Int32> 符号付き整数範囲は-2,147, 483,648 から値を表す不変の値型 (で表される、<xref:System.Int32.MinValue?displayProperty=nameWithType>定数) 正の 2,147, 483,647 まで (で表される、<xref:System.Int32.MaxValue?displayProperty=nameWithType>定数。</span><span class="sxs-lookup"><span data-stu-id="44f18-102"><xref:System.Int32> is an immutable value type that represents signed integers with values that range from negative 2,147,483,648 (which is represented by the <xref:System.Int32.MinValue?displayProperty=nameWithType> constant) through positive 2,147,483,647 (which is represented by the <xref:System.Int32.MaxValue?displayProperty=nameWithType> constant.</span></span> <span data-ttu-id="44f18-103">.NET Framework には、32 ビット符号なし整数値の型も含まれています<xref:System.UInt32>4,294,967,295 を 0 から範囲の値を表します。</span><span class="sxs-lookup"><span data-stu-id="44f18-103">The .NET Framework also includes an unsigned 32-bit integer value type, <xref:System.UInt32>, which represents values that range from 0 to 4,294,967,295.</span></span>  
  
## <a name="instantiating-an-int32-value"></a><span data-ttu-id="44f18-104">Int32 値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="44f18-104">Instantiating an Int32 Value</span></span>  
 <span data-ttu-id="44f18-105">インスタンス化することができます、<xref:System.Int32>いくつかの方法で値。</span><span class="sxs-lookup"><span data-stu-id="44f18-105">You can instantiate an <xref:System.Int32> value in several ways:</span></span>  
  
-   <span data-ttu-id="44f18-106">宣言することができます、<xref:System.Int32>変数の範囲内にある整数リテラル値を割り当てます、<xref:System.Int32>データ型。</span><span class="sxs-lookup"><span data-stu-id="44f18-106">You can declare an <xref:System.Int32> variable and assign it a literal integer value that is within the range of the <xref:System.Int32> data type.</span></span> <span data-ttu-id="44f18-107">次の例で 2 つ<xref:System.Int32>変数し、それらにこの方法で値を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="44f18-107">The following example declares two <xref:System.Int32> variables and assigns them values in this way.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#1)]
     [!code-vb[System.Int32.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#1)]  
  
-   <span data-ttu-id="44f18-108">範囲がサブセットは、整数型の値を割り当てることができますの<xref:System.Int32>型。</span><span class="sxs-lookup"><span data-stu-id="44f18-108">You can assign the value of an integer type whose range is a subset of the <xref:System.Int32> type.</span></span> <span data-ttu-id="44f18-109">これは、キャスト演算子 (C#) または Visual Basic で変換メソッドを必要としない拡大変換です。</span><span class="sxs-lookup"><span data-stu-id="44f18-109">This is a widening conversion that does not require a cast operator in C# or a conversion method in Visual Basic.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#4)]
     [!code-vb[System.Int32.Instantiation#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#4)]  
  
-   <span data-ttu-id="44f18-110">範囲を超えています数値型の値を割り当てることができますの<xref:System.Int32>型。</span><span class="sxs-lookup"><span data-stu-id="44f18-110">You can assign the value of a numeric type whose range exceeds that of the <xref:System.Int32> type.</span></span> <span data-ttu-id="44f18-111">縮小変換には、このため場合、キャスト演算子 (C#) および Visual Basic での変換メソッドが必要に`Option Strict`にします。</span><span class="sxs-lookup"><span data-stu-id="44f18-111">This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if `Option Strict` is on.</span></span> <span data-ttu-id="44f18-112">数値の値がある場合、 <xref:System.Single>、 <xref:System.Double>、または<xref:System.Decimal>小数コンポーネント、その小数部分の処理が含まれる値は、変換を実行して、コンパイラによって異なります。</span><span class="sxs-lookup"><span data-stu-id="44f18-112">If the numeric value is a <xref:System.Single>, <xref:System.Double>, or <xref:System.Decimal> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion.</span></span> <span data-ttu-id="44f18-113">次の例をいくつかの数値を割り当てる縮小変換を実行する<xref:System.Int32>変数。</span><span class="sxs-lookup"><span data-stu-id="44f18-113">The following example performs narrowing conversions to assign several numeric values to <xref:System.Int32> variables.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#2)]
     [!code-vb[System.Int32.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#2)]  
  
-   <span data-ttu-id="44f18-114">メソッドを呼び出すことができます、<xref:System.Convert>いずれかに変換するクラスには、型がサポートされている、<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="44f18-114">You can call a method of the <xref:System.Convert> class to convert any supported type to an <xref:System.Int32> value.</span></span> <span data-ttu-id="44f18-115">これは、考えられるため、<xref:System.Int32>をサポートしています、<xref:System.IConvertible>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="44f18-115">This is possible because <xref:System.Int32> supports the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="44f18-116">次の例は、配列の変換を示しています。<xref:System.Decimal>値<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="44f18-116">The following example illustrates the conversion of an array of <xref:System.Decimal> values to <xref:System.Int32> values.</span></span>  
  
     [!code-csharp[System.Convert.ToInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#4)]
     [!code-vb[System.Convert.ToInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#4)]  
  
-   <span data-ttu-id="44f18-117">呼び出すことができます、<xref:System.Int32.Parse%2A>または<xref:System.Int32.TryParse%2A>の文字列形式に変換するメソッド、<xref:System.Int32>値を<xref:System.Int32>します。</span><span class="sxs-lookup"><span data-stu-id="44f18-117">You can call the <xref:System.Int32.Parse%2A> or <xref:System.Int32.TryParse%2A> method to convert the string representation of an <xref:System.Int32> value to an <xref:System.Int32>.</span></span> <span data-ttu-id="44f18-118">文字列は、10 進数または 16 進数の数字を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="44f18-118">The string can contain either decimal or hexadecimal digits.</span></span> <span data-ttu-id="44f18-119">次の例では、10 進数と 16 進数の文字列の両方を使用して、解析操作を示しています。</span><span class="sxs-lookup"><span data-stu-id="44f18-119">The following example illustrates the parse operation by using both a decimal and a hexadecimal string.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#3)]
     [!code-vb[System.Int32.Instantiation#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#3)]  
  
## <a name="performing-operations-on-int32-values"></a><span data-ttu-id="44f18-120">Int32 値に対して操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="44f18-120">Performing Operations on Int32 Values</span></span>  
 <span data-ttu-id="44f18-121"><xref:System.Int32>型は、加算、減算、除算、乗算、否定、単項マイナス演算子などの標準の数値演算をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="44f18-121">The <xref:System.Int32> type supports standard mathematical operations such as addition, subtraction, division, multiplication, negation, and unary negation.</span></span> <span data-ttu-id="44f18-122">などの他の整数型、<xref:System.Int32>型演算子もサポートされて`AND`、 `OR`、 `XOR`、左 shift キー、および右シフト演算子。</span><span class="sxs-lookup"><span data-stu-id="44f18-122">Like the other integral types, the <xref:System.Int32> type also supports the bitwise `AND`, `OR`, `XOR`, left shift, and right shift operators.</span></span>  
  
 <span data-ttu-id="44f18-123">標準の数値演算子を使用するには 2 つを比較する<xref:System.Int32>を呼び出すの値か、<xref:System.Int32.CompareTo%2A>または<xref:System.Int32.Equals%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-123">You can use the standard numeric operators to compare two <xref:System.Int32> values, or you can call the <xref:System.Int32.CompareTo%2A> or <xref:System.Int32.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="44f18-124">メンバーを呼び出すこともできます、<xref:System.Math>をさまざまな数値の商と整数の除算の剰余を計算する 2 つの最大値または最小値を決定する絶対パスの値を取得するなどの数値演算を実行するクラス整数、数値の符号を取得して、数値を四捨五入します。</span><span class="sxs-lookup"><span data-stu-id="44f18-124">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.</span></span>  
  
## <a name="representing-an-int32-as-a-string"></a><span data-ttu-id="44f18-125">Int32 型を文字列として表す</span><span class="sxs-lookup"><span data-stu-id="44f18-125">Representing an Int32 as a String</span></span>  
 <span data-ttu-id="44f18-126"><xref:System.Int32>型は、標準およびカスタム数値書式指定文字列の完全なサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="44f18-126">The <xref:System.Int32> type provides full support for standard and custom numeric format strings.</span></span> <span data-ttu-id="44f18-127">(詳細については、次を参照してください[型の書式設定](~/docs/standard/base-types/formatting-types.md)、 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)、および[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)。)。</span><span class="sxs-lookup"><span data-stu-id="44f18-127">(For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md), [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).)</span></span>  
  
 <span data-ttu-id="44f18-128">書式設定、<xref:System.Int32>値先行ゼロなしで整数を文字列として、パラメーターなし呼び出せる<xref:System.Int32.ToString>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-128">To format an <xref:System.Int32> value as an integral string with no leading zeros, you can call the parameterless <xref:System.Int32.ToString> method.</span></span> <span data-ttu-id="44f18-129">"D"書式指定子を使用して、指定された数の文字列表現の先頭のゼロも含めることができます。</span><span class="sxs-lookup"><span data-stu-id="44f18-129">By using the "D" format specifier, you can also include a specified number of leading zeros in the string representation.</span></span> <span data-ttu-id="44f18-130">"N"書式指定子を使用すると、グループ区切り記号を含めるし、数値の文字列形式で表示する小数点以下桁数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-130">By using the "N" format specifier, you can include group separators and specify the number of decimal digits to appear in the string representation of the number.</span></span> <span data-ttu-id="44f18-131">"X"書式指定子を使用して表すことができます、 <xref:System.Int32> 16 進数文字列値。</span><span class="sxs-lookup"><span data-stu-id="44f18-131">By using the "X" format specifier, you can represent an <xref:System.Int32> value as a hexadecimal string.</span></span> <span data-ttu-id="44f18-132">次の例の配列内の要素の書式設定<xref:System.Int32>これら 4 つの方法で値。</span><span class="sxs-lookup"><span data-stu-id="44f18-132">The following example formats the elements in an array of <xref:System.Int32> values in these four ways.</span></span>  
  
 [!code-csharp[System.Int32.Formatting#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs#1)]
 [!code-vb[System.Int32.Formatting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb#1)]  
  
 <span data-ttu-id="44f18-133">フォーマットすることも、 <xref:System.Int32> 8 進数、バイナリ形式で呼び出すことによって、10 進または 16 進数の文字列の値、<xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29>メソッドおよびメソッドの 2 番目のパラメーターとして情報を指定します。</span><span class="sxs-lookup"><span data-stu-id="44f18-133">You can also format an <xref:System.Int32> value as a binary, octal, decimal, or hexadecimal string by calling the <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> method and supplying the base as the method's second parameter.</span></span> <span data-ttu-id="44f18-134">次の例では、このバイナリは、8 進数、表示するメソッドをおよび整数値の配列の 16 進数表記を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="44f18-134">The following example calls this method to display the binary, octal, and hexadecimal representations of an array of integer values.</span></span>  
  
 [!code-csharp[System.Int32.Formatting#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs#2)]
 [!code-vb[System.Int32.Formatting#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb#2)]  
  
## <a name="working-with-non-decimal-32-bit-integer-values"></a><span data-ttu-id="44f18-135">10 進数以外の 32 ビット整数値の使用</span><span class="sxs-lookup"><span data-stu-id="44f18-135">Working with Non-Decimal 32-Bit Integer Values</span></span>  
 <span data-ttu-id="44f18-136">10 進数値として個々 の整数を扱ってだけでなく、整数値でビットごとの操作を実行または整数値のバイナリまたは 16 進表現を使用する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="44f18-136">In addition to working with individual integers as decimal values, you may want to perform bitwise operations with integer values, or work with the binary or hexadecimal representations of integer values.</span></span> <span data-ttu-id="44f18-137"><xref:System.Int32> 値は、30 秒ビットを符号ビットとして使用される、31 ビット単位で表されます。</span><span class="sxs-lookup"><span data-stu-id="44f18-137"><xref:System.Int32> values are represented in 31 bits, with the thirty-second bit used as a sign bit.</span></span> <span data-ttu-id="44f18-138">正の値は、符号および絶対値による表現を使用して表されます。</span><span class="sxs-lookup"><span data-stu-id="44f18-138">Positive values are represented by using sign-and-magnitude representation.</span></span> <span data-ttu-id="44f18-139">負の値では、2 つの補数表記でします。</span><span class="sxs-lookup"><span data-stu-id="44f18-139">Negative values are in two's complement representation.</span></span> <span data-ttu-id="44f18-140">これでビットごとの演算を実行したときに留意する重要<xref:System.Int32>値または個別のビットを使用する場合。</span><span class="sxs-lookup"><span data-stu-id="44f18-140">This is important to keep in mind when you perform bitwise operations on <xref:System.Int32> values or when you work with individual bits.</span></span> <span data-ttu-id="44f18-141">数値、ブール値、または 2 つの非の 10 進値の比較演算を実行するためには、両方の値が同じ表現を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="44f18-141">In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="44f18-142">この種類のすべてのメンバーは、スレッド セーフです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="44f18-142">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="44f18-143">インスタンスの状態を変更する表示されるメンバーは、実際に新しい値で初期化された新しいインスタンスを返します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="44f18-143">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="44f18-144">として、他の種類と読み取りと書き込みをこの型のインスタンスを含む共有変数を保護する必要があるスレッド セーフを確保するロックによって。</span>
      <span class="sxs-lookup">
        <span data-stu-id="44f18-144">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.UInt32" />
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d">
      <span data-ttu-id="44f18-145">サンプル: .NET Framework 4 の書式設定ユーティリティ</span>
      <span class="sxs-lookup">
        <span data-stu-id="44f18-145">Sample: .NET Framework 4 Formatting Utility</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44f18-146">指定したオブジェクトまたは <see cref="T:System.Int32" /> とこのインスタンスを比較し、これらの相対値を示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-146">Compares this instance to a specified object or <see cref="T:System.Int32" /> and returns an indication of their relative values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.CompareTo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(int value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : int -&gt; int&#xA;override this.CompareTo : int -&gt; int" Usage="int.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="44f18-147">比較対象の整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-147">An integer to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-148">指定した 32 ビット符号付き整数とこのインスタンスを比較し、これらの相対値を示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-148">Compares this instance to a specified 32-bit signed integer and returns an indication of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-149">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-149">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="44f18-150">戻り値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="44f18-150">Return Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="44f18-151">説明</span>
                <span class="sxs-lookup">
                  <span data-stu-id="44f18-151">Description</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="44f18-152">0 より小さい値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="44f18-152">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="44f18-153">このインスタンスは、<paramref name="value" /> よりも小さくなっています。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="44f18-153">This instance is less than <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="44f18-154">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="44f18-154">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="44f18-155">このインスタンスは <paramref name="value" /> と等価です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="44f18-155">This instance is equal to <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="44f18-156">0 より大きい値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="44f18-156">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="44f18-157">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="44f18-157">This instance is greater than <paramref name="value" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-158">このメソッドを実装、<xref:System.IComparable%601?displayProperty=nameWithType>インターフェイスを実行よりも若干優れています、<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>メソッドに変換することはありませんので、`value`オブジェクトに対するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="44f18-158">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="44f18-159">によって、プログラミング言語をコードにことができる場合があります、<xref:System.Int32.CompareTo%2A>メソッドのパラメーターの型のビット数が少ないが、範囲が狭いインスタンス型よりもします。</span><span class="sxs-lookup"><span data-stu-id="44f18-159">Depending on your programming language, it might be possible to code a <xref:System.Int32.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="44f18-160">一部のプログラミング言語のインスタンスとビット数の型としてパラメーターを表す暗黙の拡大変換を実行するため、可能です。</span><span class="sxs-lookup"><span data-stu-id="44f18-160">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="44f18-161">たとえば、インスタンスの型が<xref:System.Int32>パラメーターの型と<xref:System.Byte>します。</span><span class="sxs-lookup"><span data-stu-id="44f18-161">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="44f18-162">Microsoft c# コンパイラはパラメーターの値を表す命令を生成、<xref:System.Int32>が生成されます、<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>の値を比較するメソッド、<xref:System.Int32>インスタンスと<xref:System.Int32>パラメーターの表現。</span><span class="sxs-lookup"><span data-stu-id="44f18-162">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32>, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="44f18-163">コンパイラが数値型に暗黙の拡大変換を実行するかどうかを判断する、プログラミング言語のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f18-163">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f18-164">次の例で、<xref:System.Int32.CompareTo%28System.Int32%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-164">The following example demonstrates the <xref:System.Int32.CompareTo%28System.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="44f18-165">戻り値をカスタムのメンバーだけでなく 4 つの異なる比較のメソッドによって返される値を表示するには、変換、`Comparison`列挙体の値も表示されます。</span><span class="sxs-lookup"><span data-stu-id="44f18-165">In addition to displaying the value returned by the method for four different comparisons, it converts the return value to a member of the custom `Comparison` enumeration, whose value it also displays.</span></span>  
  
 [!code-csharp[System.Int32.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.CompareTo/cs/CompareTo1.cs#1)]
 [!code-vb[System.Int32.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.CompareTo/vb/CompareTo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Int32.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="int.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="44f18-166">比較対象のオブジェクト、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-166">An object to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-167">指定したオブジェクトとこのインスタンスを比較し、これらの相対値を示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-167">Compares this instance to a specified object and returns an indication of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-168">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-168">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="44f18-169">戻り値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="44f18-169">Return Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="44f18-170">説明</span>
                <span class="sxs-lookup">
                  <span data-stu-id="44f18-170">Description</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="44f18-171">0 より小さい値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="44f18-171">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="44f18-172">このインスタンスは、<paramref name="value" /> よりも小さくなっています。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="44f18-172">This instance is less than <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="44f18-173">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="44f18-173">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="44f18-174">このインスタンスは <paramref name="value" /> と等価です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="44f18-174">This instance is equal to <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="44f18-175">0 より大きい値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="44f18-175">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="44f18-176">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="44f18-176">This instance is greater than <paramref name="value" />.</span>
                </span>
                <span data-ttu-id="44f18-177">- または -</span>
                <span class="sxs-lookup">
                  <span data-stu-id="44f18-177">-or-</span>
                </span>
                <span data-ttu-id="44f18-178">
                  <paramref name="value" /> は <see langword="null" /> です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="44f18-178">
                    <paramref name="value" /> is <see langword="null" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-179">任意のインスタンスの<xref:System.Int32>、その値に関係なくと見なされますより大きい`null`します。</span><span class="sxs-lookup"><span data-stu-id="44f18-179">Any instance of <xref:System.Int32>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="44f18-180">`value` 必要があります`null`のインスタンスまたは<xref:System.Int32>、それ以外の例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="44f18-180">`value` must be `null` or an instance of <xref:System.Int32>; otherwise, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44f18-181">
            <paramref name="value" /> が <see cref="T:System.Int32" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-181">
              <paramref name="value" /> is not an <see cref="T:System.Int32" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Int32.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44f18-182">対象のインスタンスが、指定したオブジェクトまたは <see cref="T:System.Int32" /> に等しいかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-182">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Int32" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (int obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int32 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Equals(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(int obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : int -&gt; bool" Usage="int.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="44f18-183">このインスタンスと比較する <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-183">An <see cref="T:System.Int32" /> value to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-184">このインスタンスが指定した <see cref="T:System.Int32" /> 値に等しいかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-184">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int32" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-185">
            <paramref name="obj" /> の値がこのインスタンスと同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-185">
              <see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-186">このメソッドは、<xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイス、および実行よりも若干優れています<xref:System.Int32.Equals%28System.Object%29?displayProperty=nameWithType>に変換することはありませんので、`obj`オブジェクトに対するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="44f18-186">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Int32.Equals%28System.Object%29?displayProperty=nameWithType> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="44f18-187">コンパイラのオーバー ロードの解決は、2 つの動作の明らかな違いのアカウント可能性があります<see cref="M:System.Int32.Equals(System.Int32)" />メソッドのオーバー ロードします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44f18-187">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int32.Equals(System.Int32)" /> method overloads.</span>
            </span>
            <span data-ttu-id="44f18-188">場合の間の暗黙的な変換、<paramref name="obj" />引数と<see cref="T:System.Int32" />が定義されている引数として型指定されていないと、 <see cref="T:System.Object" />、コンパイラは、暗黙的な変換と呼び出しを実行、<see cref="M:System.Int32.Equals(System.Int32)" />メソッド。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44f18-188">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int32.Equals(System.Int32)" /> method.</span>
            </span>
            <span data-ttu-id="44f18-189">それ以外の場合、それらを呼び出す、<see cref="M:System.Int32.Equals(System.Object)" />メソッドで、常に返します<see langword="false" />場合その<paramref name="obj" />引数がない、<see cref="T:System.Int32" />値。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44f18-189">Otherwise, they call the <see cref="M:System.Int32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int32" /> value.</span>
            </span>
            <span data-ttu-id="44f18-190">次の例は、2 つのメソッドのオーバー ロードの動作の違いを示しています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44f18-190">The following example illustrates the difference in behavior between the two method overloads.</span>
            </span>
            <span data-ttu-id="44f18-191">場合、 <see cref="T:System.Byte" />、 <see cref="T:System.Int16" />、 <see cref="T:System.SByte" />、および<see cref="T:System.UInt16" />値は、最初の比較を返します<see langword="true" />拡大変換と呼び出し、コンパイラが自動的に実行するため、<see cref="M:System.Int32.Equals(System.Int32)" />メソッドは、2 つ目の比較を返します。<see langword="false" />コンパイラを呼び出すため、<see cref="M:System.Int32.Equals(System.Object)" />メソッド。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44f18-191">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.SByte" />, and <see cref="T:System.UInt16" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int32.Equals(System.Int32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int32.Equals(System.Object)" /> method.</span>
            </span>
            <span data-ttu-id="44f18-192">[! コード csharp[System.Int32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs#1)] [! コード vb[System.Int32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb#1)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="44f18-192">[!code-csharp[System.Int32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs#1)] [!code-vb[System.Int32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb#1)]</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="int.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="44f18-193">このインスタンスと比較するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-193">An object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-194">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-194">Returns a value indicating whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-195">
            <paramref name="obj" /> が <see cref="T:System.Int32" /> のインスタンスで、このインスタンスの値に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-195">
              <see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Int32" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="44f18-196">使用例を次に示します`Equals`のコンテキストで`Int32`、比較する 2 つ`int`値を返す`true`、同じ番号を表している場合または`false`一致しない場合。</span><span class="sxs-lookup"><span data-stu-id="44f18-196">The following example illustrates the use of `Equals` in the context of `Int32`, comparing two `int` values and returning `true` if they represent the same number, or `false` if they do not.</span></span>  
  
 [!code-cpp[Int32_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/Int32_Equals/CPP/int32_equals.cpp#1)]
 [!code-csharp[Int32_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/Int32_Equals/CS/int32_equals.cs#1)]
 [!code-vb[Int32_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Int32_Equals/VB/int32_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="44f18-197">コンパイラのオーバー ロードの解決は、2 つの動作の明らかな違いのアカウント可能性があります<see cref="M:System.Int32.Equals(System.Int32)" />メソッドのオーバー ロードします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44f18-197">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int32.Equals(System.Int32)" /> method overloads.</span>
            </span>
            <span data-ttu-id="44f18-198">場合の間の暗黙的な変換、<paramref name="obj" />引数と<see cref="T:System.Int32" />が定義されている引数として型指定されていないと、 <see cref="T:System.Object" />、コンパイラは、暗黙的な変換と呼び出しを実行、<see cref="M:System.Int32.Equals(System.Int32)" />メソッド。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44f18-198">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int32.Equals(System.Int32)" /> method.</span>
            </span>
            <span data-ttu-id="44f18-199">それ以外の場合、それらを呼び出す、<see cref="M:System.Int32.Equals(System.Object)" />メソッドで、常に返します<see langword="false" />場合その<paramref name="obj" />引数がない、<see cref="T:System.Int32" />値。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44f18-199">Otherwise, they call the <see cref="M:System.Int32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int32" /> value.</span>
            </span>
            <span data-ttu-id="44f18-200">次の例は、2 つのメソッドのオーバー ロードの動作の違いを示しています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44f18-200">The following example illustrates the difference in behavior between the two method overloads.</span>
            </span>
            <span data-ttu-id="44f18-201">場合、 <see cref="T:System.Byte" />、 <see cref="T:System.Int16" />、 <see cref="T:System.SByte" />、および<see cref="T:System.UInt16" />値は、最初の比較を返します<see langword="true" />拡大変換と呼び出し、コンパイラが自動的に実行するため、<see cref="M:System.Int32.Equals(System.Int32)" />メソッドは、2 つ目の比較を返します。<see langword="false" />コンパイラを呼び出すため、<see cref="M:System.Int32.Equals(System.Object)" />メソッド。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44f18-201">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.SByte" />, and <see cref="T:System.UInt16" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int32.Equals(System.Int32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int32.Equals(System.Object)" /> method.</span>
            </span>
            <span data-ttu-id="44f18-202">[! コード csharp[System.Int32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs#1)] [! コード vb[System.Int32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb#1)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="44f18-202">[!code-csharp[System.Int32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs#1)] [!code-vb[System.Int32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb#1)]</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Int32.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="int.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44f18-203">このインスタンスのハッシュ コードを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-203">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-204">32 ビット符号付き整数ハッシュ コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-204">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="int.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44f18-205">
            <see cref="T:System.TypeCode" /> 値型の <see cref="T:System.Int32" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-205">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-206">列挙型定数 <see cref="F:System.TypeCode.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-206">The enumerated constant, <see cref="F:System.TypeCode.Int32" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const int MaxValue = 2147483647;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxValue = int32(2147483647)" />
      <MemberSignature Language="DocId" Value="F:System.Int32.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Integer  = 2147483647" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxValue = 2147483647;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : int" Usage="System.int.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2147483647</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="44f18-207">
            <see cref="T:System.Int32" /> の最大有効値を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-207">Represents the largest possible value of an <see cref="T:System.Int32" />.</span>
          </span>
          <span data-ttu-id="44f18-208">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-208">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-209">この定数の値は 2,147, 483,647 です。つまり、16 進数 0x7FFFFFFF します。</span><span class="sxs-lookup"><span data-stu-id="44f18-209">The value of this constant is 2,147,483,647; that is, hexadecimal 0x7FFFFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f18-210">次の例では、<xref:System.Int32.MaxValue>プロパティを防ぐために、<xref:System.OverflowException>に変換するときに、<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="44f18-210">The following example uses the <xref:System.Int32.MaxValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int32> value.</span></span>  
  
 [!code-cpp[System.Int32.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.int32.maxvalue/cpp/maxvalue1.cpp#1)]
 [!code-csharp[System.Int32.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.maxvalue/cs/maxvalue1.cs#1)]
 [!code-vb[System.Int32.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.maxvalue/vb/maxvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int32.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const int MinValue = -2147483648;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinValue = int32(-2147483648)" />
      <MemberSignature Language="DocId" Value="F:System.Int32.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Integer  = -2147483648" />
      <MemberSignature Language="C++ CLI" Value="public: int MinValue = -2147483648;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : int" Usage="System.int.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147483648</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="44f18-211">
            <see cref="T:System.Int32" /> の最小有効値を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-211">Represents the smallest possible value of <see cref="T:System.Int32" />.</span>
          </span>
          <span data-ttu-id="44f18-212">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-212">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-213">この定数の値は-2,147,483,648;つまり、16 進数 0x80000000 です。</span><span class="sxs-lookup"><span data-stu-id="44f18-213">The value of this constant is -2,147,483,648; that is, hexadecimal 0x80000000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f18-214">次の例では、<xref:System.Int32.MinValue>プロパティを防ぐために、<xref:System.OverflowException>に変換するときに、<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="44f18-214">The following example uses the <xref:System.Int32.MinValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int32> value.</span></span>  
  
 [!code-cpp[System.Int32.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.int32.maxvalue/cpp/maxvalue1.cpp#1)]
 [!code-csharp[System.Int32.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.maxvalue/cs/maxvalue1.cs#1)]
 [!code-vb[System.Int32.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.maxvalue/vb/maxvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int32.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44f18-215">数値の文字列形式を、それと等価な 32 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-215">Converts the string representation of a number to its 32-bit signed integer equivalent.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.Int32.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; int" Usage="System.int.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="44f18-216">変換する数値を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-216">A string containing a number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-217">数値の文字列形式を、それと等価な 32 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-217">Converts the string representation of a number to its 32-bit signed integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-218">
            <paramref name="s" /> に格納されている数値と等しい 32 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-218">A 32-bit signed integer equivalent to the number contained in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-219">`s`パラメーターには、フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="44f18-219">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="44f18-220">[ws][サインイン] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="44f18-220">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="44f18-221">角かっこ ([と]) は任意の項目です。</span><span class="sxs-lookup"><span data-stu-id="44f18-221">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="44f18-222">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="44f18-222">The following table describes each element.</span></span>  
  
|<span data-ttu-id="44f18-223">要素</span><span class="sxs-lookup"><span data-stu-id="44f18-223">Element</span></span>|<span data-ttu-id="44f18-224">説明</span><span class="sxs-lookup"><span data-stu-id="44f18-224">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="44f18-225">ws</span><span class="sxs-lookup"><span data-stu-id="44f18-225">ws</span></span>|<span data-ttu-id="44f18-226">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="44f18-226">Optional white space.</span></span>|  
|<span data-ttu-id="44f18-227">sign</span><span class="sxs-lookup"><span data-stu-id="44f18-227">sign</span></span>|<span data-ttu-id="44f18-228">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="44f18-228">An optional sign.</span></span>|  
|<span data-ttu-id="44f18-229">数字</span><span class="sxs-lookup"><span data-stu-id="44f18-229">digits</span></span>|<span data-ttu-id="44f18-230">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="44f18-230">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="44f18-231">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="44f18-231">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="44f18-232">10 進数字だけでなくには、先頭と末尾の空白および先頭の符号のみを許可します。</span><span class="sxs-lookup"><span data-stu-id="44f18-232">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="44f18-233">使用可能なスタイル要素を明示的に定義する`s`、いずれかを使用して、<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>または<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-233">To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="44f18-234">`s`で書式設定情報を使用してパラメーターを解析する<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のシステム カルチャ用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="44f18-234">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="44f18-235">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f18-235">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="44f18-236">他のいくつかのカルチャの書式設定情報を使用して文字列を解析するには、使用、<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-236">To parse a string using the formatting information of some other culture, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f18-237">次の例では、文字列値を使用して 32 ビット符号付き整数値に変換する方法、<xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-237">The following example demonstrates how to convert a string value into a 32-bit signed integer value using the <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="44f18-238">結果の整数値がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="44f18-238">The resulting integer value is then displayed to the console.</span></span>  
  
 [!code-cpp[System.Int32.Parse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse1.cpp#1)]
 [!code-csharp[System.Int32.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse1.cs#1)]
 [!code-vb[System.Int32.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44f18-239">
            <paramref name="s" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-239">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="44f18-240">
            <paramref name="s" /> が正しい形式ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-240">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="44f18-241">
            <paramref name="s" /> が、<see cref="F:System.Int32.MinValue" /> 未満の数値か、<see cref="F:System.Int32.MaxValue" /> より大きい数値を表しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-241">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int32.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="44f18-242">.NET での数値文字列の解析</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-242">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; int" Usage="System.int.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="44f18-243">変換する数値を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-243">A string containing a number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="44f18-244">
            <paramref name="s" /> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-244">A bitwise combination of the enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span>
          </span>
          <span data-ttu-id="44f18-245">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-245">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-246">指定したスタイルの数値の文字列形式を、それと等しい 32 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-246">Converts the string representation of a number in a specified style to its 32-bit signed integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-247">
            <paramref name="s" /> で指定した数値と等しい 32 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-247">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-248">`style`スタイル要素を定義するパラメーター (空白、正または負の符号のシンボルまたは数千など区切り記号) で許容される、`s`解析操作が成功するためのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="44f18-248">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, or the thousands separator symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="44f18-249">ビット フラグの組み合わせがあります、<xref:System.Globalization.NumberStyles>列挙体。</span><span class="sxs-lookup"><span data-stu-id="44f18-249">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="44f18-250">値に応じて`style`、`s`パラメーターは、次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="44f18-250">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="44f18-251">[ws][$][記号][数字] [.fractional_digits] [e [記号] exponential_digits] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="44f18-251">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="44f18-252">または、`style`が含まれています<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="44f18-252">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="44f18-253">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="44f18-253">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="44f18-254">角かっこ ([と]) は任意の項目です。</span><span class="sxs-lookup"><span data-stu-id="44f18-254">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="44f18-255">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="44f18-255">The following table describes each element.</span></span>  
  
|<span data-ttu-id="44f18-256">要素</span><span class="sxs-lookup"><span data-stu-id="44f18-256">Element</span></span>|<span data-ttu-id="44f18-257">説明</span><span class="sxs-lookup"><span data-stu-id="44f18-257">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="44f18-258">*ws*</span><span class="sxs-lookup"><span data-stu-id="44f18-258">*ws*</span></span>|<span data-ttu-id="44f18-259">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="44f18-259">Optional white space.</span></span> <span data-ttu-id="44f18-260">先頭に空白文字を表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>の最後に、フラグ、およびそれが表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-260">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="44f18-261">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="44f18-261">A culture-specific currency symbol.</span></span> <span data-ttu-id="44f18-262">によって、文字列内の位置が定義されている、<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>現在のカルチャのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="44f18-262">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="44f18-263">現在のカルチャの通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-263">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="44f18-264">*sign*</span><span class="sxs-lookup"><span data-stu-id="44f18-264">*sign*</span></span>|<span data-ttu-id="44f18-265">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="44f18-265">An optional sign.</span></span> <span data-ttu-id="44f18-266">先頭の符号が表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>の最後に、フラグ、およびそれが表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-266">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="44f18-267">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-267">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="44f18-268">*数字*</span><span class="sxs-lookup"><span data-stu-id="44f18-268">*digits*</span></span><br /><br /> <span data-ttu-id="44f18-269">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="44f18-269">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="44f18-270">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="44f18-270">*exponential_digits*</span></span>|<span data-ttu-id="44f18-271">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="44f18-271">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="44f18-272">*Fractional_digits*数字の 0 が有効では専用です。</span><span class="sxs-lookup"><span data-stu-id="44f18-272">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="44f18-273">*、*</span><span class="sxs-lookup"><span data-stu-id="44f18-273">*,*</span></span>|<span data-ttu-id="44f18-274">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="44f18-274">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="44f18-275">現在のカルチャの何千もの区切り記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-275">The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="44f18-276">*.*</span><span class="sxs-lookup"><span data-stu-id="44f18-276">*.*</span></span>|<span data-ttu-id="44f18-277">カルチャに固有の小数点記号。</span><span class="sxs-lookup"><span data-stu-id="44f18-277">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="44f18-278">現在のカルチャの小数点記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-278">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="44f18-279">数字の 0 は、解析操作を成功させるための小数部の桁として表示されます。場合*fractional_digits*他の任意の数字が含まれています、<xref:System.OverflowException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="44f18-279">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="44f18-280">*e*</span><span class="sxs-lookup"><span data-stu-id="44f18-280">*e*</span></span>|<span data-ttu-id="44f18-281">"E"または"E"文字は、値は指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="44f18-281">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="44f18-282">`s`パラメーターは指数表記の数値を表すことができる場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-282">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="44f18-283">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="44f18-283">*hexdigits*</span></span>|<span data-ttu-id="44f18-284">0 ~ f、または f の 0 から 16 進数のシーケンス</span><span class="sxs-lookup"><span data-stu-id="44f18-284">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="44f18-285">終端の NUL (u+0000) 文字`s`の値に関係なく、解析操作では無視されますが、`style`引数。</span><span class="sxs-lookup"><span data-stu-id="44f18-285">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="44f18-286">数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイル) 常に正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="44f18-286">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="44f18-287">残りのほとんど<xref:System.Globalization.NumberStyles>メンバーがありますが、入力文字列内に存在する必要はありません要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="44f18-287">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="44f18-288">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在する要素に影響を与える`s`します。</span><span class="sxs-lookup"><span data-stu-id="44f18-288">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="44f18-289">NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="44f18-289">NumberStyles value</span></span>|<span data-ttu-id="44f18-290">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="44f18-290">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="44f18-291">*桁*要素のみです。</span><span class="sxs-lookup"><span data-stu-id="44f18-291">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="44f18-292">10 進数のポイント (*します。*</span><span class="sxs-lookup"><span data-stu-id="44f18-292">The decimal point ( *.*</span></span> <span data-ttu-id="44f18-293">) と*桁の小数部*要素。</span><span class="sxs-lookup"><span data-stu-id="44f18-293">) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="44f18-294">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-294">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="44f18-295">*Ws*の先頭にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="44f18-295">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="44f18-296">*Ws*の末尾にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="44f18-296">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="44f18-297">*サインオン*の先頭にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="44f18-297">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="44f18-298">*サインオン*の末尾にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="44f18-298">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="44f18-299">*サインオン*形式の数値を囲むかっこ内の要素。</span><span class="sxs-lookup"><span data-stu-id="44f18-299">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="44f18-300">桁区切り記号 ( *、* ) 要素。</span><span class="sxs-lookup"><span data-stu-id="44f18-300">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="44f18-301">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="44f18-301">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="44f18-302">すべて。</span><span class="sxs-lookup"><span data-stu-id="44f18-302">All.</span></span> <span data-ttu-id="44f18-303">`s`パラメーターは、16 進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="44f18-303">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="44f18-304">*Ws*先頭または末尾に要素`s`、*サインオン*の先頭に`s`、および小数点 (*します。*</span><span class="sxs-lookup"><span data-stu-id="44f18-304">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point ( *.*</span></span> <span data-ttu-id="44f18-305">) シンボル。</span><span class="sxs-lookup"><span data-stu-id="44f18-305">) symbol.</span></span> <span data-ttu-id="44f18-306">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-306">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="44f18-307">`ws`、 `sign`、何千もの区切り記号 ( *、* )、および小数点 10 進数 (*します。*</span><span class="sxs-lookup"><span data-stu-id="44f18-307">The `ws`, `sign`, thousands separator ( *,* ), and decimal point ( *.*</span></span> <span data-ttu-id="44f18-308">) の要素。</span><span class="sxs-lookup"><span data-stu-id="44f18-308">) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="44f18-309">すべてのスタイルを除く`s`16 進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="44f18-309">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="44f18-310">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、`s`プレフィックスのない 16 進数の値を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="44f18-310">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="44f18-311">たとえば、"C9AF3"が正常に解析しますが、"0xC9AF3"はありません。</span><span class="sxs-lookup"><span data-stu-id="44f18-311">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="44f18-312">のみ他のフラグと組み合わせて使用できますが、`s`パラメーターは、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="44f18-312">The only other flags that can be combined with the `s` parameter it are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="44f18-313">(、<xref:System.Globalization.NumberStyles>列挙には、複合数値スタイルが含まれています<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、空白文字の両方のフラグが含まれます。)。</span><span class="sxs-lookup"><span data-stu-id="44f18-313">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="44f18-314">`s`で書式設定情報を使用してパラメーターを解析する<xref:System.Globalization.NumberFormatInfo>オブジェクトを現在のシステム カルチャが初期化されます。</span><span class="sxs-lookup"><span data-stu-id="44f18-314">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="44f18-315">書式情報を含むが、解析操作で使用されるカルチャを指定するには、呼び出し、<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="44f18-315">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f18-316">次の例では、<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>をいくつかの文字列表現を解析<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="44f18-316">The following example uses the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> method to parse the string representations of several <xref:System.Int32> values.</span></span> <span data-ttu-id="44f18-317">例では、現在のカルチャは、en-us (英語) です。</span><span class="sxs-lookup"><span data-stu-id="44f18-317">The current culture for the example is en-US.</span></span>  
  
 [!code-cpp[System.Int32.Parse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse2.cpp#2)]
 [!code-csharp[System.Int32.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse2.cs#2)]
 [!code-vb[System.Int32.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44f18-318">
            <paramref name="s" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-318">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44f18-319">
            <paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-319">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="44f18-320">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-320">-or-</span>
          </span>
          <span data-ttu-id="44f18-321">
            <paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-321">
              <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="44f18-322">
            <paramref name="s" /> の形式が <paramref name="style" /> に準拠していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-322">
              <paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="44f18-323">
            <paramref name="s" /> が、<see cref="F:System.Int32.MinValue" /> 未満の数値か、<see cref="F:System.Int32.MaxValue" /> より大きい数値を表しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-323">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="44f18-324">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-324">-or-</span>
          </span>
          <span data-ttu-id="44f18-325">
            <paramref name="s" /> に 0 以外の小数が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-325">
              <paramref name="s" /> includes non-zero, fractional digits.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int32.ToString" />
        <altmember cref="Overload:System.Int32.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="44f18-326">.NET での数値文字列の解析</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-326">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; int" Usage="System.int.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="44f18-327">変換する数値を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-327">A string containing a number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="44f18-328">
            <paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-328">An object that supplies culture-specific formatting information about <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-329">指定したカルチャに固有の書式による数値の文字列形式を、それと等価な 32 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-329">Converts the string representation of a number in a specified culture-specific format to its 32-bit signed integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-330">
            <paramref name="s" /> で指定した数値と等しい 32 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-330">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-331">このオーバー ロード、<xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29>メソッドでは、さまざまな方法で書式に設定するテキストに変換するために使用は通常、<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="44f18-331">This overload of the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to an <xref:System.Int32> value.</span></span> <span data-ttu-id="44f18-332">たとえば、これを数値には、HTML テキスト ボックスに、ユーザーが入力したテキストに変換する使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-332">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="44f18-333">`s`パラメーターには、フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="44f18-333">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="44f18-334">[ws][サインイン] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="44f18-334">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="44f18-335">角かっこ ([と]) は任意の項目です。</span><span class="sxs-lookup"><span data-stu-id="44f18-335">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="44f18-336">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="44f18-336">The following table describes each element.</span></span>  
  
|<span data-ttu-id="44f18-337">要素</span><span class="sxs-lookup"><span data-stu-id="44f18-337">Element</span></span>|<span data-ttu-id="44f18-338">説明</span><span class="sxs-lookup"><span data-stu-id="44f18-338">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="44f18-339">*ws*</span><span class="sxs-lookup"><span data-stu-id="44f18-339">*ws*</span></span>|<span data-ttu-id="44f18-340">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="44f18-340">Optional white space.</span></span>|  
|<span data-ttu-id="44f18-341">*sign*</span><span class="sxs-lookup"><span data-stu-id="44f18-341">*sign*</span></span>|<span data-ttu-id="44f18-342">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="44f18-342">An optional sign.</span></span>|  
|<span data-ttu-id="44f18-343">*数字*</span><span class="sxs-lookup"><span data-stu-id="44f18-343">*digits*</span></span>|<span data-ttu-id="44f18-344">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="44f18-344">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="44f18-345">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="44f18-345">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="44f18-346">10 進数字だけでなくには、先頭と末尾の空白および先頭の符号のみを許可します。</span><span class="sxs-lookup"><span data-stu-id="44f18-346">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="44f18-347">使用可能なスタイル要素を明示的に定義する`s`を使用して、<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-347">To explicitly define the style elements that can be present in `s`, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="44f18-348">`provider`パラメーターは、<xref:System.IFormatProvider>実装など、<xref:System.Globalization.NumberFormatInfo>または<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44f18-348">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="44f18-349">`provider`パラメーターの書式設定に関するカルチャ固有の情報を提供`s`します。</span><span class="sxs-lookup"><span data-stu-id="44f18-349">The `provider` parameter supplies culture-specific information about the format of `s`.</span></span> <span data-ttu-id="44f18-350">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="44f18-350">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f18-351">次の例は、ボタンは、Web フォームのイベント ハンドラーをクリックします。</span><span class="sxs-lookup"><span data-stu-id="44f18-351">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="44f18-352">によって返される配列を使用して、<xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>プロパティをユーザーのロケールを決定します。</span><span class="sxs-lookup"><span data-stu-id="44f18-352">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="44f18-353">インスタンス化し、<xref:System.Globalization.CultureInfo>そのロケールに対応するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44f18-353">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="44f18-354"><xref:System.Globalization.NumberFormatInfo>オブジェクトに属する<xref:System.Globalization.CultureInfo>オブジェクトに渡されます、<xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29>にユーザーを変換するメソッドの入力、<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="44f18-354">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to an <xref:System.Int32> value.</span></span>  
  
 [!code-csharp[ParseMethod#4](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#4)]
 [!code-vb[ParseMethod#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44f18-355">
            <paramref name="s" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-355">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="44f18-356">
            <paramref name="s" /> が正しい形式ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-356">
              <paramref name="s" /> is not of the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="44f18-357">
            <paramref name="s" /> が、<see cref="F:System.Int32.MinValue" /> 未満の数値か、<see cref="F:System.Int32.MaxValue" /> より大きい数値を表しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-357">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int32.ToString" />
        <altmember cref="Overload:System.Int32.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="44f18-358">.NET での数値文字列の解析</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-358">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Integer" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; int" Usage="System.int.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; int" Usage="System.int.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="44f18-359">変換する数値を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-359">A string containing a number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="44f18-360">
            <paramref name="s" /> で存在する可能性を持つスタイル要素を示す、列挙値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-360">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span>
          </span>
          <span data-ttu-id="44f18-361">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-361">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="44f18-362">
            <paramref name="s" /> の書式設定に関するカルチャ固有の情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-362">An object that supplies culture-specific information about the format of <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-363">指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価の 32 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-363">Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-364">
            <paramref name="s" /> で指定した数値と等しい 32 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-364">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-365">`style` (空白や正符号) で使用できるスタイル要素を定義するパラメーター、`s`解析操作が成功するためのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="44f18-365">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="44f18-366">ビット フラグの組み合わせがあります、<xref:System.Globalization.NumberStyles>列挙体。</span><span class="sxs-lookup"><span data-stu-id="44f18-366">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="44f18-367">値に応じて`style`、`s`パラメーターは、次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="44f18-367">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="44f18-368">[ws][$][記号][数字] [.fractional_digist] [e [記号] exponential_digits] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="44f18-368">[ws][$][sign][digits,]digits[.fractional_digist][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="44f18-369">または、`style`が含まれています<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="44f18-369">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="44f18-370">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="44f18-370">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="44f18-371">角かっこ ([と]) は任意の項目です。</span><span class="sxs-lookup"><span data-stu-id="44f18-371">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="44f18-372">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="44f18-372">The following table describes each element.</span></span>  
  
|<span data-ttu-id="44f18-373">要素</span><span class="sxs-lookup"><span data-stu-id="44f18-373">Element</span></span>|<span data-ttu-id="44f18-374">説明</span><span class="sxs-lookup"><span data-stu-id="44f18-374">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="44f18-375">*ws*</span><span class="sxs-lookup"><span data-stu-id="44f18-375">*ws*</span></span>|<span data-ttu-id="44f18-376">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="44f18-376">Optional white space.</span></span> <span data-ttu-id="44f18-377">先頭に空白文字を表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>の最後に、フラグ、およびそれが表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-377">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="44f18-378">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="44f18-378">A culture-specific currency symbol.</span></span> <span data-ttu-id="44f18-379">によって、文字列内の位置が定義されている、<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>のプロパティ、<xref:System.Globalization.NumberFormatInfo>によって返されるオブジェクト、<xref:System.IFormatProvider.GetFormat%2A>のメソッド、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="44f18-379">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="44f18-380">通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-380">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="44f18-381">*sign*</span><span class="sxs-lookup"><span data-stu-id="44f18-381">*sign*</span></span>|<span data-ttu-id="44f18-382">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="44f18-382">An optional sign.</span></span> <span data-ttu-id="44f18-383">先頭の符号が表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>フラグの末尾または`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-383">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="44f18-384">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-384">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="44f18-385">*数字*</span><span class="sxs-lookup"><span data-stu-id="44f18-385">*digits*</span></span><br /><br /> <span data-ttu-id="44f18-386">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="44f18-386">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="44f18-387">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="44f18-387">*exponential_digits*</span></span>|<span data-ttu-id="44f18-388">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="44f18-388">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="44f18-389">*Fractional_digits*数字の 0 が有効では専用です。</span><span class="sxs-lookup"><span data-stu-id="44f18-389">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="44f18-390">*、*</span><span class="sxs-lookup"><span data-stu-id="44f18-390">*,*</span></span>|<span data-ttu-id="44f18-391">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="44f18-391">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="44f18-392">数千で指定されたカルチャの区切り記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-392">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="44f18-393">*.*</span><span class="sxs-lookup"><span data-stu-id="44f18-393">*.*</span></span>|<span data-ttu-id="44f18-394">カルチャに固有の小数点記号。</span><span class="sxs-lookup"><span data-stu-id="44f18-394">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="44f18-395">指定されたカルチャの小数点記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-395">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span><br /><br /> <span data-ttu-id="44f18-396">数字の 0 は、解析操作を成功させるための小数部の桁として表示されます。場合*fractional_digits*他の任意の数字が含まれています、<xref:System.OverflowException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="44f18-396">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="44f18-397">*e*</span><span class="sxs-lookup"><span data-stu-id="44f18-397">*e*</span></span>|<span data-ttu-id="44f18-398">"E"または"E"文字は、値は指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="44f18-398">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="44f18-399">`s`パラメーターは指数表記の数値を表すことができる場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-399">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="44f18-400">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="44f18-400">*hexdigits*</span></span>|<span data-ttu-id="44f18-401">0 ~ f、または f の 0 から 16 進数のシーケンス</span><span class="sxs-lookup"><span data-stu-id="44f18-401">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="44f18-402">終端の NUL (u+0000) 文字`s`の値に関係なく、解析操作では無視されますが、`style`引数。</span><span class="sxs-lookup"><span data-stu-id="44f18-402">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="44f18-403">10 進数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイル) の範囲内にある場合は、常に正常に解析、<xref:System.Int32>型。</span><span class="sxs-lookup"><span data-stu-id="44f18-403">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully if it is in the range of the <xref:System.Int32> type.</span></span> <span data-ttu-id="44f18-404">残りのほとんど<xref:System.Globalization.NumberStyles>メンバーがありますが、この入力文字列内に存在する必要はありません要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="44f18-404">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="44f18-405">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在する要素に影響を与える`s`します。</span><span class="sxs-lookup"><span data-stu-id="44f18-405">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="44f18-406">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="44f18-406">Non-composite NumberStyles values</span></span>|<span data-ttu-id="44f18-407">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="44f18-407">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="44f18-408">10 進数字のみです。</span><span class="sxs-lookup"><span data-stu-id="44f18-408">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="44f18-409">10 進数のポイント (*します。*</span><span class="sxs-lookup"><span data-stu-id="44f18-409">The decimal point ( *.*</span></span> <span data-ttu-id="44f18-410">) と*桁の小数部*要素。</span><span class="sxs-lookup"><span data-stu-id="44f18-410">) and *fractional-digits* elements.</span></span> <span data-ttu-id="44f18-411">ただし、*桁の小数部*のみ 1 つまたは複数の 0 の数字で構成する必要がありますまたは<xref:System.OverflowException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="44f18-411">However, *fractional-digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="44f18-412">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-412">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="44f18-413">場合`s`指数表記の数値を表すことの範囲内の整数を表す必要があります、 <xref:System.Int32> 、0 以外の小数部がないデータ型。</span><span class="sxs-lookup"><span data-stu-id="44f18-413">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="44f18-414">*Ws*の先頭にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="44f18-414">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="44f18-415">*Ws*の末尾にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="44f18-415">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="44f18-416">正の記号を前に配置できます*桁*します。</span><span class="sxs-lookup"><span data-stu-id="44f18-416">A positive sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="44f18-417">正の記号が後に表示できる*桁*します。</span><span class="sxs-lookup"><span data-stu-id="44f18-417">A positive sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="44f18-418">*サインオン*形式の数値を囲むかっこ内の要素。</span><span class="sxs-lookup"><span data-stu-id="44f18-418">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="44f18-419">桁区切り記号 ( *、* ) 要素。</span><span class="sxs-lookup"><span data-stu-id="44f18-419">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="44f18-420">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="44f18-420">The *$* element.</span></span>|  
  
 <span data-ttu-id="44f18-421">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、`s`プレフィックスのない 16 進数の値を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="44f18-421">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="44f18-422">たとえば、"C9AF3"が正常に解析しますが、"0xC9AF3"はありません。</span><span class="sxs-lookup"><span data-stu-id="44f18-422">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="44f18-423">他のフラグのみに存在することができる`style`は<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="44f18-423">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="44f18-424">(、<xref:System.Globalization.NumberStyles>列挙体には複合数値スタイル、 <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、空白文字の両方のフラグが含まれます)。</span><span class="sxs-lookup"><span data-stu-id="44f18-424">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="44f18-425">`provider`パラメーターは、<xref:System.IFormatProvider>実装など、<xref:System.Globalization.NumberFormatInfo>または<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44f18-425">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="44f18-426">`provider`パラメーターの解析中に使用されるカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="44f18-426">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="44f18-427">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="44f18-427">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f18-428">次の例は、さまざまな`style`と`provider`パラメーターの文字列形式を解析する<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="44f18-428">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Int32> values.</span></span> <span data-ttu-id="44f18-429">いくつかの書式情報を含むが、解析操作で使用されるカルチャに応じて、同じ文字列を解釈できるさまざまな方法も示します。</span><span class="sxs-lookup"><span data-stu-id="44f18-429">It also illustrates some of the different ways the same string can be interpreted depending on the culture whose formatting information is used for the parsing operation.</span></span>  
  
 [!code-cpp[System.Int32.Parse#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse3.cpp#3)]
 [!code-csharp[System.Int32.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse3.cs#3)]
 [!code-vb[System.Int32.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44f18-430">
            <paramref name="s" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-430">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44f18-431">
            <paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-431">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="44f18-432">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-432">-or-</span>
          </span>
          <span data-ttu-id="44f18-433">
            <paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-433">
              <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="44f18-434">
            <paramref name="s" /> の形式が <paramref name="style" /> に準拠していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-434">
              <paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="44f18-435">
            <paramref name="s" /> が、<see cref="F:System.Int32.MinValue" /> 未満の数値か、<see cref="F:System.Int32.MaxValue" /> より大きい数値を表しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-435">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="44f18-436">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-436">-or-</span>
          </span>
          <span data-ttu-id="44f18-437">
            <paramref name="s" /> に 0 以外の小数が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-437">
              <paramref name="s" /> includes non-zero, fractional digits.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int32.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="44f18-438">.NET での数値文字列の解析</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-438">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="44f18-439">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-439">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-440">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-440">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-441">現在のインスタンスの値が 0 でない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-441">
              <see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-442">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="44f18-442">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44f18-443">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-443">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="44f18-444">推奨される代替手段は、<xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-444">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="44f18-445">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-445">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-446">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-446">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-447">
            <see cref="T:System.Byte" /> に変換後の現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-447">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-448">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="44f18-448">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44f18-449">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-449">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="44f18-450">推奨される代替手段は、<xref:System.Convert.ToByte%28System.Int32%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-450">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="44f18-451">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-451">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-452">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-452">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-453">
            <see cref="T:System.Char" /> に変換後の現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-453">The value of the current instance, converted to a <see cref="T:System.Char" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-454">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="44f18-454">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44f18-455">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-455">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="44f18-456">推奨される代替手段は、<xref:System.Convert.ToChar%28System.Int32%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-456">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="44f18-457">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-457">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-458">この変換はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-458">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="44f18-459">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-459">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-460">この変換はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-460">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="44f18-461">値は返されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-461">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="44f18-462">すべての場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-462">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="44f18-463">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-463">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-464">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-464">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-465">
            <see cref="T:System.Decimal" /> に変換後の現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-465">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-466">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="44f18-466">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44f18-467">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-467">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="44f18-468">推奨される代替手段は、<xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-468">The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="44f18-469">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-469">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-470">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-470">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-471">
            <see cref="T:System.Double" /> に変換後の現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-471">The value of the current instance, converted to a <see cref="T:System.Double" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-472">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="44f18-472">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44f18-473">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-473">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="44f18-474">推奨される代替手段は、<xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-474">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="44f18-475">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-475">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-476">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-476">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-477">
            <see cref="T:System.Int16" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-477">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-478">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="44f18-478">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44f18-479">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-479">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="44f18-480">推奨される代替手段は、<xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-480">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="44f18-481">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-481">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-482">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-482">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-483">変更されていない、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-483">The value of the current instance, unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-484">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="44f18-484">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44f18-485">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-485">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="44f18-486">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-486">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-487">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-487">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-488">
            <see cref="T:System.Int64" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-488">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-489">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="44f18-489">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44f18-490">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-490">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="44f18-491">推奨される代替手段は、<xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-491">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="44f18-492">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-492">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-493">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-493">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-494">
            <see cref="T:System.SByte" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-494">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-495">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="44f18-495">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44f18-496">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-496">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="44f18-497">推奨される代替手段は、<xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-497">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="44f18-498">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-498">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-499">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-499">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-500">
            <see cref="T:System.Single" /> に変換後の現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-500">The value of the current instance, converted to a <see cref="T:System.Single" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-501">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="44f18-501">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44f18-502">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-502">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="44f18-503">推奨される代替手段は、<xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-503">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="44f18-504">この <see cref="T:System.Int32" /> 値の変換後の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-504">The type to which to convert this <see cref="T:System.Int32" /> value.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="44f18-505">戻り値の書式に関する情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-505">An object that provides information about the format of the returned value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-506">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-506">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-507">
            <paramref name="type" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-507">The value of the current instance, converted to <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-508">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="44f18-508">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44f18-509">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-509">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="44f18-510">推奨される代替手段は、 `static` (`Shared` Visual Basic で)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="44f18-510">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="44f18-511">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-511">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-512">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-512">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-513">
            <see cref="T:System.UInt16" /> に変換後の現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-513">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-514">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="44f18-514">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44f18-515">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-515">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="44f18-516">推奨される代替手段は、<xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-516">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="44f18-517">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-517">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-518">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-518">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-519">
            <see cref="T:System.UInt32" /> に変換後の現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-519">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-520">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="44f18-520">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44f18-521">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-521">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="44f18-522">推奨される代替手段は、<xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-522">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="44f18-523">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-523">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-524">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-524">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-525">
            <see cref="T:System.UInt64" /> に変換後の現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-525">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-526">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="44f18-526">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44f18-527">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-527">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="44f18-528">推奨される代替手段は、<xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-528">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44f18-529">このインスタンスの数値を、それと等価な文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-529">Converts the numeric value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="int.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44f18-530">このインスタンスの数値を、それと等価な文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-530">Converts the numeric value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-531">値が負の場合はマイナス記号を伴い、先行ゼロを含まない 0 から 9 の一連の数字から構成される、このインスタンスの値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-531">The string representation of the value of this instance, consisting of a negative sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-532"><xref:System.Int32.ToString>メソッド形式、 <xref:System.Int32> ("G"または [全般]) の既定値を使用して形式、<xref:System.Globalization.NumberFormatInfo>現在のカルチャのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44f18-532">The <xref:System.Int32.ToString> method formats an <xref:System.Int32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="44f18-533">別の形式またはカルチャを指定する場合の他のオーバー ロードを使用して、<xref:System.Int32.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="44f18-533">If you want to specify a different format or culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="44f18-534">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="44f18-534">To use format</span></span>|<span data-ttu-id="44f18-535">カルチャ</span><span class="sxs-lookup"><span data-stu-id="44f18-535">For culture</span></span>|<span data-ttu-id="44f18-536">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="44f18-536">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="44f18-537">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="44f18-537">Default ("G") format</span></span>|<span data-ttu-id="44f18-538">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="44f18-538">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="44f18-539">特定の形式</span><span class="sxs-lookup"><span data-stu-id="44f18-539">A specific format</span></span>|<span data-ttu-id="44f18-540">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="44f18-540">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
|<span data-ttu-id="44f18-541">特定の形式</span><span class="sxs-lookup"><span data-stu-id="44f18-541">A specific format</span></span>|<span data-ttu-id="44f18-542">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="44f18-542">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="44f18-543">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="44f18-543">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="44f18-544">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="44f18-544">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="44f18-545">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="44f18-545">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f18-546">次の例では、表示、<xref:System.Int32>値の既定値を使用して<xref:System.Int32.ToString>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-546">The following example displays an <xref:System.Int32> value using the default <xref:System.Int32.ToString> method.</span></span> <span data-ttu-id="44f18-547">文字列表現が表示されます、<xref:System.Int32>からさまざまな標準書式指定子を使用して結果の値。</span><span class="sxs-lookup"><span data-stu-id="44f18-547">It also displays the string representations of the <xref:System.Int32> value that results from using a number of standard format specifiers.</span></span> <span data-ttu-id="44f18-548">例は、EN-US カルチャの書式指定規則を使用して表示されます。</span><span class="sxs-lookup"><span data-stu-id="44f18-548">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-cpp[System.Int32.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString1.cpp#1)]
 [!code-csharp[System.Int32.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#1)]
 [!code-vb[System.Int32.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">
          <span data-ttu-id="44f18-549">.NET での型の書式設定</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-549">Formatting Types in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="int.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="44f18-550">カルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-550">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-551">このインスタンスの数値を、指定したカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-551">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-552">
            <paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-552">The string representation of the value of this instance as specified by <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-553"><xref:System.Int32.ToString%28System.IFormatProvider%29>メソッド形式、 <xref:System.Int32> ("G"または [全般]) の既定値を使用して形式、<xref:System.Globalization.NumberFormatInfo>特定のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44f18-553">The <xref:System.Int32.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="44f18-554">別の形式または現在のカルチャを指定する場合の他のオーバー ロードを使用して、<xref:System.Int32.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="44f18-554">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="44f18-555">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="44f18-555">To use format</span></span>|<span data-ttu-id="44f18-556">カルチャ</span><span class="sxs-lookup"><span data-stu-id="44f18-556">For culture</span></span>|<span data-ttu-id="44f18-557">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="44f18-557">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="44f18-558">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="44f18-558">Default ("G") format</span></span>|<span data-ttu-id="44f18-559">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="44f18-559">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="44f18-560">特定の形式</span><span class="sxs-lookup"><span data-stu-id="44f18-560">A specific format</span></span>|<span data-ttu-id="44f18-561">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="44f18-561">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
|<span data-ttu-id="44f18-562">特定の形式</span><span class="sxs-lookup"><span data-stu-id="44f18-562">A specific format</span></span>|<span data-ttu-id="44f18-563">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="44f18-563">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="44f18-564">`provider`パラメーターが実装するオブジェクト、<xref:System.IFormatProvider>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="44f18-564">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="44f18-565">その<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します。 を<xref:System.Globalization.NumberFormatInfo>このメソッドによって返される文字列の書式設定に関するカルチャに固有の情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44f18-565">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="44f18-566">実装するオブジェクト<xref:System.IFormatProvider>次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-566">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="44f18-567">A<xref:System.Globalization.CultureInfo>書式指定規則を使用するカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44f18-567">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="44f18-568">A<xref:System.Globalization.NumberFormatInfo>この値の特定の数値書式設定情報を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44f18-568">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="44f18-569">実装するカスタム オブジェクト<xref:System.IFormatProvider>と持つ<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します。 を<xref:System.Globalization.NumberFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44f18-569">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="44f18-570">場合`provider`は`null`または<xref:System.Globalization.NumberFormatInfo>からオブジェクトを取得できない`provider`を使用して、戻り値の形式が、<xref:System.Globalization.NumberFormatInfo>の現在のスレッド カルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44f18-570">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture.</span></span> <span data-ttu-id="44f18-571">現在のスレッド カルチャについては、次を参照してください。<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="44f18-571">For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="44f18-572">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="44f18-572">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="44f18-573">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="44f18-573">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="44f18-574">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="44f18-574">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f18-575">次の例の文字列表現を表示する、<xref:System.Int32>値を使用して<xref:System.Globalization.CultureInfo>いくつかの異なるカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44f18-575">The following example displays the string representation of an <xref:System.Int32> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-cpp[System.Int32.ToString#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString2.cpp#2)]
 [!code-csharp[System.Int32.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#2)]
 [!code-vb[System.Int32.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">
          <span data-ttu-id="44f18-576">.NET での型の書式設定</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-576">Formatting Types in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="int.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="44f18-577">標準またはカスタムの数値書式指定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-577">A standard or custom numeric format string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-578">指定した書式を使用して、このインスタンスの数値を、それと等価な文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-578">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-579">
            <paramref name="format" /> で指定された、このインスタンスの値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-579">The string representation of the value of this instance as specified by <paramref name="format" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-580"><xref:System.Int32.ToString%28System.String%29>メソッド形式、<xref:System.Int32>を使用して指定された形式で値を<xref:System.Globalization.NumberFormatInfo>現在のカルチャの規則を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44f18-580">The <xref:System.Int32.ToString%28System.String%29> method formats an <xref:System.Int32> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="44f18-581">既定値 ("G"または [全般]) を使用する場合は、書式を設定または別のカルチャを指定するの他のオーバー ロードを使用して、<xref:System.Int32.ToString%2A>メソッドは、次のように。</span><span class="sxs-lookup"><span data-stu-id="44f18-581">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="44f18-582">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="44f18-582">To use format</span></span>|<span data-ttu-id="44f18-583">カルチャ</span><span class="sxs-lookup"><span data-stu-id="44f18-583">For culture</span></span>|<span data-ttu-id="44f18-584">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="44f18-584">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="44f18-585">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="44f18-585">Default ("G") format</span></span>|<span data-ttu-id="44f18-586">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="44f18-586">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="44f18-587">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="44f18-587">Default ("G") format</span></span>|<span data-ttu-id="44f18-588">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="44f18-588">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="44f18-589">特定の形式</span><span class="sxs-lookup"><span data-stu-id="44f18-589">A specific format</span></span>|<span data-ttu-id="44f18-590">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="44f18-590">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="44f18-591">`format` "R"を除く任意の有効な標準の数値書式指定子およびカスタム数値書式指定子の任意の組み合わせをパラメーターとして使用することができます。</span><span class="sxs-lookup"><span data-stu-id="44f18-591">The `format` parameter can be any valid standard numeric format specifier except for "R", as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="44f18-592">場合`format`は`null`または空の文字列 ("")、このインスタンスの戻り値が、一般的な数値書式指定子 ("G") でフォーマットされています。</span><span class="sxs-lookup"><span data-stu-id="44f18-592">If `format` is `null` or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="44f18-593">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="44f18-593">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="44f18-594">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="44f18-594">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="44f18-595">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="44f18-595">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="44f18-596">このインスタンスの戻り値は設定、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="44f18-596">The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f18-597">次の例では、表示、<xref:System.Int32>値の 2 つのカスタム数値書式指定文字列と共に、サポートされている標準の数値書式指定子を使用します。</span><span class="sxs-lookup"><span data-stu-id="44f18-597">The following example displays an <xref:System.Int32> value using each of the supported standard numeric format specifiers, together with two custom numeric format strings.</span></span> <span data-ttu-id="44f18-598">数値の値を文字列に変換では、EN-US カルチャの書式指定規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="44f18-598">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-cpp[System.Int32.ToString#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString3.cpp#3)]
 [!code-csharp[System.Int32.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#3)]
 [!code-vb[System.Int32.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="44f18-599">
            <paramref name="format" /> は使用できないか、またはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-599">
              <paramref name="format" /> is invalid or not supported.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">
          <span data-ttu-id="44f18-600">.NET での型の書式設定</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-600">Formatting Types in .NET</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md">
          <span data-ttu-id="44f18-601">標準の数値書式指定文字列</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-601">Standard Numeric Format Strings</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">
          <span data-ttu-id="44f18-602">カスタム数値書式指定文字列</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-602">Custom Numeric Format Strings</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md">
          <span data-ttu-id="44f18-603">方法: 数値に先行するゼロを埋め込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-603">How to: Pad a Number with Leading Zeros</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="int.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="44f18-604">標準またはカスタムの数値書式指定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-604">A standard or custom numeric format string.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="44f18-605">カルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-605">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-606">このインスタンスの数値を、指定した書式およびカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-606">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-607">
            <paramref name="format" /> および <paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-607">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-608"><xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>メソッド形式、<xref:System.Int32>値を使用して指定された形式で、<xref:System.Globalization.NumberFormatInfo>特定のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44f18-608">The <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int32> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="44f18-609">既定の形式またはカルチャの設定を使用する場合の他のオーバー ロードを使用して、<xref:System.Int32.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="44f18-609">If you want to use default format or culture settings, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="44f18-610">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="44f18-610">To use format</span></span>|<span data-ttu-id="44f18-611">カルチャ</span><span class="sxs-lookup"><span data-stu-id="44f18-611">For culture</span></span>|<span data-ttu-id="44f18-612">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="44f18-612">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="44f18-613">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="44f18-613">Default ("G") format</span></span>|<span data-ttu-id="44f18-614">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="44f18-614">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="44f18-615">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="44f18-615">Default ("G") format</span></span>|<span data-ttu-id="44f18-616">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="44f18-616">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="44f18-617">特定の形式</span><span class="sxs-lookup"><span data-stu-id="44f18-617">A specific format</span></span>|<span data-ttu-id="44f18-618">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="44f18-618">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
  
 <span data-ttu-id="44f18-619">`format`パラメーターは、標準またはカスタム数値書式指定文字列のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-619">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="44f18-620">すべてのカスタム数値書式指定文字として、"R"(または"r") 以外のすべての標準数値書式指定文字列がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="44f18-620">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="44f18-621">場合`format`は`null`または空の文字列 ("")、このインスタンスの戻り値が、一般的な数値書式指定子 ("G") でフォーマットされています。</span><span class="sxs-lookup"><span data-stu-id="44f18-621">If `format` is `null` or an empty string (""), the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="44f18-622">`provider`パラメーターが実装するオブジェクト、<xref:System.IFormatProvider>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="44f18-622">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="44f18-623">その<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します。 を<xref:System.Globalization.NumberFormatInfo>このメソッドによって返される文字列の書式設定に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44f18-623">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific format information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="44f18-624">実装するオブジェクト<xref:System.IFormatProvider>次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-624">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="44f18-625">A<xref:System.Globalization.CultureInfo>書式指定規則を使用するカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44f18-625">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="44f18-626">A<xref:System.Globalization.NumberFormatInfo>この値の特定の数値書式設定情報を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44f18-626">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="44f18-627">実装するカスタム オブジェクト<xref:System.IFormatProvider>と持つ<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します。 を<xref:System.Globalization.NumberFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44f18-627">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="44f18-628">場合`provider`は`null`または<xref:System.Globalization.NumberFormatInfo>からオブジェクトを取得できない`provider`、このインスタンスの戻り値は設定、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="44f18-628">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value for this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
 <span data-ttu-id="44f18-629">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="44f18-629">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="44f18-630">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="44f18-630">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="44f18-631">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="44f18-631">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f18-632">次の例では、正と負の値が 3 つの異なるカルチャを使用して、サポートされている標準の数値書式指定子の各が表示されます。</span><span class="sxs-lookup"><span data-stu-id="44f18-632">The following example displays a positive and a negative value using each of the supported standard numeric format specifiers for three different cultures.</span></span>  
  
 [!code-cpp[System.Int32.ToString#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString4.cpp#4)]
 [!code-csharp[System.Int32.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#4)]
 [!code-vb[System.Int32.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="44f18-633">
            <paramref name="format" /> は使用できないか、またはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-633">
              <paramref name="format" /> is invalid or not supported.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">
          <span data-ttu-id="44f18-634">.NET での型の書式設定</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-634">Formatting Types in .NET</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md">
          <span data-ttu-id="44f18-635">標準の数値書式指定文字列</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-635">Standard Numeric Format Strings</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">
          <span data-ttu-id="44f18-636">カスタム数値書式指定文字列</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-636">Custom Numeric Format Strings</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md">
          <span data-ttu-id="44f18-637">方法: 数値に先行するゼロを埋め込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-637">How to: Pad a Number with Leading Zeros</span>
          </span>
        </related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d">
          <span data-ttu-id="44f18-638">サンプル: .NET Framework 4 の書式設定ユーティリティ</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-638">Sample: .NET Framework 4 Formatting Utility</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="int.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44f18-639">数値の文字列形式を、それと等価な 32 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-639">Converts the string representation of a number to its 32-bit signed integer equivalent.</span>
          </span>
          <span data-ttu-id="44f18-640">戻り値は、演算が成功したかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-640">A return value indicates whether the operation succeeded.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.Int32.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.int.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.String,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.int.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="44f18-641">変換する数値を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-641">A string containing a number to convert.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="44f18-642">変換が成功した場合、このメソッドが返されるときに、<paramref name="s" /> に格納された数値と等価の 32 ビット符号付き整数値を格納します。変換に失敗した場合は 0 を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-642">When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span>
          </span>
          <span data-ttu-id="44f18-643">
            <paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、正しい形式ではない、または <see cref="F:System.Int32.MinValue" /> より小さいか <see cref="F:System.Int32.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-643">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="44f18-644">このパラメーターは初期化されていない状態で渡されています。<paramref name="result" /> で最初に指定された任意の値が上書きされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-644">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-645">数値の文字列形式を、それと等価な 32 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-645">Converts the string representation of a number to its 32-bit signed integer equivalent.</span>
          </span>
          <span data-ttu-id="44f18-646">戻り値は、変換が成功したかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-646">A return value indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-647">
            <see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-647">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-648"><xref:System.Int32.TryParse%2A>などのメソッドは、<xref:System.Int32.Parse%2A>メソッドを除く、<xref:System.Int32.TryParse%2A>メソッドは、変換が失敗した場合に例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="44f18-648">The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="44f18-649">例外処理を使用してテストする必要がある、<xref:System.FormatException>イベントで`s`有効でないし、正常に解析されることはできません。</span><span class="sxs-lookup"><span data-stu-id="44f18-649">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="44f18-650">`s`パラメーターには、フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="44f18-650">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="44f18-651">[ws][サインイン] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="44f18-651">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="44f18-652">角かっこ ([と]) は任意の項目です。</span><span class="sxs-lookup"><span data-stu-id="44f18-652">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="44f18-653">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="44f18-653">The following table describes each element.</span></span>  
  
|<span data-ttu-id="44f18-654">要素</span><span class="sxs-lookup"><span data-stu-id="44f18-654">Element</span></span>|<span data-ttu-id="44f18-655">説明</span><span class="sxs-lookup"><span data-stu-id="44f18-655">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="44f18-656">*ws*</span><span class="sxs-lookup"><span data-stu-id="44f18-656">*ws*</span></span>|<span data-ttu-id="44f18-657">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="44f18-657">Optional white space.</span></span>|  
|<span data-ttu-id="44f18-658">*sign*</span><span class="sxs-lookup"><span data-stu-id="44f18-658">*sign*</span></span>|<span data-ttu-id="44f18-659">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="44f18-659">An optional sign.</span></span>|  
|<span data-ttu-id="44f18-660">*数字*</span><span class="sxs-lookup"><span data-stu-id="44f18-660">*digits*</span></span>|<span data-ttu-id="44f18-661">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="44f18-661">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="44f18-662">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="44f18-662">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="44f18-663">10 進の数字以外には、先頭と末尾の空白および先頭の符号のみを使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-663">In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="44f18-664">使用できるカルチャに固有の書式情報とスタイル要素を明示的に定義する`s`を使用して、<xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-664">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="44f18-665">`s`で書式設定情報を使用してパラメーターを解析する<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のシステム カルチャ用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="44f18-665">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="44f18-666">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="44f18-666">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="44f18-667">このオーバー ロード、<xref:System.Int32.TryParse%2A>メソッドですべての桁を解釈し、`s`として 10 進数字のパラメーター。</span><span class="sxs-lookup"><span data-stu-id="44f18-667">This overload of the <xref:System.Int32.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="44f18-668">16 進数の文字列表現を解析する、<xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="44f18-668">To parse the string representation of a hexadecimal number, call the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f18-669">次の例では、<xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29?displayProperty=nameWithType>数別の文字列値を持つメソッド。</span><span class="sxs-lookup"><span data-stu-id="44f18-669">The following example calls the <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 [!code-cpp[System.Int32.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.TryParse/cpp/int32.tryparse1.cpp#1)]
 [!code-csharp[System.Int32.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.Int32.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.TryParse/vb/TryParse1.vb#1)]  
  
 <span data-ttu-id="44f18-670">文字列の一部を<xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29>メソッドは、この例では変換できませんは。</span><span class="sxs-lookup"><span data-stu-id="44f18-670">Some of the strings that the <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29> method is unable to convert in this example are:</span></span>  
  
-   <span data-ttu-id="44f18-671">"9432.0".</span><span class="sxs-lookup"><span data-stu-id="44f18-671">"9432.0".</span></span> <span data-ttu-id="44f18-672">小数点の記号を含めることはできませんので、変換に失敗します。整数の桁のみ含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="44f18-672">The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="44f18-673">"16,667".</span><span class="sxs-lookup"><span data-stu-id="44f18-673">"16,667".</span></span> <span data-ttu-id="44f18-674">文字列は、グループの区切り記号を含めることはできませんので、変換に失敗します。整数の桁のみ含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="44f18-674">The conversion fails because the string cannot contain group separators; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="44f18-675">"(100)".</span><span class="sxs-lookup"><span data-stu-id="44f18-675">"(100)".</span></span> <span data-ttu-id="44f18-676">文字列は、現在のカルチャによって定義されている以外の負の符号を含めることはできませんので、変換に失敗<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="44f18-676">The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture's <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> properties.</span></span>  
  
-   <span data-ttu-id="44f18-677">"01FA"。</span><span class="sxs-lookup"><span data-stu-id="44f18-677">"01FA".</span></span> <span data-ttu-id="44f18-678">文字列が 16 進数; を含めることはできませんので、変換に失敗します。10 進数字だけ含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="44f18-678">The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="M:System.Int32.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="44f18-679">.NET での数値文字列の解析</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-679">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d">
          <span data-ttu-id="44f18-680">サンプル: .NET Framework 4 の書式設定ユーティリティ</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-680">Sample: .NET Framework 4 Formatting Utility</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.int.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.int.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="44f18-681">変換する数値を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-681">A string containing a number to convert.</span>
          </span>
          <span data-ttu-id="44f18-682">文字列は、<paramref name="style" /> で指定されたスタイルを使用して解釈されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-682">The string is interpreted using the style specified by <paramref name="style" />.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="44f18-683">
            <paramref name="s" /> で存在する可能性を持つスタイル要素を示す、列挙値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-683">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span>
          </span>
          <span data-ttu-id="44f18-684">通常指定する値は <see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-684">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="44f18-685">
            <paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-685">An object that supplies culture-specific formatting information about <paramref name="s" />.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="44f18-686">変換が成功した場合、このメソッドが返されるときに、<paramref name="s" /> に格納された数値と等価の 32 ビット符号付き整数値を格納します。変換に失敗した場合は 0 を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-686">When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span>
          </span>
          <span data-ttu-id="44f18-687">
            <paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、<paramref name="style" /> に準拠した形式ではない、または <see cref="F:System.Int32.MinValue" /> より小さいか <see cref="F:System.Int32.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-687">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="44f18-688">このパラメーターは初期化されていない状態で渡されています。<paramref name="result" /> で最初に指定された任意の値が上書きされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-688">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44f18-689">指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価の 32 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-689">Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span>
          </span>
          <span data-ttu-id="44f18-690">戻り値は、変換が成功したかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-690">A return value indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44f18-691">
            <see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-691">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f18-692"><xref:System.Int32.TryParse%2A>などのメソッドは、<xref:System.Int32.Parse%2A>メソッドを除く、<xref:System.Int32.TryParse%2A>メソッドは、変換が失敗した場合に例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="44f18-692">The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="44f18-693">例外処理を使用してテストする必要がある、<xref:System.FormatException>イベントで`s`有効でないし、正常に解析されたことはできません。</span><span class="sxs-lookup"><span data-stu-id="44f18-693">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="44f18-694">`style` (空白や正または負符号) で使用できるスタイル要素を定義するパラメーター、`s`解析操作が成功するためのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="44f18-694">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="44f18-695">ビット フラグの組み合わせがあります、<xref:System.Globalization.NumberStyles>列挙体。</span><span class="sxs-lookup"><span data-stu-id="44f18-695">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="44f18-696">値に応じて`style`、`s`パラメーターは、次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="44f18-696">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="44f18-697">[ws][$][記号][数字] [.fractional_digits] [e [記号] 桁] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="44f18-697">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="44f18-698">または、`style`パラメーターが含まれる<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="44f18-698">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="44f18-699">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="44f18-699">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="44f18-700">角かっこ ([と]) は任意の項目です。</span><span class="sxs-lookup"><span data-stu-id="44f18-700">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="44f18-701">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="44f18-701">The following table describes each element.</span></span>  
  
|<span data-ttu-id="44f18-702">要素</span><span class="sxs-lookup"><span data-stu-id="44f18-702">Element</span></span>|<span data-ttu-id="44f18-703">説明</span><span class="sxs-lookup"><span data-stu-id="44f18-703">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="44f18-704">*ws*</span><span class="sxs-lookup"><span data-stu-id="44f18-704">*ws*</span></span>|<span data-ttu-id="44f18-705">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="44f18-705">Optional white space.</span></span> <span data-ttu-id="44f18-706">先頭に空白文字を表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>フラグ、または末尾の`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-706">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="44f18-707">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="44f18-707">A culture-specific currency symbol.</span></span> <span data-ttu-id="44f18-708">によって、文字列内の位置が定義されている、<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>のプロパティ、<xref:System.Globalization.NumberFormatInfo>によって返されるオブジェクト、<xref:System.IFormatProvider.GetFormat%2A>のメソッド、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="44f18-708">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="44f18-709">通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-709">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="44f18-710">*sign*</span><span class="sxs-lookup"><span data-stu-id="44f18-710">*sign*</span></span>|<span data-ttu-id="44f18-711">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="44f18-711">An optional sign.</span></span> <span data-ttu-id="44f18-712">記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>または<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-712">A sign symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> or <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flags.</span></span>|  
|<span data-ttu-id="44f18-713">*数字*</span><span class="sxs-lookup"><span data-stu-id="44f18-713">*digits*</span></span>|<span data-ttu-id="44f18-714">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="44f18-714">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="44f18-715">*、*</span><span class="sxs-lookup"><span data-stu-id="44f18-715">*,*</span></span>|<span data-ttu-id="44f18-716">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="44f18-716">A culture-specific thousands separator.</span></span> <span data-ttu-id="44f18-717">数千で指定されたカルチャの区切り記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-717">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="44f18-718">*.*</span><span class="sxs-lookup"><span data-stu-id="44f18-718">*.*</span></span>|<span data-ttu-id="44f18-719">カルチャに固有の小数点記号。</span><span class="sxs-lookup"><span data-stu-id="44f18-719">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="44f18-720">指定されたカルチャの小数点記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-720">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="44f18-721">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="44f18-721">*fractional_digits*</span></span>|<span data-ttu-id="44f18-722">1 つ以上の数字の 0。</span><span class="sxs-lookup"><span data-stu-id="44f18-722">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="44f18-723">小数部の桁数を表示できる`s`場合にのみ`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-723">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="44f18-724">*e*</span><span class="sxs-lookup"><span data-stu-id="44f18-724">*e*</span></span>|<span data-ttu-id="44f18-725">"E"または"E"文字は、値は指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="44f18-725">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="44f18-726">`s`パラメーターは指数表記の数値を表すことができる場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="44f18-726">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="44f18-727">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="44f18-727">*hexdigits*</span></span>|<span data-ttu-id="44f18-728">0 ~ f、または f の 0 から 16 進数のシーケンス</span><span class="sxs-lookup"><span data-stu-id="44f18-728">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="44f18-729">終端の NUL (u+0000) 文字`s`の値に関係なく、解析操作では無視されますが、`style`引数。</span><span class="sxs-lookup"><span data-stu-id="44f18-729">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="44f18-730">10 進数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>フラグ) を常に正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="44f18-730">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="44f18-731">残りのほとんど<xref:System.Globalization.NumberStyles>メンバーがありますが、この入力文字列内に存在する必要はありません要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="44f18-731">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="44f18-732">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在する要素に影響を与える`s`します。</span><span class="sxs-lookup"><span data-stu-id="44f18-732">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="44f18-733">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="44f18-733">Non-composite NumberStyles values</span></span>|<span data-ttu-id="44f18-734">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="44f18-734">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="44f18-735">10 進数字のみです。</span><span class="sxs-lookup"><span data-stu-id="44f18-735">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="44f18-736">10 進数のポイント (*.*) と*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="44f18-736">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="44f18-737">ただし、 *fractional_digits*のみの 1 つ以上の数字が 0 のメソッドを返します。 で構成されている必要があります`false`します。</span><span class="sxs-lookup"><span data-stu-id="44f18-737">However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="44f18-738">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-738">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="44f18-739">場合`s`指数表記の数値を表すことの範囲内の整数を表す必要があります、 <xref:System.Int32> 、0 以外の小数部がないデータ型。</span><span class="sxs-lookup"><span data-stu-id="44f18-739">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="44f18-740">*Ws*の先頭にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="44f18-740">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="44f18-741">*Ws*の末尾にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="44f18-741">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="44f18-742">符号は、前に配置できます*桁*します。</span><span class="sxs-lookup"><span data-stu-id="44f18-742">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="44f18-743">符号が後に表示できる*桁*します。</span><span class="sxs-lookup"><span data-stu-id="44f18-743">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="44f18-744">*サインオン*形式の数値を囲むかっこ内の要素。</span><span class="sxs-lookup"><span data-stu-id="44f18-744">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="44f18-745">桁区切り記号 (*、*) 要素。</span><span class="sxs-lookup"><span data-stu-id="44f18-745">The thousands separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="44f18-746">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="44f18-746">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency?displayProperty=nameWithType>|<span data-ttu-id="44f18-747">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="44f18-747">All elements.</span></span> <span data-ttu-id="44f18-748">`s`パラメーターは、16 進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="44f18-748">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>|<span data-ttu-id="44f18-749">*Ws*先頭または末尾に要素`s`、*サインオン*の先頭に`s`、および小数点 (*.*) シンボル。</span><span class="sxs-lookup"><span data-stu-id="44f18-749">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="44f18-750">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="44f18-750">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>|<span data-ttu-id="44f18-751">*Ws*、*サインオン*、何千もの区切り記号 (*、*)、および小数点 10 進数 (*.*) 要素。</span><span class="sxs-lookup"><span data-stu-id="44f18-751">The *ws*, *sign*, thousands separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any?displayProperty=nameWithType>|<span data-ttu-id="44f18-752">すべてのスタイルを除く`s`16 進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="44f18-752">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="44f18-753">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、`s`プレフィックスのない 16 進数の値を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="44f18-753">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="44f18-754">たとえば、"C9AF3"が正常に解析しますが、"0xC9AF3"はありません。</span><span class="sxs-lookup"><span data-stu-id="44f18-754">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="44f18-755">他のフラグのみに存在することができる`style`は<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="44f18-755">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="44f18-756">(、<xref:System.Globalization.NumberStyles>列挙には複合スタイルは、 <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、空白文字の両方のフラグが含まれます)。</span><span class="sxs-lookup"><span data-stu-id="44f18-756">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="44f18-757">`provider`パラメーターは、<xref:System.IFormatProvider>実装など、<xref:System.Globalization.CultureInfo>オブジェクトまたは<xref:System.Globalization.NumberFormatInfo>オブジェクト、<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します。 を<xref:System.Globalization.NumberFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="44f18-757">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="44f18-758"><xref:System.Globalization.NumberFormatInfo>オブジェクトの書式設定に関するカルチャ固有の情報を提供`s`します。</span><span class="sxs-lookup"><span data-stu-id="44f18-758">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="44f18-759">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="44f18-759">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f18-760">次の例では、<xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType>別の文字列の数がメソッドおよび<xref:System.Globalization.NumberStyles>値。</span><span class="sxs-lookup"><span data-stu-id="44f18-760">The following example calls the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> method with a number of different string and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-cpp[System.Int32.TryParse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.TryParse/cpp/int32.tryparse2.cpp#2)]
 [!code-csharp[System.Int32.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.TryParse/cs/TryParse2.cs#2)]
 [!code-vb[System.Int32.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.TryParse/vb/TryParse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44f18-761">
            <paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-761">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="44f18-762">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-762">-or-</span>
          </span>
          <span data-ttu-id="44f18-763">
            <paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-763">
              <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int32.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="44f18-764">.NET での数値文字列の解析</span>
          <span class="sxs-lookup">
            <span data-stu-id="44f18-764">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>