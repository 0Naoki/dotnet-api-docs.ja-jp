<Type Name="Int32" FullName="System.Int32">
  <TypeSignature Language="C#" Value="public struct Int32 : IComparable, IComparable&lt;int&gt;, IConvertible, IEquatable&lt;int&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit int32 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int32&gt;, class System.IConvertible, class System.IEquatable`1&lt;int32&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Int32" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int32&#xA;Implements IComparable, IComparable(Of Integer), IConvertible, IEquatable(Of Integer), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Int32 : IComparable, IComparable&lt;int&gt;, IConvertible, IEquatable&lt;int&gt;, IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Int32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Int32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d01d9-101">32 ビット符号付き整数を表します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-101">Represents a 32-bit signed integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-102"><xref:System.Int32> 符号付き整数範囲は-2,147, 483,648 から値を表す不変の値の型は、(で表される、<xref:System.Int32.MinValue?displayProperty=nameWithType>定数) +2,147, 483,647 (で表される、<xref:System.Int32.MaxValue?displayProperty=nameWithType>定数。</span><span class="sxs-lookup"><span data-stu-id="d01d9-102"><xref:System.Int32> is an immutable value type that represents signed integers with values that range from negative 2,147,483,648 (which is represented by the <xref:System.Int32.MinValue?displayProperty=nameWithType> constant) through positive 2,147,483,647 (which is represented by the <xref:System.Int32.MaxValue?displayProperty=nameWithType> constant.</span></span> <span data-ttu-id="d01d9-103">.NET Framework には、32 ビット符号なし整数値の型も含まれています<xref:System.UInt32>0 ~ 4,294,967,295 範囲内の値を表します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-103">The .NET Framework also includes an unsigned 32-bit integer value type, <xref:System.UInt32>, which represents values that range from 0 to 4,294,967,295.</span></span>  
  
## <a name="instantiating-an-int32-value"></a><span data-ttu-id="d01d9-104">Int32 値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-104">Instantiating an Int32 Value</span></span>  
 <span data-ttu-id="d01d9-105">インスタンス化することができます、<xref:System.Int32>方法はいくつかの値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-105">You can instantiate an <xref:System.Int32> value in several ways:</span></span>  
  
-   <span data-ttu-id="d01d9-106">宣言することができます、<xref:System.Int32>変数の範囲内にあるリテラルの整数値を割り当てると、<xref:System.Int32>データ型。</span><span class="sxs-lookup"><span data-stu-id="d01d9-106">You can declare an <xref:System.Int32> variable and assign it a literal integer value that is within the range of the <xref:System.Int32> data type.</span></span> <span data-ttu-id="d01d9-107">次の例では、2 つ宣言<xref:System.Int32>変数し、それらにこの方法で値を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-107">The following example declares two <xref:System.Int32> variables and assigns them values in this way.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#1)]
     [!code-vb[System.Int32.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#1)]  
  
-   <span data-ttu-id="d01d9-108">範囲がサブセットである整数型の値を割り当てることができますの<xref:System.Int32>型です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-108">You can assign the value of an integer type whose range is a subset of the <xref:System.Int32> type.</span></span> <span data-ttu-id="d01d9-109">これは、拡大変換でキャスト演算子 (C#) または Visual Basic での変換メソッドを必要としません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-109">This is a widening conversion that does not require a cast operator in C# or a conversion method in Visual Basic.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#4)]
     [!code-vb[System.Int32.Instantiation#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#4)]  
  
-   <span data-ttu-id="d01d9-110">範囲を超えています、数値型の値を割り当てることができますの<xref:System.Int32>型です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-110">You can assign the value of a numeric type whose range exceeds that of the <xref:System.Int32> type.</span></span> <span data-ttu-id="d01d9-111">これは、縮小変換は c# のキャスト演算子が、Visual Basic での変換メソッド場合`Option Strict`にします。</span><span class="sxs-lookup"><span data-stu-id="d01d9-111">This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if `Option Strict` is on.</span></span> <span data-ttu-id="d01d9-112">数値の値がある場合、 <xref:System.Single>、 <xref:System.Double>、または<xref:System.Decimal>を小数部が、その小数部の処理を含む値は、変換を実行して、コンパイラによって異なります。</span><span class="sxs-lookup"><span data-stu-id="d01d9-112">If the numeric value is a <xref:System.Single>, <xref:System.Double>, or <xref:System.Decimal> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion.</span></span> <span data-ttu-id="d01d9-113">次の例をいくつかの数値を割り当てるの縮小変換を実行する<xref:System.Int32>変数。</span><span class="sxs-lookup"><span data-stu-id="d01d9-113">The following example performs narrowing conversions to assign several numeric values to <xref:System.Int32> variables.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#2)]
     [!code-vb[System.Int32.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#2)]  
  
-   <span data-ttu-id="d01d9-114">メソッドを呼び出すことができます、<xref:System.Convert>すべて変換クラスにする型がサポートされている、<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-114">You can call a method of the <xref:System.Convert> class to convert any supported type to an <xref:System.Int32> value.</span></span> <span data-ttu-id="d01d9-115">これは、考えられるため<xref:System.Int32>をサポートしている、<xref:System.IConvertible>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-115">This is possible because <xref:System.Int32> supports the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d01d9-116">次の例は、配列の変換を示しています。<xref:System.Decimal>値<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-116">The following example illustrates the conversion of an array of <xref:System.Decimal> values to <xref:System.Int32> values.</span></span>  
  
     [!code-csharp[System.Convert.ToInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#4)]
     [!code-vb[System.Convert.ToInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#4)]  
  
-   <span data-ttu-id="d01d9-117">呼び出すことができます、<xref:System.Int32.Parse%2A>または<xref:System.Int32.TryParse%2A>の文字列形式に変換するメソッド、<xref:System.Int32>値を<xref:System.Int32>です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-117">You can call the <xref:System.Int32.Parse%2A> or <xref:System.Int32.TryParse%2A> method to convert the string representation of an <xref:System.Int32> value to an <xref:System.Int32>.</span></span> <span data-ttu-id="d01d9-118">文字列は、10 進または 16 進数の数字を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-118">The string can contain either decimal or hexadecimal digits.</span></span> <span data-ttu-id="d01d9-119">次の例では、10 進数と 16 進数文字列の両方を使用して、解析操作を示しています。</span><span class="sxs-lookup"><span data-stu-id="d01d9-119">The following example illustrates the parse operation by using both a decimal and a hexadecimal string.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#3)]
     [!code-vb[System.Int32.Instantiation#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#3)]  
  
## <a name="performing-operations-on-int32-values"></a><span data-ttu-id="d01d9-120">Int32 の値に対して操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-120">Performing Operations on Int32 Values</span></span>  
 <span data-ttu-id="d01d9-121"><xref:System.Int32>型は、加算、減算、除算、乗算、否定、単項否定演算子などの標準的な数学的演算をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="d01d9-121">The <xref:System.Int32> type supports standard mathematical operations such as addition, subtraction, division, multiplication, negation, and unary negation.</span></span> <span data-ttu-id="d01d9-122">などの他の整数型、<xref:System.Int32>型もサポートしている、ビットごと`AND`、 `OR`、 `XOR`、shift キー、および右シフト演算子のままです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-122">Like the other integral types, the <xref:System.Int32> type also supports the bitwise `AND`, `OR`, `XOR`, left shift, and right shift operators.</span></span>  
  
 <span data-ttu-id="d01d9-123">標準の数値演算子を使用するには 2 つを比較する<xref:System.Int32>値、またはを呼び出すことができます、<xref:System.Int32.CompareTo%2A>または<xref:System.Int32.Equals%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-123">You can use the standard numeric operators to compare two <xref:System.Int32> values, or you can call the <xref:System.Int32.CompareTo%2A> or <xref:System.Int32.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="d01d9-124">メンバーを呼び出すこともできます、<xref:System.Math>をさまざまな数値の絶対値の取得、商と整数除算の剰余を計算する、2 つの整数の最大値または最小値を決定する、数値の符号を取得および数値の丸め処理を行うなど、数値の操作を実行するクラス。</span><span class="sxs-lookup"><span data-stu-id="d01d9-124">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.</span></span>  
  
## <a name="representing-an-int32-as-a-string"></a><span data-ttu-id="d01d9-125">Int32 型を文字列として表す</span><span class="sxs-lookup"><span data-stu-id="d01d9-125">Representing an Int32 as a String</span></span>  
 <span data-ttu-id="d01d9-126"><xref:System.Int32>標準およびカスタム数値書式指定文字列の型が完全にサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-126">The <xref:System.Int32> type provides full support for standard and custom numeric format strings.</span></span> <span data-ttu-id="d01d9-127">(詳細については、次を参照してください[型の書式設定](~/docs/standard/base-types/formatting-types.md)、[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)、および[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)。)。</span><span class="sxs-lookup"><span data-stu-id="d01d9-127">(For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md), [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).)</span></span>  
  
 <span data-ttu-id="d01d9-128">書式設定、<xref:System.Int32>値先行ゼロなしで整数を文字列として呼び出すことができます、パラメーターなし<xref:System.Int32.ToString>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-128">To format an <xref:System.Int32> value as an integral string with no leading zeros, you can call the parameterless <xref:System.Int32.ToString> method.</span></span> <span data-ttu-id="d01d9-129">"D"書式指定子を使用すると、指定された数の文字列形式には先行ゼロを含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-129">By using the "D" format specifier, you can also include a specified number of leading zeros in the string representation.</span></span> <span data-ttu-id="d01d9-130">"N"書式指定子を使用すると、桁区切り記号を含めるし、数値の文字列形式に表示される 10 進数字の数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-130">By using the "N" format specifier, you can include group separators and specify the number of decimal digits to appear in the string representation of the number.</span></span> <span data-ttu-id="d01d9-131">"X"書式指定子を使用して表すことができます、 <xref:System.Int32> 16 進数文字列値です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-131">By using the "X" format specifier, you can represent an <xref:System.Int32> value as a hexadecimal string.</span></span> <span data-ttu-id="d01d9-132">次の例の配列内の要素を書式設定<xref:System.Int32>これら 4 つの方法の値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-132">The following example formats the elements in an array of <xref:System.Int32> values in these four ways.</span></span>  
  
 [!code-csharp[System.Int32.Formatting#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs#1)]
 [!code-vb[System.Int32.Formatting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb#1)]  
  
 <span data-ttu-id="d01d9-133">フォーマットすることも、<xref:System.Int32>バイナリ、8 進数、呼び出すことによって、10 進数または 16 進数の文字列値、<xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29>メソッドおよびメソッドの 2 番目のパラメーターとして情報を指定します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-133">You can also format an <xref:System.Int32> value as a binary, octal, decimal, or hexadecimal string by calling the <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> method and supplying the base as the method's second parameter.</span></span> <span data-ttu-id="d01d9-134">次の例では、このメソッドをバイナリ、8 進数を表示して整数値の配列の 16 進数表記を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-134">The following example calls this method to display the binary, octal, and hexadecimal representations of an array of integer values.</span></span>  
  
 [!code-csharp[System.Int32.Formatting#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs#2)]
 [!code-vb[System.Int32.Formatting#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb#2)]  
  
## <a name="working-with-non-decimal-32-bit-integer-values"></a><span data-ttu-id="d01d9-135">10 進数以外の 32 ビット整数値の操作</span><span class="sxs-lookup"><span data-stu-id="d01d9-135">Working with Non-Decimal 32-Bit Integer Values</span></span>  
 <span data-ttu-id="d01d9-136">10 進数値として個々 の整数を使用するだけでなく可能性がある整数値でビットごとの演算を実行するか、または整数値のバイナリまたは 16 進表現と一緒に機能します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-136">In addition to working with individual integers as decimal values, you may want to perform bitwise operations with integer values, or work with the binary or hexadecimal representations of integer values.</span></span> <span data-ttu-id="d01d9-137"><xref:System.Int32> 値は、30 秒ビットを符号ビットとして使用される、31 ビット単位で表されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-137"><xref:System.Int32> values are represented in 31 bits, with the thirty-second bit used as a sign bit.</span></span> <span data-ttu-id="d01d9-138">正の値は、符号および絶対値による表現を使用して表現されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-138">Positive values are represented by using sign-and-magnitude representation.</span></span> <span data-ttu-id="d01d9-139">負の値は、2 つのビットごとの補数表記でです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-139">Negative values are in two's complement representation.</span></span> <span data-ttu-id="d01d9-140">これでビットごとの演算を実行するときに注意する重要<xref:System.Int32>値または個々 のビットを操作する際にします。</span><span class="sxs-lookup"><span data-stu-id="d01d9-140">This is important to keep in mind when you perform bitwise operations on <xref:System.Int32> values or when you work with individual bits.</span></span> <span data-ttu-id="d01d9-141">数値型、ブール値、または 2 つの非 10 進値の比較演算を実行するために両方の値は同じ形式を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d01d9-141">In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="d01d9-142">この種類のすべてのメンバーでは、スレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-142">All members of this type are thread safe.</span></span> <span data-ttu-id="d01d9-143">インスタンスの状態を変更する表示されるメンバーは、新しい値で初期化された新しいインスタンスを実際に返します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-143">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="d01d9-144">として、他の種類と読み取りと書き込みをこの型のインスタンスを含む共有変数を保護する必要があるスレッド セーフを確保するロックによってです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-144">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.UInt32" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d01d9-145">指定したオブジェクトまたは <see cref="T:System.Int32" /> とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-145">Compares this instance to a specified object or <see cref="T:System.Int32" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.CompareTo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(int value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d01d9-146">比較対象の整数。</span><span class="sxs-lookup"><span data-stu-id="d01d9-146">An integer to compare.</span></span></param>
        <summary><span data-ttu-id="d01d9-147">指定した 32 ビット符号付き整数とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-147">Compares this instance to a specified 32-bit signed integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="d01d9-148">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-148">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="d01d9-149"><list type="table"><listheader><term> 戻り値</span><span class="sxs-lookup"><span data-stu-id="d01d9-149"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="d01d9-150"></term><description>説明</span><span class="sxs-lookup"><span data-stu-id="d01d9-150"></term><description> Description</span></span>  
  
 <span data-ttu-id="d01d9-151"></description></listheader><item><term> 0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="d01d9-151"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="d01d9-152"></term><description> このインスタンスは、<paramref name="value" /> よりも小さいです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-152"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="d01d9-153"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="d01d9-153"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="d01d9-154"></term><description> このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-154"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="d01d9-155"></description></item><item><term> 0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="d01d9-155"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="d01d9-156"></term><description> このインスタンスは <paramref name="value" /> よりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-156"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-157">このメソッドを実装する、<xref:System.IComparable%601?displayProperty=nameWithType>インターフェイスし、実行よりもわずかに向上、<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>メソッドに変換があるないため、`value`オブジェクトへのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-157">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="d01d9-158">プログラミング言語に応じてコードに考えられる場合があります、<xref:System.Int32.CompareTo%2A>メソッドのパラメーターの型のビット数が少ないがここではインスタンスの型よりもします。</span><span class="sxs-lookup"><span data-stu-id="d01d9-158">Depending on your programming language, it might be possible to code a <xref:System.Int32.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="d01d9-159">これには一部のプログラミング言語は、ビット数のインスタンスと型としてパラメーターを表す暗黙の拡大変換を実行するため。</span><span class="sxs-lookup"><span data-stu-id="d01d9-159">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="d01d9-160">たとえば、インスタンスの型が<xref:System.Int32>パラメーターの型と<xref:System.Byte>です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-160">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="d01d9-161">Microsoft c# コンパイラは、パラメーターの値を表す命令を生成、<xref:System.Int32>が生成されます、<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>の値を比較するメソッド、<xref:System.Int32>インスタンスおよび<xref:System.Int32>パラメーター形式です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-161">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32>, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="d01d9-162">コンパイラが数値型に暗黙の拡大変換を実行するかどうかを決定する、プログラミング言語のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d01d9-162">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d01d9-163">次の例で、<xref:System.Int32.CompareTo%28System.Int32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-163">The following example demonstrates the <xref:System.Int32.CompareTo%28System.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d01d9-164">に加えて、4 種類の比較のメソッドによって返される値を表示するには、変換、戻り値、カスタムのメンバーに`Comparison`列挙体、その値も表示されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-164">In addition to displaying the value returned by the method for four different comparisons, it converts the return value to a member of the custom `Comparison` enumeration, whose value it also displays.</span></span>  
  
 [!code-csharp[System.Int32.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.CompareTo/cs/CompareTo1.cs#1)]
 [!code-vb[System.Int32.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.CompareTo/vb/CompareTo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Int32.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d01d9-165">比較対象のオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d01d9-165">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d01d9-166">指定したオブジェクトとこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-166">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="d01d9-167">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-167">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="d01d9-168"><list type="table"><listheader><term> 戻り値</span><span class="sxs-lookup"><span data-stu-id="d01d9-168"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="d01d9-169"></term><description>説明</span><span class="sxs-lookup"><span data-stu-id="d01d9-169"></term><description> Description</span></span>  
  
 <span data-ttu-id="d01d9-170"></description></listheader><item><term> 0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="d01d9-170"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="d01d9-171"></term><description> このインスタンスは、<paramref name="value" /> よりも小さいです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-171"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="d01d9-172"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="d01d9-172"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="d01d9-173"></term><description> このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-173"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="d01d9-174"></description></item><item><term> 0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="d01d9-174"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="d01d9-175"></term><description> このインスタンスは <paramref name="value" /> よりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-175"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="d01d9-176">- または -</span><span class="sxs-lookup"><span data-stu-id="d01d9-176">-or-</span></span>  
  
 <span data-ttu-id="d01d9-177"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-177"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-178">任意のインスタンス<xref:System.Int32>、その値に関係なくが大きいと見なされますより`null`です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-178">Any instance of <xref:System.Int32>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="d01d9-179">`value` 必要があります`null`またはのインスタンス<xref:System.Int32>です。 それ以外の場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-179">`value` must be `null` or an instance of <xref:System.Int32>; otherwise, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d01d9-180"><paramref name="value" /> が <see cref="T:System.Int32" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-180"><paramref name="value" /> is not an <see cref="T:System.Int32" />.</span></span></exception>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Int32.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d01d9-181">対象のインスタンスが、指定したオブジェクトまたは <see cref="T:System.Int32" /> に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-181">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Int32" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (int obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int32 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Equals(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(int obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d01d9-182">このインスタンスと比較する <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-182">An <see cref="T:System.Int32" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="d01d9-183">このインスタンスが指定した <see cref="T:System.Int32" /> 値に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-183">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int32" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="d01d9-184"><paramref name="obj" /> の値がこのインスタンスと同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d01d9-184"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-185">このメソッドを実装する、<xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイス、および実行よりもわずかに向上<xref:System.Int32.Equals%28System.Object%29?displayProperty=nameWithType>変換があるないため、`obj`オブジェクトへのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-185">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Int32.Equals%28System.Object%29?displayProperty=nameWithType> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="d01d9-186">コンパイラのオーバー ロードの解決は、2 つの動作の見かけ上の相違点についてアカウント可能性があります<see cref="M:System.Int32.Equals(System.Int32)" />メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d01d9-186">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int32.Equals(System.Int32)" /> method overloads.</span></span> <span data-ttu-id="d01d9-187">場合の間の暗黙的な変換、<paramref name="obj" />引数および<see cref="T:System.Int32" />が定義されている引数として型指定されていないと、 <see cref="T:System.Object" />、コンパイラが暗黙的な変換と呼び出しを実行、<see cref="M:System.Int32.Equals(System.Int32)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-187">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int32.Equals(System.Int32)" /> method.</span></span> <span data-ttu-id="d01d9-188">それ以外の場合を呼び出すことが、<see cref="M:System.Int32.Equals(System.Object)" />メソッドで、常に返します<see langword="false" />場合その<paramref name="obj" />引数ではありません、<see cref="T:System.Int32" />値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-188">Otherwise, they call the <see cref="M:System.Int32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int32" /> value.</span></span> <span data-ttu-id="d01d9-189">次の例は、次の 2 つのメソッド オーバー ロード間の動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="d01d9-189">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="d01d9-190">場合、 <see cref="T:System.Byte" />、 <see cref="T:System.Int16" />、 <see cref="T:System.SByte" />、および<see cref="T:System.UInt16" />値は、最初の比較を返します<see langword="true" />拡大変換と呼び出し、コンパイラが自動的に実行するため、<see cref="M:System.Int32.Equals(System.Int32)" />メソッドは、2 番目の比較を返します<see langword="false" />コンパイラを呼び出すため、<see cref="M:System.Int32.Equals(System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-190">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.SByte" />, and <see cref="T:System.UInt16" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int32.Equals(System.Int32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int32.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.Int32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs#1)]
 [!code-vb[System.Int32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb#1)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d01d9-191">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-191">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="d01d9-192">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-192">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="d01d9-193"><paramref name="obj" /> が <see cref="T:System.Int32" /> のインスタンスで、このインスタンスの値に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d01d9-193"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Int32" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d01d9-194">次の例では、使用する`Equals`のコンテキストで`Int32`、2 つの比較`int`値を返す`true`、同じ番号を表している場合または`false`が存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="d01d9-194">The following example illustrates the use of `Equals` in the context of `Int32`, comparing two `int` values and returning `true` if they represent the same number, or `false` if they do not.</span></span>  
  
 [!code-cpp[Int32_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/Int32_Equals/CPP/int32_equals.cpp#1)]
 [!code-csharp[Int32_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/Int32_Equals/CS/int32_equals.cs#1)]
 [!code-vb[Int32_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Int32_Equals/VB/int32_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="d01d9-195">コンパイラのオーバー ロードの解決は、2 つの動作の見かけ上の相違点についてアカウント可能性があります<see cref="M:System.Int32.Equals(System.Int32)" />メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d01d9-195">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int32.Equals(System.Int32)" /> method overloads.</span></span> <span data-ttu-id="d01d9-196">場合の間の暗黙的な変換、<paramref name="obj" />引数および<see cref="T:System.Int32" />が定義されている引数として型指定されていないと、 <see cref="T:System.Object" />、コンパイラが暗黙的な変換と呼び出しを実行、<see cref="M:System.Int32.Equals(System.Int32)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-196">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int32.Equals(System.Int32)" /> method.</span></span> <span data-ttu-id="d01d9-197">それ以外の場合を呼び出すことが、<see cref="M:System.Int32.Equals(System.Object)" />メソッドで、常に返します<see langword="false" />場合その<paramref name="obj" />引数ではありません、<see cref="T:System.Int32" />値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-197">Otherwise, they call the <see cref="M:System.Int32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int32" /> value.</span></span> <span data-ttu-id="d01d9-198">次の例は、次の 2 つのメソッド オーバー ロード間の動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="d01d9-198">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="d01d9-199">場合、 <see cref="T:System.Byte" />、 <see cref="T:System.Int16" />、 <see cref="T:System.SByte" />、および<see cref="T:System.UInt16" />値は、最初の比較を返します<see langword="true" />拡大変換と呼び出し、コンパイラが自動的に実行するため、<see cref="M:System.Int32.Equals(System.Int32)" />メソッドは、2 番目の比較を返します<see langword="false" />コンパイラを呼び出すため、<see cref="M:System.Int32.Equals(System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-199">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.SByte" />, and <see cref="T:System.UInt16" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int32.Equals(System.Int32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int32.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.Int32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs#1)]
 [!code-vb[System.Int32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb#1)]</para>
        </block>
        <altmember cref="M:System.Int32.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d01d9-200">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-200">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="d01d9-201">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="d01d9-201">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d01d9-202"><see cref="T:System.TypeCode" /> 値型の <see cref="T:System.Int32" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-202">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="d01d9-203">列挙型定数 <see cref="F:System.TypeCode.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="d01d9-203">The enumerated constant, <see cref="F:System.TypeCode.Int32" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const int MaxValue = 2147483647;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxValue = int32(2147483647)" />
      <MemberSignature Language="DocId" Value="F:System.Int32.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Integer  = 2147483647" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxValue = 2147483647;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2147483647</MemberValue>
      <Docs>
        <summary><span data-ttu-id="d01d9-204"><see cref="T:System.Int32" /> の最大有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-204">Represents the largest possible value of an <see cref="T:System.Int32" />.</span></span> <span data-ttu-id="d01d9-205">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-205">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-206">この定数の値は 2,147, 483,647 です。16 進 0x7fffffff です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-206">The value of this constant is 2,147,483,647; that is, hexadecimal 0x7FFFFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d01d9-207">次の例では、<xref:System.Int32.MaxValue>ようにするプロパティ、<xref:System.OverflowException>に変換する際、<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-207">The following example uses the <xref:System.Int32.MaxValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int32> value.</span></span>  
  
 [!code-cpp[System.Int32.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.int32.maxvalue/cpp/maxvalue1.cpp#1)]
 [!code-csharp[System.Int32.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.maxvalue/cs/maxvalue1.cs#1)]
 [!code-vb[System.Int32.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.maxvalue/vb/maxvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int32.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const int MinValue = -2147483648;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinValue = int32(-2147483648)" />
      <MemberSignature Language="DocId" Value="F:System.Int32.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Integer  = -2147483648" />
      <MemberSignature Language="C++ CLI" Value="public: int MinValue = -2147483648;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147483648</MemberValue>
      <Docs>
        <summary><span data-ttu-id="d01d9-208"><see cref="T:System.Int32" /> の最小有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-208">Represents the smallest possible value of <see cref="T:System.Int32" />.</span></span> <span data-ttu-id="d01d9-209">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-209">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-210">この定数の値が-2,147,483,648 です。つまり、16 進 0x80000000 です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-210">The value of this constant is -2,147,483,648; that is, hexadecimal 0x80000000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d01d9-211">次の例では、<xref:System.Int32.MinValue>ようにするプロパティ、<xref:System.OverflowException>に変換する際、<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-211">The following example uses the <xref:System.Int32.MinValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int32> value.</span></span>  
  
 [!code-cpp[System.Int32.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.int32.maxvalue/cpp/maxvalue1.cpp#1)]
 [!code-csharp[System.Int32.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.maxvalue/cs/maxvalue1.cs#1)]
 [!code-vb[System.Int32.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.maxvalue/vb/maxvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int32.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d01d9-212">数値の文字列形式を、それと等価な 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-212">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.Int32.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="d01d9-213">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="d01d9-213">A string containing a number to convert.</span></span></param>
        <summary><span data-ttu-id="d01d9-214">数値の文字列形式を、それと等価な 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-214">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="d01d9-215"><paramref name="s" /> に格納されている数値と等しい 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="d01d9-215">A 32-bit signed integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-216">`s`パラメーターには、フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="d01d9-216">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="d01d9-217">[ws][サインイン] 桁 [ws]</span><span class="sxs-lookup"><span data-stu-id="d01d9-217">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="d01d9-218">角かっこ ([および]) は省略可能の項目です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-218">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="d01d9-219">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-219">The following table describes each element.</span></span>  
  
|<span data-ttu-id="d01d9-220">要素</span><span class="sxs-lookup"><span data-stu-id="d01d9-220">Element</span></span>|<span data-ttu-id="d01d9-221">説明</span><span class="sxs-lookup"><span data-stu-id="d01d9-221">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="d01d9-222">ws</span><span class="sxs-lookup"><span data-stu-id="d01d9-222">ws</span></span>|<span data-ttu-id="d01d9-223">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-223">Optional white space.</span></span>|  
|<span data-ttu-id="d01d9-224">sign</span><span class="sxs-lookup"><span data-stu-id="d01d9-224">sign</span></span>|<span data-ttu-id="d01d9-225">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="d01d9-225">An optional sign.</span></span>|  
|<span data-ttu-id="d01d9-226">数字</span><span class="sxs-lookup"><span data-stu-id="d01d9-226">digits</span></span>|<span data-ttu-id="d01d9-227">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="d01d9-227">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="d01d9-228">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="d01d9-228">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="d01d9-229">10 進数字以外には、先頭と末尾のスペースが先頭の符号と共にのみを使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-229">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="d01d9-230">使用できるスタイル要素を明示的に定義する`s`、いずれかを使用して、<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>または<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-230">To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="d01d9-231">`s`で書式設定情報を使用してパラメーターを解析、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のシステムのカルチャ用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-231">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="d01d9-232">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d01d9-232">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="d01d9-233">いくつか他のカルチャの書式情報を使用して文字列を解析するを使用して、<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-233">To parse a string using the formatting information of some other culture, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d01d9-234">次の例では、文字列値を使用して 32 ビット符号付き整数値に変換する方法、<xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-234">The following example demonstrates how to convert a string value into a 32-bit signed integer value using the <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d01d9-235">結果の整数値は、コンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-235">The resulting integer value is then displayed to the console.</span></span>  
  
 [!code-cpp[System.Int32.Parse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse1.cpp#1)]
 [!code-csharp[System.Int32.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse1.cs#1)]
 [!code-vb[System.Int32.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d01d9-236"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-236"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="d01d9-237"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-237"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="d01d9-238"><paramref name="s" /> が <see cref="F:System.Int32.MinValue" /> 未満の数値か、<see cref="F:System.Int32.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="d01d9-238"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="d01d9-239">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="d01d9-239">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="d01d9-240"><c>s</c> で使用できるスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-240">A bitwise combination of the enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="d01d9-241">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-241">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="d01d9-242">指定したスタイルの数値の文字列形式を、それと等しい 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-242">Converts the string representation of a number in a specified style to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="d01d9-243"><paramref name="s" /> で指定した数値と等しい 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="d01d9-243">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-244">`style`パラメーター スタイル要素定義 (空白、正または負の符号シンボル数千など区切り記号) で許容される、`s`解析操作が成功するためのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-244">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, or the thousands separator symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="d01d9-245">ビット フラグの組み合わせを可能にする必要があります、<xref:System.Globalization.NumberStyles>列挙します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-245">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="d01d9-246">値に応じて`style`、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="d01d9-246">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="d01d9-247">[ws][$][記号][数字] 桁 [.fractional_digits] [e [サインイン] exponential_digits] [ws]</span><span class="sxs-lookup"><span data-stu-id="d01d9-247">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="d01d9-248">または、`style`が含まれています<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="d01d9-248">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="d01d9-249">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="d01d9-249">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="d01d9-250">角かっこ ([および]) は省略可能の項目です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-250">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="d01d9-251">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-251">The following table describes each element.</span></span>  
  
|<span data-ttu-id="d01d9-252">要素</span><span class="sxs-lookup"><span data-stu-id="d01d9-252">Element</span></span>|<span data-ttu-id="d01d9-253">説明</span><span class="sxs-lookup"><span data-stu-id="d01d9-253">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="d01d9-254">*ws*</span><span class="sxs-lookup"><span data-stu-id="d01d9-254">*ws*</span></span>|<span data-ttu-id="d01d9-255">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-255">Optional white space.</span></span> <span data-ttu-id="d01d9-256">先頭に空白文字は使用できません`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>の最後に表示されることができますフラグ、およびその`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-256">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="d01d9-257">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="d01d9-257">A culture-specific currency symbol.</span></span> <span data-ttu-id="d01d9-258">文字列内での位置がによって定義された、<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>現在のカルチャのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-258">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="d01d9-259">現在のカルチャの通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-259">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d01d9-260">*sign*</span><span class="sxs-lookup"><span data-stu-id="d01d9-260">*sign*</span></span>|<span data-ttu-id="d01d9-261">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="d01d9-261">An optional sign.</span></span> <span data-ttu-id="d01d9-262">先頭に表示できる符号`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>フラグ、およびそのがの末尾に置くことができます`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-262">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="d01d9-263">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-263">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d01d9-264">*digits*</span><span class="sxs-lookup"><span data-stu-id="d01d9-264">*digits*</span></span><br /><br /> <span data-ttu-id="d01d9-265">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="d01d9-265">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="d01d9-266">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="d01d9-266">*exponential_digits*</span></span>|<span data-ttu-id="d01d9-267">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="d01d9-267">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="d01d9-268">*Fractional_digits*数字の 0 が有効ではのみです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-268">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="d01d9-269">*、*</span><span class="sxs-lookup"><span data-stu-id="d01d9-269">*,*</span></span>|<span data-ttu-id="d01d9-270">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="d01d9-270">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="d01d9-271">現在のカルチャの数千に区切り記号が表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-271">The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d01d9-272">*.*</span><span class="sxs-lookup"><span data-stu-id="d01d9-272">*.*</span></span>|<span data-ttu-id="d01d9-273">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-273">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="d01d9-274">現在のカルチャの小数点記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-274">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="d01d9-275">数字の 0 は、解析操作を成功させるため桁の小数部として表示できます。場合*fractional_digits*他の任意の数字が含まれています、<xref:System.OverflowException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-275">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="d01d9-276">*e*</span><span class="sxs-lookup"><span data-stu-id="d01d9-276">*e*</span></span>|<span data-ttu-id="d01d9-277">'E' または 'E' 文字は、値を指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-277">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="d01d9-278">`s`場合、パラメーターは指数表記の数値を表すことができる`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-278">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d01d9-279">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="d01d9-279">*hexdigits*</span></span>|<span data-ttu-id="d01d9-280">一連の 0 f からまたは f 0 から 16 進数の数字</span><span class="sxs-lookup"><span data-stu-id="d01d9-280">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="d01d9-281">数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイル) が正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-281">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="d01d9-282">ほとんど残りの<xref:System.Globalization.NumberStyles>メンバーを制御する可能性がありますが、入力文字列内に存在する必要はありません要素。</span><span class="sxs-lookup"><span data-stu-id="d01d9-282">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="d01d9-283">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在可能な要素に影響を与える`s`です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-283">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="d01d9-284">NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="d01d9-284">NumberStyles value</span></span>|<span data-ttu-id="d01d9-285">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="d01d9-285">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="d01d9-286">*桁*要素のみです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-286">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="d01d9-287">小数点 (*です。*</span><span class="sxs-lookup"><span data-stu-id="d01d9-287">The decimal point ( *.*</span></span> <span data-ttu-id="d01d9-288">) および*小数部の桁*要素。</span><span class="sxs-lookup"><span data-stu-id="d01d9-288">) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="d01d9-289">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-289">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="d01d9-290">*Ws*の先頭にある要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-290">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="d01d9-291">*Ws*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-291">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="d01d9-292">*記号*の先頭にある要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-292">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="d01d9-293">*記号*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-293">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="d01d9-294">*記号*数値の値を囲むかっこの形式での要素。</span><span class="sxs-lookup"><span data-stu-id="d01d9-294">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="d01d9-295">桁区切り記号 ( *、* ) 要素です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-295">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="d01d9-296">* $ *要素。</span><span class="sxs-lookup"><span data-stu-id="d01d9-296">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="d01d9-297">すべて。</span><span class="sxs-lookup"><span data-stu-id="d01d9-297">All.</span></span> <span data-ttu-id="d01d9-298">`s`パラメーターには、16 進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-298">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="d01d9-299">*Ws*先頭または末尾の位置にある要素`s`、*記号*の先頭に`s`、および小数点 (*です。*</span><span class="sxs-lookup"><span data-stu-id="d01d9-299">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point ( *.*</span></span> <span data-ttu-id="d01d9-300">) シンボル。</span><span class="sxs-lookup"><span data-stu-id="d01d9-300">) symbol.</span></span> <span data-ttu-id="d01d9-301">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-301">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="d01d9-302">`ws`、 `sign`、桁区切り記号 ( *、* )、および小数点 (*です。*</span><span class="sxs-lookup"><span data-stu-id="d01d9-302">The `ws`, `sign`, thousands separator ( *,* ), and decimal point ( *.*</span></span> <span data-ttu-id="d01d9-303">) 要素です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-303">) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="d01d9-304">すべてのスタイルを除く`s`16 進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-304">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="d01d9-305">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、`s`プレフィックスのない 16 進値でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-305">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="d01d9-306">たとえば、"C9AF3"を正常に解析していて、"0xC9AF3"にはないです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-306">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="d01d9-307">のみ他のフラグと組み合わせることができます、`s`パラメーターは、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-307">The only other flags that can be combined with the `s` parameter it are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d01d9-308">(、<xref:System.Globalization.NumberStyles>列挙には、複合数値スタイルが含まれています<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、両方の空白文字のフラグが含まれている。)。</span><span class="sxs-lookup"><span data-stu-id="d01d9-308">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="d01d9-309">`s`で書式設定情報を使用してパラメーターを解析、<xref:System.Globalization.NumberFormatInfo>現在のシステムのカルチャに初期化されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-309">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="d01d9-310">書式情報を含むが、解析操作で使用されるカルチャを指定するには、呼び出し、<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d01d9-310">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d01d9-311">次の例では、<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>をいくつかの文字列表現を解析<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-311">The following example uses the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> method to parse the string representations of several <xref:System.Int32> values.</span></span> <span data-ttu-id="d01d9-312">たとえば、現在のカルチャは、EN-US です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-312">The current culture for the example is en-US.</span></span>  
  
 [!code-cpp[System.Int32.Parse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse2.cpp#2)]
 [!code-csharp[System.Int32.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse2.cs#2)]
 [!code-vb[System.Int32.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d01d9-313"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-313"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d01d9-314"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-314"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="d01d9-315">- または -</span><span class="sxs-lookup"><span data-stu-id="d01d9-315">-or-</span></span>  
  
 <span data-ttu-id="d01d9-316"><paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-316"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="d01d9-317"><paramref name="s" /> の書式が、<paramref name="style" /> に準拠した書式ではありません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-317"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="d01d9-318"><paramref name="s" /> が <see cref="F:System.Int32.MinValue" /> 未満の数値か、<see cref="F:System.Int32.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="d01d9-318"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
 <span data-ttu-id="d01d9-319">- または -</span><span class="sxs-lookup"><span data-stu-id="d01d9-319">-or-</span></span>  
  
 <span data-ttu-id="d01d9-320"><paramref name="s" /> は 0 以外の小数部の桁を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-320"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <altmember cref="Overload:System.Int32.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="d01d9-321">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="d01d9-321">A string containing a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d01d9-322"><c>s</c> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-322">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="d01d9-323">指定したカルチャに固有の書式による数値の文字列形式を、それと等価な 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-323">Converts the string representation of a number in a specified culture-specific format to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="d01d9-324"><paramref name="s" /> で指定した数値と等しい 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="d01d9-324">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-325">このオーバー ロード、<xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29>メソッドでは、さまざまな方法でフォーマットできるテキストに変換するために使用は、通常、<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-325">This overload of the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to an <xref:System.Int32> value.</span></span> <span data-ttu-id="d01d9-326">たとえば、数値の値を HTML テキスト ボックスに、ユーザーが入力したテキストに変換する、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-326">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="d01d9-327">`s`パラメーターには、フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="d01d9-327">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="d01d9-328">[ws][サインイン] 桁 [ws]</span><span class="sxs-lookup"><span data-stu-id="d01d9-328">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="d01d9-329">角かっこ ([および]) は省略可能の項目です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-329">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="d01d9-330">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-330">The following table describes each element.</span></span>  
  
|<span data-ttu-id="d01d9-331">要素</span><span class="sxs-lookup"><span data-stu-id="d01d9-331">Element</span></span>|<span data-ttu-id="d01d9-332">説明</span><span class="sxs-lookup"><span data-stu-id="d01d9-332">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="d01d9-333">*ws*</span><span class="sxs-lookup"><span data-stu-id="d01d9-333">*ws*</span></span>|<span data-ttu-id="d01d9-334">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-334">Optional white space.</span></span>|  
|<span data-ttu-id="d01d9-335">*sign*</span><span class="sxs-lookup"><span data-stu-id="d01d9-335">*sign*</span></span>|<span data-ttu-id="d01d9-336">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="d01d9-336">An optional sign.</span></span>|  
|<span data-ttu-id="d01d9-337">*digits*</span><span class="sxs-lookup"><span data-stu-id="d01d9-337">*digits*</span></span>|<span data-ttu-id="d01d9-338">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="d01d9-338">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="d01d9-339">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="d01d9-339">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="d01d9-340">10 進数字以外には、先頭と末尾のスペースが先頭の符号と共にのみを使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-340">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="d01d9-341">使用できるスタイル要素を明示的に定義する`s`を使用して、<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-341">To explicitly define the style elements that can be present in `s`, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="d01d9-342">`provider`パラメーターは、<xref:System.IFormatProvider>実装など、<xref:System.Globalization.NumberFormatInfo>または<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-342">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="d01d9-343">`provider`パラメーターの書式に関するカルチャ固有の情報を提供`s`です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-343">The `provider` parameter supplies culture-specific information about the format of `s`.</span></span> <span data-ttu-id="d01d9-344">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-344">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d01d9-345">次の例は、ボタンは、Web フォームのイベント ハンドラーをクリックします。</span><span class="sxs-lookup"><span data-stu-id="d01d9-345">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="d01d9-346">によって返される配列を使用して、<xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>プロパティをユーザーのロケールを決定します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-346">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="d01d9-347">インスタンス化し、<xref:System.Globalization.CultureInfo>そのロケールに対応するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-347">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="d01d9-348"><xref:System.Globalization.NumberFormatInfo>に属しているオブジェクト<xref:System.Globalization.CultureInfo>にオブジェクトが渡され、<xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29>をユーザーに変換するメソッドの入力、<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-348">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to an <xref:System.Int32> value.</span></span>  
  
 [!code-csharp[ParseMethod#4](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#4)]
 [!code-vb[ParseMethod#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d01d9-349"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-349"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="d01d9-350"><paramref name="s" /> の書式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-350"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="d01d9-351"><paramref name="s" /> が <see cref="F:System.Int32.MinValue" /> 未満の数値か、<see cref="F:System.Int32.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="d01d9-351"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <altmember cref="Overload:System.Int32.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="d01d9-352">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="d01d9-352">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="d01d9-353"><c>s</c> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-353">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="d01d9-354">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-354">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="d01d9-355"><c>s</c> の書式設定に関するカルチャ固有の情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-355">An object that supplies culture-specific information about the format of <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="d01d9-356">指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価の 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-356">Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="d01d9-357"><paramref name="s" /> で指定した数値と等しい 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="d01d9-357">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-358">`style`パラメーター スタイル要素を定義します (空白や正符号) では許可されて、`s`解析操作が成功するためのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-358">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="d01d9-359">ビット フラグの組み合わせを可能にする必要があります、<xref:System.Globalization.NumberStyles>列挙します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-359">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="d01d9-360">値に応じて`style`、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="d01d9-360">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="d01d9-361">[ws][$][記号][数字] 桁 [.fractional_digist] [e [サインイン] exponential_digits] [ws]</span><span class="sxs-lookup"><span data-stu-id="d01d9-361">[ws][$][sign][digits,]digits[.fractional_digist][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="d01d9-362">または、`style`が含まれています<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="d01d9-362">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="d01d9-363">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="d01d9-363">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="d01d9-364">角かっこ ([および]) は省略可能の項目です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-364">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="d01d9-365">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-365">The following table describes each element.</span></span>  
  
|<span data-ttu-id="d01d9-366">要素</span><span class="sxs-lookup"><span data-stu-id="d01d9-366">Element</span></span>|<span data-ttu-id="d01d9-367">説明</span><span class="sxs-lookup"><span data-stu-id="d01d9-367">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="d01d9-368">*ws*</span><span class="sxs-lookup"><span data-stu-id="d01d9-368">*ws*</span></span>|<span data-ttu-id="d01d9-369">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-369">Optional white space.</span></span> <span data-ttu-id="d01d9-370">先頭に空白文字は使用できません`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>の最後に表示されることができますフラグ、およびその`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-370">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="d01d9-371">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="d01d9-371">A culture-specific currency symbol.</span></span> <span data-ttu-id="d01d9-372">文字列内での位置がによって定義された、<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>のプロパティ、<xref:System.Globalization.NumberFormatInfo>によって返されるオブジェクト、<xref:System.IFormatProvider.GetFormat%2A>のメソッド、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="d01d9-372">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="d01d9-373">通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-373">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d01d9-374">*sign*</span><span class="sxs-lookup"><span data-stu-id="d01d9-374">*sign*</span></span>|<span data-ttu-id="d01d9-375">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="d01d9-375">An optional sign.</span></span> <span data-ttu-id="d01d9-376">先頭に表示できる符号`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>フラグまたはの末尾`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-376">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="d01d9-377">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-377">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d01d9-378">*digits*</span><span class="sxs-lookup"><span data-stu-id="d01d9-378">*digits*</span></span><br /><br /> <span data-ttu-id="d01d9-379">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="d01d9-379">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="d01d9-380">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="d01d9-380">*exponential_digits*</span></span>|<span data-ttu-id="d01d9-381">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="d01d9-381">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="d01d9-382">*Fractional_digits*数字の 0 が有効ではのみです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-382">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="d01d9-383">*、*</span><span class="sxs-lookup"><span data-stu-id="d01d9-383">*,*</span></span>|<span data-ttu-id="d01d9-384">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="d01d9-384">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="d01d9-385">数千で指定されたカルチャの区切り記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-385">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d01d9-386">*.*</span><span class="sxs-lookup"><span data-stu-id="d01d9-386">*.*</span></span>|<span data-ttu-id="d01d9-387">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-387">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="d01d9-388">指定されたカルチャの小数点記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-388">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span><br /><br /> <span data-ttu-id="d01d9-389">数字の 0 は、解析操作を成功させるため桁の小数部として表示できます。場合*fractional_digits*他の任意の数字が含まれています、<xref:System.OverflowException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-389">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="d01d9-390">*e*</span><span class="sxs-lookup"><span data-stu-id="d01d9-390">*e*</span></span>|<span data-ttu-id="d01d9-391">'E' または 'E' 文字は、値を指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-391">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="d01d9-392">`s`場合、パラメーターは指数表記の数値を表すことができる`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-392">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d01d9-393">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="d01d9-393">*hexdigits*</span></span>|<span data-ttu-id="d01d9-394">一連の 0 f からまたは f 0 から 16 進数の数字</span><span class="sxs-lookup"><span data-stu-id="d01d9-394">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="d01d9-395">10 進数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイル) の範囲内にある場合は、常に正常に解析、<xref:System.Int32>型です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-395">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully if it is in the range of the <xref:System.Int32> type.</span></span> <span data-ttu-id="d01d9-396">ほとんど残りの<xref:System.Globalization.NumberStyles>メンバーを制御する可能性がありますが、この入力文字列内に存在する必要はない要素です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-396">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="d01d9-397">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在可能な要素に影響を与える`s`です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-397">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="d01d9-398">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="d01d9-398">Non-composite NumberStyles values</span></span>|<span data-ttu-id="d01d9-399">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="d01d9-399">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="d01d9-400">10 進数字のみです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-400">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="d01d9-401">小数点 (*です。*</span><span class="sxs-lookup"><span data-stu-id="d01d9-401">The decimal point ( *.*</span></span> <span data-ttu-id="d01d9-402">) および*小数部の桁*要素。</span><span class="sxs-lookup"><span data-stu-id="d01d9-402">) and *fractional-digits* elements.</span></span> <span data-ttu-id="d01d9-403">ただし、*小数部の桁*のみ 1 つ以上の数字が 0 ので構成されている必要がありますまたは<xref:System.OverflowException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-403">However, *fractional-digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="d01d9-404">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-404">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="d01d9-405">場合`s`指数表記の数値を表すの範囲内の整数を表す必要があります、<xref:System.Int32>ゼロ以外、小数部がないデータ型。</span><span class="sxs-lookup"><span data-stu-id="d01d9-405">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="d01d9-406">*Ws*の先頭にある要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-406">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="d01d9-407">*Ws*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-407">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="d01d9-408">正の符号は、前に表示できる*桁*です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-408">A positive sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="d01d9-409">正の符号が後に表示される可能性が*桁*です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-409">A positive sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="d01d9-410">*記号*数値の値を囲むかっこの形式での要素。</span><span class="sxs-lookup"><span data-stu-id="d01d9-410">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="d01d9-411">桁区切り記号 ( *、* ) 要素です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-411">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="d01d9-412">* $ *要素。</span><span class="sxs-lookup"><span data-stu-id="d01d9-412">The *$* element.</span></span>|  
  
 <span data-ttu-id="d01d9-413">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、`s`プレフィックスのない 16 進値でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-413">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="d01d9-414">たとえば、"C9AF3"を正常に解析していて、"0xC9AF3"にはないです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-414">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="d01d9-415">その他のフラグのみで使用可能な`style`は<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-415">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d01d9-416">(、<xref:System.Globalization.NumberStyles>列挙体には、複合数値スタイル<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、両方の空白文字のフラグが含まれている)。</span><span class="sxs-lookup"><span data-stu-id="d01d9-416">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="d01d9-417">`provider`パラメーターは、<xref:System.IFormatProvider>実装など、<xref:System.Globalization.NumberFormatInfo>または<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-417">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="d01d9-418">`provider`パラメーターの解析中に使用されるカルチャに固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-418">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="d01d9-419">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-419">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d01d9-420">次の例は、さまざまな`style`と`provider`パラメーターの文字列形式を解析する<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-420">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Int32> values.</span></span> <span data-ttu-id="d01d9-421">また、解析操作用の書式情報を使用するカルチャに応じて、同じ文字列を解釈できるさまざまな方法のいくつか示しています。</span><span class="sxs-lookup"><span data-stu-id="d01d9-421">It also illustrates some of the different ways the same string can be interpreted depending on the culture whose formatting information is used for the parsing operation.</span></span>  
  
 [!code-cpp[System.Int32.Parse#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse3.cpp#3)]
 [!code-csharp[System.Int32.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse3.cs#3)]
 [!code-vb[System.Int32.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d01d9-422"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-422"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d01d9-423"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-423"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="d01d9-424">- または -</span><span class="sxs-lookup"><span data-stu-id="d01d9-424">-or-</span></span>  
  
 <span data-ttu-id="d01d9-425"><paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-425"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="d01d9-426"><paramref name="s" /> の書式が、<paramref name="style" /> に準拠した書式ではありません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-426"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="d01d9-427"><paramref name="s" /> が <see cref="F:System.Int32.MinValue" /> 未満の数値か、<see cref="F:System.Int32.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="d01d9-427"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
 <span data-ttu-id="d01d9-428">- または -</span><span class="sxs-lookup"><span data-stu-id="d01d9-428">-or-</span></span>  
  
 <span data-ttu-id="d01d9-429"><paramref name="s" /> は 0 以外の小数部の桁を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-429"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d01d9-430">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-430">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d01d9-431">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d01d9-431">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="d01d9-432">現在のインスタンスの値がゼロでない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d01d9-432"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-433">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-433">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d01d9-434">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-434">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d01d9-435">推奨される代替手段が呼び出されて、<xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-435">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d01d9-436">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-436">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d01d9-437">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d01d9-437">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d01d9-438"><see cref="T:System.Byte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-438">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-439">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-439">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d01d9-440">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-440">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d01d9-441">推奨される代替手段が呼び出されて、<xref:System.Convert.ToByte%28System.Int32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-441">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d01d9-442">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-442">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d01d9-443">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d01d9-443">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d01d9-444"><see cref="T:System.Char" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-444">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-445">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-445">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d01d9-446">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-446">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d01d9-447">推奨される代替手段が呼び出されて、<xref:System.Convert.ToChar%28System.Int32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-447">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d01d9-448">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-448">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d01d9-449">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-449">This conversion is not supported.</span></span> <span data-ttu-id="d01d9-450">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-450">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d01d9-451">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-451">This conversion is not supported.</span></span> <span data-ttu-id="d01d9-452">値は返されません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-452">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d01d9-453">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="d01d9-453">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d01d9-454">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-454">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d01d9-455">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d01d9-455">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d01d9-456"><see cref="T:System.Decimal" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-456">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-457">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-457">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d01d9-458">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-458">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d01d9-459">推奨される代替手段が呼び出されて、<xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-459">The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d01d9-460">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-460">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d01d9-461">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d01d9-461">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d01d9-462"><see cref="T:System.Double" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-462">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-463">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-463">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d01d9-464">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-464">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d01d9-465">推奨される代替手段が呼び出されて、<xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-465">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d01d9-466">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-466">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d01d9-467">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d01d9-467">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d01d9-468"><see cref="T:System.Int16" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-468">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-469">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-469">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d01d9-470">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-470">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d01d9-471">推奨される代替手段が呼び出されて、<xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-471">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d01d9-472">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-472">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d01d9-473">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d01d9-473">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d01d9-474">変更されていない、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-474">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-475">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-475">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d01d9-476">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-476">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d01d9-477">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-477">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d01d9-478">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d01d9-478">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d01d9-479"><see cref="T:System.Int64" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-479">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-480">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-480">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d01d9-481">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-481">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d01d9-482">推奨される代替手段が呼び出されて、<xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-482">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d01d9-483">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-483">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d01d9-484">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d01d9-484">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d01d9-485"><see cref="T:System.SByte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-485">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-486">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-486">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d01d9-487">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-487">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d01d9-488">推奨される代替手段が呼び出されて、<xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-488">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d01d9-489">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-489">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d01d9-490">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d01d9-490">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d01d9-491"><see cref="T:System.Single" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-491">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-492">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-492">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d01d9-493">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-493">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d01d9-494">推奨される代替手段が呼び出されて、<xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-494">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="d01d9-495">この <see cref="T:System.Int32" /> 値の変換後の型。</span><span class="sxs-lookup"><span data-stu-id="d01d9-495">The type to which to convert this <see cref="T:System.Int32" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="d01d9-496">戻り値の書式に関する情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-496">An object that provides information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="d01d9-497">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d01d9-497">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d01d9-498"><paramref name="type" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-498">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-499">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-499">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d01d9-500">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-500">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d01d9-501">推奨される代替手段が呼び出されて、 `static` (`Shared` Visual Basic で)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="d01d9-501">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d01d9-502">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-502">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d01d9-503">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d01d9-503">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d01d9-504"><see cref="T:System.UInt16" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-504">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-505">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-505">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d01d9-506">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-506">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d01d9-507">推奨される代替手段が呼び出されて、<xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-507">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d01d9-508">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-508">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d01d9-509">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d01d9-509">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d01d9-510"><see cref="T:System.UInt32" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-510">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-511">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-511">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d01d9-512">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-512">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d01d9-513">推奨される代替手段が呼び出されて、<xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-513">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d01d9-514">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-514">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d01d9-515">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d01d9-515">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d01d9-516"><see cref="T:System.UInt64" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-516">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-517">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-517">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d01d9-518">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-518">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d01d9-519">推奨される代替手段が呼び出されて、<xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-519">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d01d9-520">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-520">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d01d9-521">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-521">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="d01d9-522">値が負の場合はマイナス記号を伴い、先行ゼロを含まない 0 から 9 の一連の数字から構成される、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="d01d9-522">The string representation of the value of this instance, consisting of a negative sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-523"><xref:System.Int32.ToString>メソッドの形式、 <xref:System.Int32> ("G"、または [全般]) の既定の値の形式を使用して、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-523">The <xref:System.Int32.ToString> method formats an <xref:System.Int32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="d01d9-524">別の形式またはカルチャを指定する場合は、他のオーバー ロードを使用して、<xref:System.Int32.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="d01d9-524">If you want to specify a different format or culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="d01d9-525">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="d01d9-525">To use format</span></span>|<span data-ttu-id="d01d9-526">カルチャの</span><span class="sxs-lookup"><span data-stu-id="d01d9-526">For culture</span></span>|<span data-ttu-id="d01d9-527">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-527">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="d01d9-528">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="d01d9-528">Default ("G") format</span></span>|<span data-ttu-id="d01d9-529">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d01d9-529">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="d01d9-530">特定の形式</span><span class="sxs-lookup"><span data-stu-id="d01d9-530">A specific format</span></span>|<span data-ttu-id="d01d9-531">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d01d9-531">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
|<span data-ttu-id="d01d9-532">特定の形式</span><span class="sxs-lookup"><span data-stu-id="d01d9-532">A specific format</span></span>|<span data-ttu-id="d01d9-533">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d01d9-533">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="d01d9-534">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-534">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="d01d9-535">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-535">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="d01d9-536">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-536">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d01d9-537">次の例を表示、<xref:System.Int32>値の既定値を使用して<xref:System.Int32.ToString>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-537">The following example displays an <xref:System.Int32> value using the default <xref:System.Int32.ToString> method.</span></span> <span data-ttu-id="d01d9-538">文字列形式も表示されます、<xref:System.Int32>からさまざまな標準書式指定子を使用して結果の値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-538">It also displays the string representations of the <xref:System.Int32> value that results from using a number of standard format specifiers.</span></span> <span data-ttu-id="d01d9-539">例は、EN-US カルチャの書式指定規則を使用して表示されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-539">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-cpp[System.Int32.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString1.cpp#1)]
 [!code-csharp[System.Int32.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#1)]
 [!code-vb[System.Int32.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d01d9-540">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-540">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d01d9-541">このインスタンスの数値を、指定したカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-541">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="d01d9-542"><paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="d01d9-542">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-543"><xref:System.Int32.ToString%28System.IFormatProvider%29>メソッドの形式、 <xref:System.Int32> ("G"、または [全般]) の既定の値の形式を使用して、<xref:System.Globalization.NumberFormatInfo>特定のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-543">The <xref:System.Int32.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="d01d9-544">別の形式または現在のカルチャを指定する場合は、他のオーバー ロードを使用して、<xref:System.Int32.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="d01d9-544">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="d01d9-545">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="d01d9-545">To use format</span></span>|<span data-ttu-id="d01d9-546">カルチャの</span><span class="sxs-lookup"><span data-stu-id="d01d9-546">For culture</span></span>|<span data-ttu-id="d01d9-547">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-547">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="d01d9-548">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="d01d9-548">Default ("G") format</span></span>|<span data-ttu-id="d01d9-549">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d01d9-549">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="d01d9-550">特定の形式</span><span class="sxs-lookup"><span data-stu-id="d01d9-550">A specific format</span></span>|<span data-ttu-id="d01d9-551">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d01d9-551">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
|<span data-ttu-id="d01d9-552">特定の形式</span><span class="sxs-lookup"><span data-stu-id="d01d9-552">A specific format</span></span>|<span data-ttu-id="d01d9-553">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d01d9-553">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="d01d9-554">`provider`パラメーターを実装するオブジェクト、<xref:System.IFormatProvider>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-554">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="d01d9-555">その<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>このメソッドによって返される文字列の書式に関するカルチャ固有の情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-555">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="d01d9-556">実装するオブジェクト<xref:System.IFormatProvider>次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-556">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="d01d9-557">A<xref:System.Globalization.CultureInfo>が書式指定規則が使用されるカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-557">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="d01d9-558">A<xref:System.Globalization.NumberFormatInfo>この値の特定の数値書式設定情報を含むオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-558">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="d01d9-559">実装するカスタム オブジェクト<xref:System.IFormatProvider>と持つ<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-559">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="d01d9-560">場合`provider`は`null`または<xref:System.Globalization.NumberFormatInfo>からオブジェクトを取得できません`provider`を使用して、戻り値が書式設定、<xref:System.Globalization.NumberFormatInfo>の現在のスレッド カルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-560">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture.</span></span> <span data-ttu-id="d01d9-561">現在のスレッド カルチャのについては、次を参照してください。<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-561">For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d01d9-562">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-562">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="d01d9-563">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-563">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="d01d9-564">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-564">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d01d9-565">次の例の文字列形式を表示する、<xref:System.Int32>値を使用して<xref:System.Globalization.CultureInfo>を複数の異なるカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-565">The following example displays the string representation of an <xref:System.Int32> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-cpp[System.Int32.ToString#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString2.cpp#2)]
 [!code-csharp[System.Int32.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#2)]
 [!code-vb[System.Int32.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="d01d9-566">標準またはカスタムの数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="d01d9-566">A standard or custom numeric format string.</span></span></param>
        <summary><span data-ttu-id="d01d9-567">指定した書式を使用して、このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-567">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span></span></summary>
        <returns><span data-ttu-id="d01d9-568"><paramref name="format" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="d01d9-568">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-569"><xref:System.Int32.ToString%28System.String%29>メソッドの形式、<xref:System.Int32>値を使用して指定された形式で、<xref:System.Globalization.NumberFormatInfo>を現在のカルチャの規則を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-569">The <xref:System.Int32.ToString%28System.String%29> method formats an <xref:System.Int32> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="d01d9-570">既定値 ("G"、または [全般]) を使用する場合は、書式を設定または別のカルチャを指定して、他のオーバー ロードを使用して、<xref:System.Int32.ToString%2A>メソッドは、次のように。</span><span class="sxs-lookup"><span data-stu-id="d01d9-570">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="d01d9-571">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="d01d9-571">To use format</span></span>|<span data-ttu-id="d01d9-572">カルチャの</span><span class="sxs-lookup"><span data-stu-id="d01d9-572">For culture</span></span>|<span data-ttu-id="d01d9-573">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-573">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="d01d9-574">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="d01d9-574">Default ("G") format</span></span>|<span data-ttu-id="d01d9-575">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d01d9-575">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="d01d9-576">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="d01d9-576">Default ("G") format</span></span>|<span data-ttu-id="d01d9-577">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d01d9-577">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="d01d9-578">特定の形式</span><span class="sxs-lookup"><span data-stu-id="d01d9-578">A specific format</span></span>|<span data-ttu-id="d01d9-579">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d01d9-579">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="d01d9-580">`format`パラメーターには、"R"を除く任意の有効な標準の数値書式指定子およびカスタム数値書式指定子の任意の組み合わせを指定できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-580">The `format` parameter can be any valid standard numeric format specifier except for "R", as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="d01d9-581">場合`format`は`null`または空の文字列 ("")、このインスタンスの戻り値が、一般的な数値書式指定子 ("G") でフォーマットされています。</span><span class="sxs-lookup"><span data-stu-id="d01d9-581">If `format` is `null` or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="d01d9-582">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-582">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="d01d9-583">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-583">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="d01d9-584">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-584">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="d01d9-585">このインスタンスの戻り値でフォーマットされた、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-585">The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d01d9-586">次の例を表示、<xref:System.Int32>を使用して、サポートされている標準数値書式指定子、および 2 つのカスタム数値書式指定文字列の各値です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-586">The following example displays an <xref:System.Int32> value using each of the supported standard numeric format specifiers, together with two custom numeric format strings.</span></span> <span data-ttu-id="d01d9-587">数値の値を文字列に変換するのには、EN-US カルチャの書式指定規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-587">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-cpp[System.Int32.ToString#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString3.cpp#3)]
 [!code-csharp[System.Int32.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#3)]
 [!code-vb[System.Int32.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="d01d9-588"><paramref name="format" /> が無効であるか、サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-588"><paramref name="format" /> is invalid or not supported.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="d01d9-589">標準またはカスタムの数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="d01d9-589">A standard or custom numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="d01d9-590">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-590">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d01d9-591">このインスタンスの数値を、指定した書式およびカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-591">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="d01d9-592"><paramref name="format" /> および <paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="d01d9-592">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-593"><xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>メソッドの形式、<xref:System.Int32>値を使用して指定された形式で、<xref:System.Globalization.NumberFormatInfo>特定のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-593">The <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int32> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="d01d9-594">既定の形式またはカルチャの設定を使用する場合は、他のオーバー ロードを使用して、<xref:System.Int32.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="d01d9-594">If you want to use default format or culture settings, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="d01d9-595">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="d01d9-595">To use format</span></span>|<span data-ttu-id="d01d9-596">カルチャの</span><span class="sxs-lookup"><span data-stu-id="d01d9-596">For culture</span></span>|<span data-ttu-id="d01d9-597">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-597">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="d01d9-598">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="d01d9-598">Default ("G") format</span></span>|<span data-ttu-id="d01d9-599">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d01d9-599">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="d01d9-600">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="d01d9-600">Default ("G") format</span></span>|<span data-ttu-id="d01d9-601">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d01d9-601">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="d01d9-602">特定の形式</span><span class="sxs-lookup"><span data-stu-id="d01d9-602">A specific format</span></span>|<span data-ttu-id="d01d9-603">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d01d9-603">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
  
 <span data-ttu-id="d01d9-604">`format`パラメーターには、標準またはカスタム数値書式指定文字列のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-604">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="d01d9-605">すべてのカスタム数値書式指定文字として、"R"(または"r") 以外のすべての標準数値書式指定文字列はサポートされます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-605">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="d01d9-606">場合`format`は`null`または空の文字列 ("")、このインスタンスの戻り値が、一般的な数値書式指定子 ("G") でフォーマットされています。</span><span class="sxs-lookup"><span data-stu-id="d01d9-606">If `format` is `null` or an empty string (""), the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="d01d9-607">`provider`パラメーターを実装するオブジェクト、<xref:System.IFormatProvider>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-607">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="d01d9-608">その<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>このメソッドによって返される文字列の書式に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-608">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific format information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="d01d9-609">実装するオブジェクト<xref:System.IFormatProvider>次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-609">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="d01d9-610">A<xref:System.Globalization.CultureInfo>が書式指定規則が使用されるカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-610">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="d01d9-611">A<xref:System.Globalization.NumberFormatInfo>この値の特定の数値書式設定情報を含むオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-611">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="d01d9-612">実装するカスタム オブジェクト<xref:System.IFormatProvider>と持つ<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-612">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="d01d9-613">場合`provider`は`null`または<xref:System.Globalization.NumberFormatInfo>からオブジェクトを取得できません`provider`、このインスタンスの戻り値でフォーマットされた、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-613">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value for this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
 <span data-ttu-id="d01d9-614">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-614">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="d01d9-615">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-615">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="d01d9-616">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-616">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d01d9-617">次の例では、正と負の値が 3 つの異なるカルチャを使用して、サポートされている標準数値書式指定子の各が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-617">The following example displays a positive and a negative value using each of the supported standard numeric format specifiers for three different cultures.</span></span>  
  
 [!code-cpp[System.Int32.ToString#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString4.cpp#4)]
 [!code-csharp[System.Int32.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#4)]
 [!code-vb[System.Int32.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="d01d9-618"><paramref name="format" /> が無効であるか、サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-618"><paramref name="format" /> is invalid or not supported.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d01d9-619">数値の文字列形式を、それと等価な 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-619">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="d01d9-620">戻り値は、演算が成功したかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-620">A return value indicates whether the operation succeeded.</span></span></summary>
        <altmember cref="Overload:System.Int32.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] int % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.String,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] int % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="d01d9-621">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="d01d9-621">A string containing a number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="d01d9-622">変換が成功した場合、このメソッドが返されるときに、<c>s</c> に格納された数値と等価の 32 ビット符号付き整数値を格納します。変換に失敗した場合は 0 を格納します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-622">When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="d01d9-623"><c>s</c> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、正しい形式ではない、または <see cref="F:System.Int32.MinValue" /> より小さいか <see cref="F:System.Int32.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-623">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="d01d9-624">このパラメーターは初期化されていない状態で渡されています。<c>result</c> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-624">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="d01d9-625">数値の文字列形式を、それと等価な 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-625">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="d01d9-626">戻り値は、変換が成功したかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-626">A return value indicates whether the conversion succeeded.</span></span></summary>
        <returns>
          <span data-ttu-id="d01d9-627"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d01d9-627"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-628"><xref:System.Int32.TryParse%2A>などのメソッドは、<xref:System.Int32.Parse%2A>メソッドを除く、<xref:System.Int32.TryParse%2A>変換が失敗した場合、メソッドが例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-628">The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="d01d9-629">テストするため、例外処理を使用する必要がある、<xref:System.FormatException>イベントで`s`無効なため、正常に解析することはできません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-629">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="d01d9-630">`s`パラメーターには、フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="d01d9-630">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="d01d9-631">[ws][サインイン] 桁 [ws]</span><span class="sxs-lookup"><span data-stu-id="d01d9-631">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="d01d9-632">角かっこ ([および]) は省略可能の項目です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-632">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="d01d9-633">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-633">The following table describes each element.</span></span>  
  
|<span data-ttu-id="d01d9-634">要素</span><span class="sxs-lookup"><span data-stu-id="d01d9-634">Element</span></span>|<span data-ttu-id="d01d9-635">説明</span><span class="sxs-lookup"><span data-stu-id="d01d9-635">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="d01d9-636">*ws*</span><span class="sxs-lookup"><span data-stu-id="d01d9-636">*ws*</span></span>|<span data-ttu-id="d01d9-637">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-637">Optional white space.</span></span>|  
|<span data-ttu-id="d01d9-638">*sign*</span><span class="sxs-lookup"><span data-stu-id="d01d9-638">*sign*</span></span>|<span data-ttu-id="d01d9-639">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="d01d9-639">An optional sign.</span></span>|  
|<span data-ttu-id="d01d9-640">*digits*</span><span class="sxs-lookup"><span data-stu-id="d01d9-640">*digits*</span></span>|<span data-ttu-id="d01d9-641">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="d01d9-641">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="d01d9-642">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="d01d9-642">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="d01d9-643">10 進数字以外には、先頭と末尾のスペースが先頭の符号と共にのみを使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-643">In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="d01d9-644">使用できるカルチャに固有の書式情報とスタイル要素を明示的に定義する`s`を使用して、<xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-644">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="d01d9-645">`s`で書式設定情報を使用してパラメーターを解析、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のシステムのカルチャ用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-645">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="d01d9-646">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d01d9-646">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="d01d9-647">このオーバー ロード、<xref:System.Int32.TryParse%2A>メソッド内のすべての桁を解釈し、`s`として小数点以下桁数のパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-647">This overload of the <xref:System.Int32.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="d01d9-648">16 進数の文字列表現を解析するには、呼び出し、<xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d01d9-648">To parse the string representation of a hexadecimal number, call the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d01d9-649">次の例では、<xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29?displayProperty=nameWithType>別の文字列値の数を持つメソッドです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-649">The following example calls the <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 [!code-cpp[System.Int32.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.TryParse/cpp/int32.tryparse1.cpp#1)]
 [!code-csharp[System.Int32.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.Int32.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.TryParse/vb/TryParse1.vb#1)]  
  
 <span data-ttu-id="d01d9-650">文字列の一部を<xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29>メソッドはこの例では変換することはありませんが。</span><span class="sxs-lookup"><span data-stu-id="d01d9-650">Some of the strings that the <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29> method is unable to convert in this example are:</span></span>  
  
-   <span data-ttu-id="d01d9-651">"9432.0".</span><span class="sxs-lookup"><span data-stu-id="d01d9-651">"9432.0".</span></span> <span data-ttu-id="d01d9-652">小数点の記号を含めることはできませんので、変換に失敗します。整数部の桁のみでなければなりません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-652">The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="d01d9-653">"16,667".</span><span class="sxs-lookup"><span data-stu-id="d01d9-653">"16,667".</span></span> <span data-ttu-id="d01d9-654">文字列は、グループの区切り記号を含めることはできませんので、変換に失敗します。整数部の桁のみでなければなりません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-654">The conversion fails because the string cannot contain group separators; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="d01d9-655">"(100)".</span><span class="sxs-lookup"><span data-stu-id="d01d9-655">"(100)".</span></span> <span data-ttu-id="d01d9-656">文字列は、現在のカルチャによって定義されたもの以外の負の符号を含めることはできませんので、変換が失敗した<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-656">The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture's <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> properties.</span></span>  
  
-   <span data-ttu-id="d01d9-657">"01FA".</span><span class="sxs-lookup"><span data-stu-id="d01d9-657">"01FA".</span></span> <span data-ttu-id="d01d9-658">文字列は 16 進数の数字を含めることはできませんので、変換に失敗します。10 進数字のみでなければなりません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-658">The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="M:System.Int32.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] int % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] int % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="d01d9-659">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="d01d9-659">A string containing a number to convert.</span></span> <span data-ttu-id="d01d9-660">文字列は、<c> スタイル </c> で指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-660">The string is interpreted using the style specified by <c>style</c>.</span></span></param>
        <param name="style"><span data-ttu-id="d01d9-661"><c>s</c> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-661">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="d01d9-662">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-662">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="d01d9-663"><c>s</c> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-663">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <param name="result"><span data-ttu-id="d01d9-664">変換が成功した場合、このメソッドが返されるときに、<c>s</c> に格納された数値と等価の 32 ビット符号付き整数値を格納します。変換に失敗した場合は 0 を格納します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-664">When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="d01d9-665"><c>s</c> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、 <c>style</c> に準拠した形式ではない、または <see cref="F:System.Int32.MinValue" /> より小さいか <see cref="F:System.Int32.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-665">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <c>style</c>, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="d01d9-666">このパラメーターは初期化されていない状態で渡されています。<c>result</c> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-666">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="d01d9-667">指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価の 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-667">Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="d01d9-668">戻り値は、変換が成功したかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-668">A return value indicates whether the conversion succeeded.</span></span></summary>
        <returns>
          <span data-ttu-id="d01d9-669"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d01d9-669"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d01d9-670"><xref:System.Int32.TryParse%2A>などのメソッドは、<xref:System.Int32.Parse%2A>メソッドを除く、<xref:System.Int32.TryParse%2A>変換が失敗した場合、メソッドが例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-670">The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="d01d9-671">テストするため、例外処理を使用する必要がある、<xref:System.FormatException>イベントで`s`無効なため、正常に解析されたことはできません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-671">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="d01d9-672">`style`パラメーター スタイル要素を定義します (空白や正または負符号) では許可されて、`s`解析操作が成功するためのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-672">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="d01d9-673">ビット フラグの組み合わせを可能にする必要があります、<xref:System.Globalization.NumberStyles>列挙します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-673">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="d01d9-674">値に応じて`style`、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="d01d9-674">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="d01d9-675">[ws][$][記号][数字] 桁 [.fractional_digits] [e [サインイン] 桁] [ws]</span><span class="sxs-lookup"><span data-stu-id="d01d9-675">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="d01d9-676">またはの場合、`style`パラメーターが含まれています<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="d01d9-676">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="d01d9-677">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="d01d9-677">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="d01d9-678">角かっこ ([および]) は省略可能の項目です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-678">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="d01d9-679">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-679">The following table describes each element.</span></span>  
  
|<span data-ttu-id="d01d9-680">要素</span><span class="sxs-lookup"><span data-stu-id="d01d9-680">Element</span></span>|<span data-ttu-id="d01d9-681">説明</span><span class="sxs-lookup"><span data-stu-id="d01d9-681">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="d01d9-682">*ws*</span><span class="sxs-lookup"><span data-stu-id="d01d9-682">*ws*</span></span>|<span data-ttu-id="d01d9-683">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-683">Optional white space.</span></span> <span data-ttu-id="d01d9-684">先頭に空白文字は使用できません`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>フラグ、またはの末尾`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-684">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="d01d9-685">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="d01d9-685">A culture-specific currency symbol.</span></span> <span data-ttu-id="d01d9-686">文字列内での位置がによって定義された、<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>のプロパティ、<xref:System.Globalization.NumberFormatInfo>によって返されるオブジェクト、<xref:System.IFormatProvider.GetFormat%2A>のメソッド、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="d01d9-686">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="d01d9-687">通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-687">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d01d9-688">*sign*</span><span class="sxs-lookup"><span data-stu-id="d01d9-688">*sign*</span></span>|<span data-ttu-id="d01d9-689">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="d01d9-689">An optional sign.</span></span> <span data-ttu-id="d01d9-690">記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>または<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-690">A sign symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> or <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flags.</span></span>|  
|<span data-ttu-id="d01d9-691">*digits*</span><span class="sxs-lookup"><span data-stu-id="d01d9-691">*digits*</span></span>|<span data-ttu-id="d01d9-692">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="d01d9-692">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="d01d9-693">*、*</span><span class="sxs-lookup"><span data-stu-id="d01d9-693">*,*</span></span>|<span data-ttu-id="d01d9-694">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="d01d9-694">A culture-specific thousands separator.</span></span> <span data-ttu-id="d01d9-695">数千で指定されたカルチャの区切り記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-695">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d01d9-696">*.*</span><span class="sxs-lookup"><span data-stu-id="d01d9-696">*.*</span></span>|<span data-ttu-id="d01d9-697">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-697">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="d01d9-698">指定されたカルチャの小数点記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-698">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d01d9-699">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="d01d9-699">*fractional_digits*</span></span>|<span data-ttu-id="d01d9-700">数字の 0 の 1 つ以上の出現します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-700">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="d01d9-701">小数部の桁が表示できる`s`場合にのみ、`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-701">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d01d9-702">*e*</span><span class="sxs-lookup"><span data-stu-id="d01d9-702">*e*</span></span>|<span data-ttu-id="d01d9-703">'E' または 'E' 文字は、値を指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-703">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="d01d9-704">`s`場合、パラメーターは指数表記の数値を表すことができる`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d01d9-704">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d01d9-705">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="d01d9-705">*hexdigits*</span></span>|<span data-ttu-id="d01d9-706">一連の 0 f からまたは f 0 から 16 進数の数字</span><span class="sxs-lookup"><span data-stu-id="d01d9-706">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="d01d9-707">10 進数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>フラグ) が正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="d01d9-707">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="d01d9-708">ほとんど残りの<xref:System.Globalization.NumberStyles>メンバーを制御する可能性がありますが、この入力文字列内に存在する必要はない要素です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-708">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="d01d9-709">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在可能な要素に影響を与える`s`です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-709">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="d01d9-710">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="d01d9-710">Non-composite NumberStyles values</span></span>|<span data-ttu-id="d01d9-711">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="d01d9-711">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="d01d9-712">10 進数字のみです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-712">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="d01d9-713">小数点 (*.*) および*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="d01d9-713">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="d01d9-714">ただし、 *fractional_digits*のみ 1 つ以上の数字が 0 のメソッドを返しますで構成されている必要があります`false`です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-714">However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="d01d9-715">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-715">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="d01d9-716">場合`s`指数表記の数値を表すの範囲内の整数を表す必要があります、<xref:System.Int32>ゼロ以外、小数部がないデータ型。</span><span class="sxs-lookup"><span data-stu-id="d01d9-716">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="d01d9-717">*Ws*の先頭にある要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-717">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="d01d9-718">*Ws*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-718">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="d01d9-719">前に、記号を表示できる*桁*です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-719">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="d01d9-720">後に記号が表示される可能性が*桁*です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-720">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="d01d9-721">*記号*数値の値を囲むかっこの形式での要素。</span><span class="sxs-lookup"><span data-stu-id="d01d9-721">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="d01d9-722">桁区切り記号 (*、*) 要素です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-722">The thousands separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="d01d9-723">* $ *要素。</span><span class="sxs-lookup"><span data-stu-id="d01d9-723">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency?displayProperty=nameWithType>|<span data-ttu-id="d01d9-724">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="d01d9-724">All elements.</span></span> <span data-ttu-id="d01d9-725">`s`パラメーターには、16 進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-725">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>|<span data-ttu-id="d01d9-726">*Ws*先頭または末尾の位置にある要素`s`、*記号*の先頭に`s`、および小数点 (*.*) シンボル。</span><span class="sxs-lookup"><span data-stu-id="d01d9-726">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="d01d9-727">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-727">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>|<span data-ttu-id="d01d9-728">*Ws*、*記号*、何千もの区切り記号 (*、*)、および小数点 (*.*) 要素です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-728">The *ws*, *sign*, thousands separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any?displayProperty=nameWithType>|<span data-ttu-id="d01d9-729">すべてのスタイルを除く`s`16 進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-729">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="d01d9-730">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、`s`プレフィックスのない 16 進値でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-730">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="d01d9-731">たとえば、"C9AF3"を正常に解析していて、"0xC9AF3"にはないです。</span><span class="sxs-lookup"><span data-stu-id="d01d9-731">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="d01d9-732">その他のフラグのみで使用可能な`style`は<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-732">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d01d9-733">(、<xref:System.Globalization.NumberStyles>列挙体には、複合スタイル<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、両方の空白文字のフラグが含まれている)。</span><span class="sxs-lookup"><span data-stu-id="d01d9-733">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="d01d9-734">`provider`パラメーターは、<xref:System.IFormatProvider>実装など、<xref:System.Globalization.CultureInfo>オブジェクトまたは<xref:System.Globalization.NumberFormatInfo>オブジェクト、<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d01d9-734">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="d01d9-735"><xref:System.Globalization.NumberFormatInfo>オブジェクトの書式に関するカルチャ固有の情報を提供`s`です。</span><span class="sxs-lookup"><span data-stu-id="d01d9-735">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="d01d9-736">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="d01d9-736">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d01d9-737">次の例では、<xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType>別の文字列の数を持つメソッドと<xref:System.Globalization.NumberStyles>値。</span><span class="sxs-lookup"><span data-stu-id="d01d9-737">The following example calls the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> method with a number of different string and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-cpp[System.Int32.TryParse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.TryParse/cpp/int32.tryparse2.cpp#2)]
 [!code-csharp[System.Int32.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.TryParse/cs/TryParse2.cs#2)]
 [!code-vb[System.Int32.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.TryParse/vb/TryParse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d01d9-738"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-738"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="d01d9-739">- または -</span><span class="sxs-lookup"><span data-stu-id="d01d9-739">-or-</span></span>  
  
 <span data-ttu-id="d01d9-740"><paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="d01d9-740"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int32.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>