<Type Name="Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;" FullName="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5371f17d5e71ecedc775cf17d82461963129a47c" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58721791" /></Metadata><TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`7&lt;T1, T2, T3, T4, T5, T6, T7&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`7" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3, T4, T5, T6, T7)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
    <TypeParameter Name="T5" />
    <TypeParameter Name="T6" />
    <TypeParameter Name="T7" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="6f221-101">組の 1 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="6f221-101">The type of the tuple's first component.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="6f221-102">組の 2 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="6f221-102">The type of the tuple's second component.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="6f221-103">組の 3 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="6f221-103">The type of the tuple's third component.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="6f221-104">組の 4 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="6f221-104">The type of the tuple's fourth component.</span></span></typeparam>
    <typeparam name="T5"><span data-ttu-id="6f221-105">組の 5 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="6f221-105">The type of the tuple's fifth component.</span></span></typeparam>
    <typeparam name="T6"><span data-ttu-id="6f221-106">組の 6 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="6f221-106">The type of the tuple's sixth component.</span></span></typeparam>
    <typeparam name="T7"><span data-ttu-id="6f221-107">組の 7 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="6f221-107">The type of the tuple's seventh component.</span></span></typeparam>
    <summary><span data-ttu-id="6f221-108">7 組 (7 つの要素で構成される組) を表します。</span><span class="sxs-lookup"><span data-stu-id="6f221-108">Represents a 7-tuple, or septuple.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f221-109">タプルとは、特定の数と値のシーケンスを持つデータ構造です。</span><span class="sxs-lookup"><span data-stu-id="6f221-109">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="6f221-110"><xref:System.Tuple%607>クラスは、7 組を表します。 または、7 つのコンポーネントを持つタプルをある 7 組、します。</span><span class="sxs-lookup"><span data-stu-id="6f221-110">The <xref:System.Tuple%607> class represents a 7-tuple, or septuple, which is a tuple that has seven components.</span></span>  
  
 <span data-ttu-id="6f221-111">インスタンス化することができます、<xref:System.Tuple%607>オブジェクトを呼び出すことによって、<xref:System.Tuple%607.%23ctor%2A>または静的な<xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6f221-111">You can instantiate a <xref:System.Tuple%607> object by calling either the <xref:System.Tuple%607.%23ctor%2A> or the static <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="6f221-112">タプルのコンポーネントの値を取得するには、読み取り専用を使用して<xref:System.Tuple%607.Item1%2A>、 <xref:System.Tuple%607.Item2%2A>、 <xref:System.Tuple%607.Item3%2A>、 <xref:System.Tuple%607.Item4%2A>、 <xref:System.Tuple%607.Item5%2A>、 <xref:System.Tuple%607.Item6%2A>、および<xref:System.Tuple%607.Item7%2A>インスタンスのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="6f221-112">You can retrieve the value of the tuple's components by using the read-only <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> instance properties.</span></span>  
  
 <span data-ttu-id="6f221-113">タプルは、4 つの方法でよく使用されます。</span><span class="sxs-lookup"><span data-stu-id="6f221-113">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="6f221-114">単一のデータ セットを表します。</span><span class="sxs-lookup"><span data-stu-id="6f221-114">To represent a single set of data.</span></span> <span data-ttu-id="6f221-115">たとえば、タプルは、データベースのレコードを表すことができ、そのコンポーネントは、レコードの個々 のフィールドを表すことができます。</span><span class="sxs-lookup"><span data-stu-id="6f221-115">For example, a tuple can represent a database record, and its components can represent individual fields of the record.</span></span>  
  
-   <span data-ttu-id="6f221-116">簡単にアクセスして、データ セットの操作を提供します。</span><span class="sxs-lookup"><span data-stu-id="6f221-116">To provide easy access to, and manipulation of, a data set.</span></span> <span data-ttu-id="6f221-117">次の例では、定義、 <xref:System.Tuple%607> 2000年から 1950年から各国勢調査のニューヨーク市の人口データを格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-117">The following example defines a <xref:System.Tuple%607> object that contains population data for New York City for each census from 1950 through 2000.</span></span> <span data-ttu-id="6f221-118">7 組に渡される、`ComputePopulationChange`メソッドで、全体の 60 年の期間の変更の年間料金と同様に、censuses 間の変更の年間の率を計算します。</span><span class="sxs-lookup"><span data-stu-id="6f221-118">The septuple is passed to the `ComputePopulationChange` method, which calculates the annual rate of change between censuses, as well as the annual rate of change for the entire 60 year period.</span></span>  
  
     [!code-csharp[System.Tuple\`7.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.class/cs/example1.cs#1)]
     [!code-vb[System.Tuple\`7.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.class/vb/example1.vb#1)]  
  
-   <span data-ttu-id="6f221-119">使用せず、メソッドから複数の値を返す`out`パラメーター (C#) または`ByRef`(Visual Basic) でのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="6f221-119">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="6f221-120">たとえば、前の例はで、市区町村名と共に、計算された統計情報を返します、<xref:System.Tuple%607>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-120">For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%607> object.</span></span>  
  
-   <span data-ttu-id="6f221-121">1 つのパラメーターを使用してメソッドには、複数値を渡す。</span><span class="sxs-lookup"><span data-stu-id="6f221-121">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="6f221-122">たとえば、<xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType>メソッドが 1 つのパラメーターの起動時にスレッドを実行する方法の 1 つの値を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="6f221-122">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="6f221-123">指定した場合、<xref:System.Tuple%607>メソッドの引数としてオブジェクトのデータの 7 つの項目を含む、スレッドのスタートアップ ルーチンを指定することができます。</span><span class="sxs-lookup"><span data-stu-id="6f221-123">If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the thread's startup routine with seven items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3, !T4 item4, !T5 item5, !T6 item6, !T7 item7) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6, item7 As T7)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7);" />
      <MemberSignature Language="F#" Value="new Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt; : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 -&gt; Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;" Usage="new System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt; (item1, item2, item3, item4, item5, item6, item7)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
        <Parameter Name="item7" Type="T7" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="6f221-124">組の 1 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="6f221-124">The value of the tuple's first component.</span></span></param>
        <param name="item2"><span data-ttu-id="6f221-125">組の 2 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="6f221-125">The value of the tuple's second component.</span></span></param>
        <param name="item3"><span data-ttu-id="6f221-126">組の 3 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="6f221-126">The value of the tuple's third component.</span></span></param>
        <param name="item4"><span data-ttu-id="6f221-127">組の 4 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="6f221-127">The value of the tuple's fourth component</span></span></param>
        <param name="item5"><span data-ttu-id="6f221-128">組の 5 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="6f221-128">The value of the tuple's fifth component.</span></span></param>
        <param name="item6"><span data-ttu-id="6f221-129">組の 6 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="6f221-129">The value of the tuple's sixth component.</span></span></param>
        <param name="item7"><span data-ttu-id="6f221-130">組の 7 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="6f221-130">The value of the tuple's seventh component.</span></span></param>
        <summary><span data-ttu-id="6f221-131"><see cref="T:System.Tuple`7" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6f221-131">Initializes a new instance of the <see cref="T:System.Tuple`7" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f221-132">静的なを使用する<xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=nameWithType>メソッドを明示的にそのコンポーネントの種類を指定しなくても 7 組オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="6f221-132">You can use the static <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=nameWithType> method to instantiate a 7-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="6f221-133">次の例では、 <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=nameWithType> 7 組の最初のコンポーネントが型をインスタンス化するメソッド<xref:System.String>と残りのコンポーネントが型の<xref:System.Int32>します。</span><span class="sxs-lookup"><span data-stu-id="6f221-133">The following example uses the <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=nameWithType> method to instantiate a 7-tuple whose first component is of type <xref:System.String> and whose remaining components are of type <xref:System.Int32>.</span></span>  
  
 [!code-csharp[System.Tuple.Create#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#13)]
 [!code-vb[System.Tuple.Create#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#13)]  
  
 <span data-ttu-id="6f221-134">これは、次の呼び出しに、<xref:System.Tuple%607.%23ctor%2A>クラスのコンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="6f221-134">This is equivalent to the following call to the <xref:System.Tuple%607.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple.Create#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#14)]
 [!code-vb[System.Tuple.Create#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="6f221-135">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-135">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="6f221-136">現在の <see cref="T:System.Tuple`7" /> オブジェクトが、指定されたオブジェクトと等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="6f221-136">Returns a value that indicates whether the current <see cref="T:System.Tuple`7" /> object is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="6f221-137">現在のインスタンスが指定したオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6f221-137"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f221-138">`obj`パラメーターは、次の条件下で現在のインスタンスと等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="6f221-138">The `obj` parameter is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="6f221-139"><xref:System.Tuple%607>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-139">It is a <xref:System.Tuple%607> object.</span></span>  
  
-   <span data-ttu-id="6f221-140">その 7 つのコンポーネントでは、現在のインスタンスと同じ型です。</span><span class="sxs-lookup"><span data-stu-id="6f221-140">Its seven components are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="6f221-141">その 7 つのコンポーネントは、現在のインスタンスのと同じです。</span><span class="sxs-lookup"><span data-stu-id="6f221-141">Its seven components are equal to those of the current instance.</span></span> <span data-ttu-id="6f221-142">等しいかどうかは、各コンポーネントの既定のオブジェクトの等値比較子によって判断されます。</span><span class="sxs-lookup"><span data-stu-id="6f221-142">Equality is determined by the default object equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f221-143">次の例では、人口データを含むロサンゼルスとニューヨーク 1950年から 2000年に 6 組の配列を定義します。</span><span class="sxs-lookup"><span data-stu-id="6f221-143">The following example defines an array of sextuples that contain population data for Los Angeles and New York from 1950 to 2000.</span></span> <span data-ttu-id="6f221-144">各 7 組の最初のコンポーネントは、市区町村を識別します。</span><span class="sxs-lookup"><span data-stu-id="6f221-144">The first component of each septuple identifies the city.</span></span> <span data-ttu-id="6f221-145">最初の 4 番目と 3 番目に、septuples ニューヨークのデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="6f221-145">The first, third, and fourth septuples contain data for New York.</span></span> <span data-ttu-id="6f221-146">最初の 7 組が第 7 組の重複しています。</span><span class="sxs-lookup"><span data-stu-id="6f221-146">The first septuple is a duplicate of the fourth septuple.</span></span> <span data-ttu-id="6f221-147">7 組の 3 つ目は、"New York"ではなく"新規 York City"として市区町村を識別します。</span><span class="sxs-lookup"><span data-stu-id="6f221-147">The third septuple identifies the city as "New York City" instead of "New York".</span></span> <span data-ttu-id="6f221-148">例に示す、第 7 組は、最初と同じだけ 7 組。</span><span class="sxs-lookup"><span data-stu-id="6f221-148">As the example shows, only the fourth septuple is equal to the first septuple.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`7.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6f221-149">現在の <see cref="T:System.Tuple`7" /> オブジェクトのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="6f221-149">Returns the hash code for the current <see cref="T:System.Tuple`7" /> object.</span></span></summary>
        <returns><span data-ttu-id="6f221-150">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="6f221-150">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item1 : 'T1" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f221-151">現在の <see cref="T:System.Tuple`7" /> オブジェクトの 1 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6f221-151">Gets the value of the current <see cref="T:System.Tuple`7" /> object's first component.</span></span></summary>
        <value><span data-ttu-id="6f221-152">現在の <see cref="T:System.Tuple`7" /> オブジェクトの 1 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="6f221-152">The value of the current <see cref="T:System.Tuple`7" /> object's first component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f221-153">型を動的に決定できます、<xref:System.Tuple%607.Item1%2A>で 2 つの方法のいずれかのコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="6f221-153">You can dynamically determine the type of the <xref:System.Tuple%607.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="6f221-154">呼び出すことによって、`GetType`メソッドによって返される値を<xref:System.Tuple%607.Item1%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6f221-154">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="6f221-155">取得することによって、<xref:System.Type>を表すオブジェクトを<xref:System.Tuple%607>オブジェクトし、によって返される配列から最初の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6f221-155">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f221-156">次の例の配列を定義する<xref:System.Tuple%607>コンポーネントが含まれる 2000 1950年から 3 つの米国の都市 (ニューヨーク、シカゴ、およびロサンゼルス) の人口データを格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-156">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="6f221-157">データの一覧を表示するテーブルが表示されます。</span><span class="sxs-lookup"><span data-stu-id="6f221-157">It then displays a table that lists the data.</span></span> <span data-ttu-id="6f221-158">市区町村名を表示するには、値を取得、<xref:System.Tuple%607.Item1%2A>プロパティごとに<xref:System.Tuple%607>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-158">To display the city name, it retrieves the value of the <xref:System.Tuple%607.Item1%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item2 : 'T2" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f221-159">現在の <see cref="T:System.Tuple`7" /> オブジェクトの 2 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6f221-159">Gets the value of the current <see cref="T:System.Tuple`7" /> object's second component.</span></span></summary>
        <value><span data-ttu-id="6f221-160">現在の <see cref="T:System.Tuple`7" /> オブジェクトの 2 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="6f221-160">The value of the current <see cref="T:System.Tuple`7" /> object's second component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f221-161">型を動的に決定できます、<xref:System.Tuple%607.Item2%2A>で 2 つの方法のいずれかのコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="6f221-161">You can dynamically determine the type of the <xref:System.Tuple%607.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="6f221-162">呼び出すことによって、`GetType`メソッドによって返される値を<xref:System.Tuple%607.Item2%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6f221-162">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="6f221-163">取得することによって、<xref:System.Type>を表すオブジェクトを<xref:System.Tuple%607>オブジェクトし、によって返される配列から 2 番目の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6f221-163">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f221-164">次の例の配列を定義する<xref:System.Tuple%607>コンポーネントが含まれる 2000 1950年から 3 つの米国の都市 (ニューヨーク、シカゴ、およびロサンゼルス) の人口データを格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-164">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="6f221-165">データの一覧を表示するテーブルが表示されます。</span><span class="sxs-lookup"><span data-stu-id="6f221-165">It then displays a table that lists the data.</span></span> <span data-ttu-id="6f221-166">値を取得、1950 年の人口を表示する、<xref:System.Tuple%607.Item2%2A>プロパティごとに<xref:System.Tuple%607>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-166">To display the population in 1950, it retrieves the value of the <xref:System.Tuple%607.Item2%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item3 : 'T3" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f221-167">現在の <see cref="T:System.Tuple`7" /> オブジェクトの 3 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6f221-167">Gets the value of the current <see cref="T:System.Tuple`7" /> object's third component.</span></span></summary>
        <value><span data-ttu-id="6f221-168">現在の <see cref="T:System.Tuple`7" /> オブジェクトの 3 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="6f221-168">The value of the current <see cref="T:System.Tuple`7" /> object's third component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f221-169">型を動的に決定できます、<xref:System.Tuple%607.Item3%2A>で 2 つの方法のいずれかのコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="6f221-169">You can dynamically determine the type of the <xref:System.Tuple%607.Item3%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="6f221-170">呼び出すことによって、`GetType`メソッドによって返される値を<xref:System.Tuple%607.Item3%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6f221-170">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item3%2A> property.</span></span>  
  
-   <span data-ttu-id="6f221-171">取得することによって、<xref:System.Type>を表すオブジェクトを<xref:System.Tuple%607>オブジェクトし、によって返される配列から 3 番目の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6f221-171">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f221-172">次の例の配列を定義する<xref:System.Tuple%607>コンポーネントが含まれる 2000 1950年から 3 つの米国の都市 (ニューヨーク、シカゴ、およびロサンゼルス) の人口データを格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-172">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="6f221-173">データの一覧を表示するテーブルが表示されます。</span><span class="sxs-lookup"><span data-stu-id="6f221-173">It then displays a table that lists the data.</span></span> <span data-ttu-id="6f221-174">1960 年の人口を表示するには、値を取得、<xref:System.Tuple%607.Item3%2A>プロパティごとに<xref:System.Tuple%607>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-174">To display the population in 1960, it retrieves the value of the <xref:System.Tuple%607.Item3%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item4">
      <MemberSignature Language="C#" Value="public T4 Item4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T4 Item4" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item4" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item4 As T4" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T4 Item4 { T4 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item4 : 'T4" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f221-175">現在の <see cref="T:System.Tuple`7" /> オブジェクトの 4 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6f221-175">Gets the value of the current <see cref="T:System.Tuple`7" /> object's fourth component.</span></span></summary>
        <value><span data-ttu-id="6f221-176">現在の <see cref="T:System.Tuple`7" /> オブジェクトの 4 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="6f221-176">The value of the current <see cref="T:System.Tuple`7" /> object's fourth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f221-177">型を動的に決定できます、<xref:System.Tuple%607.Item4%2A>で 2 つの方法のいずれかのコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="6f221-177">You can dynamically determine the type of the <xref:System.Tuple%607.Item4%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="6f221-178">呼び出すことによって、`GetType`メソッドによって返される値を<xref:System.Tuple%607.Item4%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6f221-178">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item4%2A> property.</span></span>  
  
-   <span data-ttu-id="6f221-179">取得することによって、<xref:System.Type>を表すオブジェクトを<xref:System.Tuple%607>オブジェクトし、によって返される配列から 4 番目の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6f221-179">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the fourth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f221-180">次の例の配列を定義する<xref:System.Tuple%607>コンポーネントが含まれる 2000 1950年から 3 つの米国の都市 (ニューヨーク、シカゴ、およびロサンゼルス) の人口データを格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-180">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="6f221-181">データの一覧を表示するテーブルが表示されます。</span><span class="sxs-lookup"><span data-stu-id="6f221-181">It then displays a table that lists the data.</span></span> <span data-ttu-id="6f221-182">1970 年の人口を表示するには、値を取得、<xref:System.Tuple%607.Item4%2A>プロパティごとに<xref:System.Tuple%607>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-182">To display the population in 1970, it retrieves the value of the <xref:System.Tuple%607.Item4%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item5">
      <MemberSignature Language="C#" Value="public T5 Item5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T5 Item5" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item5 As T5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T5 Item5 { T5 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item5 : 'T5" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T5</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f221-183">現在の <see cref="T:System.Tuple`7" /> オブジェクトの 5 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6f221-183">Gets the value of the current <see cref="T:System.Tuple`7" /> object's fifth component.</span></span></summary>
        <value><span data-ttu-id="6f221-184">現在の <see cref="T:System.Tuple`7" /> オブジェクトの 5 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="6f221-184">The value of the current <see cref="T:System.Tuple`7" /> object's fifth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f221-185">型を動的に決定できます、<xref:System.Tuple%607.Item5%2A>で 2 つの方法のいずれかのコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="6f221-185">You can dynamically determine the type of the <xref:System.Tuple%607.Item5%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="6f221-186">呼び出すことによって、`GetType`メソッドによって返される値を<xref:System.Tuple%607.Item5%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6f221-186">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item5%2A> property.</span></span>  
  
-   <span data-ttu-id="6f221-187">取得することによって、<xref:System.Type>を表すオブジェクトを<xref:System.Tuple%607>オブジェクト、およびによって返される配列から 5 番目の要素を取得するにはその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6f221-187">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the fifth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f221-188">次の例の配列を定義する<xref:System.Tuple%607>コンポーネントが含まれる 2000 1950年から 3 つの米国の都市 (ニューヨーク、シカゴ、およびロサンゼルス) の人口データを格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-188">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="6f221-189">データの一覧を表示するテーブルが表示されます。</span><span class="sxs-lookup"><span data-stu-id="6f221-189">It then displays a table that lists the data.</span></span> <span data-ttu-id="6f221-190">1980 の人口を表示するには、値を取得、<xref:System.Tuple%607.Item5%2A>プロパティごとに<xref:System.Tuple%607>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-190">To display the population in 1980, it retrieves the value of the <xref:System.Tuple%607.Item5%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item6">
      <MemberSignature Language="C#" Value="public T6 Item6 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T6 Item6" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item6" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item6 As T6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T6 Item6 { T6 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item6 : 'T6" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item6" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T6</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f221-191">現在の <see cref="T:System.Tuple`7" /> オブジェクトの 6 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6f221-191">Gets the value of the current <see cref="T:System.Tuple`7" /> object's sixth component.</span></span></summary>
        <value><span data-ttu-id="6f221-192">現在の <see cref="T:System.Tuple`7" /> オブジェクトの 6 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="6f221-192">The value of the current <see cref="T:System.Tuple`7" /> object's sixth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f221-193">型を動的に決定できます、<xref:System.Tuple%607.Item6%2A>で 2 つの方法のいずれかのコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="6f221-193">You can dynamically determine the type of the <xref:System.Tuple%607.Item6%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="6f221-194">呼び出すことによって、`GetType`メソッドによって返される値を<xref:System.Tuple%607.Item6%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6f221-194">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item6%2A> property.</span></span>  
  
-   <span data-ttu-id="6f221-195">取得することによって、<xref:System.Type>を表すオブジェクトを<xref:System.Tuple%607>オブジェクト、およびによって返される配列から 6 番目の要素を取得するにはその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6f221-195">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the sixth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f221-196">次の例の配列を定義する<xref:System.Tuple%607>コンポーネントが含まれる 2000 1950年から 3 つの米国の都市 (ニューヨーク、シカゴ、およびロサンゼルス) の人口データを格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-196">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="6f221-197">データの一覧を表示するテーブルが表示されます。</span><span class="sxs-lookup"><span data-stu-id="6f221-197">It then displays a table that lists the data.</span></span> <span data-ttu-id="6f221-198">1990 年の人口を表示するには、値を取得、<xref:System.Tuple%607.Item6%2A>プロパティごとに<xref:System.Tuple%607>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-198">To display the population in 1990, it retrieves the value of the <xref:System.Tuple%607.Item6%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item7">
      <MemberSignature Language="C#" Value="public T7 Item7 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T7 Item7" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.Item7" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item7 As T7" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T7 Item7 { T7 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item7 : 'T7" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;.Item7" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T7</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f221-199">現在の <see cref="T:System.Tuple`7" /> オブジェクトの 7 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6f221-199">Gets the value of the current <see cref="T:System.Tuple`7" /> object's seventh component.</span></span></summary>
        <value><span data-ttu-id="6f221-200">現在の <see cref="T:System.Tuple`7" /> オブジェクトの 7 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="6f221-200">The value of the current <see cref="T:System.Tuple`7" /> object's seventh component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f221-201">型を動的に決定できます、<xref:System.Tuple%607.Item7%2A>で 2 つの方法のいずれかのコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="6f221-201">You can dynamically determine the type of the <xref:System.Tuple%607.Item7%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="6f221-202">呼び出すことによって、`GetType`メソッドによって返される値を<xref:System.Tuple%607.Item7%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6f221-202">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item7%2A> property.</span></span>  
  
-   <span data-ttu-id="6f221-203">取得することによって、<xref:System.Type>を表すオブジェクトを<xref:System.Tuple%607>オブジェクト、およびによって返される配列から 7 番目の要素を取得するにはその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6f221-203">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the seventh element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f221-204">次の例の配列を定義する<xref:System.Tuple%607>コンポーネントが含まれる 2000 1950年から 3 つの米国の都市 (ニューヨーク、シカゴ、およびロサンゼルス) の人口データを格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-204">The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000.</span></span> <span data-ttu-id="6f221-205">データの一覧を表示するテーブルが表示されます。</span><span class="sxs-lookup"><span data-stu-id="6f221-205">It then displays a table that lists the data.</span></span> <span data-ttu-id="6f221-206">2000 年の人口を表示するには、値を取得、<xref:System.Tuple%607.Item7%2A>プロパティごとに<xref:System.Tuple%607>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-206">To display the population in 2000, it retrieves the value of the <xref:System.Tuple%607.Item7%2A> property for each <xref:System.Tuple%607> object.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="6f221-207">現在のインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-207">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="6f221-208">比較用のカスタムの規則を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-208">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="6f221-209">指定された比較子を使用して現在の <see cref="T:System.Tuple`7" /> オブジェクトと指定されたオブジェクトを比較し、並べ替え順序において、現在のオブジェクトの位置が指定されたオブジェクトの前になるか、後ろになるか、同じになるかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="6f221-209">Compares the current <see cref="T:System.Tuple`7" /> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="6f221-210">並べ替え順序における、このインスタンスと <paramref name="other" /> の相対位置を示す符号付き整数値 (次の表を参照)。</span><span class="sxs-lookup"><span data-stu-id="6f221-210">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="6f221-211">[値]</span><span class="sxs-lookup"><span data-stu-id="6f221-211">Value</span></span> 
 </term><description> <span data-ttu-id="6f221-212">説明</span><span class="sxs-lookup"><span data-stu-id="6f221-212">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="6f221-213">負の整数</span><span class="sxs-lookup"><span data-stu-id="6f221-213">A negative integer</span></span> 
 </term><description> <span data-ttu-id="6f221-214">このインスタンスの位置が <paramref name="other" /> よりも前です。</span><span class="sxs-lookup"><span data-stu-id="6f221-214">This instance precedes <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="6f221-215">0</span><span class="sxs-lookup"><span data-stu-id="6f221-215">Zero</span></span> 
 </term><description> <span data-ttu-id="6f221-216">このインスタンスと <paramref name="other" /> の位置は、並べ替え順序において同じです。</span><span class="sxs-lookup"><span data-stu-id="6f221-216">This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="6f221-217">正の整数</span><span class="sxs-lookup"><span data-stu-id="6f221-217">A positive integer</span></span> 
 </term><description> <span data-ttu-id="6f221-218">このインスタンスの位置が <paramref name="other" /> よりも後ろです。</span><span class="sxs-lookup"><span data-stu-id="6f221-218">This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f221-219">このメンバーは、明示的なインターフェイス実装です。</span><span class="sxs-lookup"><span data-stu-id="6f221-219">This member is an explicit interface implementation.</span></span> <span data-ttu-id="6f221-220">これは、<xref:System.Tuple%607> のインスタンスが <xref:System.Collections.IStructuralComparable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="6f221-220">It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="6f221-221">このメソッドでは、カスタマイズした比較を定義できます。<xref:System.Tuple%607>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-221">This method lets you define customized comparisons of <xref:System.Tuple%607> objects.</span></span> <span data-ttu-id="6f221-222">たとえば、注文には、このメソッドを使用できます<xref:System.Tuple%607>オブジェクトは、特定のコンポーネントの値に基づきます。</span><span class="sxs-lookup"><span data-stu-id="6f221-222">For example, you can use this method to order <xref:System.Tuple%607> objects based on the value of a specific component.</span></span>  
  
 <span data-ttu-id="6f221-223">コレクションを並べ替えることで最もよく呼び出されますが、このメソッドの直接呼び出し、メソッドが含まれる<xref:System.Collections.IComparer>パラメーター コレクションのメンバーの順序付けをします。</span><span class="sxs-lookup"><span data-stu-id="6f221-223">Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="6f221-224">によって呼び出されますなど、<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType>メソッドと<xref:System.Collections.SortedList.Add%2A>のメソッド、<xref:System.Collections.SortedList>を使用してインスタンス化されるオブジェクト、<xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="6f221-224">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="6f221-225"><xref:System.Tuple%607.System%23Collections%23IStructuralComparable%23CompareTo%2A>並べ替え操作で使用するためのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="6f221-225">The <xref:System.Tuple%607.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="6f221-226">また、比較の主な目的は、2 つのオブジェクトが等しいかどうかを判断するときにない使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6f221-226">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="6f221-227">2 つのオブジェクトが等しいかどうかを確認するのには、呼び出し、<xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6f221-227">To determine whether two objects are equal, call the <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f221-228">次の例の配列を作成する<xref:System.Tuple%607>1950年から 2000 の 3 つの米国都市の人口データが含まれているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-228">The following example creates an array of <xref:System.Tuple%607> objects that contains population data for three U.S. cities from 1950 to 2000.</span></span> <span data-ttu-id="6f221-229">7 組の最初のコンポーネントは、市区町村の名前です。</span><span class="sxs-lookup"><span data-stu-id="6f221-229">The septuple's first component is the city name.</span></span> <span data-ttu-id="6f221-230">残りの 5 つのコンポーネントは、2000、1950年から 10 年間の間隔で人口を表します。</span><span class="sxs-lookup"><span data-stu-id="6f221-230">The remaining five components represent the population at 10-year intervals from 1950 to 2000.</span></span>  
  
 <span data-ttu-id="6f221-231">`PopulationComparer`クラスには、<xref:System.Collections.IComparer>の配列は、実装は、そのコンポーネントのいずれかでソートする septuples します。</span><span class="sxs-lookup"><span data-stu-id="6f221-231">The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of septuples to be sorted by any one of its components.</span></span> <span data-ttu-id="6f221-232">2 つの値が提供される、`PopulationComparer`クラスのコンス トラクターに。並べ替え順序を定義するコンポーネントの位置と<xref:System.Boolean>組オブジェクトを昇順または降順で並べ替える必要があるかどうかを示す値です。</span><span class="sxs-lookup"><span data-stu-id="6f221-232">Two values are provided to the `PopulationComparer` class in its constructor: The position of the component that defines the sort order, and a <xref:System.Boolean> value that indicates whether the tuple objects should be sorted in ascending or descending order.</span></span>  
  
 <span data-ttu-id="6f221-233">例では、し、並べ替え配列内の要素を表示、3 番目のコンポーネント (1960 年の人口) で並べ替えて、それらが表示されますと 6 番目のコンポーネント (1990 年の人口) で並べ替えてし、表示されます。</span><span class="sxs-lookup"><span data-stu-id="6f221-233">The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1960) and displays them, and then sorts them by the sixth component (the population in 1990) and displays them.</span></span>  
  
 [!code-csharp[System.Tuple\`7.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`7.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6f221-234"><paramref name="other" /> は <see cref="T:System.Tuple`7" /> オブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="6f221-234"><paramref name="other" /> is not a <see cref="T:System.Tuple`7" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="6f221-235">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-235">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="6f221-236">2 つのオブジェクトが等しいかどうかの評価に使用するメソッドを定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-236">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="6f221-237">指定された比較メソッドに基づいて、現在の <see cref="T:System.Tuple`7" /> オブジェクトが指定したオブジェクトと等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="6f221-237">Returns a value that indicates whether the current <see cref="T:System.Tuple`7" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns><span data-ttu-id="6f221-238">現在のインスタンスが指定したオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6f221-238"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f221-239">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="6f221-239">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6f221-240">これは、<xref:System.Tuple%607> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="6f221-240">It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="6f221-241"><xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>がない場合にのみ実装が呼び出される`null`、正常にすることができるかどうか、キャスト (C#) または変換 (Visual Basic) で、<xref:System.Tuple%607>コンポーネントが現在のインスタンスと同じ型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-241">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if other is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%607> object whose components are of the same types as the current instance.</span></span> <span data-ttu-id="6f221-242"><xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29>メソッドの最初のパス、<xref:System.Tuple%607.Item1%2A>の値、<xref:System.Tuple%607>と比較するオブジェクト、<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>実装します。</span><span class="sxs-lookup"><span data-stu-id="6f221-242">The <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%607.Item1%2A> values of the <xref:System.Tuple%607> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="6f221-243">このメソッドの呼び出しが返された場合`true`、メソッドが再度呼び出され、渡された、 <xref:System.Tuple%607.Item2%2A> 、2 つの値<xref:System.Tuple%607>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-243">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%607.Item2%2A> values of the two <xref:System.Tuple%607> objects.</span></span> <span data-ttu-id="6f221-244">これは、メソッドの呼び出しから制御されるまで続行`false`の特定のペアを比較すると`Item`値、または 2 つ<xref:System.Tuple%607.Item7%2A>値は、メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="6f221-244">This continues until the method call returns `false` when it compares a specific pair of `Item` values, or the two <xref:System.Tuple%607.Item7%2A> values are passed to the method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f221-245">次の例では、定義、`RateComparer`等しいかどうか、カスタムのテストを実行するクラス。</span><span class="sxs-lookup"><span data-stu-id="6f221-245">The following example defines a `RateComparer` class that performs a custom test for equality.</span></span> <span data-ttu-id="6f221-246">場合に渡される値、<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>メソッドが型<xref:System.Single>または<xref:System.Double>メソッドは、3 つまでの小数部の桁数を使用して、等しいかどうかテストします。</span><span class="sxs-lookup"><span data-stu-id="6f221-246">If the values that are passed to its <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method are of type <xref:System.Single> or <xref:System.Double>, the method tests for equality by using only up to three fractional digits.</span></span> <span data-ttu-id="6f221-247">それ以外の場合、単純に呼び出して、`x`パラメーターの`Equals`メソッド。</span><span class="sxs-lookup"><span data-stu-id="6f221-247">Otherwise, it simply calls the `x` parameter's `Equals` method.</span></span> <span data-ttu-id="6f221-248">これを使用する例を示します<xref:System.Collections.IEqualityComparer>4 つかどうかを判断する実装<xref:System.Tuple%607>1950 ~ 2000 の population の変更率のデータが含まれているオブジェクトが等しい。</span><span class="sxs-lookup"><span data-stu-id="6f221-248">The example uses this <xref:System.Collections.IEqualityComparer> implementation to determine whether four <xref:System.Tuple%607> objects that contain data on the rate of population change between 1950 and 2000 are equal.</span></span>  
  
 [!code-csharp[System.Tuple\`7.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`7.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="6f221-249">現在の <see cref="T:System.Tuple`7" /> オブジェクトのハッシュ コードを計算する <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> メソッドを持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-249">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`7" /> object.</span></span></param>
        <summary><span data-ttu-id="6f221-250">指定した計算メソッドを使用して、現在の <see cref="T:System.Tuple`7" /> オブジェクトのハッシュ コードを計算します。</span><span class="sxs-lookup"><span data-stu-id="6f221-250">Calculates the hash code for the current <see cref="T:System.Tuple`7" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="6f221-251">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="6f221-251">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f221-252">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="6f221-252">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6f221-253">これは、<xref:System.Tuple%607> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="6f221-253">It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="6f221-254">メソッドは単に、比較子オブジェクトの呼び出しをラップします<xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType>実装します。</span><span class="sxs-lookup"><span data-stu-id="6f221-254">the method simply wraps a call to the comparer object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="6f221-255">2 つのハッシュ コードの計算に使用されるアルゴリズムが同じハッシュ コードを返す必要があります<xref:System.Tuple%607>オブジェクトと等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="6f221-255">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%607> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="6f221-256">現在のインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-256">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="6f221-257">現在の <see cref="T:System.Tuple`7" /> オブジェクトと指定したオブジェクトを比較して、現在のオブジェクトが、並べ替え順序において、指定したオブジェクトの前後または同じ位置のいずれにあるかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="6f221-257">Compares the current <see cref="T:System.Tuple`7" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="6f221-258">並べ替え順序における、このインスタンスと <paramref name="obj" /> の相対位置を示す符号付き整数値 (次の表を参照)。</span><span class="sxs-lookup"><span data-stu-id="6f221-258">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="6f221-259">[値]</span><span class="sxs-lookup"><span data-stu-id="6f221-259">Value</span></span> 
 </term><description> <span data-ttu-id="6f221-260">説明</span><span class="sxs-lookup"><span data-stu-id="6f221-260">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="6f221-261">負の整数</span><span class="sxs-lookup"><span data-stu-id="6f221-261">A negative integer</span></span> 
 </term><description> <span data-ttu-id="6f221-262">このインスタンスの位置が <paramref name="obj" /> よりも前です。</span><span class="sxs-lookup"><span data-stu-id="6f221-262">This instance precedes <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="6f221-263">0</span><span class="sxs-lookup"><span data-stu-id="6f221-263">Zero</span></span> 
 </term><description> <span data-ttu-id="6f221-264">このインスタンスと <paramref name="obj" /> の位置は、並べ替え順序において同じです。</span><span class="sxs-lookup"><span data-stu-id="6f221-264">This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="6f221-265">正の整数</span><span class="sxs-lookup"><span data-stu-id="6f221-265">A positive integer</span></span> 
 </term><description> <span data-ttu-id="6f221-266">このインスタンスの位置が <paramref name="obj" /> よりも後ろです。</span><span class="sxs-lookup"><span data-stu-id="6f221-266">This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f221-267">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="6f221-267">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6f221-268">これは、<xref:System.Tuple%607> のインスタンスが <xref:System.IComparable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="6f221-268">It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="6f221-269">この方法では、<xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType>の実装、<xref:System.Tuple%607>クラス。</span><span class="sxs-lookup"><span data-stu-id="6f221-269">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%607> class.</span></span> <span data-ttu-id="6f221-270">コレクションの並べ替えの既定のオーバー ロードによって最もよく呼び出されますが、メソッドを直接呼び出すことができます、メソッドなど<xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType>と<xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>コレクションのメンバーの順序付けをします。</span><span class="sxs-lookup"><span data-stu-id="6f221-270">Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="6f221-271"><xref:System.Tuple%607.System%23IComparable%23CompareTo%2A>並べ替え操作で使用するためのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="6f221-271">The <xref:System.Tuple%607.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="6f221-272">また、比較の主な目的は、2 つのオブジェクトが等しいかどうかを判断するときにない使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6f221-272">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="6f221-273">2 つのオブジェクトが等しいかどうかを確認するのには、呼び出し、<xref:System.Tuple%607.Equals%28System.Object%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6f221-273">To determine whether two objects are equal, call the <xref:System.Tuple%607.Equals%28System.Object%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="6f221-274">このメソッドは、各コンポーネントを比較するのにオブジェクトの既定の比較子を使用します。</span><span class="sxs-lookup"><span data-stu-id="6f221-274">This method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f221-275">次の例の配列を作成する<xref:System.Tuple%607>2000 1950年から米国の 3 つの都市の人口データを格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-275">The following example creates an array of <xref:System.Tuple%607> objects that contain population data for three cities in the United States from 1950 to 2000.</span></span> <span data-ttu-id="6f221-276">市区町村名の後に 10 年間の間隔で市区町村の人口 1950年から 2000 の 7 つのコンポーネントで構成されます。</span><span class="sxs-lookup"><span data-stu-id="6f221-276">The seven components consist of the city name followed by the city's population at 10-year intervals from 1950 to 2000.</span></span> <span data-ttu-id="6f221-277">例では、並べ替え、配列内の各タプルのコンポーネントが表示されます、配列を並べ替えを呼び出して、<xref:System.Tuple%607.ToString%2A>メソッド内の各組の表示を並べ替える順序。</span><span class="sxs-lookup"><span data-stu-id="6f221-277">The example displays the components of each tuple in the array in unsorted order, sorts the array, and then calls the <xref:System.Tuple%607.ToString%2A> method to display each tuple in sorted order.</span></span> <span data-ttu-id="6f221-278">出力は、最初のコンポーネントは、名前で配列が並べ替えられていることを示しています。</span><span class="sxs-lookup"><span data-stu-id="6f221-278">The output shows that the array has been sorted by name, which is the first component.</span></span> <span data-ttu-id="6f221-279">例では、直接呼び出しません注、<xref:System.Tuple%607.System%23IComparable%23CompareTo%28System.Object%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6f221-279">Note that the example does not directly call the <xref:System.Tuple%607.System%23IComparable%23CompareTo%28System.Object%29> method.</span></span> <span data-ttu-id="6f221-280">このメソッドの呼び出しによって暗黙的に、<xref:System.Array.Sort%28System.Array%29>配列内の各要素のメソッド。</span><span class="sxs-lookup"><span data-stu-id="6f221-280">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`7.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`7.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6f221-281"><paramref name="obj" /> は <see cref="T:System.Tuple`7" /> オブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="6f221-281"><paramref name="obj" /> is not a <see cref="T:System.Tuple`7" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="6f221-282">指定した <see langword="Tuple" /> 要素のインデックス。</span><span class="sxs-lookup"><span data-stu-id="6f221-282">The index of the specified <see langword="Tuple" /> element.</span></span> <span data-ttu-id="6f221-283"><paramref name="index" /> は 0 から 6 までです。</span><span class="sxs-lookup"><span data-stu-id="6f221-283"><paramref name="index" /> can range from 0 to 6.</span></span></param>
        <summary><span data-ttu-id="6f221-284">指定した <see langword="Tuple" /> 要素の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6f221-284">Gets the value of the specified <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="6f221-285">指定した位置にある <see langword="Tuple" /> 要素の値。</span><span class="sxs-lookup"><span data-stu-id="6f221-285">The value of the <see langword="Tuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f221-286"><xref:System.Tuple%607.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType>プロパティは、明示的なインターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="6f221-286">The <xref:System.Tuple%607.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="6f221-287">これを呼び出すには、キャストまたは変換する必要があります、<xref:System.Tuple%607>オブジェクトを<xref:System.Runtime.CompilerServices.ITuple>インターフェイス オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-287">To call it, you must cast or convert the <xref:System.Tuple%607> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="6f221-288"><paramref name="index" /> が 0 より小さいか、6 を超えています。</span><span class="sxs-lookup"><span data-stu-id="6f221-288"><paramref name="index" /> is less than 0 or greater than 6.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`7.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f221-289"><see langword="Tuple" /> にある要素の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="6f221-289">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="6f221-290"><see cref="T:System.Tuple`7" /> オブジェクト内の要素数、7。</span><span class="sxs-lookup"><span data-stu-id="6f221-290">7, the number of elements in a <see cref="T:System.Tuple`7" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f221-291"><xref:System.Tuple%607.System%23Runtime%23CompilerServices%23ITuple%23Length%2A>プロパティは、明示的なインターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="6f221-291">The <xref:System.Tuple%607.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="6f221-292">これを呼び出すには、キャストまたは変換する必要があります、<xref:System.Tuple%607>オブジェクトを<xref:System.Runtime.CompilerServices.ITuple>インターフェイス オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-292">To call it, you must cast or convert the <xref:System.Tuple%607> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`7.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6f221-293">この <see cref="T:System.Tuple`7" /> インスタンスの値を表す文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="6f221-293">Returns a string that represents the value of this <see cref="T:System.Tuple`7" /> instance.</span></span></summary>
        <returns><span data-ttu-id="6f221-294">この <see cref="T:System.Tuple`7" /> オブジェクトの文字列表現。</span><span class="sxs-lookup"><span data-stu-id="6f221-294">The string representation of this <see cref="T:System.Tuple`7" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f221-295">このメソッドによって返される文字列の形式は (*Item1*、 *Item2*、 *Item3*、 *Item4*、 `Item5, Item6, Item7`) ここで、 *Item1*、 *Item2*、 *Item3*、 *Item4*、 *Item5*、 *Item6*、および*Item7*の値を表す、 <xref:System.Tuple%607.Item1%2A>、 <xref:System.Tuple%607.Item2%2A>、 <xref:System.Tuple%607.Item3%2A>、 <xref:System.Tuple%607.Item4%2A>、 <xref:System.Tuple%607.Item5%2A>、 <xref:System.Tuple%607.Item6%2A>、および<xref:System.Tuple%607.Item7%2A>プロパティ、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="6f221-295">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> properties, respectively.</span></span> <span data-ttu-id="6f221-296">プロパティの値のいずれかが場合`null`、として表されます<xref:System.String.Empty?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="6f221-296">If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f221-297">次の例では、定義、 <xref:System.Tuple%607> 2000年から 1950年から各国勢調査のニューヨーク市の人口データを格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f221-297">The following example defines a <xref:System.Tuple%607> object that contains population data for New York City for each census from 1950 through 2000.</span></span> <span data-ttu-id="6f221-298">呼び出して、セクスチュープルのコンポーネントが表示されます、<xref:System.Tuple%607.ToString%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="6f221-298">The components of the sextuple are then displayed by a call to the <xref:System.Tuple%607.ToString%2A> method.</span></span>  
  
 [!code-csharp[System.Tuple\`7.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`7.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>