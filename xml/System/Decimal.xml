<Type Name="Decimal" FullName="System.Decimal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7f9e186ea2a4979d7e3cf3fb0c5cb3767367e5c9" /><Meta Name="ms.sourcegitcommit" Value="9802d4c6745a8ae514b26f144fb3969265b224ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/22/2018" /><Meta Name="ms.locfileid" Value="53751519" /></Metadata><TypeSignature Language="C#" Value="public struct Decimal : IComparable, IComparable&lt;decimal&gt;, IConvertible, IEquatable&lt;decimal&gt;, IFormattable, System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Decimal extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Decimal&gt;, class System.IConvertible, class System.IEquatable`1&lt;valuetype System.Decimal&gt;, class System.IFormattable, class System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="DocId" Value="T:System.Decimal" />
  <TypeSignature Language="VB.NET" Value="Public Structure Decimal&#xA;Implements IComparable, IComparable(Of Decimal), IConvertible, IDeserializationCallback, IEquatable(Of Decimal), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Decimal : IComparable, IComparable&lt;System::Decimal&gt;, IConvertible, IEquatable&lt;System::Decimal&gt;, IFormattable, System::Runtime::Serialization::IDeserializationCallback" />
  <TypeSignature Language="F#" Value="type decimal = struct&#xA;    interface IFormattable&#xA;    interface IConvertible&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Decimal&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Decimal&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b96a8-101">10 進数の浮動小数点数を表します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-101">Represents a decimal floating-point number.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-102"><xref:System.Decimal>値の型を負の 79,228,162,514,264,337,593,543,950,335 正 79,228,162,514,264,337,593,543,950,335 から 10 進数を表します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-102">The <xref:System.Decimal> value type represents decimal numbers ranging from positive 79,228,162,514,264,337,593,543,950,335 to negative 79,228,162,514,264,337,593,543,950,335.</span></span> <span data-ttu-id="b96a8-103">既定値、`Decimal`は 0 です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-103">The default value of a `Decimal` is 0.</span></span> <span data-ttu-id="b96a8-104"><xref:System.Decimal>値の型が多数の大きな整数部と小数桁の数字と丸めエラーのないを必要とする金融の計算に適しています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-104">The <xref:System.Decimal> value type is appropriate for financial calculations that require large numbers of significant integral and fractional digits and no round-off errors.</span></span> <span data-ttu-id="b96a8-105"><xref:System.Decimal>型が丸め処理の必要性を排除していません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-105">The <xref:System.Decimal> type does not eliminate the need for rounding.</span></span> <span data-ttu-id="b96a8-106">丸めに起因するエラーが最小限に抑えられます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-106">Rather, it minimizes errors due to rounding.</span></span> <span data-ttu-id="b96a8-107">たとえば、次のコードは、1 ではなく 0.9999999999999999999999999999 の結果を生成します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-107">For example, the following code produces a result of 0.9999999999999999999999999999 instead of 1.</span></span>  
  
 [!code-cpp[System.Decimal.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal1.cpp#1)]
 [!code-csharp[System.Decimal.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs#1)]
 [!code-vb[System.Decimal.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb#1)]  
  
 <span data-ttu-id="b96a8-108">除算、乗算の結果が渡された場合、<xref:System.Math.Round%2A>メソッド、結果は次のコードに示すよう、精度が失われる悪化ありません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-108">When the result of the division and multiplication is passed to the <xref:System.Math.Round%2A> method, the result suffers no loss of precision, as the following code shows.</span></span>  
  
 [!code-cpp[System.Decimal.Class#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal2.cpp#2)]
 [!code-csharp[System.Decimal.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs#2)]
 [!code-vb[System.Decimal.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb#2)]  
  
 <span data-ttu-id="b96a8-109">10 進数は、サインオンで構成される浮動小数点値、9、0 から各桁の範囲、数値の整数部と小数部を区切る浮動小数点の位置を示すスケール ファクター、数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-109">A decimal number is a floating-point value that consists of a sign, a numeric value where each digit in the value ranges from 0 to 9, and a scaling factor that indicates the position of a floating decimal point that separates the integral and fractional parts of the numeric value.</span></span>  
  
 <span data-ttu-id="b96a8-110">バイナリ表現を<xref:System.Decimal>1 ビットの符号、96 ビット整数および 96 ビット整数の除算し、どの程度のことが、小数を指定するために使用するスケール ファクターの値が構成されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-110">The binary representation of a <xref:System.Decimal> value consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the 96-bit integer and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="b96a8-111">スケール ファクターは、0 から 28 までの範囲の指数を累乗した値 10 を暗黙的にです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-111">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span> <span data-ttu-id="b96a8-112">バイナリ表現では、そのため、 <xref:System.Decimal> 、フォームの値 ((-2<sup>96</sup> 2 に<sup>96</sup>)/10<sup>(0 ~ 28)</sup>) - ここで、(2<sup>96</sup>-1)等しい<xref:System.Decimal.MinValue>、および 2<sup>96</sup>-1 と等しい<xref:System.Decimal.MaxValue>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-112">Therefore, the binary representation of a <xref:System.Decimal> value  the form, ((-2<sup>96</sup> to 2<sup>96</sup>) / 10<sup>(0 to 28)</sup>), where -(2<sup>96</sup>-1) is equal to <xref:System.Decimal.MinValue>, and 2<sup>96</sup>-1 is equal to <xref:System.Decimal.MaxValue>.</span></span> <span data-ttu-id="b96a8-113">バイナリ表現の詳細については<xref:System.Decimal>値と例を参照してください、<xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29>コンス トラクターと<xref:System.Decimal.GetBits%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-113">For more information about the binary representation of <xref:System.Decimal> values and an example, see the <xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29> constructor and the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 <span data-ttu-id="b96a8-114">スケーリング係数が保持されますが、末尾の 0 にも、<xref:System.Decimal>数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-114">The scaling factor  also preserves any trailing zeros in a <xref:System.Decimal> number.</span></span> <span data-ttu-id="b96a8-115">後続のゼロの値には影響しません、<xref:System.Decimal>算術演算または比較操作の数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-115">Trailing zeros do not affect the value of a <xref:System.Decimal> number in arithmetic or comparison operations.</span></span> <span data-ttu-id="b96a8-116">ただし、後続のゼロ可能性がありますが明らかにして、<xref:System.Decimal.ToString%2A>メソッド、適切な形式の文字列が適用されている場合。</span><span class="sxs-lookup"><span data-stu-id="b96a8-116">However, trailing zeros might be revealed by the <xref:System.Decimal.ToString%2A> method if an appropriate format string is applied.</span></span>  
  
## <a name="conversion-considerations"></a><span data-ttu-id="b96a8-117">変換に関する考慮事項</span><span class="sxs-lookup"><span data-stu-id="b96a8-117">Conversion Considerations</span></span>  
 <span data-ttu-id="b96a8-118">この型に変換するメソッドを提供する<xref:System.Decimal>値との間<xref:System.SByte>、 <xref:System.Int16>、 <xref:System.Int32>、 <xref:System.Int64>、 <xref:System.Byte>、 <xref:System.UInt16>、 <xref:System.UInt32>、および<xref:System.UInt64>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-118">This type provides methods that convert <xref:System.Decimal> values to and from <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Byte>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64> values.</span></span> <span data-ttu-id="b96a8-119">これらの整数型に変換する変換<xref:System.Decimal>は、拡大変換すると、情報が失われたり、例外をスローすることはありません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-119">Conversions from these integral types to <xref:System.Decimal> are widening conversions that never lose information or throw exceptions.</span></span>  
  
 <span data-ttu-id="b96a8-120">変換<xref:System.Decimal>整数型のいずれかには縮小変換を丸める、<xref:System.Decimal>値を 0 方向に最も近い整数値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-120">Conversions from <xref:System.Decimal> to any of the integral types are narrowing conversions that round the <xref:System.Decimal> value to the nearest integer value toward zero.</span></span> <span data-ttu-id="b96a8-121">言語によっては、c# などの変換をサポートしても<xref:System.Decimal>値<xref:System.Char>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-121">Some languages, such as C#, also support the conversion of <xref:System.Decimal> values to <xref:System.Char> values.</span></span> <span data-ttu-id="b96a8-122">これらの変換の結果を変換先の型で表現できない場合、<xref:System.OverflowException>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-122">If the result of these conversions cannot be represented in the destination type, an <xref:System.OverflowException> exception is thrown.</span></span>  
  
 <span data-ttu-id="b96a8-123"><xref:System.Decimal>型に変換するメソッドも用意されています<xref:System.Decimal>値との間<xref:System.Single>と<xref:System.Double>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-123">The <xref:System.Decimal> type also provides methods that convert <xref:System.Decimal> values to and from <xref:System.Single> and <xref:System.Double> values.</span></span> <span data-ttu-id="b96a8-124">変換<xref:System.Decimal>に<xref:System.Single>または<xref:System.Double>は縮小変換を有効桁数が変換された値の大きさに関する情報以外を失う可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b96a8-124">Conversions from <xref:System.Decimal> to <xref:System.Single> or <xref:System.Double> are narrowing conversions that might lose precision but not information about the magnitude of the converted value.</span></span> <span data-ttu-id="b96a8-125">変換では、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-125">The conversion does not throw an exception.</span></span>  
  
 <span data-ttu-id="b96a8-126">変換<xref:System.Single>または<xref:System.Double>に<xref:System.Decimal>スロー、<xref:System.OverflowException>変換の結果として表現できない場合は例外を<xref:System.Decimal>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-126">Conversions from <xref:System.Single> or <xref:System.Double> to <xref:System.Decimal> throw an <xref:System.OverflowException> exception if the result of the conversion cannot be represented as a <xref:System.Decimal>.</span></span>  
  
## <a name="performing-operations-on-decimal-values"></a><span data-ttu-id="b96a8-127">10 進数の値に対して操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-127">Performing Operations on Decimal Values</span></span>  
 <span data-ttu-id="b96a8-128"><xref:System.Decimal>型は、加算、減算、除算、乗算、および単項否定などの標準の数値演算をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-128">The <xref:System.Decimal> type supports standard mathematical operations such as addition, subtraction, division, multiplication, and unary negation.</span></span> <span data-ttu-id="b96a8-129">バイナリ表現を直接操作することもできます。、<xref:System.Decimal>値を呼び出すことによって、<xref:System.Decimal.GetBits%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-129">You can also work directly with the binary representation of a <xref:System.Decimal> value by calling the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 <span data-ttu-id="b96a8-130">2 つを比較する<xref:System.Decimal>値、標準の数値の比較演算子を使用することも呼び出すことができます、<xref:System.Decimal.CompareTo%2A>または<xref:System.Decimal.Equals%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-130">To compare two <xref:System.Decimal> values, you can use the standard numeric comparison operators, or you can call the <xref:System.Decimal.CompareTo%2A> or <xref:System.Decimal.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="b96a8-131">メンバーを呼び出すこともできます、<xref:System.Math>さまざまな数値演算、2 つの最大値または最小値を決定する数値の絶対値の取得などを行うにはクラス<xref:System.Decimal>値、数値の符号を取得して、丸め処理数値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-131">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, determining the maximum or minimum value of two <xref:System.Decimal> values, getting the sign of a number, and rounding a number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-132">次のコード例は、<xref:System.Decimal> の使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-132">The following code example demonstrates the use of <xref:System.Decimal>.</span></span>  
  
 [!code-cpp[Decimal Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#1)]
 [!code-csharp[Decimal Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#1)]
 [!code-vb[Decimal Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="b96a8-133">この種類のすべてのメンバーは、スレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-133">All members of this type are thread safe.</span></span> <span data-ttu-id="b96a8-134">インスタンスの状態を変更する表示されるメンバーは、実際に新しい値で初期化された新しいインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-134">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="b96a8-135">として、他の種類と読み取りと書き込みをこの型のインスタンスを含む共有変数を保護する必要があるスレッド セーフを確保するロックによって。</span><span class="sxs-lookup"><span data-stu-id="b96a8-135">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.SByte" />
    <altmember cref="T:System.Int16" />
    <altmember cref="T:System.Int32" />
    <altmember cref="T:System.Int64" />
    <altmember cref="T:System.Byte" />
    <altmember cref="T:System.UInt16" />
    <altmember cref="T:System.UInt32" />
    <altmember cref="T:System.UInt64" />
    <altmember cref="T:System.Single" />
    <altmember cref="T:System.Double" />
    <altmember cref="T:System.Char" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b96a8-136"><see cref="T:System.Decimal" /> の新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-136">Initializes a new instance of <see cref="T:System.Decimal" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(double value);" />
      <MemberSignature Language="F#" Value="new decimal : double -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-137"><see cref="T:System.Decimal" /> として表す値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-137">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="b96a8-138"><see cref="T:System.Decimal" /> の新しいインスタンスを初期化し、その値を、指定した倍精度浮動小数点数に設定します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-138">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified double-precision floating-point number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-139">このコンス トラクターに丸めます`value`近似値に丸め処理を使用して、15 桁にします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-139">This constructor rounds `value` to 15 significant digits using rounding to nearest.</span></span> <span data-ttu-id="b96a8-140">これは、場合でも、数が 15 を超える数字より下位の桁はゼロ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-140">This is done even if the number has more than 15 digits and the less significant digits are zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-141">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、`Decimal`構造体、<xref:System.Double>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-141">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Reals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CPP/ctordo.cpp#2)]
 [!code-csharp[System.Decimal.Ctor.Reals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CS/ctordo.cs#2)]
 [!code-vb[System.Decimal.Ctor.Reals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/VB/ctordo.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-142"><paramref name="value" /> は <see cref="F:System.Decimal.MaxValue" /> を超えているか、または <see cref="F:System.Decimal.MinValue" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-142"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
<span data-ttu-id="b96a8-143">または</span><span class="sxs-lookup"><span data-stu-id="b96a8-143">-or-</span></span> 
 <span data-ttu-id="b96a8-144"><paramref name="value" /> が <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.PositiveInfinity" />、または <see cref="F:System.Double.NegativeInfinity" /> です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-144"><paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(int value);" />
      <MemberSignature Language="F#" Value="new decimal : int -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-145"><see cref="T:System.Decimal" /> として表す値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-145">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="b96a8-146"><see cref="T:System.Decimal" /> の新しいインスタンスを初期化し、その値を、指定した 32 ビット符号付き整数に設定します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-146">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 32-bit signed integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b96a8-147">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、`Decimal`構造体、<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-147">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an <xref:System.Int32> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctori.cpp#1)]
 [!code-csharp[System.Decimal.Ctor.Ints#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctori.cs#1)]
 [!code-vb[System.Decimal.Ctor.Ints#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctori.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int[] bits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32[] bits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bits As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(cli::array &lt;int&gt; ^ bits);" />
      <MemberSignature Language="F#" Value="new decimal : int[] -&gt; decimal" Usage="new System.decimal bits" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bits" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="bits"><span data-ttu-id="b96a8-148">10 進値形式を格納している 32 ビット符号付き整数の配列。</span><span class="sxs-lookup"><span data-stu-id="b96a8-148">An array of 32-bit signed integers containing a representation of a decimal value.</span></span></param>
        <summary><span data-ttu-id="b96a8-149"><see cref="T:System.Decimal" /> の新しいインスタンスの値を、指定した配列に格納されている、バイナリ形式の 10 進値に初期化します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-149">Initializes a new instance of <see cref="T:System.Decimal" /> to a decimal value represented in binary and contained in a specified array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-150">バイナリ表現を<xref:System.Decimal>数は 1 ビットの符号、96 ビットの整数、および、スケール ファクターを整数値を分割し、どのような一部分は小数を指定するために使用します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-150">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="b96a8-151">スケール ファクターは、0 から 28 までの範囲の指数を累乗した値 10 を暗黙的にです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-151">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span>  
  
 <span data-ttu-id="b96a8-152">`bits` 32 ビット符号付き整数の 4 つの要素の長い配列です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-152">`bits` is a four-element long array of 32-bit signed integers.</span></span>  
  
 <span data-ttu-id="b96a8-153">`bits` [0] `bits` [1]、および`bits`[2] 96 ビット整数の数の不足、ミドル ネーム、および高の 32 ビットを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-153">`bits` [0], `bits` [1], and `bits` [2] contain the low, middle, and high 32 bits of the 96-bit integer number.</span></span>  
  
 <span data-ttu-id="b96a8-154">`bits` [3]、スケール ファクターと記号が含まれていて、次の部分で構成されています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-154">`bits` [3] contains the scale factor and sign, and consists of following parts:</span></span>  
  
 <span data-ttu-id="b96a8-155">ビット 0 ~ 15、下位のワードは使用されず、0 にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b96a8-155">Bits 0 to 15, the lower word, are unused and must be zero.</span></span>  
  
 <span data-ttu-id="b96a8-156">16 ~ 23 のビットは、番号の整数を除算する 10 の累乗を示す 0 から 28 まで指数を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="b96a8-156">Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.</span></span>  
  
 <span data-ttu-id="b96a8-157">24 ~ 30 の bits は使用されず、0 にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b96a8-157">Bits 24 to 30 are unused and must be zero.</span></span>  
  
 <span data-ttu-id="b96a8-158">31 ビットには、サインオン; が含まれています。0 は正、および 1 は負の値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-158">Bit 31 contains the sign; 0 meaning positive, and 1 meaning negative.</span></span>  
  
 <span data-ttu-id="b96a8-159">数値の値をいくつかの可能なバイナリ表現があります。すべてが均等に有効であり、数値と等価です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-159">A numeric value might have several possible binary representations; all are equally valid and numerically equivalent.</span></span> <span data-ttu-id="b96a8-160">ビット表現は、負と正の 0 によって区別に注意してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-160">Note that the bit representation differentiates between negative and positive zero.</span></span> <span data-ttu-id="b96a8-161">これらの値は、すべての操作で等しいものとして扱われます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-161">These values are treated as being equal in all operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-162">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、 `Decimal` 4 つの配列を含む構造体<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-162">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an array of four <xref:System.Int32> values.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Arrays#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CPP/ctoriarr.cpp#1)]
 [!code-csharp[System.Decimal.Ctor.Arrays#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CS/ctoriarr.cs#1)]
 [!code-vb[System.Decimal.Ctor.Arrays#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/VB/ctoriarr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b96a8-163"><paramref name="bits" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-163"><paramref name="bits" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b96a8-164"><paramref name="bits" /> の長さが 4 ではありません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-164">The length of the <paramref name="bits" /> is not 4.</span></span>  
  
<span data-ttu-id="b96a8-165">または</span><span class="sxs-lookup"><span data-stu-id="b96a8-165">-or-</span></span> 
<span data-ttu-id="b96a8-166"><paramref name="bits" /> の 10 進値の表現が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-166">The representation of the decimal value in <paramref name="bits" /> is not valid.</span></span></exception>
        <altmember cref="M:System.Decimal.GetBits(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(long value);" />
      <MemberSignature Language="F#" Value="new decimal : int64 -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-167"><see cref="T:System.Decimal" /> として表す値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-167">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="b96a8-168"><see cref="T:System.Decimal" /> の新しいインスタンスを初期化し、その値を、指定した 64 ビット符号付き整数に設定します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-168">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 64-bit signed integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b96a8-169">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、`Decimal`構造体、<xref:System.Int64>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-169">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an <xref:System.Int64> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorl.cpp#3)]
 [!code-csharp[System.Decimal.Ctor.Ints#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorl.cs#3)]
 [!code-vb[System.Decimal.Ctor.Ints#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorl.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(float value);" />
      <MemberSignature Language="F#" Value="new decimal : single -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-170"><see cref="T:System.Decimal" /> として表す値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-170">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="b96a8-171"><see cref="T:System.Decimal" /> の新しいインスタンスを初期化し、その値を、指定した単精度浮動小数点数に設定します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-171">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified single-precision floating-point number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-172">このコンス トラクターに丸めます`value`近似値に丸め処理を使用して有効桁数は 7 です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-172">This constructor rounds `value` to 7 significant digits using rounding to nearest.</span></span> <span data-ttu-id="b96a8-173">これは、場合でも、数が複数の 7 桁の数字より下位の桁はゼロ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-173">This is done even if the number has more than 7 digits and the less significant digits are zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-174">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、`Decimal`構造体、<xref:System.Single>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-174">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.Single> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Reals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CPP/ctors.cpp#1)]
 [!code-csharp[System.Decimal.Ctor.Reals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CS/ctors.cs#1)]
 [!code-vb[System.Decimal.Ctor.Reals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/VB/ctors.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-175"><paramref name="value" /> は <see cref="F:System.Decimal.MaxValue" /> を超えているか、または <see cref="F:System.Decimal.MinValue" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-175"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
<span data-ttu-id="b96a8-176">または</span><span class="sxs-lookup"><span data-stu-id="b96a8-176">-or-</span></span> 
 <span data-ttu-id="b96a8-177"><paramref name="value" /> が <see cref="F:System.Single.NaN" />、<see cref="F:System.Single.PositiveInfinity" />、または <see cref="F:System.Single.NegativeInfinity" /> です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-177"><paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="new decimal : uint32 -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-178"><see cref="T:System.Decimal" /> として表す値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-178">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="b96a8-179"><see cref="T:System.Decimal" /> の新しいインスタンスを初期化し、その値を、指定した 32 ビット符号なし整数に設定します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-179">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 32-bit unsigned integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b96a8-180">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、`Decimal`構造体、<xref:System.UInt32>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-180">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.UInt32> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorui.cpp#2)]
 [!code-csharp[System.Decimal.Ctor.Ints#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorui.cs#2)]
 [!code-vb[System.Decimal.Ctor.Ints#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorui.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="new decimal : uint64 -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-181"><see cref="T:System.Decimal" /> として表す値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-181">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="b96a8-182"><see cref="T:System.Decimal" /> の新しいインスタンスを初期化し、その値を、指定した 64 ビット符号なし整数に設定します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-182">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 64-bit unsigned integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b96a8-183">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、`Decimal`構造体、<xref:System.UInt64>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-183">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.UInt64> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorul.cpp#4)]
 [!code-csharp[System.Decimal.Ctor.Ints#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorul.cs#4)]
 [!code-vb[System.Decimal.Ctor.Ints#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorul.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int lo, int mid, int hi, bool isNegative, byte scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 lo, int32 mid, int32 hi, bool isNegative, unsigned int8 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (lo As Integer, mid As Integer, hi As Integer, isNegative As Boolean, scale As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(int lo, int mid, int hi, bool isNegative, System::Byte scale);" />
      <MemberSignature Language="F#" Value="new decimal : int * int * int * bool * byte -&gt; decimal" Usage="new System.decimal (lo, mid, hi, isNegative, scale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="lo" Type="System.Int32" />
        <Parameter Name="mid" Type="System.Int32" />
        <Parameter Name="hi" Type="System.Int32" />
        <Parameter Name="isNegative" Type="System.Boolean" />
        <Parameter Name="scale" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="lo"><span data-ttu-id="b96a8-184">96 ビット整数の下位 32 ビット。</span><span class="sxs-lookup"><span data-stu-id="b96a8-184">The low 32 bits of a 96-bit integer.</span></span></param>
        <param name="mid"><span data-ttu-id="b96a8-185">96 ビット整数の中位 32 ビット。</span><span class="sxs-lookup"><span data-stu-id="b96a8-185">The middle 32 bits of a 96-bit integer.</span></span></param>
        <param name="hi"><span data-ttu-id="b96a8-186">96 ビット整数の上位 32 ビット。</span><span class="sxs-lookup"><span data-stu-id="b96a8-186">The high 32 bits of a 96-bit integer.</span></span></param>
        <param name="isNegative"><span data-ttu-id="b96a8-187">負の数を示す場合は <see langword="true" />。正の数を示す場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b96a8-187"><see langword="true" /> to indicate a negative number; <see langword="false" /> to indicate a positive number.</span></span></param>
        <param name="scale"><span data-ttu-id="b96a8-188">0 から 28 までの 10 のべき乗。</span><span class="sxs-lookup"><span data-stu-id="b96a8-188">A power of 10 ranging from 0 to 28.</span></span></param>
        <summary><span data-ttu-id="b96a8-189"><see cref="T:System.Decimal" /> の新しいインスタンスの値を、そのインスタンスの構成部分を指定するパラメーターに従って初期化します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-189">Initializes a new instance of <see cref="T:System.Decimal" /> from parameters specifying the instance's constituent parts.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-190">バイナリ表現を<xref:System.Decimal>数は 1 ビットの符号、96 ビットの整数、および、スケール ファクターを整数値を分割し、どのような一部分は小数を指定するために使用します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-190">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="b96a8-191">スケール ファクターは、暗黙的に番号 0 から 28 までの範囲の指数を累乗した 10 です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-191">The scaling factor is implicitly the number 10 raised to an exponent ranging from 0 to 28.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-192">次のコード例がいくつか作成します`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、 `Decimal` 3 つの構造<xref:System.Int32>単語、値、<xref:System.Boolean>記号、および<xref:System.Byte>スケール ファクター。</span><span class="sxs-lookup"><span data-stu-id="b96a8-192">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with three <xref:System.Int32> value words, a <xref:System.Boolean> sign, and a <xref:System.Byte> scale factor.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Arrays#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CPP/ctoriiibby.cpp#2)]
 [!code-csharp[System.Decimal.Ctor.Arrays#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CS/ctoriiibby.cs#2)]
 [!code-vb[System.Decimal.Ctor.Arrays#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/VB/ctoriiibby.vb#2)]  
  
 <span data-ttu-id="b96a8-193">次の例では、<xref:System.Decimal.GetBits%2A>配列のコンポーネント部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-193">The following example uses the <xref:System.Decimal.GetBits%2A> method to retrieve the component parts of an array.</span></span> <span data-ttu-id="b96a8-194">使用して、この配列への呼び出しで、<xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29>新しいインスタンスを作成するコンス トラクター<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-194">It then uses this array in the call to the <xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29> constructor to instantiate a new <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Decimal.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.ctor/cs/ctor2a.cs#1)]
 [!code-vb[System.Decimal.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.ctor/vb/ctor2a.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b96a8-195"><paramref name="scale" /> が 28 を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-195"><paramref name="scale" /> is greater than 28.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static decimal Add (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Add(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Add(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Add : decimal * decimal -&gt; decimal" Usage="System.decimal.Add (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="b96a8-196">加算する 1 番目の値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-196">The first value to add.</span></span></param>
        <param name="d2"><span data-ttu-id="b96a8-197">加算する 2 番目の値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-197">The second value to add.</span></span></param>
        <summary><span data-ttu-id="b96a8-198">指定した 2 つの <see cref="T:System.Decimal" /> 値を加算します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-198">Adds two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="b96a8-199"><paramref name="d1" /> と <paramref name="d2" /> の合計。</span><span class="sxs-lookup"><span data-stu-id="b96a8-199">The sum of <paramref name="d1" /> and <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-200">次のコード サンプルの使用を示します`Add`:</span><span class="sxs-lookup"><span data-stu-id="b96a8-200">The following code sample illustrates the use of `Add` :</span></span>  
  
 [!code-cpp[Decimal Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#5)]
 [!code-csharp[Decimal Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#5)]
 [!code-vb[Decimal Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-201"><paramref name="d1" /> と <paramref name="d2" /> の合計が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-201">The sum of <paramref name="d1" /> and <paramref name="d2" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static decimal Ceiling (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Ceiling(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Ceiling(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Ceiling(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Ceiling : decimal -&gt; decimal" Usage="System.decimal.Ceiling d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b96a8-202">10 進数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-202">A decimal number.</span></span></param>
        <summary><span data-ttu-id="b96a8-203">指定した 10 進数以上の数のうち、最小の整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-203">Returns the smallest integral value that is greater than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="b96a8-204"><paramref name="d" /> パラメーターの値以上の最小の整数値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-204">The smallest integral value that is greater than or equal to the <paramref name="d" /> parameter.</span></span> <span data-ttu-id="b96a8-205">このメソッドは、整数型ではなく <see cref="T:System.Decimal" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-205">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-206">このメソッドの動作では、IEEE Standard 754、セクション 4 に従います。</span><span class="sxs-lookup"><span data-stu-id="b96a8-206">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="b96a8-207">この種の丸め処理を行うには、正の無限大に丸めるも呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-207">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="b96a8-208">つまり場合、`d`が正の値の小数部の原因のプレゼンス`d`[次へ] の最大の整数に切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-208">In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer.</span></span> <span data-ttu-id="b96a8-209">場合`d`が負の場合、丸め処理によりの小数部`d`破棄されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-209">If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded.</span></span> <span data-ttu-id="b96a8-210">このメソッドの操作とは異なります、<xref:System.Decimal.Floor%2A>メソッドは、負の無限大方向に丸め処理をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-210">The operation of this method differs from the <xref:System.Decimal.Floor%2A> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-211">次の例を示しています、<xref:System.Decimal.Ceiling%2A>メソッドとの比較、<xref:System.Decimal.Floor%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-211">The following example illustrates the <xref:System.Decimal.Ceiling%2A> method and contrasts it with the <xref:System.Decimal.Floor%2A> method.</span></span>  
  
 [!code-csharp[System.Decimal.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ceiling/cs/ceiling1.cs#1)]
 [!code-vb[System.Decimal.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (d1 As Decimal, d2 As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Compare : decimal * decimal -&gt; int" Usage="System.decimal.Compare (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="b96a8-212">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-212">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="b96a8-213">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-213">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="b96a8-214">2 つの指定した <see cref="T:System.Decimal" /> 値を比較します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-214">Compares two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="b96a8-215"><paramref name="d1" /> と <paramref name="d2" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-215">A signed number indicating the relative values of <paramref name="d1" /> and <paramref name="d2" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="b96a8-216">戻り値</span><span class="sxs-lookup"><span data-stu-id="b96a8-216">Return value</span></span> 
 </term><description> <span data-ttu-id="b96a8-217">説明</span><span class="sxs-lookup"><span data-stu-id="b96a8-217">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="b96a8-218">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="b96a8-218">Less than zero</span></span> 
 </term><description><span data-ttu-id="b96a8-219"><paramref name="d1" /> は <paramref name="d2" /> より小さい値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-219"><paramref name="d1" /> is less than <paramref name="d2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="b96a8-220">0</span><span class="sxs-lookup"><span data-stu-id="b96a8-220">Zero</span></span> 
 </term><description><span data-ttu-id="b96a8-221"><paramref name="d1" /> と <paramref name="d2" /> が等しい。</span><span class="sxs-lookup"><span data-stu-id="b96a8-221"><paramref name="d1" /> and <paramref name="d2" /> are equal.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="b96a8-222">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="b96a8-222">Greater than zero</span></span> 
 </term><description><span data-ttu-id="b96a8-223"><paramref name="d1" /> が <paramref name="d2" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-223"><paramref name="d1" /> is greater than <paramref name="d2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b96a8-224">次の例がいくつかを比較<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-224">The following example compares several <xref:System.Decimal> values.</span></span> <span data-ttu-id="b96a8-225">最初の比較では、2 つの値が減算演算の実行に関係なく等しいことを示しますが、`value2`変数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-225">Note that the first comparison indicates that the two values are equal despite the subtraction operation performed on the `value2` variable.</span></span> <span data-ttu-id="b96a8-226">これは、ため、<xref:System.Decimal>型に 29 桁の精度、これら 2 つの値の違いは、30 桁の精度でのみ検出できます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-226">This is because the <xref:System.Decimal> type has 29 digits of precision, whereas a difference between these two values can be detected only with 30 digits of precision.</span></span>  
  
 [!code-csharp[System.Decimal.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Compare/cs/Compare1.cs#1)]
 [!code-vb[System.Decimal.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Compare/vb/Compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b96a8-227">指定したオブジェクトまたは <see cref="T:System.Decimal" /> とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-227">Compares this instance to a specified object or <see cref="T:System.Decimal" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.CompareTo(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Decimal value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : decimal -&gt; int&#xA;override this.CompareTo : decimal -&gt; int" Usage="decimal.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-228">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b96a8-228">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="b96a8-229">指定した <see cref="T:System.Decimal" /> オブジェクトとこのインスタンスを比較し、これらの相対値の比較を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-229">Compares this instance to a specified <see cref="T:System.Decimal" /> object and returns a comparison of their relative values.</span></span></summary>
        <returns><span data-ttu-id="b96a8-230">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-230">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="b96a8-231">戻り値</span><span class="sxs-lookup"><span data-stu-id="b96a8-231">Return value</span></span> 
 </term><description> <span data-ttu-id="b96a8-232">説明</span><span class="sxs-lookup"><span data-stu-id="b96a8-232">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="b96a8-233">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="b96a8-233">Less than zero</span></span> 
 </term><description> <span data-ttu-id="b96a8-234">このインスタンスは、<paramref name="value" /> よりも小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-234">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="b96a8-235">0</span><span class="sxs-lookup"><span data-stu-id="b96a8-235">Zero</span></span> 
 </term><description> <span data-ttu-id="b96a8-236">このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-236">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="b96a8-237">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="b96a8-237">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="b96a8-238">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-238">This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-239">このメソッドを実装、<xref:System.IComparable%601?displayProperty=nameWithType>インターフェイスを実行よりも若干優れています、<xref:System.Decimal.CompareTo%2A?displayProperty=nameWithType>メソッドに変換することはありませんので、`value`オブジェクトに対するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="b96a8-239">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Decimal.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="b96a8-240">によって、プログラミング言語をコードにことができる場合があります、<xref:System.Decimal.CompareTo%2A>メソッドのパラメーターの型のビット数が少ないが、範囲が狭いインスタンス型よりもします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-240">Depending on your programming language, it might be possible to code a <xref:System.Decimal.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="b96a8-241">一部のプログラミング言語のインスタンスとビット数の型としてパラメーターを表す暗黙の拡大変換を実行するため、可能です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-241">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="b96a8-242">たとえば、インスタンスの型が<xref:System.Int32>パラメーターの型と<xref:System.Byte>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-242">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="b96a8-243">Microsoft c# コンパイラとしてパラメーターを表すための命令を生成する、<xref:System.Int32>オブジェクト、し、生成、<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>の値を比較するメソッド、<xref:System.Int32>インスタンスと<xref:System.Int32>パラメーターの表現。</span><span class="sxs-lookup"><span data-stu-id="b96a8-243">The Microsoft C# compiler generates instructions to represent the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="b96a8-244">コンパイラが数値型に暗黙の拡大変換を実行するかどうかを判断する、プログラミング言語のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-244">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-245">次のコード例に示しますジェネリックと非ジェネリック バージョンの<xref:System.Decimal.CompareTo%2A>いくつかの値と参照型のメソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-245">The following code example demonstrates generic and nongeneric versions of the <xref:System.Decimal.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="decimal.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-246">このインスタンスと比較するオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b96a8-246">The object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="b96a8-247">指定したオブジェクトとこのインスタンスを比較し、これらの相対値の比較を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-247">Compares this instance to a specified object and returns a comparison of their relative values.</span></span></summary>
        <returns><span data-ttu-id="b96a8-248">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-248">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="b96a8-249">戻り値</span><span class="sxs-lookup"><span data-stu-id="b96a8-249">Return value</span></span> 
 </term><description> <span data-ttu-id="b96a8-250">説明</span><span class="sxs-lookup"><span data-stu-id="b96a8-250">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="b96a8-251">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="b96a8-251">Less than zero</span></span> 
 </term><description> <span data-ttu-id="b96a8-252">このインスタンスは、<paramref name="value" /> よりも小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-252">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="b96a8-253">0</span><span class="sxs-lookup"><span data-stu-id="b96a8-253">Zero</span></span> 
 </term><description> <span data-ttu-id="b96a8-254">このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-254">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="b96a8-255">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="b96a8-255">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="b96a8-256">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-256">This instance is greater than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="b96a8-257">または</span><span class="sxs-lookup"><span data-stu-id="b96a8-257">-or-</span></span> 
 <span data-ttu-id="b96a8-258"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-258"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-259">任意のインスタンスの<xref:System.Decimal>、その値に関係なくと見なされますより大きい`null`します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-259">Any instance of <xref:System.Decimal>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="b96a8-260">パラメーター`value`必要があります`null`のインスタンスまたは<xref:System.Decimal>、それ以外の例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-260">Parameter `value` must be `null` or an instance of <xref:System.Decimal>; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-261">次のコード例では、いくつかを比較`Decimal`およびその他のオブジェクト参照に`Decimal`値を使用して、`CompareTo`メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-261">The following code example compares several `Decimal` and other objects to a reference `Decimal` value using the `CompareTo` method.</span></span>  
  
 [!code-cpp[System.Decimal.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.Decimal.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.Decimal.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b96a8-262"><paramref name="value" /> が <see cref="T:System.Decimal" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-262"><paramref name="value" /> is not a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static decimal Divide (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Divide(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Divide(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Divide : decimal * decimal -&gt; decimal" Usage="System.decimal.Divide (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="b96a8-263">被除数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-263">The dividend.</span></span></param>
        <param name="d2"><span data-ttu-id="b96a8-264">除数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-264">The divisor.</span></span></param>
        <summary><span data-ttu-id="b96a8-265">2 つの指定した <see cref="T:System.Decimal" /> 値を除算します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-265">Divides two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="b96a8-266"><paramref name="d1" /> を <paramref name="d2" /> で除算した結果。</span><span class="sxs-lookup"><span data-stu-id="b96a8-266">The result of dividing <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b96a8-267">次の例では、 <xref:System.Decimal.Divide%2A> 22.1 によって値の範囲を分割するメソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-267">The following example calls the <xref:System.Decimal.Divide%2A> method to divide a range of values by 22.1.</span></span>  
  
 [!code-csharp[System.Decimal.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Decimal.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="b96a8-268"><paramref name="d2" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-268"><paramref name="d2" /> is zero.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-269">戻り値 (商) が <see cref="F:System.Decimal.MinValue" /> より小さいか、<see cref="F:System.Decimal.MaxValue" /> より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-269">The return value (that is, the quotient) is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b96a8-270"><see cref="T:System.Decimal" /> の 2 つのインスタンスが同じ値を表しているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-270">Returns a value indicating whether two instances of <see cref="T:System.Decimal" /> represent the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Decimal value);" />
      <MemberSignature Language="F#" Value="override this.Equals : decimal -&gt; bool" Usage="decimal.Equals value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-271">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b96a8-271">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="b96a8-272">このインスタンスと指定した <see cref="T:System.Decimal" /> オブジェクトが同じ値を表しているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-272">Returns a value indicating whether this instance and a specified <see cref="T:System.Decimal" /> object represent the same value.</span></span></summary>
        <returns><span data-ttu-id="b96a8-273"><paramref name="value" /> がこのインスタンスと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b96a8-273"><see langword="true" /> if <paramref name="value" /> is equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-274">このメソッドは、<xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイス、および実行よりも若干優れています<xref:System.Decimal.Equals%2A>に変換することはありませんので、`value`オブジェクトに対するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="b96a8-274">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Decimal.Equals%2A> because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="b96a8-275">場合`value`がビット数が少ない範囲が狭い、インスタンスの型よりも一部のプログラミング言語がより多くのビット値にパラメーターの値を変換する暗黙の拡大変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-275">If `value` has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="b96a8-276">たとえば、インスタンスの型が<xref:System.Int32>パラメーターの型と<xref:System.Byte>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-276">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="b96a8-277">Microsoft c# コンパイラはパラメーターの値を表す命令を生成、<xref:System.Int32>オブジェクト、し、生成、<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>を比較するメソッド、<xref:System.Int32>インスタンスとパラメーターの表現。</span><span class="sxs-lookup"><span data-stu-id="b96a8-277">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the <xref:System.Int32> instance and parameter representation.</span></span>  
  
 <span data-ttu-id="b96a8-278">コンパイラが数値型に暗黙の拡大変換を実行するかどうかを判断する、プログラミング言語のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-278">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="b96a8-279">コンパイラのオーバー ロードの解決は、2 つの動作の明らかな違いのアカウント可能性があります<see cref="M:System.Decimal.Equals(System.Object)" />メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-279">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Decimal.Equals(System.Object)" /> method overloads.</span></span> <span data-ttu-id="b96a8-280">場合の間の暗黙的な変換、<paramref name="obj" />引数と<see cref="T:System.Decimal" />が定義されている引数として型指定されていないと、 <see cref="T:System.Object" />、コンパイラでは、暗黙的な変換と呼び出し実行可能性があります、<see cref="M:System.Decimal.Equals(System.Decimal)" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-280">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Decimal" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method.</span></span> <span data-ttu-id="b96a8-281">それ以外の場合、それらを呼び出す、<see cref="M:System.Decimal.Equals(System.Object)" />メソッドで、常に返します<see langword="false" />場合その<paramref name="obj" />引数がない、<see cref="T:System.Decimal" />値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-281">Otherwise, they call the <see cref="M:System.Decimal.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Decimal" /> value.</span></span> <span data-ttu-id="b96a8-282">次の例は、2 つのメソッドのオーバー ロードの動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-282">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="b96a8-283">すべてのプリミティブの整数型の場合は両方を含む署名し、署名がない型を最初に比較を返します<see langword="true" />拡大変換と呼び出し、コンパイラが自動的に実行するため、<see cref="M:System.Decimal.Equals(System.Decimal)" />メソッドは、2 番目比較を返します。<see langword="false" />コンパイラを呼び出すため、<see cref="M:System.Decimal.Equals(System.Object)" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-283">In the case of all primitive integral types, including both signed and unsigned types, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Decimal.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="b96a8-284">[! コード csharp[System.Decimal.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs#2)] [! コード vb[System.Decimal.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="b96a8-284">[!code-csharp[System.Decimal.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs#2)] [!code-vb[System.Decimal.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="Overload:System.Decimal.CompareTo" />
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="decimal.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-285">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b96a8-285">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="b96a8-286">このインスタンスと指定した <see cref="T:System.Object" /> が同じ型と値を表しているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-286">Returns a value indicating whether this instance and a specified <see cref="T:System.Object" /> represent the same type and value.</span></span></summary>
        <returns><span data-ttu-id="b96a8-287"><paramref name="value" /> が <see cref="T:System.Decimal" /> で、このインスタンスに等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b96a8-287"><see langword="true" /> if <paramref name="value" /> is a <see cref="T:System.Decimal" /> and equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b96a8-288">次のコード例では、いくつかを比較`Decimal`およびその他のオブジェクト参照に`Decimal`値を使用して、`Equals`メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-288">The following code example compares several `Decimal` and other objects to a reference `Decimal` value using the `Equals` method.</span></span>  
  
 [!code-cpp[System.Decimal.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.Decimal.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.Decimal.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="b96a8-289">コンパイラのオーバー ロードの解決は、2 つの動作の明らかな違いのアカウント可能性があります<see cref="M:System.Decimal.Equals(System.Object)" />メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-289">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Decimal.Equals(System.Object)" /> method overloads.</span></span> <span data-ttu-id="b96a8-290">場合の間の暗黙的な変換、<paramref name="obj" />引数と<see cref="T:System.Decimal" />が定義されている引数として型指定されていないと、 <see cref="T:System.Object" />、コンパイラでは、暗黙的な変換と呼び出し実行可能性があります、<see cref="M:System.Decimal.Equals(System.Decimal)" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-290">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Decimal" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method.</span></span> <span data-ttu-id="b96a8-291">それ以外の場合、それらを呼び出す、<see cref="M:System.Decimal.Equals(System.Object)" />メソッドで、常に返します<see langword="false" />場合その<paramref name="obj" />引数がない、<see cref="T:System.Decimal" />値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-291">Otherwise, they call the <see cref="M:System.Decimal.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Decimal" /> value.</span></span> <span data-ttu-id="b96a8-292">次の例は、2 つのメソッドのオーバー ロードの動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-292">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="b96a8-293">すべてのプリミティブの整数型の場合は両方を含む署名し、署名がない型を最初に比較を返します<see langword="true" />拡大変換と呼び出し、コンパイラが自動的に実行するため、<see cref="M:System.Decimal.Equals(System.Decimal)" />メソッドは、2 番目比較を返します。<see langword="false" />コンパイラを呼び出すため、<see cref="M:System.Decimal.Equals(System.Object)" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-293">In the case of all primitive integral types, including both signed and unsigned types, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Decimal.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="b96a8-294">[! コード csharp[System.Decimal.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs#2)] [! コード vb[System.Decimal.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="b96a8-294">[!code-csharp[System.Decimal.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs#2)] [!code-vb[System.Decimal.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Equals : decimal * decimal -&gt; bool" Usage="System.decimal.Equals (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="b96a8-295">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-295">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="b96a8-296">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-296">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="b96a8-297"><see cref="T:System.Decimal" /> の指定された 2 つのインスタンスが同じ値を表しているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-297">Returns a value indicating whether two specified instances of <see cref="T:System.Decimal" /> represent the same value.</span></span></summary>
        <returns><span data-ttu-id="b96a8-298"><see langword="true" /> と <paramref name="d1" /> が等しい場合は <paramref name="d2" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b96a8-298"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b96a8-299">次のコード例では、いくつかを比較`Decimal`値の参照を`Decimal`値の静的 using`Equals`メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-299">The following code example compares several `Decimal` values to a reference `Decimal` value using the static `Equals` method.</span></span>  
  
 [!code-cpp[System.Decimal.Compare_Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/comp_equal.cpp#2)]
 [!code-csharp[System.Decimal.Compare_Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/comp_equal.cs#2)]
 [!code-vb[System.Decimal.Compare_Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/comp_equal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static decimal Floor (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Floor(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Floor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Floor(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Floor : decimal -&gt; decimal" Usage="System.decimal.Floor d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b96a8-300">丸める値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-300">The value to round.</span></span></param>
        <summary><span data-ttu-id="b96a8-301">指定した <see cref="T:System.Decimal" /> 数を、負の無限大方向の近似整数に丸めます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-301">Rounds a specified <see cref="T:System.Decimal" /> number to the closest integer toward negative infinity.</span></span></summary>
        <returns><span data-ttu-id="b96a8-302"><paramref name="d" /> に小数部がある場合は、負の無限大方向の <paramref name="d" /> より小さい、次の <see cref="T:System.Decimal" /> 整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-302">If <paramref name="d" /> has a fractional part, the next whole <see cref="T:System.Decimal" /> number toward negative infinity that is less than <paramref name="d" />.</span></span>  
  
<span data-ttu-id="b96a8-303">または</span><span class="sxs-lookup"><span data-stu-id="b96a8-303">-or-</span></span> 
<span data-ttu-id="b96a8-304"><paramref name="d" /> に小数部がない場合は、<paramref name="d" /> が未変更のまま返されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-304">If <paramref name="d" /> doesn't have a fractional part, <paramref name="d" /> is returned unchanged.</span></span> <span data-ttu-id="b96a8-305">このメソッドは、<see cref="T:System.Decimal" /> 型の整数値を返すことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-305">Note that the method returns an integral value of type <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-306">このメソッドの動作では、IEEE Standard 754、セクション 4 に従います。</span><span class="sxs-lookup"><span data-stu-id="b96a8-306">The behavior of this method follows IEEE Standard 754, Section 4.</span></span> <span data-ttu-id="b96a8-307">この種の丸め処理を行うには、負の無限大に丸めるも呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-307">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="b96a8-308">つまり場合、`d`が正の値、小数部が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-308">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="b96a8-309">場合`d`が負の場合、小数部が存在すると、その小さな整数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-309">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="b96a8-310">このメソッドの操作とは異なります、<xref:System.Decimal.Ceiling%2A>メソッドは、正の無限大方向に丸め処理をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-310">The operation of this method differs from the <xref:System.Decimal.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-311">次の例を示しています、<xref:System.Decimal.Floor%2A>メソッドとの比較、<xref:System.Decimal.Ceiling%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-311">The following example illustrates the <xref:System.Decimal.Floor%2A> method and contrasts it with the <xref:System.Decimal.Ceiling%2A> method.</span></span>  
  
 [!code-csharp[System.Decimal.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ceiling/cs/ceiling1.cs#1)]
 [!code-vb[System.Decimal.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
        <altmember cref="M:System.Decimal.Truncate(System.Decimal)" />
        <altmember cref="M:System.Decimal.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="FromOACurrency">
      <MemberSignature Language="C#" Value="public static decimal FromOACurrency (long cy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal FromOACurrency(int64 cy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.FromOACurrency(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromOACurrency (cy As Long) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal FromOACurrency(long cy);" />
      <MemberSignature Language="F#" Value="static member FromOACurrency : int64 -&gt; decimal" Usage="System.decimal.FromOACurrency cy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cy" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="cy"><span data-ttu-id="b96a8-312">OLE オートメーション通貨値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-312">An OLE Automation Currency value.</span></span></param>
        <summary><span data-ttu-id="b96a8-313">OLE オートメーション通貨値を格納している指定した 64 ビット符号付き整数を、それと等価の <see cref="T:System.Decimal" /> 値に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-313">Converts the specified 64-bit signed integer, which contains an OLE Automation Currency value, to the equivalent <see cref="T:System.Decimal" /> value.</span></span></summary>
        <returns><span data-ttu-id="b96a8-314"><see cref="T:System.Decimal" /> と等価の値を格納している <paramref name="cy" />。</span><span class="sxs-lookup"><span data-stu-id="b96a8-314">A <see cref="T:System.Decimal" /> that contains the equivalent of <paramref name="cy" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b96a8-315">次のコード例では、`FromOACurrency`に変換するメソッド<xref:System.Int64>フィールドを等価の OLE オートメーション通貨値を含む`Decimal`番号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-315">The following code example uses the `FromOACurrency` method to convert <xref:System.Int64> fields that contain OLE Automation Currency values to the equivalent `Decimal` numbers.</span></span>  
  
 [!code-cpp[System.Decimal.OACurrency#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CPP/fromoacurrency.cpp#2)]
 [!code-csharp[System.Decimal.OACurrency#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CS/fromoacurrency.cs#2)]
 [!code-vb[System.Decimal.OACurrency#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.OACurrency/VB/fromoacurrency.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.ToOACurrency(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="GetBits">
      <MemberSignature Language="C#" Value="public static int[] GetBits (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] GetBits(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetBits(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBits (d As Decimal) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ GetBits(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member GetBits : decimal -&gt; int[]" Usage="System.decimal.GetBits d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b96a8-316">変換する値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-316">The value to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-317">指定した <see cref="T:System.Decimal" /> のインスタンスの値を、それと等価のバイナリ形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-317">Converts the value of a specified instance of <see cref="T:System.Decimal" /> to its equivalent binary representation.</span></span></summary>
        <returns><span data-ttu-id="b96a8-318"><paramref name="d" /> のバイナリ形式を格納している 4 要素長の 32 ビット符号付き整数配列。</span><span class="sxs-lookup"><span data-stu-id="b96a8-318">A 32-bit signed integer array with four elements that contain the binary representation of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-319">バイナリ表現を<xref:System.Decimal>数は 1 ビットの符号、96 ビットの整数、および、スケール ファクターを整数値を分割し、どのような一部分は小数を指定するために使用します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-319">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="b96a8-320">スケール ファクターは、0 から 28 までの範囲の指数を累乗した値 10 を暗黙的にです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-320">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span>  
  
 <span data-ttu-id="b96a8-321">戻り値は、32 ビット符号付き整数の 4 つの要素の配列です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-321">The return value is a four-element array of 32-bit signed integers.</span></span>  
  
 <span data-ttu-id="b96a8-322">1、2、および返される配列の 3 番目の要素には、低、中、および高の 32 ビット 96 ビット整数の数にはが含まれています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-322">The first, second, and third elements of the returned array contain the low, middle, and high 32 bits of the 96-bit integer number.</span></span>  
  
 <span data-ttu-id="b96a8-323">返される配列の 4 番目の要素には、スケール ファクターと記号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-323">The fourth element of the returned array contains the scale factor and sign.</span></span> <span data-ttu-id="b96a8-324">これは、次の部分で構成されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-324">It consists of the following parts:</span></span>  
  
 <span data-ttu-id="b96a8-325">ビット 0 ~ 15、下位のワードは使用されず、0 にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b96a8-325">Bits 0 to 15, the lower word, are unused and must be zero.</span></span>  
  
 <span data-ttu-id="b96a8-326">16 ~ 23 のビットは、番号の整数を除算する 10 の累乗を示す 0 から 28 まで指数を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="b96a8-326">Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.</span></span>  
  
 <span data-ttu-id="b96a8-327">24 ~ 30 の bits は使用されず、0 にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b96a8-327">Bits 24 to 30 are unused and must be zero.</span></span>  
  
 <span data-ttu-id="b96a8-328">31 ビットには、符号が含まれています。という意味では正の値、0 と 1 は負の値を意味します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-328">Bit 31 contains the sign: 0 mean positive, and 1 means negative.</span></span>  
  
 <span data-ttu-id="b96a8-329">ビット表現は、負と正の 0 によって区別に注意してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-329">Note that the bit representation differentiates between negative and positive zero.</span></span> <span data-ttu-id="b96a8-330">これらの値は、すべての操作で等しいものとして扱われます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-330">These values are treated as being equal in all operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-331">次の例では、`GetBits`にいくつかを変換するメソッド`Decimal`値を等価のバイナリ表現。</span><span class="sxs-lookup"><span data-stu-id="b96a8-331">The following example uses the `GetBits` method to convert several `Decimal` values to their equivalent binary representations.</span></span> <span data-ttu-id="b96a8-332">次に、表示、10 進数の値と要素の 16 進数の値によって返される配列で、<xref:System.Decimal.GetBits%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-332">It then displays the decimal values and the hexadecimal value of the elements in the array returned by the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 [!code-cpp[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CPP/getbits.cpp#2)]
 [!code-csharp[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CS/getbits.cs#2)]
 [!code-vb[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/VB/getbits.vb#2)]  
  
 <span data-ttu-id="b96a8-333">次の例では、<xref:System.Decimal.GetBits%2A>配列のコンポーネント部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-333">The following example uses the <xref:System.Decimal.GetBits%2A> method to retrieve the component parts of an array.</span></span> <span data-ttu-id="b96a8-334">使用して、この配列への呼び出しで、<xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29>新しいインスタンスを作成するコンス トラクター<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-334">It then uses this array in the call to the <xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29> constructor to instantiate a new <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Decimal.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.ctor/cs/ctor2a.cs#1)]
 [!code-vb[System.Decimal.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.ctor/vb/ctor2a.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Decimal.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="decimal.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b96a8-335">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-335">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="b96a8-336">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="b96a8-336">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="decimal.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b96a8-337"><see cref="T:System.TypeCode" /> 値型の <see cref="T:System.Decimal" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-337">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-338">列挙型定数 <see cref="F:System.TypeCode.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="b96a8-338">The enumerated constant <see cref="F:System.TypeCode.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b96a8-339">次のコード例では、`GetTypeCode`の型コードを返すメソッドを`Decimal`値の型。</span><span class="sxs-lookup"><span data-stu-id="b96a8-339">The following code example uses the `GetTypeCode` method to return the type code for `Decimal` value type.</span></span>  
  
 [!code-cpp[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CPP/gettypecode.cpp#3)]
 [!code-csharp[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CS/gettypecode.cs#3)]
 [!code-vb[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/VB/gettypecode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly decimal MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MaxValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxValue : decimal" Usage="System.decimal.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b96a8-340"><see cref="T:System.Decimal" /> の最大有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-340">Represents the largest possible value of <see cref="T:System.Decimal" />.</span></span> <span data-ttu-id="b96a8-341">このフィールドは定数であり、読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-341">This field is constant and read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-342">この定数の値は、正 79,228,162,514,264,337,593,543,950,335 です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-342">The value of this constant is positive 79,228,162,514,264,337,593,543,950,335.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-343">次のコード サンプルの使用を示します`MaxValue`:</span><span class="sxs-lookup"><span data-stu-id="b96a8-343">The following code sample illustrates the use of `MaxValue` :</span></span>  
  
 [!code-cpp[Decimal Example#2](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#2)]
 [!code-csharp[Decimal Example#2](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#2)]
 [!code-vb[Decimal Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinusOne">
      <MemberSignature Language="C#" Value="public static readonly decimal MinusOne;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MinusOne" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MinusOne" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinusOne As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MinusOne;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinusOne : decimal" Usage="System.decimal.MinusOne" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b96a8-344">負の 1 (-1) を表します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-344">Represents the number negative one (-1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b96a8-345">次のコード例の使用を示しています、`MinusOne`フィールド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-345">The following code example illustrates the use of the `MinusOne` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly decimal MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MinValue" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MinValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinValue : decimal" Usage="System.decimal.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b96a8-346"><see cref="T:System.Decimal" /> の最小有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-346">Represents the smallest possible value of <see cref="T:System.Decimal" />.</span></span> <span data-ttu-id="b96a8-347">このフィールドは定数であり、読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-347">This field is constant and read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-348">この定数の値は、負 79,228,162,514,264,337,593,543,950,335 です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-348">The value of this constant is negative 79,228,162,514,264,337,593,543,950,335.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-349">次のコード例の使用を示しています、`MinValue`フィールド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-349">The following code example illustrates the use of the `MinValue` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static decimal Multiply (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Multiply(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Multiply(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Multiply : decimal * decimal -&gt; decimal" Usage="System.decimal.Multiply (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="b96a8-350">被乗数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-350">The multiplicand.</span></span></param>
        <param name="d2"><span data-ttu-id="b96a8-351">乗数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-351">The multiplier.</span></span></param>
        <summary><span data-ttu-id="b96a8-352">指定された 2 つの <see cref="T:System.Decimal" /> 値を乗算します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-352">Multiplies two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="b96a8-353"><paramref name="d1" /> と <paramref name="d2" /> を乗算した結果。</span><span class="sxs-lookup"><span data-stu-id="b96a8-353">The result of multiplying <paramref name="d1" /> and <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b96a8-354">次のコード例のいくつかのペアを作成します`Decimal`値し、その製品の計算、`Multiply`メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-354">The following code example creates several pairs of `Decimal` values and calculates their products with the `Multiply` method.</span></span>  
  
 [!code-cpp[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/CPP/mul_div_rem.cpp#1)]
 [!code-csharp[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/CS/mul_div_rem.cs#1)]
 [!code-vb[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/VB/mul_div_rem.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-355">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-355">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static decimal Negate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Negate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Negate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Negate(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Negate : decimal -&gt; decimal" Usage="System.decimal.Negate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b96a8-356">否定する値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-356">The value to negate.</span></span></param>
        <summary><span data-ttu-id="b96a8-357">指定した <see cref="T:System.Decimal" /> 値に -1 を乗算した結果を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-357">Returns the result of multiplying the specified <see cref="T:System.Decimal" /> value by negative one.</span></span></summary>
        <returns><span data-ttu-id="b96a8-358">値が <paramref name="d" /> で、符号が逆の 10 進数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-358">A decimal number with the value of <paramref name="d" />, but the opposite sign.</span></span>  
  
<span data-ttu-id="b96a8-359">または</span><span class="sxs-lookup"><span data-stu-id="b96a8-359">-or-</span></span> 
<span data-ttu-id="b96a8-360"><paramref name="d" /> が 0 の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="b96a8-360">Zero, if <paramref name="d" /> is zero.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b96a8-361">次のコード例では、`Negate`いくつかの記号を変更するメソッドを`Decimal`値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-361">The following code example uses the `Negate` method to change the sign of several `Decimal` values.</span></span>  
  
 [!code-cpp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CPP/floor_neg_trunc.cpp#1)]
 [!code-csharp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CS/floor_neg_trunc.cs#1)]
 [!code-vb[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/VB/floor_neg_trunc.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static readonly decimal One;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal One" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.One" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly One As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal One;" />
      <MemberSignature Language="F#" Value=" staticval mutable One : decimal" Usage="System.decimal.One" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b96a8-362">数値 1 を表します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-362">Represents the number one (1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b96a8-363">次のコード例の使用を示しています、`One`フィールド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-363">The following code example illustrates the use of the `One` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static decimal operator + (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Addition(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator +(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : decimal * decimal -&gt; decimal" Usage="d1 + d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="b96a8-364">加算する 1 番目の値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-364">The first value to add.</span></span></param>
        <param name="d2"><span data-ttu-id="b96a8-365">加算する 2 番目の値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-365">The second value to add.</span></span></param>
        <summary><span data-ttu-id="b96a8-366">指定した 2 つの <see cref="T:System.Decimal" /> 値を加算します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-366">Adds two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="b96a8-367"><paramref name="d1" /> と <paramref name="d2" /> を加算した結果。</span><span class="sxs-lookup"><span data-stu-id="b96a8-367">The result of adding <paramref name="d1" /> and <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-368"><xref:System.Decimal.op_Addition%2A>メソッドは、加算演算子の操作を定義します。<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-368">The <xref:System.Decimal.op_Addition%2A> method defines the operation of the addition operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b96a8-369">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-369">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/addition1.cs#3)]
 [!code-vb[System.Decimal.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/addition1.vb#3)]  
  
 <span data-ttu-id="b96a8-370">使用している言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Add%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-370">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Add%2A> method instead.</span></span>  
  
 <span data-ttu-id="b96a8-371">この演算子を同等のメソッドは、します。 <xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b96a8-371">The equivalent method for this operator is <xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-372">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-372">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public static decimal operator -- (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Decrement(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Decrement(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Decrement (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator --(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member op_Decrement : decimal -&gt; decimal" Usage="System.decimal.op_Decrement d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b96a8-373">デクリメントする値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-373">The value to decrement.</span></span></param>
        <summary><span data-ttu-id="b96a8-374"><see cref="T:System.Decimal" /> オペランドを 1 だけデクリメントします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-374">Decrements the <see cref="T:System.Decimal" /> operand by one.</span></span></summary>
        <returns><span data-ttu-id="b96a8-375">1 だけデクリメントした <paramref name="d" /> の値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-375">The value of <paramref name="d" /> decremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-376"><xref:System.Decimal.op_Decrement%2A>メソッドは、デクリメント演算子の操作を定義します。<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-376">The <xref:System.Decimal.op_Decrement%2A> method defines the operation of the decrement operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b96a8-377">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-377">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement1.cs#4)]  
  
 <span data-ttu-id="b96a8-378">インクリメント演算子がない一部の言語 (Visual Basic) など、<xref:System.Decimal.op_Decrement%2A>メソッドを直接として次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-378">Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Decrement%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement1.vb#5)]  
  
 <span data-ttu-id="b96a8-379">お使いの言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Subtract%2A>メソッド、次の例として、代わりにします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-379">If your language does not support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead, as the following example shows.</span></span>  
  
 [!code-csharp[System.Decimal.Operators#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement2.cs#6)]
 [!code-vb[System.Decimal.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement2.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-380">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-380">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static decimal operator / (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Division(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Division(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator /(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( / ) : decimal * decimal -&gt; decimal" Usage="d1 / d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="b96a8-381">被除数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-381">The dividend.</span></span></param>
        <param name="d2"><span data-ttu-id="b96a8-382">除数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-382">The divisor.</span></span></param>
        <summary><span data-ttu-id="b96a8-383">2 つの指定した <see cref="T:System.Decimal" /> 値を除算します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-383">Divides two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="b96a8-384"><paramref name="d1" /> を <paramref name="d2" /> で除算した結果。</span><span class="sxs-lookup"><span data-stu-id="b96a8-384">The result of dividing <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-385"><xref:System.Decimal.op_Division%2A>メソッドの除算演算子の動作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-385">The <xref:System.Decimal.op_Division%2A> method defines the operation of the division operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b96a8-386">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-386">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/division1.cs#7)]
 [!code-vb[System.Decimal.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/division1.vb#7)]  
  
 <span data-ttu-id="b96a8-387">使用している言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Divide%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-387">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Divide%2A> method instead.</span></span>  
  
 <span data-ttu-id="b96a8-388">この演算子を同等のメソッドは、します。 <xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b96a8-388">The equivalent method for this operator is <xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="b96a8-389"><paramref name="d2" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-389"><paramref name="d2" /> is zero.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-390">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-390">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : decimal * decimal -&gt; bool" Usage="d1 = d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="b96a8-391">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-391">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="b96a8-392">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-392">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="b96a8-393">2 つの <see cref="T:System.Decimal" /> 値が等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-393">Returns a value that indicates whether two <see cref="T:System.Decimal" /> values are equal.</span></span></summary>
        <returns><span data-ttu-id="b96a8-394"><see langword="true" /> と <paramref name="d1" /> が等しい場合は <paramref name="d2" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b96a8-394"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-395"><xref:System.Decimal.op_Equality%2A>メソッド定義の等値演算子の操作<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-395">The <xref:System.Decimal.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b96a8-396">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-396">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/equality1.cs#1)]
 [!code-vb[System.Decimal.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/equality1.vb#1)]  
  
 <span data-ttu-id="b96a8-397">使用している言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Equals%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-397">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Equals%2A> method instead.</span></span>  
  
 <span data-ttu-id="b96a8-398">この演算子を同等のメソッドは、します。 <xref:System.Decimal.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b96a8-398">The equivalent method for this operator is <xref:System.Decimal.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b96a8-399"><see cref="T:System.Decimal" /> オブジェクトと別の型の間の明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-399">Defines an explicit conversion between a <see cref="T:System.Decimal" /> object and another type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Byte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; byte" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-400">変換する値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-400">The value to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-401"><see cref="T:System.Decimal" /> から 8 ビット符号なし整数への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-401">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to an 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="b96a8-402">変換された <see cref="T:System.Decimal" /> を表す 8 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-402">An 8-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-403">この演算子はの明示的な変換を<xref:System.Decimal>を<xref:System.Byte>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-403">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Byte>.</span></span> <span data-ttu-id="b96a8-404">このような明示的な変換の構文は、言語に依存し、各言語のコンパイラはさまざまな実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-404">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="b96a8-405">例では、明示的に変換するときに、さまざまな戻り値を示しています、<xref:System.Decimal>値を<xref:System.Byte>c#、C++、および Visual Basic を使用して値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-405">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Byte> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="b96a8-406">言語の独立した変換を実行するには、呼び出すことができます、<xref:System.Decimal.ToByte%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToByte%28System.Decimal%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-406">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToByte%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToByte%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples 
 <span data-ttu-id="b96a8-407">次の例では、変換<xref:System.Decimal>番号の<xref:System.Byte>、明示的なを使用して値<xref:System.Decimal>に<xref:System.Byte>変換演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-407">The following example converts <xref:System.Decimal> numbers to <xref:System.Byte> values by using the explicit <xref:System.Decimal> to <xref:System.Byte> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctos_byte.cpp#4)] 
 [!code-csharp[System.Decimal.ConvTo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctos_byte.cs#4)] 
 [!code-vb[System.Decimal.ConvTo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctos_byte.vb#4)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-408"><paramref name="value" /> が <see cref="F:System.Byte.MinValue" /> より小さいか <see cref="F:System.Byte.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-408"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator char (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname char op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Char" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator char(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; char" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-409">変換する値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-409">The value to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-410"><see cref="T:System.Decimal" /> から Unicode 文字への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-410">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a Unicode character.</span></span></summary>
        <returns><span data-ttu-id="b96a8-411">変換後の <see cref="T:System.Decimal" /> を表す Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="b96a8-411">A Unicode character that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-412">この演算子はの明示的な変換を<xref:System.Decimal>を<xref:System.Char>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-412">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Char>.</span></span> <span data-ttu-id="b96a8-413">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラをさまざまな実装を提供し、異なる結果を返すか、変換をまったくサポート可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b96a8-413">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results, or might not support the conversion at all.</span></span> <span data-ttu-id="b96a8-414">たとえば、Visual Basic および C++ コンパイラはできません、明示的な<xref:System.Decimal>を<xref:System.Char>変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-414">For example, the Visual Basic and C++ compilers do not support an explicit <xref:System.Decimal> to a <xref:System.Char> conversion.</span></span>
 

## Examples 
 <span data-ttu-id="b96a8-415">次の例では、変換<xref:System.Decimal>番号の<xref:System.Char>値 (Unicode 文字)、明示的に使用して<xref:System.Decimal>に<xref:System.Char>変換演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-415">The following example converts <xref:System.Decimal> numbers to <xref:System.Char> values (Unicode characters) by using the explicit <xref:System.Decimal> to <xref:System.Char> conversion operator.</span></span>

 [!code-csharp[System.Decimal.ConvTo#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctochar.cs#6)]
 [!code-vb[System.Decimal.ConvTo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctochar.vb#6)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-416"><paramref name="value" /> が <see cref="F:System.Char.MinValue" /> より小さいか <see cref="F:System.Char.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-416"><paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator double (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Double" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator double(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; double" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-417">変換する値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-417">The value to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-418"><see cref="T:System.Decimal" /> から倍精度浮動小数点数への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-418">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="b96a8-419">変換された <see cref="T:System.Decimal" /> を表す倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-419">A double-precision floating-point number that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-420">倍精度浮動小数点数があるより有効桁数が少ないため、精度が失われるこの操作を行うことができます、<xref:System.Decimal>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-420">This operation can result in a loss of precision, because a double-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>
 
 <span data-ttu-id="b96a8-421">この演算子はの明示的な変換を<xref:System.Decimal>を<xref:System.Double>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-421">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Double>.</span></span> <span data-ttu-id="b96a8-422">このような明示的な変換の構文は、言語に依存し、各言語のコンパイラはさまざまな実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-422">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="b96a8-423">例では、明示的に変換するときに、さまざまな戻り値を示しています、<xref:System.Decimal>値を<xref:System.Double>c#、C++、および Visual Basic を使用して値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-423">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Double> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="b96a8-424">言語の独立した変換を実行するには、呼び出すことができます、<xref:System.Decimal.ToDouble%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToDouble%28System.Decimal%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-424">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToDouble%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToDouble%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="b96a8-425">次の例では、変換<xref:System.Decimal>番号の<xref:System.Double>、明示的なを使用して値<xref:System.Decimal>に<xref:System.Double>変換演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-425">The following example converts <xref:System.Decimal> numbers to <xref:System.Double> values by using the explicit <xref:System.Decimal> to <xref:System.Double> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctosgl_dbl.cpp#5)] 
 [!code-csharp[System.Decimal.ConvTo#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctosgl_dbl.cs#5)]
 [!code-vb[System.Decimal.ConvTo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctosgl_dbl.vb#5)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator short (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int16 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator short(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; int16" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-426">変換する値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-426">The value to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-427"><see cref="T:System.Decimal" /> から 16 ビット符号付き整数への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-427">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="b96a8-428">変換された <see cref="T:System.Decimal" /> を表す 16 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-428">A 16-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="b96a8-429">この演算子はの明示的な変換を<xref:System.Decimal>を<xref:System.Int16>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-429">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int16>.</span></span> <span data-ttu-id="b96a8-430">このような明示的な変換の構文は、言語に依存し、各言語のコンパイラはさまざまな実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-430">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="b96a8-431">例では、明示的に変換するときに、さまざまな戻り値を示しています、<xref:System.Decimal>値を<xref:System.Int16>c#、Visual Basic、および C++ を使用して値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-431">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int16> value by using C#, Visual Basic, and C++.</span></span> <span data-ttu-id="b96a8-432">言語の独立した変換を実行するには、呼び出すことができます、<xref:System.Decimal.ToInt16%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToInt16%28System.Decimal%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-432">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt16%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt16%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="b96a8-433">次の例では、変換<xref:System.Decimal>番号の<xref:System.Int16>、明示的なを使用して値<xref:System.Decimal>に<xref:System.Int16>変換演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-433">The following example converts <xref:System.Decimal> numbers to <xref:System.Int16> values by using the explicit <xref:System.Decimal> to <xref:System.Int16> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int16.cpp#3)] 
 [!code-csharp[System.Decimal.ConvTo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int16.cs#3)] 
 [!code-vb[System.Decimal.ConvTo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int16.vb#3)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-434"><paramref name="value" /> が <see cref="F:System.Int16.MinValue" /> より小さいか <see cref="F:System.Int16.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-434"><paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator int(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; int" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-435">変換する値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-435">The value to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-436"><see cref="T:System.Decimal" /> から 32 ビット符号付き整数への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-436">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="b96a8-437">変換された <see cref="T:System.Decimal" /> を表す 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-437">A 32-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-438">この演算子はの明示的な変換を<xref:System.Decimal>を<xref:System.Int32>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-438">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int32>.</span></span> <span data-ttu-id="b96a8-439">このような明示的な変換の構文は、言語に依存し、各言語のコンパイラはさまざまな実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-439">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="b96a8-440">例では、明示的に変換するときに、さまざまな戻り値を示しています、<xref:System.Decimal>値を<xref:System.Int32>c#、C++、および Visual Basic を使用して値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-440">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int32> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="b96a8-441">言語の独立した変換を実行するには、呼び出すことができます、<xref:System.Decimal.ToInt32%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToInt32%28System.Decimal%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-441">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt32%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt32%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="b96a8-442">次の例では、変換<xref:System.Decimal>番号の<xref:System.Int32>、明示的なを使用して値<xref:System.Decimal>に<xref:System.Int32>変換演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-442">The following example converts <xref:System.Decimal> numbers to <xref:System.Int32> values by using the explicit <xref:System.Decimal> to <xref:System.Int32> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int32.cpp#2)] 
 [!code-csharp[System.Decimal.ConvTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int32.cs#2)] 
 [!code-vb[System.Decimal.ConvTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int32.vb#2)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-443"><paramref name="value" /> が <see cref="F:System.Int32.MinValue" /> より小さいか <see cref="F:System.Int32.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-443"><paramref name="value" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator long(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; int64" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-444">変換する値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-444">The value to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-445"><see cref="T:System.Decimal" /> から 64 ビット符号付き整数への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-445">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="b96a8-446">変換された <see cref="T:System.Decimal" /> を表す 64 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-446">A 64-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-447">この演算子はの明示的な変換を<xref:System.Decimal>を<xref:System.Int64>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-447">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int64>.</span></span> <span data-ttu-id="b96a8-448">このような明示的な変換の構文は、言語に依存し、各言語のコンパイラはさまざまな実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-448">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="b96a8-449">例では、明示的に変換するときに、さまざまな戻り値を示しています、<xref:System.Decimal>値を<xref:System.Int64>c# および Visual Basic を使用して値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-449">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int64> value by using C# and Visual Basic.</span></span> <span data-ttu-id="b96a8-450">言語の独立した変換を実行するには、呼び出すことができます、<xref:System.Decimal.ToInt64%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToInt64%28System.Decimal%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-450">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt64%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt64%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 
## Examples
 <span data-ttu-id="b96a8-451">次の例では、変換<xref:System.Decimal>番号の<xref:System.Int64>、明示的なを使用して値<xref:System.Decimal>に<xref:System.Int64>変換演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-451">The following example converts <xref:System.Decimal> numbers to <xref:System.Int64> values by using the explicit <xref:System.Decimal> to <xref:System.Int64> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int64.cpp#1)] 
 [!code-csharp[System.Decimal.ConvTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int64.cs#1)] 
 [!code-vb[System.Decimal.ConvTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int64.vb#1)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-452"><paramref name="value" /> が <see cref="F:System.Int64.MinValue" /> より小さいか <see cref="F:System.Int64.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-452"><paramref name="value" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator sbyte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int8 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::SByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; sbyte" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-453">変換する値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-453">The value to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-454"><see cref="T:System.Decimal" /> から 8 ビット符号付き整数への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-454">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to an 8-bit signed integer.</span></span>  
  
<span data-ttu-id="b96a8-455">この API は、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-455">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="b96a8-456">変換された <see cref="T:System.Decimal" /> を表す 8 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-456">An 8-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-457">この演算子はの明示的な変換を<xref:System.Decimal>を<xref:System.SByte>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-457">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.SByte>.</span></span> <span data-ttu-id="b96a8-458">このような明示的な変換の構文は、言語に依存し、各言語のコンパイラはさまざまな実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-458">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="b96a8-459">例では、明示的に変換するときに、さまざまな戻り値を示しています、<xref:System.Decimal>値を<xref:System.Byte>と<xref:System.SByte>c# および Visual Basic を使用して値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-459">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Byte> and an <xref:System.SByte> value by using C# and Visual Basic.</span></span> <span data-ttu-id="b96a8-460">言語の独立した変換を実行するには、呼び出すことができます、<xref:System.Decimal.ToSByte%28System.Decimal%29?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToSByte%28System.Decimal%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-460">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToSByte%28System.Decimal%29?displayProperty=nameWithType> method or the <xref:System.Convert.ToSByte%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>   


## Examples 
 <span data-ttu-id="b96a8-461">次の例では、変換<xref:System.Decimal>番号の<xref:System.SByte>、明示的なを使用して値<xref:System.Decimal>に<xref:System.SByte>変換演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-461">The following example converts <xref:System.Decimal> numbers to <xref:System.SByte> values by using the explicit <xref:System.Decimal> to <xref:System.SByte> conversion operator.</span></span>

 [!code-cpp[System.Decimal.Operators.Explicit#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cpp/tosbyte.cpp#1)] 
 [!code-csharp[System.Decimal.Operators.Explicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cs/tosbyte.cs#1)]
 [!code-vb[System.Decimal.Operators.Explicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators.explicit/vb/tosbyte.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-462"><paramref name="value" /> が <see cref="F:System.SByte.MinValue" /> より小さいか <see cref="F:System.SByte.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-462"><paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
        <altCompliant cref="M:System.Decimal.ToInt16(System.Decimal)" />
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Single" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator float(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; single" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-463">変換する値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-463">The value to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-464"><see cref="T:System.Decimal" /> から単精度浮動小数点数への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-464">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="b96a8-465">変換された <see cref="T:System.Decimal" /> を表す単精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-465">A single-precision floating-point number that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-466">単精度浮動小数点数があるより有効桁数が少ないため、精度が失われるこの操作を行うことができます、<xref:System.Decimal>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-466">This operation can result in a loss of precision, because a single-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>

 <span data-ttu-id="b96a8-467">この演算子はの明示的な変換を<xref:System.Decimal>を<xref:System.Single>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-467">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Single>.</span></span> <span data-ttu-id="b96a8-468">このような明示的な変換の構文は、言語に依存し、各言語のコンパイラはさまざまな実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-468">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="b96a8-469">例では、明示的に変換するときに、さまざまな戻り値を示しています、<xref:System.Decimal>値を<xref:System.Single>c# および Visual Basic を使用して値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-469">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Single> value by using C# and Visual Basic.</span></span> <span data-ttu-id="b96a8-470">言語の独立した変換を実行するには、呼び出すことができます、<xref:System.Decimal.ToSingle%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToSingle%28System.Decimal%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-470">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToSingle%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToSingle%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="b96a8-471">次の例では、変換<xref:System.Decimal>番号の<xref:System.Single>、明示的なを使用して値<xref:System.Decimal>に<xref:System.Single>変換演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-471">The following example converts <xref:System.Decimal> numbers to <xref:System.Single> values by using the explicit <xref:System.Decimal> to <xref:System.Single> conversion operator.</span></span>

 [!code-cpp[System.Decimal.Operators.Explicit#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cpp/tosingle1.cpp#2)] 
 [!code-csharp[System.Decimal.Operators.Explicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cs/tosingle1.cs#2)]
 [!code-vb[System.Decimal.Operators.Explicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators.explicit/vb/tosingle1.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ushort (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int16 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; uint16" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-472">変換する値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-472">The value to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-473"><see cref="T:System.Decimal" /> から 16 ビット符号なし整数への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-473">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 16-bit unsigned integer.</span></span>  
  
<span data-ttu-id="b96a8-474">この API は、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-474">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="b96a8-475">変換された <see cref="T:System.Decimal" /> を表す 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-475">A 16-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-476">この演算子はの明示的な変換を<xref:System.Decimal>を<xref:System.UInt16>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-476">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt16>.</span></span> <span data-ttu-id="b96a8-477">このような明示的な変換の構文は、言語に依存し、各言語のコンパイラはさまざまな実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-477">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="b96a8-478">例では、明示的に変換するときに、さまざまな戻り値を示しています、<xref:System.Decimal>値を<xref:System.UInt16>c# および Visual Basic を使用して値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-478">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt16> value by using C# and Visual Basic.</span></span> <span data-ttu-id="b96a8-479">言語の独立した変換を実行するには、呼び出すことができます、<xref:System.Decimal.ToUInt16%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToUInt16%28System.Decimal%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-479">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt16%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt16%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="b96a8-480">次の例では、変換<xref:System.Decimal>番号の<xref:System.UInt16>、明示的なを使用して値<xref:System.Decimal>に<xref:System.UInt16>変換演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-480">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt16> values by using the explicit <xref:System.Decimal> to <xref:System.UInt16> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int16.cpp#3)] 
 [!code-csharp[System.Decimal.ConvTo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int16.cs#3)]
 [!code-vb[System.Decimal.ConvTo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int16.vb#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-481"><paramref name="value" /> が <see cref="F:System.UInt16.MinValue" /> より小さいか <see cref="F:System.UInt16.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-481"><paramref name="value" /> is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator uint (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt32(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; uint32" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-482">変換する値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-482">The value to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-483"><see cref="T:System.Decimal" /> から 32 ビット符号なし整数への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-483">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 32-bit unsigned integer.</span></span>  
  
<span data-ttu-id="b96a8-484">この API は、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-484">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="b96a8-485">変換された <see cref="T:System.Decimal" /> を表す 32 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-485">A 32-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-486">この演算子はの明示的な変換を<xref:System.Decimal>を<xref:System.UInt32>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-486">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt32>.</span></span> <span data-ttu-id="b96a8-487">このような明示的な変換の構文は、言語に依存し、各言語のコンパイラはさまざまな実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-487">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="b96a8-488">例では、明示的に変換するときに、さまざまな戻り値を示しています、<xref:System.Decimal>値を<xref:System.UInt32>c# および Visual Basic を使用して値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-488">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt32> value by using C# and Visual Basic.</span></span> <span data-ttu-id="b96a8-489">言語の独立した変換を実行するには、呼び出すことができます、<xref:System.Decimal.ToUInt32%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToUInt32%28System.Decimal%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-489">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt32%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt32%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>


## Examples
 <span data-ttu-id="b96a8-490">次の例では、変換<xref:System.Decimal>番号の<xref:System.UInt32>、明示的なを使用して値<xref:System.Decimal>に<xref:System.UInt32>変換演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-490">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt32> values by using the explicit <xref:System.Decimal> to <xref:System.UInt32> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int32.cpp#2)] 
 [!code-csharp[System.Decimal.ConvTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int32.cs#2)]
 [!code-vb[System.Decimal.ConvTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int32.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-491"><paramref name="value" /> が <see cref="F:System.UInt32.MinValue" /> より小さいか <see cref="F:System.UInt32.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-491"><paramref name="value" /> is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altCompliant cref="M:System.Decimal.ToInt64(System.Decimal)" />
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ulong (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt64(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; uint64" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-492">変換する値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-492">The value to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-493"><see cref="T:System.Decimal" /> から 64 ビット符号なし整数への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-493">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 64-bit unsigned integer.</span></span>  
  
<span data-ttu-id="b96a8-494">この API は、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-494">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="b96a8-495">変換された <see cref="T:System.Decimal" /> を表す 64 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-495">A 64-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-496">この演算子はの明示的な変換を<xref:System.Decimal>を<xref:System.UInt64>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-496">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt64>.</span></span> <span data-ttu-id="b96a8-497">このような明示的な変換の構文は、言語に依存し、各言語のコンパイラはさまざまな実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-497">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="b96a8-498">例では、明示的に変換するときに、さまざまな戻り値を示しています、<xref:System.Decimal>値を<xref:System.UInt64>c# および Visual Basic を使用して値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-498">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt64> value by using C# and Visual Basic.</span></span> <span data-ttu-id="b96a8-499">言語の独立した変換を実行するには、呼び出すことができます、<xref:System.Decimal.ToUInt64%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToUInt64%28System.Decimal%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-499">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt64%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt64%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>


## Examples 
 <span data-ttu-id="b96a8-500">次の例では、変換<xref:System.Decimal>番号の<xref:System.UInt64>、明示的なを使用して値<xref:System.Decimal>に<xref:System.UInt64>変換演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-500">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt64> values by using the explicit <xref:System.Decimal> to <xref:System.UInt64> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int64.cpp#1)] 
 [!code-csharp[System.Decimal.ConvTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int64.cs#1)]
 [!code-vb[System.Decimal.ConvTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int64.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-501"><paramref name="value" /> が負か <see cref="F:System.UInt64.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-501"><paramref name="value" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Double)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Double) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(double value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : double -&gt; decimal" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-502">変換する倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-502">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-503">倍精度浮動小数点数から <see cref="T:System.Decimal" /> への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-503">Defines an explicit conversion of a double-precision floating-point number to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-504">変換された倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-504">The converted double-precision floating point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  

 <span data-ttu-id="b96a8-505">次の例では、変換<xref:System.Double>値<xref:System.Decimal>番号を使用して、<xref:System.Double>に<xref:System.Decimal>変換演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-505">The following example converts <xref:System.Double> values to <xref:System.Decimal> numbers by using the <xref:System.Double> to <xref:System.Decimal> conversion operator.</span></span> <span data-ttu-id="b96a8-506">この変換では、Visual Basic で op_Explicit 演算子が必要です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-506">This conversion requires the op_Explicit operator in Visual Basic.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.Others#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromdouble.cpp#2)]
 [!code-csharp[System.Decimal.ConvFrom.Others#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromdouble.cs#2)]
 [!code-vb[System.Decimal.ConvFrom.Others#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromdouble.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-507"><paramref name="value" /> は <see cref="F:System.Decimal.MaxValue" /> を超えているか、または <see cref="F:System.Decimal.MinValue" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-507"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
<span data-ttu-id="b96a8-508">または</span><span class="sxs-lookup"><span data-stu-id="b96a8-508">-or-</span></span> 
 <span data-ttu-id="b96a8-509"><paramref name="value" /> が <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.PositiveInfinity" />、または <see cref="F:System.Double.NegativeInfinity" /> です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-509"><paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Single)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Single) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(float value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : single -&gt; decimal" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-510">変換する単精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-510">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-511">単精度浮動小数点数から <see cref="T:System.Decimal" /> への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-511">Defines an explicit conversion of a single-precision floating-point number to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-512">変換された単精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-512">The converted single-precision floating point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b96a8-513">次の例では、変換<xref:System.Single>値<xref:System.Decimal>番号を使用して、<xref:System.Single>に<xref:System.Decimal>変換演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-513">The following example converts <xref:System.Single> values to <xref:System.Decimal> numbers by using the <xref:System.Single> to <xref:System.Decimal> conversion operator.</span></span> <span data-ttu-id="b96a8-514">この変換では、Visual Basic で op_Explicit 演算子が必要です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-514">This conversion requires the op_Explicit operator in Visual Basic.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.Others#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromsingle.cpp#3)]
 [!code-csharp[System.Decimal.ConvFrom.Others#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromsingle.cs#3)]
 [!code-vb[System.Decimal.ConvFrom.Others#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromsingle.vb#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-515"><paramref name="value" /> は <see cref="F:System.Decimal.MaxValue" /> を超えているか、または <see cref="F:System.Decimal.MinValue" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-515"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
<span data-ttu-id="b96a8-516">または</span><span class="sxs-lookup"><span data-stu-id="b96a8-516">-or-</span></span> 
 <span data-ttu-id="b96a8-517"><paramref name="value" /> が <see cref="F:System.Single.NaN" />、<see cref="F:System.Single.PositiveInfinity" />、または <see cref="F:System.Single.NegativeInfinity" /> です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-517"><paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.</span></span></exception>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : decimal * decimal -&gt; bool" Usage="d1 &gt; d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="b96a8-518">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-518">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="b96a8-519">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-519">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="b96a8-520">指定した <see cref="T:System.Decimal" /> が、指定した別の <see cref="T:System.Decimal" /> より大きいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-520">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is greater than another specified <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-521"><see langword="true" /> が <paramref name="d1" /> より大きい場合は <paramref name="d2" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b96a8-521"><see langword="true" /> if <paramref name="d1" /> is greater than <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-522"><xref:System.Decimal.op_GreaterThan%2A>メソッドは、大なり演算子の操作を定義します。<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-522">The <xref:System.Decimal.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b96a8-523">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-523">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthan1.cs#8)]
 [!code-vb[System.Decimal.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan1.vb#8)]  
  
 <span data-ttu-id="b96a8-524">カスタム演算子をサポートしない言語を呼び出すことができます、<xref:System.Decimal.Compare%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-524">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="b96a8-525">これらを呼び出すこともできます、<xref:System.Decimal.op_GreaterThan%2A>メソッドを直接として次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-525">They may also be able to call the <xref:System.Decimal.op_GreaterThan%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan2.vb#9)]  
  
 <span data-ttu-id="b96a8-526">この演算子を同等のメソッドは、します。 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b96a8-526">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : decimal * decimal -&gt; bool" Usage="d1 &gt;= d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="b96a8-527">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-527">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="b96a8-528">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-528">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="b96a8-529">指定した <see cref="T:System.Decimal" /> が、指定した別の <see cref="T:System.Decimal" /> 以上かどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-529">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is greater than or equal to another specified <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-530"><paramref name="d1" /> が <paramref name="d2" /> 以上の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b96a8-530"><see langword="true" /> if <paramref name="d1" /> is greater than or equal to <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-531"><xref:System.Decimal.op_GreaterThanOrEqual%2A>メソッドの以上演算子の動作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-531">The <xref:System.Decimal.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b96a8-532">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-532">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthanorequal1.cs#10)]
 [!code-vb[System.Decimal.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal1.vb#10)]  
  
 <span data-ttu-id="b96a8-533">カスタム演算子をサポートしない言語を呼び出すことができます、<xref:System.Decimal.Compare%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-533">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="b96a8-534">これらを呼び出すこともできます、<xref:System.Decimal.op_GreaterThanOrEqual%2A>メソッドを直接として次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-534">They may also be able to call the <xref:System.Decimal.op_GreaterThanOrEqual%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal2.vb#11)]  
  
 <span data-ttu-id="b96a8-535">この演算子を同等のメソッドは、します。 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b96a8-535">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b96a8-536">値型から <see cref="T:System.Decimal" /> 値への暗黙の変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-536">Defines an implicit conversion of the value of a type to a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-537">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>せずに明示的なキャスト演算子 (c#) または (Visual Basic) での変換関数の呼び出しの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-537">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="b96a8-538">これらには、拡大変換をデータの損失を伴わないスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="b96a8-538">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Byte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : byte -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-539">変換する 8 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-539">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-540">8 ビット符号なし整数値から <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-540">Defines an implicit conversion of an 8-bit unsigned integer to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-541">変換された 8 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-541">The converted 8-bit unsigned integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-542">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>せずに明示的なキャスト演算子 (c#) または (Visual Basic) での変換関数の呼び出しの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-542">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="b96a8-543">これらには、拡大変換をデータの損失を伴わないスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="b96a8-543">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="b96a8-544">次の例では、変換<xref:System.Byte>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-544">The following example converts <xref:System.Byte> values to <xref:System.Decimal> numbers.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfrombyte.cpp#4)]
 [!code-csharp[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfrombyte.cs#4)]
 [!code-vb[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfrombyte.vb#4)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Char)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Char) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(char value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : char -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-545">変換する Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="b96a8-545">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-546">Unicode 文字から <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-546">Defines an implicit conversion of a Unicode character to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-547">変換された Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="b96a8-547">The converted Unicode character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-548">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>せずに明示的なキャスト演算子 (c#) または (Visual Basic) での変換関数の呼び出しの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-548">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="b96a8-549">これらには、拡大変換をデータの損失を伴わないスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="b96a8-549">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="b96a8-550">次の例では、変換<xref:System.Char>(Unicode 文字) の値を<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-550">The following example converts <xref:System.Char> values (Unicode characters) to <xref:System.Decimal> numbers.</span></span> <span data-ttu-id="b96a8-551">この変換で Visual basic ではなく、op_Implicit 演算子が必要です。C#および C++ です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-551">This conversion requires the op_Implicit operator in Visual Basic, but not in C# and C++.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.Others#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromchar.cpp#1)]
 [!code-csharp[System.Decimal.ConvFrom.Others#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromchar.cs#1)]
 [!code-vb[System.Decimal.ConvFrom.Others#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromchar.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Short) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(short value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int16 -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-552">変換する 16 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-552">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-553">16 ビット符号付き整数の <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-553">Defines an implicit conversion of a 16-bit signed integer to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-554">変換された 16 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-554">The converted 16-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-555">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>せずに明示的なキャスト演算子 (c#) または (Visual Basic) での変換関数の呼び出しの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-555">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="b96a8-556">これらには、拡大変換をデータの損失を伴わないスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="b96a8-556">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="b96a8-557">次の例では、変換<xref:System.Int16>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-557">The following example converts <xref:System.Int16> values to <xref:System.Decimal> numbers.</span></span> <span data-ttu-id="b96a8-558">この変換で Visual basic ではなく、op_Implicit 演算子が必要です。C#および C++ です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-558">This conversion requires the op_Implicit operator in Visual Basic, but not in C# and C++.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint16.cpp#3)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint16.cs#3)]
 [!code-vb[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint16.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(int value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-559">変換する 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-559">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-560">32 ビット符号付き整数の <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-560">Defines an implicit conversion of a 32-bit signed integer to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-561">変換された 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-561">The converted 32-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-562">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>せずに明示的なキャスト演算子 (c#) または (Visual Basic) での変換関数の呼び出しの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-562">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="b96a8-563">これらには、拡大変換をデータの損失を伴わないスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="b96a8-563">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="b96a8-564">次の例では、変換<xref:System.Int32>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-564">The following example converts <xref:System.Int32> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint32.cpp#2)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint32.cs#2)]
 [!code-vb[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint32.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Long) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(long value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int64 -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-565">変換する 64 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-565">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-566">64 ビット符号付き整数の <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-566">Defines an implicit conversion of a 64-bit signed integer to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-567">変換された 64 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-567">The converted 64-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-568">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>せずに明示的なキャスト演算子 (c#) または (Visual Basic) での変換関数の呼び出しの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-568">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="b96a8-569">これらには、拡大変換をデータの損失を伴わないスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="b96a8-569">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="b96a8-570">次の例では、変換<xref:System.Int64>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-570">The following example converts <xref:System.Int64> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint64.cpp#1)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint64.cs#1)]
 [!code-vb[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint64.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As SByte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : sbyte -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-571">変換する 8 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-571">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-572">8 ビット符号付き整数値から <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-572">Defines an implicit conversion of an 8-bit signed integer to a <see cref="T:System.Decimal" />.</span></span>  
  
<span data-ttu-id="b96a8-573">この API は、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-573">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="b96a8-574">変換された 8 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-574">The converted 8-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-575">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>せずに明示的なキャスト演算子 (c#) または (Visual Basic) での変換関数の呼び出しの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-575">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="b96a8-576">これらには、拡大変換をデータの損失を伴わないスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="b96a8-576">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="b96a8-577">次の例では、変換<xref:System.SByte>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-577">The following example converts <xref:System.SByte> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromsbyte.cpp#4)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromsbyte.cs#4)]
 [!code-vb[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromsbyte.vb#4)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UShort) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint16 -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-578">変換する 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-578">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-579">16 ビット符号なし整数値から <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-579">Defines an implicit conversion of a 16-bit unsigned integer to a <see cref="T:System.Decimal" />.</span></span>  
  
<span data-ttu-id="b96a8-580">この API は、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-580">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="b96a8-581">変換された 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-581">The converted 16-bit unsigned integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-582">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>せずに明示的なキャスト演算子 (c#) または (Visual Basic) での変換関数の呼び出しの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-582">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="b96a8-583">これらには、拡大変換をデータの損失を伴わないスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="b96a8-583">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="b96a8-584">次の例では、変換<xref:System.UInt16>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-584">The following example converts <xref:System.UInt16> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint16.cpp#3)]
 [!code-csharp[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint16.cs#3)]
 [!code-vb[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint16.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UInteger) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint32 -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-585">変換する 32 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-585">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-586">32 ビット符号なし整数値から <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-586">Defines an implicit conversion of a 32-bit unsigned integer to a <see cref="T:System.Decimal" />.</span></span>  
  
<span data-ttu-id="b96a8-587">この API は、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-587">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="b96a8-588">変換された 32 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-588">The converted 32-bit unsigned integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-589">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>せずに明示的なキャスト演算子 (c#) または (Visual Basic) での変換関数の呼び出しの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-589">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="b96a8-590">これらには、拡大変換をデータの損失を伴わないスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="b96a8-590">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="b96a8-591">次の例では、変換<xref:System.UInt32>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-591">The following example converts <xref:System.UInt32> values to <xref:System.Decimal> numbers.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint32.cpp#2)] 
 [!code-csharp[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint32.cs#2)] 
 [!code-vb[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint32.vb#2)]   

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As ULong) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint64 -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-592">変換する 64 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-592">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-593">64 ビット符号なし整数値から <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-593">Defines an implicit conversion of a 64-bit unsigned integer to a <see cref="T:System.Decimal" />.</span></span>  
  
<span data-ttu-id="b96a8-594">この API は、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-594">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="b96a8-595">変換された 64 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-595">The converted 64-bit unsigned integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-596">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>せずに明示的なキャスト演算子 (c#) または (Visual Basic) での変換関数の呼び出しの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-596">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="b96a8-597">これらには、拡大変換をデータの損失を伴わないスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="b96a8-597">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="b96a8-598">次の例では、変換<xref:System.UInt64>値<xref:System.Decimal>番号を使用して、<xref:System.UInt64>に<xref:System.Decimal>変換演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-598">The following example converts <xref:System.UInt64> values to <xref:System.Decimal> numbers by using the <xref:System.UInt64> to <xref:System.Decimal> conversion operator.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint64.cpp#1)] 
 [!code-csharp[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint64.cs#1)] 
 [!code-vb[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint64.vb#1)]   

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public static decimal operator ++ (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Increment(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Increment(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Increment (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator ++(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member op_Increment : decimal -&gt; decimal" Usage="System.decimal.op_Increment d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b96a8-599">インクリメントする値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-599">The value to increment.</span></span></param>
        <summary><span data-ttu-id="b96a8-600"><see cref="T:System.Decimal" /> オペランドを 1 だけインクリメントします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-600">Increments the <see cref="T:System.Decimal" /> operand by 1.</span></span></summary>
        <returns><span data-ttu-id="b96a8-601">1 だけインクリメントした <paramref name="d" /> の値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-601">The value of <paramref name="d" /> incremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-602"><xref:System.Decimal.op_Increment%2A>メソッドのインクリメント演算子の動作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-602">The <xref:System.Decimal.op_Increment%2A> method defines the operation of the increment operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b96a8-603">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-603">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment1.cs#12)]  
  
 <span data-ttu-id="b96a8-604">インクリメント演算子がない一部の言語 (Visual Basic) など、<xref:System.Decimal.op_Increment%2A>メソッドを直接として次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-604">Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Increment%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment1.vb#13)]  
  
 <span data-ttu-id="b96a8-605">お使いの言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Add%2A>メソッド、次の例として、代わりにします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-605">If your language does not support custom operators, call the <xref:System.Decimal.Add%2A> method instead, as the following example shows.</span></span>  
  
 [!code-csharp[System.Decimal.Operators#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment2.cs#14)]
 [!code-vb[System.Decimal.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment2.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-606">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-606">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : decimal * decimal -&gt; bool" Usage="System.decimal.op_Inequality (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="b96a8-607">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-607">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="b96a8-608">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-608">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="b96a8-609">2 つの <see cref="T:System.Decimal" /> オブジェクトの値が異なるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-609">Returns a value that indicates whether two <see cref="T:System.Decimal" /> objects have different values.</span></span></summary>
        <returns><span data-ttu-id="b96a8-610"><paramref name="d1" /> と <paramref name="d2" /> が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b96a8-610"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-611"><xref:System.Decimal.op_Inequality%2A>メソッドの非等値演算子の動作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-611">The <xref:System.Decimal.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b96a8-612">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-612">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/inequality1.cs#2)]
 [!code-vb[System.Decimal.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/inequality1.vb#2)]  
  
 <span data-ttu-id="b96a8-613">使用している言語がカスタム演算子をサポートしていない場合、次の手法のいずれかを使用して非等値テストできます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-613">If the language you're using doesn't support custom operators, you can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="b96a8-614">呼び出す、<xref:System.Decimal.Compare%2A>メソッドで、2 つの間の関係を示す<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-614">Calling the <xref:System.Decimal.Compare%2A> method, which indicates the relationship between two <xref:System.Decimal> values.</span></span>  
  
-   <span data-ttu-id="b96a8-615">呼び出す、<xref:System.Decimal.Equals%2A>メソッドとその値を反転します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-615">Calling the <xref:System.Decimal.Equals%2A> method and reversing its value.</span></span>  
  
 <span data-ttu-id="b96a8-616">この演算子を同等のメソッドは、します。 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b96a8-616">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : decimal * decimal -&gt; bool" Usage="d1 &lt; d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="b96a8-617">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-617">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="b96a8-618">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-618">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="b96a8-619">指定した <see cref="T:System.Decimal" /> が、指定した別の <see cref="T:System.Decimal" /> より小さいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-619">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is less than another specified <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-620"><paramref name="d1" /> が <paramref name="d2" /> より小さい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b96a8-620"><see langword="true" /> if <paramref name="d1" /> is less than <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-621"><xref:System.Decimal.op_LessThan%2A>メソッド定義の演算子よりも低いの操作<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-621">The <xref:System.Decimal.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b96a8-622">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-622">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthan1.cs#15)]
 [!code-vb[System.Decimal.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan1.vb#15)]  
  
 <span data-ttu-id="b96a8-623">カスタム演算子をサポートしない言語を呼び出すことができます、<xref:System.Decimal.Compare%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-623">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="b96a8-624">これらを呼び出すこともできます、<xref:System.Decimal.op_LessThan%2A>メソッドを直接として次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-624">They may also be able to call the <xref:System.Decimal.op_LessThan%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan2.vb#16)]  
  
 <span data-ttu-id="b96a8-625">この演算子を同等のメソッドは、します。 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b96a8-625">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : decimal * decimal -&gt; bool" Usage="d1 &lt;= d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="b96a8-626">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-626">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="b96a8-627">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-627">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="b96a8-628">指定した <see cref="T:System.Decimal" /> が、指定したもう 1 つの <see cref="T:System.Decimal" /> 以下であるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-628">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is less than or equal to another specified <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-629"><paramref name="d1" /> が <paramref name="d2" /> 以下の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b96a8-629"><see langword="true" /> if <paramref name="d1" /> is less than or equal to <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-630"><xref:System.Decimal.op_LessThanOrEqual%2A>メソッドは、以下の操作を定義します。 よりの以下演算子<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-630">The <xref:System.Decimal.op_LessThanOrEqual%2A> method defines the operation of the less than or equal operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b96a8-631">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-631">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthanorequal1.cs#17)]
 [!code-vb[System.Decimal.Operators#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal1.vb#17)]  
  
 <span data-ttu-id="b96a8-632">カスタム演算子をサポートしない言語を呼び出すことができます、<xref:System.Decimal.Compare%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-632">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="b96a8-633">これらを呼び出すこともできます、<xref:System.Decimal.op_LessThanOrEqual%2A>メソッドを直接として次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-633">They may also be able to call the <xref:System.Decimal.op_LessThanOrEqual%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal2.vb#18)]  
  
 <span data-ttu-id="b96a8-634">この演算子を同等のメソッドは、します。 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b96a8-634">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Modulus">
      <MemberSignature Language="C#" Value="public static decimal operator % (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Modulus(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Mod (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator %(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( % ) : decimal * decimal -&gt; decimal" Usage="d1 % d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="b96a8-635">被除数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-635">The dividend.</span></span></param>
        <param name="d2"><span data-ttu-id="b96a8-636">除数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-636">The divisor.</span></span></param>
        <summary><span data-ttu-id="b96a8-637">指定した 2 つの <see cref="T:System.Decimal" /> 値を除算した結果の剰余を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-637">Returns the remainder resulting from dividing two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="b96a8-638"><paramref name="d1" /> を <paramref name="d2" /> で除算した結果の剰余。</span><span class="sxs-lookup"><span data-stu-id="b96a8-638">The remainder resulting from dividing <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-639"><xref:System.Decimal.op_Modulus%2A>演算子では、指定した 2 つを除算した結果の残りの部分が返す剰余演算を定義します。<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-639">The <xref:System.Decimal.op_Modulus%2A> operator defines the remainder operation that returns the remainder resulting from dividing two specified <xref:System.Decimal> values.</span></span> <span data-ttu-id="b96a8-640">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-640">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/modulus1.cs#19)]
 [!code-vb[System.Decimal.Operators#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/modulus1.vb#19)]  
  
 <span data-ttu-id="b96a8-641">剰余演算によって返される値の符号は、被除数の符号に依存します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-641">The sign of the value returned by the remainder operation depends on the sign of dividend.</span></span> <span data-ttu-id="b96a8-642">被除数が正の場合は、剰余演算は陽性の結果を返します負の場合、剰余演算は、負の結果を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-642">If dividend is positive, the remainder operation returns a positive result; if it is negative, the remainder operation returns a negative result.</span></span>  
  
 <span data-ttu-id="b96a8-643">この演算子を同等のメソッドは<xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-643">The equivalent method for this operator is <xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b96a8-644">使用している言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Remainder%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-644">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Remainder%2A> method instead.</span></span>  
         ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="b96a8-645"><paramref name="d2" /> は <see langword="zero" /> です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-645"><paramref name="d2" /> is <see langword="zero" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-646">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-646">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Remainder(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static decimal operator * (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Multiply(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator *(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( * ) : decimal * decimal -&gt; decimal" Usage="d1 * d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="b96a8-647">乗算する 1 番目の値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-647">The first value to multiply.</span></span></param>
        <param name="d2"><span data-ttu-id="b96a8-648">乗算する 2 番目の値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-648">The second value to multiply.</span></span></param>
        <summary><span data-ttu-id="b96a8-649">指定された 2 つの <see cref="T:System.Decimal" /> 値を乗算します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-649">Multiplies two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="b96a8-650"><paramref name="d1" /> と <paramref name="d2" /> を乗算した結果。</span><span class="sxs-lookup"><span data-stu-id="b96a8-650">The result of multiplying <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-651"><xref:System.Decimal.op_Multiply%2A>メソッドの乗算演算子の動作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-651">The <xref:System.Decimal.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b96a8-652">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-652">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/multiply1.cs#20)]
 [!code-vb[System.Decimal.Operators#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/multiply1.vb#20)]  
  
 <span data-ttu-id="b96a8-653">使用している言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Multiply%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-653">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Multiply%2A> method instead.</span></span>  
  
 <span data-ttu-id="b96a8-654">この演算子を同等のメソッドは、します。 <xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b96a8-654">The equivalent method for this operator is <xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-655">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-655">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static decimal operator - (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Subtraction(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator -(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : decimal * decimal -&gt; decimal" Usage="d1 - d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="b96a8-656">被減数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-656">The minuend.</span></span></param>
        <param name="d2"><span data-ttu-id="b96a8-657">減数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-657">The subtrahend.</span></span></param>
        <summary><span data-ttu-id="b96a8-658">2 つの指定した <see cref="T:System.Decimal" /> 値で減算を実行します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-658">Subtracts two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="b96a8-659"><paramref name="d1" /> から <paramref name="d2" /> を減算した結果。</span><span class="sxs-lookup"><span data-stu-id="b96a8-659">The result of subtracting <paramref name="d2" /> from <paramref name="d1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-660"><xref:System.Decimal.op_Subtraction%2A>メソッドは、減算演算子の操作を定義します。<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-660">The <xref:System.Decimal.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b96a8-661">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-661">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/subtraction1.cs#21)]
 [!code-vb[System.Decimal.Operators#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/subtraction1.vb#21)]  
  
 <span data-ttu-id="b96a8-662">使用している言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Subtract%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-662">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead.</span></span>  
  
 <span data-ttu-id="b96a8-663">この演算子を同等のメソッドは、します。 <xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b96a8-663">The equivalent method for this operator is <xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-664">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-664">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static decimal operator - (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_UnaryNegation(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_UnaryNegation(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator -(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : decimal -&gt; decimal" Usage="- d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b96a8-665">否定する値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-665">The value to negate.</span></span></param>
        <summary><span data-ttu-id="b96a8-666">指定した <see cref="T:System.Decimal" /> オペランドの値の符号を逆にします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-666">Negates the value of the specified <see cref="T:System.Decimal" /> operand.</span></span></summary>
        <returns><span data-ttu-id="b96a8-667"><paramref name="d" /> に -1 を乗算した結果。</span><span class="sxs-lookup"><span data-stu-id="b96a8-667">The result of <paramref name="d" /> multiplied by negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-668"><xref:System.Decimal.op_UnaryPlus%2A>メソッドの単項否定演算子 (または、加法逆元演算子) の操作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-668">The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary negation operator (or the additive inverse operator) for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b96a8-669">操作は、元の数に追加されたときに、0 (ゼロ) で結果の値を生成します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-669">The operation produces a value that results in 0 (zero) when it is added to the original number.</span></span> <span data-ttu-id="b96a8-670">カスタム演算子をサポートしない言語を呼び出すことができます、<xref:System.Decimal.Negate%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-670">Languages that do not support custom operators can call the <xref:System.Decimal.Negate%2A> method instead.</span></span>  
  
 <span data-ttu-id="b96a8-671">この演算子を同等のメソッドは、します。 <xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b96a8-671">The equivalent method for this operator is <xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Negate(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static decimal operator + (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_UnaryPlus(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_UnaryPlus(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator +(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ( ~+ ) : decimal -&gt; decimal" Usage="+ d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b96a8-672">返すオペランド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-672">The operand to return.</span></span></param>
        <summary><span data-ttu-id="b96a8-673"><see cref="T:System.Decimal" /> オペランドの値 (オペランドの符号は不変) を返します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-673">Returns the value of the <see cref="T:System.Decimal" /> operand (the sign of the operand is unchanged).</span></span></summary>
        <returns><span data-ttu-id="b96a8-674">オペランド <paramref name="d" /> の値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-674">The value of the operand, <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-675"><xref:System.Decimal.op_UnaryPlus%2A>メソッドは、単項プラス演算子の操作を定義します。<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-675">The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary positive operator for <xref:System.Decimal> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b96a8-676">数値の文字列形式を、それと等価の <see cref="T:System.Decimal" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-676">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span></span></summary>
        <altmember cref="Overload:System.Decimal.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; decimal" Usage="System.decimal.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b96a8-677">変換する数値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="b96a8-677">The string representation of the number to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-678">数値の文字列形式を、それと等価の <see cref="T:System.Decimal" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-678">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="b96a8-679"><paramref name="s" /> に含まれている数値と等価。</span><span class="sxs-lookup"><span data-stu-id="b96a8-679">The equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-680">パラメーター`s`フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-680">Parameter `s` contains a number of the form:</span></span>  
  
 <span data-ttu-id="b96a8-681">[ws][記号][数字] [.fractional 桁] [ws] の数字</span><span class="sxs-lookup"><span data-stu-id="b96a8-681">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="b96a8-682">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-682">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="b96a8-683">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-683">The following table describes each element.</span></span>  
  
|<span data-ttu-id="b96a8-684">要素</span><span class="sxs-lookup"><span data-stu-id="b96a8-684">Element</span></span>|<span data-ttu-id="b96a8-685">説明</span><span class="sxs-lookup"><span data-stu-id="b96a8-685">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="b96a8-686">*ws*</span><span class="sxs-lookup"><span data-stu-id="b96a8-686">*ws*</span></span>|<span data-ttu-id="b96a8-687">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-687">Optional white space.</span></span>|  
|<span data-ttu-id="b96a8-688">*sign*</span><span class="sxs-lookup"><span data-stu-id="b96a8-688">*sign*</span></span>|<span data-ttu-id="b96a8-689">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-689">An optional sign.</span></span>|  
|<span data-ttu-id="b96a8-690">*数字*</span><span class="sxs-lookup"><span data-stu-id="b96a8-690">*digits*</span></span>|<span data-ttu-id="b96a8-691">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="b96a8-691">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="b96a8-692">*、*</span><span class="sxs-lookup"><span data-stu-id="b96a8-692">*,*</span></span>|<span data-ttu-id="b96a8-693">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-693">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="b96a8-694">*.*</span><span class="sxs-lookup"><span data-stu-id="b96a8-694">*.*</span></span>|<span data-ttu-id="b96a8-695">カルチャに固有の小数点記号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-695">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="b96a8-696">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="b96a8-696">*fractional-digits*</span></span>|<span data-ttu-id="b96a8-697">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="b96a8-697">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="b96a8-698">パラメーター`s`を使用して解釈されます、<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="b96a8-698">Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="b96a8-699">つまり、空白文字と桁区切り記号が許可されているが、通貨記号は表示されません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-699">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="b96a8-700">要素を明示的に定義する (通貨記号、数千などの区切り記号および空白) に存在すること`s`、いずれかを使用して、<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>または<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-700">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use either the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b96a8-701">パラメーター`s`で書式設定情報を使用して解析を<xref:System.Globalization.NumberFormatInfo>現在のシステム カルチャ用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-701">Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> initialized for the current system culture.</span></span> <span data-ttu-id="b96a8-702">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-702">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="b96a8-703">他のいくつかのカルチャの書式設定情報を使用して文字列を解析するには、使用、<xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>または<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-703">To parse a string using the formatting information of some other culture, use the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> or <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b96a8-704">必要に応じて、値の`s`近似値に丸められます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-704">If necessary, the value of `s` is rounded using rounding to nearest.</span></span>  
  
 <span data-ttu-id="b96a8-705">A<xref:System.Decimal>が 29 桁の有効桁数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-705">A <xref:System.Decimal> has 29 digits of precision.</span></span> <span data-ttu-id="b96a8-706">場合`s`し 29 以上の数字は、小数部を備えがの範囲内の数値を表す<xref:System.Decimal.MaxValue>と<xref:System.Decimal.MinValue>数値が丸められます、近似値に 29 桁に切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-706">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="b96a8-707">解析操作中には、区切り記号がで発生した場合、`s`パラメーター、および適用可能な通貨または 10 進数とグループ区切り記号が同じ、解析操作が想定する、区切り記号は、グループではなく、小数点区切り文字区切り記号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-707">If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="b96a8-708">区切り記号の詳細については、次を参照してください。 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>、および<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-708">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-709">次のコード例では、<xref:System.Decimal.Parse%28System.String%29>メソッドの文字列表現を解析する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-709">The following code example uses the <xref:System.Decimal.Parse%28System.String%29> method to parse string representations of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Decimal.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#1)]
 [!code-vb[System.Decimal.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b96a8-710"><paramref name="s" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-710"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="b96a8-711"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-711"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-712"><paramref name="s" /> が、<see cref="F:System.Decimal.MinValue" /> 未満の数値か、<see cref="F:System.Decimal.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-712"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="b96a8-713">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="b96a8-713">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; decimal" Usage="System.decimal.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b96a8-714">変換する数値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="b96a8-714">The string representation of the number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="b96a8-715"><paramref name="s" /> で使用可能なスタイル要素を示す、<see cref="T:System.Globalization.NumberStyles" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-715">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="b96a8-716">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Number" /> です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-716">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span></span></param>
        <summary><span data-ttu-id="b96a8-717">指定のスタイルで表現された数値の文字列形式を、それと等価な <see cref="T:System.Decimal" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-717">Converts the string representation of a number in a specified style to its <see cref="T:System.Decimal" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="b96a8-718"><paramref name="style" /> で指定されたとおりの <paramref name="s" /> に格納されている数値と等価の <see cref="T:System.Decimal" /> 数値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-718">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="style" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-719">`style`スタイル要素を定義するパラメーター (など何千もの区切り記号、空白文字、および通貨記号) で許容される、`s`解析操作が成功するためのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="b96a8-719">The `style` parameter defines the style elements (such as thousands separators, white space, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="b96a8-720">ビット フラグの組み合わせがあります、<xref:System.Globalization.NumberStyles>列挙体。</span><span class="sxs-lookup"><span data-stu-id="b96a8-720">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="b96a8-721">次<xref:System.Globalization.NumberStyles>メンバーがサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-721">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="b96a8-722">値に応じて`style`、`s`パラメーターは、次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-722">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="b96a8-723">[ws][$][記号][数字] [.fractional 桁] [e [記号] 桁] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="b96a8-723">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="b96a8-724">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-724">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="b96a8-725">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-725">The following table describes each element.</span></span>  
  
|<span data-ttu-id="b96a8-726">要素</span><span class="sxs-lookup"><span data-stu-id="b96a8-726">Element</span></span>|<span data-ttu-id="b96a8-727">説明</span><span class="sxs-lookup"><span data-stu-id="b96a8-727">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="b96a8-728">*ws*</span><span class="sxs-lookup"><span data-stu-id="b96a8-728">*ws*</span></span>|<span data-ttu-id="b96a8-729">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-729">Optional white space.</span></span> <span data-ttu-id="b96a8-730">先頭に空白文字を表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>の最後に、フラグ、およびそれが表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-730">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="b96a8-731">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-731">A culture-specific currency symbol.</span></span> <span data-ttu-id="b96a8-732">によって、文字列内の位置が定義されている、<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>現在のカルチャのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-732">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="b96a8-733">現在のカルチャの通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-733">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b96a8-734">*sign*</span><span class="sxs-lookup"><span data-stu-id="b96a8-734">*sign*</span></span>|<span data-ttu-id="b96a8-735">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-735">An optional sign.</span></span> <span data-ttu-id="b96a8-736">先頭の符号が表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>の最後に、フラグ、およびそれが表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-736">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="b96a8-737">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-737">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b96a8-738">*数字*</span><span class="sxs-lookup"><span data-stu-id="b96a8-738">*digits*</span></span>|<span data-ttu-id="b96a8-739">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="b96a8-739">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="b96a8-740">*、*</span><span class="sxs-lookup"><span data-stu-id="b96a8-740">*,*</span></span>|<span data-ttu-id="b96a8-741">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-741">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="b96a8-742">現在のカルチャの何千もの区切り記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-742">The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b96a8-743">*.*</span><span class="sxs-lookup"><span data-stu-id="b96a8-743">*.*</span></span>|<span data-ttu-id="b96a8-744">カルチャに固有の小数点記号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-744">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="b96a8-745">現在のカルチャの小数点記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-745">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b96a8-746">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="b96a8-746">*fractional-digits*</span></span>|<span data-ttu-id="b96a8-747">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="b96a8-747">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="b96a8-748">小数部の桁数を表示できる`s`場合にのみ`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-748">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b96a8-749">*e*</span><span class="sxs-lookup"><span data-stu-id="b96a8-749">*e*</span></span>|<span data-ttu-id="b96a8-750">"E"または"E"文字は、値は指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-750">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="b96a8-751">`s`パラメーターは指数表記の数値を表すことができる場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-751">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="b96a8-752">終端の NUL (u+0000) 文字`s`の値に関係なく、解析操作では無視されますが、`style`引数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-752">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="b96a8-753">数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None>スタイル) 常に正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-753">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully.</span></span> <span data-ttu-id="b96a8-754">残りの<xref:System.Globalization.NumberStyles>メンバーがありますが、入力文字列内に存在する必要はありません要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-754">The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="b96a8-755">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在する要素に影響を与える`s`します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-755">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="b96a8-756">NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="b96a8-756">NumberStyles value</span></span>|<span data-ttu-id="b96a8-757">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="b96a8-757">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="b96a8-758">*桁*要素のみです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-758">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="b96a8-759">*.*</span><span class="sxs-lookup"><span data-stu-id="b96a8-759">The *.*</span></span> <span data-ttu-id="b96a8-760">*桁の小数部*要素。</span><span class="sxs-lookup"><span data-stu-id="b96a8-760">and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="b96a8-761">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-761">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="b96a8-762">このフラグは、フォームで値をサポート*桁*E*桁*; 追加正または負の符号および小数点記号などの要素を含む文字列を正常に解析するフラグが必要です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-762">This flag supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="b96a8-763">*Ws*の先頭にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-763">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="b96a8-764">*Ws*の末尾にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-764">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="b96a8-765">*サインオン*の先頭にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-765">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="b96a8-766">*サインオン*の末尾にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-766">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="b96a8-767">*サインオン*形式の数値を囲むかっこ内の要素。</span><span class="sxs-lookup"><span data-stu-id="b96a8-767">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="b96a8-768">*、* 要素。</span><span class="sxs-lookup"><span data-stu-id="b96a8-768">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="b96a8-769">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="b96a8-769">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="b96a8-770">すべて。</span><span class="sxs-lookup"><span data-stu-id="b96a8-770">All.</span></span> <span data-ttu-id="b96a8-771">`s`パラメーターは、16 進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-771">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="b96a8-772">*Ws*先頭または末尾に要素`s`、*サインオン*の先頭に`s`、および*します。*</span><span class="sxs-lookup"><span data-stu-id="b96a8-772">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*</span></span> <span data-ttu-id="b96a8-773">シンボルです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-773">symbol.</span></span> <span data-ttu-id="b96a8-774">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-774">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="b96a8-775">`ws`、 `sign`、 *、*、および*します。*</span><span class="sxs-lookup"><span data-stu-id="b96a8-775">The `ws`, `sign`, *,*, and *.*</span></span> <span data-ttu-id="b96a8-776">要素。</span><span class="sxs-lookup"><span data-stu-id="b96a8-776">elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="b96a8-777">すべてのスタイルを除く`s`16 進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-777">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="b96a8-778">`s`で書式設定情報を使用してパラメーターを解析する<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のシステム カルチャ用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-778">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="b96a8-779">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-779">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="b96a8-780">A<xref:System.Decimal>が 29 桁の有効桁数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-780">A <xref:System.Decimal> has 29 digits of precision.</span></span> <span data-ttu-id="b96a8-781">場合`s`し 29 以上の数字は、小数部を備えがの範囲内の数値を表す<xref:System.Decimal.MaxValue>と<xref:System.Decimal.MinValue>数値が丸められます、近似値に 29 桁に切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-781">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="b96a8-782">区切り記号が発生した場合、 `s` 、解析操作中にパラメーター`styles`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>値、および適用可能な通貨または 10 進数とグループ区切り記号が同じで、解析操作区切り文字が桁区切り記号ではなく、小数点区切り文字であると想定します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-782">If a separator is encountered in the `s` parameter during a parse operation, `styles` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> values, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="b96a8-783">区切り記号の詳細については、次を参照してください。 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>、および<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-783">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-784">次のコード例では、<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29>メソッドの文字列形式を解析する<xref:System.Decimal>EN-US カルチャを使用して値します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-784">The following code example uses the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method to parse the string representations of <xref:System.Decimal> values using the en-US culture.</span></span>  
  
 [!code-csharp[System.Decimal.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#2)]
 [!code-vb[System.Decimal.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b96a8-785"><paramref name="s" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-785"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b96a8-786"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-786"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="b96a8-787">または</span><span class="sxs-lookup"><span data-stu-id="b96a8-787">-or-</span></span> 
 <span data-ttu-id="b96a8-788"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-788"><paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="b96a8-789"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-789"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-790"><paramref name="s" /> は、<see cref="F:System.Decimal.MinValue" /> 未満の数値か、<see cref="F:System.Decimal.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-790"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></span></span></exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="b96a8-791">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="b96a8-791">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; decimal" Usage="System.decimal.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b96a8-792">変換する数値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="b96a8-792">The string representation of the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="b96a8-793"><paramref name="s" /> に関するカルチャに固有の解析情報を提供する <see cref="T:System.IFormatProvider" />。</span><span class="sxs-lookup"><span data-stu-id="b96a8-793">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific parsing information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="b96a8-794">指定したカルチャ固有の書式情報を使用して、文字列形式の数値をそれと等価の <see cref="T:System.Decimal" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-794">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="b96a8-795"><paramref name="provider" /> で指定されたとおりの <paramref name="s" /> に格納されている数値と等価の <see cref="T:System.Decimal" /> 数値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-795">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-796">このオーバー ロード、<xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29>さまざまな方法で書式に設定するテキストに変換するメソッドが使用される一般的な<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-796">This overload of the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> method is commonly used to convert text that can be formatted in a variety of ways to a <xref:System.Decimal> value.</span></span> <span data-ttu-id="b96a8-797">たとえば、これを数値には、HTML テキスト ボックスに、ユーザーが入力したテキストに変換する使用できます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-797">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="b96a8-798">`s`パラメーターには、フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-798">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="b96a8-799">[ws][記号][数字] [.fractional 桁] [ws] の数字</span><span class="sxs-lookup"><span data-stu-id="b96a8-799">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="b96a8-800">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-800">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="b96a8-801">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-801">The following table describes each element.</span></span>  
  
|<span data-ttu-id="b96a8-802">要素</span><span class="sxs-lookup"><span data-stu-id="b96a8-802">Element</span></span>|<span data-ttu-id="b96a8-803">説明</span><span class="sxs-lookup"><span data-stu-id="b96a8-803">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="b96a8-804">*ws*</span><span class="sxs-lookup"><span data-stu-id="b96a8-804">*ws*</span></span>|<span data-ttu-id="b96a8-805">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-805">Optional white space.</span></span>|  
|<span data-ttu-id="b96a8-806">*sign*</span><span class="sxs-lookup"><span data-stu-id="b96a8-806">*sign*</span></span>|<span data-ttu-id="b96a8-807">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-807">An optional sign.</span></span>|  
|<span data-ttu-id="b96a8-808">*数字*</span><span class="sxs-lookup"><span data-stu-id="b96a8-808">*digits*</span></span>|<span data-ttu-id="b96a8-809">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="b96a8-809">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="b96a8-810">*、*</span><span class="sxs-lookup"><span data-stu-id="b96a8-810">*,*</span></span>|<span data-ttu-id="b96a8-811">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-811">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="b96a8-812">*.*</span><span class="sxs-lookup"><span data-stu-id="b96a8-812">*.*</span></span>|<span data-ttu-id="b96a8-813">カルチャに固有の小数点記号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-813">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="b96a8-814">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="b96a8-814">*fractional-digits*</span></span>|<span data-ttu-id="b96a8-815">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="b96a8-815">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="b96a8-816">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="b96a8-816">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="b96a8-817">つまり、空白文字と桁区切り記号が許可されているが、通貨記号は表示されません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-817">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="b96a8-818">要素を明示的に定義する (などの通貨記号、桁区切り記号、および空白) 内に存在することができます`s`を使用して、<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-818">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b96a8-819">`provider`パラメーターは、<xref:System.IFormatProvider>実装など、<xref:System.Globalization.NumberFormatInfo>または<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b96a8-819">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="b96a8-820">`provider`パラメーターの解析中に使用されるカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-820">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="b96a8-821">`provider` が `null` の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-821">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="b96a8-822">A<xref:System.Decimal>オブジェクトが 29 桁の有効桁数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-822">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="b96a8-823">場合`s`し 29 以上の数字は、小数部を備えがの範囲内の数値を表す<xref:System.Decimal.MaxValue>と<xref:System.Decimal.MinValue>数値が丸められます、近似値に 29 桁に切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-823">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="b96a8-824">区切り記号が発生した場合、`s`解析操作では、および適用可能な通貨または 10 進数の中にパラメーターとグループ区切り記号が同じ、解析操作が想定する、区切り記号は、グループではなく、小数点区切り文字区切り記号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-824">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="b96a8-825">区切り記号の詳細については、次を参照してください。 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>、および<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-825">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-826">次の例は、ボタンは、Web フォームのイベント ハンドラーをクリックします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-826">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="b96a8-827">によって返される配列を使用して、<xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>プロパティをユーザーのロケールを決定します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-827">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="b96a8-828">インスタンス化し、<xref:System.Globalization.CultureInfo>そのロケールに対応するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b96a8-828">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="b96a8-829"><xref:System.Globalization.NumberFormatInfo>オブジェクトに属する<xref:System.Globalization.CultureInfo>オブジェクトに渡されます、<xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29>にユーザーを変換するメソッドの入力を<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-829">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[ParseMethod#3](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#3)]
 [!code-vb[ParseMethod#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b96a8-830"><paramref name="s" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-830"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="b96a8-831"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-831"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-832"><paramref name="s" /> が、<see cref="F:System.Decimal.MinValue" /> 未満の数値か、<see cref="F:System.Decimal.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-832"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="b96a8-833">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="b96a8-833">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Number, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Number, Optional provider As IFormatProvider = null) As Decimal" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; decimal" Usage="System.decimal.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; decimal" Usage="System.decimal.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b96a8-834">変換する数値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="b96a8-834">The string representation of the number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="b96a8-835"><paramref name="s" /> で使用可能なスタイル要素を示す、<see cref="T:System.Globalization.NumberStyles" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-835">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="b96a8-836">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Number" /> です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-836">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span></span></param>
        <param name="provider"><span data-ttu-id="b96a8-837"><paramref name="s" /> の書式設定に関するカルチャ固有の情報を提供する <see cref="T:System.IFormatProvider" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b96a8-837">An <see cref="T:System.IFormatProvider" /> object that supplies culture-specific information about the format of <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="b96a8-838">指定したスタイルとカルチャ固有の書式を使用して、文字列形式の数値をそれと等価の <see cref="T:System.Decimal" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-838">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified style and culture-specific format.</span></span></summary>
        <returns><span data-ttu-id="b96a8-839"><see cref="T:System.Decimal" /> と <paramref name="s" /> に指定されたとおり、<paramref name="style" /> に格納されている数値と等価の <paramref name="provider" /> 数値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-839">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="style" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-840">`style`パラメーターの使用可能な形式の定義、`s`解析操作が成功するためのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="b96a8-840">The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="b96a8-841">ビット フラグの組み合わせがあります、<xref:System.Globalization.NumberStyles>列挙体。</span><span class="sxs-lookup"><span data-stu-id="b96a8-841">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="b96a8-842">次<xref:System.Globalization.NumberStyles>メンバーがサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-842">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="b96a8-843">値に応じて`style`、`s`パラメーターは、次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-843">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="b96a8-844">[ws][$][記号][数字] [.fractional 桁] [e [記号] 桁] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="b96a8-844">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="b96a8-845">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-845">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="b96a8-846">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-846">The following table describes each element.</span></span>  
  
|<span data-ttu-id="b96a8-847">要素</span><span class="sxs-lookup"><span data-stu-id="b96a8-847">Element</span></span>|<span data-ttu-id="b96a8-848">説明</span><span class="sxs-lookup"><span data-stu-id="b96a8-848">Description</span></span>|  
|-------------|-----------------|  
|*$*|<span data-ttu-id="b96a8-849">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-849">A culture-specific currency symbol.</span></span> <span data-ttu-id="b96a8-850">によって、文字列内の位置が定義されている、<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A>と<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>のプロパティ、<xref:System.Globalization.NumberFormatInfo>によって返されるオブジェクト、<xref:System.IFormatProvider.GetFormat%2A>のメソッド、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="b96a8-850">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="b96a8-851">通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-851">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b96a8-852">*ws*</span><span class="sxs-lookup"><span data-stu-id="b96a8-852">*ws*</span></span>|<span data-ttu-id="b96a8-853">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-853">Optional white space.</span></span> <span data-ttu-id="b96a8-854">先頭に空白文字を表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>の最後に、フラグ、およびそれが表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-854">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b96a8-855">*sign*</span><span class="sxs-lookup"><span data-stu-id="b96a8-855">*sign*</span></span>|<span data-ttu-id="b96a8-856">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-856">An optional sign.</span></span> <span data-ttu-id="b96a8-857">先頭の符号が表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>の最後に、フラグ、およびそれが表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-857">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="b96a8-858">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-858">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b96a8-859">*数字*</span><span class="sxs-lookup"><span data-stu-id="b96a8-859">*digits*</span></span>|<span data-ttu-id="b96a8-860">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="b96a8-860">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="b96a8-861">*、*</span><span class="sxs-lookup"><span data-stu-id="b96a8-861">*,*</span></span>|<span data-ttu-id="b96a8-862">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-862">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="b96a8-863">何千もによって定義されているカルチャの区切り記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-863">The thousands separator of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b96a8-864">*.*</span><span class="sxs-lookup"><span data-stu-id="b96a8-864">*.*</span></span>|<span data-ttu-id="b96a8-865">カルチャに固有の小数点記号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-865">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="b96a8-866">によって定義されているカルチャの小数点記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-866">The decimal point symbol of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b96a8-867">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="b96a8-867">*fractional-digits*</span></span>|<span data-ttu-id="b96a8-868">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="b96a8-868">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="b96a8-869">小数部の桁数を表示できる`s`場合にのみ`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-869">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b96a8-870">*e*</span><span class="sxs-lookup"><span data-stu-id="b96a8-870">*e*</span></span>|<span data-ttu-id="b96a8-871">"E"または"E"文字は、値は指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-871">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="b96a8-872">`s`パラメーターは指数表記の数値を表すことができる場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-872">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="b96a8-873">終端の NUL (u+0000) 文字`s`の値に関係なく、解析操作では無視されますが、`style`引数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-873">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="b96a8-874">数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None>スタイル) 常に正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-874">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully.</span></span> <span data-ttu-id="b96a8-875">残りの<xref:System.Globalization.NumberStyles>メンバーがありますが、入力文字列内に存在する必要はありません要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-875">The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="b96a8-876">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在する要素に影響を与える`s`します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-876">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="b96a8-877">NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="b96a8-877">NumberStyles value</span></span>|<span data-ttu-id="b96a8-878">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="b96a8-878">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="b96a8-879">*桁*要素のみです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-879">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="b96a8-880">*.*</span><span class="sxs-lookup"><span data-stu-id="b96a8-880">The *.*</span></span> <span data-ttu-id="b96a8-881">*桁の小数部*要素。</span><span class="sxs-lookup"><span data-stu-id="b96a8-881">and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="b96a8-882">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-882">The `s` parameter can also use exponential notation.</span></span>  <span data-ttu-id="b96a8-883">このフラグは、フォームで値をサポート*桁*E*桁*; 追加正または負の符号および小数点記号などの要素を含む文字列を正常に解析するフラグが必要です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-883">This flag supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="b96a8-884">*Ws*の先頭にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-884">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="b96a8-885">*Ws*の末尾にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-885">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="b96a8-886">*サインオン*の先頭にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-886">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="b96a8-887">*サインオン*の末尾にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-887">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="b96a8-888">*サインオン*形式の数値を囲むかっこ内の要素。</span><span class="sxs-lookup"><span data-stu-id="b96a8-888">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="b96a8-889">*、* 要素。</span><span class="sxs-lookup"><span data-stu-id="b96a8-889">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="b96a8-890">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="b96a8-890">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="b96a8-891">すべて。</span><span class="sxs-lookup"><span data-stu-id="b96a8-891">All.</span></span> <span data-ttu-id="b96a8-892">`s`パラメーターは、16 進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-892">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="b96a8-893">*Ws*先頭または末尾に要素`s`、*サインオン*の先頭に`s`、および *.* シンボルです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-893">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.* symbol.</span></span> <span data-ttu-id="b96a8-894">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-894">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="b96a8-895">`ws`、 `sign`、 *、*、および*します。*</span><span class="sxs-lookup"><span data-stu-id="b96a8-895">The `ws`, `sign`, *,*, and *.*</span></span> <span data-ttu-id="b96a8-896">要素。</span><span class="sxs-lookup"><span data-stu-id="b96a8-896">elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="b96a8-897">すべてのスタイルを除く`s`16 進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-897">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="b96a8-898">`provider`パラメーターは、<xref:System.IFormatProvider>実装など、<xref:System.Globalization.NumberFormatInfo>または<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b96a8-898">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="b96a8-899">`provider`パラメーターの解析中に使用されるカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-899">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="b96a8-900">`provider` が `null` の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-900">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="b96a8-901">A<xref:System.Decimal>オブジェクトが 29 桁の有効桁数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-901">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="b96a8-902">場合`s`し 29 以上の数字は、小数部を備えがの範囲内の数値を表す<xref:System.Decimal.MaxValue>と<xref:System.Decimal.MinValue>数値が丸められます、近似値に 29 桁に切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-902">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="b96a8-903">区切り記号が発生した場合、`s`解析操作では、および適用可能な通貨または 10 進数の中にパラメーターとグループ区切り記号が同じ、解析操作が想定する、区切り記号は、グループではなく、小数点区切り文字区切り記号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-903">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="b96a8-904">区切り記号の詳細については、次を参照してください。 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>、および<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-904">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-905">次の例は、さまざまな`style`と`provider`パラメーターの文字列形式を解析する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-905">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Decimal.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#3)]
 [!code-vb[System.Decimal.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="b96a8-906"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-906"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-907"><paramref name="s" /> は、<see cref="F:System.Decimal.MinValue" /> 未満の数値か、<see cref="F:System.Decimal.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-907"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b96a8-908"><paramref name="s" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-908"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b96a8-909"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-909"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="b96a8-910">または</span><span class="sxs-lookup"><span data-stu-id="b96a8-910">-or-</span></span> 
 <span data-ttu-id="b96a8-911"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-911"><paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="b96a8-912">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="b96a8-912">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Remainder">
      <MemberSignature Language="C#" Value="public static decimal Remainder (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Remainder(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Remainder(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Remainder (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Remainder(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Remainder : decimal * decimal -&gt; decimal" Usage="System.decimal.Remainder (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="b96a8-913">被除数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-913">The dividend.</span></span></param>
        <param name="d2"><span data-ttu-id="b96a8-914">除数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-914">The divisor.</span></span></param>
        <summary><span data-ttu-id="b96a8-915">2 つの <see cref="T:System.Decimal" /> 値の除算後の剰余を計算します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-915">Computes the remainder after dividing two <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="b96a8-916"><paramref name="d1" /> を <paramref name="d2" /> で除算した結果生じた剰余。</span><span class="sxs-lookup"><span data-stu-id="b96a8-916">The remainder after dividing <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b96a8-917">次の例では、<xref:System.Decimal.Remainder%2A>一連の除算演算の剰余を計算するメソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-917">The following example uses the <xref:System.Decimal.Remainder%2A> method to calculate the remainder in a series of division operations.</span></span>  
  
 [!code-csharp[System.Decimal.Remainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.remainder/cs/remainder.cs#1)]
 [!code-vb[System.Decimal.Remainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.remainder/vb/remainder.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="b96a8-918"><paramref name="d2" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-918"><paramref name="d2" /> is zero.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-919">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-919">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b96a8-920">最も近い整数または指定した小数点数に値を丸めます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-920">Rounds a value to the nearest integer or specified number of decimal places.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Round : decimal -&gt; decimal" Usage="System.decimal.Round d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b96a8-921">丸め対象の 10 進数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-921">A decimal number to round.</span></span></param>
        <summary><span data-ttu-id="b96a8-922">10 進値を最も近い整数に丸めます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-922">Rounds a decimal value to the nearest integer.</span></span></summary>
        <returns><span data-ttu-id="b96a8-923"><paramref name="d" /> パラメーターの値に最も近い整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-923">The integer that is nearest to the <paramref name="d" /> parameter.</span></span> <span data-ttu-id="b96a8-924"><paramref name="d" /> が 2 つの整数 (一方が偶数でもう一方が奇数) の中間にある場合は偶数が返されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-924">If <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-925">このメソッドの動作では、IEEE Standard 754、セクション 4 に従います。</span><span class="sxs-lookup"><span data-stu-id="b96a8-925">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="b96a8-926">このような丸めと呼びます*半分もラウンド*または*銀行型丸め*します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-926">This kind of rounding is sometimes called *round half to even* or *banker's rounding*.</span></span> <span data-ttu-id="b96a8-927">常に中間値を 1 つの方向に丸めるから発生する丸め誤差が最小限に抑えます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-927">It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.</span></span> <span data-ttu-id="b96a8-928">呼び出すことと同じである、<xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29>メソッドを`mode`の引数<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-928">It is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-929">次の例の範囲に丸めます<xref:System.Decimal>で 100 ~ 102 を最も近い整数値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-929">The following example rounds a range of <xref:System.Decimal> values between 100 and 102 to the nearest integer.</span></span> <span data-ttu-id="b96a8-930">メソッドは、銀行型丸めを使用しているために、100.5 が 102 を 100 と 101.5 ラウンドに丸めることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-930">Because the method uses banker's rounding, note that 100.5 rounds to 100 and 101.5 rounds to 102.</span></span>  
  
 [!code-csharp[System.Decimal.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Round/cs/Round1.cs#1)]
 [!code-vb[System.Decimal.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Round/vb/Round1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-931">結果は <see cref="T:System.Decimal" /> 値の範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-931">The result is outside the range of a <see cref="T:System.Decimal" /> value.</span></span></exception>
        <altmember cref="M:System.Math.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int -&gt; decimal" Usage="System.decimal.Round (d, decimals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b96a8-932">丸め対象の 10 進数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-932">A decimal number to round.</span></span></param>
        <param name="decimals"><span data-ttu-id="b96a8-933">丸めた結果の数値の小数点以下の桁数を指定する 0 から 28 までの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-933">A value from 0 to 28 that specifies the number of decimal places to round to.</span></span></param>
        <summary><span data-ttu-id="b96a8-934"><see cref="T:System.Decimal" /> 値を、指定した小数点以下の桁数に丸めます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-934">Rounds a <see cref="T:System.Decimal" /> value to a specified number of decimal places.</span></span></summary>
        <returns><span data-ttu-id="b96a8-935">小数点以下の桁数 <paramref name="decimals" /> に丸められた <paramref name="d" /> と等価の 10 進数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-935">The decimal number equivalent to <paramref name="d" /> rounded to <paramref name="decimals" /> number of decimal places.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-936">このメソッドを呼び出すことは、<xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>メソッドを`mode`の引数<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>します。ときに`d`ちょうど中間には、結果は、偶数桁の小数部の右端の位置に丸められた値を 2 つの丸められた値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-936">This method is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.When `d` is exactly halfway between two rounded values, the result is the rounded value that has an even digit in the far right decimal position.</span></span> <span data-ttu-id="b96a8-937">たとえば、小数点以下 2 桁に丸められる場合、値 2.345 は 2.34 になり、値 2.355 は 2.36 になります。</span><span class="sxs-lookup"><span data-stu-id="b96a8-937">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span></span> <span data-ttu-id="b96a8-938">このプロセスと呼ばれる*でもへの丸め*、または*銀行型丸め*します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-938">This process is known as *rounding toward even*, or *banker's rounding*.</span></span> <span data-ttu-id="b96a8-939">常に中間値を 1 つの方向に丸めるから発生する丸め誤差が最小限に抑えます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-939">It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-940">次の例がいくつかを丸めます`Decimal`値を指定した小数点以下桁数を使用して、`Round`メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-940">The following example rounds several `Decimal` values to a specified number of decimal places using the `Round` method.</span></span>  
  
 [!code-csharp[System.Decimal.Round#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Round/cs/Round12.cs#12)]
 [!code-vb[System.Decimal.Round#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Round/vb/Round12.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b96a8-941"><paramref name="decimals" /> は、0 から 28 までの値ではありません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-941"><paramref name="decimals" /> is not a value from 0 to 28.</span></span></exception>
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
        <altmember cref="M:System.Decimal.Truncate(System.Decimal)" />
        <altmember cref="M:System.Math.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * MidpointRounding -&gt; decimal" Usage="System.decimal.Round (d, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b96a8-942">丸め対象の 10 進数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-942">A decimal number to round.</span></span></param>
        <param name="mode"><span data-ttu-id="b96a8-943"><paramref name="d" /> が他の 2 つの数値の中間にある場合に丸める方法を指定する値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-943">A value that specifies how to round <paramref name="d" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="b96a8-944">10 進値を最も近い整数に丸めます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-944">Rounds a decimal value to the nearest integer.</span></span> <span data-ttu-id="b96a8-945">パラメーターは、値が他の 2 つの数値の中間にある場合にその値を丸める方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-945">A parameter specifies how to round the value if it is midway between two other numbers.</span></span></summary>
        <returns><span data-ttu-id="b96a8-946"><paramref name="d" /> パラメーターの値に最も近い整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-946">The integer that is nearest to the <paramref name="d" /> parameter.</span></span> <span data-ttu-id="b96a8-947"><paramref name="d" /> が 2 つの数値 (一方が偶数でもう一方が奇数) の中間にある場合、<paramref name="mode" /> パラメーターで 2 つの数値のどちらを返すかを決定します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-947">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, the <paramref name="mode" /> parameter determines which of the two numbers is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-948">中間値では、結果の最下位の数字の後の値は、2 つの数値の間で正確に半分方法です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-948">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="b96a8-949">たとえば、7.5 は、整数に丸め 場合は、中間値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-949">For example, 7.5 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="b96a8-950">中間値は、最も近い値に簡単に識別できない丸め規則、によって指定されることがなく、`mode`引数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-950">For midpoint values, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument.</span></span> <span data-ttu-id="b96a8-951"><xref:System.Decimal.Round%2A>メソッドは、中間値を処理するための 2 つの丸め規則をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-951">The <xref:System.Decimal.Round%2A> method supports two rounding conventions for handling midpoint values.</span></span>  
  
 <span data-ttu-id="b96a8-952">ゼロから離れる方向に丸め処理します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-952">Rounding away from zero.</span></span>  
 <span data-ttu-id="b96a8-953">中間値は、次の番号をゼロから離れる方向に丸められます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-953">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="b96a8-954">3.5 が、たとえば、4 に丸められ、-4 に 5 回 4.5、-3.5 が丸められ、-4.5-5 に桁に丸めます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-954">For example, 3.5 rounds to 4, 4.5 rounds to 5, -3.5 rounds to -4, and -4.5 rounds to -5.</span></span> <span data-ttu-id="b96a8-955">この形式の丸めがによって表される、<xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType>列挙型のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b96a8-955">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="b96a8-956">ゼロから離れる方向に丸め処理は、丸め処理の最もよく知られた形式です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-956">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="b96a8-957">偶数丸め処理や銀行型丸め</span><span class="sxs-lookup"><span data-stu-id="b96a8-957">Rounding to even, or banker's rounding</span></span>  
 <span data-ttu-id="b96a8-958">中間値は、最も近い偶数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-958">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="b96a8-959">たとえば、3.5 と 4.5 の両方が 4 に丸める、-3.5 と-4.5 の両方が-4 に丸めます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-959">For example, both 3.5 and 4.5 round to 4, and both -3.5 and -4.5 round to -4.</span></span> <span data-ttu-id="b96a8-960">この形式の丸めがによって表される、<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>列挙型のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b96a8-960">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="b96a8-961">近似値に丸め処理は、財務や統計操作で使用される丸め処理の標準的な形式です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-961">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="b96a8-962">IEEE 標準 754、セクション 4 に準拠しています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-962">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="b96a8-963">複数の丸め処理で使用する場合、常に中間値を 1 つの方向に丸めるによって引き起こされる丸めエラーが減少します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-963">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="b96a8-964">場合によっては、この丸めエラーは大幅にできます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-964">In some cases, this rounding error can be significant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-965">次の例は、によって返される値を表示、<xref:System.Math.Round%28System.Decimal%29>メソッド、<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>メソッドを`mode`の引数<xref:System.MidpointRounding.ToEven>、および<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>メソッドを`mode`の引数<xref:System.MidpointRounding.AwayFromZero>。</span><span class="sxs-lookup"><span data-stu-id="b96a8-965">The following example displays values returned by the <xref:System.Math.Round%28System.Decimal%29> method, the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint1.cs#5)]
 [!code-vb[System.Math.Round.Overload#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b96a8-966"><paramref name="mode" /> が <see cref="T:System.MidpointRounding" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-966"><paramref name="mode" /> is not a <see cref="T:System.MidpointRounding" /> value.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-967">結果は <see cref="T:System.Decimal" /> オブジェクトの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-967">The result is outside the range of a <see cref="T:System.Decimal" /> object.</span></span></exception>
        <altmember cref="M:System.Math.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int * MidpointRounding -&gt; decimal" Usage="System.decimal.Round (d, decimals, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b96a8-968">丸め対象の 10 進数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-968">A decimal number to round.</span></span></param>
        <param name="decimals"><span data-ttu-id="b96a8-969">戻り値の小数点以下の有効桁数 (精度)。</span><span class="sxs-lookup"><span data-stu-id="b96a8-969">The number of significant decimal places (precision) in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="b96a8-970"><paramref name="d" /> が他の 2 つの数値の中間にある場合に丸める方法を指定する値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-970">A value that specifies how to round <paramref name="d" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="b96a8-971">10 進値を指定した精度に丸めます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-971">Rounds a decimal value to a specified precision.</span></span> <span data-ttu-id="b96a8-972">パラメーターは、値が他の 2 つの数値の中間にある場合にその値を丸める方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-972">A parameter specifies how to round the value if it is midway between two other numbers.</span></span></summary>
        <returns><span data-ttu-id="b96a8-973"><paramref name="decimals" /> パラメーターと精度が等価である <paramref name="d" /> パラメーターの値に最も近い数値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-973">The number that is nearest to the <paramref name="d" /> parameter with a precision equal to the <paramref name="decimals" /> parameter.</span></span> <span data-ttu-id="b96a8-974"><paramref name="d" /> が 2 つの数値 (一方が偶数でもう一方が奇数) の中間にある場合、<paramref name="mode" /> パラメーターで 2 つの数値のどちらを返すかを決定します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-974">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, the <paramref name="mode" /> parameter determines which of the two numbers is returned.</span></span> <span data-ttu-id="b96a8-975"><paramref name="d" /> の精度が <paramref name="decimals" /> より小さい場合、<paramref name="d" /> は変更されずに返されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-975">If the precision of <paramref name="d" /> is less than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-976">`decimals`パラメーター戻り値の小数点以下桁数の大きな数を指定し、0 から 28 の範囲します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-976">The `decimals` parameter specifies the number of significant decimal places in the return value and ranges from 0 to 28.</span></span> <span data-ttu-id="b96a8-977">場合`decimals`0 の場合は、整数が返されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-977">If `decimals` is zero, an integer is returned.</span></span>  
  
 <span data-ttu-id="b96a8-978">中間値では、結果の最下位の数字の後の値は、2 つの数値の間で正確に半分方法です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-978">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="b96a8-979">たとえば、3.47500 は中間の値である場合に 2 つの小数点以下桁数が丸められます、7.500 中間値を整数に丸め 場合は、です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-979">For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="b96a8-980">このような場合は、最も近い値に簡単に識別できない丸め規則、によって指定されることがなく、`mode`引数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-980">In these cases, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument.</span></span> <span data-ttu-id="b96a8-981"><xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>メソッドは、中間値を処理するための 2 つの丸め規則をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-981">The <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method supports two rounding conventions for handling midpoint values.</span></span>  
  
 <span data-ttu-id="b96a8-982">ゼロから離れる方向に丸め処理します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-982">Rounding away from zero.</span></span>  
 <span data-ttu-id="b96a8-983">中間値は、次の番号をゼロから離れる方向に丸められます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-983">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="b96a8-984">次の例では、3.75 が 3.8 に四捨五入-3.8 に 3.9 に 3.85 ラウンド-3.75 が丸められ、-3.85-3.9 に桁に丸めます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-984">For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</span></span> <span data-ttu-id="b96a8-985">この形式の丸めがによって表される、<xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType>列挙型のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b96a8-985">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="b96a8-986">ゼロから離れる方向に丸め処理は、丸め処理の最もよく知られた形式です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-986">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="b96a8-987">偶数丸め処理や銀行型丸め</span><span class="sxs-lookup"><span data-stu-id="b96a8-987">Rounding to even, or banker's rounding</span></span>  
 <span data-ttu-id="b96a8-988">中間値は、最も近い偶数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-988">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="b96a8-989">たとえば、3.75 と 3.85 の両方が 3.8 に丸める、-3.75 と-3.85 の両方が-3.8 に丸めます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-989">For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</span></span> <span data-ttu-id="b96a8-990">この形式の丸めがによって表される、<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>列挙型のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b96a8-990">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="b96a8-991">近似値に丸め処理は、財務や統計操作で使用される丸め処理の標準的な形式です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-991">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="b96a8-992">IEEE 標準 754、セクション 4 に準拠しています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-992">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="b96a8-993">複数の丸め処理で使用する場合、常に中間値を 1 つの方向に丸めるによって引き起こされる丸めエラーが減少します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-993">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="b96a8-994">場合によっては、この丸めエラーは大幅にできます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-994">In some cases, this rounding error can be significant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-995">次の例では、使用する方法、<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>メソッドを<xref:System.MidpointRounding>列挙体。</span><span class="sxs-lookup"><span data-stu-id="b96a8-995">The following example demonstrates how to use the <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b96a8-996"><paramref name="decimals" /> が 0 未満か、28 を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-996"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b96a8-997"><paramref name="mode" /> は <see cref="T:System.MidpointRounding" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-997"><paramref name="mode" /> is not a <see cref="T:System.MidpointRounding" /> value.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-998">結果は <see cref="T:System.Decimal" /> オブジェクトの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-998">The result is outside the range of a <see cref="T:System.Decimal" /> object.</span></span></exception>
        <altmember cref="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static decimal Subtract (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Subtract(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Subtract(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Subtract : decimal * decimal -&gt; decimal" Usage="System.decimal.Subtract (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="b96a8-999">被減数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-999">The minuend.</span></span></param>
        <param name="d2"><span data-ttu-id="b96a8-1000">減数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1000">The subtrahend.</span></span></param>
        <summary><span data-ttu-id="b96a8-1001">指定した <see cref="T:System.Decimal" /> 値から、指定したもう 1 つの値を減算します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1001">Subtracts one specified <see cref="T:System.Decimal" /> value from another.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1002"><paramref name="d1" /> から <paramref name="d2" /> を減算した結果。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1002">The result of subtracting <paramref name="d2" /> from <paramref name="d1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b96a8-1003">使用例を次に示します`Subtract`します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1003">The following example illustrates the use of `Subtract`.</span></span>  
  
 [!code-cpp[Decimal Example#4](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#4)]
 [!code-csharp[Decimal Example#4](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#4)]
 [!code-vb[Decimal Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-1004">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1004">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b96a8-1005">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1005">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="b96a8-1006">このメンバーの説明については、<see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1006">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1007">現在のインスタンスの値が 0 でない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1007"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1008">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1008">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b96a8-1009">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1009">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b96a8-1010">推奨される代替手段は、<xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1010">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b96a8-1011">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1011">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="b96a8-1012">このメンバーの説明については、<see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1012">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1013"><see cref="T:System.Byte" /> に変換後の現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1013">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1014">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1014">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b96a8-1015">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1015">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b96a8-1016">推奨される代替手段は、いずれかを呼び出さない、<xref:System.Decimal.ToByte%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToByte%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1016">The recommended alternative is to call either the <xref:System.Decimal.ToByte%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToByte%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-1017">結果として返された整数値が <see cref="F:System.Byte.MinValue" /> 未満であるか、<see cref="F:System.Byte.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1017">The resulting integer value is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b96a8-1018">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1018">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="b96a8-1019">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1019">This conversion is not supported.</span></span> <span data-ttu-id="b96a8-1020">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1020">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1021">なし。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1021">None.</span></span> <span data-ttu-id="b96a8-1022">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1022">This conversion is not supported.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b96a8-1023">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1023">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b96a8-1024">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1024">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="b96a8-1025">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1025">This conversion is not supported.</span></span> <span data-ttu-id="b96a8-1026">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1026">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1027">なし。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1027">None.</span></span> <span data-ttu-id="b96a8-1028">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1028">This conversion is not supported.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b96a8-1029">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1029">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b96a8-1030">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1030">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="b96a8-1031">このメンバーの説明については、<see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1031">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1032">変更されていない、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1032">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1033">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1033">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b96a8-1034">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1034">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b96a8-1035">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1035">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="b96a8-1036">このメンバーの説明については、<see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1036">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1037"><see cref="T:System.Double" /> に変換後の現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1037">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1038">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1038">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b96a8-1039">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1039">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b96a8-1040">推奨される代替手段は、いずれかを呼び出さない、<xref:System.Decimal.ToDouble%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToDouble%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1040">The recommended alternative is to call either the <xref:System.Decimal.ToDouble%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b96a8-1041"><xref:System.Double>よりも少ない有効桁数、 <xref:System.Decimal>、この操作は、丸めエラーを生成可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1041">Because a <xref:System.Double> has fewer significant digits than a <xref:System.Decimal>, this operation may produce round-off errors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b96a8-1042">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1042">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="b96a8-1043">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1043">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1044"><see cref="T:System.Int16" /> に変換後の現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1044">The value of the current instance, converted to a <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1045">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1045">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b96a8-1046">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1046">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b96a8-1047">推奨される代替手段は、いずれかを呼び出さない、<xref:System.Decimal.ToInt16%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToInt16%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1047">The recommended alternative is to call either the <xref:System.Decimal.ToInt16%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b96a8-1048"><xref:System.Decimal>値は、最も近い整数値を 0 方向に丸められます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1048">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-1049">結果として返された整数値が <see cref="F:System.Int16.MinValue" /> 未満であるか、<see cref="F:System.Int16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1049">The resulting integer value is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b96a8-1050">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1050">The parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="b96a8-1051">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1051">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1052"><see cref="T:System.Int32" /> に変換後の現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1052">The value of the current instance, converted to a <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1053">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1053">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b96a8-1054">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1054">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b96a8-1055">推奨される代替手段は、いずれかを呼び出さない、<xref:System.Decimal.ToInt32%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToInt32%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1055">The recommended alternative is to call either the <xref:System.Decimal.ToInt32%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b96a8-1056"><xref:System.Decimal>値は、最も近い整数値を 0 方向に丸められます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1056">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-1057">結果として返された整数値が <see cref="F:System.Int32.MinValue" /> 未満であるか、<see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1057">The resulting integer value is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b96a8-1058">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1058">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="b96a8-1059">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1059">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1060"><see cref="T:System.Int64" /> に変換後の現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1060">The value of the current instance, converted to a <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1061">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1061">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b96a8-1062">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1062">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b96a8-1063">推奨される代替手段は、いずれかを呼び出さない、<xref:System.Decimal.ToInt64%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToInt64%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1063">The recommended alternative is to call either the <xref:System.Decimal.ToInt64%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt64%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-1064">結果として返された整数値が <see cref="F:System.Int64.MinValue" /> 未満であるか、<see cref="F:System.Int64.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1064">The resulting integer value is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b96a8-1065">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1065">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="b96a8-1066">このメンバーの説明については、<see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1066">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1067"><see cref="T:System.SByte" /> に変換後の現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1067">The value of the current instance, converted to a <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1068">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1068">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b96a8-1069">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1069">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b96a8-1070">推奨される代替手段は、いずれかを呼び出さない、<xref:System.Decimal.ToSByte%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToSByte%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1070">The recommended alternative is to call either the <xref:System.Decimal.ToSByte%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToSByte%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-1071">結果として返された整数値が <see cref="F:System.SByte.MinValue" /> 未満であるか、<see cref="F:System.SByte.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1071">The resulting integer value is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b96a8-1072">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1072">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="b96a8-1073">このメンバーの説明については、<see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1073">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1074"><see cref="T:System.Single" /> に変換後の現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1074">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1075">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1075">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b96a8-1076">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1076">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b96a8-1077">推奨される代替手段は、いずれかを呼び出さない、<xref:System.Decimal.ToSingle%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToSingle%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1077">The recommended alternative is to call either the <xref:System.Decimal.ToSingle%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToSingle%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b96a8-1078">この <see cref="T:System.Decimal" /> インスタンスの値を変換する対象の型。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1078">The type to which to convert the value of this <see cref="T:System.Decimal" /> instance.</span></span></param>
        <param name="provider"><span data-ttu-id="b96a8-1079">戻り値の書式に関するカルチャ固有の情報を提供する <see cref="T:System.IFormatProvider" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1079">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="b96a8-1080">このメンバーの説明については、<see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1080">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1081"><paramref name="type" /> に変換後の現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1081">The value of the current instance, converted to a <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1082">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1082">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b96a8-1083">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1083">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b96a8-1084">推奨される代替手段は、 `static` (`Shared` Visual Basic で)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1084">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b96a8-1085"><paramref name="type" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1085"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b96a8-1086">要求された型変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1086">The requested type conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b96a8-1087">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1087">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="b96a8-1088">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1088">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1089"><see cref="T:System.UInt16" /> に変換後の現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1089">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1090">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1090">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b96a8-1091">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1091">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b96a8-1092">推奨される代替手段は、いずれかを呼び出さない、<xref:System.Decimal.ToUInt16%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToUInt16%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1092">The recommended alternative is to call either the <xref:System.Decimal.ToUInt16%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt16%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-1093">結果として返された整数値が <see cref="F:System.UInt16.MinValue" /> 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1093">The resulting integer value is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b96a8-1094">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1094">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="b96a8-1095">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1095">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1096"><see cref="T:System.UInt32" /> に変換後の現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1096">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1097">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1097">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b96a8-1098">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1098">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b96a8-1099">推奨される代替手段は、いずれかを呼び出さない、<xref:System.Decimal.ToUInt32%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToUInt32%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1099">The recommended alternative is to call either the <xref:System.Decimal.ToUInt32%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt32%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b96a8-1100"><xref:System.Decimal>値は、最も近い整数値を 0 方向に丸められます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1100">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-1101">結果として返された整数値が <see cref="F:System.UInt32.MinValue" /> 未満であるか、<see cref="F:System.UInt32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1101">The resulting integer value is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b96a8-1102">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1102">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="b96a8-1103">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1103">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1104"><see cref="T:System.UInt64" /> に変換後の現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1104">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1105">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1105">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b96a8-1106">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1106">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b96a8-1107">推奨される代替手段は、いずれかを呼び出さない、<xref:System.Decimal.ToUInt64%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToUInt64%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1107">The recommended alternative is to call either the <xref:System.Decimal.ToUInt64%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt64%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b96a8-1108"><xref:System.Decimal>値は、最も近い整数値を 0 方向に丸められます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1108">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-1109">結果として返された整数値が <see cref="F:System.UInt64.MinValue" /> 未満であるか、<see cref="F:System.UInt64.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1109">The resulting integer value is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="b96a8-1110">コールバックを開始したオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1110">The object that initiated the callback.</span></span> <span data-ttu-id="b96a8-1111">このパラメーターの機能は、現在実装されていません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1111">The functionality for this parameter is not currently implemented.</span></span></param>
        <summary><span data-ttu-id="b96a8-1112">オブジェクトの逆シリアル化の完了後に実行します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1112">Runs when the deserialization of an object has been completed.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="b96a8-1113"><see cref="T:System.Decimal" /> オブジェクトには、無効なデータまたは破損したデータが含まれています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1113">The <see cref="T:System.Decimal" /> object contains invalid or corrupted data.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Decimal) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToByte : decimal -&gt; byte" Usage="System.decimal.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-1114">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1114">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-1115">指定した <see cref="T:System.Decimal" /> の値を、等価の 8 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1115">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1116"><paramref name="value" /> と等価の 8 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1116">An 8-bit unsigned integer equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1117">パラメーター`value`は最も近い整数値を 0 方向に丸められ、その結果が返されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1117">Parameter `value` is rounded to the nearest integer value toward zero, and that result is returned.</span></span>  
  
 <span data-ttu-id="b96a8-1118">変換することも、<xref:System.Decimal>値を 8 ビットの符号なし整数を使用して、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1118">You can also convert a <xref:System.Decimal> value to an 8-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="b96a8-1119">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1119">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-1120">次の例では、<xref:System.Decimal.ToByte%2A>を 10 進数値に変換するメソッド<xref:System.Byte>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1120">The following example uses the <xref:System.Decimal.ToByte%2A> method to convert decimal numbers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.tobyte/cs/tobyte_1.cs#1)]
 [!code-vb[System.Decimal.ToByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.tobyte/vb/tobyte_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-1121"><paramref name="value" /> が <see cref="F:System.Byte.MinValue" /> より小さいか <see cref="F:System.Byte.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1121"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToDouble(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (d As Decimal) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToDouble : decimal -&gt; double" Usage="System.decimal.ToDouble d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b96a8-1122">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1122">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-1123">指定した <see cref="T:System.Decimal" /> の値を、それと等価の倍精度浮動小数点数に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1123">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1124"><paramref name="d" /> と等価の倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1124">A double-precision floating-point number equivalent to <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1125">この操作は、倍精度浮動小数点数があるより有効桁数が少ないために、丸めエラーが発生する<xref:System.Decimal>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1125">This operation can produce round-off errors because a double-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>  
  
 <span data-ttu-id="b96a8-1126">変換することも、<xref:System.Decimal>を<xref:System.Double>値を使用して、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1126">You can also convert a <xref:System.Decimal> to a <xref:System.Double> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="b96a8-1127">変換には、精度の損失を伴うことができます、ため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1127">Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-1128">次のコード例に変換します`Decimal`番号の<xref:System.Double>を使用して値`ToDouble`メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1128">The following code example converts `Decimal` numbers to <xref:System.Double> values using `ToDouble` method.</span></span>  
  
 [!code-cpp[System.Decimal.ToXXX#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CPP/tosgl_dbl.cpp#5)]
 [!code-csharp[System.Decimal.ToXXX#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CS/tosgl_dbl.cs#5)]
 [!code-vb[System.Decimal.ToXXX#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToXXX/VB/tosgl_dbl.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Decimal) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : decimal -&gt; int16" Usage="System.decimal.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-1129">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1129">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-1130">指定した <see cref="T:System.Decimal" /> の値を、等価の 16 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1130">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1131"><paramref name="value" /> と等価の 16 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1131">A 16-bit signed integer equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1132">変換することも、<xref:System.Decimal>を使用して、16 ビット整数値、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1132">You can also convert a <xref:System.Decimal> value to a 16-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="b96a8-1133">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1133">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-1134">次の例では、<xref:System.Decimal.ToInt16%2A>を 10 進数値に変換するメソッド<xref:System.Int16>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1134">The following example uses the <xref:System.Decimal.ToInt16%2A> method to convert decimal numbers to <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint16/cs/toint16_1.cs#1)]
 [!code-vb[System.Decimal.ToInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint16/vb/toint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-1135"><paramref name="value" /> が <see cref="F:System.Int16.MinValue" /> より小さいか <see cref="F:System.Int16.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1135"><paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (d As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : decimal -&gt; int" Usage="System.decimal.ToInt32 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b96a8-1136">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1136">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-1137">指定した <see cref="T:System.Decimal" /> の値を、等価の 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1137">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1138"><paramref name="d" /> の値と等価の 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1138">A 32-bit signed integer equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1139">戻り値は、10 進値の整数部分です。桁の小数部が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1139">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="b96a8-1140">変換することも、<xref:System.Decimal>を使用して 32 ビット整数値、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1140">You can also convert a <xref:System.Decimal> value to a 32-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="b96a8-1141">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1141">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-1142">次の例では、<xref:System.Decimal.ToInt32%2A>を 10 進数値に変換するメソッド<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1142">The following example uses the <xref:System.Decimal.ToInt32%2A> method to convert decimal numbers to <xref:System.Int32> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint32/cs/toint32_1.cs#1)]
 [!code-vb[System.Decimal.ToInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint32/vb/toint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-1143"><paramref name="d" /> が <see cref="F:System.Int32.MinValue" /> より小さいか <see cref="F:System.Int32.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1143"><paramref name="d" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (d As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : decimal -&gt; int64" Usage="System.decimal.ToInt64 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b96a8-1144">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1144">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-1145">指定した <see cref="T:System.Decimal" /> の値を、等価の 64 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1145">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1146"><paramref name="d" /> の値と等価の 64 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1146">A 64-bit signed integer equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1147">戻り値は、10 進値の整数部分です。桁の小数部が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1147">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="b96a8-1148">変換することも、<xref:System.Decimal>を使用して 64 ビット整数値、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1148">You can also convert a <xref:System.Decimal> value to a 64-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="b96a8-1149">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1149">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-1150">次の例では、<xref:System.Decimal.ToInt64%2A>を 10 進数値に変換するメソッド<xref:System.Int64>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1150">The following example uses the <xref:System.Decimal.ToInt64%2A> method to convert decimal numbers to <xref:System.Int64> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint64/cs/toint64_1.cs#1)]
 [!code-vb[System.Decimal.ToInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint64/vb/toint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-1151"><paramref name="d" /> が <see cref="F:System.Int64.MinValue" /> より小さいか <see cref="F:System.Int64.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1151"><paramref name="d" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="ToOACurrency">
      <MemberSignature Language="C#" Value="public static long ToOACurrency (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToOACurrency(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToOACurrency(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToOACurrency (value As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToOACurrency(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToOACurrency : decimal -&gt; int64" Usage="System.decimal.ToOACurrency value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-1152">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1152">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-1153">指定した <see cref="T:System.Decimal" /> 値を、64 ビット符号付き整数に格納されるそれと等価の OLE オートメーション通貨値に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1153">Converts the specified <see cref="T:System.Decimal" /> value to the equivalent OLE Automation Currency value, which is contained in a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1154"><paramref name="value" /> と等価の OLE オートメーション値を格納する 64 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1154">A 64-bit signed integer that contains the OLE Automation equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b96a8-1155">次のコード例では、`ToOACurrency`に変換するメソッド`Decimal`に含まれている同等の OLE オートメーション通貨値に数値<xref:System.Int64>フィールド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1155">The following code example uses the `ToOACurrency` method to convert `Decimal` numbers to the equivalent OLE Automation Currency values that are contained in <xref:System.Int64> fields.</span></span>  
  
 [!code-cpp[System.Decimal.OACurrency#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CPP/tooacurrency.cpp#1)]
 [!code-csharp[System.Decimal.OACurrency#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CS/tooacurrency.cs#1)]
 [!code-vb[System.Decimal.OACurrency#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.OACurrency/VB/tooacurrency.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.FromOACurrency(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToSByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Decimal) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : decimal -&gt; sbyte" Usage="System.decimal.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-1156">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1156">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-1157">指定した <see cref="T:System.Decimal" /> の値を、等価の 8 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1157">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1158"><paramref name="value" /> と等価の 8 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1158">An 8-bit signed integer equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1159">変換することも、<xref:System.Decimal>値を 8 ビットの符号付き整数を使用して、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1159">You can also convert a <xref:System.Decimal> value to an 8-bit signed integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="b96a8-1160">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1160">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-1161">次の例では、<xref:System.Decimal.ToSByte%2A>を 10 進数値に変換するメソッド<xref:System.SByte>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1161">The following example uses the <xref:System.Decimal.ToSByte%2A> method to convert decimal numbers to <xref:System.SByte> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToSByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.tosbyte/cs/tosbyte1.cs#1)]
 [!code-vb[System.Decimal.ToSByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.tosbyte/vb/tosbyte1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt16(System.Decimal)" />
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-1162"><paramref name="value" /> が <see cref="F:System.SByte.MinValue" /> より小さいか <see cref="F:System.SByte.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1162"><paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToSingle(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (d As Decimal) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToSingle : decimal -&gt; single" Usage="System.decimal.ToSingle d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b96a8-1163">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1163">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-1164">指定した <see cref="T:System.Decimal" /> の値を、それと等価の単精度浮動小数点数に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1164">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1165"><paramref name="d" /> の値と等価な単精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1165">A single-precision floating-point number equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1166">この操作は、単精度浮動小数点数があるより有効桁数が少ないために、丸めエラーが発生する<xref:System.Decimal>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1166">This operation can produce round-off errors because a single-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>  
  
 <span data-ttu-id="b96a8-1167">変換することも、<xref:System.Decimal>を<xref:System.Single>値を使用して、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1167">You can also convert a <xref:System.Decimal> to a <xref:System.Single> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="b96a8-1168">変換には、精度の損失を伴うことができます、ため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1168">Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-1169">次のコード例に変換します`Decimal`番号の<xref:System.Single>値を使用して、`ToSingle`メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1169">The following code example converts `Decimal` numbers to <xref:System.Single> values using the `ToSingle` method.</span></span>  
  
 [!code-cpp[System.Decimal.ToXXX#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CPP/tosgl_dbl.cpp#5)]
 [!code-csharp[System.Decimal.ToXXX#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CS/tosgl_dbl.cs#5)]
 [!code-vb[System.Decimal.ToXXX#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToXXX/VB/tosgl_dbl.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b96a8-1170">対象のインスタンスの数値を等価の <see cref="T:System.String" /> 形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1170">Converts the numeric value of this instance to its equivalent <see cref="T:System.String" /> representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="decimal.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b96a8-1171">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1171">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1172">このインスタンスの値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1172">A string that represents the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1173"><xref:System.Decimal.ToString>メソッド形式、<xref:System.Decimal>現在のカルチャの形式 ("G"または [全般]) の既定値します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1173">The <xref:System.Decimal.ToString> method formats a <xref:System.Decimal> value in the default ("G", or general) format of the current culture.</span></span> <span data-ttu-id="b96a8-1174">別の形式またはカルチャを指定する場合の他のオーバー ロードを使用して、<xref:System.Decimal.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1174">If you want to specify a different format or culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="b96a8-1175">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="b96a8-1175">To use format</span></span>|<span data-ttu-id="b96a8-1176">カルチャ</span><span class="sxs-lookup"><span data-stu-id="b96a8-1176">For culture</span></span>|<span data-ttu-id="b96a8-1177">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1177">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="b96a8-1178">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="b96a8-1178">Default ("G") format</span></span>|<span data-ttu-id="b96a8-1179">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="b96a8-1179">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="b96a8-1180">特定の形式</span><span class="sxs-lookup"><span data-stu-id="b96a8-1180">A specific format</span></span>|<span data-ttu-id="b96a8-1181">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="b96a8-1181">Default (current) culture</span></span>|<xref:System.Decimal.ToString%28System.String%29>|  
|<span data-ttu-id="b96a8-1182">特定の形式</span><span class="sxs-lookup"><span data-stu-id="b96a8-1182">A specific format</span></span>|<span data-ttu-id="b96a8-1183">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="b96a8-1183">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="b96a8-1184">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1184">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="b96a8-1185">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1185">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="b96a8-1186">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1186">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-1187">次の例では、表示、<xref:System.Decimal>値の既定値を使用して<xref:System.Decimal.ToString>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1187">The following example displays a <xref:System.Decimal> value using the default <xref:System.Decimal.ToString> method.</span></span> <span data-ttu-id="b96a8-1188">文字列表現が表示されます、<xref:System.Decimal>からさまざまな標準書式指定子を使用して作成される値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1188">It also displays the string representations of the <xref:System.Decimal> value that result from using a number of standard format specifiers.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#2)]
 [!code-vb[System.Decimal.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#2)]  
  
 <span data-ttu-id="b96a8-1189">次の例では、アカウントで、金額が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1189">The following example displays the amount of money in an account.</span></span>  
  
 [!code-cpp[Decimal Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#5)]
 [!code-csharp[Decimal Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#5)]
 [!code-vb[Decimal Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="b96a8-1190">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="b96a8-1190">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="b96a8-1191">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="b96a8-1191">Standard Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="decimal.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b96a8-1192">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1192">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="b96a8-1193">このインスタンスの数値を、指定したカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1193">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1194"><paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1194">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1195"><xref:System.Decimal.ToString%28System.IFormatProvider%29>メソッド形式、<xref:System.Decimal>指定されたカルチャの形式 ("G"または [全般]) の既定値します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1195">The <xref:System.Decimal.ToString%28System.IFormatProvider%29> method formats a <xref:System.Decimal> value in the default ("G", or general) format of a specified culture.</span></span> <span data-ttu-id="b96a8-1196">別の形式または現在のカルチャを指定する場合の他のオーバー ロードを使用して、<xref:System.Decimal.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1196">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="b96a8-1197">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="b96a8-1197">To use format</span></span>|<span data-ttu-id="b96a8-1198">カルチャ</span><span class="sxs-lookup"><span data-stu-id="b96a8-1198">For culture</span></span>|<span data-ttu-id="b96a8-1199">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1199">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="b96a8-1200">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="b96a8-1200">Default ("G") format</span></span>|<span data-ttu-id="b96a8-1201">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="b96a8-1201">Default (current) culture</span></span>|<xref:System.Decimal.ToString>|  
|<span data-ttu-id="b96a8-1202">特定の形式</span><span class="sxs-lookup"><span data-stu-id="b96a8-1202">A specific format</span></span>|<span data-ttu-id="b96a8-1203">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="b96a8-1203">Default (current) culture</span></span>|<xref:System.Decimal.ToString%28System.String%29>|  
|<span data-ttu-id="b96a8-1204">特定の形式</span><span class="sxs-lookup"><span data-stu-id="b96a8-1204">A specific format</span></span>|<span data-ttu-id="b96a8-1205">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="b96a8-1205">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="b96a8-1206">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1206">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="b96a8-1207">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1207">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="b96a8-1208">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1208">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="b96a8-1209">`provider`パラメーターは、<xref:System.IFormatProvider>実装が<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを返します。 を<xref:System.Globalization.NumberFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1209">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="b96a8-1210">通常、`provider`は、<xref:System.Globalization.NumberFormatInfo>オブジェクトまたは<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1210">Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> object or a <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="b96a8-1211">`provider`パラメーター書式設定で使用されるカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1211">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="b96a8-1212">`provider` が `null` の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1212">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="b96a8-1213">変換する、<xref:System.Decimal>値を指定したカルチャと特定の形式の文字列では、呼び出しを使用してその文字列形式に、<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1213">To convert a <xref:System.Decimal> value to its string representation using a specified culture and a specific format string, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-1214">次の例の文字列表現を表示する、<xref:System.Decimal>値を使用して<xref:System.Globalization.CultureInfo>いくつかの異なるカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1214">The following example displays the string representation of a <xref:System.Decimal> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#3)]
 [!code-vb[System.Decimal.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="b96a8-1215">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="b96a8-1215">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="b96a8-1216">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="b96a8-1216">Standard Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="decimal.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="b96a8-1217">標準またはカスタムの数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1217">A standard or custom numeric format string.</span></span></param>
        <summary><span data-ttu-id="b96a8-1218">指定した書式を使用して、このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1218">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1219"><paramref name="format" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1219">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1220"><xref:System.Decimal.ToString%28System.String%29>メソッド形式、<xref:System.Decimal>現在のカルチャの規則を使用して指定した形式の値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1220">The <xref:System.Decimal.ToString%28System.String%29> method formats a <xref:System.Decimal> value in a specified format by using the conventions of the current culture.</span></span> <span data-ttu-id="b96a8-1221">既定値 ("G"または [全般]) を使用する場合は、書式を設定または別のカルチャを指定するの他のオーバー ロードを使用して、<xref:System.Decimal.ToString%2A>メソッドは、次のように。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1221">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="b96a8-1222">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="b96a8-1222">To use format</span></span>|<span data-ttu-id="b96a8-1223">カルチャ</span><span class="sxs-lookup"><span data-stu-id="b96a8-1223">For culture</span></span>|<span data-ttu-id="b96a8-1224">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1224">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="b96a8-1225">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="b96a8-1225">Default ("G") format</span></span>|<span data-ttu-id="b96a8-1226">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="b96a8-1226">Default (current) culture</span></span>|<xref:System.Decimal.ToString>|  
|<span data-ttu-id="b96a8-1227">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="b96a8-1227">Default ("G") format</span></span>|<span data-ttu-id="b96a8-1228">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="b96a8-1228">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="b96a8-1229">特定の形式</span><span class="sxs-lookup"><span data-stu-id="b96a8-1229">A specific format</span></span>|<span data-ttu-id="b96a8-1230">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="b96a8-1230">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="b96a8-1231"><xref:System.Decimal.ToString%2A>メソッドで指定された標準またはカスタムの数値書式指定文字列を使用して、`format`パラメーターを現在のインスタンスの値を文字列表現に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1231">The <xref:System.Decimal.ToString%2A> method uses the standard or custom numeric format string specified by the `format` parameter to convert the value of the current instance into its string representation.</span></span> <span data-ttu-id="b96a8-1232">`format`パラメーターに任意の有効なできます[標準数値書式指定子](~/docs/standard/base-types/standard-numeric-format-strings.md)以外の任意の組み合わせに加え、D、R、および X、[カスタム数値書式指定子](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1232">The `format` parameter can be any valid [standard numeric format specifier](~/docs/standard/base-types/standard-numeric-format-strings.md) except for D, R, and X, as well as any combination of [custom numeric format specifiers](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="b96a8-1233">場合`format`は`null`またはこのインスタンスの戻り値、空の文字列が、一般的な数値書式指定子 (G) でフォーマットされています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1233">If `format` is `null` or an empty string, the return value of this instance is formatted with the general numeric format specifier (G).</span></span>  
  
 <span data-ttu-id="b96a8-1234">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1234">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="b96a8-1235">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1235">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="b96a8-1236">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1236">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="b96a8-1237">戻り値の書式を使用して、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1237">The return value is formatted by using the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="b96a8-1238">指定したカルチャの書式指定規則を適用する、<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1238">To apply the formatting conventions of a specified culture, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-1239">次の例では、表示、<xref:System.Decimal>値の 2 つのカスタム数値書式指定文字列と共に、サポートされている標準の数値書式指定子を使用します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1239">The following example displays a <xref:System.Decimal> value using each of the supported standard numeric format specifiers, together with two custom numeric format strings.</span></span> <span data-ttu-id="b96a8-1240">数値の値を文字列に変換では、EN-US カルチャの書式指定規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1240">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#4)]
 [!code-vb[System.Decimal.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="b96a8-1241"><paramref name="format" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1241"><paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="b96a8-1242">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="b96a8-1242">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="b96a8-1243">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="b96a8-1243">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="b96a8-1244">カスタム数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="b96a8-1244">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="b96a8-1245">方法: 数値に先行するゼロを埋め込む</span><span class="sxs-lookup"><span data-stu-id="b96a8-1245">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="decimal.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="b96a8-1246">数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1246">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="b96a8-1247">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1247">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="b96a8-1248">このインスタンスの数値を、指定した書式およびカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1248">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1249"><paramref name="format" /> および <paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1249">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1250"><xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29>メソッド形式、<xref:System.Double>指定のカルチャの指定した形式の値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1250">The <xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Double> value in a specified format of a specified culture.</span></span> <span data-ttu-id="b96a8-1251">既定の形式またはカルチャの設定を使用する場合の他のオーバー ロードを使用して、<xref:System.Double.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1251">If you want to use default format or culture settings, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="b96a8-1252">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="b96a8-1252">To use format</span></span>|<span data-ttu-id="b96a8-1253">カルチャ</span><span class="sxs-lookup"><span data-stu-id="b96a8-1253">For culture</span></span>|<span data-ttu-id="b96a8-1254">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1254">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="b96a8-1255">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="b96a8-1255">Default ("G") format</span></span>|<span data-ttu-id="b96a8-1256">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="b96a8-1256">Default (current) culture</span></span>|<xref:System.Double.ToString>|  
|<span data-ttu-id="b96a8-1257">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="b96a8-1257">Default ("G") format</span></span>|<span data-ttu-id="b96a8-1258">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="b96a8-1258">A specific culture</span></span>|<xref:System.Double.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="b96a8-1259">特定の形式</span><span class="sxs-lookup"><span data-stu-id="b96a8-1259">A specific format</span></span>|<span data-ttu-id="b96a8-1260">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="b96a8-1260">Default (current) culture</span></span>|<xref:System.Double.ToString%28System.String%29>|  
  
 <span data-ttu-id="b96a8-1261">`format` D、R、および X 以外の任意の有効な標準の数値書式指定子およびカスタム数値書式指定子の任意の組み合わせをパラメーターとして使用することができます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1261">The `format` parameter can be any valid standard numeric format specifier except for D, R, and X, as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="b96a8-1262">場合`format`は`null`か、[全般] の数値書式指定子 ("G") 書式がこのインスタンスの戻り値、空の文字列。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1262">If `format` is `null` or an empty string, the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="b96a8-1263">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1263">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="b96a8-1264">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1264">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="b96a8-1265">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1265">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="b96a8-1266">`provider`パラメーターは、<xref:System.IFormatProvider>実装が<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを返します。 を<xref:System.Globalization.NumberFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1266">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="b96a8-1267">通常、`provider`は、<xref:System.Globalization.NumberFormatInfo>または<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1267">Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="b96a8-1268">`provider`パラメーター書式設定で使用されるカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1268">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="b96a8-1269">`provider` が `null` の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1269">If `provider` is `null`, the thread current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-1270">次の例では、表示、<xref:System.Decimal>のいくつかの異なるカルチャを使用して、サポートされている標準の数値書式指定子の値します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1270">The following example displays a <xref:System.Decimal> value using each of the supported standard numeric format specifiers for several different cultures.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#5)]
 [!code-vb[System.Decimal.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="b96a8-1271"><paramref name="format" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1271"><paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="b96a8-1272">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="b96a8-1272">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="b96a8-1273">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="b96a8-1273">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="b96a8-1274">カスタム数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="b96a8-1274">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="b96a8-1275">方法: 数値に先行するゼロを埋め込む</span><span class="sxs-lookup"><span data-stu-id="b96a8-1275">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Decimal) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : decimal -&gt; uint16" Usage="System.decimal.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b96a8-1276">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1276">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-1277">指定した <see cref="T:System.Decimal" /> の値を、等価の 16 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1277">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1278"><paramref name="value" /> の値と等価な 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1278">A 16-bit unsigned integer equivalent to the value of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1279">戻り値は、10 進値の整数部分です。桁の小数部が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1279">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="b96a8-1280">変換することも、<xref:System.Decimal>を使用して 16 ビット符号なし整数値、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1280">You can also convert a <xref:System.Decimal> value to a 16-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="b96a8-1281">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1281">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-1282">次の例では、<xref:System.Decimal.ToUInt16%2A>を 10 進数値に変換するメソッド<xref:System.UInt16>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1282">The following example uses the <xref:System.Decimal.ToUInt16%2A> method to convert decimal numbers to <xref:System.UInt16> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint16/cs/touint16_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint16/vb/touint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt32(System.Decimal)" />
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-1283"><paramref name="value" /> は <see cref="F:System.UInt16.MaxValue" /> を超えているか、または <see cref="F:System.UInt16.MinValue" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1283"><paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />.</span></span></exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (d As Decimal) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : decimal -&gt; uint32" Usage="System.decimal.ToUInt32 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b96a8-1284">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1284">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-1285">指定した <see cref="T:System.Decimal" /> の値を、等価の 32 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1285">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1286"><paramref name="d" /> の値と等価な 32 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1286">A 32-bit unsigned integer equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1287">戻り値は、10 進値の整数部分です。桁の小数部が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1287">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="b96a8-1288">変換することも、<xref:System.Decimal>を使用して 32 ビット符号なし整数値、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1288">You can also convert a <xref:System.Decimal> value to an 32-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="b96a8-1289">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1289">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-1290">次の例では、<xref:System.Decimal.ToUInt32%2A>を 10 進数値に変換するメソッド<xref:System.UInt32>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1290">The following example uses the <xref:System.Decimal.ToUInt32%2A> method to convert decimal numbers to <xref:System.UInt32> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint32/cs/touint32_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint32/vb/touint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt64(System.Decimal)" />
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-1291"><paramref name="d" /> が負か <see cref="F:System.UInt32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1291"><paramref name="d" /> is negative or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (d As Decimal) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : decimal -&gt; uint64" Usage="System.decimal.ToUInt64 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b96a8-1292">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1292">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="b96a8-1293">指定した <see cref="T:System.Decimal" /> の値を、等価の 64 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1293">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1294"><paramref name="d" /> の値と等価な 64 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1294">A 64-bit unsigned integer equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1295">戻り値は、10 進値の整数部分です。桁の小数部が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1295">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="b96a8-1296">変換することも、<xref:System.Decimal>を使用して 64 ビット符号なし整数値、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1296">You can also convert a <xref:System.Decimal> value to an 64-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="b96a8-1297">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1297">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-1298">次の例では、<xref:System.Decimal.ToUInt64%2A>を 10 進数値に変換するメソッド<xref:System.UInt64>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1298">The following example uses the <xref:System.Decimal.ToUInt64%2A> method to convert decimal numbers to <xref:System.UInt64> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint64/cs/touint64_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint64/vb/touint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="b96a8-1299"><paramref name="d" /> が負か <see cref="F:System.UInt64.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1299"><paramref name="d" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static decimal Truncate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Truncate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Truncate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Truncate(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Truncate : decimal -&gt; decimal" Usage="System.decimal.Truncate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="b96a8-1300">切り捨てる 10 進数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1300">The decimal number to truncate.</span></span></param>
        <summary><span data-ttu-id="b96a8-1301">指定した <see cref="T:System.Decimal" /> の整数の桁を返します。小数の桁は破棄されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1301">Returns the integral digits of the specified <see cref="T:System.Decimal" />; any fractional digits are discarded.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1302"><paramref name="d" /> を 0 方向の近似整数に丸めた結果。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1302">The result of <paramref name="d" /> rounded toward zero, to the nearest whole number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1303">このメソッドに丸めます`d`小数点より後の桁を破棄することに対応する 0 に、最も近い整数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1303">This method rounds `d` toward zero, to the nearest whole number, which corresponds to discarding any digits after the decimal point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-1304">次のコード例では、`Truncate`メソッドをいくつかの小数部の桁を破棄`Decimal`値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1304">The following code example uses the `Truncate` method to discard the fractional digits of several `Decimal` values.</span></span>  
  
 [!code-cpp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CPP/floor_neg_trunc.cpp#1)]
 [!code-csharp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CS/floor_neg_trunc.cs#1)]
 [!code-vb[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/VB/floor_neg_trunc.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="decimal.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b96a8-1305">数値の文字列形式を、それと等価の <see cref="T:System.Decimal" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1305">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span></span> <span data-ttu-id="b96a8-1306">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1306">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.Decimal.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.ReadOnlySpan{System.Char},System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.decimal.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Decimal" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.String,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.decimal.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Decimal" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b96a8-1307">変換する数値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1307">The string representation of the number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="b96a8-1308">変換が成功した場合は、このメソッドから制御が返されるときに <paramref name="s" /> に格納された数値と等価の <see cref="T:System.Decimal" /> 数を格納します。変換に失敗した場合は 0 を格納します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1308">When this method returns, contains the <see cref="T:System.Decimal" /> number that is equivalent to the numeric value contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="b96a8-1309"><paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、有効な書式の数値ではない、または <see cref="F:System.Decimal.MinValue" /> より小さいか <see cref="F:System.Decimal.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1309">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not a number in a valid format, or represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span> <span data-ttu-id="b96a8-1310">このパラメーターは初期化されずに渡されます。<paramref name="result" /> で最初に指定された値はすべて上書きされます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1310">This parameter is passed uininitialized; any value originally supplied in <paramref name="result" /> is overwritten.</span></span></param>
        <summary><span data-ttu-id="b96a8-1311">数値の文字列形式を、それと等価の <see cref="T:System.Decimal" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1311">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span></span> <span data-ttu-id="b96a8-1312">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1312">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1313"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1313"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1314">このオーバー ロードとは異なります、<xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType>解析の数値の値を返す代わりに、解析操作が成功したかどうかを示すブール値を返すことによってメソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1314">This overload differs from the <xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="b96a8-1315">例外処理を使用してテストする必要がある、<xref:System.FormatException>イベントで`s`有効でないし、正常に解析されることはできません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1315">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="b96a8-1316">パラメーター`s`フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1316">Parameter `s` contains a number of the form:</span></span>  
  
 <span data-ttu-id="b96a8-1317">[ws][記号][数字] [.fractional 桁] [ws] の数字</span><span class="sxs-lookup"><span data-stu-id="b96a8-1317">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="b96a8-1318">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1318">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="b96a8-1319">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1319">The following table describes each element.</span></span>  
  
|<span data-ttu-id="b96a8-1320">要素</span><span class="sxs-lookup"><span data-stu-id="b96a8-1320">Element</span></span>|<span data-ttu-id="b96a8-1321">説明</span><span class="sxs-lookup"><span data-stu-id="b96a8-1321">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="b96a8-1322">*ws*</span><span class="sxs-lookup"><span data-stu-id="b96a8-1322">*ws*</span></span>|<span data-ttu-id="b96a8-1323">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1323">Optional white space.</span></span>|  
|<span data-ttu-id="b96a8-1324">*sign*</span><span class="sxs-lookup"><span data-stu-id="b96a8-1324">*sign*</span></span>|<span data-ttu-id="b96a8-1325">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1325">An optional sign.</span></span>|  
|<span data-ttu-id="b96a8-1326">*数字*</span><span class="sxs-lookup"><span data-stu-id="b96a8-1326">*digits*</span></span>|<span data-ttu-id="b96a8-1327">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1327">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="b96a8-1328">*、*</span><span class="sxs-lookup"><span data-stu-id="b96a8-1328">*,*</span></span>|<span data-ttu-id="b96a8-1329">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1329">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="b96a8-1330">*.*</span><span class="sxs-lookup"><span data-stu-id="b96a8-1330">*.*</span></span>|<span data-ttu-id="b96a8-1331">カルチャに固有の小数点記号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1331">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="b96a8-1332">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="b96a8-1332">*fractional-digits*</span></span>|<span data-ttu-id="b96a8-1333">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1333">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="b96a8-1334">パラメーター`s`を使用して解釈されます、<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1334">Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="b96a8-1335">つまり、空白文字と桁区切り記号が許可されているが、通貨記号は表示されません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1335">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="b96a8-1336">要素を明示的に定義する (通貨記号、数千などの区切り記号および空白) に存在すること`s`を使用して、<xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1336">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="b96a8-1337">パラメーター`s`で書式設定情報を使用して解析を<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のシステム カルチャ用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1337">Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="b96a8-1338">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1338">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="b96a8-1339">文字列を解析するカルチャを指定の他の書式設定情報を使用して、使用、<xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1339">To parse a string using the formatting information of some other specified culture, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="b96a8-1340">必要に応じて、値の`s`近似値に丸められます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1340">If necessary, the value of `s` is rounded using rounding to nearest.</span></span>  
  
 <span data-ttu-id="b96a8-1341">A<xref:System.Decimal>オブジェクトが 29 桁の有効桁数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1341">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="b96a8-1342">場合`s`し 29 以上の数字は、小数部を備えがの範囲内の数値を表す<xref:System.Decimal.MaxValue>と<xref:System.Decimal.MinValue>数値が丸められます、近似値に 29 桁に切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1342">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="b96a8-1343">解析操作中には、区切り記号がで発生した場合、`s`パラメーター、および適用可能な通貨または 10 進数とグループ区切り記号が同じ、解析操作が想定する、区切り記号は、グループではなく、小数点区切り文字区切り記号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1343">If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="b96a8-1344">区切り記号の詳細については、次を参照してください。 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>、および<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1344">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-1345">次の例では、<xref:System.Decimal.TryParse%28System.String%2CSystem.Decimal%40%29?displayProperty=nameWithType>メソッドに数値の文字列形式に変換する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1345">The following example uses the <xref:System.Decimal.TryParse%28System.String%2CSystem.Decimal%40%29?displayProperty=nameWithType> method to convert the string representations of numeric values to <xref:System.Decimal> values.</span></span> <span data-ttu-id="b96a8-1346">その EN-US では、現在のカルチャが前提としています。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1346">It assumes that en-US is the current culture.</span></span>  
  
 [!code-csharp[System.Decimal.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.TryParse/cs/TryParse.cs#1)]
 [!code-vb[System.Decimal.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.TryParse/vb/TryParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Decimal.Parse" />
        <altmember cref="M:System.Decimal.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="b96a8-1347">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="b96a8-1347">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.decimal.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Decimal" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.decimal.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Decimal" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b96a8-1348">変換する数値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1348">The string representation of the number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="b96a8-1349"><paramref name="s" /> で使用可能な書式を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1349">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="b96a8-1350">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Number" /> です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1350">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span></span></param>
        <param name="provider"><span data-ttu-id="b96a8-1351"><paramref name="s" /> に関するカルチャ固有の解析情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1351">An object that supplies culture-specific parsing information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="b96a8-1352">変換が成功した場合は、このメソッドから制御が返されるときに <paramref name="s" /> に格納された数値と等価の <see cref="T:System.Decimal" /> 数を格納します。変換に失敗した場合は 0 を格納します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1352">When this method returns, contains the <see cref="T:System.Decimal" /> number that is equivalent to the numeric value contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="b96a8-1353"><paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、<paramref name="style" /> に準拠した形式の数ではない場合、または <see cref="F:System.Decimal.MinValue" /> より小さいか <see cref="F:System.Decimal.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1353">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not a number in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span> <span data-ttu-id="b96a8-1354">このパラメーターは初期化されずに渡されます。<paramref name="result" /> で最初に指定された値はすべて上書きされます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1354">This parameter is passed uininitialized; any value originally supplied in <paramref name="result" /> is overwritten.</span></span></param>
        <summary><span data-ttu-id="b96a8-1355">指定したスタイルとカルチャ固有の書式を使用して、文字列形式の数値をそれと等価の <see cref="T:System.Decimal" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1355">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified style and culture-specific format.</span></span> <span data-ttu-id="b96a8-1356">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1356">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="b96a8-1357"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1357"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a8-1358">このオーバー ロードとは異なります、<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>解析の数値の値を返す代わりに、解析操作が成功したかどうかを示すブール値を返すことによってメソッド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1358">This overload differs from the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="b96a8-1359">例外処理を使用してテストする必要がある、<xref:System.FormatException>イベントで`s`有効でないし、正常に解析されることはできません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1359">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="b96a8-1360">`style`パラメーターの使用可能な形式の定義、`s`解析操作が成功するためのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1360">The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="b96a8-1361">ビット フラグの組み合わせがあります、<xref:System.Globalization.NumberStyles>列挙体。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1361">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="b96a8-1362">次<xref:System.Globalization.NumberStyles>メンバーがサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1362">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>  
  
 <span data-ttu-id="b96a8-1363">スタイルの値に応じて、`s`パラメーターは、次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1363">Depending on the value of style, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="b96a8-1364">[ws][$][記号][数字] [.fractional 桁] [e [記号] 桁] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="b96a8-1364">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="b96a8-1365">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1365">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="b96a8-1366">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1366">The following table describes each element.</span></span>  
  
|<span data-ttu-id="b96a8-1367">要素</span><span class="sxs-lookup"><span data-stu-id="b96a8-1367">Element</span></span>|<span data-ttu-id="b96a8-1368">説明</span><span class="sxs-lookup"><span data-stu-id="b96a8-1368">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="b96a8-1369">*ws*</span><span class="sxs-lookup"><span data-stu-id="b96a8-1369">*ws*</span></span>|<span data-ttu-id="b96a8-1370">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1370">Optional white space.</span></span> <span data-ttu-id="b96a8-1371">先頭に空白文字を表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1371">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="b96a8-1372">末尾に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1372">It can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="b96a8-1373">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1373">A culture-specific currency symbol.</span></span> <span data-ttu-id="b96a8-1374">によって、文字列内の位置が定義されている、<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>または<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>のプロパティ、<xref:System.Globalization.NumberFormatInfo>によって返されるオブジェクト、<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>のメソッド、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1374">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> or <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method of the `provider` parameter.</span></span> <span data-ttu-id="b96a8-1375">通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1375">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b96a8-1376">*sign*</span><span class="sxs-lookup"><span data-stu-id="b96a8-1376">*sign*</span></span>|<span data-ttu-id="b96a8-1377">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1377">An optional sign.</span></span>|  
|<span data-ttu-id="b96a8-1378">*数字*</span><span class="sxs-lookup"><span data-stu-id="b96a8-1378">*digits*</span></span>|<span data-ttu-id="b96a8-1379">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1379">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="b96a8-1380">*.*</span><span class="sxs-lookup"><span data-stu-id="b96a8-1380">*.*</span></span>|<span data-ttu-id="b96a8-1381">カルチャに固有の小数点記号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1381">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="b96a8-1382">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="b96a8-1382">*fractional-digits*</span></span>|<span data-ttu-id="b96a8-1383">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1383">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="b96a8-1384">`style`の許可された書式を指定するパラメーター、`s`パラメーターを 1 つまたは複数を指定できます<xref:System.Globalization.NumberStyles>列挙定数はビットごとの OR 演算を使用して結合します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1384">The `style` parameter specifies the permitted format of the `s` parameter, and can be one or more <xref:System.Globalization.NumberStyles> enumerated constants combined using a bitwise OR operation.</span></span> <span data-ttu-id="b96a8-1385">場合`style`が null、`s`を使用して解釈されます、<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1385">If `style` is null, `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span>  
  
 <span data-ttu-id="b96a8-1386">`provider`パラメーターは、<xref:System.IFormatProvider>などの実装を<xref:System.Globalization.NumberFormatInfo>または<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1386">The `provider` parameter is an <xref:System.IFormatProvider> implementation such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="b96a8-1387">`provider`パラメーターの解析中に使用されるカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1387">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="b96a8-1388">`provider` が `null` の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1388">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="b96a8-1389">A<xref:System.Decimal>オブジェクトが 29 桁の有効桁数。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1389">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="b96a8-1390">場合`s`し 29 以上の数字は、小数部を備えがの範囲内の数値を表す<xref:System.Decimal.MaxValue>と<xref:System.Decimal.MinValue>数値が丸められます、近似値に 29 桁に切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1390">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="b96a8-1391">区切り記号が発生した場合、`s`解析操作では、および適用可能な通貨または 10 進数の中にパラメーターとグループ区切り記号が同じ、解析操作が想定する、区切り記号は、グループではなく、小数点区切り文字区切り記号。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1391">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="b96a8-1392">区切り記号の詳細については、次を参照してください。 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>、および<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1392">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b96a8-1393">次の例では、使用、<xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29>特定のスタイルを備え、特定のカルチャの規則を使用して書式設定する数値の文字列形式を解析します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1393">The following example demonstrates the use of the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29> method to parse the string representation of a number that has a particular style and is formatted using the conventions of a particular culture.</span></span>  
  
 [!code-csharp[System.Decimal.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.TryParse/cs/TryParse.cs#2)]
 [!code-vb[System.Decimal.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.TryParse/vb/TryParse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b96a8-1394"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1394"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="b96a8-1395">または</span><span class="sxs-lookup"><span data-stu-id="b96a8-1395">-or-</span></span> 
 <span data-ttu-id="b96a8-1396"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値です。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1396"><paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <altmember cref="Overload:System.Decimal.Parse" />
        <altmember cref="M:System.Decimal.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="b96a8-1397">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="b96a8-1397">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static readonly decimal Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal Zero" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Zero As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal Zero;" />
      <MemberSignature Language="F#" Value=" staticval mutable Zero : decimal" Usage="System.decimal.Zero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b96a8-1398">数値 0 を表します。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1398">Represents the number zero (0).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b96a8-1399">次のコード例の使用を示しています、`Zero`フィールド。</span><span class="sxs-lookup"><span data-stu-id="b96a8-1399">The following code example illustrates the use of the `Zero` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
  </Members>
</Type>