<Type Name="Decimal" FullName="System.Decimal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c1678376c83e49ea8ee4211a82e647a7a1ce1191" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36433436" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Decimal : IComparable, IComparable&lt;decimal&gt;, IConvertible, IEquatable&lt;decimal&gt;, IFormattable, System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Decimal extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Decimal&gt;, class System.IConvertible, class System.IEquatable`1&lt;valuetype System.Decimal&gt;, class System.IFormattable, class System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="DocId" Value="T:System.Decimal" />
  <TypeSignature Language="VB.NET" Value="Public Structure Decimal&#xA;Implements IComparable, IComparable(Of Decimal), IConvertible, IDeserializationCallback, IEquatable(Of Decimal), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Decimal : IComparable, IComparable&lt;System::Decimal&gt;, IConvertible, IEquatable&lt;System::Decimal&gt;, IFormattable, System::Runtime::Serialization::IDeserializationCallback" />
  <TypeSignature Language="F#" Value="type decimal = struct&#xA;    interface IFormattable&#xA;    interface IConvertible&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Decimal&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Decimal&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="73ddd-101">10 進数を表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="73ddd-101">Represents a decimal number.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-102"><xref:System.Decimal>値型を負の 79,228,162,514,264,337,593,543,950,335 正 79,228,162,514,264,337,593,543,950,335 からまで 10 進数の数を表します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-102">The <xref:System.Decimal> value type represents decimal numbers ranging from positive 79,228,162,514,264,337,593,543,950,335 to negative 79,228,162,514,264,337,593,543,950,335.</span></span> <span data-ttu-id="73ddd-103">既定値、`Decimal`は 0 です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-103">The default value of a `Decimal` is 0.</span></span> <span data-ttu-id="73ddd-104"><xref:System.Decimal>値の型が大量の整数部と小数部の桁数と丸めエラーのないを必要とする財務計算に適しています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-104">The <xref:System.Decimal> value type is appropriate for financial calculations that require large numbers of significant integral and fractional digits and no round-off errors.</span></span> <span data-ttu-id="73ddd-105"><xref:System.Decimal>型に丸め処理の必要性を排除することはできません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-105">The <xref:System.Decimal> type does not eliminate the need for rounding.</span></span> <span data-ttu-id="73ddd-106">代わりに、丸め誤差が最小限に抑えます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-106">Rather, it minimizes errors due to rounding.</span></span> <span data-ttu-id="73ddd-107">たとえば、次のコードでは、1 ではなく 0.9999999999999999999999999999 の結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-107">For example, the following code produces a result of 0.9999999999999999999999999999 instead of 1.</span></span>  
  
 [!code-cpp[System.Decimal.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal1.cpp#1)]
 [!code-csharp[System.Decimal.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs#1)]
 [!code-vb[System.Decimal.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb#1)]  
  
 <span data-ttu-id="73ddd-108">除算、乗算の結果に渡されたときに、<xref:System.Math.Round%2A>メソッド、結果として、次のコードに示す、有効桁数の損失低下ありません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-108">When the result of the division and multiplication is passed to the <xref:System.Math.Round%2A> method, the result suffers no loss of precision, as the following code shows.</span></span>  
  
 [!code-cpp[System.Decimal.Class#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal2.cpp#2)]
 [!code-csharp[System.Decimal.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs#2)]
 [!code-vb[System.Decimal.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb#2)]  
  
 <span data-ttu-id="73ddd-109">10 進数が記号で構成される浮動小数点値、数値場所各桁の範囲は 0 から 9、およびスケール ファクターの整数部と小数部を区切る浮動小数点の位置を示すには、数値を指定します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-109">A decimal number is a floating-point value that consists of a sign, a numeric value where each digit in the value ranges from 0 to 9, and a scaling factor that indicates the position of a floating decimal point that separates the integral and fractional parts of the numeric value.</span></span>  
  
 <span data-ttu-id="73ddd-110">バイナリ表現、 <xref:System.Decimal> 1 ビットの符号、96 ビット整数および 96 ビット整数を分割し、どのような一部が、小数を指定するために使用する拡大率の値で構成されます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-110">The binary representation of a <xref:System.Decimal> value consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the 96-bit integer and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="73ddd-111">スケール ファクターは、暗黙的に 0 から 28 までの指数で累乗数 10、です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-111">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span> <span data-ttu-id="73ddd-112">そのため、バイナリの形式を、 <xref:System.Decimal> 、フォームの値 ((-2<sup>96</sup> 2<sup>96</sup>)/10<sup>(0 ~ 28)</sup>)、次のように (2<sup>96</sup>-1)等しい<xref:System.Decimal.MinValue>、および 2<sup>96</sup>-1 と等しい<xref:System.Decimal.MaxValue>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-112">Therefore, the binary representation of a <xref:System.Decimal> value  the form, ((-2<sup>96</sup> to 2<sup>96</sup>) / 10<sup>(0 to 28)</sup>), where -(2<sup>96</sup>-1) is equal to <xref:System.Decimal.MinValue>, and 2<sup>96</sup>-1 is equal to <xref:System.Decimal.MaxValue>.</span></span> <span data-ttu-id="73ddd-113">バイナリ表現の詳細については<xref:System.Decimal>値と、例を参照してください、<xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29>コンス トラクターと<xref:System.Decimal.GetBits%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-113">For more information about the binary representation of <xref:System.Decimal> values and an example, see the <xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29> constructor and the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 <span data-ttu-id="73ddd-114">要素も、後続の 0 を保持する<xref:System.Decimal>数。</span><span class="sxs-lookup"><span data-stu-id="73ddd-114">The scaling factor  also preserves any trailing zeros in a <xref:System.Decimal> number.</span></span> <span data-ttu-id="73ddd-115">後続のゼロの値には影響しません、<xref:System.Decimal>算術演算または比較操作の数。</span><span class="sxs-lookup"><span data-stu-id="73ddd-115">Trailing zeros do not affect the value of a <xref:System.Decimal> number in arithmetic or comparison operations.</span></span> <span data-ttu-id="73ddd-116">ただし、後続のゼロ可能性がありますが明らかで、<xref:System.Decimal.ToString%2A>メソッド、適切な形式の文字列が適用されている場合。</span><span class="sxs-lookup"><span data-stu-id="73ddd-116">However, trailing zeros might be revealed by the <xref:System.Decimal.ToString%2A> method if an appropriate format string is applied.</span></span>  
  
## <a name="conversion-considerations"></a><span data-ttu-id="73ddd-117">変換に関する考慮事項</span><span class="sxs-lookup"><span data-stu-id="73ddd-117">Conversion Considerations</span></span>  
 <span data-ttu-id="73ddd-118">この型に変換するメソッドを提供する<xref:System.Decimal>との間の値<xref:System.SByte>、 <xref:System.Int16>、 <xref:System.Int32>、 <xref:System.Int64>、 <xref:System.Byte>、 <xref:System.UInt16>、 <xref:System.UInt32>、および<xref:System.UInt64>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-118">This type provides methods that convert <xref:System.Decimal> values to and from <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Byte>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64> values.</span></span> <span data-ttu-id="73ddd-119">これらの整数型に変換する変換<xref:System.Decimal>が拡大しない情報が失われたり、例外をスローする変換です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-119">Conversions from these integral types to <xref:System.Decimal> are widening conversions that never lose information or throw exceptions.</span></span>  
  
 <span data-ttu-id="73ddd-120">変換<xref:System.Decimal>に整数型のいずれかの変換は縮小変換になる、<xref:System.Decimal>値 0 の方向に最も近い整数値にします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-120">Conversions from <xref:System.Decimal> to any of the integral types are narrowing conversions that round the <xref:System.Decimal> value to the nearest integer value toward zero.</span></span> <span data-ttu-id="73ddd-121">C# の場合などの一部の言語の変換はサポートも<xref:System.Decimal>値<xref:System.Char>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-121">Some languages, such as C#, also support the conversion of <xref:System.Decimal> values to <xref:System.Char> values.</span></span> <span data-ttu-id="73ddd-122">これらの変換の結果は、目的の型で表現できない場合、<xref:System.OverflowException>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-122">If the result of these conversions cannot be represented in the destination type, an <xref:System.OverflowException> exception is thrown.</span></span>  
  
 <span data-ttu-id="73ddd-123"><xref:System.Decimal>型に変換するメソッドも用意されています<xref:System.Decimal>との間の値<xref:System.Single>と<xref:System.Double>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-123">The <xref:System.Decimal> type also provides methods that convert <xref:System.Decimal> values to and from <xref:System.Single> and <xref:System.Double> values.</span></span> <span data-ttu-id="73ddd-124">変換<xref:System.Decimal>に<xref:System.Single>または<xref:System.Double>は縮小変換に変換された値の大きさに関する情報いないは精度が失われる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-124">Conversions from <xref:System.Decimal> to <xref:System.Single> or <xref:System.Double> are narrowing conversions that might lose precision but not information about the magnitude of the converted value.</span></span> <span data-ttu-id="73ddd-125">変換では、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-125">The conversion does not throw an exception.</span></span>  
  
 <span data-ttu-id="73ddd-126">変換<xref:System.Single>または<xref:System.Double>に<xref:System.Decimal>スロー、<xref:System.OverflowException>例外として、変換の結果を表現できない場合、<xref:System.Decimal>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-126">Conversions from <xref:System.Single> or <xref:System.Double> to <xref:System.Decimal> throw an <xref:System.OverflowException> exception if the result of the conversion cannot be represented as a <xref:System.Decimal>.</span></span>  
  
## <a name="performing-operations-on-decimal-values"></a><span data-ttu-id="73ddd-127">10 進数の値に対して操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-127">Performing Operations on Decimal Values</span></span>  
 <span data-ttu-id="73ddd-128"><xref:System.Decimal>型は、加算、減算、除算、乗算、および単項否定などの標準的な数学的演算をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-128">The <xref:System.Decimal> type supports standard mathematical operations such as addition, subtraction, division, multiplication, and unary negation.</span></span> <span data-ttu-id="73ddd-129">バイナリ表現を直接操作することもできます。、<xref:System.Decimal>値を呼び出して、<xref:System.Decimal.GetBits%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-129">You can also work directly with the binary representation of a <xref:System.Decimal> value by calling the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 <span data-ttu-id="73ddd-130">2 つを比較する<xref:System.Decimal>値、標準の数値の比較演算子を使用することも呼び出すことができます、<xref:System.Decimal.CompareTo%2A>または<xref:System.Decimal.Equals%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-130">To compare two <xref:System.Decimal> values, you can use the standard numeric comparison operators, or you can call the <xref:System.Decimal.CompareTo%2A> or <xref:System.Decimal.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="73ddd-131">メンバーを呼び出すこともできます、<xref:System.Math>さまざまな数値演算、2 つの最大値または最小値を決定する数値の絶対値の取得などを行うにはクラス<xref:System.Decimal>値、数値、記号を取得して、丸め処理を行う数値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-131">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, determining the maximum or minimum value of two <xref:System.Decimal> values, getting the sign of a number, and rounding a number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-132">次のコード例は、<xref:System.Decimal> の使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-132">The following code example demonstrates the use of <xref:System.Decimal>.</span></span>  
  
 [!code-cpp[Decimal Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#1)]
 [!code-csharp[Decimal Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#1)]
 [!code-vb[Decimal Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="73ddd-133">この種類のすべてのメンバーでは、スレッド セーフです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="73ddd-133">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="73ddd-134">インスタンスの状態を変更する表示されるメンバーは、新しい値で初期化された新しいインスタンスを実際に返します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="73ddd-134">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="73ddd-135">として、他の種類と読み取りと書き込みをこの型のインスタンスを含む共有変数を保護する必要があるスレッド セーフを確保するロックによってです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="73ddd-135">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.SByte" />
    <altmember cref="T:System.Int16" />
    <altmember cref="T:System.Int32" />
    <altmember cref="T:System.Int64" />
    <altmember cref="T:System.Byte" />
    <altmember cref="T:System.UInt16" />
    <altmember cref="T:System.UInt32" />
    <altmember cref="T:System.UInt64" />
    <altmember cref="T:System.Single" />
    <altmember cref="T:System.Double" />
    <altmember cref="T:System.Char" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="73ddd-136">
            <see cref="T:System.Decimal" /> の新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-136">Initializes a new instance of <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(double value);" />
      <MemberSignature Language="F#" Value="new decimal : double -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-137">
            <see cref="T:System.Decimal" /> として表す値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-137">The value to represent as a <see cref="T:System.Decimal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-138">
            <see cref="T:System.Decimal" /> の新しいインスタンスを初期化し、その値を、指定した倍精度浮動小数点数に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-138">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified double-precision floating-point number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-139">このコンス トラクターに丸めます`value`近似値に丸め処理を使用して有効桁数は 15 です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-139">This constructor rounds `value` to 15 significant digits using rounding to nearest.</span></span> <span data-ttu-id="73ddd-140">これには、数には 15 桁がありより下位の桁がゼロ場合でもは行われます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-140">This is done even if the number has more than 15 digits and the less significant digits are zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-141">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、`Decimal`構造体、<xref:System.Double>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-141">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Reals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CPP/ctordo.cpp#2)]
 [!code-csharp[System.Decimal.Ctor.Reals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CS/ctordo.cs#2)]
 [!code-vb[System.Decimal.Ctor.Reals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/VB/ctordo.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-142">
            <paramref name="value" /> は <see cref="F:System.Decimal.MaxValue" /> を超えているか、または <see cref="F:System.Decimal.MinValue" /> 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-142">
              <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span>
          </span>
          <span data-ttu-id="73ddd-143">または、<paramref name="value" /> は <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.PositiveInfinity" />、または <see cref="F:System.Double.NegativeInfinity" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-143">-or-  <paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(int value);" />
      <MemberSignature Language="F#" Value="new decimal : int -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-144">
            <see cref="T:System.Decimal" /> として表す値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-144">The value to represent as a <see cref="T:System.Decimal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-145">
            <see cref="T:System.Decimal" /> の新しいインスタンスを初期化し、その値を、指定した 32 ビット符号付き整数に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-145">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 32-bit signed integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73ddd-146">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、`Decimal`構造体、<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-146">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an <xref:System.Int32> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctori.cpp#1)]
 [!code-csharp[System.Decimal.Ctor.Ints#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctori.cs#1)]
 [!code-vb[System.Decimal.Ctor.Ints#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctori.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int[] bits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32[] bits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bits As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(cli::array &lt;int&gt; ^ bits);" />
      <MemberSignature Language="F#" Value="new decimal : int[] -&gt; decimal" Usage="new System.decimal bits" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bits" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="bits">
          <span data-ttu-id="73ddd-147">10 進値形式を格納している 32 ビット符号付き整数の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-147">An array of 32-bit signed integers containing a representation of a decimal value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-148">
            <see cref="T:System.Decimal" /> の新しいインスタンスの値を、指定した配列に格納されている、バイナリ形式の 10 進値に初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-148">Initializes a new instance of <see cref="T:System.Decimal" /> to a decimal value represented in binary and contained in a specified array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-149">バイナリ表現、<xref:System.Decimal>数は 1 ビットの符号、96 ビット整数および整数値を分割し、どのような一部が、小数を指定するために使用するスケール ファクター。</span><span class="sxs-lookup"><span data-stu-id="73ddd-149">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="73ddd-150">スケール ファクターは、暗黙的に 0 から 28 までの指数で累乗数 10、です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-150">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span>  
  
 <span data-ttu-id="73ddd-151">`bits` 32 ビット符号付き整数の 4 要素長配列です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-151">`bits` is a four-element long array of 32-bit signed integers.</span></span>  
  
 <span data-ttu-id="73ddd-152">`bits` [0], `bits` [1] と`bits`[2]、低、ミドル ネーム、および高の 32 ビット 96 ビット整数の番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-152">`bits` [0], `bits` [1], and `bits` [2] contain the low, middle, and high 32 bits of the 96-bit integer number.</span></span>  
  
 <span data-ttu-id="73ddd-153">`bits` [3] が含まれています、スケール ファクターと記号、および次の部分で構成されています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-153">`bits` [3] contains the scale factor and sign, and consists of following parts:</span></span>  
  
 <span data-ttu-id="73ddd-154">ビット 0 ~ 15 下位のワードは、使用されていないと、0 にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-154">Bits 0 to 15, the lower word, are unused and must be zero.</span></span>  
  
 <span data-ttu-id="73ddd-155">16 ~ 23 のビットは、番号の整数を除算する 10 の累乗を示す 0 から 28 までの指数を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-155">Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.</span></span>  
  
 <span data-ttu-id="73ddd-156">ビット 24 ~ 30 が使用されていないと、0 にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-156">Bits 24 to 30 are unused and must be zero.</span></span>  
  
 <span data-ttu-id="73ddd-157">ビット 31、記号が含まれています0 は正、および 1 は負の値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-157">Bit 31 contains the sign; 0 meaning positive, and 1 meaning negative.</span></span>  
  
 <span data-ttu-id="73ddd-158">数値の値がいくつかの可能なバイナリ表現があります。すべてが同じように有効であり、数値と等価です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-158">A numeric value might have several possible binary representations; all are equally valid and numerically equivalent.</span></span> <span data-ttu-id="73ddd-159">ビット表現は、負または正の 0 によって区別に注意してください。</span><span class="sxs-lookup"><span data-stu-id="73ddd-159">Note that the bit representation differentiates between negative and positive zero.</span></span> <span data-ttu-id="73ddd-160">これらの値は、すべての操作で等しいものとして扱われます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-160">These values are treated as being equal in all operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-161">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、 `Decimal` 4 つの配列を含む構造体<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-161">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an array of four <xref:System.Int32> values.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Arrays#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CPP/ctoriarr.cpp#1)]
 [!code-csharp[System.Decimal.Ctor.Arrays#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CS/ctoriarr.cs#1)]
 [!code-vb[System.Decimal.Ctor.Arrays#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/VB/ctoriarr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="73ddd-162">
            <paramref name="bits" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-162">
              <paramref name="bits" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="73ddd-163">
            <paramref name="bits" /> の長さが 4 ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-163">The length of the <paramref name="bits" /> is not 4.</span>
          </span>
          <span data-ttu-id="73ddd-164">または、<paramref name="bits" /> の 10 進値の表現が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-164">-or-  The representation of the decimal value in <paramref name="bits" /> is not valid.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.GetBits(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(long value);" />
      <MemberSignature Language="F#" Value="new decimal : int64 -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-165">
            <see cref="T:System.Decimal" /> として表す値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-165">The value to represent as a <see cref="T:System.Decimal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-166">
            <see cref="T:System.Decimal" /> の新しいインスタンスを初期化し、その値を、指定した 64 ビット符号付き整数に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-166">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 64-bit signed integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73ddd-167">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、`Decimal`構造体、<xref:System.Int64>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-167">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an <xref:System.Int64> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorl.cpp#3)]
 [!code-csharp[System.Decimal.Ctor.Ints#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorl.cs#3)]
 [!code-vb[System.Decimal.Ctor.Ints#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorl.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(float value);" />
      <MemberSignature Language="F#" Value="new decimal : single -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-168">
            <see cref="T:System.Decimal" /> として表す値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-168">The value to represent as a <see cref="T:System.Decimal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-169">
            <see cref="T:System.Decimal" /> の新しいインスタンスを初期化し、その値を、指定した単精度浮動小数点数に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-169">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified single-precision floating-point number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-170">このコンス トラクターに丸めます`value`近似値に丸め処理を使用して有効桁数は 7 です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-170">This constructor rounds `value` to 7 significant digits using rounding to nearest.</span></span> <span data-ttu-id="73ddd-171">これには、数に複数の 7 桁の数字がありより下位の桁がゼロ場合でもは行われます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-171">This is done even if the number has more than 7 digits and the less significant digits are zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-172">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、`Decimal`構造体、<xref:System.Single>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-172">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.Single> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Reals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CPP/ctors.cpp#1)]
 [!code-csharp[System.Decimal.Ctor.Reals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CS/ctors.cs#1)]
 [!code-vb[System.Decimal.Ctor.Reals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/VB/ctors.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-173">
            <paramref name="value" /> は <see cref="F:System.Decimal.MaxValue" /> を超えているか、または <see cref="F:System.Decimal.MinValue" /> 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-173">
              <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span>
          </span>
          <span data-ttu-id="73ddd-174">または、<paramref name="value" /> は <see cref="F:System.Single.NaN" />、<see cref="F:System.Single.PositiveInfinity" />、または <see cref="F:System.Single.NegativeInfinity" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-174">-or-  <paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="new decimal : uint32 -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-175">
            <see cref="T:System.Decimal" /> として表す値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-175">The value to represent as a <see cref="T:System.Decimal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-176">
            <see cref="T:System.Decimal" /> の新しいインスタンスを初期化し、その値を、指定した 32 ビット符号なし整数に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-176">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 32-bit unsigned integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73ddd-177">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、`Decimal`構造体、<xref:System.UInt32>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-177">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.UInt32> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorui.cpp#2)]
 [!code-csharp[System.Decimal.Ctor.Ints#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorui.cs#2)]
 [!code-vb[System.Decimal.Ctor.Ints#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorui.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="new decimal : uint64 -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-178">
            <see cref="T:System.Decimal" /> として表す値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-178">The value to represent as a <see cref="T:System.Decimal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-179">
            <see cref="T:System.Decimal" /> の新しいインスタンスを初期化し、その値を、指定した 64 ビット符号なし整数に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-179">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 64-bit unsigned integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73ddd-180">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、`Decimal`構造体、<xref:System.UInt64>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-180">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.UInt64> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorul.cpp#4)]
 [!code-csharp[System.Decimal.Ctor.Ints#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorul.cs#4)]
 [!code-vb[System.Decimal.Ctor.Ints#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorul.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int lo, int mid, int hi, bool isNegative, byte scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 lo, int32 mid, int32 hi, bool isNegative, unsigned int8 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (lo As Integer, mid As Integer, hi As Integer, isNegative As Boolean, scale As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(int lo, int mid, int hi, bool isNegative, System::Byte scale);" />
      <MemberSignature Language="F#" Value="new decimal : int * int * int * bool * byte -&gt; decimal" Usage="new System.decimal (lo, mid, hi, isNegative, scale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="lo" Type="System.Int32" />
        <Parameter Name="mid" Type="System.Int32" />
        <Parameter Name="hi" Type="System.Int32" />
        <Parameter Name="isNegative" Type="System.Boolean" />
        <Parameter Name="scale" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="lo">
          <span data-ttu-id="73ddd-181">96 ビット整数の下位 32 ビット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-181">The low 32 bits of a 96-bit integer.</span>
          </span>
        </param>
        <param name="mid">
          <span data-ttu-id="73ddd-182">96 ビット整数の中位 32 ビット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-182">The middle 32 bits of a 96-bit integer.</span>
          </span>
        </param>
        <param name="hi">
          <span data-ttu-id="73ddd-183">96 ビット整数の上位 32 ビット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-183">The high 32 bits of a 96-bit integer.</span>
          </span>
        </param>
        <param name="isNegative">
          <span data-ttu-id="73ddd-184">負の数を示す場合は <see langword="true" />。正の数を示す場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-184">
              <see langword="true" /> to indicate a negative number; <see langword="false" /> to indicate a positive number.</span>
          </span>
        </param>
        <param name="scale">
          <span data-ttu-id="73ddd-185">0 から 28 までの 10 のべき乗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-185">A power of 10 ranging from 0 to 28.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-186">
            <see cref="T:System.Decimal" /> の新しいインスタンスの値を、そのインスタンスの構成部分を指定するパラメーターに従って初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-186">Initializes a new instance of <see cref="T:System.Decimal" /> from parameters specifying the instance's constituent parts.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-187">バイナリ表現、<xref:System.Decimal>数は 1 ビットの符号、96 ビット整数および整数値を分割し、どのような一部が、小数を指定するために使用するスケール ファクター。</span><span class="sxs-lookup"><span data-stu-id="73ddd-187">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="73ddd-188">スケール ファクターは、暗黙的に番号 0 から 28 までの範囲を指数乗 10 です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-188">The scaling factor is implicitly the number 10 raised to an exponent ranging from 0 to 28.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-189">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、`Decimal`を 3 つの構造体<xref:System.Int32>、単語の値、<xref:System.Boolean>記号、および<xref:System.Byte>スケール ファクター。</span><span class="sxs-lookup"><span data-stu-id="73ddd-189">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with three <xref:System.Int32> value words, a <xref:System.Boolean> sign, and a <xref:System.Byte> scale factor.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Arrays#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CPP/ctoriiibby.cpp#2)]
 [!code-csharp[System.Decimal.Ctor.Arrays#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CS/ctoriiibby.cs#2)]
 [!code-vb[System.Decimal.Ctor.Arrays#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/VB/ctoriiibby.vb#2)]  
  
 <span data-ttu-id="73ddd-190">次の例では、<xref:System.Decimal.GetBits%2A>配列のコンポーネント部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-190">The following example uses the <xref:System.Decimal.GetBits%2A> method to retrieve the component parts of an array.</span></span> <span data-ttu-id="73ddd-191">使用して、この配列への呼び出しで、<xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29>新しいのインスタンスを作成するコンス トラクター<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-191">It then uses this array in the call to the <xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29> constructor to instantiate a new <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Decimal.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.ctor/cs/ctor2a.cs#1)]
 [!code-vb[System.Decimal.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.ctor/vb/ctor2a.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="73ddd-192">
            <paramref name="scale" /> が 28 を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-192">
              <paramref name="scale" /> is greater than 28.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static decimal Add (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Add(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Add(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Add : decimal * decimal -&gt; decimal" Usage="System.decimal.Add (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="73ddd-193">加算する 1 番目の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-193">The first value to add.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="73ddd-194">加算する 2 番目の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-194">The second value to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-195">指定した 2 つの <see cref="T:System.Decimal" /> 値を加算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-195">Adds two specified <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-196">
            <paramref name="d1" /> と <paramref name="d2" /> の合計。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-196">The sum of <paramref name="d1" /> and <paramref name="d2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-197">次のコード サンプルは、の使用方法を示します`Add`:</span><span class="sxs-lookup"><span data-stu-id="73ddd-197">The following code sample illustrates the use of `Add` :</span></span>  
  
 [!code-cpp[Decimal Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#5)]
 [!code-csharp[Decimal Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#5)]
 [!code-vb[Decimal Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-198">
            <paramref name="d1" /> と <paramref name="d2" /> の和が、<see cref="F:System.Decimal.MinValue" /> より小さい値か、<see cref="F:System.Decimal.MaxValue" /> より大きい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-198">The sum of <paramref name="d1" /> and <paramref name="d2" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static decimal Ceiling (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Ceiling(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Ceiling(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Ceiling(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Ceiling : decimal -&gt; decimal" Usage="System.decimal.Ceiling d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="73ddd-199">10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-199">A decimal number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-200">指定した 10 進数以上の数のうち、最小の整数値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-200">Returns the smallest integral value that is greater than or equal to the specified decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-201">
            <paramref name="d" /> パラメーターの値以上の最小の整数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-201">The smallest integral value that is greater than or equal to the <paramref name="d" /> parameter.</span>
          </span>
          <span data-ttu-id="73ddd-202">このメソッドは、整数型ではなく <see cref="T:System.Decimal" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-202">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-203">このメソッドの動作は IEEE 標準 754、セクション 4 に従います。</span><span class="sxs-lookup"><span data-stu-id="73ddd-203">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="73ddd-204">この種の丸め処理を行うには、正の無限大に向かって丸め処理を行うことがあります呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-204">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="73ddd-205">つまり場合、`d`が正の値の小数部の原因が存在する`d`を次に大きい整数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-205">In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer.</span></span> <span data-ttu-id="73ddd-206">場合`d`は負の場合、丸め処理によりの小数部`d`破棄されます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-206">If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded.</span></span> <span data-ttu-id="73ddd-207">このメソッドの動作と異なります、<xref:System.Decimal.Floor%2A>メソッドで、負の無限大方向に丸め処理をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-207">The operation of this method differs from the <xref:System.Decimal.Floor%2A> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-208">次の例を示しています、<xref:System.Decimal.Ceiling%2A>メソッドとの比較、<xref:System.Decimal.Floor%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-208">The following example illustrates the <xref:System.Decimal.Ceiling%2A> method and contrasts it with the <xref:System.Decimal.Floor%2A> method.</span></span>  
  
 [!code-csharp[System.Decimal.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ceiling/cs/ceiling1.cs#1)]
 [!code-vb[System.Decimal.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (d1 As Decimal, d2 As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Compare : decimal * decimal -&gt; int" Usage="System.decimal.Compare (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="73ddd-209">比較する最初の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-209">The first value to compare.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="73ddd-210">比較する 2 番目の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-210">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-211">2 つの指定した <see cref="T:System.Decimal" /> 値を比較します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-211">Compares two specified <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-212">
            <paramref name="d1" /> と <paramref name="d2" /> の相対値を示す符号付き数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-212">A signed number indicating the relative values of <paramref name="d1" /> and <paramref name="d2" />.</span>
          </span>
          <span data-ttu-id="73ddd-213">
            <list type="table">
              <listheader>
                <term> 戻り値  </term>
                <description> 意味  </description>
              </listheader>
              <item>
                <term> 0 より小さい  </term>
                <description>
                  <paramref name="d1" /> は <paramref name="d2" /> より小さい値です。</description>
              </item>
              <item>
                <term> 0  </term>
                <description>
                  <paramref name="d1" /> と <paramref name="d2" /> は等価です。</description>
              </item>
              <item>
                <term> 0 より大きい  </term>
                <description>
                  <paramref name="d1" /> は <paramref name="d2" /> より大きい値です。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-213">
              <list type="table">
                <listheader>
                  <term> Return value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="d1" /> is less than <paramref name="d2" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="d1" /> and <paramref name="d2" /> are equal.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="d1" /> is greater than <paramref name="d2" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73ddd-214">次の例では、いくつかを比較して<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-214">The following example compares several <xref:System.Decimal> values.</span></span> <span data-ttu-id="73ddd-215">注、最初に比較する 2 つの値が等しいを示すに対する減算操作に関係なく、`value2`変数。</span><span class="sxs-lookup"><span data-stu-id="73ddd-215">Note that the first comparison indicates that the two values are equal despite the subtraction operation performed on the `value2` variable.</span></span> <span data-ttu-id="73ddd-216">これは、ため、 <xref:System.Decimal> 30 桁の精度でのみ、これら 2 つの値の差を検出できますが、型に 29 桁の有効桁数、します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-216">This is because the <xref:System.Decimal> type has 29 digits of precision, whereas a difference between these two values can be detected only with 30 digits of precision.</span></span>  
  
 [!code-csharp[System.Decimal.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Compare/cs/Compare1.cs#1)]
 [!code-vb[System.Decimal.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Compare/vb/Compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="73ddd-217">指定したオブジェクトまたは <see cref="T:System.Decimal" /> とこのインスタンスを比較し、これらの相対値を示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-217">Compares this instance to a specified object or <see cref="T:System.Decimal" /> and returns an indication of their relative values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.CompareTo(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Decimal value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : decimal -&gt; int&#xA;override this.CompareTo : decimal -&gt; int" Usage="decimal.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-218">このインスタンスと比較するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-218">The object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-219">指定した <see cref="T:System.Decimal" /> オブジェクトとこのインスタンスを比較し、これらの相対値の比較を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-219">Compares this instance to a specified <see cref="T:System.Decimal" /> object and returns a comparison of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-220">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-220">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="73ddd-221">
            <list type="table">
              <listheader>
                <term> 戻り値  </term>
                <description> 意味  </description>
              </listheader>
              <item>
                <term> 0 より小さい  </term>
                <description> このインスタンスは <paramref name="value" /> より小さい値です。</description>
              </item>
              <item>
                <term> 0  </term>
                <description> このインスタンスは <paramref name="value" /> と等価です。</description>
              </item>
              <item>
                <term> 0 より大きい  </term>
                <description> このインスタンスは <paramref name="value" /> より大きくなっています。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-221">
              <list type="table">
                <listheader>
                  <term> Return value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance is less than <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance is equal to <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance is greater than <paramref name="value" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-222">このメソッドを実装する、<xref:System.IComparable%601?displayProperty=nameWithType>インターフェイスし、実行よりもわずかに向上、<xref:System.Decimal.CompareTo%2A?displayProperty=nameWithType>メソッドに変換があるないため、`value`オブジェクトへのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-222">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Decimal.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="73ddd-223">プログラミング言語に応じてコードに考えられる場合があります、<xref:System.Decimal.CompareTo%2A>メソッドのパラメーターの型のビット数が少ないがここではインスタンスの型よりもします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-223">Depending on your programming language, it might be possible to code a <xref:System.Decimal.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="73ddd-224">これには一部のプログラミング言語は、ビット数のインスタンスと型としてパラメーターを表す暗黙の拡大変換を実行するため。</span><span class="sxs-lookup"><span data-stu-id="73ddd-224">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="73ddd-225">たとえば、インスタンスの型が<xref:System.Int32>パラメーターの型と<xref:System.Byte>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-225">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="73ddd-226">Microsoft c# コンパイラとしてパラメーターを表す命令を生成する、<xref:System.Int32>オブジェクトを生成、<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>の値を比較するメソッド、<xref:System.Int32>インスタンスおよび<xref:System.Int32>パラメーター形式です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-226">The Microsoft C# compiler generates instructions to represent the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="73ddd-227">コンパイラが数値型に暗黙の拡大変換を実行するかどうかを決定する、プログラミング言語のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="73ddd-227">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-228">次のコード例に示しますジェネリックと非ジェネリック バージョンの<xref:System.Decimal.CompareTo%2A>いくつかの値と参照型のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-228">The following code example demonstrates generic and nongeneric versions of the <xref:System.Decimal.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="decimal.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-229">このインスタンスと比較するオブジェクト、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-229">The object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-230">指定したオブジェクトとこのインスタンスを比較し、これらの相対値の比較を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-230">Compares this instance to a specified object and returns a comparison of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-231">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-231">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="73ddd-232">
            <list type="table">
              <listheader>
                <term> 戻り値  </term>
                <description> 意味  </description>
              </listheader>
              <item>
                <term> 0 より小さい  </term>
                <description> このインスタンスは <paramref name="value" /> より小さい値です。</description>
              </item>
              <item>
                <term> 0  </term>
                <description> このインスタンスは <paramref name="value" /> と等価です。</description>
              </item>
              <item>
                <term> 0 より大きい  </term>
                <description> このインスタンスは <paramref name="value" /> より大きくなっています。または、<paramref name="value" /> は <see langword="null" /> です。</description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-232">
              <list type="table">
                <listheader>
                  <term> Return value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance is less than <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance is equal to <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance is greater than <paramref name="value" />.  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-233">任意のインスタンス<xref:System.Decimal>、その値に関係なくが大きいと見なされますより`null`です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-233">Any instance of <xref:System.Decimal>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="73ddd-234">パラメーター`value`する必要があります`null`またはのインスタンス<xref:System.Decimal>です。 それ以外の場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-234">Parameter `value` must be `null` or an instance of <xref:System.Decimal>; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-235">次のコード例では、いくつかを比較して`Decimal`とその他のオブジェクトの参照を`Decimal`値を使用して、`CompareTo`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-235">The following code example compares several `Decimal` and other objects to a reference `Decimal` value using the `CompareTo` method.</span></span>  
  
 [!code-cpp[System.Decimal.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.Decimal.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.Decimal.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="73ddd-236">
            <paramref name="value" /> が <see cref="T:System.Decimal" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-236">
              <paramref name="value" /> is not a <see cref="T:System.Decimal" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static decimal Divide (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Divide(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Divide(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Divide : decimal * decimal -&gt; decimal" Usage="System.decimal.Divide (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="73ddd-237">被除数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-237">The dividend.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="73ddd-238">除数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-238">The divisor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-239">2 つの指定した <see cref="T:System.Decimal" /> 値を除算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-239">Divides two specified <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-240">
            <paramref name="d1" /> を <paramref name="d2" /> で除算した結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-240">The result of dividing <paramref name="d1" /> by <paramref name="d2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73ddd-241">次の例では、 <xref:System.Decimal.Divide%2A> 22.1 で範囲の値を除算するメソッド。</span><span class="sxs-lookup"><span data-stu-id="73ddd-241">The following example calls the <xref:System.Decimal.Divide%2A> method to divide a range of values by 22.1.</span></span>  
  
 [!code-csharp[System.Decimal.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Decimal.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="73ddd-242">
            <paramref name="d2" /> が 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-242">
              <paramref name="d2" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-243">戻り値 (商) が <see cref="F:System.Decimal.MinValue" /> より小さいか、<see cref="F:System.Decimal.MaxValue" /> より大きい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-243">The return value (that is, the quotient) is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="73ddd-244">
            <see cref="T:System.Decimal" /> の 2 つのインスタンスが同じ値を表しているかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-244">Returns a value indicating whether two instances of <see cref="T:System.Decimal" /> represent the same value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Decimal value);" />
      <MemberSignature Language="F#" Value="override this.Equals : decimal -&gt; bool" Usage="decimal.Equals value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-245">このインスタンスと比較するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-245">An object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-246">このインスタンスと指定した <see cref="T:System.Decimal" /> オブジェクトが同じ値を表しているかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-246">Returns a value indicating whether this instance and a specified <see cref="T:System.Decimal" /> object represent the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-247">
            <paramref name="value" /> がこのインスタンスと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-247">
              <see langword="true" /> if <paramref name="value" /> is equal to this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-248">このメソッドを実装する、<xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイス、および実行よりもわずかに向上<xref:System.Decimal.Equals%2A>変換があるないため、`value`オブジェクトへのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-248">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Decimal.Equals%2A> because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="73ddd-249">場合`value`ビット数が少ないのは範囲が狭い、インスタンスの型よりも一部のプログラミング言語が多くのビット値にパラメーターの値を変換する暗黙の拡大変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-249">If `value` has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="73ddd-250">たとえば、インスタンスの型が<xref:System.Int32>パラメーターの型と<xref:System.Byte>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-250">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="73ddd-251">Microsoft c# コンパイラは、パラメーターの値を表す命令を生成、<xref:System.Int32>オブジェクトを生成、<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>を比較するメソッド、<xref:System.Int32>インスタンスとパラメーターの形式です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-251">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the <xref:System.Int32> instance and parameter representation.</span></span>  
  
 <span data-ttu-id="73ddd-252">コンパイラが数値型に暗黙の拡大変換を実行するかどうかを決定する、プログラミング言語のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="73ddd-252">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="73ddd-253">
            <para>コンパイラのオーバー ロードの解決は、2 つの動作の見かけ上の相違点についてアカウント可能性があります<see cref="M:System.Decimal.Equals(System.Object)" />メソッドのオーバー ロードします。場合の間の暗黙的な変換、<paramref name="obj" />引数および<see cref="T:System.Decimal" />が定義されている引数として型指定されていないと、 <see cref="T:System.Object" />、コンパイラが暗黙的な変換と呼び出し実行可能性があります、<see cref="M:System.Decimal.Equals(System.Decimal)" />メソッドです。それ以外の場合を呼び出すことが、<see cref="M:System.Decimal.Equals(System.Object)" />メソッドで、常に返します<see langword="false" />場合その<paramref name="obj" />引数ではありません、<see cref="T:System.Decimal" />値。次の例は、次の 2 つのメソッド オーバー ロード間の動作の違いを示しています。すべてのプリミティブの整数型の場合両方を含む署名され、最初に比較を返しますの種類、署名されていない<see langword="true" />拡大変換と呼び出し、コンパイラが自動的に実行するため、<see cref="M:System.Decimal.Equals(System.Decimal)" />メソッド、一方、2 つ目比較を返します<see langword="false" />コンパイラを呼び出すため、<see cref="M:System.Decimal.Equals(System.Object)" />メソッドです。 [! code-csharp[System.Decimal.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs#2)][! code-vb[System.Decimal.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb#2)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-253">
              <para>Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Decimal.Equals(System.Object)" /> method overloads. If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Decimal" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method. Otherwise, they call the <see cref="M:System.Decimal.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Decimal" /> value. The following example illustrates the difference in behavior between the two method overloads. In the case of all primitive integral types, including both signed and unsigned types, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Decimal.Equals(System.Object)" /> method.  [!code-csharp[System.Decimal.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs#2)] [!code-vb[System.Decimal.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb#2)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="Overload:System.Decimal.CompareTo" />
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="decimal.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-254">このインスタンスと比較するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-254">The object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-255">このインスタンスと指定した <see cref="T:System.Object" /> が同じ型と値を表しているかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-255">Returns a value indicating whether this instance and a specified <see cref="T:System.Object" /> represent the same type and value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-256">
            <paramref name="value" /> が <see cref="T:System.Decimal" /> で、このインスタンスに等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-256">
              <see langword="true" /> if <paramref name="value" /> is a <see cref="T:System.Decimal" /> and equal to this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73ddd-257">次のコード例では、いくつかを比較して`Decimal`とその他のオブジェクトの参照を`Decimal`値を使用して、`Equals`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-257">The following code example compares several `Decimal` and other objects to a reference `Decimal` value using the `Equals` method.</span></span>  
  
 [!code-cpp[System.Decimal.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.Decimal.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.Decimal.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="73ddd-258">
            <para>コンパイラのオーバー ロードの解決は、2 つの動作の見かけ上の相違点についてアカウント可能性があります<see cref="M:System.Decimal.Equals(System.Object)" />メソッドのオーバー ロードします。場合の間の暗黙的な変換、<paramref name="obj" />引数および<see cref="T:System.Decimal" />が定義されている引数として型指定されていないと、 <see cref="T:System.Object" />、コンパイラが暗黙的な変換と呼び出し実行可能性があります、<see cref="M:System.Decimal.Equals(System.Decimal)" />メソッドです。それ以外の場合を呼び出すことが、<see cref="M:System.Decimal.Equals(System.Object)" />メソッドで、常に返します<see langword="false" />場合その<paramref name="obj" />引数ではありません、<see cref="T:System.Decimal" />値。次の例は、次の 2 つのメソッド オーバー ロード間の動作の違いを示しています。すべてのプリミティブの整数型の場合両方を含む署名され、最初に比較を返しますの種類、署名されていない<see langword="true" />拡大変換と呼び出し、コンパイラが自動的に実行するため、<see cref="M:System.Decimal.Equals(System.Decimal)" />メソッド、一方、2 つ目比較を返します<see langword="false" />コンパイラを呼び出すため、<see cref="M:System.Decimal.Equals(System.Object)" />メソッドです。 [! code-csharp[System.Decimal.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs#2)][! code-vb[System.Decimal.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb#2)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-258">
              <para>Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Decimal.Equals(System.Object)" /> method overloads. If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Decimal" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method. Otherwise, they call the <see cref="M:System.Decimal.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Decimal" /> value. The following example illustrates the difference in behavior between the two method overloads. In the case of all primitive integral types, including both signed and unsigned types, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Decimal.Equals(System.Object)" /> method.  [!code-csharp[System.Decimal.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs#2)] [!code-vb[System.Decimal.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb#2)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Equals : decimal * decimal -&gt; bool" Usage="System.decimal.Equals (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="73ddd-259">比較する最初の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-259">The first value to compare.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="73ddd-260">比較する 2 番目の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-260">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-261">
            <see cref="T:System.Decimal" /> の指定された 2 つのインスタンスが同じ値を表しているかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-261">Returns a value indicating whether two specified instances of <see cref="T:System.Decimal" /> represent the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-262">
            <see langword="true" /> と <paramref name="d1" /> が等しい場合は <paramref name="d2" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-262">
              <see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73ddd-263">次のコード例では、いくつかを比較して`Decimal`値の参照を`Decimal`値の静的`Equals`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-263">The following code example compares several `Decimal` values to a reference `Decimal` value using the static `Equals` method.</span></span>  
  
 [!code-cpp[System.Decimal.Compare_Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/comp_equal.cpp#2)]
 [!code-csharp[System.Decimal.Compare_Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/comp_equal.cs#2)]
 [!code-vb[System.Decimal.Compare_Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/comp_equal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static decimal Floor (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Floor(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Floor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Floor(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Floor : decimal -&gt; decimal" Usage="System.decimal.Floor d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="73ddd-264">丸める値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-264">The value to round.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-265">指定した <see cref="T:System.Decimal" /> 数を、負の無限大方向の近似整数に丸めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-265">Rounds a specified <see cref="T:System.Decimal" /> number to the closest integer toward negative infinity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-266">
            <paramref name="d" /> に小数部がある場合は、負の無限大方向の <paramref name="d" /> より小さい、次の <see cref="T:System.Decimal" /> 整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-266">If <paramref name="d" /> has a fractional part, the next whole <see cref="T:System.Decimal" /> number toward negative infinity that is less than <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="73ddd-267">または、<paramref name="d" /> に小数部がない場合は、<paramref name="d" /> が未変更のまま返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-267">-or-  If <paramref name="d" /> doesn't have a fractional part, <paramref name="d" /> is returned unchanged.</span>
          </span>
          <span data-ttu-id="73ddd-268">このメソッドは、<see cref="T:System.Decimal" /> 型の整数値を返すことに注意してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-268">Note that the method returns an integral value of type <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-269">このメソッドの動作は IEEE 標準 754、セクション 4 に従います。</span><span class="sxs-lookup"><span data-stu-id="73ddd-269">The behavior of this method follows IEEE Standard 754, Section 4.</span></span> <span data-ttu-id="73ddd-270">このような丸めと呼ぶことが負の無限大に丸めます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-270">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="73ddd-271">つまり場合、`d`が正の値、小数部が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-271">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="73ddd-272">場合`d`は負の場合、小数部が存在するより小さい整数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-272">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="73ddd-273">このメソッドの動作と異なります、<xref:System.Decimal.Ceiling%2A>メソッドで、正の無限大に向かって丸め処理をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-273">The operation of this method differs from the <xref:System.Decimal.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-274">次の例を示しています、<xref:System.Decimal.Floor%2A>メソッドとの比較、<xref:System.Decimal.Ceiling%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-274">The following example illustrates the <xref:System.Decimal.Floor%2A> method and contrasts it with the <xref:System.Decimal.Ceiling%2A> method.</span></span>  
  
 [!code-csharp[System.Decimal.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ceiling/cs/ceiling1.cs#1)]
 [!code-vb[System.Decimal.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
        <altmember cref="M:System.Decimal.Truncate(System.Decimal)" />
        <altmember cref="M:System.Decimal.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="FromOACurrency">
      <MemberSignature Language="C#" Value="public static decimal FromOACurrency (long cy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal FromOACurrency(int64 cy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.FromOACurrency(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromOACurrency (cy As Long) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal FromOACurrency(long cy);" />
      <MemberSignature Language="F#" Value="static member FromOACurrency : int64 -&gt; decimal" Usage="System.decimal.FromOACurrency cy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cy" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="cy">
          <span data-ttu-id="73ddd-275">OLE オートメーション通貨値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-275">An OLE Automation Currency value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-276">OLE オートメーション通貨値を格納している指定した 64 ビット符号付き整数を、それと等価の <see cref="T:System.Decimal" /> 値に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-276">Converts the specified 64-bit signed integer, which contains an OLE Automation Currency value, to the equivalent <see cref="T:System.Decimal" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-277">
            <see cref="T:System.Decimal" /> と等価の値を格納している <paramref name="cy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-277">A <see cref="T:System.Decimal" /> that contains the equivalent of <paramref name="cy" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73ddd-278">次のコード例では、`FromOACurrency`変換する方法の<xref:System.Int64>を同等の機能の OLE オートメーション通貨値を含むフィールド`Decimal`番号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-278">The following code example uses the `FromOACurrency` method to convert <xref:System.Int64> fields that contain OLE Automation Currency values to the equivalent `Decimal` numbers.</span></span>  
  
 [!code-cpp[System.Decimal.OACurrency#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CPP/fromoacurrency.cpp#2)]
 [!code-csharp[System.Decimal.OACurrency#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CS/fromoacurrency.cs#2)]
 [!code-vb[System.Decimal.OACurrency#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.OACurrency/VB/fromoacurrency.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.ToOACurrency(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="GetBits">
      <MemberSignature Language="C#" Value="public static int[] GetBits (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] GetBits(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetBits(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBits (d As Decimal) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ GetBits(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member GetBits : decimal -&gt; int[]" Usage="System.decimal.GetBits d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="73ddd-279">変換する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-279">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-280">指定した <see cref="T:System.Decimal" /> のインスタンスの値を、それと等価のバイナリ形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-280">Converts the value of a specified instance of <see cref="T:System.Decimal" /> to its equivalent binary representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-281">
            <paramref name="d" /> のバイナリ形式を格納している 4 要素長の 32 ビット符号付き整数配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-281">A 32-bit signed integer array with four elements that contain the binary representation of <paramref name="d" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-282">バイナリ表現、<xref:System.Decimal>数は 1 ビットの符号、96 ビット整数および整数値を分割し、どのような一部が、小数を指定するために使用するスケール ファクター。</span><span class="sxs-lookup"><span data-stu-id="73ddd-282">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="73ddd-283">スケール ファクターは、暗黙的に 0 から 28 までの指数で累乗数 10、です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-283">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span>  
  
 <span data-ttu-id="73ddd-284">戻り値は、32 ビット符号付き整数の 4 つの要素の配列です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-284">The return value is a four-element array of 32-bit signed integers.</span></span>  
  
 <span data-ttu-id="73ddd-285">1、2、および返される配列の 3 番目の要素は、低、ミドル ネーム、および高の 32 ビット 96 ビット整数値に含まれています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-285">The first, second, and third elements of the returned array contain the low, middle, and high 32 bits of the 96-bit integer number.</span></span>  
  
 <span data-ttu-id="73ddd-286">返される配列の 4 番目の要素には、スケール ファクターと記号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-286">The fourth element of the returned array contains the scale factor and sign.</span></span> <span data-ttu-id="73ddd-287">次の部分で構成されます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-287">It consists of the following parts:</span></span>  
  
 <span data-ttu-id="73ddd-288">ビット 0 ~ 15 下位のワードは、使用されていないと、0 にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-288">Bits 0 to 15, the lower word, are unused and must be zero.</span></span>  
  
 <span data-ttu-id="73ddd-289">16 ~ 23 のビットは、番号の整数を除算する 10 の累乗を示す 0 から 28 までの指数を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-289">Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.</span></span>  
  
 <span data-ttu-id="73ddd-290">ビット 24 ~ 30 が使用されていないと、0 にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-290">Bits 24 to 30 are unused and must be zero.</span></span>  
  
 <span data-ttu-id="73ddd-291">ビット 31、記号が含まれています: という意味では正の値、0 と 1 は、負のことを意味します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-291">Bit 31 contains the sign: 0 mean positive, and 1 means negative.</span></span>  
  
 <span data-ttu-id="73ddd-292">ビット表現は、負または正の 0 によって区別に注意してください。</span><span class="sxs-lookup"><span data-stu-id="73ddd-292">Note that the bit representation differentiates between negative and positive zero.</span></span> <span data-ttu-id="73ddd-293">これらの値は、すべての操作で等しいものとして扱われます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-293">These values are treated as being equal in all operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-294">次の例では、`GetBits`いくつかを変換する方法の`Decimal`値と等価のバイナリ表現にします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-294">The following example uses the `GetBits` method to convert several `Decimal` values to their equivalent binary representations.</span></span> <span data-ttu-id="73ddd-295">表示 10 進数の値と要素の 16 進数の値によって返される配列で、<xref:System.Decimal.GetBits%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-295">It then displays the decimal values and the hexadecimal value of the elements in the array returned by the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 [!code-cpp[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CPP/getbits.cpp#2)]
 [!code-csharp[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CS/getbits.cs#2)]
 [!code-vb[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/VB/getbits.vb#2)]  
  
 <span data-ttu-id="73ddd-296">次の例では、<xref:System.Decimal.GetBits%2A>配列のコンポーネント部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-296">The following example uses the <xref:System.Decimal.GetBits%2A> method to retrieve the component parts of an array.</span></span> <span data-ttu-id="73ddd-297">使用して、この配列への呼び出しで、<xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29>新しいのインスタンスを作成するコンス トラクター<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-297">It then uses this array in the call to the <xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29> constructor to instantiate a new <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Decimal.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.ctor/cs/ctor2a.cs#1)]
 [!code-vb[System.Decimal.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.ctor/vb/ctor2a.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Decimal.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="decimal.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="73ddd-298">このインスタンスのハッシュ コードを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-298">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-299">32 ビット符号付き整数ハッシュ コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-299">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="decimal.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="73ddd-300">
            <see cref="T:System.TypeCode" /> 値型の <see cref="T:System.Decimal" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-300">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-301">列挙型定数 <see cref="F:System.TypeCode.Decimal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-301">The enumerated constant <see cref="F:System.TypeCode.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73ddd-302">次のコード例では、`GetTypeCode`の型コードを返すメソッドを`Decimal`値の型。</span><span class="sxs-lookup"><span data-stu-id="73ddd-302">The following code example uses the `GetTypeCode` method to return the type code for `Decimal` value type.</span></span>  
  
 [!code-cpp[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CPP/gettypecode.cpp#3)]
 [!code-csharp[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CS/gettypecode.cs#3)]
 [!code-vb[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/VB/gettypecode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly decimal MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MaxValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxValue : decimal" Usage="System.decimal.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73ddd-303">
            <see cref="T:System.Decimal" /> の最大有効値を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-303">Represents the largest possible value of <see cref="T:System.Decimal" />.</span>
          </span>
          <span data-ttu-id="73ddd-304">このフィールドは定数であり、読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-304">This field is constant and read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-305">この定数の値は、正 79,228,162,514,264,337,593,543,950,335 です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-305">The value of this constant is positive 79,228,162,514,264,337,593,543,950,335.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-306">次のコード サンプルは、の使用方法を示します`MaxValue`:</span><span class="sxs-lookup"><span data-stu-id="73ddd-306">The following code sample illustrates the use of `MaxValue` :</span></span>  
  
 [!code-cpp[Decimal Example#2](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#2)]
 [!code-csharp[Decimal Example#2](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#2)]
 [!code-vb[Decimal Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinusOne">
      <MemberSignature Language="C#" Value="public static readonly decimal MinusOne;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MinusOne" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MinusOne" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinusOne As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MinusOne;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinusOne : decimal" Usage="System.decimal.MinusOne" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73ddd-307">負の 1 (-1) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-307">Represents the number negative one (-1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73ddd-308">次のコード例の使用を示しています、`MinusOne`フィールドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-308">The following code example illustrates the use of the `MinusOne` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly decimal MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MinValue" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MinValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinValue : decimal" Usage="System.decimal.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73ddd-309">
            <see cref="T:System.Decimal" /> の最小有効値を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-309">Represents the smallest possible value of <see cref="T:System.Decimal" />.</span>
          </span>
          <span data-ttu-id="73ddd-310">このフィールドは定数であり、読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-310">This field is constant and read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-311">この定数の値は、負の値の 79,228,162,514,264,337,593,543,950,335 です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-311">The value of this constant is negative 79,228,162,514,264,337,593,543,950,335.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-312">次のコード例の使用を示しています、`MinValue`フィールドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-312">The following code example illustrates the use of the `MinValue` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static decimal Multiply (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Multiply(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Multiply(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Multiply : decimal * decimal -&gt; decimal" Usage="System.decimal.Multiply (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="73ddd-313">被乗数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-313">The multiplicand.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="73ddd-314">乗数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-314">The multiplier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-315">指定された 2 つの <see cref="T:System.Decimal" /> 値を乗算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-315">Multiplies two specified <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-316">
            <paramref name="d1" /> と <paramref name="d2" /> を乗算した結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-316">The result of multiplying <paramref name="d1" /> and <paramref name="d2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73ddd-317">次のコード例のいくつかのペアを作成する`Decimal`値し、その製品の計算、`Multiply`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-317">The following code example creates several pairs of `Decimal` values and calculates their products with the `Multiply` method.</span></span>  
  
 [!code-cpp[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/CPP/mul_div_rem.cpp#1)]
 [!code-csharp[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/CS/mul_div_rem.cs#1)]
 [!code-vb[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/VB/mul_div_rem.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-318">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-318">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static decimal Negate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Negate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Negate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Negate(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Negate : decimal -&gt; decimal" Usage="System.decimal.Negate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="73ddd-319">否定する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-319">The value to negate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-320">指定した <see cref="T:System.Decimal" /> 値に -1 を乗算した結果を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-320">Returns the result of multiplying the specified <see cref="T:System.Decimal" /> value by negative one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-321">値が <paramref name="d" /> で、符号が逆の 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-321">A decimal number with the value of <paramref name="d" />, but the opposite sign.</span>
          </span>
          <span data-ttu-id="73ddd-322">または、<paramref name="d" /> が 0 の場合は 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-322">-or-  Zero, if <paramref name="d" /> is zero.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73ddd-323">次のコード例では、`Negate`いくつかの記号を変更するメソッドを`Decimal`値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-323">The following code example uses the `Negate` method to change the sign of several `Decimal` values.</span></span>  
  
 [!code-cpp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CPP/floor_neg_trunc.cpp#1)]
 [!code-csharp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CS/floor_neg_trunc.cs#1)]
 [!code-vb[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/VB/floor_neg_trunc.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static readonly decimal One;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal One" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.One" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly One As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal One;" />
      <MemberSignature Language="F#" Value=" staticval mutable One : decimal" Usage="System.decimal.One" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73ddd-324">数値 1 を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-324">Represents the number one (1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73ddd-325">次のコード例の使用を示しています、`One`フィールドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-325">The following code example illustrates the use of the `One` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static decimal operator + (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Addition(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator +(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : decimal * decimal -&gt; decimal" Usage="d1 + d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="73ddd-326">加算する 1 番目の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-326">The first value to add.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="73ddd-327">加算する 2 番目の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-327">The second value to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-328">指定した 2 つの <see cref="T:System.Decimal" /> 値を加算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-328">Adds two specified <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-329">
            <paramref name="d1" /> と <paramref name="d2" /> を加算した結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-329">The result of adding <paramref name="d1" /> and <paramref name="d2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-330"><xref:System.Decimal.op_Addition%2A>メソッドの加算演算子の動作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-330">The <xref:System.Decimal.op_Addition%2A> method defines the operation of the addition operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="73ddd-331">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-331">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/addition1.cs#3)]
 [!code-vb[System.Decimal.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/addition1.vb#3)]  
  
 <span data-ttu-id="73ddd-332">使用している言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Add%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-332">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Add%2A> method instead.</span></span>  
  
 <span data-ttu-id="73ddd-333">この演算子を同等の方法は、します。 <xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="73ddd-333">The equivalent method for this operator is <xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-334">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-334">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public static decimal operator -- (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Decrement(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Decrement(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Decrement (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator --(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member op_Decrement : decimal -&gt; decimal" Usage="System.decimal.op_Decrement d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="73ddd-335">デクリメントする値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-335">The value to decrement.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-336">
            <see cref="T:System.Decimal" /> オペランドを 1 だけデクリメントします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-336">Decrements the <see cref="T:System.Decimal" /> operand by one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-337">1 だけデクリメントした <paramref name="d" /> の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-337">The value of <paramref name="d" /> decremented by 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-338"><xref:System.Decimal.op_Decrement%2A>メソッドは、デクリメント演算子の操作を定義<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-338">The <xref:System.Decimal.op_Decrement%2A> method defines the operation of the decrement operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="73ddd-339">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-339">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement1.cs#4)]  
  
 <span data-ttu-id="73ddd-340">インクリメント演算子 (Visual Basic の場合) など一部の言語を呼び出すことができます、<xref:System.Decimal.op_Decrement%2A>メソッドを直接として次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-340">Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Decrement%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement1.vb#5)]  
  
 <span data-ttu-id="73ddd-341">お使いの言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Subtract%2A>メソッド、次の例として、代わりにします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-341">If your language does not support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead, as the following example shows.</span></span>  
  
 [!code-csharp[System.Decimal.Operators#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement2.cs#6)]
 [!code-vb[System.Decimal.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement2.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-342">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-342">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static decimal operator / (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Division(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Division(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator /(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( / ) : decimal * decimal -&gt; decimal" Usage="d1 / d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="73ddd-343">被除数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-343">The dividend.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="73ddd-344">除数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-344">The divisor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-345">2 つの指定した <see cref="T:System.Decimal" /> 値を除算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-345">Divides two specified <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-346">
            <paramref name="d1" /> を <paramref name="d2" /> で除算した結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-346">The result of dividing <paramref name="d1" /> by <paramref name="d2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-347"><xref:System.Decimal.op_Division%2A>メソッドの除算演算子の動作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-347">The <xref:System.Decimal.op_Division%2A> method defines the operation of the division operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="73ddd-348">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-348">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/division1.cs#7)]
 [!code-vb[System.Decimal.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/division1.vb#7)]  
  
 <span data-ttu-id="73ddd-349">使用している言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Divide%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-349">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Divide%2A> method instead.</span></span>  
  
 <span data-ttu-id="73ddd-350">この演算子を同等の方法は、します。 <xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="73ddd-350">The equivalent method for this operator is <xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="73ddd-351">
            <paramref name="d2" /> が 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-351">
              <paramref name="d2" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-352">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-352">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : decimal * decimal -&gt; bool" Usage="d1 = d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="73ddd-353">比較する最初の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-353">The first value to compare.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="73ddd-354">比較する 2 番目の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-354">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-355">2 つの <see cref="T:System.Decimal" /> 値が等しいかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-355">Returns a value that indicates whether two <see cref="T:System.Decimal" /> values are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-356">
            <see langword="true" /> と <paramref name="d1" /> が等しい場合は <paramref name="d2" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-356">
              <see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-357"><xref:System.Decimal.op_Equality%2A>メソッド定義の等値演算子の動作<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-357">The <xref:System.Decimal.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="73ddd-358">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-358">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/equality1.cs#1)]
 [!code-vb[System.Decimal.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/equality1.vb#1)]  
  
 <span data-ttu-id="73ddd-359">使用している言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Equals%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-359">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Equals%2A> method instead.</span></span>  
  
 <span data-ttu-id="73ddd-360">この演算子を同等の方法は、します。 <xref:System.Decimal.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="73ddd-360">The equivalent method for this operator is <xref:System.Decimal.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="73ddd-361">
            <see cref="T:System.Decimal" /> オブジェクトと別の型の間の明示的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-361">Defines an explicit conversion between a <see cref="T:System.Decimal" /> object and another type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Byte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; byte" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-362">変換する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-362">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-363">
            <see cref="T:System.Decimal" /> から 8 ビット符号なし整数への明示的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-363">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to an 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-364">変換された <see cref="T:System.Decimal" /> を表す 8 ビット符号なし整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-364">An 8-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-365">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.Byte>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-365">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Byte>.</span></span> <span data-ttu-id="73ddd-366">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラは異なる実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-366">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="73ddd-367">例では、明示的に変換するときに異なる戻り値を示しています、<xref:System.Decimal>値を<xref:System.Byte>c#、C++、および Visual Basic を使用した値です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-367">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Byte> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="73ddd-368">実行するには、変換は言語に関係なくを呼び出すことができます、<xref:System.Decimal.ToByte%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToByte%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-368">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToByte%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToByte%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples 
 <span data-ttu-id="73ddd-369">次の例では変換<xref:System.Decimal>番号の<xref:System.Byte>、明示的なを使用して値<xref:System.Decimal>に<xref:System.Byte>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-369">The following example converts <xref:System.Decimal> numbers to <xref:System.Byte> values by using the explicit <xref:System.Decimal> to <xref:System.Byte> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctos_byte.cpp#4)] 
 [!code-csharp[System.Decimal.ConvTo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctos_byte.cs#4)] 
 [!code-vb[System.Decimal.ConvTo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctos_byte.vb#4)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-370">
            <paramref name="value" /> が <see cref="F:System.Byte.MinValue" /> より小さいか <see cref="F:System.Byte.MaxValue" /> より大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-370">
              <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator char (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname char op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Char" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator char(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; char" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-371">変換する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-371">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-372">
            <see cref="T:System.Decimal" /> から Unicode 文字への明示的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-372">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-373">変換後の <see cref="T:System.Decimal" /> を表す Unicode 文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-373">A Unicode character that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-374">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.Char>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-374">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Char>.</span></span> <span data-ttu-id="73ddd-375">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラが異なる実装を提供して、異なる結果を返すか、変換をまったくできない場合があります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-375">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results, or might not support the conversion at all.</span></span> <span data-ttu-id="73ddd-376">たとえば、Visual Basic および C++ コンパイラはできません、明示的な<xref:System.Decimal>を<xref:System.Char>変換します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-376">For example, the Visual Basic and C++ compilers do not support an explicit <xref:System.Decimal> to a <xref:System.Char> conversion.</span></span>
 

## Examples 
 <span data-ttu-id="73ddd-377">次の例では変換<xref:System.Decimal>番号の<xref:System.Char>(Unicode 文字で) 使用して値の明示的な<xref:System.Decimal>に<xref:System.Char>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-377">The following example converts <xref:System.Decimal> numbers to <xref:System.Char> values (Unicode characters) by using the explicit <xref:System.Decimal> to <xref:System.Char> conversion operator.</span></span>

 [!code-csharp[System.Decimal.ConvTo#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctochar.cs#6)]
 [!code-vb[System.Decimal.ConvTo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctochar.vb#6)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-378">
            <paramref name="value" /> が <see cref="F:System.Char.MinValue" /> より小さいか <see cref="F:System.Char.MaxValue" /> より大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-378">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator double (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Double" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator double(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; double" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-379">変換する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-379">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-380">
            <see cref="T:System.Decimal" /> から倍精度浮動小数点数への明示的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-380">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-381">変換された <see cref="T:System.Decimal" /> を表す倍精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-381">A double-precision floating-point number that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-382">倍精度浮動小数点数がある有効桁数よりも少ないため、有効桁数の損失にこの操作を行うことができます、<xref:System.Decimal>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-382">This operation can result in a loss of precision, because a double-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>
 
 <span data-ttu-id="73ddd-383">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.Double>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-383">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Double>.</span></span> <span data-ttu-id="73ddd-384">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラは異なる実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-384">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="73ddd-385">例では、明示的に変換するときに異なる戻り値を示しています、<xref:System.Decimal>値を<xref:System.Double>c#、C++、および Visual Basic を使用した値です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-385">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Double> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="73ddd-386">実行するには、変換は言語に関係なくを呼び出すことができます、<xref:System.Decimal.ToDouble%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToDouble%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-386">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToDouble%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToDouble%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="73ddd-387">次の例では変換<xref:System.Decimal>番号の<xref:System.Double>、明示的なを使用して値<xref:System.Decimal>に<xref:System.Double>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-387">The following example converts <xref:System.Decimal> numbers to <xref:System.Double> values by using the explicit <xref:System.Decimal> to <xref:System.Double> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctosgl_dbl.cpp#5)] 
 [!code-csharp[System.Decimal.ConvTo#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctosgl_dbl.cs#5)]
 [!code-vb[System.Decimal.ConvTo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctosgl_dbl.vb#5)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator short (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int16 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator short(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; int16" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-388">変換する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-388">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-389">
            <see cref="T:System.Decimal" /> から 16 ビット符号付き整数への明示的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-389">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-390">変換された <see cref="T:System.Decimal" /> を表す 16 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-390">A 16-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="73ddd-391">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.Int16>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-391">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int16>.</span></span> <span data-ttu-id="73ddd-392">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラは異なる実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-392">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="73ddd-393">例では、明示的に変換するときに異なる戻り値を示しています、<xref:System.Decimal>値を<xref:System.Int16>c#、Visual Basic、および C++ を使用した値です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-393">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int16> value by using C#, Visual Basic, and C++.</span></span> <span data-ttu-id="73ddd-394">実行するには、変換は言語に関係なくを呼び出すことができます、<xref:System.Decimal.ToInt16%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToInt16%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-394">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt16%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt16%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="73ddd-395">次の例では変換<xref:System.Decimal>番号の<xref:System.Int16>、明示的なを使用して値<xref:System.Decimal>に<xref:System.Int16>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-395">The following example converts <xref:System.Decimal> numbers to <xref:System.Int16> values by using the explicit <xref:System.Decimal> to <xref:System.Int16> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int16.cpp#3)] 
 [!code-csharp[System.Decimal.ConvTo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int16.cs#3)] 
 [!code-vb[System.Decimal.ConvTo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int16.vb#3)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-396">
            <paramref name="value" /> が <see cref="F:System.Int16.MinValue" /> より小さいか <see cref="F:System.Int16.MaxValue" /> より大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-396">
              <paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator int(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; int" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-397">変換する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-397">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-398">
            <see cref="T:System.Decimal" /> から 32 ビット符号付き整数への明示的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-398">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-399">変換された <see cref="T:System.Decimal" /> を表す 32 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-399">A 32-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-400">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.Int32>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-400">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int32>.</span></span> <span data-ttu-id="73ddd-401">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラは異なる実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-401">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="73ddd-402">例では、明示的に変換するときに異なる戻り値を示しています、<xref:System.Decimal>値を<xref:System.Int32>c#、C++、および Visual Basic を使用した値です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-402">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int32> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="73ddd-403">実行するには、変換は言語に関係なくを呼び出すことができます、<xref:System.Decimal.ToInt32%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToInt32%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-403">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt32%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt32%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="73ddd-404">次の例では変換<xref:System.Decimal>番号の<xref:System.Int32>、明示的なを使用して値<xref:System.Decimal>に<xref:System.Int32>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-404">The following example converts <xref:System.Decimal> numbers to <xref:System.Int32> values by using the explicit <xref:System.Decimal> to <xref:System.Int32> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int32.cpp#2)] 
 [!code-csharp[System.Decimal.ConvTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int32.cs#2)] 
 [!code-vb[System.Decimal.ConvTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int32.vb#2)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-405">
            <paramref name="value" /> が <see cref="F:System.Int32.MinValue" /> より小さいか <see cref="F:System.Int32.MaxValue" /> より大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-405">
              <paramref name="value" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator long(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; int64" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-406">変換する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-406">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-407">
            <see cref="T:System.Decimal" /> から 64 ビット符号付き整数への明示的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-407">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-408">変換された <see cref="T:System.Decimal" /> を表す 64 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-408">A 64-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-409">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.Int64>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-409">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int64>.</span></span> <span data-ttu-id="73ddd-410">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラは異なる実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-410">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="73ddd-411">例では、明示的に変換するときに異なる戻り値を示しています、<xref:System.Decimal>値を<xref:System.Int64>c# および Visual Basic を使用した値です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-411">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int64> value by using C# and Visual Basic.</span></span> <span data-ttu-id="73ddd-412">実行するには、変換は言語に関係なくを呼び出すことができます、<xref:System.Decimal.ToInt64%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToInt64%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-412">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt64%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt64%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 
## Examples
 <span data-ttu-id="73ddd-413">次の例では変換<xref:System.Decimal>番号の<xref:System.Int64>、明示的なを使用して値<xref:System.Decimal>に<xref:System.Int64>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-413">The following example converts <xref:System.Decimal> numbers to <xref:System.Int64> values by using the explicit <xref:System.Decimal> to <xref:System.Int64> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int64.cpp#1)] 
 [!code-csharp[System.Decimal.ConvTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int64.cs#1)] 
 [!code-vb[System.Decimal.ConvTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int64.vb#1)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-414">
            <paramref name="value" /> が <see cref="F:System.Int64.MinValue" /> より小さいか <see cref="F:System.Int64.MaxValue" /> より大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-414">
              <paramref name="value" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator sbyte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int8 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::SByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; sbyte" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-415">変換する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-415">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-416">
            <see cref="T:System.Decimal" /> から 8 ビット符号付き整数への明示的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-416">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to an 8-bit signed integer.</span>
          </span>
          <span data-ttu-id="73ddd-417">この API は、CLS に準拠していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-417">This API is not CLS-compliant.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-418">変換された <see cref="T:System.Decimal" /> を表す 8 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-418">An 8-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-419">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.SByte>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-419">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.SByte>.</span></span> <span data-ttu-id="73ddd-420">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラは異なる実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-420">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="73ddd-421">例では、明示的に変換するときに異なる戻り値を示しています、<xref:System.Decimal>値を<xref:System.Byte>と<xref:System.SByte>c# および Visual Basic を使用した値です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-421">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Byte> and an <xref:System.SByte> value by using C# and Visual Basic.</span></span> <span data-ttu-id="73ddd-422">実行するには、変換は言語に関係なくを呼び出すことができます、<xref:System.Decimal.ToSByte%28System.Decimal%29?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToSByte%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-422">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToSByte%28System.Decimal%29?displayProperty=nameWithType> method or the <xref:System.Convert.ToSByte%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>   


## Examples 
 <span data-ttu-id="73ddd-423">次の例では変換<xref:System.Decimal>番号の<xref:System.SByte>、明示的なを使用して値<xref:System.Decimal>に<xref:System.SByte>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-423">The following example converts <xref:System.Decimal> numbers to <xref:System.SByte> values by using the explicit <xref:System.Decimal> to <xref:System.SByte> conversion operator.</span></span>

 [!code-cpp[System.Decimal.Operators.Explicit#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cpp/tosbyte.cpp#1)] 
 [!code-csharp[System.Decimal.Operators.Explicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cs/tosbyte.cs#1)]
 [!code-vb[System.Decimal.Operators.Explicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators.explicit/vb/tosbyte.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-424">
            <paramref name="value" /> が <see cref="F:System.SByte.MinValue" /> より小さいか <see cref="F:System.SByte.MaxValue" /> より大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-424">
              <paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
        <altCompliant cref="M:System.Decimal.ToInt16(System.Decimal)" />
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Single" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator float(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; single" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-425">変換する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-425">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-426">
            <see cref="T:System.Decimal" /> から単精度浮動小数点数への明示的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-426">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-427">変換された <see cref="T:System.Decimal" /> を表す単精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-427">A single-precision floating-point number that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-428">単精度浮動小数点数がある有効桁数よりも少ないため、有効桁数の損失にこの操作を行うことができます、<xref:System.Decimal>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-428">This operation can result in a loss of precision, because a single-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>

 <span data-ttu-id="73ddd-429">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.Single>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-429">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Single>.</span></span> <span data-ttu-id="73ddd-430">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラは異なる実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-430">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="73ddd-431">例では、明示的に変換するときに異なる戻り値を示しています、<xref:System.Decimal>値を<xref:System.Single>c# および Visual Basic を使用した値です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-431">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Single> value by using C# and Visual Basic.</span></span> <span data-ttu-id="73ddd-432">実行するには、変換は言語に関係なくを呼び出すことができます、<xref:System.Decimal.ToSingle%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToSingle%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-432">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToSingle%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToSingle%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="73ddd-433">次の例では変換<xref:System.Decimal>番号の<xref:System.Single>、明示的なを使用して値<xref:System.Decimal>に<xref:System.Single>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-433">The following example converts <xref:System.Decimal> numbers to <xref:System.Single> values by using the explicit <xref:System.Decimal> to <xref:System.Single> conversion operator.</span></span>

 [!code-cpp[System.Decimal.Operators.Explicit#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cpp/tosingle1.cpp#2)] 
 [!code-csharp[System.Decimal.Operators.Explicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cs/tosingle1.cs#2)]
 [!code-vb[System.Decimal.Operators.Explicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators.explicit/vb/tosingle1.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ushort (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int16 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; uint16" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-434">変換する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-434">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-435">
            <see cref="T:System.Decimal" /> から 16 ビット符号なし整数への明示的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-435">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 16-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="73ddd-436">この API は、CLS に準拠していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-436">This API is not CLS-compliant.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-437">変換された <see cref="T:System.Decimal" /> を表す 16 ビット符号なし整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-437">A 16-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-438">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.UInt16>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-438">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt16>.</span></span> <span data-ttu-id="73ddd-439">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラは異なる実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-439">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="73ddd-440">例では、明示的に変換するときに異なる戻り値を示しています、<xref:System.Decimal>値を<xref:System.UInt16>c# および Visual Basic を使用した値です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-440">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt16> value by using C# and Visual Basic.</span></span> <span data-ttu-id="73ddd-441">実行するには、変換は言語に関係なくを呼び出すことができます、<xref:System.Decimal.ToUInt16%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToUInt16%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-441">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt16%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt16%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="73ddd-442">次の例では変換<xref:System.Decimal>番号の<xref:System.UInt16>、明示的なを使用して値<xref:System.Decimal>に<xref:System.UInt16>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-442">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt16> values by using the explicit <xref:System.Decimal> to <xref:System.UInt16> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int16.cpp#3)] 
 [!code-csharp[System.Decimal.ConvTo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int16.cs#3)]
 [!code-vb[System.Decimal.ConvTo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int16.vb#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-443">
            <paramref name="value" /> が <see cref="F:System.UInt16.MinValue" /> より小さいか <see cref="F:System.UInt16.MaxValue" /> より大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-443">
              <paramref name="value" /> is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator uint (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt32(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; uint32" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-444">変換する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-444">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-445">
            <see cref="T:System.Decimal" /> から 32 ビット符号なし整数への明示的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-445">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 32-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="73ddd-446">この API は、CLS に準拠していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-446">This API is not CLS-compliant.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-447">変換された <see cref="T:System.Decimal" /> を表す 32 ビット符号なし整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-447">A 32-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-448">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.UInt32>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-448">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt32>.</span></span> <span data-ttu-id="73ddd-449">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラは異なる実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-449">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="73ddd-450">例では、明示的に変換するときに異なる戻り値を示しています、<xref:System.Decimal>値を<xref:System.UInt32>c# および Visual Basic を使用した値です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-450">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt32> value by using C# and Visual Basic.</span></span> <span data-ttu-id="73ddd-451">実行するには、変換は言語に関係なくを呼び出すことができます、<xref:System.Decimal.ToUInt32%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToUInt32%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-451">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt32%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt32%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>


## Examples
 <span data-ttu-id="73ddd-452">次の例では変換<xref:System.Decimal>番号の<xref:System.UInt32>、明示的なを使用して値<xref:System.Decimal>に<xref:System.UInt32>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-452">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt32> values by using the explicit <xref:System.Decimal> to <xref:System.UInt32> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int32.cpp#2)] 
 [!code-csharp[System.Decimal.ConvTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int32.cs#2)]
 [!code-vb[System.Decimal.ConvTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int32.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-453">
            <paramref name="value" /> が <see cref="F:System.UInt32.MinValue" /> より小さいか <see cref="F:System.UInt32.MaxValue" /> より大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-453">
              <paramref name="value" /> is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altCompliant cref="M:System.Decimal.ToInt64(System.Decimal)" />
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ulong (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt64(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; uint64" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-454">変換する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-454">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-455">
            <see cref="T:System.Decimal" /> から 64 ビット符号なし整数への明示的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-455">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 64-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="73ddd-456">この API は、CLS に準拠していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-456">This API is not CLS-compliant.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-457">変換された <see cref="T:System.Decimal" /> を表す 64 ビット符号なし整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-457">A 64-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-458">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.UInt64>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-458">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt64>.</span></span> <span data-ttu-id="73ddd-459">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラは異なる実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-459">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="73ddd-460">例では、明示的に変換するときに異なる戻り値を示しています、<xref:System.Decimal>値を<xref:System.UInt64>c# および Visual Basic を使用した値です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-460">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt64> value by using C# and Visual Basic.</span></span> <span data-ttu-id="73ddd-461">実行するには、変換は言語に関係なくを呼び出すことができます、<xref:System.Decimal.ToUInt64%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToUInt64%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-461">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt64%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt64%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>


## Examples 
 <span data-ttu-id="73ddd-462">次の例では変換<xref:System.Decimal>番号の<xref:System.UInt64>、明示的なを使用して値<xref:System.Decimal>に<xref:System.UInt64>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-462">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt64> values by using the explicit <xref:System.Decimal> to <xref:System.UInt64> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int64.cpp#1)] 
 [!code-csharp[System.Decimal.ConvTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int64.cs#1)]
 [!code-vb[System.Decimal.ConvTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int64.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-463">
            <paramref name="value" /> が負か <see cref="F:System.UInt64.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-463">
              <paramref name="value" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Double)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Double) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(double value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : double -&gt; decimal" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-464">変換する倍精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-464">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-465">倍精度浮動小数点数から <see cref="T:System.Decimal" /> への明示的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-465">Defines an explicit conversion of a double-precision floating-point number to a <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-466">変換された倍精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-466">The converted double-precision floating point number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  

 <span data-ttu-id="73ddd-467">次の例では変換<xref:System.Double>値<xref:System.Decimal>番号を使用して、<xref:System.Double>に<xref:System.Decimal>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-467">The following example converts <xref:System.Double> values to <xref:System.Decimal> numbers by using the <xref:System.Double> to <xref:System.Decimal> conversion operator.</span></span> <span data-ttu-id="73ddd-468">この変換には、Visual Basic で op_Explicit 演算子が必要です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-468">This conversion requires the op_Explicit operator in Visual Basic.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.Others#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromdouble.cpp#2)]
 [!code-csharp[System.Decimal.ConvFrom.Others#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromdouble.cs#2)]
 [!code-vb[System.Decimal.ConvFrom.Others#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromdouble.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-469">
            <paramref name="value" /> は <see cref="F:System.Decimal.MaxValue" /> を超えているか、または <see cref="F:System.Decimal.MinValue" /> 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-469">
              <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span>
          </span>
          <span data-ttu-id="73ddd-470">または、<paramref name="value" /> は <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.PositiveInfinity" />、または <see cref="F:System.Double.NegativeInfinity" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-470">-or-  <paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Single)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Single) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(float value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : single -&gt; decimal" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-471">変換する単精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-471">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-472">単精度浮動小数点数から <see cref="T:System.Decimal" /> への明示的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-472">Defines an explicit conversion of a single-precision floating-point number to a <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-473">変換された単精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-473">The converted single-precision floating point number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73ddd-474">次の例では変換<xref:System.Single>値<xref:System.Decimal>番号を使用して、<xref:System.Single>に<xref:System.Decimal>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-474">The following example converts <xref:System.Single> values to <xref:System.Decimal> numbers by using the <xref:System.Single> to <xref:System.Decimal> conversion operator.</span></span> <span data-ttu-id="73ddd-475">この変換には、Visual Basic で op_Explicit 演算子が必要です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-475">This conversion requires the op_Explicit operator in Visual Basic.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.Others#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromsingle.cpp#3)]
 [!code-csharp[System.Decimal.ConvFrom.Others#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromsingle.cs#3)]
 [!code-vb[System.Decimal.ConvFrom.Others#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromsingle.vb#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-476">
            <paramref name="value" /> は <see cref="F:System.Decimal.MaxValue" /> を超えているか、または <see cref="F:System.Decimal.MinValue" /> 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-476">
              <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span>
          </span>
          <span data-ttu-id="73ddd-477">または、<paramref name="value" /> は <see cref="F:System.Single.NaN" />、<see cref="F:System.Single.PositiveInfinity" />、または <see cref="F:System.Single.NegativeInfinity" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-477">-or-  <paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : decimal * decimal -&gt; bool" Usage="d1 &gt; d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="73ddd-478">比較する最初の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-478">The first value to compare.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="73ddd-479">比較する 2 番目の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-479">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-480">指定した <see cref="T:System.Decimal" /> が、指定した別の <see cref="T:System.Decimal" /> より大きいかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-480">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is greater than another specified <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-481">
            <see langword="true" /> が <paramref name="d1" /> より大きい場合は <paramref name="d2" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-481">
              <see langword="true" /> if <paramref name="d1" /> is greater than <paramref name="d2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-482"><xref:System.Decimal.op_GreaterThan%2A>メソッドの大なり演算子の動作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-482">The <xref:System.Decimal.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="73ddd-483">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-483">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthan1.cs#8)]
 [!code-vb[System.Decimal.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan1.vb#8)]  
  
 <span data-ttu-id="73ddd-484">カスタム演算子をサポートしない言語を呼び出すことができます、<xref:System.Decimal.Compare%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-484">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="73ddd-485">これらを呼び出すこともできます、<xref:System.Decimal.op_GreaterThan%2A>メソッドを直接として次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-485">They may also be able to call the <xref:System.Decimal.op_GreaterThan%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan2.vb#9)]  
  
 <span data-ttu-id="73ddd-486">この演算子を同等の方法は、します。 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="73ddd-486">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : decimal * decimal -&gt; bool" Usage="d1 &gt;= d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="73ddd-487">比較する最初の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-487">The first value to compare.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="73ddd-488">比較する 2 番目の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-488">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-489">指定した <see cref="T:System.Decimal" /> が、指定した別の <see cref="T:System.Decimal" /> 以上かどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-489">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is greater than or equal to another specified <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-490">
            <paramref name="d1" /> が <paramref name="d2" /> 以上の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-490">
              <see langword="true" /> if <paramref name="d1" /> is greater than or equal to <paramref name="d2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-491"><xref:System.Decimal.op_GreaterThanOrEqual%2A>メソッドより大きいか等しい演算子の操作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-491">The <xref:System.Decimal.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="73ddd-492">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-492">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthanorequal1.cs#10)]
 [!code-vb[System.Decimal.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal1.vb#10)]  
  
 <span data-ttu-id="73ddd-493">カスタム演算子をサポートしない言語を呼び出すことができます、<xref:System.Decimal.Compare%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-493">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="73ddd-494">これらを呼び出すこともできます、<xref:System.Decimal.op_GreaterThanOrEqual%2A>メソッドを直接として次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-494">They may also be able to call the <xref:System.Decimal.op_GreaterThanOrEqual%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal2.vb#11)]  
  
 <span data-ttu-id="73ddd-495">この演算子を同等の方法は、します。 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="73ddd-495">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="73ddd-496">値型から <see cref="T:System.Decimal" /> 値への暗黙の変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-496">Defines an implicit conversion of the value of a type to a <see cref="T:System.Decimal" /> value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-497">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>に明示的なキャスト演算子 (c#) または (Visual Basic) の変換関数の呼び出しなしの値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-497">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="73ddd-498">これらには、拡大変換をデータの損失を伴わないおよびスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="73ddd-498">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Byte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : byte -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-499">変換する 8 ビット符号なし整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-499">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-500">8 ビット符号なし整数値から <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-500">Defines an implicit conversion of an 8-bit unsigned integer to a <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-501">変換された 8 ビット符号なし整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-501">The converted 8-bit unsigned integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-502">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>に明示的なキャスト演算子 (c#) または (Visual Basic) の変換関数の呼び出しなしの値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-502">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="73ddd-503">これらには、拡大変換をデータの損失を伴わないおよびスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="73ddd-503">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="73ddd-504">次の例では変換<xref:System.Byte>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-504">The following example converts <xref:System.Byte> values to <xref:System.Decimal> numbers.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfrombyte.cpp#4)]
 [!code-csharp[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfrombyte.cs#4)]
 [!code-vb[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfrombyte.vb#4)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Char)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Char) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(char value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : char -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-505">変換する Unicode 文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-505">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-506">Unicode 文字から <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-506">Defines an implicit conversion of a Unicode character to a <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-507">変換された Unicode 文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-507">The converted Unicode character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-508">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>に明示的なキャスト演算子 (c#) または (Visual Basic) の変換関数の呼び出しなしの値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-508">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="73ddd-509">これらには、拡大変換をデータの損失を伴わないおよびスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="73ddd-509">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="73ddd-510">次の例では変換<xref:System.Char>(Unicode 文字) の値を<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-510">The following example converts <xref:System.Char> values (Unicode characters) to <xref:System.Decimal> numbers.</span></span> <span data-ttu-id="73ddd-511">この変換には、Visual basic、c# および C++ ではなく、op_Implicit 演算子が必要です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-511">This conversion requires the op_Implicit operator in Visual Basic, but not in C# and C++.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.Others#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromchar.cpp#1)]
 [!code-csharp[System.Decimal.ConvFrom.Others#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromchar.cs#1)]
 [!code-vb[System.Decimal.ConvFrom.Others#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromchar.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Short) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(short value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int16 -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-512">変換する 16 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-512">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-513">16 ビット符号付き整数の <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-513">Defines an implicit conversion of a 16-bit signed integer to a <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-514">変換された 16 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-514">The converted 16-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-515">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>に明示的なキャスト演算子 (c#) または (Visual Basic) の変換関数の呼び出しなしの値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-515">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="73ddd-516">これらには、拡大変換をデータの損失を伴わないおよびスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="73ddd-516">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="73ddd-517">次の例では変換<xref:System.Int16>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-517">The following example converts <xref:System.Int16> values to <xref:System.Decimal> numbers.</span></span> <span data-ttu-id="73ddd-518">この変換には、Visual basic、c# および C++ ではなく、op_Implicit 演算子が必要です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-518">This conversion requires the op_Implicit operator in Visual Basic, but not in C# and C++.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint16.cpp#3)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint16.cs#3)]
 [!code-vb[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint16.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(int value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-519">変換する 32 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-519">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-520">32 ビット符号付き整数の <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-520">Defines an implicit conversion of a 32-bit signed integer to a <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-521">変換された 32 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-521">The converted 32-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-522">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>に明示的なキャスト演算子 (c#) または (Visual Basic) の変換関数の呼び出しなしの値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-522">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="73ddd-523">これらには、拡大変換をデータの損失を伴わないおよびスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="73ddd-523">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="73ddd-524">次の例では変換<xref:System.Int32>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-524">The following example converts <xref:System.Int32> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint32.cpp#2)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint32.cs#2)]
 [!code-vb[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint32.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Long) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(long value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int64 -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-525">変換する 64 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-525">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-526">64 ビット符号付き整数の <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-526">Defines an implicit conversion of a 64-bit signed integer to a <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-527">変換された 64 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-527">The converted 64-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-528">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>に明示的なキャスト演算子 (c#) または (Visual Basic) の変換関数の呼び出しなしの値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-528">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="73ddd-529">これらには、拡大変換をデータの損失を伴わないおよびスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="73ddd-529">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="73ddd-530">次の例では変換<xref:System.Int64>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-530">The following example converts <xref:System.Int64> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint64.cpp#1)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint64.cs#1)]
 [!code-vb[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint64.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As SByte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : sbyte -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-531">変換する 8 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-531">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-532">8 ビット符号付き整数値から <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-532">Defines an implicit conversion of an 8-bit signed integer to a <see cref="T:System.Decimal" />.</span>
          </span>
          <span data-ttu-id="73ddd-533">この API は、CLS に準拠していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-533">This API is not CLS-compliant.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-534">変換された 8 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-534">The converted 8-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-535">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>に明示的なキャスト演算子 (c#) または (Visual Basic) の変換関数の呼び出しなしの値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-535">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="73ddd-536">これらには、拡大変換をデータの損失を伴わないおよびスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="73ddd-536">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="73ddd-537">次の例では変換<xref:System.SByte>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-537">The following example converts <xref:System.SByte> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromsbyte.cpp#4)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromsbyte.cs#4)]
 [!code-vb[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromsbyte.vb#4)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UShort) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint16 -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-538">変換する 16 ビット符号なし整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-538">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-539">16 ビット符号なし整数値から <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-539">Defines an implicit conversion of a 16-bit unsigned integer to a <see cref="T:System.Decimal" />.</span>
          </span>
          <span data-ttu-id="73ddd-540">この API は、CLS に準拠していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-540">This API is not CLS-compliant.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-541">変換された 16 ビット符号なし整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-541">The converted 16-bit unsigned integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-542">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>に明示的なキャスト演算子 (c#) または (Visual Basic) の変換関数の呼び出しなしの値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-542">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="73ddd-543">これらには、拡大変換をデータの損失を伴わないおよびスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="73ddd-543">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="73ddd-544">次の例では変換<xref:System.UInt16>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-544">The following example converts <xref:System.UInt16> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint16.cpp#3)]
 [!code-csharp[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint16.cs#3)]
 [!code-vb[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint16.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UInteger) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint32 -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-545">変換する 32 ビット符号なし整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-545">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-546">32 ビット符号なし整数値から <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-546">Defines an implicit conversion of a 32-bit unsigned integer to a <see cref="T:System.Decimal" />.</span>
          </span>
          <span data-ttu-id="73ddd-547">この API は、CLS に準拠していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-547">This API is not CLS-compliant.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-548">変換された 32 ビット符号なし整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-548">The converted 32-bit unsigned integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-549">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>に明示的なキャスト演算子 (c#) または (Visual Basic) の変換関数の呼び出しなしの値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-549">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="73ddd-550">これらには、拡大変換をデータの損失を伴わないおよびスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="73ddd-550">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="73ddd-551">次の例では変換<xref:System.UInt32>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-551">The following example converts <xref:System.UInt32> values to <xref:System.Decimal> numbers.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint32.cpp#2)] 
 [!code-csharp[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint32.cs#2)] 
 [!code-vb[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint32.vb#2)]   

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As ULong) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint64 -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-552">変換する 64 ビット符号なし整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-552">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-553">64 ビット符号なし整数値から <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-553">Defines an implicit conversion of a 64-bit unsigned integer to a <see cref="T:System.Decimal" />.</span>
          </span>
          <span data-ttu-id="73ddd-554">この API は、CLS に準拠していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-554">This API is not CLS-compliant.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-555">変換された 64 ビット符号なし整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-555">The converted 64-bit unsigned integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-556">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>に明示的なキャスト演算子 (c#) または (Visual Basic) の変換関数の呼び出しなしの値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-556">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="73ddd-557">これらには、拡大変換をデータの損失を伴わないおよびスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="73ddd-557">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="73ddd-558">次の例では変換<xref:System.UInt64>値<xref:System.Decimal>番号を使用して、<xref:System.UInt64>に<xref:System.Decimal>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-558">The following example converts <xref:System.UInt64> values to <xref:System.Decimal> numbers by using the <xref:System.UInt64> to <xref:System.Decimal> conversion operator.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint64.cpp#1)] 
 [!code-csharp[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint64.cs#1)] 
 [!code-vb[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint64.vb#1)]   

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public static decimal operator ++ (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Increment(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Increment(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Increment (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator ++(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member op_Increment : decimal -&gt; decimal" Usage="System.decimal.op_Increment d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="73ddd-559">インクリメントする値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-559">The value to increment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-560">
            <see cref="T:System.Decimal" /> オペランドを 1 だけインクリメントします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-560">Increments the <see cref="T:System.Decimal" /> operand by 1.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-561">1 だけインクリメントした <paramref name="d" /> の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-561">The value of <paramref name="d" /> incremented by 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-562"><xref:System.Decimal.op_Increment%2A>メソッドのインクリメント演算子の動作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-562">The <xref:System.Decimal.op_Increment%2A> method defines the operation of the increment operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="73ddd-563">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-563">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment1.cs#12)]  
  
 <span data-ttu-id="73ddd-564">インクリメント演算子 (Visual Basic の場合) など一部の言語を呼び出すことができます、<xref:System.Decimal.op_Increment%2A>メソッドを直接として次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-564">Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Increment%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment1.vb#13)]  
  
 <span data-ttu-id="73ddd-565">お使いの言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Add%2A>メソッド、次の例として、代わりにします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-565">If your language does not support custom operators, call the <xref:System.Decimal.Add%2A> method instead, as the following example shows.</span></span>  
  
 [!code-csharp[System.Decimal.Operators#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment2.cs#14)]
 [!code-vb[System.Decimal.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment2.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-566">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-566">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : decimal * decimal -&gt; bool" Usage="System.decimal.op_Inequality (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="73ddd-567">比較する最初の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-567">The first value to compare.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="73ddd-568">比較する 2 番目の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-568">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-569">2 つの <see cref="T:System.Decimal" /> オブジェクトの値が異なるかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-569">Returns a value that indicates whether two <see cref="T:System.Decimal" /> objects have different values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-570">
            <paramref name="d1" /> と <paramref name="d2" /> が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-570">
              <see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-571"><xref:System.Decimal.op_Inequality%2A>メソッドの非等値演算子の動作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-571">The <xref:System.Decimal.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="73ddd-572">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-572">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/inequality1.cs#2)]
 [!code-vb[System.Decimal.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/inequality1.vb#2)]  
  
 <span data-ttu-id="73ddd-573">使用している言語がカスタム演算子をサポートしていない場合は、次の手法のいずれかを使用して非等値をテストできます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-573">If the language you're using doesn't support custom operators, you can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="73ddd-574">呼び出す、<xref:System.Decimal.Compare%2A>メソッドで、2 つの間のリレーションシップを示す<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-574">Calling the <xref:System.Decimal.Compare%2A> method, which indicates the relationship between two <xref:System.Decimal> values.</span></span>  
  
-   <span data-ttu-id="73ddd-575">呼び出す、<xref:System.Decimal.Equals%2A>メソッドとその値を反転します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-575">Calling the <xref:System.Decimal.Equals%2A> method and reversing its value.</span></span>  
  
 <span data-ttu-id="73ddd-576">この演算子を同等の方法は、します。 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="73ddd-576">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : decimal * decimal -&gt; bool" Usage="d1 &lt; d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="73ddd-577">比較する最初の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-577">The first value to compare.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="73ddd-578">比較する 2 番目の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-578">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-579">指定した <see cref="T:System.Decimal" /> が、指定した別の <see cref="T:System.Decimal" /> より小さいかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-579">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is less than another specified <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-580">
            <paramref name="d1" /> が <paramref name="d2" /> より小さい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-580">
              <see langword="true" /> if <paramref name="d1" /> is less than <paramref name="d2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-581"><xref:System.Decimal.op_LessThan%2A>メソッド定義の演算子よりも低い<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-581">The <xref:System.Decimal.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="73ddd-582">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-582">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthan1.cs#15)]
 [!code-vb[System.Decimal.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan1.vb#15)]  
  
 <span data-ttu-id="73ddd-583">カスタム演算子をサポートしない言語を呼び出すことができます、<xref:System.Decimal.Compare%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-583">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="73ddd-584">これらを呼び出すこともできます、<xref:System.Decimal.op_LessThan%2A>メソッドを直接として次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-584">They may also be able to call the <xref:System.Decimal.op_LessThan%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan2.vb#16)]  
  
 <span data-ttu-id="73ddd-585">この演算子を同等の方法は、します。 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="73ddd-585">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : decimal * decimal -&gt; bool" Usage="d1 &lt;= d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="73ddd-586">比較する最初の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-586">The first value to compare.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="73ddd-587">比較する 2 番目の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-587">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-588">指定した <see cref="T:System.Decimal" /> が、指定したも別の <see cref="T:System.Decimal" /> 以下であるかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-588">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is less than or equal to another specified <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-589">
            <paramref name="d1" /> が <paramref name="d2" /> 以下の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-589">
              <see langword="true" /> if <paramref name="d1" /> is less than or equal to <paramref name="d2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-590"><xref:System.Decimal.op_LessThanOrEqual%2A>メソッドは、以下の操作を定義よりの以下演算子<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-590">The <xref:System.Decimal.op_LessThanOrEqual%2A> method defines the operation of the less than or equal operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="73ddd-591">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-591">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthanorequal1.cs#17)]
 [!code-vb[System.Decimal.Operators#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal1.vb#17)]  
  
 <span data-ttu-id="73ddd-592">カスタム演算子をサポートしない言語を呼び出すことができます、<xref:System.Decimal.Compare%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-592">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="73ddd-593">これらを呼び出すこともできます、<xref:System.Decimal.op_LessThanOrEqual%2A>メソッドを直接として次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-593">They may also be able to call the <xref:System.Decimal.op_LessThanOrEqual%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal2.vb#18)]  
  
 <span data-ttu-id="73ddd-594">この演算子を同等の方法は、します。 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="73ddd-594">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Modulus">
      <MemberSignature Language="C#" Value="public static decimal operator % (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Modulus(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Mod (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator %(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( % ) : decimal * decimal -&gt; decimal" Usage="d1 % d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="73ddd-595">被除数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-595">The dividend.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="73ddd-596">除数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-596">The divisor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-597">指定した 2 つの <see cref="T:System.Decimal" /> 値を除算した結果の剰余を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-597">Returns the remainder resulting from dividing two specified <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-598">
            <paramref name="d1" /> を <paramref name="d2" /> で除算した結果の剰余。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-598">The remainder resulting from dividing <paramref name="d1" /> by <paramref name="d2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-599"><xref:System.Decimal.op_Modulus%2A>演算子の定義を指定した 2 つを除算した結果の剰余を返します剰余演算<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-599">The <xref:System.Decimal.op_Modulus%2A> operator defines the remainder operation that returns the remainder resulting from dividing two specified <xref:System.Decimal> values.</span></span> <span data-ttu-id="73ddd-600">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-600">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/modulus1.cs#19)]
 [!code-vb[System.Decimal.Operators#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/modulus1.vb#19)]  
  
 <span data-ttu-id="73ddd-601">剰余演算によって返される値の符号は、被除数の符号に依存します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-601">The sign of the value returned by the remainder operation depends on the sign of dividend.</span></span> <span data-ttu-id="73ddd-602">被除数が正の場合は、剰余演算が陽性の結果を返します負の場合、剰余演算は、負の値の結果を返します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-602">If dividend is positive, the remainder operation returns a positive result; if it is negative, the remainder operation returns a negative result.</span></span>  
  
 <span data-ttu-id="73ddd-603">この演算子を同等の方法は<xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-603">The equivalent method for this operator is <xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="73ddd-604">使用している言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Remainder%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-604">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Remainder%2A> method instead.</span></span>  
         ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="73ddd-605">
            <paramref name="d2" /> は <see langword="zero" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-605">
              <paramref name="d2" /> is <see langword="zero" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-606">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-606">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Remainder(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static decimal operator * (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Multiply(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator *(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( * ) : decimal * decimal -&gt; decimal" Usage="d1 * d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="73ddd-607">乗算する 1 番目の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-607">The first value to multiply.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="73ddd-608">乗算する 2 番目の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-608">The second value to multiply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-609">指定された 2 つの <see cref="T:System.Decimal" /> 値を乗算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-609">Multiplies two specified <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-610">
            <paramref name="d1" /> と <paramref name="d2" /> を乗算した結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-610">The result of multiplying <paramref name="d1" /> by <paramref name="d2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-611"><xref:System.Decimal.op_Multiply%2A>メソッドの乗算演算子の動作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-611">The <xref:System.Decimal.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="73ddd-612">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-612">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/multiply1.cs#20)]
 [!code-vb[System.Decimal.Operators#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/multiply1.vb#20)]  
  
 <span data-ttu-id="73ddd-613">使用している言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Multiply%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-613">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Multiply%2A> method instead.</span></span>  
  
 <span data-ttu-id="73ddd-614">この演算子を同等の方法は、します。 <xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="73ddd-614">The equivalent method for this operator is <xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-615">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-615">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static decimal operator - (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Subtraction(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator -(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : decimal * decimal -&gt; decimal" Usage="d1 - d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="73ddd-616">被減数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-616">The minuend.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="73ddd-617">減数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-617">The subtrahend.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-618">2 つの指定した <see cref="T:System.Decimal" /> 値で減算を実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-618">Subtracts two specified <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-619">
            <paramref name="d2" /> から <paramref name="d1" /> を減算した結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-619">The result of subtracting <paramref name="d2" /> from <paramref name="d1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-620"><xref:System.Decimal.op_Subtraction%2A>メソッドの減算演算子の動作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-620">The <xref:System.Decimal.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="73ddd-621">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-621">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/subtraction1.cs#21)]
 [!code-vb[System.Decimal.Operators#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/subtraction1.vb#21)]  
  
 <span data-ttu-id="73ddd-622">使用している言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Subtract%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-622">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead.</span></span>  
  
 <span data-ttu-id="73ddd-623">この演算子を同等の方法は、します。 <xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="73ddd-623">The equivalent method for this operator is <xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-624">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-624">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static decimal operator - (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_UnaryNegation(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_UnaryNegation(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator -(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : decimal -&gt; decimal" Usage="- d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="73ddd-625">否定する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-625">The value to negate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-626">指定した <see cref="T:System.Decimal" /> オペランドの値の符号を逆にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-626">Negates the value of the specified <see cref="T:System.Decimal" /> operand.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-627">
            <paramref name="d" /> に -1 を乗算した結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-627">The result of <paramref name="d" /> multiplied by negative one (-1).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-628"><xref:System.Decimal.op_UnaryPlus%2A>メソッドの単項否定演算子 (または加法に関する逆元演算子) の操作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-628">The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary negation operator (or the additive inverse operator) for <xref:System.Decimal> values.</span></span> <span data-ttu-id="73ddd-629">操作は、元の数に追加されたときに、0 (ゼロ) で結果を値を生成します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-629">The operation produces a value that results in 0 (zero) when it is added to the original number.</span></span> <span data-ttu-id="73ddd-630">カスタム演算子をサポートしない言語を呼び出すことができます、<xref:System.Decimal.Negate%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-630">Languages that do not support custom operators can call the <xref:System.Decimal.Negate%2A> method instead.</span></span>  
  
 <span data-ttu-id="73ddd-631">この演算子を同等の方法は、します。 <xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="73ddd-631">The equivalent method for this operator is <xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Negate(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static decimal operator + (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_UnaryPlus(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_UnaryPlus(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator +(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ( ~+ ) : decimal -&gt; decimal" Usage="+ d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="73ddd-632">返すオペランド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-632">The operand to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-633">
            <see cref="T:System.Decimal" /> オペランドの値 (オペランドの符号は不変) を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-633">Returns the value of the <see cref="T:System.Decimal" /> operand (the sign of the operand is unchanged).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-634">オペランド <paramref name="d" /> の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-634">The value of the operand, <paramref name="d" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-635"><xref:System.Decimal.op_UnaryPlus%2A>メソッドを定義、操作の単項プラス演算子の<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-635">The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary positive operator for <xref:System.Decimal> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="73ddd-636">数値の文字列形式を、それと等価の <see cref="T:System.Decimal" /> に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-636">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.Decimal.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; decimal" Usage="System.decimal.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="73ddd-637">変換する数値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-637">The string representation of the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-638">数値の文字列形式を、それと等価の <see cref="T:System.Decimal" /> に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-638">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-639">
            <paramref name="s" /> に含まれている数値と等価。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-639">The equivalent to the number contained in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-640">パラメーター`s`フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-640">Parameter `s` contains a number of the form:</span></span>  
  
 <span data-ttu-id="73ddd-641">[ws][記号][数字] 桁 [.fractional 桁] [ws]</span><span class="sxs-lookup"><span data-stu-id="73ddd-641">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="73ddd-642">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-642">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="73ddd-643">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-643">The following table describes each element.</span></span>  
  
|<span data-ttu-id="73ddd-644">要素</span><span class="sxs-lookup"><span data-stu-id="73ddd-644">Element</span></span>|<span data-ttu-id="73ddd-645">説明</span><span class="sxs-lookup"><span data-stu-id="73ddd-645">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="73ddd-646">*ws*</span><span class="sxs-lookup"><span data-stu-id="73ddd-646">*ws*</span></span>|<span data-ttu-id="73ddd-647">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-647">Optional white space.</span></span>|  
|<span data-ttu-id="73ddd-648">*sign*</span><span class="sxs-lookup"><span data-stu-id="73ddd-648">*sign*</span></span>|<span data-ttu-id="73ddd-649">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="73ddd-649">An optional sign.</span></span>|  
|<span data-ttu-id="73ddd-650">*digits*</span><span class="sxs-lookup"><span data-stu-id="73ddd-650">*digits*</span></span>|<span data-ttu-id="73ddd-651">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="73ddd-651">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="73ddd-652">*、*</span><span class="sxs-lookup"><span data-stu-id="73ddd-652">*,*</span></span>|<span data-ttu-id="73ddd-653">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-653">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="73ddd-654">*.*</span><span class="sxs-lookup"><span data-stu-id="73ddd-654">*.*</span></span>|<span data-ttu-id="73ddd-655">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-655">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="73ddd-656">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="73ddd-656">*fractional-digits*</span></span>|<span data-ttu-id="73ddd-657">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="73ddd-657">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="73ddd-658">パラメーター`s`を使用して解釈されます、<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="73ddd-658">Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="73ddd-659">つまり、空白文字と桁区切り記号が許可されているが、通貨記号は表示されません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-659">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="73ddd-660">要素を明示的に定義 (などの通貨記号、桁区切り記号、および空白) 内に存在することができます`s`、いずれかの方法、<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>または<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="73ddd-660">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use either the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="73ddd-661">パラメーター`s`の書式設定情報を使用して解析は、<xref:System.Globalization.NumberFormatInfo>現在のシステムのカルチャ用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-661">Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> initialized for the current system culture.</span></span> <span data-ttu-id="73ddd-662">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="73ddd-662">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="73ddd-663">いくつか他のカルチャの書式情報を使用して文字列を解析するを使用して、<xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>または<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-663">To parse a string using the formatting information of some other culture, use the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> or <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="73ddd-664">必要に応じての値`s`近似値に丸められます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-664">If necessary, the value of `s` is rounded using rounding to nearest.</span></span>  
  
 <span data-ttu-id="73ddd-665">A <xref:System.Decimal> 29 桁の有効桁数を持ちます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-665">A <xref:System.Decimal> has 29 digits of precision.</span></span> <span data-ttu-id="73ddd-666">場合`s`、複数の 29 桁の数字を持つが、小数部分を持ちの範囲内が数値を表して<xref:System.Decimal.MaxValue>と<xref:System.Decimal.MinValue>数値は丸められます、近似値に丸め 29 桁は切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-666">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="73ddd-667">解析操作中には、区切り記号がで発生した場合、`s`パラメーター、および適用可能な通貨または 10 進数と桁区切り記号が同じで、解析操作では、区切り記号は、グループではなく、小数点区切り文字を前提としています区切り記号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-667">If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="73ddd-668">区切り記号の詳細については、次を参照してください。 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>、および<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-668">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-669">次のコード例では、<xref:System.Decimal.Parse%28System.String%29>の文字列表現を解析します<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-669">The following code example uses the <xref:System.Decimal.Parse%28System.String%29> method to parse string representations of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Decimal.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#1)]
 [!code-vb[System.Decimal.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="73ddd-670">
            <paramref name="s" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-670">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="73ddd-671">
            <paramref name="s" /> が正しい形式ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-671">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-672">
            <paramref name="s" /> が <see cref="F:System.Decimal.MinValue" /> 未満の数値か、<see cref="F:System.Decimal.MaxValue" /> より大きい数値を表しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-672">
              <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; decimal" Usage="System.decimal.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="73ddd-673">変換する数値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-673">The string representation of the number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="73ddd-674">
            <c>s</c> で使用可能なスタイル要素を示す、<see cref="T:System.Globalization.NumberStyles" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-674">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the style elements that can be present in <c>s</c>.</span>
          </span>
          <span data-ttu-id="73ddd-675">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Number" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-675">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-676">指定のスタイルで表現された数値の文字列形式を、それと等価な <see cref="T:System.Decimal" /> に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-676">Converts the string representation of a number in a specified style to its <see cref="T:System.Decimal" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-677">
            <paramref name="style" /> で指定されたとおりの <paramref name="s" /> に格納されている数値と等価の <see cref="T:System.Decimal" /> 数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-677">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="style" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-678">`style`パラメーター スタイル要素定義 (何千もなどの区切り記号、空白文字、および通貨記号) で許容される、`s`解析操作が成功するためのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-678">The `style` parameter defines the style elements (such as thousands separators, white space, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="73ddd-679">ビット フラグの組み合わせを可能にする必要があります、<xref:System.Globalization.NumberStyles>列挙します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-679">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="73ddd-680">次<xref:System.Globalization.NumberStyles>メンバーがサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-680">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="73ddd-681">値に応じて`style`、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-681">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="73ddd-682">[ws][$][記号][数字] 桁 [.fractional 桁] [e [サインイン] 桁] [ws]</span><span class="sxs-lookup"><span data-stu-id="73ddd-682">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="73ddd-683">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-683">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="73ddd-684">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-684">The following table describes each element.</span></span>  
  
|<span data-ttu-id="73ddd-685">要素</span><span class="sxs-lookup"><span data-stu-id="73ddd-685">Element</span></span>|<span data-ttu-id="73ddd-686">説明</span><span class="sxs-lookup"><span data-stu-id="73ddd-686">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="73ddd-687">*ws*</span><span class="sxs-lookup"><span data-stu-id="73ddd-687">*ws*</span></span>|<span data-ttu-id="73ddd-688">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-688">Optional white space.</span></span> <span data-ttu-id="73ddd-689">先頭に空白文字は使用できません`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>の最後に表示されることができますフラグ、およびその`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="73ddd-689">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="73ddd-690">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-690">A culture-specific currency symbol.</span></span> <span data-ttu-id="73ddd-691">文字列内での位置がによって定義された、<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>現在のカルチャのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-691">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="73ddd-692">現在のカルチャの通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="73ddd-692">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="73ddd-693">*sign*</span><span class="sxs-lookup"><span data-stu-id="73ddd-693">*sign*</span></span>|<span data-ttu-id="73ddd-694">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="73ddd-694">An optional sign.</span></span> <span data-ttu-id="73ddd-695">先頭に表示できる符号`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>フラグ、およびそのがの末尾に置くことができます`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="73ddd-695">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="73ddd-696">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="73ddd-696">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="73ddd-697">*digits*</span><span class="sxs-lookup"><span data-stu-id="73ddd-697">*digits*</span></span>|<span data-ttu-id="73ddd-698">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="73ddd-698">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="73ddd-699">*、*</span><span class="sxs-lookup"><span data-stu-id="73ddd-699">*,*</span></span>|<span data-ttu-id="73ddd-700">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-700">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="73ddd-701">現在のカルチャの数千に区切り記号が表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="73ddd-701">The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="73ddd-702">*.*</span><span class="sxs-lookup"><span data-stu-id="73ddd-702">*.*</span></span>|<span data-ttu-id="73ddd-703">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-703">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="73ddd-704">現在のカルチャの小数点記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="73ddd-704">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="73ddd-705">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="73ddd-705">*fractional-digits*</span></span>|<span data-ttu-id="73ddd-706">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="73ddd-706">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="73ddd-707">小数部の桁が表示できる`s`場合にのみ、`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="73ddd-707">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="73ddd-708">*e*</span><span class="sxs-lookup"><span data-stu-id="73ddd-708">*e*</span></span>|<span data-ttu-id="73ddd-709">'E' または 'E' 文字は、値を指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-709">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="73ddd-710">`s`場合、パラメーターは指数表記の数値を表すことができる`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="73ddd-710">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
  
 <span data-ttu-id="73ddd-711">数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None>スタイル) が正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-711">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully.</span></span> <span data-ttu-id="73ddd-712">残りの<xref:System.Globalization.NumberStyles>メンバーを制御する可能性がありますが、入力文字列内に存在する必要はありません要素。</span><span class="sxs-lookup"><span data-stu-id="73ddd-712">The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="73ddd-713">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在可能な要素に影響を与える`s`です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-713">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="73ddd-714">NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="73ddd-714">NumberStyles value</span></span>|<span data-ttu-id="73ddd-715">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="73ddd-715">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="73ddd-716">*桁*要素のみです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-716">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="73ddd-717">*.*</span><span class="sxs-lookup"><span data-stu-id="73ddd-717">The *.*</span></span> <span data-ttu-id="73ddd-718">および*小数部の桁*要素。</span><span class="sxs-lookup"><span data-stu-id="73ddd-718">and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="73ddd-719">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-719">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="73ddd-720">このフラグは、形式で値をサポートしている*桁*E*桁*以外の場合は追加のフラグが正常に正または負の符号および小数点記号などの要素を含む文字列を解析する必要です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-720">This flag supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="73ddd-721">*Ws*の先頭にある要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-721">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="73ddd-722">*Ws*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-722">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="73ddd-723">*記号*の先頭にある要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-723">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="73ddd-724">*記号*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-724">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="73ddd-725">*記号*数値の値を囲むかっこの形式での要素。</span><span class="sxs-lookup"><span data-stu-id="73ddd-725">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="73ddd-726">*、* 要素。</span><span class="sxs-lookup"><span data-stu-id="73ddd-726">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="73ddd-727">* $ *要素。</span><span class="sxs-lookup"><span data-stu-id="73ddd-727">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="73ddd-728">すべて。</span><span class="sxs-lookup"><span data-stu-id="73ddd-728">All.</span></span> <span data-ttu-id="73ddd-729">`s`パラメーターには、16 進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-729">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="73ddd-730">*Ws*先頭または末尾の位置にある要素`s`、*記号*の先頭に`s`、および*です。*</span><span class="sxs-lookup"><span data-stu-id="73ddd-730">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*</span></span> <span data-ttu-id="73ddd-731">記号です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-731">symbol.</span></span> <span data-ttu-id="73ddd-732">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-732">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="73ddd-733">`ws`、 `sign`、 *、*、および*です。*</span><span class="sxs-lookup"><span data-stu-id="73ddd-733">The `ws`, `sign`, *,*, and *.*</span></span> <span data-ttu-id="73ddd-734">要素です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-734">elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="73ddd-735">すべてのスタイルを除く`s`16 進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-735">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="73ddd-736">`s`で書式設定情報を使用してパラメーターを解析、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のシステムのカルチャ用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-736">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="73ddd-737">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="73ddd-737">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="73ddd-738">A <xref:System.Decimal> 29 桁の有効桁数を持ちます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-738">A <xref:System.Decimal> has 29 digits of precision.</span></span> <span data-ttu-id="73ddd-739">場合`s`、複数の 29 桁の数字を持つが、小数部分を持ちの範囲内が数値を表して<xref:System.Decimal.MaxValue>と<xref:System.Decimal.MinValue>数値は丸められます、近似値に丸め 29 桁は切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-739">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="73ddd-740">区切り記号が発生した場合、`s`解析操作中にパラメーター`styles`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>値、および適用可能な通貨または 10 進数と桁区切り記号が同じで、解析操作区切り文字が桁区切り記号ではなく、小数点区切り文字であると仮定します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-740">If a separator is encountered in the `s` parameter during a parse operation, `styles` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> values, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="73ddd-741">区切り記号の詳細については、次を参照してください。 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>、および<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-741">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-742">次のコード例では、<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29>の文字列形式を解析します<xref:System.Decimal>EN-US カルチャを使用して値をします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-742">The following code example uses the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method to parse the string representations of <xref:System.Decimal> values using the en-US culture.</span></span>  
  
 [!code-csharp[System.Decimal.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#2)]
 [!code-vb[System.Decimal.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="73ddd-743">
            <paramref name="s" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-743">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="73ddd-744">
            <paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-744">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="73ddd-745">または、<paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-745">-or-  <paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="73ddd-746">
            <paramref name="s" /> が正しい形式ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-746">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-747">
            <paramref name="s" /> が <see cref="F:System.Decimal.MinValue" /> 未満の数値か、<see cref="F:System.Decimal.MaxValue" /> より大きい数値を表しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-747">
              <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></span>
          </span>
        </exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; decimal" Usage="System.decimal.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="73ddd-748">変換する数値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-748">The string representation of the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="73ddd-749">
            <c>s</c> に関するカルチャに固有の解析情報を提供する <see cref="T:System.IFormatProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-749">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific parsing information about <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-750">指定したカルチャ固有の書式情報を使用して、文字列形式の数値をそれと等価の <see cref="T:System.Decimal" /> に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-750">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-751">
            <paramref name="provider" /> で指定されたとおりの <paramref name="s" /> に格納されている数値と等価の <see cref="T:System.Decimal" /> 数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-751">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-752">このオーバー ロード、<xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29>さまざまな方法でフォーマットできるテキストに変換するメソッドが使用される一般的な<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-752">This overload of the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> method is commonly used to convert text that can be formatted in a variety of ways to a <xref:System.Decimal> value.</span></span> <span data-ttu-id="73ddd-753">たとえば、数値の値を HTML テキスト ボックスに、ユーザーが入力したテキストに変換する、使用できます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-753">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="73ddd-754">`s`パラメーターには、フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-754">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="73ddd-755">[ws][記号][数字] 桁 [.fractional 桁] [ws]</span><span class="sxs-lookup"><span data-stu-id="73ddd-755">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="73ddd-756">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-756">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="73ddd-757">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-757">The following table describes each element.</span></span>  
  
|<span data-ttu-id="73ddd-758">要素</span><span class="sxs-lookup"><span data-stu-id="73ddd-758">Element</span></span>|<span data-ttu-id="73ddd-759">説明</span><span class="sxs-lookup"><span data-stu-id="73ddd-759">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="73ddd-760">*ws*</span><span class="sxs-lookup"><span data-stu-id="73ddd-760">*ws*</span></span>|<span data-ttu-id="73ddd-761">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-761">Optional white space.</span></span>|  
|<span data-ttu-id="73ddd-762">*sign*</span><span class="sxs-lookup"><span data-stu-id="73ddd-762">*sign*</span></span>|<span data-ttu-id="73ddd-763">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="73ddd-763">An optional sign.</span></span>|  
|<span data-ttu-id="73ddd-764">*digits*</span><span class="sxs-lookup"><span data-stu-id="73ddd-764">*digits*</span></span>|<span data-ttu-id="73ddd-765">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="73ddd-765">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="73ddd-766">*、*</span><span class="sxs-lookup"><span data-stu-id="73ddd-766">*,*</span></span>|<span data-ttu-id="73ddd-767">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-767">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="73ddd-768">*.*</span><span class="sxs-lookup"><span data-stu-id="73ddd-768">*.*</span></span>|<span data-ttu-id="73ddd-769">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-769">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="73ddd-770">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="73ddd-770">*fractional-digits*</span></span>|<span data-ttu-id="73ddd-771">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="73ddd-771">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="73ddd-772">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="73ddd-772">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="73ddd-773">つまり、空白文字と桁区切り記号が許可されているが、通貨記号は表示されません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-773">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="73ddd-774">要素を明示的に定義 (などの通貨記号、桁区切り記号、および空白) 内に存在することができます`s`を使用して、<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-774">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="73ddd-775">`provider`パラメーターは、<xref:System.IFormatProvider>実装など、<xref:System.Globalization.NumberFormatInfo>または<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="73ddd-775">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="73ddd-776">`provider`パラメーターの解析中に使用されるカルチャに固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-776">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="73ddd-777">`provider` が `null` の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-777">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="73ddd-778">A <xref:System.Decimal> 29 桁の有効桁数が付きます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-778">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="73ddd-779">場合`s`、複数の 29 桁の数字を持つが、小数部分を持ちの範囲内が数値を表して<xref:System.Decimal.MaxValue>と<xref:System.Decimal.MinValue>数値は丸められます、近似値に丸め 29 桁は切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-779">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="73ddd-780">区切り記号が発生した場合、`s`解析操作では、および適用可能な通貨または 10 進数の間にパラメーターと桁区切り記号が同じには、解析操作では、区切り記号は、グループではなく、小数点区切り文字を前提としています区切り記号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-780">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="73ddd-781">区切り記号の詳細については、次を参照してください。 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>、および<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-781">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-782">次の例は、ボタンは、Web フォームのイベント ハンドラーをクリックします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-782">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="73ddd-783">によって返される配列を使用して、<xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>プロパティをユーザーのロケールを決定します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-783">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="73ddd-784">インスタンス化し、<xref:System.Globalization.CultureInfo>そのロケールに対応するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="73ddd-784">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="73ddd-785"><xref:System.Globalization.NumberFormatInfo>に属しているオブジェクト<xref:System.Globalization.CultureInfo>にオブジェクトが渡され、<xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29>をユーザーに変換するメソッドの入力、<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-785">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[ParseMethod#3](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#3)]
 [!code-vb[ParseMethod#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="73ddd-786">
            <paramref name="s" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-786">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="73ddd-787">
            <paramref name="s" /> の書式が正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-787">
              <paramref name="s" /> is not of the correct format</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-788">
            <paramref name="s" /> が <see cref="F:System.Decimal.MinValue" /> 未満の数値か、<see cref="F:System.Decimal.MaxValue" /> より大きい数値を表しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-788">
              <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></span>
          </span>
        </exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Number, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Number, Optional provider As IFormatProvider = null) As Decimal" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; decimal" Usage="System.decimal.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; decimal" Usage="System.decimal.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="73ddd-789">変換する数値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-789">The string representation of the number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="73ddd-790">
            <c>s</c> で使用可能なスタイル要素を示す、<see cref="T:System.Globalization.NumberStyles" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-790">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the style elements that can be present in <c>s</c>.</span>
          </span>
          <span data-ttu-id="73ddd-791">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Number" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-791">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="73ddd-792">
            <c>s</c> の書式設定に関するカルチャ固有の情報を提供する <see cref="T:System.IFormatProvider" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-792">An <see cref="T:System.IFormatProvider" /> object that supplies culture-specific information about the format of <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-793">指定したスタイルとカルチャ固有の書式を使用して、文字列形式の数値をそれと等価の <see cref="T:System.Decimal" /> に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-793">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified style and culture-specific format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-794">
            <see cref="T:System.Decimal" /> と <paramref name="s" /> に指定されたとおり、<paramref name="style" /> に格納されている数値と等価の <paramref name="provider" /> 数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-794">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="style" /> and <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-795">`style`パラメーターの使用可能な形式を定義する、`s`解析操作が成功するためのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-795">The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="73ddd-796">ビット フラグの組み合わせを可能にする必要があります、<xref:System.Globalization.NumberStyles>列挙します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-796">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="73ddd-797">次<xref:System.Globalization.NumberStyles>メンバーがサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-797">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="73ddd-798">値に応じて`style`、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-798">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="73ddd-799">[ws][$][記号][数字] 桁 [.fractional 桁] [e [サインイン] 桁] [ws]</span><span class="sxs-lookup"><span data-stu-id="73ddd-799">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="73ddd-800">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-800">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="73ddd-801">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-801">The following table describes each element.</span></span>  
  
|<span data-ttu-id="73ddd-802">要素</span><span class="sxs-lookup"><span data-stu-id="73ddd-802">Element</span></span>|<span data-ttu-id="73ddd-803">説明</span><span class="sxs-lookup"><span data-stu-id="73ddd-803">Description</span></span>|  
|-------------|-----------------|  
|*$*|<span data-ttu-id="73ddd-804">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-804">A culture-specific currency symbol.</span></span> <span data-ttu-id="73ddd-805">文字列内での位置がによって定義された、<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A>と<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>のプロパティ、<xref:System.Globalization.NumberFormatInfo>によって返されるオブジェクト、<xref:System.IFormatProvider.GetFormat%2A>のメソッド、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="73ddd-805">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="73ddd-806">通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="73ddd-806">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="73ddd-807">*ws*</span><span class="sxs-lookup"><span data-stu-id="73ddd-807">*ws*</span></span>|<span data-ttu-id="73ddd-808">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-808">Optional white space.</span></span> <span data-ttu-id="73ddd-809">先頭に空白文字は使用できません`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>の最後に表示されることができますフラグ、およびその`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="73ddd-809">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="73ddd-810">*sign*</span><span class="sxs-lookup"><span data-stu-id="73ddd-810">*sign*</span></span>|<span data-ttu-id="73ddd-811">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="73ddd-811">An optional sign.</span></span> <span data-ttu-id="73ddd-812">先頭に表示できる符号`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>フラグ、およびそのがの末尾に置くことができます`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="73ddd-812">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="73ddd-813">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="73ddd-813">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="73ddd-814">*digits*</span><span class="sxs-lookup"><span data-stu-id="73ddd-814">*digits*</span></span>|<span data-ttu-id="73ddd-815">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="73ddd-815">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="73ddd-816">*、*</span><span class="sxs-lookup"><span data-stu-id="73ddd-816">*,*</span></span>|<span data-ttu-id="73ddd-817">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-817">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="73ddd-818">数千によって定義されているカルチャの区切り記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="73ddd-818">The thousands separator of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="73ddd-819">*.*</span><span class="sxs-lookup"><span data-stu-id="73ddd-819">*.*</span></span>|<span data-ttu-id="73ddd-820">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-820">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="73ddd-821">定義されているカルチャの小数点記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="73ddd-821">The decimal point symbol of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="73ddd-822">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="73ddd-822">*fractional-digits*</span></span>|<span data-ttu-id="73ddd-823">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="73ddd-823">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="73ddd-824">小数部の桁が表示できる`s`場合にのみ、`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="73ddd-824">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="73ddd-825">*e*</span><span class="sxs-lookup"><span data-stu-id="73ddd-825">*e*</span></span>|<span data-ttu-id="73ddd-826">'E' または 'E' 文字は、値を指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-826">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="73ddd-827">`s`場合、パラメーターは指数表記の数値を表すことができる`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="73ddd-827">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
  
 <span data-ttu-id="73ddd-828">数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None>スタイル) が正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-828">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully.</span></span> <span data-ttu-id="73ddd-829">残りの<xref:System.Globalization.NumberStyles>メンバーを制御する可能性がありますが、入力文字列内に存在する必要はありません要素。</span><span class="sxs-lookup"><span data-stu-id="73ddd-829">The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="73ddd-830">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在可能な要素に影響を与える`s`です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-830">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="73ddd-831">NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="73ddd-831">NumberStyles value</span></span>|<span data-ttu-id="73ddd-832">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="73ddd-832">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="73ddd-833">*桁*要素のみです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-833">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="73ddd-834">*.*</span><span class="sxs-lookup"><span data-stu-id="73ddd-834">The *.*</span></span> <span data-ttu-id="73ddd-835">および*小数部の桁*要素。</span><span class="sxs-lookup"><span data-stu-id="73ddd-835">and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="73ddd-836">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-836">The `s` parameter can also use exponential notation.</span></span>  <span data-ttu-id="73ddd-837">このフラグは、形式で値をサポートしている*桁*E*桁*以外の場合は追加のフラグが正常に正または負の符号および小数点記号などの要素を含む文字列を解析する必要です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-837">This flag supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="73ddd-838">*Ws*の先頭にある要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-838">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="73ddd-839">*Ws*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-839">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="73ddd-840">*記号*の先頭にある要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-840">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="73ddd-841">*記号*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-841">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="73ddd-842">*記号*数値の値を囲むかっこの形式での要素。</span><span class="sxs-lookup"><span data-stu-id="73ddd-842">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="73ddd-843">*、* 要素。</span><span class="sxs-lookup"><span data-stu-id="73ddd-843">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="73ddd-844">* $ *要素。</span><span class="sxs-lookup"><span data-stu-id="73ddd-844">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="73ddd-845">すべて。</span><span class="sxs-lookup"><span data-stu-id="73ddd-845">All.</span></span> <span data-ttu-id="73ddd-846">`s`パラメーターには、16 進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-846">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="73ddd-847">*Ws*先頭または末尾の位置にある要素`s`、*記号*の先頭に`s`、および *.* 記号です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-847">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.* symbol.</span></span> <span data-ttu-id="73ddd-848">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-848">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="73ddd-849">`ws`、 `sign`、 *、*、および*です。*</span><span class="sxs-lookup"><span data-stu-id="73ddd-849">The `ws`, `sign`, *,*, and *.*</span></span> <span data-ttu-id="73ddd-850">要素です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-850">elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="73ddd-851">すべてのスタイルを除く`s`16 進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-851">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="73ddd-852">`provider`パラメーターは、<xref:System.IFormatProvider>実装など、<xref:System.Globalization.NumberFormatInfo>または<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="73ddd-852">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="73ddd-853">`provider`パラメーターの解析中に使用されるカルチャに固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-853">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="73ddd-854">`provider` が `null` の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-854">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="73ddd-855">A <xref:System.Decimal> 29 桁の有効桁数が付きます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-855">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="73ddd-856">場合`s`、複数の 29 桁の数字を持つが、小数部分を持ちの範囲内が数値を表して<xref:System.Decimal.MaxValue>と<xref:System.Decimal.MinValue>数値は丸められます、近似値に丸め 29 桁は切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-856">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="73ddd-857">区切り記号が発生した場合、`s`解析操作では、および適用可能な通貨または 10 進数の間にパラメーターと桁区切り記号が同じには、解析操作では、区切り記号は、グループではなく、小数点区切り文字を前提としています区切り記号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-857">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="73ddd-858">区切り記号の詳細については、次を参照してください。 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>、および<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-858">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-859">次の例は、さまざまな`style`と`provider`パラメーターの文字列形式を解析する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-859">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Decimal.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#3)]
 [!code-vb[System.Decimal.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="73ddd-860">
            <paramref name="s" /> が正しい形式ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-860">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-861">
            <paramref name="s" /> が <see cref="F:System.Decimal.MinValue" /> 未満の数値か、<see cref="F:System.Decimal.MaxValue" /> より大きい数値を表しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-861">
              <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="73ddd-862">
            <paramref name="s" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-862">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="73ddd-863">
            <paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-863">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="73ddd-864">または、<paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-864">-or-  <paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Remainder">
      <MemberSignature Language="C#" Value="public static decimal Remainder (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Remainder(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Remainder(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Remainder (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Remainder(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Remainder : decimal * decimal -&gt; decimal" Usage="System.decimal.Remainder (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="73ddd-865">被除数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-865">The dividend.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="73ddd-866">除数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-866">The divisor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-867">2 つの <see cref="T:System.Decimal" /> 値の除算後の剰余を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-867">Computes the remainder after dividing two <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-868">
            <paramref name="d1" /> を <paramref name="d2" /> で除算した結果生じた剰余。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-868">The remainder after dividing <paramref name="d1" /> by <paramref name="d2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73ddd-869">次の例では、<xref:System.Decimal.Remainder%2A>一連の除算演算の余りを計算する方法です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-869">The following example uses the <xref:System.Decimal.Remainder%2A> method to calculate the remainder in a series of division operations.</span></span>  
  
 [!code-csharp[System.Decimal.Remainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.remainder/cs/remainder.cs#1)]
 [!code-vb[System.Decimal.Remainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.remainder/vb/remainder.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="73ddd-870">
            <paramref name="d2" /> が 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-870">
              <paramref name="d2" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-871">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-871">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="73ddd-872">最も近い整数または指定した小数点数に値を丸めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-872">Rounds a value to the nearest integer or specified number of decimal places.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Round : decimal -&gt; decimal" Usage="System.decimal.Round d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="73ddd-873">丸め対象の 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-873">A decimal number to round.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-874">10 進値を最も近い整数に丸めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-874">Rounds a decimal value to the nearest integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-875">
            <paramref name="d" /> パラメーターの値に最も近い整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-875">The integer that is nearest to the <paramref name="d" /> parameter.</span>
          </span>
          <span data-ttu-id="73ddd-876">
            <paramref name="d" /> が 2 つの整数 (一方が偶数でもう一方が奇数) の中間にある場合は偶数が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-876">If <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-877">このメソッドの動作は IEEE 標準 754、セクション 4 に従います。</span><span class="sxs-lookup"><span data-stu-id="73ddd-877">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="73ddd-878">このような丸めと呼ぶことが*半分が均等に丸める*または*銀行型丸め*です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-878">This kind of rounding is sometimes called *round half to even* or *banker's rounding*.</span></span> <span data-ttu-id="73ddd-879">常に中間値を単一方向に丸めるに起因するエラーの丸めが最小限に抑えます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-879">It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.</span></span> <span data-ttu-id="73ddd-880">呼び出すことと等価である、<xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29>メソッドを`mode`の引数<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-880">It is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-881">次の例の範囲に丸めます<xref:System.Decimal>で 100 ~ 102 を最も近い整数値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-881">The following example rounds a range of <xref:System.Decimal> values between 100 and 102 to the nearest integer.</span></span> <span data-ttu-id="73ddd-882">メソッドは、銀行型丸め方式を使用しているために、100.5 が 102 を 100 と 101.5 ラウンドに丸めることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="73ddd-882">Because the method uses banker's rounding, note that 100.5 rounds to 100 and 101.5 rounds to 102.</span></span>  
  
 [!code-csharp[System.Decimal.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Round/cs/Round1.cs#1)]
 [!code-vb[System.Decimal.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Round/vb/Round1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-883">結果は <see cref="T:System.Decimal" /> 値の範囲外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-883">The result is outside the range of a <see cref="T:System.Decimal" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int -&gt; decimal" Usage="System.decimal.Round (d, decimals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="73ddd-884">丸め対象の 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-884">A decimal number to round.</span>
          </span>
        </param>
        <param name="decimals">
          <span data-ttu-id="73ddd-885">丸めた結果の数値の小数点以下の桁数を指定する 0 から 28 までの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-885">A value from 0 to 28 that specifies the number of decimal places to round to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-886">
            <see cref="T:System.Decimal" /> 値を、指定した小数点以下の桁数に丸めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-886">Rounds a <see cref="T:System.Decimal" /> value to a specified number of decimal places.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-887">小数点以下の桁数 <paramref name="decimals" /> に丸められた <paramref name="d" /> と等価の 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-887">The decimal number equivalent to <paramref name="d" /> rounded to <paramref name="decimals" /> number of decimal places.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-888">このメソッドを呼び出すことは、<xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>メソッドを`mode`の引数<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>です。ときに`d`ちょうど中間には丸みのある 2 つの値の間で、結果は小数部の右端の位置で偶数桁のある丸められた値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-888">This method is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.When `d` is exactly halfway between two rounded values, the result is the rounded value that has an even digit in the far right decimal position.</span></span> <span data-ttu-id="73ddd-889">たとえば、小数点以下 2 桁に丸められる場合、値 2.345 は 2.34 になり、値 2.355 は 2.36 になります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-889">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span></span> <span data-ttu-id="73ddd-890">このプロセスと呼ばれる*でもへの丸め*、または*銀行型丸め*です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-890">This process is known as *rounding toward even*, or *banker's rounding*.</span></span> <span data-ttu-id="73ddd-891">常に中間値を単一方向に丸めるに起因するエラーの丸めが最小限に抑えます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-891">It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-892">次の例ではいくつか丸めます。`Decimal`値を、指定した小数点以下の桁数を使用して、`Round`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-892">The following example rounds several `Decimal` values to a specified number of decimal places using the `Round` method.</span></span>  
  
 [!code-csharp[System.Decimal.Round#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Round/cs/Round12.cs#12)]
 [!code-vb[System.Decimal.Round#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Round/vb/Round12.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="73ddd-893">
            <paramref name="decimals" /> が 0 から 28 までの範囲内の値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-893">
              <paramref name="decimals" /> is not a value from 0 to 28.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
        <altmember cref="M:System.Decimal.Truncate(System.Decimal)" />
        <altmember cref="M:System.Math.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * MidpointRounding -&gt; decimal" Usage="System.decimal.Round (d, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="73ddd-894">丸め対象の 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-894">A decimal number to round.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="73ddd-895">
            <c>d</c> が他の 2 つの数値の中間にある場合に丸める方法を指定する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-895">A value that specifies how to round <c>d</c> if it is midway between two other numbers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-896">10 進値を最も近い整数に丸めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-896">Rounds a decimal value to the nearest integer.</span>
          </span>
          <span data-ttu-id="73ddd-897">パラメーターは、値が他の 2 つの数値の中間にある場合にその値を丸める方法を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-897">A parameter specifies how to round the value if it is midway between two other numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-898">
            <paramref name="d" /> パラメーターの値に最も近い整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-898">The integer that is nearest to the <paramref name="d" /> parameter.</span>
          </span>
          <span data-ttu-id="73ddd-899">
            <paramref name="d" /> が 2 つの数値 (一方が偶数でもう一方が奇数) の中間にある場合、<paramref name="mode" /> パラメーターで 2 つの数値のどちらを返すかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-899">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, the <paramref name="mode" /> parameter determines which of the two numbers is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-900">中間値では、結果の最下位の数字の後の値は 2 つの数値の中間正確にします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-900">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="73ddd-901">たとえば、7.5 は、整数に丸め 場合は、中間値です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-901">For example, 7.5 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="73ddd-902">中間値は、最も近い値簡単に識別できません丸め方法、によって指定されることがなく、`mode`引数。</span><span class="sxs-lookup"><span data-stu-id="73ddd-902">For midpoint values, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument.</span></span> <span data-ttu-id="73ddd-903"><xref:System.Decimal.Round%2A>メソッドは、中間値を処理するための丸め処理を行う 2 つの規則をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-903">The <xref:System.Decimal.Round%2A> method supports two rounding conventions for handling midpoint values.</span></span>  
  
 <span data-ttu-id="73ddd-904">ゼロから離れる方向に丸めです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-904">Rounding away from zero.</span></span>  
 <span data-ttu-id="73ddd-905">中間値は、次の番号をゼロから離れる方向に丸められます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-905">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="73ddd-906">4、3.5 が次の例では、四捨五入 4.5 5 回、-3.5 は-4 でに丸められ、-4.5 が-5 に丸めます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-906">For example, 3.5 rounds to 4, 4.5 rounds to 5, -3.5 rounds to -4, and -4.5 rounds to -5.</span></span> <span data-ttu-id="73ddd-907">この形式の丸めがによって表される、<xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType>列挙体のメンバーです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-907">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="73ddd-908">ゼロから離れる方向に丸め処理は、丸めた最もよく知られた形式です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-908">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="73ddd-909">偶数丸め処理や銀行型丸め方式</span><span class="sxs-lookup"><span data-stu-id="73ddd-909">Rounding to even, or banker's rounding</span></span>  
 <span data-ttu-id="73ddd-910">中間値は、最も近い偶数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-910">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="73ddd-911">たとえば、4、3.5 および 4.5 の両方を丸める、-3.5 と-4.5 の両方が-4 に丸めます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-911">For example, both 3.5 and 4.5 round to 4, and both -3.5 and -4.5 round to -4.</span></span> <span data-ttu-id="73ddd-912">この形式の丸めがによって表される、<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>列挙体のメンバーです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-912">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="73ddd-913">近似値に丸め処理は、財務や統計に関する操作で使用される丸め処理の標準的な形式です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-913">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="73ddd-914">IEEE 標準 754、セクション 4 に準拠しています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-914">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="73ddd-915">複数の丸め処理で使用する場合、常に中間値を単一方向に丸めるによって引き起こされる出る丸めの誤差が減少します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-915">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="73ddd-916">場合によっては、この丸めエラーを重要なことがあります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-916">In some cases, this rounding error can be significant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-917">次の例は、によって返される値を表示、<xref:System.Math.Round%28System.Decimal%29>メソッド、<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>メソッドを`mode`の引数<xref:System.MidpointRounding.ToEven>、および<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>メソッドを`mode`の引数<xref:System.MidpointRounding.AwayFromZero>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-917">The following example displays values returned by the <xref:System.Math.Round%28System.Decimal%29> method, the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint1.cs#5)]
 [!code-vb[System.Math.Round.Overload#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="73ddd-918">
            <paramref name="mode" /> が <see cref="T:System.MidpointRounding" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-918">
              <paramref name="mode" /> is not a <see cref="T:System.MidpointRounding" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-919">結果が <see cref="T:System.Decimal" /> オブジェクトの範囲外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-919">The result is outside the range of a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int * MidpointRounding -&gt; decimal" Usage="System.decimal.Round (d, decimals, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="73ddd-920">丸め対象の 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-920">A decimal number to round.</span>
          </span>
        </param>
        <param name="decimals">
          <span data-ttu-id="73ddd-921">戻り値の小数点以下の有効桁数 (精度)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-921">The number of significant decimal places (precision) in the return value.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="73ddd-922">
            <c>d</c> が他の 2 つの数値の中間にある場合に丸める方法を指定する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-922">A value that specifies how to round <c>d</c> if it is midway between two other numbers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-923">10 進値を指定した精度に丸めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-923">Rounds a decimal value to a specified precision.</span>
          </span>
          <span data-ttu-id="73ddd-924">パラメーターは、値が他の 2 つの数値の中間にある場合にその値を丸める方法を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-924">A parameter specifies how to round the value if it is midway between two other numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-925">
            <paramref name="decimals" /> パラメーターと精度が等価である <paramref name="d" /> パラメーターの値に最も近い数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-925">The number that is nearest to the <paramref name="d" /> parameter with a precision equal to the <paramref name="decimals" /> parameter.</span>
          </span>
          <span data-ttu-id="73ddd-926">
            <paramref name="d" /> が 2 つの数値 (一方が偶数でもう一方が奇数) の中間にある場合、<paramref name="mode" /> パラメーターで 2 つの数値のどちらを返すかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-926">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, the <paramref name="mode" /> parameter determines which of the two numbers is returned.</span>
          </span>
          <span data-ttu-id="73ddd-927">
            <paramref name="d" /> の精度が <paramref name="decimals" /> より小さい場合、<paramref name="d" /> は変更されずに返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-927">If the precision of <paramref name="d" /> is less than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-928">`decimals`パラメーターは戻り値で、重要な小数点以下桁数を指定し、0 から 28 までの範囲です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-928">The `decimals` parameter specifies the number of significant decimal places in the return value and ranges from 0 to 28.</span></span> <span data-ttu-id="73ddd-929">場合`decimals`0 の場合は、整数が返されます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-929">If `decimals` is zero, an integer is returned.</span></span>  
  
 <span data-ttu-id="73ddd-930">中間値では、結果の最下位の数字の後の値は 2 つの数値の中間正確にします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-930">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="73ddd-931">たとえば、3.47500 は、中間の値である場合に 2 つの小数点以下桁数が丸められますや 7.500 中間の値は整数に丸め 場合です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-931">For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="73ddd-932">このような場合は、最も近い値に簡単に識別できません丸め方法、によって指定されることがなく、`mode`引数。</span><span class="sxs-lookup"><span data-stu-id="73ddd-932">In these cases, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument.</span></span> <span data-ttu-id="73ddd-933"><xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>メソッドは、中間値を処理するための丸め処理を行う 2 つの規則をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-933">The <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method supports two rounding conventions for handling midpoint values.</span></span>  
  
 <span data-ttu-id="73ddd-934">ゼロから離れる方向に丸めです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-934">Rounding away from zero.</span></span>  
 <span data-ttu-id="73ddd-935">中間値は、次の番号をゼロから離れる方向に丸められます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-935">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="73ddd-936">3.8 に 3.75 が次の例では、四捨五入-3.8 に 3.9 に 3.85 ラウンド-3.75 丸める-3.9 に丸められます-3.85 とします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-936">For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</span></span> <span data-ttu-id="73ddd-937">この形式の丸めがによって表される、<xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType>列挙体のメンバーです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-937">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="73ddd-938">ゼロから離れる方向に丸め処理は、丸めた最もよく知られた形式です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-938">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="73ddd-939">偶数丸め処理や銀行型丸め方式</span><span class="sxs-lookup"><span data-stu-id="73ddd-939">Rounding to even, or banker's rounding</span></span>  
 <span data-ttu-id="73ddd-940">中間値は、最も近い偶数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-940">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="73ddd-941">たとえば、3.75 と 3.85 の両方が 3.8 に丸める、-3.75 と-3.85 の両方が-3.8 に丸めます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-941">For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</span></span> <span data-ttu-id="73ddd-942">この形式の丸めがによって表される、<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>列挙体のメンバーです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-942">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="73ddd-943">近似値に丸め処理は、財務や統計に関する操作で使用される丸め処理の標準的な形式です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-943">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="73ddd-944">IEEE 標準 754、セクション 4 に準拠しています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-944">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="73ddd-945">複数の丸め処理で使用する場合、常に中間値を単一方向に丸めるによって引き起こされる出る丸めの誤差が減少します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-945">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="73ddd-946">場合によっては、この丸めエラーを重要なことがあります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-946">In some cases, this rounding error can be significant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-947">次の例で使用する方法、<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>メソッドを<xref:System.MidpointRounding>列挙します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-947">The following example demonstrates how to use the <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="73ddd-948">
            <paramref name="decimals" /> が 0 未満か、28 を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-948">
              <paramref name="decimals" /> is less than 0 or greater than 28.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="73ddd-949">
            <paramref name="mode" /> が <see cref="T:System.MidpointRounding" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-949">
              <paramref name="mode" /> is not a <see cref="T:System.MidpointRounding" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-950">結果が <see cref="T:System.Decimal" /> オブジェクトの範囲外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-950">The result is outside the range of a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static decimal Subtract (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Subtract(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Subtract(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Subtract : decimal * decimal -&gt; decimal" Usage="System.decimal.Subtract (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="73ddd-951">被減数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-951">The minuend.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="73ddd-952">減数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-952">The subtrahend.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-953">指定した <see cref="T:System.Decimal" /> 値から、指定したもう 1 つの値を減算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-953">Subtracts one specified <see cref="T:System.Decimal" /> value from another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-954">
            <paramref name="d2" /> から <paramref name="d1" /> を減算した結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-954">The result of subtracting <paramref name="d2" /> from <paramref name="d1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73ddd-955">次の例は、の使用を示しています。`Subtract`です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-955">The following example illustrates the use of `Subtract`.</span></span>  
  
 [!code-cpp[Decimal Example#4](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#4)]
 [!code-csharp[Decimal Example#4](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#4)]
 [!code-vb[Decimal Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-956">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-956">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="73ddd-957">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-957">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-958">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-958">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-959">現在のインスタンスの値がゼロでない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-959">
              <see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-960">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-960">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="73ddd-961">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-961">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="73ddd-962">推奨される代替手段が呼び出されて、<xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-962">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="73ddd-963">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-963">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-964">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-964">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-965">
            <see cref="T:System.Byte" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-965">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-966">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-966">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="73ddd-967">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-967">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="73ddd-968">推奨される代替手段は、いずれかを呼び出すには、<xref:System.Decimal.ToByte%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToByte%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-968">The recommended alternative is to call either the <xref:System.Decimal.ToByte%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToByte%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-969">結果として得られる整数値が <see cref="F:System.Byte.MinValue" /> 未満か、<see cref="F:System.Byte.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-969">The resulting integer value is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="73ddd-970">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-970">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-971">この変換はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-971">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="73ddd-972">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-972">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-973">なし。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-973">None.</span>
          </span>
          <span data-ttu-id="73ddd-974">この変換はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-974">This conversion is not supported.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="73ddd-975">すべての場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-975">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="73ddd-976">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-976">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-977">この変換はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-977">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="73ddd-978">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-978">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-979">なし。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-979">None.</span>
          </span>
          <span data-ttu-id="73ddd-980">この変換はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-980">This conversion is not supported.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="73ddd-981">すべての場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-981">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="73ddd-982">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-982">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-983">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-983">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-984">変更されていない、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-984">The value of the current instance, unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-985">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-985">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="73ddd-986">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-986">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="73ddd-987">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-987">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-988">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-988">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-989">
            <see cref="T:System.Double" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-989">The value of the current instance, converted to a <see cref="T:System.Double" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-990">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-990">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="73ddd-991">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-991">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="73ddd-992">推奨される代替手段は、いずれかを呼び出すには、<xref:System.Decimal.ToDouble%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToDouble%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-992">The recommended alternative is to call either the <xref:System.Decimal.ToDouble%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="73ddd-993"><xref:System.Double>有効桁数よりも少ないのは、 <xref:System.Decimal>、この操作は、丸めエラーを生成可能性があります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-993">Because a <xref:System.Double> has fewer significant digits than a <xref:System.Decimal>, this operation may produce round-off errors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="73ddd-994">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-994">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-995">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-995">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-996">
            <see cref="T:System.Int16" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-996">The value of the current instance, converted to a <see cref="T:System.Int16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-997">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-997">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="73ddd-998">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-998">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="73ddd-999">推奨される代替手段は、いずれかを呼び出すには、<xref:System.Decimal.ToInt16%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToInt16%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-999">The recommended alternative is to call either the <xref:System.Decimal.ToInt16%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="73ddd-1000"><xref:System.Decimal>値が最も近い整数値を 0 方向に丸められます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1000">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-1001">結果として得られる整数値が <see cref="F:System.Int16.MinValue" /> 未満か、<see cref="F:System.Int16.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1001">The resulting integer value is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="73ddd-1002">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1002">The parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1003">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1003">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1004">
            <see cref="T:System.Int32" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1004">The value of the current instance, converted to a <see cref="T:System.Int32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1005">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1005">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="73ddd-1006">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1006">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="73ddd-1007">推奨される代替手段は、いずれかを呼び出すには、<xref:System.Decimal.ToInt32%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToInt32%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1007">The recommended alternative is to call either the <xref:System.Decimal.ToInt32%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="73ddd-1008"><xref:System.Decimal>値が最も近い整数値を 0 方向に丸められます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1008">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-1009">結果として得られる整数値が <see cref="F:System.Int32.MinValue" /> 未満か、<see cref="F:System.Int32.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1009">The resulting integer value is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="73ddd-1010">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1010">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1011">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1011">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1012">
            <see cref="T:System.Int64" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1012">The value of the current instance, converted to a <see cref="T:System.Int64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1013">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1013">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="73ddd-1014">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1014">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="73ddd-1015">推奨される代替手段は、いずれかを呼び出すには、<xref:System.Decimal.ToInt64%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToInt64%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1015">The recommended alternative is to call either the <xref:System.Decimal.ToInt64%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt64%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-1016">結果として得られる整数値が <see cref="F:System.Int64.MinValue" /> 未満か、<see cref="F:System.Int64.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1016">The resulting integer value is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="73ddd-1017">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1017">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1018">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1018">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1019">
            <see cref="T:System.SByte" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1019">The value of the current instance, converted to a <see cref="T:System.SByte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1020">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1020">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="73ddd-1021">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1021">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="73ddd-1022">推奨される代替手段は、いずれかを呼び出すには、<xref:System.Decimal.ToSByte%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToSByte%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1022">The recommended alternative is to call either the <xref:System.Decimal.ToSByte%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToSByte%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-1023">結果として得られる整数値が <see cref="F:System.SByte.MinValue" /> 未満か、<see cref="F:System.SByte.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1023">The resulting integer value is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="73ddd-1024">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1024">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1025">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1025">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1026">
            <see cref="T:System.Single" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1026">The value of the current instance, converted to a <see cref="T:System.Single" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1027">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1027">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="73ddd-1028">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1028">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="73ddd-1029">推奨される代替手段は、いずれかを呼び出すには、<xref:System.Decimal.ToSingle%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToSingle%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1029">The recommended alternative is to call either the <xref:System.Decimal.ToSingle%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToSingle%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="73ddd-1030">この <see cref="T:System.Decimal" /> インスタンスの値を変換する対象の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1030">The type to which to convert the value of this <see cref="T:System.Decimal" /> instance.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="73ddd-1031">戻り値の書式に関するカルチャ固有の情報を提供する <see cref="T:System.IFormatProvider" /> の実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1031">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1032">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1032">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1033">
            <paramref name="type" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1033">The value of the current instance, converted to a <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1034">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1034">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="73ddd-1035">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1035">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="73ddd-1036">推奨される代替手段が呼び出されて、 `static` (`Shared` Visual Basic で)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1036">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="73ddd-1037">
            <paramref name="type" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1037">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="73ddd-1038">要求された型変換はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1038">The requested type conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="73ddd-1039">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1039">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1040">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1040">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1041">
            <see cref="T:System.UInt16" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1041">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1042">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1042">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="73ddd-1043">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1043">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="73ddd-1044">推奨される代替手段は、いずれかを呼び出すには、<xref:System.Decimal.ToUInt16%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToUInt16%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1044">The recommended alternative is to call either the <xref:System.Decimal.ToUInt16%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt16%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-1045">結果として得られる整数値が <see cref="F:System.UInt16.MinValue" /> 未満か、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1045">The resulting integer value is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="73ddd-1046">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1046">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1047">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1047">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1048">
            <see cref="T:System.UInt32" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1048">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1049">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1049">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="73ddd-1050">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1050">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="73ddd-1051">推奨される代替手段は、いずれかを呼び出すには、<xref:System.Decimal.ToUInt32%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToUInt32%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1051">The recommended alternative is to call either the <xref:System.Decimal.ToUInt32%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt32%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="73ddd-1052"><xref:System.Decimal>値が最も近い整数値を 0 方向に丸められます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1052">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-1053">結果として得られる整数値が <see cref="F:System.UInt32.MinValue" /> 未満か、<see cref="F:System.UInt32.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1053">The resulting integer value is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="73ddd-1054">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1054">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1055">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1055">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1056">
            <see cref="T:System.UInt64" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1056">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1057">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1057">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="73ddd-1058">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1058">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="73ddd-1059">推奨される代替手段は、いずれかを呼び出すには、<xref:System.Decimal.ToUInt64%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToUInt64%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1059">The recommended alternative is to call either the <xref:System.Decimal.ToUInt64%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt64%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="73ddd-1060"><xref:System.Decimal>値が最も近い整数値を 0 方向に丸められます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1060">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-1061">結果として得られる整数値が <see cref="F:System.UInt64.MinValue" /> 未満か、<see cref="F:System.UInt64.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1061">The resulting integer value is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="73ddd-1062">コールバックを開始したオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1062">The object that initiated the callback.</span>
          </span>
          <span data-ttu-id="73ddd-1063">このパラメーターの機能は、現在実装されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1063">The functionality for this parameter is not currently implemented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1064">オブジェクトの逆シリアル化の完了後に実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1064">Runs when the deserialization of an object has been completed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="73ddd-1065">
            <see cref="T:System.Decimal" /> オブジェクトに、無効なデータまたは破損したデータが含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1065">The <see cref="T:System.Decimal" /> object contains invalid or corrupted data.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Decimal) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToByte : decimal -&gt; byte" Usage="System.decimal.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-1066">変換する 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1066">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1067">指定した <see cref="T:System.Decimal" /> の値を、等価の 8 ビット符号なし整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1067">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1068">
            <paramref name="value" /> と等価の 8 ビット符号なし整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1068">An 8-bit unsigned integer equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1069">パラメーター`value`は最も近い整数値 0 方向に丸められ、結果が返されることです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1069">Parameter `value` is rounded to the nearest integer value toward zero, and that result is returned.</span></span>  
  
 <span data-ttu-id="73ddd-1070">変換することも、<xref:System.Decimal>を使用して 8 ビット符号なし整数値、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1070">You can also convert a <xref:System.Decimal> value to an 8-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="73ddd-1071">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1071">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-1072">次の例では、<xref:System.Decimal.ToByte%2A>を 10 進数値に変換するメソッド<xref:System.Byte>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1072">The following example uses the <xref:System.Decimal.ToByte%2A> method to convert decimal numbers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.tobyte/cs/tobyte_1.cs#1)]
 [!code-vb[System.Decimal.ToByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.tobyte/vb/tobyte_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-1073">
            <paramref name="value" /> が <see cref="F:System.Byte.MinValue" /> より小さいか <see cref="F:System.Byte.MaxValue" /> より大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1073">
              <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToDouble(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (d As Decimal) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToDouble : decimal -&gt; double" Usage="System.decimal.ToDouble d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="73ddd-1074">変換する 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1074">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1075">指定した <see cref="T:System.Decimal" /> の値を、それと等価の倍精度浮動小数点数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1075">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1076">
            <paramref name="d" /> と等価の倍精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1076">A double-precision floating-point number equivalent to <paramref name="d" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1077">倍精度浮動小数点数がある有効桁数よりも少ないために、この操作は丸めエラーを生成できます、<xref:System.Decimal>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1077">This operation can produce round-off errors because a double-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>  
  
 <span data-ttu-id="73ddd-1078">変換することも、<xref:System.Decimal>を<xref:System.Double>値を使用して、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1078">You can also convert a <xref:System.Decimal> to a <xref:System.Double> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="73ddd-1079">変換には、有効桁数の損失を伴うことができます、ため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1079">Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-1080">次のコード例に変換`Decimal`番号の<xref:System.Double>を使用して値`ToDouble`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1080">The following code example converts `Decimal` numbers to <xref:System.Double> values using `ToDouble` method.</span></span>  
  
 [!code-cpp[System.Decimal.ToXXX#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CPP/tosgl_dbl.cpp#5)]
 [!code-csharp[System.Decimal.ToXXX#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CS/tosgl_dbl.cs#5)]
 [!code-vb[System.Decimal.ToXXX#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToXXX/VB/tosgl_dbl.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Decimal) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : decimal -&gt; int16" Usage="System.decimal.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-1081">変換する 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1081">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1082">指定した <see cref="T:System.Decimal" /> の値を、等価の 16 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1082">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1083">
            <paramref name="value" /> と等価の 16 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1083">A 16-bit signed integer equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1084">変換することも、<xref:System.Decimal>を使用して、16 ビット整数値、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1084">You can also convert a <xref:System.Decimal> value to a 16-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="73ddd-1085">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1085">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-1086">次の例では、<xref:System.Decimal.ToInt16%2A>を 10 進数値に変換するメソッド<xref:System.Int16>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1086">The following example uses the <xref:System.Decimal.ToInt16%2A> method to convert decimal numbers to <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint16/cs/toint16_1.cs#1)]
 [!code-vb[System.Decimal.ToInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint16/vb/toint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-1087">
            <paramref name="value" /> が <see cref="F:System.Int16.MinValue" /> より小さいか <see cref="F:System.Int16.MaxValue" /> より大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1087">
              <paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (d As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : decimal -&gt; int" Usage="System.decimal.ToInt32 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="73ddd-1088">変換する 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1088">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1089">指定した <see cref="T:System.Decimal" /> の値を、等価の 32 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1089">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1090">
            <paramref name="d" /> の値と等価の 32 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1090">A 32-bit signed integer equivalent to the value of <paramref name="d" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1091">戻り値は、10 進値の整数部分です。小数部の桁は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1091">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="73ddd-1092">変換することも、<xref:System.Decimal>を使用して 32 ビット整数値、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1092">You can also convert a <xref:System.Decimal> value to a 32-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="73ddd-1093">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1093">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-1094">次の例では、<xref:System.Decimal.ToInt32%2A>を 10 進数値に変換するメソッド<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1094">The following example uses the <xref:System.Decimal.ToInt32%2A> method to convert decimal numbers to <xref:System.Int32> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint32/cs/toint32_1.cs#1)]
 [!code-vb[System.Decimal.ToInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint32/vb/toint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-1095">
            <paramref name="d" /> が <see cref="F:System.Int32.MinValue" /> より小さいか <see cref="F:System.Int32.MaxValue" /> より大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1095">
              <paramref name="d" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (d As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : decimal -&gt; int64" Usage="System.decimal.ToInt64 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="73ddd-1096">変換する 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1096">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1097">指定した <see cref="T:System.Decimal" /> の値を、等価の 64 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1097">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1098">
            <paramref name="d" /> の値と等価の 64 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1098">A 64-bit signed integer equivalent to the value of <paramref name="d" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1099">戻り値は、10 進値の整数部分です。小数部の桁は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1099">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="73ddd-1100">変換することも、<xref:System.Decimal>を使用して 64 ビット整数値、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1100">You can also convert a <xref:System.Decimal> value to a 64-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="73ddd-1101">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1101">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-1102">次の例では、<xref:System.Decimal.ToInt64%2A>を 10 進数値に変換するメソッド<xref:System.Int64>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1102">The following example uses the <xref:System.Decimal.ToInt64%2A> method to convert decimal numbers to <xref:System.Int64> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint64/cs/toint64_1.cs#1)]
 [!code-vb[System.Decimal.ToInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint64/vb/toint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-1103">
            <paramref name="d" /> が <see cref="F:System.Int64.MinValue" /> より小さいか <see cref="F:System.Int64.MaxValue" /> より大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1103">
              <paramref name="d" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="ToOACurrency">
      <MemberSignature Language="C#" Value="public static long ToOACurrency (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToOACurrency(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToOACurrency(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToOACurrency (value As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToOACurrency(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToOACurrency : decimal -&gt; int64" Usage="System.decimal.ToOACurrency value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-1104">変換する 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1104">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1105">指定した <see cref="T:System.Decimal" /> 値を、64 ビット符号付き整数に格納されるそれと等価の OLE オートメーション通貨値に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1105">Converts the specified <see cref="T:System.Decimal" /> value to the equivalent OLE Automation Currency value, which is contained in a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1106">
            <paramref name="value" /> と等価の OLE オートメーション値を格納する 64 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1106">A 64-bit signed integer that contains the OLE Automation equivalent of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73ddd-1107">次のコード例では、`ToOACurrency`変換する方法の`Decimal`に含まれている同等の OLE オートメーション通貨値に数値<xref:System.Int64>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1107">The following code example uses the `ToOACurrency` method to convert `Decimal` numbers to the equivalent OLE Automation Currency values that are contained in <xref:System.Int64> fields.</span></span>  
  
 [!code-cpp[System.Decimal.OACurrency#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CPP/tooacurrency.cpp#1)]
 [!code-csharp[System.Decimal.OACurrency#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CS/tooacurrency.cs#1)]
 [!code-vb[System.Decimal.OACurrency#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.OACurrency/VB/tooacurrency.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.FromOACurrency(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToSByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Decimal) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : decimal -&gt; sbyte" Usage="System.decimal.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-1108">変換する 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1108">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1109">指定した <see cref="T:System.Decimal" /> の値を、等価の 8 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1109">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1110">
            <paramref name="value" /> と等価の 8 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1110">An 8-bit signed integer equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1111">変換することも、<xref:System.Decimal>値を 8 ビット符号付き整数を使用して、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1111">You can also convert a <xref:System.Decimal> value to an 8-bit signed integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="73ddd-1112">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1112">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-1113">次の例では、<xref:System.Decimal.ToSByte%2A>を 10 進数値に変換するメソッド<xref:System.SByte>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1113">The following example uses the <xref:System.Decimal.ToSByte%2A> method to convert decimal numbers to <xref:System.SByte> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToSByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.tosbyte/cs/tosbyte1.cs#1)]
 [!code-vb[System.Decimal.ToSByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.tosbyte/vb/tosbyte1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt16(System.Decimal)" />
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-1114">
            <paramref name="value" /> が <see cref="F:System.SByte.MinValue" /> より小さいか <see cref="F:System.SByte.MaxValue" /> より大きいです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1114">
              <paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToSingle(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (d As Decimal) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToSingle : decimal -&gt; single" Usage="System.decimal.ToSingle d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="73ddd-1115">変換する 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1115">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1116">指定した <see cref="T:System.Decimal" /> の値を、それと等価の単精度浮動小数点数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1116">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1117">
            <paramref name="d" /> の値と等価な単精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1117">A single-precision floating-point number equivalent to the value of <paramref name="d" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1118">単精度浮動小数点数がある有効桁数よりも少ないために、この操作は丸めエラーを生成できます、<xref:System.Decimal>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1118">This operation can produce round-off errors because a single-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>  
  
 <span data-ttu-id="73ddd-1119">変換することも、<xref:System.Decimal>を<xref:System.Single>値を使用して、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1119">You can also convert a <xref:System.Decimal> to a <xref:System.Single> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="73ddd-1120">変換には、有効桁数の損失を伴うことができます、ため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1120">Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-1121">次のコード例に変換`Decimal`番号の<xref:System.Single>値を使用して、`ToSingle`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1121">The following code example converts `Decimal` numbers to <xref:System.Single> values using the `ToSingle` method.</span></span>  
  
 [!code-cpp[System.Decimal.ToXXX#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CPP/tosgl_dbl.cpp#5)]
 [!code-csharp[System.Decimal.ToXXX#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CS/tosgl_dbl.cs#5)]
 [!code-vb[System.Decimal.ToXXX#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToXXX/VB/tosgl_dbl.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="73ddd-1122">対象のインスタンスの数値を等価の <see cref="T:System.String" /> 形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1122">Converts the numeric value of this instance to its equivalent <see cref="T:System.String" /> representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="decimal.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="73ddd-1123">このインスタンスの数値を、それと等価な文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1123">Converts the numeric value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1124">このインスタンスの値を表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1124">A string that represents the value of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1125"><xref:System.Decimal.ToString>メソッドの形式、<xref:System.Decimal>現在のカルチャの形式 ("G"、または [全般]) の既定の値します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1125">The <xref:System.Decimal.ToString> method formats a <xref:System.Decimal> value in the default ("G", or general) format of the current culture.</span></span> <span data-ttu-id="73ddd-1126">別の形式またはカルチャを指定する場合は、他のオーバー ロードを使用して、<xref:System.Decimal.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1126">If you want to specify a different format or culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="73ddd-1127">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="73ddd-1127">To use format</span></span>|<span data-ttu-id="73ddd-1128">カルチャの</span><span class="sxs-lookup"><span data-stu-id="73ddd-1128">For culture</span></span>|<span data-ttu-id="73ddd-1129">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1129">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="73ddd-1130">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="73ddd-1130">Default ("G") format</span></span>|<span data-ttu-id="73ddd-1131">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="73ddd-1131">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="73ddd-1132">特定の形式</span><span class="sxs-lookup"><span data-stu-id="73ddd-1132">A specific format</span></span>|<span data-ttu-id="73ddd-1133">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="73ddd-1133">Default (current) culture</span></span>|<xref:System.Decimal.ToString%28System.String%29>|  
|<span data-ttu-id="73ddd-1134">特定の形式</span><span class="sxs-lookup"><span data-stu-id="73ddd-1134">A specific format</span></span>|<span data-ttu-id="73ddd-1135">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="73ddd-1135">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="73ddd-1136">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1136">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="73ddd-1137">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1137">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="73ddd-1138">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1138">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-1139">次の例を表示、<xref:System.Decimal>値の既定値を使用して<xref:System.Decimal.ToString>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1139">The following example displays a <xref:System.Decimal> value using the default <xref:System.Decimal.ToString> method.</span></span> <span data-ttu-id="73ddd-1140">文字列形式も表示されます、<xref:System.Decimal>標準書式指定子の数の使用に起因する値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1140">It also displays the string representations of the <xref:System.Decimal> value that result from using a number of standard format specifiers.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#2)]
 [!code-vb[System.Decimal.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#2)]  
  
 <span data-ttu-id="73ddd-1141">次の例では、アカウントの金額を表示します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1141">The following example displays the amount of money in an account.</span></span>  
  
 [!code-cpp[Decimal Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#5)]
 [!code-csharp[Decimal Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#5)]
 [!code-vb[Decimal Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="decimal.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="73ddd-1142">カルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1142">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1143">このインスタンスの数値を、指定したカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1143">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1144">
            <paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1144">The string representation of the value of this instance as specified by <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1145"><xref:System.Decimal.ToString%28System.IFormatProvider%29>メソッドの形式、<xref:System.Decimal>値の既定値 ("G"、または [全般]) で指定されたカルチャの形式です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1145">The <xref:System.Decimal.ToString%28System.IFormatProvider%29> method formats a <xref:System.Decimal> value in the default ("G", or general) format of a specified culture.</span></span> <span data-ttu-id="73ddd-1146">別の形式または現在のカルチャを指定する場合は、他のオーバー ロードを使用して、<xref:System.Decimal.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1146">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="73ddd-1147">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="73ddd-1147">To use format</span></span>|<span data-ttu-id="73ddd-1148">カルチャの</span><span class="sxs-lookup"><span data-stu-id="73ddd-1148">For culture</span></span>|<span data-ttu-id="73ddd-1149">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1149">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="73ddd-1150">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="73ddd-1150">Default ("G") format</span></span>|<span data-ttu-id="73ddd-1151">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="73ddd-1151">Default (current) culture</span></span>|<xref:System.Decimal.ToString>|  
|<span data-ttu-id="73ddd-1152">特定の形式</span><span class="sxs-lookup"><span data-stu-id="73ddd-1152">A specific format</span></span>|<span data-ttu-id="73ddd-1153">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="73ddd-1153">Default (current) culture</span></span>|<xref:System.Decimal.ToString%28System.String%29>|  
|<span data-ttu-id="73ddd-1154">特定の形式</span><span class="sxs-lookup"><span data-stu-id="73ddd-1154">A specific format</span></span>|<span data-ttu-id="73ddd-1155">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="73ddd-1155">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="73ddd-1156">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1156">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="73ddd-1157">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1157">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="73ddd-1158">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1158">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="73ddd-1159">`provider`パラメーターは、<xref:System.IFormatProvider>実装が<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1159">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="73ddd-1160">通常、`provider`は、<xref:System.Globalization.NumberFormatInfo>オブジェクトまたは<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1160">Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> object or a <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="73ddd-1161">`provider`パラメーターの書式設定に使用されるカルチャに固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1161">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="73ddd-1162">`provider` が `null` の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1162">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="73ddd-1163">変換する、<xref:System.Decimal>を指定したカルチャと特定の形式の文字列では、呼び出しを使用して、文字列形式の値、<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1163">To convert a <xref:System.Decimal> value to its string representation using a specified culture and a specific format string, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-1164">次の例の文字列形式を表示する、<xref:System.Decimal>値を使用して<xref:System.Globalization.CultureInfo>を複数の異なるカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1164">The following example displays the string representation of a <xref:System.Decimal> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#3)]
 [!code-vb[System.Decimal.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="decimal.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="73ddd-1165">標準またはカスタムの数値書式指定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1165">A standard or custom numeric format string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1166">指定した書式を使用して、このインスタンスの数値を、それと等価な文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1166">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1167">
            <paramref name="format" /> で指定された、このインスタンスの値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1167">The string representation of the value of this instance as specified by <paramref name="format" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1168"><xref:System.Decimal.ToString%28System.String%29>メソッドの形式、<xref:System.Decimal>現在のカルチャの規則を使用して、指定した書式の値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1168">The <xref:System.Decimal.ToString%28System.String%29> method formats a <xref:System.Decimal> value in a specified format by using the conventions of the current culture.</span></span> <span data-ttu-id="73ddd-1169">既定値 ("G"、または [全般]) を使用する場合は、書式を設定または別のカルチャを指定して、他のオーバー ロードを使用して、<xref:System.Decimal.ToString%2A>メソッドは、次のように。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1169">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="73ddd-1170">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="73ddd-1170">To use format</span></span>|<span data-ttu-id="73ddd-1171">カルチャの</span><span class="sxs-lookup"><span data-stu-id="73ddd-1171">For culture</span></span>|<span data-ttu-id="73ddd-1172">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1172">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="73ddd-1173">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="73ddd-1173">Default ("G") format</span></span>|<span data-ttu-id="73ddd-1174">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="73ddd-1174">Default (current) culture</span></span>|<xref:System.Decimal.ToString>|  
|<span data-ttu-id="73ddd-1175">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="73ddd-1175">Default ("G") format</span></span>|<span data-ttu-id="73ddd-1176">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="73ddd-1176">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="73ddd-1177">特定の形式</span><span class="sxs-lookup"><span data-stu-id="73ddd-1177">A specific format</span></span>|<span data-ttu-id="73ddd-1178">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="73ddd-1178">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="73ddd-1179"><xref:System.Decimal.ToString%2A>メソッドで指定された標準またはカスタム数値書式指定文字列を使用して、`format`パラメーターを現在のインスタンスの値を文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1179">The <xref:System.Decimal.ToString%2A> method uses the standard or custom numeric format string specified by the `format` parameter to convert the value of the current instance into its string representation.</span></span> <span data-ttu-id="73ddd-1180">`format`パラメーターに任意の有効なできます[標準数値書式指定子](~/docs/standard/base-types/standard-numeric-format-strings.md)の任意の組み合わせに加え、D、R、および X を除く[カスタム数値書式指定子](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1180">The `format` parameter can be any valid [standard numeric format specifier](~/docs/standard/base-types/standard-numeric-format-strings.md) except for D, R, and X, as well as any combination of [custom numeric format specifiers](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="73ddd-1181">場合`format`は`null`またはこのインスタンスの戻り値、空の文字列が、一般的な数値書式指定子 (G) でフォーマットされています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1181">If `format` is `null` or an empty string, the return value of this instance is formatted with the general numeric format specifier (G).</span></span>  
  
 <span data-ttu-id="73ddd-1182">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1182">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="73ddd-1183">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1183">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="73ddd-1184">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1184">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="73ddd-1185">戻り値の書式を使用して、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1185">The return value is formatted by using the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="73ddd-1186">指定されたカルチャの書式指定規則を適用するには、呼び出し、<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1186">To apply the formatting conventions of a specified culture, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-1187">次の例を表示、<xref:System.Decimal>を使用して、サポートされている標準数値書式指定子、および 2 つのカスタム数値書式指定文字列の各値です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1187">The following example displays a <xref:System.Decimal> value using each of the supported standard numeric format specifiers, together with two custom numeric format strings.</span></span> <span data-ttu-id="73ddd-1188">数値の値を文字列に変換するのには、EN-US カルチャの書式指定規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1188">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#4)]
 [!code-vb[System.Decimal.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="73ddd-1189">
            <paramref name="format" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1189">
              <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="decimal.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="73ddd-1190">数値書式指定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1190">A numeric format string.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="73ddd-1191">カルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1191">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1192">このインスタンスの数値を、指定した書式およびカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1192">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1193">
            <paramref name="format" /> および <paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1193">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1194"><xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29>メソッドの形式、<xref:System.Double>特定のカルチャの指定した形式の値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1194">The <xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Double> value in a specified format of a specified culture.</span></span> <span data-ttu-id="73ddd-1195">既定の形式またはカルチャの設定を使用する場合は、他のオーバー ロードを使用して、<xref:System.Double.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1195">If you want to use default format or culture settings, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="73ddd-1196">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="73ddd-1196">To use format</span></span>|<span data-ttu-id="73ddd-1197">カルチャの</span><span class="sxs-lookup"><span data-stu-id="73ddd-1197">For culture</span></span>|<span data-ttu-id="73ddd-1198">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1198">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="73ddd-1199">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="73ddd-1199">Default ("G") format</span></span>|<span data-ttu-id="73ddd-1200">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="73ddd-1200">Default (current) culture</span></span>|<xref:System.Double.ToString>|  
|<span data-ttu-id="73ddd-1201">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="73ddd-1201">Default ("G") format</span></span>|<span data-ttu-id="73ddd-1202">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="73ddd-1202">A specific culture</span></span>|<xref:System.Double.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="73ddd-1203">特定の形式</span><span class="sxs-lookup"><span data-stu-id="73ddd-1203">A specific format</span></span>|<span data-ttu-id="73ddd-1204">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="73ddd-1204">Default (current) culture</span></span>|<xref:System.Double.ToString%28System.String%29>|  
  
 <span data-ttu-id="73ddd-1205">`format`パラメーターには、D、R、および X を除く任意の有効な標準の数値書式指定子およびカスタム数値書式指定子の任意の組み合わせを指定できます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1205">The `format` parameter can be any valid standard numeric format specifier except for D, R, and X, as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="73ddd-1206">場合`format`は`null`またはこのインスタンスの戻り値、空の文字列が、一般的な数値書式指定子 ("G") でフォーマットされています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1206">If `format` is `null` or an empty string, the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="73ddd-1207">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1207">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="73ddd-1208">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1208">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="73ddd-1209">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1209">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="73ddd-1210">`provider`パラメーターは、<xref:System.IFormatProvider>実装が<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1210">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="73ddd-1211">通常、`provider`は、<xref:System.Globalization.NumberFormatInfo>または<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1211">Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="73ddd-1212">`provider`パラメーターの書式設定に使用されるカルチャに固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1212">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="73ddd-1213">`provider` が `null` の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1213">If `provider` is `null`, the thread current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-1214">次の例を表示、<xref:System.Decimal>値のサポートされている標準数値書式指定子のいくつかの異なるカルチャを使用します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1214">The following example displays a <xref:System.Decimal> value using each of the supported standard numeric format specifiers for several different cultures.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#5)]
 [!code-vb[System.Decimal.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="73ddd-1215">
            <paramref name="format" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1215">
              <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Decimal) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : decimal -&gt; uint16" Usage="System.decimal.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="73ddd-1216">変換する 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1216">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1217">指定した <see cref="T:System.Decimal" /> の値を、等価の 16 ビット符号なし整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1217">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1218">
            <paramref name="value" /> の値と等価な 16 ビット符号なし整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1218">A 16-bit unsigned integer equivalent to the value of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1219">戻り値は、10 進値の整数部分です。小数部の桁は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1219">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="73ddd-1220">変換することも、<xref:System.Decimal>を使用して、16 ビット符号なし整数値、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1220">You can also convert a <xref:System.Decimal> value to a 16-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="73ddd-1221">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1221">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-1222">次の例では、<xref:System.Decimal.ToUInt16%2A>を 10 進数値に変換するメソッド<xref:System.UInt16>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1222">The following example uses the <xref:System.Decimal.ToUInt16%2A> method to convert decimal numbers to <xref:System.UInt16> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint16/cs/touint16_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint16/vb/touint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt32(System.Decimal)" />
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-1223">
            <paramref name="value" /> は <see cref="F:System.UInt16.MaxValue" /> を超えているか、または <see cref="F:System.UInt16.MinValue" /> 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1223">
              <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (d As Decimal) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : decimal -&gt; uint32" Usage="System.decimal.ToUInt32 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="73ddd-1224">変換する 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1224">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1225">指定した <see cref="T:System.Decimal" /> の値を、等価の 32 ビット符号なし整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1225">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1226">
            <paramref name="d" /> の値と等価な 32 ビット符号なし整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1226">A 32-bit unsigned integer equivalent to the value of <paramref name="d" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1227">戻り値は、10 進値の整数部分です。小数部の桁は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1227">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="73ddd-1228">変換することも、<xref:System.Decimal>を使用して 32 ビット符号なし整数値、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1228">You can also convert a <xref:System.Decimal> value to an 32-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="73ddd-1229">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1229">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-1230">次の例では、<xref:System.Decimal.ToUInt32%2A>を 10 進数値に変換するメソッド<xref:System.UInt32>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1230">The following example uses the <xref:System.Decimal.ToUInt32%2A> method to convert decimal numbers to <xref:System.UInt32> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint32/cs/touint32_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint32/vb/touint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt64(System.Decimal)" />
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-1231">
            <paramref name="d" /> が負か <see cref="F:System.UInt32.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1231">
              <paramref name="d" /> is negative or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (d As Decimal) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : decimal -&gt; uint64" Usage="System.decimal.ToUInt64 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="73ddd-1232">変換する 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1232">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1233">指定した <see cref="T:System.Decimal" /> の値を、等価の 64 ビット符号なし整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1233">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1234">
            <paramref name="d" /> の値と等価な 64 ビット符号なし整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1234">A 64-bit unsigned integer equivalent to the value of <paramref name="d" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1235">戻り値は、10 進値の整数部分です。小数部の桁は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1235">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="73ddd-1236">変換することも、<xref:System.Decimal>を使用して 64 ビット符号なし整数値、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1236">You can also convert a <xref:System.Decimal> value to an 64-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="73ddd-1237">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1237">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-1238">次の例では、<xref:System.Decimal.ToUInt64%2A>を 10 進数値に変換するメソッド<xref:System.UInt64>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1238">The following example uses the <xref:System.Decimal.ToUInt64%2A> method to convert decimal numbers to <xref:System.UInt64> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint64/cs/touint64_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint64/vb/touint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="73ddd-1239">
            <paramref name="d" /> が負か <see cref="F:System.UInt64.MaxValue" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1239">
              <paramref name="d" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static decimal Truncate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Truncate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Truncate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Truncate(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Truncate : decimal -&gt; decimal" Usage="System.decimal.Truncate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="73ddd-1240">切り捨てる 10 進数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1240">The decimal number to truncate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73ddd-1241">指定した <see cref="T:System.Decimal" /> の整数の桁を返します。小数の桁は破棄されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1241">Returns the integral digits of the specified <see cref="T:System.Decimal" />; any fractional digits are discarded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1242">
            <paramref name="d" /> を 0 方向の近似整数に丸めた結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1242">The result of <paramref name="d" /> rounded toward zero, to the nearest whole number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1243">このメソッドに丸めます`d`小数点後桁数をすべて破棄することに対応する 0 方向に最も近い整数を指定します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1243">This method rounds `d` toward zero, to the nearest whole number, which corresponds to discarding any digits after the decimal point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-1244">次のコード例では、`Truncate`メソッドをいくつかの小数部の桁を破棄して`Decimal`値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1244">The following code example uses the `Truncate` method to discard the fractional digits of several `Decimal` values.</span></span>  
  
 [!code-cpp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CPP/floor_neg_trunc.cpp#1)]
 [!code-csharp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CS/floor_neg_trunc.cs#1)]
 [!code-vb[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/VB/floor_neg_trunc.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="decimal.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="73ddd-1245">数値の文字列形式を、それと等価の <see cref="T:System.Decimal" /> に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1245">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span>
          </span>
          <span data-ttu-id="73ddd-1246">戻り値は変換が成功したか失敗したかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1246">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.Decimal.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.ReadOnlySpan{System.Char},System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.decimal.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Decimal&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.String,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.decimal.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Decimal&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="73ddd-1247">変換する数値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1247">The string representation of the number to convert.</span>
          </span>
        </param>
        <param name="result">To be added.</param>
        <summary>
          <span data-ttu-id="73ddd-1248">数値の文字列形式を、それと等価の <see cref="T:System.Decimal" /> に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1248">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span>
          </span>
          <span data-ttu-id="73ddd-1249">戻り値は変換が成功したか失敗したかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1249">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1250">
            <see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1250">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1251">このオーバー ロードとは異なります、<xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType>解析の数値の値を返す代わりに、解析操作が成功したかどうかを示すブール値を返すメソッド。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1251">This overload differs from the <xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="73ddd-1252">テストするため、例外処理を使用する必要がある、<xref:System.FormatException>イベントで`s`無効なため、正常に解析することはできません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1252">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="73ddd-1253">パラメーター`s`フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1253">Parameter `s` contains a number of the form:</span></span>  
  
 <span data-ttu-id="73ddd-1254">[ws][記号][数字] 桁 [.fractional 桁] [ws]</span><span class="sxs-lookup"><span data-stu-id="73ddd-1254">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="73ddd-1255">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1255">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="73ddd-1256">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1256">The following table describes each element.</span></span>  
  
|<span data-ttu-id="73ddd-1257">要素</span><span class="sxs-lookup"><span data-stu-id="73ddd-1257">Element</span></span>|<span data-ttu-id="73ddd-1258">説明</span><span class="sxs-lookup"><span data-stu-id="73ddd-1258">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="73ddd-1259">*ws*</span><span class="sxs-lookup"><span data-stu-id="73ddd-1259">*ws*</span></span>|<span data-ttu-id="73ddd-1260">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1260">Optional white space.</span></span>|  
|<span data-ttu-id="73ddd-1261">*sign*</span><span class="sxs-lookup"><span data-stu-id="73ddd-1261">*sign*</span></span>|<span data-ttu-id="73ddd-1262">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1262">An optional sign.</span></span>|  
|<span data-ttu-id="73ddd-1263">*digits*</span><span class="sxs-lookup"><span data-stu-id="73ddd-1263">*digits*</span></span>|<span data-ttu-id="73ddd-1264">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1264">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="73ddd-1265">*、*</span><span class="sxs-lookup"><span data-stu-id="73ddd-1265">*,*</span></span>|<span data-ttu-id="73ddd-1266">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1266">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="73ddd-1267">*.*</span><span class="sxs-lookup"><span data-stu-id="73ddd-1267">*.*</span></span>|<span data-ttu-id="73ddd-1268">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1268">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="73ddd-1269">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="73ddd-1269">*fractional-digits*</span></span>|<span data-ttu-id="73ddd-1270">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1270">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="73ddd-1271">パラメーター`s`を使用して解釈されます、<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1271">Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="73ddd-1272">つまり、空白文字と桁区切り記号が許可されているが、通貨記号は表示されません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1272">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="73ddd-1273">要素を明示的に定義 (などの通貨記号、桁区切り記号、および空白) 内に存在することができます`s`を使用して、<xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1273">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="73ddd-1274">パラメーター`s`の書式設定情報を使用して解析は、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のシステムのカルチャ用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1274">Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="73ddd-1275">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1275">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="73ddd-1276">文字列を解析するその他の書式情報を使用して指定されたカルチャを使用して、<xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1276">To parse a string using the formatting information of some other specified culture, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="73ddd-1277">必要に応じての値`s`近似値に丸められます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1277">If necessary, the value of `s` is rounded using rounding to nearest.</span></span>  
  
 <span data-ttu-id="73ddd-1278">A <xref:System.Decimal> 29 桁の有効桁数が付きます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1278">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="73ddd-1279">場合`s`、複数の 29 桁の数字を持つが、小数部分を持ちの範囲内が数値を表して<xref:System.Decimal.MaxValue>と<xref:System.Decimal.MinValue>数値は丸められます、近似値に丸め 29 桁は切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1279">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="73ddd-1280">解析操作中には、区切り記号がで発生した場合、`s`パラメーター、および適用可能な通貨または 10 進数と桁区切り記号が同じで、解析操作では、区切り記号は、グループではなく、小数点区切り文字を前提としています区切り記号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1280">If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="73ddd-1281">区切り記号の詳細については、次を参照してください。 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>、および<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1281">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-1282">次の例では、<xref:System.Decimal.TryParse%28System.String%2CSystem.Decimal%40%29?displayProperty=nameWithType>数値の文字列形式を変換する方法の<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1282">The following example uses the <xref:System.Decimal.TryParse%28System.String%2CSystem.Decimal%40%29?displayProperty=nameWithType> method to convert the string representations of numeric values to <xref:System.Decimal> values.</span></span> <span data-ttu-id="73ddd-1283">その EN-US では、現在のカルチャと見なします。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1283">It assumes that en-US is the current culture.</span></span>  
  
 [!code-csharp[System.Decimal.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.TryParse/cs/TryParse.cs#1)]
 [!code-vb[System.Decimal.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.TryParse/vb/TryParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Decimal.Parse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.decimal.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Decimal&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.decimal.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Decimal&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="73ddd-1284">変換する数値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1284">The string representation of the number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="73ddd-1285">
            <c>s</c> に許可されている書式を示す列挙値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1285">A bitwise combination of enumeration values that indicates the permitted format of <c>s</c>.</span>
          </span>
          <span data-ttu-id="73ddd-1286">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Number" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1286">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="73ddd-1287">
            <c>s</c> に関するカルチャ固有の解析情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1287">An object that supplies culture-specific parsing information about <c>s</c>.</span>
          </span>
        </param>
        <param name="result">To be added.</param>
        <summary>
          <span data-ttu-id="73ddd-1288">指定したスタイルとカルチャ固有の書式を使用して、文字列形式の数値をそれと等価の <see cref="T:System.Decimal" /> に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1288">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified style and culture-specific format.</span>
          </span>
          <span data-ttu-id="73ddd-1289">戻り値は変換が成功したか失敗したかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1289">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73ddd-1290">
            <see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1290">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73ddd-1291">このオーバー ロードとは異なります、<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>解析の数値の値を返す代わりに、解析操作が成功したかどうかを示すブール値を返すメソッド。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1291">This overload differs from the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="73ddd-1292">テストするため、例外処理を使用する必要がある、<xref:System.FormatException>イベントで`s`無効なため、正常に解析することはできません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1292">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="73ddd-1293">`style`パラメーターの使用可能な形式を定義する、`s`解析操作が成功するためのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1293">The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="73ddd-1294">ビット フラグの組み合わせを可能にする必要があります、<xref:System.Globalization.NumberStyles>列挙します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1294">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="73ddd-1295">次<xref:System.Globalization.NumberStyles>メンバーがサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1295">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>  
  
 <span data-ttu-id="73ddd-1296">スタイルの値に応じて、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1296">Depending on the value of style, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="73ddd-1297">[ws][$][記号][数字] 桁 [.fractional 桁] [e [サインイン] 桁] [ws]</span><span class="sxs-lookup"><span data-stu-id="73ddd-1297">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="73ddd-1298">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1298">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="73ddd-1299">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1299">The following table describes each element.</span></span>  
  
|<span data-ttu-id="73ddd-1300">要素</span><span class="sxs-lookup"><span data-stu-id="73ddd-1300">Element</span></span>|<span data-ttu-id="73ddd-1301">説明</span><span class="sxs-lookup"><span data-stu-id="73ddd-1301">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="73ddd-1302">*ws*</span><span class="sxs-lookup"><span data-stu-id="73ddd-1302">*ws*</span></span>|<span data-ttu-id="73ddd-1303">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1303">Optional white space.</span></span> <span data-ttu-id="73ddd-1304">先頭に空白文字は使用できません`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1304">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="73ddd-1305">末尾に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1305">It can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="73ddd-1306">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1306">A culture-specific currency symbol.</span></span> <span data-ttu-id="73ddd-1307">文字列内での位置がによって定義された、<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>または<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>のプロパティ、<xref:System.Globalization.NumberFormatInfo>によって返されるオブジェクト、<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>のメソッド、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1307">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> or <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method of the `provider` parameter.</span></span> <span data-ttu-id="73ddd-1308">通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1308">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="73ddd-1309">*sign*</span><span class="sxs-lookup"><span data-stu-id="73ddd-1309">*sign*</span></span>|<span data-ttu-id="73ddd-1310">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1310">An optional sign.</span></span>|  
|<span data-ttu-id="73ddd-1311">*digits*</span><span class="sxs-lookup"><span data-stu-id="73ddd-1311">*digits*</span></span>|<span data-ttu-id="73ddd-1312">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1312">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="73ddd-1313">*.*</span><span class="sxs-lookup"><span data-stu-id="73ddd-1313">*.*</span></span>|<span data-ttu-id="73ddd-1314">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1314">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="73ddd-1315">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="73ddd-1315">*fractional-digits*</span></span>|<span data-ttu-id="73ddd-1316">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1316">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="73ddd-1317">`style`パラメーターの使用可能な書式を指定する、`s`パラメーターを 1 つ以上を指定できます<xref:System.Globalization.NumberStyles>列挙定数のビットごとの OR 演算を使用して結合します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1317">The `style` parameter specifies the permitted format of the `s` parameter, and can be one or more <xref:System.Globalization.NumberStyles> enumerated constants combined using a bitwise OR operation.</span></span> <span data-ttu-id="73ddd-1318">場合`style`が null、`s`を使用して解釈されます、<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1318">If `style` is null, `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span>  
  
 <span data-ttu-id="73ddd-1319">`provider`パラメーターは、<xref:System.IFormatProvider>などの実装、<xref:System.Globalization.NumberFormatInfo>または<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1319">The `provider` parameter is an <xref:System.IFormatProvider> implementation such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="73ddd-1320">`provider`パラメーターの解析中に使用されるカルチャに固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1320">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="73ddd-1321">`provider` が `null` の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1321">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="73ddd-1322">A <xref:System.Decimal> 29 桁の有効桁数が付きます。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1322">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="73ddd-1323">場合`s`、複数の 29 桁の数字を持つが、小数部分を持ちの範囲内が数値を表して<xref:System.Decimal.MaxValue>と<xref:System.Decimal.MinValue>数値は丸められます、近似値に丸め 29 桁は切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1323">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="73ddd-1324">区切り記号が発生した場合、`s`解析操作では、および適用可能な通貨または 10 進数の間にパラメーターと桁区切り記号が同じには、解析操作では、区切り記号は、グループではなく、小数点区切り文字を前提としています区切り記号。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1324">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="73ddd-1325">区切り記号の詳細については、次を参照してください。 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>、および<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>です。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1325">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73ddd-1326">次の例での使用、<xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29>を特定のスタイルを持ち、特定のカルチャの規則を使ってフォーマットしている数値の文字列形式を解析します。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1326">The following example demonstrates the use of the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29> method to parse the string representation of a number that has a particular style and is formatted using the conventions of a particular culture.</span></span>  
  
 [!code-csharp[System.Decimal.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.TryParse/cs/TryParse.cs#2)]
 [!code-vb[System.Decimal.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.TryParse/vb/TryParse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="73ddd-1327">
            <paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1327">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="73ddd-1328">または、<paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1328">-or-  <paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Decimal.Parse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static readonly decimal Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal Zero" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Zero As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal Zero;" />
      <MemberSignature Language="F#" Value=" staticval mutable Zero : decimal" Usage="System.decimal.Zero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73ddd-1329">数値 0 を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73ddd-1329">Represents the number zero (0).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73ddd-1330">次のコード例の使用を示しています、`Zero`フィールドです。</span><span class="sxs-lookup"><span data-stu-id="73ddd-1330">The following code example illustrates the use of the `Zero` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
  </Members>
</Type>