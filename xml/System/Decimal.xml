<Type Name="Decimal" FullName="System.Decimal">
  <TypeSignature Language="C#" Value="public struct Decimal : IComparable, IComparable&lt;decimal&gt;, IConvertible, IEquatable&lt;decimal&gt;, IFormattable, System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Decimal extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Decimal&gt;, class System.IConvertible, class System.IEquatable`1&lt;valuetype System.Decimal&gt;, class System.IFormattable, class System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="DocId" Value="T:System.Decimal" />
  <TypeSignature Language="VB.NET" Value="Public Structure Decimal&#xA;Implements IComparable, IComparable(Of Decimal), IConvertible, IDeserializationCallback, IEquatable(Of Decimal), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Decimal : IComparable, IComparable&lt;System::Decimal&gt;, IConvertible, IEquatable&lt;System::Decimal&gt;, IFormattable, System::Runtime::Serialization::IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Decimal&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Decimal&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="72084-101">10 進数を表します。</span><span class="sxs-lookup"><span data-stu-id="72084-101">Represents a decimal number.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-102"><xref:System.Decimal>値型を負の 79,228,162,514,264,337,593,543,950,335 正 79,228,162,514,264,337,593,543,950,335 からまで 10 進数の数を表します。</span><span class="sxs-lookup"><span data-stu-id="72084-102">The <xref:System.Decimal> value type represents decimal numbers ranging from positive 79,228,162,514,264,337,593,543,950,335 to negative 79,228,162,514,264,337,593,543,950,335.</span></span> <span data-ttu-id="72084-103">既定値、`Decimal`は 0 です。</span><span class="sxs-lookup"><span data-stu-id="72084-103">The default value of a `Decimal` is 0.</span></span> <span data-ttu-id="72084-104"><xref:System.Decimal>値の型が大量の整数部と小数部の桁数と丸めエラーのないを必要とする財務計算に適しています。</span><span class="sxs-lookup"><span data-stu-id="72084-104">The <xref:System.Decimal> value type is appropriate for financial calculations that require large numbers of significant integral and fractional digits and no round-off errors.</span></span> <span data-ttu-id="72084-105"><xref:System.Decimal>型に丸め処理の必要性を排除することはできません。</span><span class="sxs-lookup"><span data-stu-id="72084-105">The <xref:System.Decimal> type does not eliminate the need for rounding.</span></span> <span data-ttu-id="72084-106">代わりに、丸め誤差が最小限に抑えます。</span><span class="sxs-lookup"><span data-stu-id="72084-106">Rather, it minimizes errors due to rounding.</span></span> <span data-ttu-id="72084-107">たとえば、次のコードでは、1 ではなく 0.9999999999999999999999999999 の結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="72084-107">For example, the following code produces a result of 0.9999999999999999999999999999 instead of 1.</span></span>  
  
 [!code-cpp[System.Decimal.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal1.cpp#1)]
 [!code-csharp[System.Decimal.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs#1)]
 [!code-vb[System.Decimal.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb#1)]  
  
 <span data-ttu-id="72084-108">除算、乗算の結果に渡されたときに、<xref:System.Math.Round%2A>メソッド、結果として、次のコードに示す、有効桁数の損失低下ありません。</span><span class="sxs-lookup"><span data-stu-id="72084-108">When the result of the division and multiplication is passed to the <xref:System.Math.Round%2A> method, the result suffers no loss of precision, as the following code shows.</span></span>  
  
 [!code-cpp[System.Decimal.Class#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal2.cpp#2)]
 [!code-csharp[System.Decimal.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs#2)]
 [!code-vb[System.Decimal.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb#2)]  
  
 <span data-ttu-id="72084-109">10 進数は、符号、場所各桁の範囲は 0 から 9、数値の値とを対応する数値の整数部と小数部を区切る浮動小数点の位置を示す、スケール ファクターで構成される浮動小数点値です。</span><span class="sxs-lookup"><span data-stu-id="72084-109">A decimal number is a floating-point value that consists of a sign, a numeric value where each digit in the value ranges from 0 to 9, and a scaling factor that indicates the position of a floating decimal point that separates the integral and fractional parts of the numeric value.</span></span>  
  
 <span data-ttu-id="72084-110">バイナリ表現、 <xref:System.Decimal> 1 ビットの符号、96 ビット整数および 96 ビット整数を分割し、どのような一部が、小数を指定するために使用する拡大率の値で構成されます。</span><span class="sxs-lookup"><span data-stu-id="72084-110">The binary representation of a <xref:System.Decimal> value consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the 96-bit integer and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="72084-111">スケール ファクターは、暗黙的に 0 から 28 までの指数で累乗数 10、です。</span><span class="sxs-lookup"><span data-stu-id="72084-111">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span> <span data-ttu-id="72084-112">そのため、バイナリの形式を、 <xref:System.Decimal> 、フォームの値 ((-2<sup>96</sup> 2<sup>96</sup>)/10<sup>(0 ~ 28)</sup>)、次のように (2<sup>96</sup>-1) と等しい<xref:System.Decimal.MinValue>、および 2<sup>96</sup>-1 と等しい<xref:System.Decimal.MaxValue>です。</span><span class="sxs-lookup"><span data-stu-id="72084-112">Therefore, the binary representation of a <xref:System.Decimal> value  the form, ((-2<sup>96</sup> to 2<sup>96</sup>) / 10<sup>(0 to 28)</sup>), where -(2<sup>96</sup>-1) is equal to <xref:System.Decimal.MinValue>, and 2<sup>96</sup>-1 is equal to <xref:System.Decimal.MaxValue>.</span></span> <span data-ttu-id="72084-113">バイナリ表現の詳細については<xref:System.Decimal>値と、例を参照してください、<xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29>コンス トラクターと<xref:System.Decimal.GetBits%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-113">For more information about the binary representation of <xref:System.Decimal> values and an example, see the <xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29> constructor and the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 <span data-ttu-id="72084-114">要素も、後続の 0 を保持する<xref:System.Decimal>数。</span><span class="sxs-lookup"><span data-stu-id="72084-114">The scaling factor  also preserves any trailing zeros in a <xref:System.Decimal> number.</span></span> <span data-ttu-id="72084-115">後続のゼロの値には影響しません、<xref:System.Decimal>算術演算または比較操作の数。</span><span class="sxs-lookup"><span data-stu-id="72084-115">Trailing zeros do not affect the value of a <xref:System.Decimal> number in arithmetic or comparison operations.</span></span> <span data-ttu-id="72084-116">ただし、後続のゼロ可能性がありますが明らかで、<xref:System.Decimal.ToString%2A>メソッド、適切な形式の文字列が適用されている場合。</span><span class="sxs-lookup"><span data-stu-id="72084-116">However, trailing zeros might be revealed by the <xref:System.Decimal.ToString%2A> method if an appropriate format string is applied.</span></span>  
  
## <a name="conversion-considerations"></a><span data-ttu-id="72084-117">変換に関する考慮事項</span><span class="sxs-lookup"><span data-stu-id="72084-117">Conversion Considerations</span></span>  
 <span data-ttu-id="72084-118">この型に変換するメソッドを提供する<xref:System.Decimal>との間の値<xref:System.SByte>、 <xref:System.Int16>、 <xref:System.Int32>、 <xref:System.Int64>、 <xref:System.Byte>、 <xref:System.UInt16>、 <xref:System.UInt32>、および<xref:System.UInt64>値。</span><span class="sxs-lookup"><span data-stu-id="72084-118">This type provides methods that convert <xref:System.Decimal> values to and from <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Byte>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64> values.</span></span> <span data-ttu-id="72084-119">これらの整数型に変換する変換<xref:System.Decimal>が拡大しない情報が失われたり、例外をスローする変換です。</span><span class="sxs-lookup"><span data-stu-id="72084-119">Conversions from these integral types to <xref:System.Decimal> are widening conversions that never lose information or throw exceptions.</span></span>  
  
 <span data-ttu-id="72084-120">変換<xref:System.Decimal>に整数型のいずれかの変換は縮小変換になる、<xref:System.Decimal>値 0 の方向に最も近い整数値にします。</span><span class="sxs-lookup"><span data-stu-id="72084-120">Conversions from <xref:System.Decimal> to any of the integral types are narrowing conversions that round the <xref:System.Decimal> value to the nearest integer value toward zero.</span></span> <span data-ttu-id="72084-121">C# の場合などの一部の言語の変換はサポートも<xref:System.Decimal>値<xref:System.Char>値。</span><span class="sxs-lookup"><span data-stu-id="72084-121">Some languages, such as C#, also support the conversion of <xref:System.Decimal> values to <xref:System.Char> values.</span></span> <span data-ttu-id="72084-122">これらの変換の結果は、目的の型で表現できない場合、<xref:System.OverflowException>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="72084-122">If the result of these conversions cannot be represented in the destination type, an <xref:System.OverflowException> exception is thrown.</span></span>  
  
 <span data-ttu-id="72084-123"><xref:System.Decimal>型に変換するメソッドも用意されています<xref:System.Decimal>との間の値<xref:System.Single>と<xref:System.Double>値。</span><span class="sxs-lookup"><span data-stu-id="72084-123">The <xref:System.Decimal> type also provides methods that convert <xref:System.Decimal> values to and from <xref:System.Single> and <xref:System.Double> values.</span></span> <span data-ttu-id="72084-124">変換<xref:System.Decimal>に<xref:System.Single>または<xref:System.Double>は縮小変換に変換された値の大きさに関する情報いないは精度が失われる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="72084-124">Conversions from <xref:System.Decimal> to <xref:System.Single> or <xref:System.Double> are narrowing conversions that might lose precision but not information about the magnitude of the converted value.</span></span> <span data-ttu-id="72084-125">変換では、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="72084-125">The conversion does not throw an exception.</span></span>  
  
 <span data-ttu-id="72084-126">変換<xref:System.Single>または<xref:System.Double>に<xref:System.Decimal>スロー、<xref:System.OverflowException>例外として、変換の結果を表現できない場合、<xref:System.Decimal>です。</span><span class="sxs-lookup"><span data-stu-id="72084-126">Conversions from <xref:System.Single> or <xref:System.Double> to <xref:System.Decimal> throw an <xref:System.OverflowException> exception if the result of the conversion cannot be represented as a <xref:System.Decimal>.</span></span>  
  
## <a name="performing-operations-on-decimal-values"></a><span data-ttu-id="72084-127">10 進数の値に対して操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="72084-127">Performing Operations on Decimal Values</span></span>  
 <span data-ttu-id="72084-128"><xref:System.Decimal>型は、加算、減算、除算、乗算、および単項否定などの標準的な数学的演算をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="72084-128">The <xref:System.Decimal> type supports standard mathematical operations such as addition, subtraction, division, multiplication, and unary negation.</span></span> <span data-ttu-id="72084-129">バイナリ表現を直接操作することもできます。、<xref:System.Decimal>値を呼び出して、<xref:System.Decimal.GetBits%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-129">You can also work directly with the binary representation of a <xref:System.Decimal> value by calling the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 <span data-ttu-id="72084-130">2 つを比較する<xref:System.Decimal>値、標準の数値の比較演算子を使用することも呼び出すことができます、<xref:System.Decimal.CompareTo%2A>または<xref:System.Decimal.Equals%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-130">To compare two <xref:System.Decimal> values, you can use the standard numeric comparison operators, or you can call the <xref:System.Decimal.CompareTo%2A> or <xref:System.Decimal.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="72084-131">メンバーを呼び出すこともできます、<xref:System.Math>さまざまな数値演算、2 つの最大値または最小値を決定する数値の絶対値の取得などを行うにはクラス<xref:System.Decimal>数値の符号を取得して、数値を丸める値。</span><span class="sxs-lookup"><span data-stu-id="72084-131">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, determining the maximum or minimum value of two <xref:System.Decimal> values, getting the sign of a number, and rounding a number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-132">次のコード例は、<xref:System.Decimal> の使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="72084-132">The following code example demonstrates the use of <xref:System.Decimal>.</span></span>  
  
 [!code-cpp[Decimal Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#1)]
 [!code-csharp[Decimal Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#1)]
 [!code-vb[Decimal Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="72084-133">この種類のすべてのメンバーでは、スレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="72084-133">All members of this type are thread safe.</span></span> <span data-ttu-id="72084-134">インスタンスの状態を変更する表示されるメンバーは、新しい値で初期化された新しいインスタンスを実際に返します。</span><span class="sxs-lookup"><span data-stu-id="72084-134">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="72084-135">として、他の種類と読み取りと書き込みをこの型のインスタンスを含む共有変数を保護する必要があるスレッド セーフを確保するロックによってです。</span><span class="sxs-lookup"><span data-stu-id="72084-135">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.SByte" />
    <altmember cref="T:System.Int16" />
    <altmember cref="T:System.Int32" />
    <altmember cref="T:System.Int64" />
    <altmember cref="T:System.Byte" />
    <altmember cref="T:System.UInt16" />
    <altmember cref="T:System.UInt32" />
    <altmember cref="T:System.UInt64" />
    <altmember cref="T:System.Single" />
    <altmember cref="T:System.Double" />
    <altmember cref="T:System.Char" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="72084-136">
          <see cref="T:System.Decimal" /> の新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="72084-136">Initializes a new instance of <see cref="T:System.Decimal" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(double value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-137"><see cref="T:System.Decimal" /> として表す値。</span><span class="sxs-lookup"><span data-stu-id="72084-137">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="72084-138"><see cref="T:System.Decimal" /> の新しいインスタンスを初期化し、その値を、指定した倍精度浮動小数点数に設定します。</span><span class="sxs-lookup"><span data-stu-id="72084-138">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified double-precision floating-point number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-139">このコンス トラクターに丸めます`value`近似値に丸め処理を使用して有効桁数は 15 です。</span><span class="sxs-lookup"><span data-stu-id="72084-139">This constructor rounds `value` to 15 significant digits using rounding to nearest.</span></span> <span data-ttu-id="72084-140">これには、数には 15 桁がありより下位の桁がゼロ場合でもは行われます。</span><span class="sxs-lookup"><span data-stu-id="72084-140">This is done even if the number has more than 15 digits and the less significant digits are zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-141">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、`Decimal`構造体、<xref:System.Double>値。</span><span class="sxs-lookup"><span data-stu-id="72084-141">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Reals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CPP/ctordo.cpp#2)]
 [!code-csharp[System.Decimal.Ctor.Reals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CS/ctordo.cs#2)]
 [!code-vb[System.Decimal.Ctor.Reals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/VB/ctordo.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-142"><paramref name="value" /> は <see cref="F:System.Decimal.MaxValue" /> を超えているか、または <see cref="F:System.Decimal.MinValue" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="72084-142"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
 <span data-ttu-id="72084-143">- または -</span><span class="sxs-lookup"><span data-stu-id="72084-143">-or-</span></span>  
  
 <span data-ttu-id="72084-144"><paramref name="value" /> が <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.PositiveInfinity" />、または <see cref="F:System.Double.NegativeInfinity" /> です。</span><span class="sxs-lookup"><span data-stu-id="72084-144"><paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(int value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-145"><see cref="T:System.Decimal" /> として表す値。</span><span class="sxs-lookup"><span data-stu-id="72084-145">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="72084-146"><see cref="T:System.Decimal" /> の新しいインスタンスを初期化し、その値を、指定した 32 ビット符号付き整数に設定します。</span><span class="sxs-lookup"><span data-stu-id="72084-146">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 32-bit signed integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72084-147">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、`Decimal`構造体、<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="72084-147">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an <xref:System.Int32> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctori.cpp#1)]
 [!code-csharp[System.Decimal.Ctor.Ints#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctori.cs#1)]
 [!code-vb[System.Decimal.Ctor.Ints#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctori.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int[] bits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32[] bits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bits As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(cli::array &lt;int&gt; ^ bits);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bits" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="bits"><span data-ttu-id="72084-148">10 進値形式を格納している 32 ビット符号付き整数の配列。</span><span class="sxs-lookup"><span data-stu-id="72084-148">An array of 32-bit signed integers containing a representation of a decimal value.</span></span></param>
        <summary><span data-ttu-id="72084-149"><see cref="T:System.Decimal" /> の新しいインスタンスの値を、指定した配列に格納されている、バイナリ形式の 10 進値に初期化します。</span><span class="sxs-lookup"><span data-stu-id="72084-149">Initializes a new instance of <see cref="T:System.Decimal" /> to a decimal value represented in binary and contained in a specified array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-150">バイナリ表現、<xref:System.Decimal>数は 1 ビットの符号、96 ビット整数および整数値を分割し、どのような一部が、小数を指定するために使用するスケール ファクター。</span><span class="sxs-lookup"><span data-stu-id="72084-150">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="72084-151">スケール ファクターは、暗黙的に 0 から 28 までの指数で累乗数 10、です。</span><span class="sxs-lookup"><span data-stu-id="72084-151">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span>  
  
 <span data-ttu-id="72084-152">`bits` 32 ビット符号付き整数の 4 要素長配列です。</span><span class="sxs-lookup"><span data-stu-id="72084-152">`bits` is a four-element long array of 32-bit signed integers.</span></span>  
  
 <span data-ttu-id="72084-153">`bits` [0], `bits` [1] と`bits`[2]、低、ミドル ネーム、および高の 32 ビット 96 ビット整数の番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="72084-153">`bits` [0], `bits` [1], and `bits` [2] contain the low, middle, and high 32 bits of the 96-bit integer number.</span></span>  
  
 <span data-ttu-id="72084-154">`bits` [3] が含まれています、スケール ファクターと記号、および次の部分で構成されています。</span><span class="sxs-lookup"><span data-stu-id="72084-154">`bits` [3] contains the scale factor and sign, and consists of following parts:</span></span>  
  
 <span data-ttu-id="72084-155">ビット 0 ~ 15 下位のワードは、使用されていないと、0 にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="72084-155">Bits 0 to 15, the lower word, are unused and must be zero.</span></span>  
  
 <span data-ttu-id="72084-156">16 ~ 23 のビットは、番号の整数を除算する 10 の累乗を示す 0 から 28 までの指数を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="72084-156">Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.</span></span>  
  
 <span data-ttu-id="72084-157">ビット 24 ~ 30 が使用されていないと、0 にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="72084-157">Bits 24 to 30 are unused and must be zero.</span></span>  
  
 <span data-ttu-id="72084-158">ビット 31、記号が含まれています0 は正、および 1 は負の値。</span><span class="sxs-lookup"><span data-stu-id="72084-158">Bit 31 contains the sign; 0 meaning positive, and 1 meaning negative.</span></span>  
  
 <span data-ttu-id="72084-159">数値の値がいくつかの可能なバイナリ表現があります。すべてが同じように有効であり、数値と等価です。</span><span class="sxs-lookup"><span data-stu-id="72084-159">A numeric value might have several possible binary representations; all are equally valid and numerically equivalent.</span></span> <span data-ttu-id="72084-160">ビット表現は、負または正の 0 によって区別に注意してください。</span><span class="sxs-lookup"><span data-stu-id="72084-160">Note that the bit representation differentiates between negative and positive zero.</span></span> <span data-ttu-id="72084-161">これらの値は、すべての操作で等しいものとして扱われます。</span><span class="sxs-lookup"><span data-stu-id="72084-161">These values are treated as being equal in all operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-162">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、 `Decimal` 4 つの配列を含む構造体<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="72084-162">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an array of four <xref:System.Int32> values.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Arrays#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CPP/ctoriarr.cpp#1)]
 [!code-csharp[System.Decimal.Ctor.Arrays#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CS/ctoriarr.cs#1)]
 [!code-vb[System.Decimal.Ctor.Arrays#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/VB/ctoriarr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72084-163"><paramref name="bits" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="72084-163"><paramref name="bits" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="72084-164"><paramref name="bits" /> の長さが 4 ではありません。</span><span class="sxs-lookup"><span data-stu-id="72084-164">The length of the <paramref name="bits" /> is not 4.</span></span>  
  
 <span data-ttu-id="72084-165">- または -</span><span class="sxs-lookup"><span data-stu-id="72084-165">-or-</span></span>  
  
 <span data-ttu-id="72084-166"><paramref name="bits" /> の 10 進値の表現が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="72084-166">The representation of the decimal value in <paramref name="bits" /> is not valid.</span></span></exception>
        <altmember cref="M:System.Decimal.GetBits(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(long value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-167"><see cref="T:System.Decimal" /> として表す値。</span><span class="sxs-lookup"><span data-stu-id="72084-167">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="72084-168"><see cref="T:System.Decimal" /> の新しいインスタンスを初期化し、その値を、指定した 64 ビット符号付き整数に設定します。</span><span class="sxs-lookup"><span data-stu-id="72084-168">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 64-bit signed integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72084-169">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、`Decimal`構造体、<xref:System.Int64>値。</span><span class="sxs-lookup"><span data-stu-id="72084-169">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an <xref:System.Int64> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorl.cpp#3)]
 [!code-csharp[System.Decimal.Ctor.Ints#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorl.cs#3)]
 [!code-vb[System.Decimal.Ctor.Ints#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorl.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(float value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-170"><see cref="T:System.Decimal" /> として表す値。</span><span class="sxs-lookup"><span data-stu-id="72084-170">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="72084-171"><see cref="T:System.Decimal" /> の新しいインスタンスを初期化し、その値を、指定した単精度浮動小数点数に設定します。</span><span class="sxs-lookup"><span data-stu-id="72084-171">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified single-precision floating-point number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-172">このコンス トラクターに丸めます`value`近似値に丸め処理を使用して有効桁数は 7 です。</span><span class="sxs-lookup"><span data-stu-id="72084-172">This constructor rounds `value` to 7 significant digits using rounding to nearest.</span></span> <span data-ttu-id="72084-173">これには、数に複数の 7 桁の数字がありより下位の桁がゼロ場合でもは行われます。</span><span class="sxs-lookup"><span data-stu-id="72084-173">This is done even if the number has more than 7 digits and the less significant digits are zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-174">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、`Decimal`構造体、<xref:System.Single>値。</span><span class="sxs-lookup"><span data-stu-id="72084-174">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.Single> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Reals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CPP/ctors.cpp#1)]
 [!code-csharp[System.Decimal.Ctor.Reals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CS/ctors.cs#1)]
 [!code-vb[System.Decimal.Ctor.Reals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/VB/ctors.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-175"><paramref name="value" /> は <see cref="F:System.Decimal.MaxValue" /> を超えているか、または <see cref="F:System.Decimal.MinValue" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="72084-175"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
 <span data-ttu-id="72084-176">- または -</span><span class="sxs-lookup"><span data-stu-id="72084-176">-or-</span></span>  
  
 <span data-ttu-id="72084-177"><paramref name="value" /> が <see cref="F:System.Single.NaN" />、<see cref="F:System.Single.PositiveInfinity" />、または <see cref="F:System.Single.NegativeInfinity" /> です。</span><span class="sxs-lookup"><span data-stu-id="72084-177"><paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(System::UInt32 value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-178"><see cref="T:System.Decimal" /> として表す値。</span><span class="sxs-lookup"><span data-stu-id="72084-178">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="72084-179"><see cref="T:System.Decimal" /> の新しいインスタンスを初期化し、その値を、指定した 32 ビット符号なし整数に設定します。</span><span class="sxs-lookup"><span data-stu-id="72084-179">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 32-bit unsigned integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72084-180">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、`Decimal`構造体、<xref:System.UInt32>値。</span><span class="sxs-lookup"><span data-stu-id="72084-180">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.UInt32> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorui.cpp#2)]
 [!code-csharp[System.Decimal.Ctor.Ints#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorui.cs#2)]
 [!code-vb[System.Decimal.Ctor.Ints#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorui.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(System::UInt64 value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-181"><see cref="T:System.Decimal" /> として表す値。</span><span class="sxs-lookup"><span data-stu-id="72084-181">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="72084-182"><see cref="T:System.Decimal" /> の新しいインスタンスを初期化し、その値を、指定した 64 ビット符号なし整数に設定します。</span><span class="sxs-lookup"><span data-stu-id="72084-182">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 64-bit unsigned integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72084-183">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、`Decimal`構造体、<xref:System.UInt64>値。</span><span class="sxs-lookup"><span data-stu-id="72084-183">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.UInt64> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorul.cpp#4)]
 [!code-csharp[System.Decimal.Ctor.Ints#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorul.cs#4)]
 [!code-vb[System.Decimal.Ctor.Ints#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorul.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int lo, int mid, int hi, bool isNegative, byte scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 lo, int32 mid, int32 hi, bool isNegative, unsigned int8 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (lo As Integer, mid As Integer, hi As Integer, isNegative As Boolean, scale As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(int lo, int mid, int hi, bool isNegative, System::Byte scale);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="lo" Type="System.Int32" />
        <Parameter Name="mid" Type="System.Int32" />
        <Parameter Name="hi" Type="System.Int32" />
        <Parameter Name="isNegative" Type="System.Boolean" />
        <Parameter Name="scale" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="lo"><span data-ttu-id="72084-184">96 ビット整数の下位 32 ビット。</span><span class="sxs-lookup"><span data-stu-id="72084-184">The low 32 bits of a 96-bit integer.</span></span></param>
        <param name="mid"><span data-ttu-id="72084-185">96 ビット整数の中位 32 ビット。</span><span class="sxs-lookup"><span data-stu-id="72084-185">The middle 32 bits of a 96-bit integer.</span></span></param>
        <param name="hi"><span data-ttu-id="72084-186">96 ビット整数の上位 32 ビット。</span><span class="sxs-lookup"><span data-stu-id="72084-186">The high 32 bits of a 96-bit integer.</span></span></param>
        <param name="isNegative">
          <span data-ttu-id="72084-187">負の数を示す場合は <see langword="true" />。正の数を示す場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="72084-187"><see langword="true" /> to indicate a negative number; <see langword="false" /> to indicate a positive number.</span></span></param>
        <param name="scale"><span data-ttu-id="72084-188">0 から 28 までの 10 のべき乗。</span><span class="sxs-lookup"><span data-stu-id="72084-188">A power of 10 ranging from 0 to 28.</span></span></param>
        <summary><span data-ttu-id="72084-189"><see cref="T:System.Decimal" /> の新しいインスタンスの値を、そのインスタンスの構成部分を指定するパラメーターに従って初期化します。</span><span class="sxs-lookup"><span data-stu-id="72084-189">Initializes a new instance of <see cref="T:System.Decimal" /> from parameters specifying the instance's constituent parts.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-190">バイナリ表現、<xref:System.Decimal>数は 1 ビットの符号、96 ビット整数および整数値を分割し、どのような一部が、小数を指定するために使用するスケール ファクター。</span><span class="sxs-lookup"><span data-stu-id="72084-190">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="72084-191">スケール ファクターは、暗黙的に番号 0 から 28 までの範囲を指数乗 10 です。</span><span class="sxs-lookup"><span data-stu-id="72084-191">The scaling factor is implicitly the number 10 raised to an exponent ranging from 0 to 28.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-192">次のコード例をいくつか作成`Decimal`番号を初期化するコンス トラクター オーバー ロードを使用して、`Decimal`を 3 つの構造体<xref:System.Int32>、単語の値、<xref:System.Boolean>記号、および<xref:System.Byte>スケール ファクター。</span><span class="sxs-lookup"><span data-stu-id="72084-192">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with three <xref:System.Int32> value words, a <xref:System.Boolean> sign, and a <xref:System.Byte> scale factor.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Arrays#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CPP/ctoriiibby.cpp#2)]
 [!code-csharp[System.Decimal.Ctor.Arrays#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CS/ctoriiibby.cs#2)]
 [!code-vb[System.Decimal.Ctor.Arrays#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/VB/ctoriiibby.vb#2)]  
  
 <span data-ttu-id="72084-193">次の例では、<xref:System.Decimal.GetBits%2A>配列のコンポーネント部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="72084-193">The following example uses the <xref:System.Decimal.GetBits%2A> method to retrieve the component parts of an array.</span></span> <span data-ttu-id="72084-194">使用して、この配列への呼び出しで、<xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29>新しいのインスタンスを作成するコンス トラクター<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-194">It then uses this array in the call to the <xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29> constructor to instantiate a new <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Decimal.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.ctor/cs/ctor2a.cs#1)]
 [!code-vb[System.Decimal.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.ctor/vb/ctor2a.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="72084-195"><paramref name="scale" /> が 28 を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-195"><paramref name="scale" /> is greater than 28.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static decimal Add (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Add(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Add(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="72084-196">加算する 1 番目の値。</span><span class="sxs-lookup"><span data-stu-id="72084-196">The first value to add.</span></span></param>
        <param name="d2"><span data-ttu-id="72084-197">加算する 2 番目の値。</span><span class="sxs-lookup"><span data-stu-id="72084-197">The second value to add.</span></span></param>
        <summary><span data-ttu-id="72084-198">指定した 2 つの <see cref="T:System.Decimal" /> 値を加算します。</span><span class="sxs-lookup"><span data-stu-id="72084-198">Adds two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="72084-199"><paramref name="d1" /> と <paramref name="d2" /> の合計。</span><span class="sxs-lookup"><span data-stu-id="72084-199">The sum of <paramref name="d1" /> and <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-200">次のコード サンプルは、の使用方法を示します`Add`:</span><span class="sxs-lookup"><span data-stu-id="72084-200">The following code sample illustrates the use of `Add` :</span></span>  
  
 [!code-cpp[Decimal Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#5)]
 [!code-csharp[Decimal Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#5)]
 [!code-vb[Decimal Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-201"><paramref name="d1" /> と <paramref name="d2" /> の和が、<see cref="F:System.Decimal.MinValue" /> より小さい値か、<see cref="F:System.Decimal.MaxValue" /> より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="72084-201">The sum of <paramref name="d1" /> and <paramref name="d2" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static decimal Ceiling (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Ceiling(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Ceiling(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Ceiling(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="72084-202">10 進数。</span><span class="sxs-lookup"><span data-stu-id="72084-202">A decimal number.</span></span></param>
        <summary><span data-ttu-id="72084-203">指定した 10 進数以上の数のうち、最小の整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-203">Returns the smallest integral value that is greater than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="72084-204"><paramref name="d" /> パラメーターの値以上の最小の整数値。</span><span class="sxs-lookup"><span data-stu-id="72084-204">The smallest integral value that is greater than or equal to the <paramref name="d" /> parameter.</span></span> <span data-ttu-id="72084-205">このメソッドは、整数型ではなく <see cref="T:System.Decimal" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-205">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-206">このメソッドの動作は IEEE 標準 754、セクション 4 に従います。</span><span class="sxs-lookup"><span data-stu-id="72084-206">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="72084-207">この種の丸め処理を行うには、正の無限大に向かって丸め処理を行うことがあります呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="72084-207">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="72084-208">つまり場合、`d`が正の値の小数部の原因が存在する`d`を次に大きい整数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="72084-208">In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer.</span></span> <span data-ttu-id="72084-209">場合`d`は負の場合、丸め処理によりの小数部`d`破棄されます。</span><span class="sxs-lookup"><span data-stu-id="72084-209">If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded.</span></span> <span data-ttu-id="72084-210">このメソッドの動作と異なります、<xref:System.Decimal.Floor%2A>メソッドで、負の無限大方向に丸め処理をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="72084-210">The operation of this method differs from the <xref:System.Decimal.Floor%2A> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-211">次の例を示しています、<xref:System.Decimal.Ceiling%2A>メソッドとの比較、<xref:System.Decimal.Floor%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-211">The following example illustrates the <xref:System.Decimal.Ceiling%2A> method and contrasts it with the <xref:System.Decimal.Floor%2A> method.</span></span>  
  
 [!code-csharp[System.Decimal.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ceiling/cs/ceiling1.cs#1)]
 [!code-vb[System.Decimal.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (d1 As Decimal, d2 As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="72084-212">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="72084-212">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="72084-213">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="72084-213">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="72084-214">2 つの指定した <see cref="T:System.Decimal" /> 値を比較します。</span><span class="sxs-lookup"><span data-stu-id="72084-214">Compares two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="72084-215"><paramref name="d1" /> と <paramref name="d2" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="72084-215">A signed number indicating the relative values of <paramref name="d1" /> and <paramref name="d2" />.</span></span>  
  
 <span data-ttu-id="72084-216"><list type="table"><listheader><term> 戻り値</span><span class="sxs-lookup"><span data-stu-id="72084-216"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="72084-217"></term><description> 意味</span><span class="sxs-lookup"><span data-stu-id="72084-217"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="72084-218"></description></listheader><item><term> 0 より小さい</span><span class="sxs-lookup"><span data-stu-id="72084-218"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="72084-219"></term><description><paramref name="d1" /> が <paramref name="d2" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="72084-219"></term><description><paramref name="d1" /> is less than <paramref name="d2" />.</span></span>  
  
 <span data-ttu-id="72084-220"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="72084-220"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="72084-221"></term><description><paramref name="d1" /> と <paramref name="d2" /> が等しい。</span><span class="sxs-lookup"><span data-stu-id="72084-221"></term><description><paramref name="d1" /> and <paramref name="d2" /> are equal.</span></span>  
  
 <span data-ttu-id="72084-222"></description></item><item><term> 0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="72084-222"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="72084-223"></term><description><paramref name="d1" /> は <paramref name="d2" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="72084-223"></term><description><paramref name="d1" /> is greater than <paramref name="d2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72084-224">次の例では、いくつかを比較して<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-224">The following example compares several <xref:System.Decimal> values.</span></span> <span data-ttu-id="72084-225">注、最初に比較する 2 つの値が等しいを示すに対する減算操作に関係なく、`value2`変数。</span><span class="sxs-lookup"><span data-stu-id="72084-225">Note that the first comparison indicates that the two values are equal despite the subtraction operation performed on the `value2` variable.</span></span> <span data-ttu-id="72084-226">これは、ため、 <xref:System.Decimal> 30 桁の精度でのみ、これら 2 つの値の差を検出できますが、型に 29 桁の有効桁数、します。</span><span class="sxs-lookup"><span data-stu-id="72084-226">This is because the <xref:System.Decimal> type has 29 digits of precision, whereas a difference between these two values can be detected only with 30 digits of precision.</span></span>  
  
 [!code-csharp[System.Decimal.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Compare/cs/Compare1.cs#1)]
 [!code-vb[System.Decimal.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Compare/vb/Compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="72084-227">指定したオブジェクトまたは <see cref="T:System.Decimal" /> とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-227">Compares this instance to a specified object or <see cref="T:System.Decimal" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.CompareTo(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-228">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72084-228">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="72084-229">指定した <see cref="T:System.Decimal" /> オブジェクトとこのインスタンスを比較し、これらの相対値の比較を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-229">Compares this instance to a specified <see cref="T:System.Decimal" /> object and returns a comparison of their relative values.</span></span></summary>
        <returns><span data-ttu-id="72084-230">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="72084-230">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="72084-231"><list type="table"><listheader><term> 戻り値</span><span class="sxs-lookup"><span data-stu-id="72084-231"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="72084-232"></term><description> 意味</span><span class="sxs-lookup"><span data-stu-id="72084-232"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="72084-233"></description></listheader><item><term> 0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="72084-233"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="72084-234"></term><description> このインスタンスは、<paramref name="value" /> よりも小さいです。</span><span class="sxs-lookup"><span data-stu-id="72084-234"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="72084-235"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="72084-235"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="72084-236"></term><description> このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="72084-236"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="72084-237"></description></item><item><term> 0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="72084-237"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="72084-238"></term><description> このインスタンスは <paramref name="value" /> よりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="72084-238"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-239">このメソッドを実装する、<xref:System.IComparable%601?displayProperty=nameWithType>インターフェイスし、実行よりもわずかに向上、<xref:System.Decimal.CompareTo%2A?displayProperty=nameWithType>メソッドに変換があるないため、`value`オブジェクトへのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="72084-239">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Decimal.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="72084-240">プログラミング言語に応じてコードに考えられる場合があります、<xref:System.Decimal.CompareTo%2A>メソッドのパラメーターの型のビット数が少ないがここではインスタンスの型よりもします。</span><span class="sxs-lookup"><span data-stu-id="72084-240">Depending on your programming language, it might be possible to code a <xref:System.Decimal.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="72084-241">これには一部のプログラミング言語は、ビット数のインスタンスと型としてパラメーターを表す暗黙の拡大変換を実行するため。</span><span class="sxs-lookup"><span data-stu-id="72084-241">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="72084-242">たとえば、インスタンスの型が<xref:System.Int32>パラメーターの型と<xref:System.Byte>です。</span><span class="sxs-lookup"><span data-stu-id="72084-242">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="72084-243">Microsoft c# コンパイラとしてパラメーターを表す命令を生成する、<xref:System.Int32>オブジェクトを生成、<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>の値を比較するメソッド、<xref:System.Int32>インスタンスおよび<xref:System.Int32>パラメーター形式です。</span><span class="sxs-lookup"><span data-stu-id="72084-243">The Microsoft C# compiler generates instructions to represent the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="72084-244">コンパイラが数値型に暗黙の拡大変換を実行するかどうかを決定する、プログラミング言語のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="72084-244">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-245">次のコード例に示しますジェネリックと非ジェネリック バージョンの<xref:System.Decimal.CompareTo%2A>いくつかの値と参照型のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-245">The following code example demonstrates generic and nongeneric versions of the <xref:System.Decimal.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-246">このインスタンスと比較するオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="72084-246">The object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="72084-247">指定したオブジェクトとこのインスタンスを比較し、これらの相対値の比較を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-247">Compares this instance to a specified object and returns a comparison of their relative values.</span></span></summary>
        <returns><span data-ttu-id="72084-248">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="72084-248">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="72084-249"><list type="table"><listheader><term> 戻り値</span><span class="sxs-lookup"><span data-stu-id="72084-249"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="72084-250"></term><description> 意味</span><span class="sxs-lookup"><span data-stu-id="72084-250"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="72084-251"></description></listheader><item><term> 0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="72084-251"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="72084-252"></term><description> このインスタンスは、<paramref name="value" /> よりも小さいです。</span><span class="sxs-lookup"><span data-stu-id="72084-252"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="72084-253"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="72084-253"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="72084-254"></term><description> このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="72084-254"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="72084-255"></description></item><item><term> 0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="72084-255"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="72084-256"></term><description> このインスタンスは <paramref name="value" /> よりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="72084-256"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="72084-257">- または -</span><span class="sxs-lookup"><span data-stu-id="72084-257">-or-</span></span>  
  
 <span data-ttu-id="72084-258"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="72084-258"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-259">任意のインスタンス<xref:System.Decimal>、その値に関係なくが大きいと見なされますより`null`です。</span><span class="sxs-lookup"><span data-stu-id="72084-259">Any instance of <xref:System.Decimal>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="72084-260">パラメーター`value`する必要があります`null`またはのインスタンス<xref:System.Decimal>です。 それ以外の場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="72084-260">Parameter `value` must be `null` or an instance of <xref:System.Decimal>; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-261">次のコード例では、いくつかを比較して`Decimal`とその他のオブジェクトの参照を`Decimal`値を使用して、`CompareTo`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-261">The following code example compares several `Decimal` and other objects to a reference `Decimal` value using the `CompareTo` method.</span></span>  
  
 [!code-cpp[System.Decimal.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.Decimal.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.Decimal.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="72084-262"><paramref name="value" /> が <see cref="T:System.Decimal" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="72084-262"><paramref name="value" /> is not a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static decimal Divide (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Divide(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Divide(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="72084-263">被除数。</span><span class="sxs-lookup"><span data-stu-id="72084-263">The dividend.</span></span></param>
        <param name="d2"><span data-ttu-id="72084-264">除数。</span><span class="sxs-lookup"><span data-stu-id="72084-264">The divisor.</span></span></param>
        <summary><span data-ttu-id="72084-265">2 つの指定した <see cref="T:System.Decimal" /> 値を除算します。</span><span class="sxs-lookup"><span data-stu-id="72084-265">Divides two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="72084-266"><paramref name="d1" /> を <paramref name="d2" /> で除算した結果。</span><span class="sxs-lookup"><span data-stu-id="72084-266">The result of dividing <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72084-267">次の例では、 <xref:System.Decimal.Divide%2A> 22.1 で範囲の値を除算するメソッド。</span><span class="sxs-lookup"><span data-stu-id="72084-267">The following example calls the <xref:System.Decimal.Divide%2A> method to divide a range of values by 22.1.</span></span>  
  
 [!code-csharp[System.Decimal.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Decimal.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="72084-268"><paramref name="d2" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="72084-268"><paramref name="d2" /> is zero.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-269">戻り値 (商) が <see cref="F:System.Decimal.MinValue" /> より小さいか、<see cref="F:System.Decimal.MaxValue" /> より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="72084-269">The return value (that is, the quotient) is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="72084-270"><see cref="T:System.Decimal" /> の 2 つのインスタンスが同じ値を表しているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-270">Returns a value indicating whether two instances of <see cref="T:System.Decimal" /> represent the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-271">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72084-271">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="72084-272">このインスタンスと指定した <see cref="T:System.Decimal" /> オブジェクトが同じ値を表しているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-272">Returns a value indicating whether this instance and a specified <see cref="T:System.Decimal" /> object represent the same value.</span></span></summary>
        <returns>
          <span data-ttu-id="72084-273"><paramref name="value" /> がこのインスタンスと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="72084-273"><see langword="true" /> if <paramref name="value" /> is equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-274">このメソッドを実装する、<xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイス、および実行よりもわずかに向上<xref:System.Decimal.Equals%2A>変換があるないため、`value`オブジェクトへのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="72084-274">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Decimal.Equals%2A> because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="72084-275">場合`value`ビット数が少ないのは範囲が狭い、インスタンスの型よりも一部のプログラミング言語が多くのビット値にパラメーターの値を変換する暗黙の拡大変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="72084-275">If `value` has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="72084-276">たとえば、インスタンスの型が<xref:System.Int32>パラメーターの型と<xref:System.Byte>です。</span><span class="sxs-lookup"><span data-stu-id="72084-276">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="72084-277">Microsoft c# コンパイラは、パラメーターの値を表す命令を生成、<xref:System.Int32>オブジェクトを生成、<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>を比較するメソッド、<xref:System.Int32>インスタンスとパラメーターの形式です。</span><span class="sxs-lookup"><span data-stu-id="72084-277">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the <xref:System.Int32> instance and parameter representation.</span></span>  
  
 <span data-ttu-id="72084-278">コンパイラが数値型に暗黙の拡大変換を実行するかどうかを決定する、プログラミング言語のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="72084-278">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="72084-279">コンパイラのオーバー ロードの解決は、2 つの動作の見かけ上の相違点についてアカウント可能性があります<see cref="M:System.Decimal.Equals(System.Object)" />メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="72084-279">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Decimal.Equals(System.Object)" /> method overloads.</span></span> <span data-ttu-id="72084-280">場合の間の暗黙的な変換、<paramref name="obj" />引数および<see cref="T:System.Decimal" />が定義されている引数として型指定されていないと、 <see cref="T:System.Object" />、コンパイラが暗黙的な変換と呼び出し実行可能性があります、<see cref="M:System.Decimal.Equals(System.Decimal)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-280">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Decimal" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method.</span></span> <span data-ttu-id="72084-281">それ以外の場合を呼び出すことが、<see cref="M:System.Decimal.Equals(System.Object)" />メソッドで、常に返します<see langword="false" />場合その<paramref name="obj" />引数ではありません、<see cref="T:System.Decimal" />値。</span><span class="sxs-lookup"><span data-stu-id="72084-281">Otherwise, they call the <see cref="M:System.Decimal.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Decimal" /> value.</span></span> <span data-ttu-id="72084-282">次の例は、次の 2 つのメソッド オーバー ロード間の動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="72084-282">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="72084-283">すべてのプリミティブの整数型の場合両方を含む署名され、最初に比較を返しますの種類、署名されていない<see langword="true" />拡大変換と呼び出し、コンパイラが自動的に実行するため、<see cref="M:System.Decimal.Equals(System.Decimal)" />メソッド、一方、2 つ目比較を返します<see langword="false" />コンパイラを呼び出すため、<see cref="M:System.Decimal.Equals(System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-283">In the case of all primitive integral types, including both signed and unsigned types, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Decimal.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.Decimal.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs#2)]
 [!code-vb[System.Decimal.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb#2)]</para>
        </block>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="Overload:System.Decimal.CompareTo" />
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-284">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72084-284">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="72084-285">このインスタンスと指定した <see cref="T:System.Object" /> が同じ型と値を表しているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-285">Returns a value indicating whether this instance and a specified <see cref="T:System.Object" /> represent the same type and value.</span></span></summary>
        <returns>
          <span data-ttu-id="72084-286"><paramref name="value" /> が <see cref="T:System.Decimal" /> で、このインスタンスに等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="72084-286"><see langword="true" /> if <paramref name="value" /> is a <see cref="T:System.Decimal" /> and equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72084-287">次のコード例では、いくつかを比較して`Decimal`とその他のオブジェクトの参照を`Decimal`値を使用して、`Equals`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-287">The following code example compares several `Decimal` and other objects to a reference `Decimal` value using the `Equals` method.</span></span>  
  
 [!code-cpp[System.Decimal.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.Decimal.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.Decimal.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="72084-288">コンパイラのオーバー ロードの解決は、2 つの動作の見かけ上の相違点についてアカウント可能性があります<see cref="M:System.Decimal.Equals(System.Object)" />メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="72084-288">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Decimal.Equals(System.Object)" /> method overloads.</span></span> <span data-ttu-id="72084-289">場合の間の暗黙的な変換、<paramref name="obj" />引数および<see cref="T:System.Decimal" />が定義されている引数として型指定されていないと、 <see cref="T:System.Object" />、コンパイラが暗黙的な変換と呼び出し実行可能性があります、<see cref="M:System.Decimal.Equals(System.Decimal)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-289">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Decimal" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method.</span></span> <span data-ttu-id="72084-290">それ以外の場合を呼び出すことが、<see cref="M:System.Decimal.Equals(System.Object)" />メソッドで、常に返します<see langword="false" />場合その<paramref name="obj" />引数ではありません、<see cref="T:System.Decimal" />値。</span><span class="sxs-lookup"><span data-stu-id="72084-290">Otherwise, they call the <see cref="M:System.Decimal.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Decimal" /> value.</span></span> <span data-ttu-id="72084-291">次の例は、次の 2 つのメソッド オーバー ロード間の動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="72084-291">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="72084-292">すべてのプリミティブの整数型の場合両方を含む署名され、最初に比較を返しますの種類、署名されていない<see langword="true" />拡大変換と呼び出し、コンパイラが自動的に実行するため、<see cref="M:System.Decimal.Equals(System.Decimal)" />メソッド、一方、2 つ目比較を返します<see langword="false" />コンパイラを呼び出すため、<see cref="M:System.Decimal.Equals(System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-292">In the case of all primitive integral types, including both signed and unsigned types, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Decimal.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.Decimal.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs#2)]
 [!code-vb[System.Decimal.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb#2)]</para>
        </block>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="72084-293">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="72084-293">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="72084-294">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="72084-294">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="72084-295"><see cref="T:System.Decimal" /> の指定された 2 つのインスタンスが同じ値を表しているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-295">Returns a value indicating whether two specified instances of <see cref="T:System.Decimal" /> represent the same value.</span></span></summary>
        <returns>
          <span data-ttu-id="72084-296"><see langword="true" /> と <paramref name="d1" /> が等しい場合は <paramref name="d2" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="72084-296"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72084-297">次のコード例では、いくつかを比較して`Decimal`値の参照を`Decimal`値の静的`Equals`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-297">The following code example compares several `Decimal` values to a reference `Decimal` value using the static `Equals` method.</span></span>  
  
 [!code-cpp[System.Decimal.Compare_Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/comp_equal.cpp#2)]
 [!code-csharp[System.Decimal.Compare_Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/comp_equal.cs#2)]
 [!code-vb[System.Decimal.Compare_Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/comp_equal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static decimal Floor (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Floor(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Floor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Floor(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="72084-298">丸める値。</span><span class="sxs-lookup"><span data-stu-id="72084-298">The value to round.</span></span></param>
        <summary><span data-ttu-id="72084-299">指定した <see cref="T:System.Decimal" /> 数を、負の無限大方向の近似整数に丸めます。</span><span class="sxs-lookup"><span data-stu-id="72084-299">Rounds a specified <see cref="T:System.Decimal" /> number to the closest integer toward negative infinity.</span></span></summary>
        <returns><span data-ttu-id="72084-300"><paramref name="d" /> に小数部がある場合は、負の無限大方向の <paramref name="d" /> より小さい、次の <see cref="T:System.Decimal" /> 整数。</span><span class="sxs-lookup"><span data-stu-id="72084-300">If <paramref name="d" /> has a fractional part, the next whole <see cref="T:System.Decimal" /> number toward negative infinity that is less than <paramref name="d" />.</span></span>  
  
 <span data-ttu-id="72084-301">- または -</span><span class="sxs-lookup"><span data-stu-id="72084-301">-or-</span></span>  
  
 <span data-ttu-id="72084-302"><paramref name="d" /> に小数部がない場合は、<paramref name="d" /> が未変更のまま返されます。</span><span class="sxs-lookup"><span data-stu-id="72084-302">If <paramref name="d" /> doesn't have a fractional part, <paramref name="d" /> is returned unchanged.</span></span> <span data-ttu-id="72084-303">このメソッドは、<see cref="T:System.Decimal" /> 型の整数値を返すことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="72084-303">Note that the method returns an integral value of type <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-304">このメソッドの動作は IEEE 標準 754、セクション 4 に従います。</span><span class="sxs-lookup"><span data-stu-id="72084-304">The behavior of this method follows IEEE Standard 754, Section 4.</span></span> <span data-ttu-id="72084-305">このような丸めと呼ぶことが負の無限大に丸めます。</span><span class="sxs-lookup"><span data-stu-id="72084-305">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="72084-306">つまり場合、`d`が正の値、小数部が切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="72084-306">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="72084-307">場合`d`は負の場合、小数部が存在するより小さい整数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="72084-307">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="72084-308">このメソッドの動作と異なります、<xref:System.Decimal.Ceiling%2A>メソッドで、正の無限大に向かって丸め処理をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="72084-308">The operation of this method differs from the <xref:System.Decimal.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-309">次の例を示しています、<xref:System.Decimal.Floor%2A>メソッドとの比較、<xref:System.Decimal.Ceiling%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-309">The following example illustrates the <xref:System.Decimal.Floor%2A> method and contrasts it with the <xref:System.Decimal.Ceiling%2A> method.</span></span>  
  
 [!code-csharp[System.Decimal.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ceiling/cs/ceiling1.cs#1)]
 [!code-vb[System.Decimal.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
        <altmember cref="M:System.Decimal.Truncate(System.Decimal)" />
        <altmember cref="M:System.Decimal.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="FromOACurrency">
      <MemberSignature Language="C#" Value="public static decimal FromOACurrency (long cy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal FromOACurrency(int64 cy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.FromOACurrency(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromOACurrency (cy As Long) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal FromOACurrency(long cy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cy" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="cy"><span data-ttu-id="72084-310">OLE オートメーション通貨値。</span><span class="sxs-lookup"><span data-stu-id="72084-310">An OLE Automation Currency value.</span></span></param>
        <summary><span data-ttu-id="72084-311">OLE オートメーション通貨値を格納している指定した 64 ビット符号付き整数を、それと等価の <see cref="T:System.Decimal" /> 値に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-311">Converts the specified 64-bit signed integer, which contains an OLE Automation Currency value, to the equivalent <see cref="T:System.Decimal" /> value.</span></span></summary>
        <returns><span data-ttu-id="72084-312"><see cref="T:System.Decimal" /> と等価の値を格納している <paramref name="cy" />。</span><span class="sxs-lookup"><span data-stu-id="72084-312">A <see cref="T:System.Decimal" /> that contains the equivalent of <paramref name="cy" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72084-313">次のコード例では、`FromOACurrency`変換する方法の<xref:System.Int64>を同等の機能の OLE オートメーション通貨値を含むフィールド`Decimal`番号。</span><span class="sxs-lookup"><span data-stu-id="72084-313">The following code example uses the `FromOACurrency` method to convert <xref:System.Int64> fields that contain OLE Automation Currency values to the equivalent `Decimal` numbers.</span></span>  
  
 [!code-cpp[System.Decimal.OACurrency#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CPP/fromoacurrency.cpp#2)]
 [!code-csharp[System.Decimal.OACurrency#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CS/fromoacurrency.cs#2)]
 [!code-vb[System.Decimal.OACurrency#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.OACurrency/VB/fromoacurrency.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.ToOACurrency(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="GetBits">
      <MemberSignature Language="C#" Value="public static int[] GetBits (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] GetBits(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetBits(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBits (d As Decimal) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ GetBits(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="72084-314">変換する値。</span><span class="sxs-lookup"><span data-stu-id="72084-314">The value to convert.</span></span></param>
        <summary><span data-ttu-id="72084-315">指定した <see cref="T:System.Decimal" /> のインスタンスの値を、それと等価のバイナリ形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-315">Converts the value of a specified instance of <see cref="T:System.Decimal" /> to its equivalent binary representation.</span></span></summary>
        <returns><span data-ttu-id="72084-316"><paramref name="d" /> のバイナリ形式を格納している 4 要素長の 32 ビット符号付き整数配列。</span><span class="sxs-lookup"><span data-stu-id="72084-316">A 32-bit signed integer array with four elements that contain the binary representation of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-317">バイナリ表現、<xref:System.Decimal>数は 1 ビットの符号、96 ビット整数および整数値を分割し、どのような一部が、小数を指定するために使用するスケール ファクター。</span><span class="sxs-lookup"><span data-stu-id="72084-317">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="72084-318">スケール ファクターは、暗黙的に 0 から 28 までの指数で累乗数 10、です。</span><span class="sxs-lookup"><span data-stu-id="72084-318">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span>  
  
 <span data-ttu-id="72084-319">戻り値は、32 ビット符号付き整数の 4 つの要素の配列です。</span><span class="sxs-lookup"><span data-stu-id="72084-319">The return value is a four-element array of 32-bit signed integers.</span></span>  
  
 <span data-ttu-id="72084-320">1、2、および返される配列の 3 番目の要素は、低、ミドル ネーム、および高の 32 ビット 96 ビット整数値に含まれています。</span><span class="sxs-lookup"><span data-stu-id="72084-320">The first, second, and third elements of the returned array contain the low, middle, and high 32 bits of the 96-bit integer number.</span></span>  
  
 <span data-ttu-id="72084-321">返される配列の 4 番目の要素には、スケール ファクターと記号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="72084-321">The fourth element of the returned array contains the scale factor and sign.</span></span> <span data-ttu-id="72084-322">次の部分で構成されます。</span><span class="sxs-lookup"><span data-stu-id="72084-322">It consists of the following parts:</span></span>  
  
 <span data-ttu-id="72084-323">ビット 0 ~ 15 下位のワードは、使用されていないと、0 にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="72084-323">Bits 0 to 15, the lower word, are unused and must be zero.</span></span>  
  
 <span data-ttu-id="72084-324">16 ~ 23 のビットは、番号の整数を除算する 10 の累乗を示す 0 から 28 までの指数を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="72084-324">Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.</span></span>  
  
 <span data-ttu-id="72084-325">ビット 24 ~ 30 が使用されていないと、0 にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="72084-325">Bits 24 to 30 are unused and must be zero.</span></span>  
  
 <span data-ttu-id="72084-326">ビット 31、記号が含まれています: という意味では正の値、0 と 1 は、負のことを意味します。</span><span class="sxs-lookup"><span data-stu-id="72084-326">Bit 31 contains the sign: 0 mean positive, and 1 means negative.</span></span>  
  
 <span data-ttu-id="72084-327">ビット表現は、負または正の 0 によって区別に注意してください。</span><span class="sxs-lookup"><span data-stu-id="72084-327">Note that the bit representation differentiates between negative and positive zero.</span></span> <span data-ttu-id="72084-328">これらの値は、すべての操作で等しいものとして扱われます。</span><span class="sxs-lookup"><span data-stu-id="72084-328">These values are treated as being equal in all operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-329">次の例では、`GetBits`いくつかを変換する方法の`Decimal`値と等価のバイナリ表現にします。</span><span class="sxs-lookup"><span data-stu-id="72084-329">The following example uses the `GetBits` method to convert several `Decimal` values to their equivalent binary representations.</span></span> <span data-ttu-id="72084-330">表示 10 進数の値と要素の 16 進数の値によって返される配列で、<xref:System.Decimal.GetBits%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-330">It then displays the decimal values and the hexadecimal value of the elements in the array returned by the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 [!code-cpp[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CPP/getbits.cpp#2)]
 [!code-csharp[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CS/getbits.cs#2)]
 [!code-vb[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/VB/getbits.vb#2)]  
  
 <span data-ttu-id="72084-331">次の例では、<xref:System.Decimal.GetBits%2A>配列のコンポーネント部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="72084-331">The following example uses the <xref:System.Decimal.GetBits%2A> method to retrieve the component parts of an array.</span></span> <span data-ttu-id="72084-332">使用して、この配列への呼び出しで、<xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29>新しいのインスタンスを作成するコンス トラクター<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-332">It then uses this array in the call to the <xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29> constructor to instantiate a new <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Decimal.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.ctor/cs/ctor2a.cs#1)]
 [!code-vb[System.Decimal.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.ctor/vb/ctor2a.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Decimal.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="72084-333">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="72084-333">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="72084-334">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="72084-334">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="72084-335"><see cref="T:System.TypeCode" /> 値型の <see cref="T:System.Decimal" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-335">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="72084-336">列挙型定数 <see cref="F:System.TypeCode.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="72084-336">The enumerated constant <see cref="F:System.TypeCode.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72084-337">次のコード例では、`GetTypeCode`の型コードを返すメソッドを`Decimal`値の型。</span><span class="sxs-lookup"><span data-stu-id="72084-337">The following code example uses the `GetTypeCode` method to return the type code for `Decimal` value type.</span></span>  
  
 [!code-cpp[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CPP/gettypecode.cpp#3)]
 [!code-csharp[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CS/gettypecode.cs#3)]
 [!code-vb[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/VB/gettypecode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly decimal MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MaxValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72084-338"><see cref="T:System.Decimal" /> の最大有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="72084-338">Represents the largest possible value of <see cref="T:System.Decimal" />.</span></span> <span data-ttu-id="72084-339">このフィールドは定数であり、読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="72084-339">This field is constant and read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-340">この定数の値は、正 79,228,162,514,264,337,593,543,950,335 です。</span><span class="sxs-lookup"><span data-stu-id="72084-340">The value of this constant is positive 79,228,162,514,264,337,593,543,950,335.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-341">次のコード サンプルは、の使用方法を示します`MaxValue`:</span><span class="sxs-lookup"><span data-stu-id="72084-341">The following code sample illustrates the use of `MaxValue` :</span></span>  
  
 [!code-cpp[Decimal Example#2](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#2)]
 [!code-csharp[Decimal Example#2](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#2)]
 [!code-vb[Decimal Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinusOne">
      <MemberSignature Language="C#" Value="public static readonly decimal MinusOne;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MinusOne" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MinusOne" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinusOne As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MinusOne;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72084-342">負の 1 (-1) を表します。</span><span class="sxs-lookup"><span data-stu-id="72084-342">Represents the number negative one (-1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72084-343">次のコード例の使用を示しています、`MinusOne`フィールドです。</span><span class="sxs-lookup"><span data-stu-id="72084-343">The following code example illustrates the use of the `MinusOne` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly decimal MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MinValue" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MinValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72084-344"><see cref="T:System.Decimal" /> の最小有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="72084-344">Represents the smallest possible value of <see cref="T:System.Decimal" />.</span></span> <span data-ttu-id="72084-345">このフィールドは定数であり、読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="72084-345">This field is constant and read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-346">この定数の値は、負の値の 79,228,162,514,264,337,593,543,950,335 です。</span><span class="sxs-lookup"><span data-stu-id="72084-346">The value of this constant is negative 79,228,162,514,264,337,593,543,950,335.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-347">次のコード例の使用を示しています、`MinValue`フィールドです。</span><span class="sxs-lookup"><span data-stu-id="72084-347">The following code example illustrates the use of the `MinValue` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static decimal Multiply (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Multiply(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Multiply(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="72084-348">被乗数。</span><span class="sxs-lookup"><span data-stu-id="72084-348">The multiplicand.</span></span></param>
        <param name="d2"><span data-ttu-id="72084-349">乗数。</span><span class="sxs-lookup"><span data-stu-id="72084-349">The multiplier.</span></span></param>
        <summary><span data-ttu-id="72084-350">指定された 2 つの <see cref="T:System.Decimal" /> 値を乗算します。</span><span class="sxs-lookup"><span data-stu-id="72084-350">Multiplies two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="72084-351"><paramref name="d1" /> と <paramref name="d2" /> を乗算した結果。</span><span class="sxs-lookup"><span data-stu-id="72084-351">The result of multiplying <paramref name="d1" /> and <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72084-352">次のコード例のいくつかのペアを作成する`Decimal`値し、その製品の計算、`Multiply`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-352">The following code example creates several pairs of `Decimal` values and calculates their products with the `Multiply` method.</span></span>  
  
 [!code-cpp[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/CPP/mul_div_rem.cpp#1)]
 [!code-csharp[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/CS/mul_div_rem.cs#1)]
 [!code-vb[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/VB/mul_div_rem.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-353">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-353">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static decimal Negate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Negate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Negate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Negate(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="72084-354">否定する値。</span><span class="sxs-lookup"><span data-stu-id="72084-354">The value to negate.</span></span></param>
        <summary><span data-ttu-id="72084-355">指定した <see cref="T:System.Decimal" /> 値に -1 を乗算した結果を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-355">Returns the result of multiplying the specified <see cref="T:System.Decimal" /> value by negative one.</span></span></summary>
        <returns><span data-ttu-id="72084-356">値が <paramref name="d" /> で、符号が逆の 10 進数。</span><span class="sxs-lookup"><span data-stu-id="72084-356">A decimal number with the value of <paramref name="d" />, but the opposite sign.</span></span>  
  
 <span data-ttu-id="72084-357">- または -</span><span class="sxs-lookup"><span data-stu-id="72084-357">-or-</span></span>  
  
 <span data-ttu-id="72084-358"><paramref name="d" /> が 0 の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="72084-358">Zero, if <paramref name="d" /> is zero.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72084-359">次のコード例では、`Negate`いくつかの記号を変更するメソッドを`Decimal`値。</span><span class="sxs-lookup"><span data-stu-id="72084-359">The following code example uses the `Negate` method to change the sign of several `Decimal` values.</span></span>  
  
 [!code-cpp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CPP/floor_neg_trunc.cpp#1)]
 [!code-csharp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CS/floor_neg_trunc.cs#1)]
 [!code-vb[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/VB/floor_neg_trunc.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static readonly decimal One;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal One" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.One" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly One As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal One;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72084-360">数値 1 を表します。</span><span class="sxs-lookup"><span data-stu-id="72084-360">Represents the number one (1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72084-361">次のコード例の使用を示しています、`One`フィールドです。</span><span class="sxs-lookup"><span data-stu-id="72084-361">The following code example illustrates the use of the `One` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static decimal operator + (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Addition(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator +(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="72084-362">加算する 1 番目の値。</span><span class="sxs-lookup"><span data-stu-id="72084-362">The first value to add.</span></span></param>
        <param name="d2"><span data-ttu-id="72084-363">加算する 2 番目の値。</span><span class="sxs-lookup"><span data-stu-id="72084-363">The second value to add.</span></span></param>
        <summary><span data-ttu-id="72084-364">指定した 2 つの <see cref="T:System.Decimal" /> 値を加算します。</span><span class="sxs-lookup"><span data-stu-id="72084-364">Adds two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="72084-365"><paramref name="d1" /> と <paramref name="d2" /> を加算した結果。</span><span class="sxs-lookup"><span data-stu-id="72084-365">The result of adding <paramref name="d1" /> and <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-366"><xref:System.Decimal.op_Addition%2A>メソッドの加算演算子の動作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-366">The <xref:System.Decimal.op_Addition%2A> method defines the operation of the addition operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="72084-367">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="72084-367">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/addition1.cs#3)]
 [!code-vb[System.Decimal.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/addition1.vb#3)]  
  
 <span data-ttu-id="72084-368">使用している言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Add%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="72084-368">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Add%2A> method instead.</span></span>  
  
 <span data-ttu-id="72084-369">この演算子を同等の方法は、します。 <xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="72084-369">The equivalent method for this operator is <xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-370">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-370">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public static decimal operator -- (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Decrement(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Decrement(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Decrement (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator --(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="72084-371">デクリメントする値。</span><span class="sxs-lookup"><span data-stu-id="72084-371">The value to decrement.</span></span></param>
        <summary><span data-ttu-id="72084-372"><see cref="T:System.Decimal" /> オペランドを 1 だけデクリメントします。</span><span class="sxs-lookup"><span data-stu-id="72084-372">Decrements the <see cref="T:System.Decimal" /> operand by one.</span></span></summary>
        <returns><span data-ttu-id="72084-373">1 だけデクリメントした <paramref name="d" /> の値。</span><span class="sxs-lookup"><span data-stu-id="72084-373">The value of <paramref name="d" /> decremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-374"><xref:System.Decimal.op_Decrement%2A>メソッドは、デクリメント演算子の操作を定義<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-374">The <xref:System.Decimal.op_Decrement%2A> method defines the operation of the decrement operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="72084-375">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="72084-375">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement1.cs#4)]  
  
 <span data-ttu-id="72084-376">インクリメント演算子 (Visual Basic の場合) など一部の言語を呼び出すことができます、<xref:System.Decimal.op_Decrement%2A>メソッドを直接として次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="72084-376">Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Decrement%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement1.vb#5)]  
  
 <span data-ttu-id="72084-377">お使いの言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Subtract%2A>メソッド、次の例として、代わりにします。</span><span class="sxs-lookup"><span data-stu-id="72084-377">If your language does not support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead, as the following example shows.</span></span>  
  
 [!code-csharp[System.Decimal.Operators#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement2.cs#6)]
 [!code-vb[System.Decimal.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement2.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-378">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-378">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static decimal operator / (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Division(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Division(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator /(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="72084-379">被除数。</span><span class="sxs-lookup"><span data-stu-id="72084-379">The dividend.</span></span></param>
        <param name="d2"><span data-ttu-id="72084-380">除数。</span><span class="sxs-lookup"><span data-stu-id="72084-380">The divisor.</span></span></param>
        <summary><span data-ttu-id="72084-381">2 つの指定した <see cref="T:System.Decimal" /> 値を除算します。</span><span class="sxs-lookup"><span data-stu-id="72084-381">Divides two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="72084-382"><paramref name="d1" /> を <paramref name="d2" /> で除算した結果。</span><span class="sxs-lookup"><span data-stu-id="72084-382">The result of dividing <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-383"><xref:System.Decimal.op_Division%2A>メソッドの除算演算子の動作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-383">The <xref:System.Decimal.op_Division%2A> method defines the operation of the division operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="72084-384">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="72084-384">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/division1.cs#7)]
 [!code-vb[System.Decimal.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/division1.vb#7)]  
  
 <span data-ttu-id="72084-385">使用している言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Divide%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="72084-385">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Divide%2A> method instead.</span></span>  
  
 <span data-ttu-id="72084-386">この演算子を同等の方法は、します。 <xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="72084-386">The equivalent method for this operator is <xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="72084-387"><paramref name="d2" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="72084-387"><paramref name="d2" /> is zero.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-388">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-388">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="72084-389">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="72084-389">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="72084-390">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="72084-390">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="72084-391">2 つの <see cref="T:System.Decimal" /> 値が等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-391">Returns a value that indicates whether two <see cref="T:System.Decimal" /> values are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="72084-392"><see langword="true" /> と <paramref name="d1" /> が等しい場合は <paramref name="d2" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="72084-392"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-393"><xref:System.Decimal.op_Equality%2A>メソッド定義の等値演算子の動作<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-393">The <xref:System.Decimal.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="72084-394">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="72084-394">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/equality1.cs#1)]
 [!code-vb[System.Decimal.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/equality1.vb#1)]  
  
 <span data-ttu-id="72084-395">使用している言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Equals%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="72084-395">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Equals%2A> method instead.</span></span>  
  
 <span data-ttu-id="72084-396">この演算子を同等の方法は、します。 <xref:System.Decimal.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="72084-396">The equivalent method for this operator is <xref:System.Decimal.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="72084-397"><see cref="T:System.Decimal" /> オブジェクトと別の型の間の明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-397">Defines an explicit conversion between a <see cref="T:System.Decimal" /> object and another type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Byte(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-398">変換する値。</span><span class="sxs-lookup"><span data-stu-id="72084-398">The value to convert.</span></span></param>
        <summary><span data-ttu-id="72084-399"><see cref="T:System.Decimal" /> から 8 ビット符号なし整数への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-399">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to an 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="72084-400">変換された <see cref="T:System.Decimal" /> を表す 8 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="72084-400">An 8-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-401">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.Byte>です。</span><span class="sxs-lookup"><span data-stu-id="72084-401">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Byte>.</span></span> <span data-ttu-id="72084-402">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラは異なる実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-402">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="72084-403">例では、明示的に変換するときに異なる戻り値を示しています、<xref:System.Decimal>値を<xref:System.Byte>c#、C++、および Visual Basic を使用した値です。</span><span class="sxs-lookup"><span data-stu-id="72084-403">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Byte> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="72084-404">実行するには、変換は言語に関係なくを呼び出すことができます、<xref:System.Decimal.ToByte%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToByte%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-404">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToByte%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToByte%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples 
 <span data-ttu-id="72084-405">次の例では変換<xref:System.Decimal>番号の<xref:System.Byte>、明示的なを使用して値<xref:System.Decimal>に<xref:System.Byte>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="72084-405">The following example converts <xref:System.Decimal> numbers to <xref:System.Byte> values by using the explicit <xref:System.Decimal> to <xref:System.Byte> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctos_byte.cpp#4)] 
 [!code-csharp[System.Decimal.ConvTo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctos_byte.cs#4)] 
 [!code-vb[System.Decimal.ConvTo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctos_byte.vb#4)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-406"><paramref name="value" /> が <see cref="F:System.Byte.MinValue" /> より小さいか <see cref="F:System.Byte.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="72084-406"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator char (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname char op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Char" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator char(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-407">変換する値。</span><span class="sxs-lookup"><span data-stu-id="72084-407">The value to convert.</span></span></param>
        <summary><span data-ttu-id="72084-408"><see cref="T:System.Decimal" /> から Unicode 文字への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-408">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a Unicode character.</span></span></summary>
        <returns><span data-ttu-id="72084-409">変換後の <see cref="T:System.Decimal" /> を表す Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="72084-409">A Unicode character that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-410">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.Char>です。</span><span class="sxs-lookup"><span data-stu-id="72084-410">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Char>.</span></span> <span data-ttu-id="72084-411">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラが異なる実装を提供して、異なる結果を返すか、変換をまったくできない場合があります。</span><span class="sxs-lookup"><span data-stu-id="72084-411">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results, or might not support the conversion at all.</span></span> <span data-ttu-id="72084-412">たとえば、Visual Basic および C++ コンパイラはできません、明示的な<xref:System.Decimal>を<xref:System.Char>変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-412">For example, the Visual Basic and C++ compilers do not support an explicit <xref:System.Decimal> to a <xref:System.Char> conversion.</span></span>
 

## Examples 
 <span data-ttu-id="72084-413">次の例では変換<xref:System.Decimal>番号の<xref:System.Char>(Unicode 文字で) 使用して値の明示的な<xref:System.Decimal>に<xref:System.Char>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="72084-413">The following example converts <xref:System.Decimal> numbers to <xref:System.Char> values (Unicode characters) by using the explicit <xref:System.Decimal> to <xref:System.Char> conversion operator.</span></span>

 [!code-csharp[System.Decimal.ConvTo#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctochar.cs#6)]
 [!code-vb[System.Decimal.ConvTo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctochar.vb#6)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-414"><paramref name="value" /> が <see cref="F:System.Char.MinValue" /> より小さいか <see cref="F:System.Char.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="72084-414"><paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator double (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Double" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator double(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-415">変換する値。</span><span class="sxs-lookup"><span data-stu-id="72084-415">The value to convert.</span></span></param>
        <summary><span data-ttu-id="72084-416"><see cref="T:System.Decimal" /> から倍精度浮動小数点数への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-416">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="72084-417">変換された <see cref="T:System.Decimal" /> を表す倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="72084-417">A double-precision floating-point number that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-418">倍精度浮動小数点数がある有効桁数よりも少ないため、有効桁数の損失にこの操作を行うことができます、<xref:System.Decimal>です。</span><span class="sxs-lookup"><span data-stu-id="72084-418">This operation can result in a loss of precision, because a double-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>
 
 <span data-ttu-id="72084-419">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.Double>です。</span><span class="sxs-lookup"><span data-stu-id="72084-419">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Double>.</span></span> <span data-ttu-id="72084-420">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラは異なる実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-420">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="72084-421">例では、明示的に変換するときに異なる戻り値を示しています、<xref:System.Decimal>値を<xref:System.Double>c#、C++、および Visual Basic を使用した値です。</span><span class="sxs-lookup"><span data-stu-id="72084-421">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Double> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="72084-422">実行するには、変換は言語に関係なくを呼び出すことができます、<xref:System.Decimal.ToDouble%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToDouble%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-422">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToDouble%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToDouble%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="72084-423">次の例では変換<xref:System.Decimal>番号の<xref:System.Double>、明示的なを使用して値<xref:System.Decimal>に<xref:System.Double>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="72084-423">The following example converts <xref:System.Decimal> numbers to <xref:System.Double> values by using the explicit <xref:System.Decimal> to <xref:System.Double> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctosgl_dbl.cpp#5)] 
 [!code-csharp[System.Decimal.ConvTo#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctosgl_dbl.cs#5)]
 [!code-vb[System.Decimal.ConvTo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctosgl_dbl.vb#5)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator short (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int16 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator short(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-424">変換する値。</span><span class="sxs-lookup"><span data-stu-id="72084-424">The value to convert.</span></span></param>
        <summary><span data-ttu-id="72084-425"><see cref="T:System.Decimal" /> から 16 ビット符号付き整数への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-425">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="72084-426">変換された <see cref="T:System.Decimal" /> を表す 16 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="72084-426">A 16-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="72084-427">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.Int16>です。</span><span class="sxs-lookup"><span data-stu-id="72084-427">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int16>.</span></span> <span data-ttu-id="72084-428">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラは異なる実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-428">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="72084-429">例では、明示的に変換するときに異なる戻り値を示しています、<xref:System.Decimal>値を<xref:System.Int16>c#、Visual Basic、および C++ を使用した値です。</span><span class="sxs-lookup"><span data-stu-id="72084-429">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int16> value by using C#, Visual Basic, and C++.</span></span> <span data-ttu-id="72084-430">実行するには、変換は言語に関係なくを呼び出すことができます、<xref:System.Decimal.ToInt16%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToInt16%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-430">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt16%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt16%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="72084-431">次の例では変換<xref:System.Decimal>番号の<xref:System.Int16>、明示的なを使用して値<xref:System.Decimal>に<xref:System.Int16>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="72084-431">The following example converts <xref:System.Decimal> numbers to <xref:System.Int16> values by using the explicit <xref:System.Decimal> to <xref:System.Int16> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int16.cpp#3)] 
 [!code-csharp[System.Decimal.ConvTo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int16.cs#3)] 
 [!code-vb[System.Decimal.ConvTo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int16.vb#3)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-432"><paramref name="value" /> が <see cref="F:System.Int16.MinValue" /> より小さいか <see cref="F:System.Int16.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="72084-432"><paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator int(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-433">変換する値。</span><span class="sxs-lookup"><span data-stu-id="72084-433">The value to convert.</span></span></param>
        <summary><span data-ttu-id="72084-434"><see cref="T:System.Decimal" /> から 32 ビット符号付き整数への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-434">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="72084-435">変換された <see cref="T:System.Decimal" /> を表す 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="72084-435">A 32-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-436">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.Int32>です。</span><span class="sxs-lookup"><span data-stu-id="72084-436">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int32>.</span></span> <span data-ttu-id="72084-437">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラは異なる実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-437">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="72084-438">例では、明示的に変換するときに異なる戻り値を示しています、<xref:System.Decimal>値を<xref:System.Int32>c#、C++、および Visual Basic を使用した値です。</span><span class="sxs-lookup"><span data-stu-id="72084-438">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int32> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="72084-439">実行するには、変換は言語に関係なくを呼び出すことができます、<xref:System.Decimal.ToInt32%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToInt32%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-439">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt32%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt32%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="72084-440">次の例では変換<xref:System.Decimal>番号の<xref:System.Int32>、明示的なを使用して値<xref:System.Decimal>に<xref:System.Int32>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="72084-440">The following example converts <xref:System.Decimal> numbers to <xref:System.Int32> values by using the explicit <xref:System.Decimal> to <xref:System.Int32> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int32.cpp#2)] 
 [!code-csharp[System.Decimal.ConvTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int32.cs#2)] 
 [!code-vb[System.Decimal.ConvTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int32.vb#2)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-441"><paramref name="value" /> が <see cref="F:System.Int32.MinValue" /> より小さいか <see cref="F:System.Int32.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="72084-441"><paramref name="value" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator long(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-442">変換する値。</span><span class="sxs-lookup"><span data-stu-id="72084-442">The value to convert.</span></span></param>
        <summary><span data-ttu-id="72084-443"><see cref="T:System.Decimal" /> から 64 ビット符号付き整数への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-443">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="72084-444">変換された <see cref="T:System.Decimal" /> を表す 64 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="72084-444">A 64-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-445">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.Int64>です。</span><span class="sxs-lookup"><span data-stu-id="72084-445">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int64>.</span></span> <span data-ttu-id="72084-446">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラは異なる実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-446">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="72084-447">例では、明示的に変換するときに異なる戻り値を示しています、<xref:System.Decimal>値を<xref:System.Int64>c# および Visual Basic を使用した値です。</span><span class="sxs-lookup"><span data-stu-id="72084-447">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int64> value by using C# and Visual Basic.</span></span> <span data-ttu-id="72084-448">実行するには、変換は言語に関係なくを呼び出すことができます、<xref:System.Decimal.ToInt64%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToInt64%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-448">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt64%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt64%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 
## Examples
 <span data-ttu-id="72084-449">次の例では変換<xref:System.Decimal>番号の<xref:System.Int64>、明示的なを使用して値<xref:System.Decimal>に<xref:System.Int64>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="72084-449">The following example converts <xref:System.Decimal> numbers to <xref:System.Int64> values by using the explicit <xref:System.Decimal> to <xref:System.Int64> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int64.cpp#1)] 
 [!code-csharp[System.Decimal.ConvTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int64.cs#1)] 
 [!code-vb[System.Decimal.ConvTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int64.vb#1)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-450"><paramref name="value" /> が <see cref="F:System.Int64.MinValue" /> より小さいか <see cref="F:System.Int64.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="72084-450"><paramref name="value" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator sbyte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int8 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::SByte(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-451">変換する値。</span><span class="sxs-lookup"><span data-stu-id="72084-451">The value to convert.</span></span></param>
        <summary><span data-ttu-id="72084-452"><see cref="T:System.Decimal" /> から 8 ビット符号付き整数への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-452">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to an 8-bit signed integer.</span></span>  
  
 <span data-ttu-id="72084-453">この API は、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="72084-453">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="72084-454">変換された <see cref="T:System.Decimal" /> を表す 8 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="72084-454">An 8-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-455">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.SByte>です。</span><span class="sxs-lookup"><span data-stu-id="72084-455">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.SByte>.</span></span> <span data-ttu-id="72084-456">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラは異なる実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-456">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="72084-457">例では、明示的に変換するときに異なる戻り値を示しています、<xref:System.Decimal>値を<xref:System.Byte>と<xref:System.SByte>c# および Visual Basic を使用した値です。</span><span class="sxs-lookup"><span data-stu-id="72084-457">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Byte> and an <xref:System.SByte> value by using C# and Visual Basic.</span></span> <span data-ttu-id="72084-458">実行するには、変換は言語に関係なくを呼び出すことができます、<xref:System.Decimal.ToSByte%28System.Decimal%29?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToSByte%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-458">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToSByte%28System.Decimal%29?displayProperty=nameWithType> method or the <xref:System.Convert.ToSByte%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>   


## Examples 
 <span data-ttu-id="72084-459">次の例では変換<xref:System.Decimal>番号の<xref:System.SByte>、明示的なを使用して値<xref:System.Decimal>に<xref:System.SByte>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="72084-459">The following example converts <xref:System.Decimal> numbers to <xref:System.SByte> values by using the explicit <xref:System.Decimal> to <xref:System.SByte> conversion operator.</span></span>

 [!code-cpp[System.Decimal.Operators.Explicit#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cpp/tosbyte.cpp#1)] 
 [!code-csharp[System.Decimal.Operators.Explicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cs/tosbyte.cs#1)]
 [!code-vb[System.Decimal.Operators.Explicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators.explicit/vb/tosbyte.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-460"><paramref name="value" /> が <see cref="F:System.SByte.MinValue" /> より小さいか <see cref="F:System.SByte.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="72084-460"><paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
        <altCompliant cref="M:System.Decimal.ToInt16(System.Decimal)" />
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Single" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator float(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-461">変換する値。</span><span class="sxs-lookup"><span data-stu-id="72084-461">The value to convert.</span></span></param>
        <summary><span data-ttu-id="72084-462"><see cref="T:System.Decimal" /> から単精度浮動小数点数への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-462">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="72084-463">変換された <see cref="T:System.Decimal" /> を表す単精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="72084-463">A single-precision floating-point number that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-464">単精度浮動小数点数がある有効桁数よりも少ないため、有効桁数の損失にこの操作を行うことができます、<xref:System.Decimal>です。</span><span class="sxs-lookup"><span data-stu-id="72084-464">This operation can result in a loss of precision, because a single-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>

 <span data-ttu-id="72084-465">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.Single>です。</span><span class="sxs-lookup"><span data-stu-id="72084-465">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Single>.</span></span> <span data-ttu-id="72084-466">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラは異なる実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-466">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="72084-467">例では、明示的に変換するときに異なる戻り値を示しています、<xref:System.Decimal>値を<xref:System.Single>c# および Visual Basic を使用した値です。</span><span class="sxs-lookup"><span data-stu-id="72084-467">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Single> value by using C# and Visual Basic.</span></span> <span data-ttu-id="72084-468">実行するには、変換は言語に関係なくを呼び出すことができます、<xref:System.Decimal.ToSingle%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToSingle%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-468">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToSingle%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToSingle%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="72084-469">次の例では変換<xref:System.Decimal>番号の<xref:System.Single>、明示的なを使用して値<xref:System.Decimal>に<xref:System.Single>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="72084-469">The following example converts <xref:System.Decimal> numbers to <xref:System.Single> values by using the explicit <xref:System.Decimal> to <xref:System.Single> conversion operator.</span></span>

 [!code-cpp[System.Decimal.Operators.Explicit#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cpp/tosingle1.cpp#2)] 
 [!code-csharp[System.Decimal.Operators.Explicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cs/tosingle1.cs#2)]
 [!code-vb[System.Decimal.Operators.Explicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators.explicit/vb/tosingle1.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ushort (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int16 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt16(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-470">変換する値。</span><span class="sxs-lookup"><span data-stu-id="72084-470">The value to convert.</span></span></param>
        <summary><span data-ttu-id="72084-471"><see cref="T:System.Decimal" /> から 16 ビット符号なし整数への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-471">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 16-bit unsigned integer.</span></span>  
  
 <span data-ttu-id="72084-472">この API は、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="72084-472">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="72084-473">変換された <see cref="T:System.Decimal" /> を表す 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="72084-473">A 16-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-474">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.UInt16>です。</span><span class="sxs-lookup"><span data-stu-id="72084-474">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt16>.</span></span> <span data-ttu-id="72084-475">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラは異なる実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-475">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="72084-476">例では、明示的に変換するときに異なる戻り値を示しています、<xref:System.Decimal>値を<xref:System.UInt16>c# および Visual Basic を使用した値です。</span><span class="sxs-lookup"><span data-stu-id="72084-476">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt16> value by using C# and Visual Basic.</span></span> <span data-ttu-id="72084-477">実行するには、変換は言語に関係なくを呼び出すことができます、<xref:System.Decimal.ToUInt16%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToUInt16%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-477">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt16%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt16%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="72084-478">次の例では変換<xref:System.Decimal>番号の<xref:System.UInt16>、明示的なを使用して値<xref:System.Decimal>に<xref:System.UInt16>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="72084-478">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt16> values by using the explicit <xref:System.Decimal> to <xref:System.UInt16> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int16.cpp#3)] 
 [!code-csharp[System.Decimal.ConvTo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int16.cs#3)]
 [!code-vb[System.Decimal.ConvTo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int16.vb#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-479"><paramref name="value" /> が <see cref="F:System.UInt16.MinValue" /> より小さいか <see cref="F:System.UInt16.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="72084-479"><paramref name="value" /> is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator uint (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt32(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-480">変換する値。</span><span class="sxs-lookup"><span data-stu-id="72084-480">The value to convert.</span></span></param>
        <summary><span data-ttu-id="72084-481"><see cref="T:System.Decimal" /> から 32 ビット符号なし整数への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-481">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 32-bit unsigned integer.</span></span>  
  
 <span data-ttu-id="72084-482">この API は、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="72084-482">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="72084-483">変換された <see cref="T:System.Decimal" /> を表す 32 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="72084-483">A 32-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-484">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.UInt32>です。</span><span class="sxs-lookup"><span data-stu-id="72084-484">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt32>.</span></span> <span data-ttu-id="72084-485">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラは異なる実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-485">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="72084-486">例では、明示的に変換するときに異なる戻り値を示しています、<xref:System.Decimal>値を<xref:System.UInt32>c# および Visual Basic を使用した値です。</span><span class="sxs-lookup"><span data-stu-id="72084-486">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt32> value by using C# and Visual Basic.</span></span> <span data-ttu-id="72084-487">実行するには、変換は言語に関係なくを呼び出すことができます、<xref:System.Decimal.ToUInt32%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToUInt32%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-487">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt32%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt32%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>


## Examples
 <span data-ttu-id="72084-488">次の例では変換<xref:System.Decimal>番号の<xref:System.UInt32>、明示的なを使用して値<xref:System.Decimal>に<xref:System.UInt32>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="72084-488">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt32> values by using the explicit <xref:System.Decimal> to <xref:System.UInt32> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int32.cpp#2)] 
 [!code-csharp[System.Decimal.ConvTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int32.cs#2)]
 [!code-vb[System.Decimal.ConvTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int32.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-489"><paramref name="value" /> が <see cref="F:System.UInt32.MinValue" /> より小さいか <see cref="F:System.UInt32.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="72084-489"><paramref name="value" /> is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altCompliant cref="M:System.Decimal.ToInt64(System.Decimal)" />
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ulong (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt64(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-490">変換する値。</span><span class="sxs-lookup"><span data-stu-id="72084-490">The value to convert.</span></span></param>
        <summary><span data-ttu-id="72084-491"><see cref="T:System.Decimal" /> から 64 ビット符号なし整数への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-491">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 64-bit unsigned integer.</span></span>  
  
 <span data-ttu-id="72084-492">この API は、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="72084-492">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="72084-493">変換された <see cref="T:System.Decimal" /> を表す 64 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="72084-493">A 64-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-494">この演算子は明示的に変換する<xref:System.Decimal>を<xref:System.UInt64>です。</span><span class="sxs-lookup"><span data-stu-id="72084-494">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt64>.</span></span> <span data-ttu-id="72084-495">このような明示的な変換の構文は、言語に依存し、個々 の言語コンパイラは異なる実装を提供したり、異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-495">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="72084-496">例では、明示的に変換するときに異なる戻り値を示しています、<xref:System.Decimal>値を<xref:System.UInt64>c# および Visual Basic を使用した値です。</span><span class="sxs-lookup"><span data-stu-id="72084-496">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt64> value by using C# and Visual Basic.</span></span> <span data-ttu-id="72084-497">実行するには、変換は言語に関係なくを呼び出すことができます、<xref:System.Decimal.ToUInt64%28System.Decimal%29?displayProperty=nameWithType>または<xref:System.Convert.ToUInt64%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-497">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt64%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt64%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>


## Examples 
 <span data-ttu-id="72084-498">次の例では変換<xref:System.Decimal>番号の<xref:System.UInt64>、明示的なを使用して値<xref:System.Decimal>に<xref:System.UInt64>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="72084-498">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt64> values by using the explicit <xref:System.Decimal> to <xref:System.UInt64> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int64.cpp#1)] 
 [!code-csharp[System.Decimal.ConvTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int64.cs#1)]
 [!code-vb[System.Decimal.ConvTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int64.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-499"><paramref name="value" /> が負か <see cref="F:System.UInt64.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-499"><paramref name="value" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Double)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Double) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-500">変換する倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="72084-500">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="72084-501">倍精度浮動小数点数から <see cref="T:System.Decimal" /> への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-501">Defines an explicit conversion of a double-precision floating-point number to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="72084-502">変換された倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="72084-502">The converted double-precision floating point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  

 <span data-ttu-id="72084-503">次の例では変換<xref:System.Double>値<xref:System.Decimal>番号を使用して、<xref:System.Double>に<xref:System.Decimal>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="72084-503">The following example converts <xref:System.Double> values to <xref:System.Decimal> numbers by using the <xref:System.Double> to <xref:System.Decimal> conversion operator.</span></span> <span data-ttu-id="72084-504">この変換には、Visual Basic で op_Explicit 演算子が必要です。</span><span class="sxs-lookup"><span data-stu-id="72084-504">This conversion requires the op_Explicit operator in Visual Basic.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.Others#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromdouble.cpp#2)]
 [!code-csharp[System.Decimal.ConvFrom.Others#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromdouble.cs#2)]
 [!code-vb[System.Decimal.ConvFrom.Others#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromdouble.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-505"><paramref name="value" /> は <see cref="F:System.Decimal.MaxValue" /> を超えているか、または <see cref="F:System.Decimal.MinValue" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="72084-505"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
 <span data-ttu-id="72084-506">- または -</span><span class="sxs-lookup"><span data-stu-id="72084-506">-or-</span></span>  
  
 <span data-ttu-id="72084-507"><paramref name="value" /> が <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.PositiveInfinity" />、または <see cref="F:System.Double.NegativeInfinity" /> です。</span><span class="sxs-lookup"><span data-stu-id="72084-507"><paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Single)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Single) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-508">変換する単精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="72084-508">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="72084-509">単精度浮動小数点数から <see cref="T:System.Decimal" /> への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-509">Defines an explicit conversion of a single-precision floating-point number to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="72084-510">変換された単精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="72084-510">The converted single-precision floating point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72084-511">次の例では変換<xref:System.Single>値<xref:System.Decimal>番号を使用して、<xref:System.Single>に<xref:System.Decimal>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="72084-511">The following example converts <xref:System.Single> values to <xref:System.Decimal> numbers by using the <xref:System.Single> to <xref:System.Decimal> conversion operator.</span></span> <span data-ttu-id="72084-512">この変換には、Visual Basic で op_Explicit 演算子が必要です。</span><span class="sxs-lookup"><span data-stu-id="72084-512">This conversion requires the op_Explicit operator in Visual Basic.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.Others#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromsingle.cpp#3)]
 [!code-csharp[System.Decimal.ConvFrom.Others#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromsingle.cs#3)]
 [!code-vb[System.Decimal.ConvFrom.Others#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromsingle.vb#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-513"><paramref name="value" /> は <see cref="F:System.Decimal.MaxValue" /> を超えているか、または <see cref="F:System.Decimal.MinValue" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="72084-513"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
 <span data-ttu-id="72084-514">- または -</span><span class="sxs-lookup"><span data-stu-id="72084-514">-or-</span></span>  
  
 <span data-ttu-id="72084-515"><paramref name="value" /> が <see cref="F:System.Single.NaN" />、<see cref="F:System.Single.PositiveInfinity" />、または <see cref="F:System.Single.NegativeInfinity" /> です。</span><span class="sxs-lookup"><span data-stu-id="72084-515"><paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.</span></span></exception>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="72084-516">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="72084-516">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="72084-517">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="72084-517">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="72084-518">指定した <see cref="T:System.Decimal" /> が、指定した別の <see cref="T:System.Decimal" /> より大きいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-518">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is greater than another specified <see cref="T:System.Decimal" />.</span></span></summary>
        <returns>
          <span data-ttu-id="72084-519"><see langword="true" /> が <paramref name="d1" /> より大きい場合は <paramref name="d2" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="72084-519"><see langword="true" /> if <paramref name="d1" /> is greater than <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-520"><xref:System.Decimal.op_GreaterThan%2A>メソッドの大なり演算子の動作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-520">The <xref:System.Decimal.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="72084-521">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="72084-521">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthan1.cs#8)]
 [!code-vb[System.Decimal.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan1.vb#8)]  
  
 <span data-ttu-id="72084-522">カスタム演算子をサポートしない言語を呼び出すことができます、<xref:System.Decimal.Compare%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="72084-522">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="72084-523">これらを呼び出すこともできます、<xref:System.Decimal.op_GreaterThan%2A>メソッドを直接として次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="72084-523">They may also be able to call the <xref:System.Decimal.op_GreaterThan%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan2.vb#9)]  
  
 <span data-ttu-id="72084-524">この演算子を同等の方法は、します。 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="72084-524">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="72084-525">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="72084-525">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="72084-526">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="72084-526">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="72084-527">指定した <see cref="T:System.Decimal" /> が、指定した別の <see cref="T:System.Decimal" /> 以上かどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-527">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is greater than or equal to another specified <see cref="T:System.Decimal" />.</span></span></summary>
        <returns>
          <span data-ttu-id="72084-528"><paramref name="d1" /> が <paramref name="d2" /> 以上の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="72084-528"><see langword="true" /> if <paramref name="d1" /> is greater than or equal to <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-529"><xref:System.Decimal.op_GreaterThanOrEqual%2A>メソッドより大きいか等しい演算子の操作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-529">The <xref:System.Decimal.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="72084-530">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="72084-530">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthanorequal1.cs#10)]
 [!code-vb[System.Decimal.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal1.vb#10)]  
  
 <span data-ttu-id="72084-531">カスタム演算子をサポートしない言語を呼び出すことができます、<xref:System.Decimal.Compare%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="72084-531">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="72084-532">これらを呼び出すこともできます、<xref:System.Decimal.op_GreaterThanOrEqual%2A>メソッドを直接として次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="72084-532">They may also be able to call the <xref:System.Decimal.op_GreaterThanOrEqual%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal2.vb#11)]  
  
 <span data-ttu-id="72084-533">この演算子を同等の方法は、します。 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="72084-533">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="72084-534">値型から <see cref="T:System.Decimal" /> 値への暗黙の変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-534">Defines an implicit conversion of the value of a type to a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-535">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>に明示的なキャスト演算子 (c#) または (Visual Basic) の変換関数の呼び出しなしの値。</span><span class="sxs-lookup"><span data-stu-id="72084-535">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="72084-536">これらには、拡大変換をデータの損失を伴わないおよびスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="72084-536">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Byte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-537">変換する 8 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="72084-537">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="72084-538">8 ビット符号なし整数値から <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-538">Defines an implicit conversion of an 8-bit unsigned integer to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="72084-539">変換された 8 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="72084-539">The converted 8-bit unsigned integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-540">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>に明示的なキャスト演算子 (c#) または (Visual Basic) の変換関数の呼び出しなしの値。</span><span class="sxs-lookup"><span data-stu-id="72084-540">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="72084-541">これらには、拡大変換をデータの損失を伴わないおよびスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="72084-541">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="72084-542">次の例では変換<xref:System.Byte>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="72084-542">The following example converts <xref:System.Byte> values to <xref:System.Decimal> numbers.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfrombyte.cpp#4)]
 [!code-csharp[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfrombyte.cs#4)]
 [!code-vb[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfrombyte.vb#4)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Char)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Char) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-543">変換する Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="72084-543">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="72084-544">Unicode 文字から <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-544">Defines an implicit conversion of a Unicode character to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="72084-545">変換された Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="72084-545">The converted Unicode character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-546">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>に明示的なキャスト演算子 (c#) または (Visual Basic) の変換関数の呼び出しなしの値。</span><span class="sxs-lookup"><span data-stu-id="72084-546">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="72084-547">これらには、拡大変換をデータの損失を伴わないおよびスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="72084-547">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="72084-548">次の例では変換<xref:System.Char>(Unicode 文字) の値を<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="72084-548">The following example converts <xref:System.Char> values (Unicode characters) to <xref:System.Decimal> numbers.</span></span> <span data-ttu-id="72084-549">この変換には、Visual basic、c# および C++ ではなく、op_Implicit 演算子が必要です。</span><span class="sxs-lookup"><span data-stu-id="72084-549">This conversion requires the op_Implicit operator in Visual Basic, but not in C# and C++.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.Others#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromchar.cpp#1)]
 [!code-csharp[System.Decimal.ConvFrom.Others#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromchar.cs#1)]
 [!code-vb[System.Decimal.ConvFrom.Others#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromchar.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Short) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-550">変換する 16 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="72084-550">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="72084-551">16 ビット符号付き整数の <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-551">Defines an implicit conversion of a 16-bit signed integer to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="72084-552">変換された 16 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="72084-552">The converted 16-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-553">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>に明示的なキャスト演算子 (c#) または (Visual Basic) の変換関数の呼び出しなしの値。</span><span class="sxs-lookup"><span data-stu-id="72084-553">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="72084-554">これらには、拡大変換をデータの損失を伴わないおよびスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="72084-554">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="72084-555">次の例では変換<xref:System.Int16>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="72084-555">The following example converts <xref:System.Int16> values to <xref:System.Decimal> numbers.</span></span> <span data-ttu-id="72084-556">この変換には、Visual basic、c# および C++ ではなく、op_Implicit 演算子が必要です。</span><span class="sxs-lookup"><span data-stu-id="72084-556">This conversion requires the op_Implicit operator in Visual Basic, but not in C# and C++.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint16.cpp#3)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint16.cs#3)]
 [!code-vb[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint16.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-557">変換する 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="72084-557">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="72084-558">32 ビット符号付き整数の <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-558">Defines an implicit conversion of a 32-bit signed integer to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="72084-559">変換された 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="72084-559">The converted 32-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-560">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>に明示的なキャスト演算子 (c#) または (Visual Basic) の変換関数の呼び出しなしの値。</span><span class="sxs-lookup"><span data-stu-id="72084-560">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="72084-561">これらには、拡大変換をデータの損失を伴わないおよびスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="72084-561">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="72084-562">次の例では変換<xref:System.Int32>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="72084-562">The following example converts <xref:System.Int32> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint32.cpp#2)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint32.cs#2)]
 [!code-vb[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint32.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Long) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-563">変換する 64 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="72084-563">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="72084-564">64 ビット符号付き整数の <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-564">Defines an implicit conversion of a 64-bit signed integer to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="72084-565">変換された 64 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="72084-565">The converted 64-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-566">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>に明示的なキャスト演算子 (c#) または (Visual Basic) の変換関数の呼び出しなしの値。</span><span class="sxs-lookup"><span data-stu-id="72084-566">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="72084-567">これらには、拡大変換をデータの損失を伴わないおよびスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="72084-567">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="72084-568">次の例では変換<xref:System.Int64>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="72084-568">The following example converts <xref:System.Int64> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint64.cpp#1)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint64.cs#1)]
 [!code-vb[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint64.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As SByte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-569">変換する 8 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="72084-569">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="72084-570">8 ビット符号付き整数値から <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-570">Defines an implicit conversion of an 8-bit signed integer to a <see cref="T:System.Decimal" />.</span></span>  
  
 <span data-ttu-id="72084-571">この API は、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="72084-571">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="72084-572">変換された 8 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="72084-572">The converted 8-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-573">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>に明示的なキャスト演算子 (c#) または (Visual Basic) の変換関数の呼び出しなしの値。</span><span class="sxs-lookup"><span data-stu-id="72084-573">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="72084-574">これらには、拡大変換をデータの損失を伴わないおよびスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="72084-574">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="72084-575">次の例では変換<xref:System.SByte>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="72084-575">The following example converts <xref:System.SByte> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromsbyte.cpp#4)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromsbyte.cs#4)]
 [!code-vb[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromsbyte.vb#4)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UShort) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-576">変換する 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="72084-576">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="72084-577">16 ビット符号なし整数値から <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-577">Defines an implicit conversion of a 16-bit unsigned integer to a <see cref="T:System.Decimal" />.</span></span>  
  
 <span data-ttu-id="72084-578">この API は、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="72084-578">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="72084-579">変換された 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="72084-579">The converted 16-bit unsigned integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-580">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>に明示的なキャスト演算子 (c#) または (Visual Basic) の変換関数の呼び出しなしの値。</span><span class="sxs-lookup"><span data-stu-id="72084-580">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="72084-581">これらには、拡大変換をデータの損失を伴わないおよびスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="72084-581">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="72084-582">次の例では変換<xref:System.UInt16>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="72084-582">The following example converts <xref:System.UInt16> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint16.cpp#3)]
 [!code-csharp[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint16.cs#3)]
 [!code-vb[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint16.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UInteger) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-583">変換する 32 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="72084-583">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="72084-584">32 ビット符号なし整数値から <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-584">Defines an implicit conversion of a 32-bit unsigned integer to a <see cref="T:System.Decimal" />.</span></span>  
  
 <span data-ttu-id="72084-585">この API は、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="72084-585">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="72084-586">変換された 32 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="72084-586">The converted 32-bit unsigned integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-587">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>に明示的なキャスト演算子 (c#) または (Visual Basic) の変換関数の呼び出しなしの値。</span><span class="sxs-lookup"><span data-stu-id="72084-587">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="72084-588">これらには、拡大変換をデータの損失を伴わないおよびスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="72084-588">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="72084-589">次の例では変換<xref:System.UInt32>値<xref:System.Decimal>番号。</span><span class="sxs-lookup"><span data-stu-id="72084-589">The following example converts <xref:System.UInt32> values to <xref:System.Decimal> numbers.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint32.cpp#2)] 
 [!code-csharp[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint32.cs#2)] 
 [!code-vb[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint32.vb#2)]   

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As ULong) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-590">変換する 64 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="72084-590">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="72084-591">64 ビット符号なし整数値から <see cref="T:System.Decimal" /> への暗黙的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="72084-591">Defines an implicit conversion of a 64-bit unsigned integer to a <see cref="T:System.Decimal" />.</span></span>  
  
 <span data-ttu-id="72084-592">この API は、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="72084-592">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="72084-593">変換された 64 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="72084-593">The converted 64-bit unsigned integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-594">オーバー ロード、<xref:System.Decimal.op_Implicit%2A>メソッドは、コンパイラを自動的に変換する元の型を定義、<xref:System.Decimal>に明示的なキャスト演算子 (c#) または (Visual Basic) の変換関数の呼び出しなしの値。</span><span class="sxs-lookup"><span data-stu-id="72084-594">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="72084-595">これらには、拡大変換をデータの損失を伴わないおよびスローしないでください、<xref:System.OverflowException>例外。</span><span class="sxs-lookup"><span data-stu-id="72084-595">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="72084-596">次の例では変換<xref:System.UInt64>値<xref:System.Decimal>番号を使用して、<xref:System.UInt64>に<xref:System.Decimal>変換演算子です。</span><span class="sxs-lookup"><span data-stu-id="72084-596">The following example converts <xref:System.UInt64> values to <xref:System.Decimal> numbers by using the <xref:System.UInt64> to <xref:System.Decimal> conversion operator.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint64.cpp#1)] 
 [!code-csharp[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint64.cs#1)] 
 [!code-vb[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint64.vb#1)]   

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public static decimal operator ++ (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Increment(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Increment(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Increment (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator ++(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="72084-597">インクリメントする値。</span><span class="sxs-lookup"><span data-stu-id="72084-597">The value to increment.</span></span></param>
        <summary><span data-ttu-id="72084-598"><see cref="T:System.Decimal" /> オペランドを 1 だけインクリメントします。</span><span class="sxs-lookup"><span data-stu-id="72084-598">Increments the <see cref="T:System.Decimal" /> operand by 1.</span></span></summary>
        <returns><span data-ttu-id="72084-599">1 だけインクリメントした <paramref name="d" /> の値。</span><span class="sxs-lookup"><span data-stu-id="72084-599">The value of <paramref name="d" /> incremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-600"><xref:System.Decimal.op_Increment%2A>メソッドのインクリメント演算子の動作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-600">The <xref:System.Decimal.op_Increment%2A> method defines the operation of the increment operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="72084-601">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="72084-601">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment1.cs#12)]  
  
 <span data-ttu-id="72084-602">インクリメント演算子 (Visual Basic の場合) など一部の言語を呼び出すことができます、<xref:System.Decimal.op_Increment%2A>メソッドを直接として次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="72084-602">Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Increment%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment1.vb#13)]  
  
 <span data-ttu-id="72084-603">お使いの言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Add%2A>メソッド、次の例として、代わりにします。</span><span class="sxs-lookup"><span data-stu-id="72084-603">If your language does not support custom operators, call the <xref:System.Decimal.Add%2A> method instead, as the following example shows.</span></span>  
  
 [!code-csharp[System.Decimal.Operators#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment2.cs#14)]
 [!code-vb[System.Decimal.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment2.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-604">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-604">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="72084-605">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="72084-605">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="72084-606">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="72084-606">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="72084-607">2 つの <see cref="T:System.Decimal" /> オブジェクトの値が異なるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-607">Returns a value that indicates whether two <see cref="T:System.Decimal" /> objects have different values.</span></span></summary>
        <returns>
          <span data-ttu-id="72084-608"><paramref name="d1" /> と <paramref name="d2" /> が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="72084-608"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-609"><xref:System.Decimal.op_Inequality%2A>メソッドの非等値演算子の動作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-609">The <xref:System.Decimal.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="72084-610">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="72084-610">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/inequality1.cs#2)]
 [!code-vb[System.Decimal.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/inequality1.vb#2)]  
  
 <span data-ttu-id="72084-611">使用している言語がカスタム演算子をサポートしていない場合は、次の手法のいずれかを使用して非等値をテストできます。</span><span class="sxs-lookup"><span data-stu-id="72084-611">If the language you're using doesn't support custom operators, you can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="72084-612">呼び出す、<xref:System.Decimal.Compare%2A>メソッドで、2 つの間のリレーションシップを示す<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-612">Calling the <xref:System.Decimal.Compare%2A> method, which indicates the relationship between two <xref:System.Decimal> values.</span></span>  
  
-   <span data-ttu-id="72084-613">呼び出す、<xref:System.Decimal.Equals%2A>メソッドとその値を反転します。</span><span class="sxs-lookup"><span data-stu-id="72084-613">Calling the <xref:System.Decimal.Equals%2A> method and reversing its value.</span></span>  
  
 <span data-ttu-id="72084-614">この演算子を同等の方法は、します。 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="72084-614">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="72084-615">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="72084-615">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="72084-616">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="72084-616">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="72084-617">指定した <see cref="T:System.Decimal" /> が、指定した別の <see cref="T:System.Decimal" /> より小さいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-617">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is less than another specified <see cref="T:System.Decimal" />.</span></span></summary>
        <returns>
          <span data-ttu-id="72084-618"><paramref name="d1" /> が <paramref name="d2" /> より小さい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="72084-618"><see langword="true" /> if <paramref name="d1" /> is less than <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-619"><xref:System.Decimal.op_LessThan%2A>メソッド定義の演算子よりも低い<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-619">The <xref:System.Decimal.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="72084-620">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="72084-620">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthan1.cs#15)]
 [!code-vb[System.Decimal.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan1.vb#15)]  
  
 <span data-ttu-id="72084-621">カスタム演算子をサポートしない言語を呼び出すことができます、<xref:System.Decimal.Compare%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="72084-621">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="72084-622">これらを呼び出すこともできます、<xref:System.Decimal.op_LessThan%2A>メソッドを直接として次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="72084-622">They may also be able to call the <xref:System.Decimal.op_LessThan%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan2.vb#16)]  
  
 <span data-ttu-id="72084-623">この演算子を同等の方法は、します。 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="72084-623">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="72084-624">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="72084-624">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="72084-625">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="72084-625">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="72084-626">指定した <see cref="T:System.Decimal" /> が、指定したも別の <see cref="T:System.Decimal" /> 以下であるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-626">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is less than or equal to another specified <see cref="T:System.Decimal" />.</span></span></summary>
        <returns>
          <span data-ttu-id="72084-627"><paramref name="d1" /> が <paramref name="d2" /> 以下の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="72084-627"><see langword="true" /> if <paramref name="d1" /> is less than or equal to <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-628"><xref:System.Decimal.op_LessThanOrEqual%2A>メソッドは、以下の操作を定義よりの以下演算子<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-628">The <xref:System.Decimal.op_LessThanOrEqual%2A> method defines the operation of the less than or equal operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="72084-629">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="72084-629">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthanorequal1.cs#17)]
 [!code-vb[System.Decimal.Operators#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal1.vb#17)]  
  
 <span data-ttu-id="72084-630">カスタム演算子をサポートしない言語を呼び出すことができます、<xref:System.Decimal.Compare%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="72084-630">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="72084-631">これらを呼び出すこともできます、<xref:System.Decimal.op_LessThanOrEqual%2A>メソッドを直接として次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="72084-631">They may also be able to call the <xref:System.Decimal.op_LessThanOrEqual%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal2.vb#18)]  
  
 <span data-ttu-id="72084-632">この演算子を同等の方法は、します。 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="72084-632">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Modulus">
      <MemberSignature Language="C#" Value="public static decimal operator % (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Modulus(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Mod (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator %(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="72084-633">被除数。</span><span class="sxs-lookup"><span data-stu-id="72084-633">The dividend.</span></span></param>
        <param name="d2"><span data-ttu-id="72084-634">除数。</span><span class="sxs-lookup"><span data-stu-id="72084-634">The divisor.</span></span></param>
        <summary><span data-ttu-id="72084-635">指定した 2 つの <see cref="T:System.Decimal" /> 値を除算した結果の剰余を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-635">Returns the remainder resulting from dividing two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="72084-636"><paramref name="d1" /> を <paramref name="d2" /> で除算した結果の剰余。</span><span class="sxs-lookup"><span data-stu-id="72084-636">The remainder resulting from dividing <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-637"><xref:System.Decimal.op_Modulus%2A>メソッドの剰余演算子の動作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-637">The <xref:System.Decimal.op_Modulus%2A> method defines the operation of the modulus operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="72084-638">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="72084-638">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/modulus1.cs#19)]
 [!code-vb[System.Decimal.Operators#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/modulus1.vb#19)]  
  
 <span data-ttu-id="72084-639">使用している言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Remainder%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="72084-639">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Remainder%2A> method instead.</span></span>  
  
 <span data-ttu-id="72084-640">剰余演算で値の戻り値の符号は、被除数の符号に依存します。</span><span class="sxs-lookup"><span data-stu-id="72084-640">The sign of the value return by the modulus operation depends on the sign of dividend.</span></span> <span data-ttu-id="72084-641">被除数が正の場合は、剰余演算が陽性の結果を返します負の場合、剰余演算は、負の値の結果を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-641">If dividend is positive, the modulus operation returns a positive result; if it is negative, the modulus operation returns a negative result.</span></span>  
  
 <span data-ttu-id="72084-642">この演算子を同等の方法は、します。 <xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="72084-642">The equivalent method for this operator is <xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="72084-643"><paramref name="d2" /> は <see langword="zero" />です。</span><span class="sxs-lookup"><span data-stu-id="72084-643"><paramref name="d2" /> is <see langword="zero" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-644">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-644">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Remainder(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static decimal operator * (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Multiply(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator *(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="72084-645">乗算する 1 番目の値。</span><span class="sxs-lookup"><span data-stu-id="72084-645">The first value to multiply.</span></span></param>
        <param name="d2"><span data-ttu-id="72084-646">乗算する 2 番目の値。</span><span class="sxs-lookup"><span data-stu-id="72084-646">The second value to multiply.</span></span></param>
        <summary><span data-ttu-id="72084-647">指定された 2 つの <see cref="T:System.Decimal" /> 値を乗算します。</span><span class="sxs-lookup"><span data-stu-id="72084-647">Multiplies two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="72084-648"><paramref name="d1" /> と <paramref name="d2" /> を乗算した結果。</span><span class="sxs-lookup"><span data-stu-id="72084-648">The result of multiplying <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-649"><xref:System.Decimal.op_Multiply%2A>メソッドの乗算演算子の動作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-649">The <xref:System.Decimal.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="72084-650">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="72084-650">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/multiply1.cs#20)]
 [!code-vb[System.Decimal.Operators#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/multiply1.vb#20)]  
  
 <span data-ttu-id="72084-651">使用している言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Multiply%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="72084-651">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Multiply%2A> method instead.</span></span>  
  
 <span data-ttu-id="72084-652">この演算子を同等の方法は、します。 <xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="72084-652">The equivalent method for this operator is <xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-653">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-653">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static decimal operator - (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Subtraction(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator -(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="72084-654">被減数。</span><span class="sxs-lookup"><span data-stu-id="72084-654">The minuend.</span></span></param>
        <param name="d2"><span data-ttu-id="72084-655">減数。</span><span class="sxs-lookup"><span data-stu-id="72084-655">The subtrahend.</span></span></param>
        <summary><span data-ttu-id="72084-656">2 つの指定した <see cref="T:System.Decimal" /> 値で減算を実行します。</span><span class="sxs-lookup"><span data-stu-id="72084-656">Subtracts two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="72084-657"><paramref name="d2" /> から <paramref name="d1" /> を減算した結果。</span><span class="sxs-lookup"><span data-stu-id="72084-657">The result of subtracting <paramref name="d2" /> from <paramref name="d1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-658"><xref:System.Decimal.op_Subtraction%2A>メソッドの減算演算子の動作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-658">The <xref:System.Decimal.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="72084-659">次のようなコードが有効にします。</span><span class="sxs-lookup"><span data-stu-id="72084-659">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/subtraction1.cs#21)]
 [!code-vb[System.Decimal.Operators#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/subtraction1.vb#21)]  
  
 <span data-ttu-id="72084-660">使用している言語がカスタム演算子をサポートしていない場合は、呼び出し、<xref:System.Decimal.Subtract%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="72084-660">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead.</span></span>  
  
 <span data-ttu-id="72084-661">この演算子を同等の方法は、します。 <xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="72084-661">The equivalent method for this operator is <xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-662">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-662">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static decimal operator - (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_UnaryNegation(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_UnaryNegation(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator -(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="72084-663">否定する値。</span><span class="sxs-lookup"><span data-stu-id="72084-663">The value to negate.</span></span></param>
        <summary><span data-ttu-id="72084-664">指定した <see cref="T:System.Decimal" /> オペランドの値の符号を逆にします。</span><span class="sxs-lookup"><span data-stu-id="72084-664">Negates the value of the specified <see cref="T:System.Decimal" /> operand.</span></span></summary>
        <returns><span data-ttu-id="72084-665"><paramref name="d" /> に -1 を乗算した結果。</span><span class="sxs-lookup"><span data-stu-id="72084-665">The result of <paramref name="d" /> multiplied by negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-666"><xref:System.Decimal.op_UnaryPlus%2A>メソッドの単項否定演算子 (または加法に関する逆元演算子) の操作を定義する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-666">The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary negation operator (or the additive inverse operator) for <xref:System.Decimal> values.</span></span> <span data-ttu-id="72084-667">操作は、元の数に追加されたときに、0 (ゼロ) で結果を値を生成します。</span><span class="sxs-lookup"><span data-stu-id="72084-667">The operation produces a value that results in 0 (zero) when it is added to the original number.</span></span> <span data-ttu-id="72084-668">カスタム演算子をサポートしない言語を呼び出すことができます、<xref:System.Decimal.Negate%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="72084-668">Languages that do not support custom operators can call the <xref:System.Decimal.Negate%2A> method instead.</span></span>  
  
 <span data-ttu-id="72084-669">この演算子を同等の方法は、します。 <xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="72084-669">The equivalent method for this operator is <xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Negate(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static decimal operator + (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_UnaryPlus(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_UnaryPlus(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator +(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="72084-670">返すオペランド。</span><span class="sxs-lookup"><span data-stu-id="72084-670">The operand to return.</span></span></param>
        <summary><span data-ttu-id="72084-671"><see cref="T:System.Decimal" /> オペランドの値 (オペランドの符号は不変) を返します。</span><span class="sxs-lookup"><span data-stu-id="72084-671">Returns the value of the <see cref="T:System.Decimal" /> operand (the sign of the operand is unchanged).</span></span></summary>
        <returns><span data-ttu-id="72084-672">オペランド <paramref name="d" /> の値。</span><span class="sxs-lookup"><span data-stu-id="72084-672">The value of the operand, <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-673"><xref:System.Decimal.op_UnaryPlus%2A>メソッドを定義、操作の単項プラス演算子の<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-673">The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary positive operator for <xref:System.Decimal> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="72084-674">数値の文字列形式を、それと等価の <see cref="T:System.Decimal" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-674">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span></span></summary>
        <altmember cref="Overload:System.Decimal.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="72084-675">変換する数値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="72084-675">The string representation of the number to convert.</span></span></param>
        <summary><span data-ttu-id="72084-676">数値の文字列形式を、それと等価の <see cref="T:System.Decimal" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-676">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="72084-677"><paramref name="s" /> に含まれている数値と等価。</span><span class="sxs-lookup"><span data-stu-id="72084-677">The equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-678">パラメーター`s`フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="72084-678">Parameter `s` contains a number of the form:</span></span>  
  
 <span data-ttu-id="72084-679">[ws][記号][数字] 桁 [.fractional 桁] [ws]</span><span class="sxs-lookup"><span data-stu-id="72084-679">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="72084-680">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="72084-680">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="72084-681">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="72084-681">The following table describes each element.</span></span>  
  
|<span data-ttu-id="72084-682">要素</span><span class="sxs-lookup"><span data-stu-id="72084-682">Element</span></span>|<span data-ttu-id="72084-683">説明</span><span class="sxs-lookup"><span data-stu-id="72084-683">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="72084-684">*ws*</span><span class="sxs-lookup"><span data-stu-id="72084-684">*ws*</span></span>|<span data-ttu-id="72084-685">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="72084-685">Optional white space.</span></span>|  
|<span data-ttu-id="72084-686">*sign*</span><span class="sxs-lookup"><span data-stu-id="72084-686">*sign*</span></span>|<span data-ttu-id="72084-687">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="72084-687">An optional sign.</span></span>|  
|<span data-ttu-id="72084-688">*digits*</span><span class="sxs-lookup"><span data-stu-id="72084-688">*digits*</span></span>|<span data-ttu-id="72084-689">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="72084-689">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="72084-690">*、*</span><span class="sxs-lookup"><span data-stu-id="72084-690">*,*</span></span>|<span data-ttu-id="72084-691">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="72084-691">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="72084-692">*.*</span><span class="sxs-lookup"><span data-stu-id="72084-692">*.*</span></span>|<span data-ttu-id="72084-693">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="72084-693">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="72084-694">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="72084-694">*fractional-digits*</span></span>|<span data-ttu-id="72084-695">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="72084-695">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="72084-696">パラメーター`s`を使用して解釈されます、<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="72084-696">Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="72084-697">つまり、空白文字と桁区切り記号が許可されているが、通貨記号は表示されません。</span><span class="sxs-lookup"><span data-stu-id="72084-697">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="72084-698">要素を明示的に定義 (などの通貨記号、桁区切り記号、および空白) 内に存在することができます`s`、いずれかの方法、<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>または<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="72084-698">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use either the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="72084-699">パラメーター`s`の書式設定情報を使用して解析は、<xref:System.Globalization.NumberFormatInfo>現在のシステムのカルチャ用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="72084-699">Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> initialized for the current system culture.</span></span> <span data-ttu-id="72084-700">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="72084-700">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="72084-701">いくつか他のカルチャの書式情報を使用して文字列を解析するを使用して、<xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>または<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-701">To parse a string using the formatting information of some other culture, use the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> or <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="72084-702">必要に応じての値`s`近似値に丸められます。</span><span class="sxs-lookup"><span data-stu-id="72084-702">If necessary, the value of `s` is rounded using rounding to nearest.</span></span>  
  
 <span data-ttu-id="72084-703">A <xref:System.Decimal> 29 桁の有効桁数を持ちます。</span><span class="sxs-lookup"><span data-stu-id="72084-703">A <xref:System.Decimal> has 29 digits of precision.</span></span> <span data-ttu-id="72084-704">場合`s`、複数の 29 桁の数字を持つが、小数部分を持ちの範囲内が数値を表して<xref:System.Decimal.MaxValue>と<xref:System.Decimal.MinValue>数値は丸められます、近似値に丸め 29 桁は切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="72084-704">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="72084-705">解析操作中には、区切り記号がで発生した場合、`s`パラメーター、および適用可能な通貨または 10 進数と桁区切り記号が同じ、解析操作では、区切り文字が桁区切り記号ではなく、小数点区切り文字である前提としています。</span><span class="sxs-lookup"><span data-stu-id="72084-705">If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="72084-706">区切り記号の詳細については、次を参照してください。 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>、および<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>です。</span><span class="sxs-lookup"><span data-stu-id="72084-706">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-707">次のコード例では、<xref:System.Decimal.Parse%28System.String%29>の文字列表現を解析します<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-707">The following code example uses the <xref:System.Decimal.Parse%28System.String%29> method to parse string representations of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Decimal.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#1)]
 [!code-vb[System.Decimal.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72084-708"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="72084-708"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="72084-709"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="72084-709"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-710"><paramref name="s" /> が <see cref="F:System.Decimal.MinValue" /> 未満の数値か、<see cref="F:System.Decimal.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="72084-710"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="72084-711">変換する数値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="72084-711">The string representation of the number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="72084-712"><c>s</c> で使用可能なスタイル要素を示す、<see cref="T:System.Globalization.NumberStyles" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="72084-712">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="72084-713">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Number" /> です。</span><span class="sxs-lookup"><span data-stu-id="72084-713">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span></span></param>
        <summary><span data-ttu-id="72084-714">指定のスタイルで表現された数値の文字列形式を、それと等価な <see cref="T:System.Decimal" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-714">Converts the string representation of a number in a specified style to its <see cref="T:System.Decimal" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="72084-715"><paramref name="style" /> で指定されたとおりの <paramref name="s" /> に格納されている数値と等価の <see cref="T:System.Decimal" /> 数値。</span><span class="sxs-lookup"><span data-stu-id="72084-715">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="style" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-716">`style`パラメーター スタイル要素定義 (何千もなどの区切り記号、空白文字、および通貨記号) で許容される、`s`解析操作が成功するためのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="72084-716">The `style` parameter defines the style elements (such as thousands separators, white space, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="72084-717">ビット フラグの組み合わせを可能にする必要があります、<xref:System.Globalization.NumberStyles>列挙します。</span><span class="sxs-lookup"><span data-stu-id="72084-717">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="72084-718">次<xref:System.Globalization.NumberStyles>メンバーがサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="72084-718">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="72084-719">値に応じて`style`、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="72084-719">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="72084-720">[ws][$][記号][数字] 桁 [.fractional 桁] [e [サインイン] 桁] [ws]</span><span class="sxs-lookup"><span data-stu-id="72084-720">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="72084-721">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="72084-721">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="72084-722">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="72084-722">The following table describes each element.</span></span>  
  
|<span data-ttu-id="72084-723">要素</span><span class="sxs-lookup"><span data-stu-id="72084-723">Element</span></span>|<span data-ttu-id="72084-724">説明</span><span class="sxs-lookup"><span data-stu-id="72084-724">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="72084-725">*ws*</span><span class="sxs-lookup"><span data-stu-id="72084-725">*ws*</span></span>|<span data-ttu-id="72084-726">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="72084-726">Optional white space.</span></span> <span data-ttu-id="72084-727">先頭に空白文字は使用できません`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>の最後に表示されることができますフラグ、およびその`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="72084-727">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="72084-728">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="72084-728">A culture-specific currency symbol.</span></span> <span data-ttu-id="72084-729">文字列内での位置がによって定義された、<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>現在のカルチャのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="72084-729">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="72084-730">現在のカルチャの通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="72084-730">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="72084-731">*sign*</span><span class="sxs-lookup"><span data-stu-id="72084-731">*sign*</span></span>|<span data-ttu-id="72084-732">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="72084-732">An optional sign.</span></span> <span data-ttu-id="72084-733">先頭に表示できる符号`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>フラグ、およびそのがの末尾に置くことができます`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="72084-733">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="72084-734">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="72084-734">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="72084-735">*digits*</span><span class="sxs-lookup"><span data-stu-id="72084-735">*digits*</span></span>|<span data-ttu-id="72084-736">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="72084-736">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="72084-737">*、*</span><span class="sxs-lookup"><span data-stu-id="72084-737">*,*</span></span>|<span data-ttu-id="72084-738">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="72084-738">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="72084-739">現在のカルチャの数千に区切り記号が表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="72084-739">The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="72084-740">*.*</span><span class="sxs-lookup"><span data-stu-id="72084-740">*.*</span></span>|<span data-ttu-id="72084-741">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="72084-741">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="72084-742">現在のカルチャの小数点記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="72084-742">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="72084-743">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="72084-743">*fractional-digits*</span></span>|<span data-ttu-id="72084-744">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="72084-744">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="72084-745">小数部の桁が表示できる`s`場合にのみ、`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="72084-745">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="72084-746">*e*</span><span class="sxs-lookup"><span data-stu-id="72084-746">*e*</span></span>|<span data-ttu-id="72084-747">'E' または 'E' 文字は、値を指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="72084-747">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="72084-748">`s`場合、パラメーターは指数表記の数値を表すことができる`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="72084-748">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
  
 <span data-ttu-id="72084-749">数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None>スタイル) が正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="72084-749">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully.</span></span> <span data-ttu-id="72084-750">残りの<xref:System.Globalization.NumberStyles>メンバーを制御する可能性がありますが、入力文字列内に存在する必要はありません要素。</span><span class="sxs-lookup"><span data-stu-id="72084-750">The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="72084-751">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在可能な要素に影響を与える`s`です。</span><span class="sxs-lookup"><span data-stu-id="72084-751">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="72084-752">NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="72084-752">NumberStyles value</span></span>|<span data-ttu-id="72084-753">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="72084-753">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="72084-754">*桁*要素のみです。</span><span class="sxs-lookup"><span data-stu-id="72084-754">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="72084-755">*.*</span><span class="sxs-lookup"><span data-stu-id="72084-755">The *.*</span></span> <span data-ttu-id="72084-756">および*小数部の桁*要素。</span><span class="sxs-lookup"><span data-stu-id="72084-756">and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="72084-757">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="72084-757">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="72084-758">このフラグは、形式で値をサポートしている*桁*E*桁*以外の場合は追加のフラグが正常に正または負の符号および小数点記号などの要素を含む文字列を解析する必要です。</span><span class="sxs-lookup"><span data-stu-id="72084-758">This flag supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="72084-759">*Ws*の先頭にある要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="72084-759">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="72084-760">*Ws*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="72084-760">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="72084-761">*記号*の先頭にある要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="72084-761">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="72084-762">*記号*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="72084-762">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="72084-763">*記号*数値の値を囲むかっこの形式での要素。</span><span class="sxs-lookup"><span data-stu-id="72084-763">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="72084-764">*、*要素。</span><span class="sxs-lookup"><span data-stu-id="72084-764">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="72084-765">* $ *要素。</span><span class="sxs-lookup"><span data-stu-id="72084-765">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="72084-766">すべて。</span><span class="sxs-lookup"><span data-stu-id="72084-766">All.</span></span> <span data-ttu-id="72084-767">`s`パラメーターには、16 進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="72084-767">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="72084-768">*Ws*先頭または末尾の位置にある要素`s`、*記号*の先頭に`s`、および*です。*</span><span class="sxs-lookup"><span data-stu-id="72084-768">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*</span></span> <span data-ttu-id="72084-769">記号です。</span><span class="sxs-lookup"><span data-stu-id="72084-769">symbol.</span></span> <span data-ttu-id="72084-770">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="72084-770">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="72084-771">`ws`、 `sign`、 *、*、および*です。*</span><span class="sxs-lookup"><span data-stu-id="72084-771">The `ws`, `sign`, *,*, and *.*</span></span> <span data-ttu-id="72084-772">要素です。</span><span class="sxs-lookup"><span data-stu-id="72084-772">elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="72084-773">すべてのスタイルを除く`s`16 進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="72084-773">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="72084-774">`s`で書式設定情報を使用してパラメーターを解析、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のシステムのカルチャ用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="72084-774">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="72084-775">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="72084-775">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="72084-776">A <xref:System.Decimal> 29 桁の有効桁数を持ちます。</span><span class="sxs-lookup"><span data-stu-id="72084-776">A <xref:System.Decimal> has 29 digits of precision.</span></span> <span data-ttu-id="72084-777">場合`s`、複数の 29 桁の数字を持つが、小数部分を持ちの範囲内が数値を表して<xref:System.Decimal.MaxValue>と<xref:System.Decimal.MinValue>数値は丸められます、近似値に丸め 29 桁は切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="72084-777">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="72084-778">区切り記号が発生した場合、`s`解析操作中にパラメーター`styles`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>値、および適用可能な通貨または 10 進数と桁区切り記号が同じ、解析操作では、区切り文字が桁区切り記号ではなく、小数点区切り文字である前提としています。</span><span class="sxs-lookup"><span data-stu-id="72084-778">If a separator is encountered in the `s` parameter during a parse operation, `styles` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> values, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="72084-779">区切り記号の詳細については、次を参照してください。 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>、および<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>です。</span><span class="sxs-lookup"><span data-stu-id="72084-779">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-780">次のコード例では、<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29>の文字列形式を解析します<xref:System.Decimal>EN-US カルチャを使用して値をします。</span><span class="sxs-lookup"><span data-stu-id="72084-780">The following code example uses the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method to parse the string representations of <xref:System.Decimal> values using the en-US culture.</span></span>  
  
 [!code-csharp[System.Decimal.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#2)]
 [!code-vb[System.Decimal.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72084-781"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="72084-781"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="72084-782"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="72084-782"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="72084-783">- または -</span><span class="sxs-lookup"><span data-stu-id="72084-783">-or-</span></span>  
  
 <span data-ttu-id="72084-784"><paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値です。</span><span class="sxs-lookup"><span data-stu-id="72084-784"><paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="72084-785"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="72084-785"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-786"><paramref name="s" /> が <see cref="F:System.Decimal.MinValue" /> 未満の数値か、<see cref="F:System.Decimal.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="72084-786"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></span></span></exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="72084-787">変換する数値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="72084-787">The string representation of the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="72084-788"><c>s</c> に関するカルチャに固有の解析情報を提供する <see cref="T:System.IFormatProvider" />。</span><span class="sxs-lookup"><span data-stu-id="72084-788">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific parsing information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="72084-789">指定したカルチャ固有の書式情報を使用して、文字列形式の数値をそれと等価の <see cref="T:System.Decimal" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-789">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="72084-790"><paramref name="provider" /> で指定されたとおりの <paramref name="s" /> に格納されている数値と等価の <see cref="T:System.Decimal" /> 数値。</span><span class="sxs-lookup"><span data-stu-id="72084-790">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-791">このオーバー ロード、<xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29>さまざまな方法でフォーマットできるテキストに変換するメソッドが使用される一般的な<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-791">This overload of the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> method is commonly used to convert text that can be formatted in a variety of ways to a <xref:System.Decimal> value.</span></span> <span data-ttu-id="72084-792">たとえば、数値の値を HTML テキスト ボックスに、ユーザーが入力したテキストに変換する、使用できます。</span><span class="sxs-lookup"><span data-stu-id="72084-792">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="72084-793">`s`パラメーターには、フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="72084-793">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="72084-794">[ws][記号][数字] 桁 [.fractional 桁] [ws]</span><span class="sxs-lookup"><span data-stu-id="72084-794">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="72084-795">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="72084-795">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="72084-796">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="72084-796">The following table describes each element.</span></span>  
  
|<span data-ttu-id="72084-797">要素</span><span class="sxs-lookup"><span data-stu-id="72084-797">Element</span></span>|<span data-ttu-id="72084-798">説明</span><span class="sxs-lookup"><span data-stu-id="72084-798">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="72084-799">*ws*</span><span class="sxs-lookup"><span data-stu-id="72084-799">*ws*</span></span>|<span data-ttu-id="72084-800">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="72084-800">Optional white space.</span></span>|  
|<span data-ttu-id="72084-801">*sign*</span><span class="sxs-lookup"><span data-stu-id="72084-801">*sign*</span></span>|<span data-ttu-id="72084-802">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="72084-802">An optional sign.</span></span>|  
|<span data-ttu-id="72084-803">*digits*</span><span class="sxs-lookup"><span data-stu-id="72084-803">*digits*</span></span>|<span data-ttu-id="72084-804">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="72084-804">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="72084-805">*、*</span><span class="sxs-lookup"><span data-stu-id="72084-805">*,*</span></span>|<span data-ttu-id="72084-806">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="72084-806">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="72084-807">*.*</span><span class="sxs-lookup"><span data-stu-id="72084-807">*.*</span></span>|<span data-ttu-id="72084-808">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="72084-808">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="72084-809">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="72084-809">*fractional-digits*</span></span>|<span data-ttu-id="72084-810">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="72084-810">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="72084-811">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="72084-811">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="72084-812">つまり、空白文字と桁区切り記号が許可されているが、通貨記号は表示されません。</span><span class="sxs-lookup"><span data-stu-id="72084-812">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="72084-813">要素を明示的に定義 (などの通貨記号、桁区切り記号、および空白) 内に存在することができます`s`を使用して、<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-813">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="72084-814">`provider`パラメーターは、<xref:System.IFormatProvider>実装など、<xref:System.Globalization.NumberFormatInfo>または<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72084-814">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="72084-815">`provider`パラメーターの解析中に使用されるカルチャに固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="72084-815">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="72084-816">`provider` が `null` の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="72084-816">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="72084-817">A <xref:System.Decimal> 29 桁の有効桁数が付きます。</span><span class="sxs-lookup"><span data-stu-id="72084-817">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="72084-818">場合`s`、複数の 29 桁の数字を持つが、小数部分を持ちの範囲内が数値を表して<xref:System.Decimal.MaxValue>と<xref:System.Decimal.MinValue>数値は丸められます、近似値に丸め 29 桁は切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="72084-818">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="72084-819">区切り記号が発生した場合、`s`解析操作では、および適用可能な通貨または 10 進数の間にパラメーターと桁区切り記号が同じには、解析操作では、区切り文字が桁区切り記号ではなく、小数点区切り文字である前提としています。</span><span class="sxs-lookup"><span data-stu-id="72084-819">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="72084-820">区切り記号の詳細については、次を参照してください。 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>、および<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>です。</span><span class="sxs-lookup"><span data-stu-id="72084-820">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-821">次の例は、ボタンは、Web フォームのイベント ハンドラーをクリックします。</span><span class="sxs-lookup"><span data-stu-id="72084-821">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="72084-822">によって返される配列を使用して、<xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>プロパティをユーザーのロケールを決定します。</span><span class="sxs-lookup"><span data-stu-id="72084-822">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="72084-823">インスタンス化し、<xref:System.Globalization.CultureInfo>そのロケールに対応するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72084-823">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="72084-824"><xref:System.Globalization.NumberFormatInfo>に属しているオブジェクト<xref:System.Globalization.CultureInfo>にオブジェクトが渡され、<xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29>をユーザーに変換するメソッドの入力、<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-824">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[ParseMethod#3](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#3)]
 [!code-vb[ParseMethod#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72084-825"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="72084-825"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="72084-826"><paramref name="s" /> の書式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="72084-826"><paramref name="s" /> is not of the correct format</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-827"><paramref name="s" /> が <see cref="F:System.Decimal.MinValue" /> 未満の数値か、<see cref="F:System.Decimal.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="72084-827"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></span></span></exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Decimal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="72084-828">変換する数値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="72084-828">The string representation of the number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="72084-829"><c>s</c> で使用可能なスタイル要素を示す、<see cref="T:System.Globalization.NumberStyles" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="72084-829">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="72084-830">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Number" /> です。</span><span class="sxs-lookup"><span data-stu-id="72084-830">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span></span></param>
        <param name="provider"><span data-ttu-id="72084-831"><c>s</c> の書式設定に関するカルチャ固有の情報を提供する <see cref="T:System.IFormatProvider" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72084-831">An <see cref="T:System.IFormatProvider" /> object that supplies culture-specific information about the format of <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="72084-832">指定したスタイルとカルチャ固有の書式を使用して、文字列形式の数値をそれと等価の <see cref="T:System.Decimal" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-832">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified style and culture-specific format.</span></span></summary>
        <returns><span data-ttu-id="72084-833"><see cref="T:System.Decimal" /> と <paramref name="s" /> に指定されたとおり、<paramref name="style" /> に格納されている数値と等価の <paramref name="provider" /> 数値。</span><span class="sxs-lookup"><span data-stu-id="72084-833">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="style" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-834">`style`パラメーターの使用可能な形式を定義する、`s`解析操作が成功するためのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="72084-834">The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="72084-835">ビット フラグの組み合わせを可能にする必要があります、<xref:System.Globalization.NumberStyles>列挙します。</span><span class="sxs-lookup"><span data-stu-id="72084-835">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="72084-836">次<xref:System.Globalization.NumberStyles>メンバーがサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="72084-836">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="72084-837">値に応じて`style`、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="72084-837">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="72084-838">[ws][$][記号][数字] 桁 [.fractional 桁] [e [サインイン] 桁] [ws]</span><span class="sxs-lookup"><span data-stu-id="72084-838">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="72084-839">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="72084-839">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="72084-840">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="72084-840">The following table describes each element.</span></span>  
  
|<span data-ttu-id="72084-841">要素</span><span class="sxs-lookup"><span data-stu-id="72084-841">Element</span></span>|<span data-ttu-id="72084-842">説明</span><span class="sxs-lookup"><span data-stu-id="72084-842">Description</span></span>|  
|-------------|-----------------|  
|*$*|<span data-ttu-id="72084-843">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="72084-843">A culture-specific currency symbol.</span></span> <span data-ttu-id="72084-844">文字列内での位置がによって定義された、<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A>と<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>のプロパティ、<xref:System.Globalization.NumberFormatInfo>によって返されるオブジェクト、<xref:System.IFormatProvider.GetFormat%2A>のメソッド、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="72084-844">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="72084-845">通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="72084-845">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="72084-846">*ws*</span><span class="sxs-lookup"><span data-stu-id="72084-846">*ws*</span></span>|<span data-ttu-id="72084-847">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="72084-847">Optional white space.</span></span> <span data-ttu-id="72084-848">先頭に空白文字は使用できません`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>の最後に表示されることができますフラグ、およびその`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="72084-848">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="72084-849">*sign*</span><span class="sxs-lookup"><span data-stu-id="72084-849">*sign*</span></span>|<span data-ttu-id="72084-850">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="72084-850">An optional sign.</span></span> <span data-ttu-id="72084-851">先頭に表示できる符号`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>フラグ、およびそのがの末尾に置くことができます`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="72084-851">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="72084-852">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="72084-852">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="72084-853">*digits*</span><span class="sxs-lookup"><span data-stu-id="72084-853">*digits*</span></span>|<span data-ttu-id="72084-854">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="72084-854">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="72084-855">*、*</span><span class="sxs-lookup"><span data-stu-id="72084-855">*,*</span></span>|<span data-ttu-id="72084-856">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="72084-856">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="72084-857">数千によって定義されているカルチャの区切り記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="72084-857">The thousands separator of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="72084-858">*.*</span><span class="sxs-lookup"><span data-stu-id="72084-858">*.*</span></span>|<span data-ttu-id="72084-859">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="72084-859">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="72084-860">定義されているカルチャの小数点記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="72084-860">The decimal point symbol of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="72084-861">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="72084-861">*fractional-digits*</span></span>|<span data-ttu-id="72084-862">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="72084-862">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="72084-863">小数部の桁が表示できる`s`場合にのみ、`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="72084-863">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="72084-864">*e*</span><span class="sxs-lookup"><span data-stu-id="72084-864">*e*</span></span>|<span data-ttu-id="72084-865">'E' または 'E' 文字は、値を指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="72084-865">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="72084-866">`s`場合、パラメーターは指数表記の数値を表すことができる`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="72084-866">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
  
 <span data-ttu-id="72084-867">数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None>スタイル) が正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="72084-867">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully.</span></span> <span data-ttu-id="72084-868">残りの<xref:System.Globalization.NumberStyles>メンバーを制御する可能性がありますが、入力文字列内に存在する必要はありません要素。</span><span class="sxs-lookup"><span data-stu-id="72084-868">The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="72084-869">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在可能な要素に影響を与える`s`です。</span><span class="sxs-lookup"><span data-stu-id="72084-869">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="72084-870">NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="72084-870">NumberStyles value</span></span>|<span data-ttu-id="72084-871">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="72084-871">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="72084-872">*桁*要素のみです。</span><span class="sxs-lookup"><span data-stu-id="72084-872">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="72084-873">*.*</span><span class="sxs-lookup"><span data-stu-id="72084-873">The *.*</span></span> <span data-ttu-id="72084-874">および*小数部の桁*要素。</span><span class="sxs-lookup"><span data-stu-id="72084-874">and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="72084-875">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="72084-875">The `s` parameter can also use exponential notation.</span></span>  <span data-ttu-id="72084-876">このフラグは、形式で値をサポートしている*桁*E*桁*以外の場合は追加のフラグが正常に正または負の符号および小数点記号などの要素を含む文字列を解析する必要です。</span><span class="sxs-lookup"><span data-stu-id="72084-876">This flag supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="72084-877">*Ws*の先頭にある要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="72084-877">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="72084-878">*Ws*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="72084-878">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="72084-879">*記号*の先頭にある要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="72084-879">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="72084-880">*記号*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="72084-880">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="72084-881">*記号*数値の値を囲むかっこの形式での要素。</span><span class="sxs-lookup"><span data-stu-id="72084-881">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="72084-882">*、*要素。</span><span class="sxs-lookup"><span data-stu-id="72084-882">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="72084-883">* $ *要素。</span><span class="sxs-lookup"><span data-stu-id="72084-883">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="72084-884">すべて。</span><span class="sxs-lookup"><span data-stu-id="72084-884">All.</span></span> <span data-ttu-id="72084-885">`s`パラメーターには、16 進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="72084-885">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="72084-886">*Ws*先頭または末尾の位置にある要素`s`、*記号*の先頭に`s`、および*.*記号です。</span><span class="sxs-lookup"><span data-stu-id="72084-886">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*symbol.</span></span> <span data-ttu-id="72084-887">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="72084-887">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="72084-888">`ws`、 `sign`、 *、*、および*です。*</span><span class="sxs-lookup"><span data-stu-id="72084-888">The `ws`, `sign`, *,*, and *.*</span></span> <span data-ttu-id="72084-889">要素です。</span><span class="sxs-lookup"><span data-stu-id="72084-889">elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="72084-890">すべてのスタイルを除く`s`16 進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="72084-890">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="72084-891">`provider`パラメーターは、<xref:System.IFormatProvider>実装など、<xref:System.Globalization.NumberFormatInfo>または<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72084-891">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="72084-892">`provider`パラメーターの解析中に使用されるカルチャに固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="72084-892">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="72084-893">`provider` が `null` の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="72084-893">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="72084-894">A <xref:System.Decimal> 29 桁の有効桁数が付きます。</span><span class="sxs-lookup"><span data-stu-id="72084-894">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="72084-895">場合`s`、複数の 29 桁の数字を持つが、小数部分を持ちの範囲内が数値を表して<xref:System.Decimal.MaxValue>と<xref:System.Decimal.MinValue>数値は丸められます、近似値に丸め 29 桁は切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="72084-895">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="72084-896">区切り記号が発生した場合、`s`解析操作では、および適用可能な通貨または 10 進数の間にパラメーターと桁区切り記号が同じには、解析操作では、区切り文字が桁区切り記号ではなく、小数点区切り文字である前提としています。</span><span class="sxs-lookup"><span data-stu-id="72084-896">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="72084-897">区切り記号の詳細については、次を参照してください。 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>、および<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>です。</span><span class="sxs-lookup"><span data-stu-id="72084-897">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-898">次の例は、さまざまな`style`と`provider`パラメーターの文字列形式を解析する<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-898">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Decimal.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#3)]
 [!code-vb[System.Decimal.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="72084-899"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="72084-899"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-900"><paramref name="s" /> が <see cref="F:System.Decimal.MinValue" /> 未満の数値か、<see cref="F:System.Decimal.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="72084-900"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72084-901"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="72084-901"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="72084-902"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="72084-902"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="72084-903">- または -</span><span class="sxs-lookup"><span data-stu-id="72084-903">-or-</span></span>  
  
 <span data-ttu-id="72084-904"><paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値です。</span><span class="sxs-lookup"><span data-stu-id="72084-904"><paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Remainder">
      <MemberSignature Language="C#" Value="public static decimal Remainder (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Remainder(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Remainder(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Remainder (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Remainder(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="72084-905">被除数。</span><span class="sxs-lookup"><span data-stu-id="72084-905">The dividend.</span></span></param>
        <param name="d2"><span data-ttu-id="72084-906">除数。</span><span class="sxs-lookup"><span data-stu-id="72084-906">The divisor.</span></span></param>
        <summary><span data-ttu-id="72084-907">2 つの <see cref="T:System.Decimal" /> 値の除算後の剰余を計算します。</span><span class="sxs-lookup"><span data-stu-id="72084-907">Computes the remainder after dividing two <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="72084-908"><paramref name="d1" /> を <paramref name="d2" /> で除算した結果生じた剰余。</span><span class="sxs-lookup"><span data-stu-id="72084-908">The remainder after dividing <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72084-909">次の例では、<xref:System.Decimal.Remainder%2A>一連の除算演算の余りを計算する方法です。</span><span class="sxs-lookup"><span data-stu-id="72084-909">The following example uses the <xref:System.Decimal.Remainder%2A> method to calculate the remainder in a series of division operations.</span></span>  
  
 [!code-csharp[System.Decimal.Remainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.remainder/cs/remainder.cs#1)]
 [!code-vb[System.Decimal.Remainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.remainder/vb/remainder.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="72084-910"><paramref name="d2" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="72084-910"><paramref name="d2" /> is zero.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-911">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-911">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="72084-912">最も近い整数または指定した小数点数に値を丸めます。</span><span class="sxs-lookup"><span data-stu-id="72084-912">Rounds a value to the nearest integer or specified number of decimal places.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="72084-913">丸め対象の 10 進数。</span><span class="sxs-lookup"><span data-stu-id="72084-913">A decimal number to round.</span></span></param>
        <summary><span data-ttu-id="72084-914">10 進値を最も近い整数に丸めます。</span><span class="sxs-lookup"><span data-stu-id="72084-914">Rounds a decimal value to the nearest integer.</span></span></summary>
        <returns><span data-ttu-id="72084-915"><paramref name="d" /> パラメーターの値に最も近い整数。</span><span class="sxs-lookup"><span data-stu-id="72084-915">The integer that is nearest to the <paramref name="d" /> parameter.</span></span> <span data-ttu-id="72084-916"><paramref name="d" /> が 2 つの整数 (一方が偶数でもう一方が奇数) の中間にある場合は偶数が返されます。</span><span class="sxs-lookup"><span data-stu-id="72084-916">If <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-917">このメソッドの動作は IEEE 標準 754、セクション 4 に従います。</span><span class="sxs-lookup"><span data-stu-id="72084-917">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="72084-918">このような丸めと呼ぶことが*半分が均等に丸める*または*銀行型丸め*です。</span><span class="sxs-lookup"><span data-stu-id="72084-918">This kind of rounding is sometimes called *round half to even* or *banker's rounding*.</span></span> <span data-ttu-id="72084-919">常に中間値を単一方向に丸めるに起因するエラーの丸めが最小限に抑えます。</span><span class="sxs-lookup"><span data-stu-id="72084-919">It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.</span></span> <span data-ttu-id="72084-920">呼び出すことと等価である、<xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29>メソッドを`mode`の引数<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="72084-920">It is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-921">次の例の範囲に丸めます<xref:System.Decimal>で 100 ~ 102 を最も近い整数値。</span><span class="sxs-lookup"><span data-stu-id="72084-921">The following example rounds a range of <xref:System.Decimal> values between 100 and 102 to the nearest integer.</span></span> <span data-ttu-id="72084-922">メソッドは、銀行型丸め方式を使用しているために、100.5 が 102 を 100 と 101.5 ラウンドに丸めることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="72084-922">Because the method uses banker's rounding, note that 100.5 rounds to 100 and 101.5 rounds to 102.</span></span>  
  
 [!code-csharp[System.Decimal.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Round/cs/Round1.cs#1)]
 [!code-vb[System.Decimal.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Round/vb/Round1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-923">結果は <see cref="T:System.Decimal" /> 値の範囲外です。</span><span class="sxs-lookup"><span data-stu-id="72084-923">The result is outside the range of a <see cref="T:System.Decimal" /> value.</span></span></exception>
        <altmember cref="M:System.Math.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="72084-924">丸め対象の 10 進数。</span><span class="sxs-lookup"><span data-stu-id="72084-924">A decimal number to round.</span></span></param>
        <param name="decimals"><span data-ttu-id="72084-925">丸めた結果の数値の小数点以下の桁数を指定する 0 から 28 までの値。</span><span class="sxs-lookup"><span data-stu-id="72084-925">A value from 0 to 28 that specifies the number of decimal places to round to.</span></span></param>
        <summary><span data-ttu-id="72084-926"><see cref="T:System.Decimal" /> 値を、指定した小数点以下の桁数に丸めます。</span><span class="sxs-lookup"><span data-stu-id="72084-926">Rounds a <see cref="T:System.Decimal" /> value to a specified number of decimal places.</span></span></summary>
        <returns><span data-ttu-id="72084-927">小数点以下の桁数 <paramref name="decimals" /> に丸められた <paramref name="d" /> と等価の 10 進数。</span><span class="sxs-lookup"><span data-stu-id="72084-927">The decimal number equivalent to <paramref name="d" /> rounded to <paramref name="decimals" /> number of decimal places.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-928">このメソッドを呼び出すことは、<xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>メソッドを`mode`の引数<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>です。ときに`d`ちょうど中間には丸みのある 2 つの値の間で、結果は小数部の右端の位置で偶数桁のある丸められた値。</span><span class="sxs-lookup"><span data-stu-id="72084-928">This method is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.When `d` is exactly halfway between two rounded values, the result is the rounded value that has an even digit in the far right decimal position.</span></span> <span data-ttu-id="72084-929">たとえば、小数点以下 2 桁に丸められる場合、値 2.345 は 2.34 になり、値 2.355 は 2.36 になります。</span><span class="sxs-lookup"><span data-stu-id="72084-929">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span></span> <span data-ttu-id="72084-930">このプロセスと呼ばれる*でもへの丸め*、または*銀行型丸め*です。</span><span class="sxs-lookup"><span data-stu-id="72084-930">This process is known as *rounding toward even*, or *banker's rounding*.</span></span> <span data-ttu-id="72084-931">常に中間値を単一方向に丸めるに起因するエラーの丸めが最小限に抑えます。</span><span class="sxs-lookup"><span data-stu-id="72084-931">It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-932">次の例ではいくつか丸めます。`Decimal`値を、指定した小数点以下の桁数を使用して、`Round`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-932">The following example rounds several `Decimal` values to a specified number of decimal places using the `Round` method.</span></span>  
  
 [!code-csharp[System.Decimal.Round#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Round/cs/Round12.cs#12)]
 [!code-vb[System.Decimal.Round#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Round/vb/Round12.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="72084-933"><paramref name="decimals" /> が 0 から 28 までの範囲内の値ではありません。</span><span class="sxs-lookup"><span data-stu-id="72084-933"><paramref name="decimals" /> is not a value from 0 to 28.</span></span></exception>
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
        <altmember cref="M:System.Decimal.Truncate(System.Decimal)" />
        <altmember cref="M:System.Math.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="72084-934">丸め対象の 10 進数。</span><span class="sxs-lookup"><span data-stu-id="72084-934">A decimal number to round.</span></span></param>
        <param name="mode"><span data-ttu-id="72084-935"><c>d</c> が他の 2 つの数値の中間にある場合に丸める方法を指定する値。</span><span class="sxs-lookup"><span data-stu-id="72084-935">A value that specifies how to round <c>d</c> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="72084-936">10 進値を最も近い整数に丸めます。</span><span class="sxs-lookup"><span data-stu-id="72084-936">Rounds a decimal value to the nearest integer.</span></span> <span data-ttu-id="72084-937">パラメーターは、値が他の 2 つの数値の中間にある場合にその値を丸める方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="72084-937">A parameter specifies how to round the value if it is midway between two other numbers.</span></span></summary>
        <returns><span data-ttu-id="72084-938"><paramref name="d" /> パラメーターの値に最も近い整数。</span><span class="sxs-lookup"><span data-stu-id="72084-938">The integer that is nearest to the <paramref name="d" /> parameter.</span></span> <span data-ttu-id="72084-939"><paramref name="d" /> が 2 つの数値 (一方が偶数でもう一方が奇数) の中間にある場合、<paramref name="mode" /> パラメーターで 2 つの数値のどちらを返すかを決定します。</span><span class="sxs-lookup"><span data-stu-id="72084-939">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, the <paramref name="mode" /> parameter determines which of the two numbers is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-940">中間値では、結果の最下位の数字の後の値は 2 つの数値の中間正確にします。</span><span class="sxs-lookup"><span data-stu-id="72084-940">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="72084-941">たとえば、7.5 は、整数に丸め 場合は、中間値です。</span><span class="sxs-lookup"><span data-stu-id="72084-941">For example, 7.5 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="72084-942">中間値は、最も近い値簡単に識別できません丸め方法、によって指定されることがなく、`mode`引数。</span><span class="sxs-lookup"><span data-stu-id="72084-942">For midpoint values, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument.</span></span> <span data-ttu-id="72084-943"><xref:System.Decimal.Round%2A>メソッドは、中間値を処理するための丸め処理を行う 2 つの規則をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="72084-943">The <xref:System.Decimal.Round%2A> method supports two rounding conventions for handling midpoint values.</span></span>  
  
 <span data-ttu-id="72084-944">ゼロから離れる方向に丸めです。</span><span class="sxs-lookup"><span data-stu-id="72084-944">Rounding away from zero.</span></span>  
 <span data-ttu-id="72084-945">中間値は、次の番号をゼロから離れる方向に丸められます。</span><span class="sxs-lookup"><span data-stu-id="72084-945">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="72084-946">4、3.5 が次の例では、四捨五入 4.5 5 回、-3.5 は-4 でに丸められ、-4.5 が-5 に丸めます。</span><span class="sxs-lookup"><span data-stu-id="72084-946">For example, 3.5 rounds to 4, 4.5 rounds to 5, -3.5 rounds to -4, and -4.5 rounds to -5.</span></span> <span data-ttu-id="72084-947">この形式の丸めがによって表される、<xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType>列挙体のメンバーです。</span><span class="sxs-lookup"><span data-stu-id="72084-947">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="72084-948">ゼロから離れる方向に丸め処理は、丸めた最もよく知られた形式です。</span><span class="sxs-lookup"><span data-stu-id="72084-948">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="72084-949">偶数丸め処理や銀行型丸め方式</span><span class="sxs-lookup"><span data-stu-id="72084-949">Rounding to even, or banker's rounding</span></span>  
 <span data-ttu-id="72084-950">中間値は、最も近い偶数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="72084-950">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="72084-951">たとえば、4、3.5 および 4.5 の両方を丸める、-3.5 と-4.5 の両方が-4 に丸めます。</span><span class="sxs-lookup"><span data-stu-id="72084-951">For example, both 3.5 and 4.5 round to 4, and both -3.5 and -4.5 round to -4.</span></span> <span data-ttu-id="72084-952">この形式の丸めがによって表される、<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>列挙体のメンバーです。</span><span class="sxs-lookup"><span data-stu-id="72084-952">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="72084-953">近似値に丸め処理は、財務や統計に関する操作で使用される丸め処理の標準的な形式です。</span><span class="sxs-lookup"><span data-stu-id="72084-953">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="72084-954">IEEE 標準 754、セクション 4 に準拠しています。</span><span class="sxs-lookup"><span data-stu-id="72084-954">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="72084-955">複数の丸め処理で使用する場合、常に中間値を単一方向に丸めるによって引き起こされる出る丸めの誤差が減少します。</span><span class="sxs-lookup"><span data-stu-id="72084-955">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="72084-956">場合によっては、この丸めエラーを重要なことがあります。</span><span class="sxs-lookup"><span data-stu-id="72084-956">In some cases, this rounding error can be significant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-957">次の例は、によって返される値を表示、<xref:System.Math.Round%28System.Decimal%29>メソッド、<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>メソッドを`mode`の引数<xref:System.MidpointRounding.ToEven>、および<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>メソッドを`mode`の引数<xref:System.MidpointRounding.AwayFromZero>です。</span><span class="sxs-lookup"><span data-stu-id="72084-957">The following example displays values returned by the <xref:System.Math.Round%28System.Decimal%29> method, the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint1.cs#5)]
 [!code-vb[System.Math.Round.Overload#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="72084-958"><paramref name="mode" /> が <see cref="T:System.MidpointRounding" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="72084-958"><paramref name="mode" /> is not a <see cref="T:System.MidpointRounding" /> value.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-959">結果が <see cref="T:System.Decimal" /> オブジェクトの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="72084-959">The result is outside the range of a <see cref="T:System.Decimal" /> object.</span></span></exception>
        <altmember cref="M:System.Math.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="72084-960">丸め対象の 10 進数。</span><span class="sxs-lookup"><span data-stu-id="72084-960">A decimal number to round.</span></span></param>
        <param name="decimals"><span data-ttu-id="72084-961">戻り値の小数点以下の有効桁数 (精度)。</span><span class="sxs-lookup"><span data-stu-id="72084-961">The number of significant decimal places (precision) in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="72084-962"><c>d</c> が他の 2 つの数値の中間にある場合に丸める方法を指定する値。</span><span class="sxs-lookup"><span data-stu-id="72084-962">A value that specifies how to round <c>d</c> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="72084-963">10 進値を指定した精度に丸めます。</span><span class="sxs-lookup"><span data-stu-id="72084-963">Rounds a decimal value to a specified precision.</span></span> <span data-ttu-id="72084-964">パラメーターは、値が他の 2 つの数値の中間にある場合にその値を丸める方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="72084-964">A parameter specifies how to round the value if it is midway between two other numbers.</span></span></summary>
        <returns><span data-ttu-id="72084-965"><paramref name="decimals" /> パラメーターと精度が等価である <paramref name="d" /> パラメーターの値に最も近い数値。</span><span class="sxs-lookup"><span data-stu-id="72084-965">The number that is nearest to the <paramref name="d" /> parameter with a precision equal to the <paramref name="decimals" /> parameter.</span></span> <span data-ttu-id="72084-966"><paramref name="d" /> が 2 つの数値 (一方が偶数でもう一方が奇数) の中間にある場合、<paramref name="mode" /> パラメーターで 2 つの数値のどちらを返すかを決定します。</span><span class="sxs-lookup"><span data-stu-id="72084-966">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, the <paramref name="mode" /> parameter determines which of the two numbers is returned.</span></span> <span data-ttu-id="72084-967"><paramref name="d" /> の精度が <paramref name="decimals" /> より小さい場合、<paramref name="d" /> は変更されずに返されます。</span><span class="sxs-lookup"><span data-stu-id="72084-967">If the precision of <paramref name="d" /> is less than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-968">`decimals`パラメーターは戻り値で、重要な小数点以下桁数を指定し、0 から 28 までの範囲です。</span><span class="sxs-lookup"><span data-stu-id="72084-968">The `decimals` parameter specifies the number of significant decimal places in the return value and ranges from 0 to 28.</span></span> <span data-ttu-id="72084-969">場合`decimals`0 の場合は、整数が返されます。</span><span class="sxs-lookup"><span data-stu-id="72084-969">If `decimals` is zero, an integer is returned.</span></span>  
  
 <span data-ttu-id="72084-970">中間値では、結果の最下位の数字の後の値は 2 つの数値の中間正確にします。</span><span class="sxs-lookup"><span data-stu-id="72084-970">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="72084-971">たとえば、3.47500 は、中間の値である場合に 2 つの小数点以下桁数が丸められますや 7.500 中間の値は整数に丸め 場合です。</span><span class="sxs-lookup"><span data-stu-id="72084-971">For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="72084-972">このような場合は、最も近い値に簡単に識別できません丸め方法、によって指定されることがなく、`mode`引数。</span><span class="sxs-lookup"><span data-stu-id="72084-972">In these cases, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument.</span></span> <span data-ttu-id="72084-973"><xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>メソッドは、中間値を処理するための丸め処理を行う 2 つの規則をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="72084-973">The <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method supports two rounding conventions for handling midpoint values.</span></span>  
  
 <span data-ttu-id="72084-974">ゼロから離れる方向に丸めです。</span><span class="sxs-lookup"><span data-stu-id="72084-974">Rounding away from zero.</span></span>  
 <span data-ttu-id="72084-975">中間値は、次の番号をゼロから離れる方向に丸められます。</span><span class="sxs-lookup"><span data-stu-id="72084-975">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="72084-976">3.8 に 3.75 が次の例では、四捨五入-3.8 に 3.9 に 3.85 ラウンド-3.75 丸める-3.9 に丸められます-3.85 とします。</span><span class="sxs-lookup"><span data-stu-id="72084-976">For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</span></span> <span data-ttu-id="72084-977">この形式の丸めがによって表される、<xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType>列挙体のメンバーです。</span><span class="sxs-lookup"><span data-stu-id="72084-977">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="72084-978">ゼロから離れる方向に丸め処理は、丸めた最もよく知られた形式です。</span><span class="sxs-lookup"><span data-stu-id="72084-978">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="72084-979">偶数丸め処理や銀行型丸め方式</span><span class="sxs-lookup"><span data-stu-id="72084-979">Rounding to even, or banker's rounding</span></span>  
 <span data-ttu-id="72084-980">中間値は、最も近い偶数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="72084-980">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="72084-981">たとえば、3.75 と 3.85 の両方が 3.8 に丸める、-3.75 と-3.85 の両方が-3.8 に丸めます。</span><span class="sxs-lookup"><span data-stu-id="72084-981">For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</span></span> <span data-ttu-id="72084-982">この形式の丸めがによって表される、<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>列挙体のメンバーです。</span><span class="sxs-lookup"><span data-stu-id="72084-982">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="72084-983">近似値に丸め処理は、財務や統計に関する操作で使用される丸め処理の標準的な形式です。</span><span class="sxs-lookup"><span data-stu-id="72084-983">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="72084-984">IEEE 標準 754、セクション 4 に準拠しています。</span><span class="sxs-lookup"><span data-stu-id="72084-984">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="72084-985">複数の丸め処理で使用する場合、常に中間値を単一方向に丸めるによって引き起こされる出る丸めの誤差が減少します。</span><span class="sxs-lookup"><span data-stu-id="72084-985">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="72084-986">場合によっては、この丸めエラーを重要なことがあります。</span><span class="sxs-lookup"><span data-stu-id="72084-986">In some cases, this rounding error can be significant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-987">次の例で使用する方法、<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>メソッドを<xref:System.MidpointRounding>列挙します。</span><span class="sxs-lookup"><span data-stu-id="72084-987">The following example demonstrates how to use the <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="72084-988"><paramref name="decimals" /> が 0 未満か、28 を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-988"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="72084-989"><paramref name="mode" /> が <see cref="T:System.MidpointRounding" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="72084-989"><paramref name="mode" /> is not a <see cref="T:System.MidpointRounding" /> value.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-990">結果が <see cref="T:System.Decimal" /> オブジェクトの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="72084-990">The result is outside the range of a <see cref="T:System.Decimal" /> object.</span></span></exception>
        <altmember cref="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static decimal Subtract (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Subtract(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Subtract(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="72084-991">被減数。</span><span class="sxs-lookup"><span data-stu-id="72084-991">The minuend.</span></span></param>
        <param name="d2"><span data-ttu-id="72084-992">減数。</span><span class="sxs-lookup"><span data-stu-id="72084-992">The subtrahend.</span></span></param>
        <summary><span data-ttu-id="72084-993">指定した <see cref="T:System.Decimal" /> 値から、指定したもう 1 つの値を減算します。</span><span class="sxs-lookup"><span data-stu-id="72084-993">Subtracts one specified <see cref="T:System.Decimal" /> value from another.</span></span></summary>
        <returns><span data-ttu-id="72084-994"><paramref name="d2" /> から <paramref name="d1" /> を減算した結果。</span><span class="sxs-lookup"><span data-stu-id="72084-994">The result of subtracting <paramref name="d2" /> from <paramref name="d1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72084-995">次の例は、の使用を示しています。`Subtract`です。</span><span class="sxs-lookup"><span data-stu-id="72084-995">The following example illustrates the use of `Subtract`.</span></span>  
  
 [!code-cpp[Decimal Example#4](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#4)]
 [!code-csharp[Decimal Example#4](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#4)]
 [!code-vb[Decimal Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-996">戻り値が <see cref="F:System.Decimal.MinValue" /> 未満であるか、<see cref="F:System.Decimal.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-996">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="72084-997">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="72084-997">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="72084-998">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="72084-998">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="72084-999">現在のインスタンスの値がゼロでない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="72084-999"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1000">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="72084-1000">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="72084-1001">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="72084-1001">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="72084-1002">推奨される代替手段が呼び出されて、<xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-1002">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="72084-1003">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="72084-1003">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="72084-1004">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="72084-1004">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="72084-1005"><see cref="T:System.Byte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="72084-1005">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1006">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="72084-1006">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="72084-1007">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="72084-1007">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="72084-1008">推奨される代替手段は、いずれかを呼び出すには、<xref:System.Decimal.ToByte%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToByte%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-1008">The recommended alternative is to call either the <xref:System.Decimal.ToByte%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToByte%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-1009">結果として得られる整数値が <see cref="F:System.Byte.MinValue" /> 未満か、<see cref="F:System.Byte.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-1009">The resulting integer value is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="72084-1010">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="72084-1010">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="72084-1011">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="72084-1011">This conversion is not supported.</span></span> <span data-ttu-id="72084-1012">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="72084-1012">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="72084-1013">なし。</span><span class="sxs-lookup"><span data-stu-id="72084-1013">None.</span></span> <span data-ttu-id="72084-1014">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="72084-1014">This conversion is not supported.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="72084-1015">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="72084-1015">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="72084-1016">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="72084-1016">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="72084-1017">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="72084-1017">This conversion is not supported.</span></span> <span data-ttu-id="72084-1018">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="72084-1018">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="72084-1019">なし。</span><span class="sxs-lookup"><span data-stu-id="72084-1019">None.</span></span> <span data-ttu-id="72084-1020">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="72084-1020">This conversion is not supported.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="72084-1021">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="72084-1021">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="72084-1022">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="72084-1022">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="72084-1023">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="72084-1023">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="72084-1024">変更されていない、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="72084-1024">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1025">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="72084-1025">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="72084-1026">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="72084-1026">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="72084-1027">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="72084-1027">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="72084-1028">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="72084-1028">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="72084-1029"><see cref="T:System.Double" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="72084-1029">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1030">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="72084-1030">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="72084-1031">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="72084-1031">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="72084-1032">推奨される代替手段は、いずれかを呼び出すには、<xref:System.Decimal.ToDouble%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToDouble%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-1032">The recommended alternative is to call either the <xref:System.Decimal.ToDouble%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="72084-1033"><xref:System.Double>有効桁数よりも少ないのは、 <xref:System.Decimal>、この操作は、丸めエラーを生成可能性があります。</span><span class="sxs-lookup"><span data-stu-id="72084-1033">Because a <xref:System.Double> has fewer significant digits than a <xref:System.Decimal>, this operation may produce round-off errors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="72084-1034">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="72084-1034">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="72084-1035">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="72084-1035">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="72084-1036"><see cref="T:System.Int16" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="72084-1036">The value of the current instance, converted to a <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1037">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="72084-1037">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="72084-1038">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="72084-1038">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="72084-1039">推奨される代替手段は、いずれかを呼び出すには、<xref:System.Decimal.ToInt16%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToInt16%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-1039">The recommended alternative is to call either the <xref:System.Decimal.ToInt16%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="72084-1040"><xref:System.Decimal>値が最も近い整数値を 0 方向に丸められます。</span><span class="sxs-lookup"><span data-stu-id="72084-1040">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-1041">結果として得られる整数値が <see cref="F:System.Int16.MinValue" /> 未満か、<see cref="F:System.Int16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-1041">The resulting integer value is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="72084-1042">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="72084-1042">The parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="72084-1043">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="72084-1043">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="72084-1044"><see cref="T:System.Int32" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="72084-1044">The value of the current instance, converted to a <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1045">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="72084-1045">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="72084-1046">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="72084-1046">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="72084-1047">推奨される代替手段は、いずれかを呼び出すには、<xref:System.Decimal.ToInt32%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToInt32%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-1047">The recommended alternative is to call either the <xref:System.Decimal.ToInt32%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="72084-1048"><xref:System.Decimal>値が最も近い整数値を 0 方向に丸められます。</span><span class="sxs-lookup"><span data-stu-id="72084-1048">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-1049">結果として得られる整数値が <see cref="F:System.Int32.MinValue" /> 未満か、<see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-1049">The resulting integer value is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="72084-1050">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="72084-1050">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="72084-1051">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="72084-1051">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="72084-1052"><see cref="T:System.Int64" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="72084-1052">The value of the current instance, converted to a <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1053">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="72084-1053">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="72084-1054">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="72084-1054">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="72084-1055">推奨される代替手段は、いずれかを呼び出すには、<xref:System.Decimal.ToInt64%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToInt64%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-1055">The recommended alternative is to call either the <xref:System.Decimal.ToInt64%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt64%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-1056">結果として得られる整数値が <see cref="F:System.Int64.MinValue" /> 未満か、<see cref="F:System.Int64.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-1056">The resulting integer value is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="72084-1057">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="72084-1057">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="72084-1058">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="72084-1058">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="72084-1059"><see cref="T:System.SByte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="72084-1059">The value of the current instance, converted to a <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1060">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="72084-1060">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="72084-1061">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="72084-1061">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="72084-1062">推奨される代替手段は、いずれかを呼び出すには、<xref:System.Decimal.ToSByte%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToSByte%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-1062">The recommended alternative is to call either the <xref:System.Decimal.ToSByte%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToSByte%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-1063">結果として得られる整数値が <see cref="F:System.SByte.MinValue" /> 未満か、<see cref="F:System.SByte.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-1063">The resulting integer value is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="72084-1064">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="72084-1064">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="72084-1065">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="72084-1065">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="72084-1066"><see cref="T:System.Single" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="72084-1066">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1067">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="72084-1067">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="72084-1068">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="72084-1068">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="72084-1069">推奨される代替手段は、いずれかを呼び出すには、<xref:System.Decimal.ToSingle%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToSingle%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-1069">The recommended alternative is to call either the <xref:System.Decimal.ToSingle%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToSingle%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="72084-1070">この <see cref="T:System.Decimal" /> インスタンスの値を変換する対象の型。</span><span class="sxs-lookup"><span data-stu-id="72084-1070">The type to which to convert the value of this <see cref="T:System.Decimal" /> instance.</span></span></param>
        <param name="provider"><span data-ttu-id="72084-1071">戻り値の書式に関するカルチャ固有の情報を提供する <see cref="T:System.IFormatProvider" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="72084-1071">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="72084-1072">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="72084-1072">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="72084-1073"><paramref name="type" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="72084-1073">The value of the current instance, converted to a <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1074">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="72084-1074">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="72084-1075">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="72084-1075">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="72084-1076">推奨される代替手段が呼び出されて、 `static` (`Shared` Visual Basic で)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="72084-1076">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72084-1077"><paramref name="type" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="72084-1077"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="72084-1078">要求された型変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="72084-1078">The requested type conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="72084-1079">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="72084-1079">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="72084-1080">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="72084-1080">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="72084-1081"><see cref="T:System.UInt16" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="72084-1081">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1082">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="72084-1082">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="72084-1083">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="72084-1083">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="72084-1084">推奨される代替手段は、いずれかを呼び出すには、<xref:System.Decimal.ToUInt16%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToUInt16%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-1084">The recommended alternative is to call either the <xref:System.Decimal.ToUInt16%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt16%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-1085">結果として得られる整数値が <see cref="F:System.UInt16.MinValue" /> 未満か、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-1085">The resulting integer value is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="72084-1086">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="72084-1086">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="72084-1087">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="72084-1087">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="72084-1088"><see cref="T:System.UInt32" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="72084-1088">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1089">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="72084-1089">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="72084-1090">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="72084-1090">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="72084-1091">推奨される代替手段は、いずれかを呼び出すには、<xref:System.Decimal.ToUInt32%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToUInt32%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-1091">The recommended alternative is to call either the <xref:System.Decimal.ToUInt32%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt32%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="72084-1092"><xref:System.Decimal>値が最も近い整数値を 0 方向に丸められます。</span><span class="sxs-lookup"><span data-stu-id="72084-1092">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-1093">結果として得られる整数値が <see cref="F:System.UInt32.MinValue" /> 未満か、<see cref="F:System.UInt32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-1093">The resulting integer value is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="72084-1094">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="72084-1094">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="72084-1095">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="72084-1095">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="72084-1096"><see cref="T:System.UInt64" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="72084-1096">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1097">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="72084-1097">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="72084-1098">これは、<xref:System.Decimal> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="72084-1098">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="72084-1099">推奨される代替手段は、いずれかを呼び出すには、<xref:System.Decimal.ToUInt64%2A?displayProperty=nameWithType>メソッドまたは<xref:System.Convert.ToUInt64%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-1099">The recommended alternative is to call either the <xref:System.Decimal.ToUInt64%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt64%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="72084-1100"><xref:System.Decimal>値が最も近い整数値を 0 方向に丸められます。</span><span class="sxs-lookup"><span data-stu-id="72084-1100">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="72084-1101">結果として得られる整数値が <see cref="F:System.UInt64.MinValue" /> 未満か、<see cref="F:System.UInt64.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-1101">The resulting integer value is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="72084-1102">コールバックを開始したオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72084-1102">The object that initiated the callback.</span></span> <span data-ttu-id="72084-1103">このパラメーターの機能は、現在実装されていません。</span><span class="sxs-lookup"><span data-stu-id="72084-1103">The functionality for this parameter is not currently implemented.</span></span></param>
        <summary><span data-ttu-id="72084-1104">オブジェクトの逆シリアル化の完了後に実行します。</span><span class="sxs-lookup"><span data-stu-id="72084-1104">Runs when the deserialization of an object has been completed.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="72084-1105"><see cref="T:System.Decimal" /> オブジェクトに、無効なデータまたは破損したデータが含まれています。</span><span class="sxs-lookup"><span data-stu-id="72084-1105">The <see cref="T:System.Decimal" /> object contains invalid or corrupted data.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Decimal) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-1106">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="72084-1106">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="72084-1107">指定した <see cref="T:System.Decimal" /> の値を、等価の 8 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-1107">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="72084-1108"><paramref name="value" /> と等価の 8 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="72084-1108">An 8-bit unsigned integer equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1109">パラメーター`value`は最も近い整数値 0 方向に丸められ、結果が返されることです。</span><span class="sxs-lookup"><span data-stu-id="72084-1109">Parameter `value` is rounded to the nearest integer value toward zero, and that result is returned.</span></span>  
  
 <span data-ttu-id="72084-1110">変換することも、<xref:System.Decimal>を使用して 8 ビット符号なし整数値、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="72084-1110">You can also convert a <xref:System.Decimal> value to an 8-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="72084-1111">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="72084-1111">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-1112">次の例では、<xref:System.Decimal.ToByte%2A>を 10 進数値に変換するメソッド<xref:System.Byte>値。</span><span class="sxs-lookup"><span data-stu-id="72084-1112">The following example uses the <xref:System.Decimal.ToByte%2A> method to convert decimal numbers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.tobyte/cs/tobyte_1.cs#1)]
 [!code-vb[System.Decimal.ToByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.tobyte/vb/tobyte_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-1113"><paramref name="value" /> が <see cref="F:System.Byte.MinValue" /> より小さいか <see cref="F:System.Byte.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="72084-1113"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToDouble(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (d As Decimal) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="72084-1114">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="72084-1114">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="72084-1115">指定した <see cref="T:System.Decimal" /> の値を、それと等価の倍精度浮動小数点数に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-1115">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="72084-1116"><paramref name="d" /> と等価の倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="72084-1116">A double-precision floating-point number equivalent to <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1117">倍精度浮動小数点数がある有効桁数よりも少ないために、この操作は丸めエラーを生成できます、<xref:System.Decimal>です。</span><span class="sxs-lookup"><span data-stu-id="72084-1117">This operation can produce round-off errors because a double-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>  
  
 <span data-ttu-id="72084-1118">変換することも、<xref:System.Decimal>を<xref:System.Double>値を使用して、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="72084-1118">You can also convert a <xref:System.Decimal> to a <xref:System.Double> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="72084-1119">変換には、有効桁数の損失を伴うことができます、ため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="72084-1119">Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-1120">次のコード例に変換`Decimal`番号の<xref:System.Double>を使用して値`ToDouble`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-1120">The following code example converts `Decimal` numbers to <xref:System.Double> values using `ToDouble` method.</span></span>  
  
 [!code-cpp[System.Decimal.ToXXX#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CPP/tosgl_dbl.cpp#5)]
 [!code-csharp[System.Decimal.ToXXX#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CS/tosgl_dbl.cs#5)]
 [!code-vb[System.Decimal.ToXXX#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToXXX/VB/tosgl_dbl.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Decimal) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-1121">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="72084-1121">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="72084-1122">指定した <see cref="T:System.Decimal" /> の値を、等価の 16 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-1122">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="72084-1123"><paramref name="value" /> と等価の 16 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="72084-1123">A 16-bit signed integer equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1124">変換することも、<xref:System.Decimal>を使用して、16 ビット整数値、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="72084-1124">You can also convert a <xref:System.Decimal> value to a 16-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="72084-1125">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="72084-1125">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-1126">次の例では、<xref:System.Decimal.ToInt16%2A>を 10 進数値に変換するメソッド<xref:System.Int16>値。</span><span class="sxs-lookup"><span data-stu-id="72084-1126">The following example uses the <xref:System.Decimal.ToInt16%2A> method to convert decimal numbers to <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint16/cs/toint16_1.cs#1)]
 [!code-vb[System.Decimal.ToInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint16/vb/toint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-1127"><paramref name="value" /> が <see cref="F:System.Int16.MinValue" /> より小さいか <see cref="F:System.Int16.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="72084-1127"><paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (d As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="72084-1128">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="72084-1128">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="72084-1129">指定した <see cref="T:System.Decimal" /> の値を、等価の 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-1129">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="72084-1130"><paramref name="d" /> の値と等価の 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="72084-1130">A 32-bit signed integer equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1131">戻り値は、10 進値の整数部分です。小数部の桁は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="72084-1131">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="72084-1132">変換することも、<xref:System.Decimal>を使用して 32 ビット整数値、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="72084-1132">You can also convert a <xref:System.Decimal> value to a 32-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="72084-1133">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="72084-1133">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-1134">次の例では、<xref:System.Decimal.ToInt32%2A>を 10 進数値に変換するメソッド<xref:System.Int32>値。</span><span class="sxs-lookup"><span data-stu-id="72084-1134">The following example uses the <xref:System.Decimal.ToInt32%2A> method to convert decimal numbers to <xref:System.Int32> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint32/cs/toint32_1.cs#1)]
 [!code-vb[System.Decimal.ToInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint32/vb/toint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-1135"><paramref name="d" /> が <see cref="F:System.Int32.MinValue" /> より小さいか <see cref="F:System.Int32.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="72084-1135"><paramref name="d" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (d As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="72084-1136">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="72084-1136">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="72084-1137">指定した <see cref="T:System.Decimal" /> の値を、等価の 64 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-1137">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="72084-1138"><paramref name="d" /> の値と等価の 64 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="72084-1138">A 64-bit signed integer equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1139">戻り値は、10 進値の整数部分です。小数部の桁は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="72084-1139">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="72084-1140">変換することも、<xref:System.Decimal>を使用して 64 ビット整数値、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="72084-1140">You can also convert a <xref:System.Decimal> value to a 64-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="72084-1141">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="72084-1141">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-1142">次の例では、<xref:System.Decimal.ToInt64%2A>を 10 進数値に変換するメソッド<xref:System.Int64>値。</span><span class="sxs-lookup"><span data-stu-id="72084-1142">The following example uses the <xref:System.Decimal.ToInt64%2A> method to convert decimal numbers to <xref:System.Int64> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint64/cs/toint64_1.cs#1)]
 [!code-vb[System.Decimal.ToInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint64/vb/toint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-1143"><paramref name="d" /> が <see cref="F:System.Int64.MinValue" /> より小さいか <see cref="F:System.Int64.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="72084-1143"><paramref name="d" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="ToOACurrency">
      <MemberSignature Language="C#" Value="public static long ToOACurrency (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToOACurrency(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToOACurrency(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToOACurrency (value As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToOACurrency(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-1144">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="72084-1144">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="72084-1145">指定した <see cref="T:System.Decimal" /> 値を、64 ビット符号付き整数に格納されるそれと等価の OLE オートメーション通貨値に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-1145">Converts the specified <see cref="T:System.Decimal" /> value to the equivalent OLE Automation Currency value, which is contained in a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="72084-1146"><paramref name="value" /> と等価の OLE オートメーション値を格納する 64 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="72084-1146">A 64-bit signed integer that contains the OLE Automation equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72084-1147">次のコード例では、`ToOACurrency`変換する方法の`Decimal`に含まれている同等の OLE オートメーション通貨値に数値<xref:System.Int64>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="72084-1147">The following code example uses the `ToOACurrency` method to convert `Decimal` numbers to the equivalent OLE Automation Currency values that are contained in <xref:System.Int64> fields.</span></span>  
  
 [!code-cpp[System.Decimal.OACurrency#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CPP/tooacurrency.cpp#1)]
 [!code-csharp[System.Decimal.OACurrency#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CS/tooacurrency.cs#1)]
 [!code-vb[System.Decimal.OACurrency#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.OACurrency/VB/tooacurrency.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.FromOACurrency(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToSByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Decimal) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-1148">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="72084-1148">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="72084-1149">指定した <see cref="T:System.Decimal" /> の値を、等価の 8 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-1149">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="72084-1150"><paramref name="value" /> と等価の 8 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="72084-1150">An 8-bit signed integer equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1151">変換することも、<xref:System.Decimal>値を 8 ビット符号付き整数を使用して、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="72084-1151">You can also convert a <xref:System.Decimal> value to an 8-bit signed integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="72084-1152">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="72084-1152">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-1153">次の例では、<xref:System.Decimal.ToSByte%2A>を 10 進数値に変換するメソッド<xref:System.SByte>値。</span><span class="sxs-lookup"><span data-stu-id="72084-1153">The following example uses the <xref:System.Decimal.ToSByte%2A> method to convert decimal numbers to <xref:System.SByte> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToSByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.tosbyte/cs/tosbyte1.cs#1)]
 [!code-vb[System.Decimal.ToSByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.tosbyte/vb/tosbyte1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt16(System.Decimal)" />
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-1154"><paramref name="value" /> が <see cref="F:System.SByte.MinValue" /> より小さいか <see cref="F:System.SByte.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="72084-1154"><paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToSingle(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (d As Decimal) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="72084-1155">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="72084-1155">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="72084-1156">指定した <see cref="T:System.Decimal" /> の値を、それと等価の単精度浮動小数点数に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-1156">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="72084-1157"><paramref name="d" /> の値と等価な単精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="72084-1157">A single-precision floating-point number equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1158">単精度浮動小数点数がある有効桁数よりも少ないために、この操作は丸めエラーを生成できます、<xref:System.Decimal>です。</span><span class="sxs-lookup"><span data-stu-id="72084-1158">This operation can produce round-off errors because a single-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>  
  
 <span data-ttu-id="72084-1159">変換することも、<xref:System.Decimal>を<xref:System.Single>値を使用して、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="72084-1159">You can also convert a <xref:System.Decimal> to a <xref:System.Single> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="72084-1160">変換には、有効桁数の損失を伴うことができます、ため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="72084-1160">Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-1161">次のコード例に変換`Decimal`番号の<xref:System.Single>値を使用して、`ToSingle`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-1161">The following code example converts `Decimal` numbers to <xref:System.Single> values using the `ToSingle` method.</span></span>  
  
 [!code-cpp[System.Decimal.ToXXX#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CPP/tosgl_dbl.cpp#5)]
 [!code-csharp[System.Decimal.ToXXX#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CS/tosgl_dbl.cs#5)]
 [!code-vb[System.Decimal.ToXXX#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToXXX/VB/tosgl_dbl.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="72084-1162">対象のインスタンスの数値を等価の <see cref="T:System.String" /> 形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-1162">Converts the numeric value of this instance to its equivalent <see cref="T:System.String" /> representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="72084-1163">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-1163">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="72084-1164">このインスタンスの値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="72084-1164">A string that represents the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1165"><xref:System.Decimal.ToString>メソッドの形式、<xref:System.Decimal>現在のカルチャの形式 ("G"、または [全般]) の既定の値します。</span><span class="sxs-lookup"><span data-stu-id="72084-1165">The <xref:System.Decimal.ToString> method formats a <xref:System.Decimal> value in the default ("G", or general) format of the current culture.</span></span> <span data-ttu-id="72084-1166">別の形式またはカルチャを指定する場合は、他のオーバー ロードを使用して、<xref:System.Decimal.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="72084-1166">If you want to specify a different format or culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="72084-1167">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="72084-1167">To use format</span></span>|<span data-ttu-id="72084-1168">カルチャの</span><span class="sxs-lookup"><span data-stu-id="72084-1168">For culture</span></span>|<span data-ttu-id="72084-1169">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="72084-1169">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="72084-1170">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="72084-1170">Default ("G") format</span></span>|<span data-ttu-id="72084-1171">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="72084-1171">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="72084-1172">特定の形式</span><span class="sxs-lookup"><span data-stu-id="72084-1172">A specific format</span></span>|<span data-ttu-id="72084-1173">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="72084-1173">Default (current) culture</span></span>|<xref:System.Decimal.ToString%28System.String%29>|  
|<span data-ttu-id="72084-1174">特定の形式</span><span class="sxs-lookup"><span data-stu-id="72084-1174">A specific format</span></span>|<span data-ttu-id="72084-1175">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="72084-1175">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="72084-1176">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="72084-1176">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="72084-1177">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="72084-1177">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="72084-1178">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="72084-1178">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-1179">次の例を表示、<xref:System.Decimal>値の既定値を使用して<xref:System.Decimal.ToString>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-1179">The following example displays a <xref:System.Decimal> value using the default <xref:System.Decimal.ToString> method.</span></span> <span data-ttu-id="72084-1180">文字列形式も表示されます、<xref:System.Decimal>標準書式指定子の数の使用に起因する値。</span><span class="sxs-lookup"><span data-stu-id="72084-1180">It also displays the string representations of the <xref:System.Decimal> value that result from using a number of standard format specifiers.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#2)]
 [!code-vb[System.Decimal.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#2)]  
  
 <span data-ttu-id="72084-1181">次の例では、アカウントの金額を表示します。</span><span class="sxs-lookup"><span data-stu-id="72084-1181">The following example displays the amount of money in an account.</span></span>  
  
 [!code-cpp[Decimal Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#5)]
 [!code-csharp[Decimal Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#5)]
 [!code-vb[Decimal Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="72084-1182">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72084-1182">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="72084-1183">このインスタンスの数値を、指定したカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-1183">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="72084-1184"><paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="72084-1184">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1185"><xref:System.Decimal.ToString%28System.IFormatProvider%29>メソッドの形式、<xref:System.Decimal>値の既定値 ("G"、または [全般]) で指定されたカルチャの形式です。</span><span class="sxs-lookup"><span data-stu-id="72084-1185">The <xref:System.Decimal.ToString%28System.IFormatProvider%29> method formats a <xref:System.Decimal> value in the default ("G", or general) format of a specified culture.</span></span> <span data-ttu-id="72084-1186">別の形式または現在のカルチャを指定する場合は、他のオーバー ロードを使用して、<xref:System.Decimal.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="72084-1186">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="72084-1187">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="72084-1187">To use format</span></span>|<span data-ttu-id="72084-1188">カルチャの</span><span class="sxs-lookup"><span data-stu-id="72084-1188">For culture</span></span>|<span data-ttu-id="72084-1189">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="72084-1189">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="72084-1190">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="72084-1190">Default ("G") format</span></span>|<span data-ttu-id="72084-1191">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="72084-1191">Default (current) culture</span></span>|<xref:System.Decimal.ToString>|  
|<span data-ttu-id="72084-1192">特定の形式</span><span class="sxs-lookup"><span data-stu-id="72084-1192">A specific format</span></span>|<span data-ttu-id="72084-1193">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="72084-1193">Default (current) culture</span></span>|<xref:System.Decimal.ToString%28System.String%29>|  
|<span data-ttu-id="72084-1194">特定の形式</span><span class="sxs-lookup"><span data-stu-id="72084-1194">A specific format</span></span>|<span data-ttu-id="72084-1195">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="72084-1195">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="72084-1196">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="72084-1196">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="72084-1197">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="72084-1197">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="72084-1198">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="72084-1198">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="72084-1199">`provider`パラメーターは、<xref:System.IFormatProvider>実装が<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72084-1199">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="72084-1200">通常、`provider`は、<xref:System.Globalization.NumberFormatInfo>オブジェクトまたは<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72084-1200">Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> object or a <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="72084-1201">`provider`パラメーターの書式設定に使用されるカルチャに固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="72084-1201">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="72084-1202">`provider` が `null` の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="72084-1202">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="72084-1203">変換する、<xref:System.Decimal>を指定したカルチャと特定の形式の文字列では、呼び出しを使用して、文字列形式の値、<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-1203">To convert a <xref:System.Decimal> value to its string representation using a specified culture and a specific format string, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-1204">次の例の文字列形式を表示する、<xref:System.Decimal>値を使用して<xref:System.Globalization.CultureInfo>を複数の異なるカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72084-1204">The following example displays the string representation of a <xref:System.Decimal> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#3)]
 [!code-vb[System.Decimal.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="72084-1205">標準またはカスタムの数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="72084-1205">A standard or custom numeric format string.</span></span></param>
        <summary><span data-ttu-id="72084-1206">指定した書式を使用して、このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-1206">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span></span></summary>
        <returns><span data-ttu-id="72084-1207"><paramref name="format" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="72084-1207">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1208"><xref:System.Decimal.ToString%28System.String%29>メソッドの形式、<xref:System.Decimal>現在のカルチャの規則を使用して、指定した書式の値。</span><span class="sxs-lookup"><span data-stu-id="72084-1208">The <xref:System.Decimal.ToString%28System.String%29> method formats a <xref:System.Decimal> value in a specified format by using the conventions of the current culture.</span></span> <span data-ttu-id="72084-1209">既定値 ("G"、または [全般]) を使用する場合は、書式を設定または別のカルチャを指定して、他のオーバー ロードを使用して、<xref:System.Decimal.ToString%2A>メソッドは、次のように。</span><span class="sxs-lookup"><span data-stu-id="72084-1209">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="72084-1210">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="72084-1210">To use format</span></span>|<span data-ttu-id="72084-1211">カルチャの</span><span class="sxs-lookup"><span data-stu-id="72084-1211">For culture</span></span>|<span data-ttu-id="72084-1212">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="72084-1212">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="72084-1213">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="72084-1213">Default ("G") format</span></span>|<span data-ttu-id="72084-1214">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="72084-1214">Default (current) culture</span></span>|<xref:System.Decimal.ToString>|  
|<span data-ttu-id="72084-1215">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="72084-1215">Default ("G") format</span></span>|<span data-ttu-id="72084-1216">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="72084-1216">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="72084-1217">特定の形式</span><span class="sxs-lookup"><span data-stu-id="72084-1217">A specific format</span></span>|<span data-ttu-id="72084-1218">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="72084-1218">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="72084-1219"><xref:System.Decimal.ToString%2A>メソッドで指定された標準またはカスタム数値書式指定文字列を使用して、`format`パラメーターを現在のインスタンスの値を文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-1219">The <xref:System.Decimal.ToString%2A> method uses the standard or custom numeric format string specified by the `format` parameter to convert the value of the current instance into its string representation.</span></span> <span data-ttu-id="72084-1220">`format`パラメーターに任意の有効なできます[標準数値書式指定子](~/docs/standard/base-types/standard-numeric-format-strings.md)の任意の組み合わせに加え、D、R、および X を除く[カスタム数値書式指定子](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="72084-1220">The `format` parameter can be any valid [standard numeric format specifier](~/docs/standard/base-types/standard-numeric-format-strings.md) except for D, R, and X, as well as any combination of [custom numeric format specifiers](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="72084-1221">場合`format`は`null`またはこのインスタンスの戻り値、空の文字列が、一般的な数値書式指定子 (G) でフォーマットされています。</span><span class="sxs-lookup"><span data-stu-id="72084-1221">If `format` is `null` or an empty string, the return value of this instance is formatted with the general numeric format specifier (G).</span></span>  
  
 <span data-ttu-id="72084-1222">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="72084-1222">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="72084-1223">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="72084-1223">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="72084-1224">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="72084-1224">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="72084-1225">戻り値の書式を使用して、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72084-1225">The return value is formatted by using the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="72084-1226">指定されたカルチャの書式指定規則を適用するには、呼び出し、<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="72084-1226">To apply the formatting conventions of a specified culture, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-1227">次の例を表示、<xref:System.Decimal>を使用して、サポートされている標準数値書式指定子、および 2 つのカスタム数値書式指定文字列の各値です。</span><span class="sxs-lookup"><span data-stu-id="72084-1227">The following example displays a <xref:System.Decimal> value using each of the supported standard numeric format specifiers, together with two custom numeric format strings.</span></span> <span data-ttu-id="72084-1228">数値の値を文字列に変換するのには、EN-US カルチャの書式指定規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="72084-1228">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#4)]
 [!code-vb[System.Decimal.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="72084-1229"><paramref name="format" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="72084-1229"><paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="72084-1230">数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="72084-1230">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="72084-1231">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72084-1231">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="72084-1232">このインスタンスの数値を、指定した書式およびカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-1232">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="72084-1233"><paramref name="format" /> および <paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="72084-1233">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1234"><xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29>メソッドの形式、<xref:System.Double>特定のカルチャの指定した形式の値。</span><span class="sxs-lookup"><span data-stu-id="72084-1234">The <xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Double> value in a specified format of a specified culture.</span></span> <span data-ttu-id="72084-1235">既定の形式またはカルチャの設定を使用する場合は、他のオーバー ロードを使用して、<xref:System.Double.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="72084-1235">If you want to use default format or culture settings, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="72084-1236">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="72084-1236">To use format</span></span>|<span data-ttu-id="72084-1237">カルチャの</span><span class="sxs-lookup"><span data-stu-id="72084-1237">For culture</span></span>|<span data-ttu-id="72084-1238">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="72084-1238">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="72084-1239">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="72084-1239">Default ("G") format</span></span>|<span data-ttu-id="72084-1240">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="72084-1240">Default (current) culture</span></span>|<xref:System.Double.ToString>|  
|<span data-ttu-id="72084-1241">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="72084-1241">Default ("G") format</span></span>|<span data-ttu-id="72084-1242">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="72084-1242">A specific culture</span></span>|<xref:System.Double.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="72084-1243">特定の形式</span><span class="sxs-lookup"><span data-stu-id="72084-1243">A specific format</span></span>|<span data-ttu-id="72084-1244">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="72084-1244">Default (current) culture</span></span>|<xref:System.Double.ToString%28System.String%29>|  
  
 <span data-ttu-id="72084-1245">`format`パラメーターには、D、R、および X を除く任意の有効な標準の数値書式指定子およびカスタム数値書式指定子の任意の組み合わせを指定できます。</span><span class="sxs-lookup"><span data-stu-id="72084-1245">The `format` parameter can be any valid standard numeric format specifier except for D, R, and X, as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="72084-1246">場合`format`は`null`またはこのインスタンスの戻り値、空の文字列が、一般的な数値書式指定子 ("G") でフォーマットされています。</span><span class="sxs-lookup"><span data-stu-id="72084-1246">If `format` is `null` or an empty string, the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="72084-1247">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="72084-1247">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="72084-1248">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="72084-1248">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="72084-1249">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="72084-1249">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="72084-1250">`provider`パラメーターは、<xref:System.IFormatProvider>実装が<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72084-1250">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="72084-1251">通常、`provider`は、<xref:System.Globalization.NumberFormatInfo>または<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72084-1251">Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="72084-1252">`provider`パラメーターの書式設定に使用されるカルチャに固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="72084-1252">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="72084-1253">`provider` が `null` の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="72084-1253">If `provider` is `null`, the thread current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-1254">次の例を表示、<xref:System.Decimal>値のサポートされている標準数値書式指定子のいくつかの異なるカルチャを使用します。</span><span class="sxs-lookup"><span data-stu-id="72084-1254">The following example displays a <xref:System.Decimal> value using each of the supported standard numeric format specifiers for several different cultures.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#5)]
 [!code-vb[System.Decimal.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="72084-1255"><paramref name="format" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="72084-1255"><paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Decimal) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72084-1256">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="72084-1256">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="72084-1257">指定した <see cref="T:System.Decimal" /> の値を、等価の 16 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-1257">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="72084-1258"><paramref name="value" /> の値と等価な 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="72084-1258">A 16-bit unsigned integer equivalent to the value of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1259">戻り値は、10 進値の整数部分です。小数部の桁は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="72084-1259">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="72084-1260">変換することも、<xref:System.Decimal>を使用して、16 ビット符号なし整数値、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="72084-1260">You can also convert a <xref:System.Decimal> value to a 16-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="72084-1261">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="72084-1261">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-1262">次の例では、<xref:System.Decimal.ToUInt16%2A>を 10 進数値に変換するメソッド<xref:System.UInt16>値。</span><span class="sxs-lookup"><span data-stu-id="72084-1262">The following example uses the <xref:System.Decimal.ToUInt16%2A> method to convert decimal numbers to <xref:System.UInt16> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint16/cs/touint16_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint16/vb/touint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt32(System.Decimal)" />
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-1263"><paramref name="value" /> は <see cref="F:System.UInt16.MaxValue" /> を超えているか、または <see cref="F:System.UInt16.MinValue" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="72084-1263"><paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />.</span></span></exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (d As Decimal) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="72084-1264">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="72084-1264">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="72084-1265">指定した <see cref="T:System.Decimal" /> の値を、等価の 32 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-1265">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="72084-1266"><paramref name="d" /> の値と等価な 32 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="72084-1266">A 32-bit unsigned integer equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1267">戻り値は、10 進値の整数部分です。小数部の桁は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="72084-1267">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="72084-1268">変換することも、<xref:System.Decimal>を使用して 32 ビット符号なし整数値、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="72084-1268">You can also convert a <xref:System.Decimal> value to an 32-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="72084-1269">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="72084-1269">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-1270">次の例では、<xref:System.Decimal.ToUInt32%2A>を 10 進数値に変換するメソッド<xref:System.UInt32>値。</span><span class="sxs-lookup"><span data-stu-id="72084-1270">The following example uses the <xref:System.Decimal.ToUInt32%2A> method to convert decimal numbers to <xref:System.UInt32> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint32/cs/touint32_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint32/vb/touint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt64(System.Decimal)" />
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-1271"><paramref name="d" /> が負か <see cref="F:System.UInt32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-1271"><paramref name="d" /> is negative or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (d As Decimal) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="72084-1272">変換する 10 進数。</span><span class="sxs-lookup"><span data-stu-id="72084-1272">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="72084-1273">指定した <see cref="T:System.Decimal" /> の値を、等価の 64 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-1273">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="72084-1274"><paramref name="d" /> の値と等価な 64 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="72084-1274">A 64-bit unsigned integer equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1275">戻り値は、10 進値の整数部分です。小数部の桁は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="72084-1275">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="72084-1276">変換することも、<xref:System.Decimal>を使用して 64 ビット符号なし整数値、<xref:System.Decimal.op_Explicit%2A>代入演算子。</span><span class="sxs-lookup"><span data-stu-id="72084-1276">You can also convert a <xref:System.Decimal> value to an 64-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="72084-1277">演算子は、縮小変換を実行するため、キャスト演算子 (C#) または Visual Basic での変換関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="72084-1277">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-1278">次の例では、<xref:System.Decimal.ToUInt64%2A>を 10 進数値に変換するメソッド<xref:System.UInt64>値。</span><span class="sxs-lookup"><span data-stu-id="72084-1278">The following example uses the <xref:System.Decimal.ToUInt64%2A> method to convert decimal numbers to <xref:System.UInt64> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint64/cs/touint64_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint64/vb/touint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="72084-1279"><paramref name="d" /> が負か <see cref="F:System.UInt64.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="72084-1279"><paramref name="d" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static decimal Truncate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Truncate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Truncate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Truncate(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="72084-1280">切り捨てる 10 進数。</span><span class="sxs-lookup"><span data-stu-id="72084-1280">The decimal number to truncate.</span></span></param>
        <summary><span data-ttu-id="72084-1281">指定した <see cref="T:System.Decimal" /> の整数の桁を返します。小数の桁は破棄されます。</span><span class="sxs-lookup"><span data-stu-id="72084-1281">Returns the integral digits of the specified <see cref="T:System.Decimal" />; any fractional digits are discarded.</span></span></summary>
        <returns><span data-ttu-id="72084-1282"><paramref name="d" /> を 0 方向の近似整数に丸めた結果。</span><span class="sxs-lookup"><span data-stu-id="72084-1282">The result of <paramref name="d" /> rounded toward zero, to the nearest whole number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1283">このメソッドに丸めます`d`小数点後桁数をすべて破棄することに対応する 0 方向に最も近い整数を指定します。</span><span class="sxs-lookup"><span data-stu-id="72084-1283">This method rounds `d` toward zero, to the nearest whole number, which corresponds to discarding any digits after the decimal point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-1284">次のコード例では、`Truncate`メソッドをいくつかの小数部の桁を破棄して`Decimal`値。</span><span class="sxs-lookup"><span data-stu-id="72084-1284">The following code example uses the `Truncate` method to discard the fractional digits of several `Decimal` values.</span></span>  
  
 [!code-cpp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CPP/floor_neg_trunc.cpp#1)]
 [!code-csharp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CS/floor_neg_trunc.cs#1)]
 [!code-vb[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/VB/floor_neg_trunc.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="72084-1285">数値の文字列形式を、それと等価の <see cref="T:System.Decimal" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-1285">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span></span> <span data-ttu-id="72084-1286">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="72084-1286">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.Decimal.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.ReadOnlySpan{System.Char},System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Decimal&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.String,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Decimal&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="72084-1287">変換する数値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="72084-1287">The string representation of the number to convert.</span></span></param>
        <param name="result">To be added.</param>
        <summary><span data-ttu-id="72084-1288">数値の文字列形式を、それと等価の <see cref="T:System.Decimal" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-1288">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span></span> <span data-ttu-id="72084-1289">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="72084-1289">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="72084-1290"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="72084-1290"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1291">このオーバー ロードとは異なります、<xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType>解析の数値の値を返す代わりに、解析操作が成功したかどうかを示すブール値を返すメソッド。</span><span class="sxs-lookup"><span data-stu-id="72084-1291">This overload differs from the <xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="72084-1292">テストするため、例外処理を使用する必要がある、<xref:System.FormatException>イベントで`s`無効なため、正常に解析することはできません。</span><span class="sxs-lookup"><span data-stu-id="72084-1292">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="72084-1293">パラメーター`s`フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="72084-1293">Parameter `s` contains a number of the form:</span></span>  
  
 <span data-ttu-id="72084-1294">[ws][記号][数字] 桁 [.fractional 桁] [ws]</span><span class="sxs-lookup"><span data-stu-id="72084-1294">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="72084-1295">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="72084-1295">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="72084-1296">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="72084-1296">The following table describes each element.</span></span>  
  
|<span data-ttu-id="72084-1297">要素</span><span class="sxs-lookup"><span data-stu-id="72084-1297">Element</span></span>|<span data-ttu-id="72084-1298">説明</span><span class="sxs-lookup"><span data-stu-id="72084-1298">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="72084-1299">*ws*</span><span class="sxs-lookup"><span data-stu-id="72084-1299">*ws*</span></span>|<span data-ttu-id="72084-1300">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="72084-1300">Optional white space.</span></span>|  
|<span data-ttu-id="72084-1301">*sign*</span><span class="sxs-lookup"><span data-stu-id="72084-1301">*sign*</span></span>|<span data-ttu-id="72084-1302">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="72084-1302">An optional sign.</span></span>|  
|<span data-ttu-id="72084-1303">*digits*</span><span class="sxs-lookup"><span data-stu-id="72084-1303">*digits*</span></span>|<span data-ttu-id="72084-1304">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="72084-1304">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="72084-1305">*、*</span><span class="sxs-lookup"><span data-stu-id="72084-1305">*,*</span></span>|<span data-ttu-id="72084-1306">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="72084-1306">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="72084-1307">*.*</span><span class="sxs-lookup"><span data-stu-id="72084-1307">*.*</span></span>|<span data-ttu-id="72084-1308">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="72084-1308">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="72084-1309">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="72084-1309">*fractional-digits*</span></span>|<span data-ttu-id="72084-1310">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="72084-1310">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="72084-1311">パラメーター`s`を使用して解釈されます、<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="72084-1311">Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="72084-1312">つまり、空白文字と桁区切り記号が許可されているが、通貨記号は表示されません。</span><span class="sxs-lookup"><span data-stu-id="72084-1312">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="72084-1313">要素を明示的に定義 (などの通貨記号、桁区切り記号、および空白) 内に存在することができます`s`を使用して、<xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="72084-1313">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="72084-1314">パラメーター`s`の書式設定情報を使用して解析は、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のシステムのカルチャ用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="72084-1314">Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="72084-1315">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="72084-1315">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="72084-1316">文字列を解析するその他の書式情報を使用して指定されたカルチャを使用して、<xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="72084-1316">To parse a string using the formatting information of some other specified culture, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="72084-1317">必要に応じての値`s`近似値に丸められます。</span><span class="sxs-lookup"><span data-stu-id="72084-1317">If necessary, the value of `s` is rounded using rounding to nearest.</span></span>  
  
 <span data-ttu-id="72084-1318">A <xref:System.Decimal> 29 桁の有効桁数が付きます。</span><span class="sxs-lookup"><span data-stu-id="72084-1318">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="72084-1319">場合`s`、複数の 29 桁の数字を持つが、小数部分を持ちの範囲内が数値を表して<xref:System.Decimal.MaxValue>と<xref:System.Decimal.MinValue>数値は丸められます、近似値に丸め 29 桁は切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="72084-1319">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="72084-1320">解析操作中には、区切り記号がで発生した場合、`s`パラメーター、および適用可能な通貨または 10 進数と桁区切り記号が同じ、解析操作では、区切り文字が桁区切り記号ではなく、小数点区切り文字である前提としています。</span><span class="sxs-lookup"><span data-stu-id="72084-1320">If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="72084-1321">区切り記号の詳細については、次を参照してください。 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>、および<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>です。</span><span class="sxs-lookup"><span data-stu-id="72084-1321">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-1322">次の例では、<xref:System.Decimal.TryParse%28System.String%2CSystem.Decimal%40%29?displayProperty=nameWithType>数値の文字列形式を変換する方法の<xref:System.Decimal>値。</span><span class="sxs-lookup"><span data-stu-id="72084-1322">The following example uses the <xref:System.Decimal.TryParse%28System.String%2CSystem.Decimal%40%29?displayProperty=nameWithType> method to convert the string representations of numeric values to <xref:System.Decimal> values.</span></span> <span data-ttu-id="72084-1323">その EN-US では、現在のカルチャと見なします。</span><span class="sxs-lookup"><span data-stu-id="72084-1323">It assumes that en-US is the current culture.</span></span>  
  
 [!code-csharp[System.Decimal.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.TryParse/cs/TryParse.cs#1)]
 [!code-vb[System.Decimal.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.TryParse/vb/TryParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Decimal.Parse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Decimal&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Decimal&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="72084-1324">変換する数値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="72084-1324">The string representation of the number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="72084-1325"><c>s</c> に許可されている書式を示す列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="72084-1325">A bitwise combination of enumeration values that indicates the permitted format of <c>s</c>.</span></span> <span data-ttu-id="72084-1326">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Number" /> です。</span><span class="sxs-lookup"><span data-stu-id="72084-1326">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span></span></param>
        <param name="provider"><span data-ttu-id="72084-1327"><c>s</c> に関するカルチャ固有の解析情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72084-1327">An object that supplies culture-specific parsing information about <c>s</c>.</span></span></param>
        <param name="result">To be added.</param>
        <summary><span data-ttu-id="72084-1328">指定したスタイルとカルチャ固有の書式を使用して、文字列形式の数値をそれと等価の <see cref="T:System.Decimal" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="72084-1328">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified style and culture-specific format.</span></span> <span data-ttu-id="72084-1329">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="72084-1329">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="72084-1330"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="72084-1330"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72084-1331">このオーバー ロードとは異なります、<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>解析の数値の値を返す代わりに、解析操作が成功したかどうかを示すブール値を返すメソッド。</span><span class="sxs-lookup"><span data-stu-id="72084-1331">This overload differs from the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="72084-1332">テストするため、例外処理を使用する必要がある、<xref:System.FormatException>イベントで`s`無効なため、正常に解析することはできません。</span><span class="sxs-lookup"><span data-stu-id="72084-1332">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="72084-1333">`style`パラメーターの使用可能な形式を定義する、`s`解析操作が成功するためのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="72084-1333">The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="72084-1334">ビット フラグの組み合わせを可能にする必要があります、<xref:System.Globalization.NumberStyles>列挙します。</span><span class="sxs-lookup"><span data-stu-id="72084-1334">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="72084-1335">次<xref:System.Globalization.NumberStyles>メンバーがサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="72084-1335">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>  
  
 <span data-ttu-id="72084-1336">スタイルの値に応じて、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="72084-1336">Depending on the value of style, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="72084-1337">[ws][$][記号][数字] 桁 [.fractional 桁] [e [サインイン] 桁] [ws]</span><span class="sxs-lookup"><span data-stu-id="72084-1337">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="72084-1338">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="72084-1338">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="72084-1339">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="72084-1339">The following table describes each element.</span></span>  
  
|<span data-ttu-id="72084-1340">要素</span><span class="sxs-lookup"><span data-stu-id="72084-1340">Element</span></span>|<span data-ttu-id="72084-1341">説明</span><span class="sxs-lookup"><span data-stu-id="72084-1341">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="72084-1342">*ws*</span><span class="sxs-lookup"><span data-stu-id="72084-1342">*ws*</span></span>|<span data-ttu-id="72084-1343">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="72084-1343">Optional white space.</span></span> <span data-ttu-id="72084-1344">先頭に空白文字は使用できません`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="72084-1344">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="72084-1345">末尾に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="72084-1345">It can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="72084-1346">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="72084-1346">A culture-specific currency symbol.</span></span> <span data-ttu-id="72084-1347">文字列内での位置がによって定義された、<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>または<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>のプロパティ、<xref:System.Globalization.NumberFormatInfo>によって返されるオブジェクト、<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>のメソッド、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="72084-1347">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> or <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method of the `provider` parameter.</span></span> <span data-ttu-id="72084-1348">通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="72084-1348">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="72084-1349">*sign*</span><span class="sxs-lookup"><span data-stu-id="72084-1349">*sign*</span></span>|<span data-ttu-id="72084-1350">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="72084-1350">An optional sign.</span></span>|  
|<span data-ttu-id="72084-1351">*digits*</span><span class="sxs-lookup"><span data-stu-id="72084-1351">*digits*</span></span>|<span data-ttu-id="72084-1352">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="72084-1352">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="72084-1353">*.*</span><span class="sxs-lookup"><span data-stu-id="72084-1353">*.*</span></span>|<span data-ttu-id="72084-1354">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="72084-1354">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="72084-1355">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="72084-1355">*fractional-digits*</span></span>|<span data-ttu-id="72084-1356">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="72084-1356">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="72084-1357">`style`パラメーターの使用可能な書式を指定する、`s`パラメーターを 1 つ以上を指定できます<xref:System.Globalization.NumberStyles>列挙定数のビットごとの OR 演算を使用して結合します。</span><span class="sxs-lookup"><span data-stu-id="72084-1357">The `style` parameter specifies the permitted format of the `s` parameter, and can be one or more <xref:System.Globalization.NumberStyles> enumerated constants combined using a bitwise OR operation.</span></span> <span data-ttu-id="72084-1358">場合`style`が null、`s`を使用して解釈されます、<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="72084-1358">If `style` is null, `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span>  
  
 <span data-ttu-id="72084-1359">`provider`パラメーターは、<xref:System.IFormatProvider>などの実装、<xref:System.Globalization.NumberFormatInfo>または<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="72084-1359">The `provider` parameter is an <xref:System.IFormatProvider> implementation such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="72084-1360">`provider`パラメーターの解析中に使用されるカルチャに固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="72084-1360">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="72084-1361">`provider` が `null` の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="72084-1361">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="72084-1362">A <xref:System.Decimal> 29 桁の有効桁数が付きます。</span><span class="sxs-lookup"><span data-stu-id="72084-1362">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="72084-1363">場合`s`、複数の 29 桁の数字を持つが、小数部分を持ちの範囲内が数値を表して<xref:System.Decimal.MaxValue>と<xref:System.Decimal.MinValue>数値は丸められます、近似値に丸め 29 桁は切り捨てられません。</span><span class="sxs-lookup"><span data-stu-id="72084-1363">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="72084-1364">区切り記号が発生した場合、`s`解析操作では、および適用可能な通貨または 10 進数の間にパラメーターと桁区切り記号が同じには、解析操作では、区切り文字が桁区切り記号ではなく、小数点区切り文字である前提としています。</span><span class="sxs-lookup"><span data-stu-id="72084-1364">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="72084-1365">区切り記号の詳細については、次を参照してください。 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>、および<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>です。</span><span class="sxs-lookup"><span data-stu-id="72084-1365">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72084-1366">次の例での使用、<xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29>を特定のスタイルを持ち、特定のカルチャの規則を使ってフォーマットしている数値の文字列形式を解析します。</span><span class="sxs-lookup"><span data-stu-id="72084-1366">The following example demonstrates the use of the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29> method to parse the string representation of a number that has a particular style and is formatted using the conventions of a particular culture.</span></span>  
  
 [!code-csharp[System.Decimal.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.TryParse/cs/TryParse.cs#2)]
 [!code-vb[System.Decimal.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.TryParse/vb/TryParse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="72084-1367"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="72084-1367"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="72084-1368">- または -</span><span class="sxs-lookup"><span data-stu-id="72084-1368">-or-</span></span>  
  
 <span data-ttu-id="72084-1369"><paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値です。</span><span class="sxs-lookup"><span data-stu-id="72084-1369"><paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <altmember cref="Overload:System.Decimal.Parse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static readonly decimal Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal Zero" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Zero As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal Zero;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72084-1370">数値 0 を表します。</span><span class="sxs-lookup"><span data-stu-id="72084-1370">Represents the number zero (0).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72084-1371">次のコード例の使用を示しています、`Zero`フィールドです。</span><span class="sxs-lookup"><span data-stu-id="72084-1371">The following code example illustrates the use of the `Zero` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
  </Members>
</Type>