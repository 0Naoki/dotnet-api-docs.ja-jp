<Type Name="NotSupportedException" FullName="System.NotSupportedException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d0a6e7feeda7bd8a9b5471f8eda1da177b3907a2" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70720967" /></Metadata><TypeSignature Language="C#" Value="public class NotSupportedException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit NotSupportedException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.NotSupportedException" />
  <TypeSignature Language="VB.NET" Value="Public Class NotSupportedException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class NotSupportedException : SystemException" />
  <TypeSignature Language="F#" Value="type NotSupportedException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>呼び出されたメソッドがサポートされていない場合、または呼び出された機能を備えていないストリームに対して読み取り、シーク、書き込みが試行された場合にスローされる例外。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.NotSupportedException>呼び出されたメソッドまたはプロパティに実装が存在しないことを示します。  
  
 <xref:System.NotSupportedException>では、値0x80131515 の HRESULT COR_E_NOTSUPPORTED が使用されます。  
  
 <xref:System.NotSupportedException>インスタンスの初期プロパティ値の一覧については、<xref:System.NotSupportedException.%23ctor%2A>コンストラクターを参照してください。  
  
## <a name="throwing-a-notsupportedexception-exception"></a>NotSupportedException 例外のスロー  
 次の場合は、 <xref:System.NotSupportedException>例外をスローすることを検討してください。  
  
-   汎用インターフェイスを実装しています。メソッドの数には意味のある実装がありません。 たとえば、 <xref:System.IConvertible>インターフェイスを実装する日付と時刻の型を作成する場合、ほとんどの変換に対し<xref:System.NotSupportedException>て例外をスローします。  
  
-   いくつかのメソッドをオーバーライドする必要がある抽象クラスから継承しました。 ただし、これらのサブセットの実装を提供するための準備が整っているだけです。 実装しないように決定したメソッドについては、を<xref:System.NotSupportedException>スローすることを選択できます。  
  
-   操作を条件付きで有効にする状態を持つ汎用型を定義しています。 たとえば、読み取り専用または読み取り/書き込みのいずれかの型を指定できます。 その場合：  
  
    -   オブジェクトが読み取り専用の場合、インスタンスのプロパティに値を割り当てるか、インスタンスの状態を変更するメソッドを呼び出すと、 <xref:System.NotSupportedException>例外がスローされます。  
  
    -   特定の機能が使用可能かどう<xref:System.Boolean>かを示す値を返すプロパティを実装する必要があります。 たとえば、読み取り専用または読み取り/書き込み可能な型の場合、読み取り/書き込みメソッドのセットが`IsReadOnly`使用可能か使用できないかを示すプロパティを実装できます。  
  
## <a name="handling-a-notsupportedexception-exception"></a>NotSupportedException 例外の処理  
 例外<xref:System.NotSupportedException>は、メソッドが実装されていないことを示しています。メソッドを呼び出すことはできません。  例外を処理することはできません。 代わりに、例外の原因によって、実装が完全に存在しないか、メンバー呼び出しがオブジェクトの目的と一致していないか (読み取り<xref:System.IO.FileStream.Write%2A?displayProperty=nameWithType> <xref:System.IO.FileStream>専用オブジェクトのメソッドの呼び出しなど) が必要になります。  
  
 **操作を意味のある方法で実行できないため、実装が提供されていません。**  
 抽象基本クラスのメソッドの実装を提供するオブジェクトに対してメソッドを呼び出している場合、または汎用インターフェイスを実装していて、メソッドに意味のある実装がない場合、これは一般的な例外です。  
  
 たとえば、クラスは<xref:System.Convert> <xref:System.IConvertible>インターフェイスを実装します。これは、すべてのプリミティブ型を他のすべてのプリミティブ型に変換するメソッドを含める必要があることを意味します。 ただし、変換の多くはできません。 その結果、 <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType> <xref:System.DateTime>との<xref:System.Boolean>値の間で変換が行われないため<xref:System.NotSupportedException> 、メソッドの呼び出しによって例外がスローされます。  
  
 例外を除去するには、メソッド呼び出しを削除する必要があります。  
  
 **オブジェクトの状態では、メソッドの呼び出しはサポートされていません。**  
 オブジェクトの状態が原因で使用できない機能を持つメンバーを呼び出そうとしています。 次の3つの方法のいずれかで例外を除去できます。  
  
-   オブジェクトの状態は事前にわかっていますが、サポートされていないメソッドまたはプロパティを呼び出しました。 この場合、メンバー呼び出しはエラーであり、削除することができます。  
  
-   オブジェクトの状態が事前にわかっている (通常は、コードによってインスタンス化されているため)。しかし、オブジェクトが不適切に構成されています。 次の例は、この問題を示しています。 読み取り専用の<xref:System.IO.FileStream>オブジェクトを作成し、そのオブジェクトへの書き込みを試みます。  
  
     [!code-csharp[System.NotSupportedException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.NotSupportedException/cs/BadState1.cs#1)]
     [!code-vb[System.NotSupportedException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.NotSupportedException/vb/BadState1.vb#1)]  
  
     インスタンス化されたオブジェクトが意図した機能をサポートしていることを確認することで、例外を排除できます。 次の例では、 <xref:System.IO.FileStream> <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%29?displayProperty=nameWithType>コンストラクターに正しい引数を指定することによって、読み取り専用オブジェクトの問題を解決します。  
  
-   オブジェクトの状態が事前にわからず、オブジェクトが特定の操作をサポートしていません。 ほとんどの場合、オブジェクトには、特定の操作のセットをサポートするかどうかを示すプロパティまたはメソッドが含まれている必要があります。 オブジェクトの値を確認し、必要な場合にのみメンバーを呼び出すことにより、例外を除去できます。  
  
     次の例では`DetectEncoding` 、読み取りアクセスを<xref:System.NotSupportedException>サポートしていないストリームの先頭から読み取ろうとしたときに例外をスローするメソッドを定義しています。  
  
     [!code-csharp[System.NotSupportedException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.NotSupportedException/cs/TestProp1.cs#3)]
     [!code-vb[System.NotSupportedException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.NotSupportedException/vb/TestProp1.vb#3)]  
  
     この例外を回避するには、 <xref:System.IO.FileStream.CanRead%2A?displayProperty=nameWithType>プロパティの値を調べ、ストリームが読み取り専用の場合はメソッドを終了します。  
  
     [!code-csharp[System.NotSupportedException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.NotSupportedException/cs/TestProp2.cs#4)]
     [!code-vb[System.NotSupportedException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.NotSupportedException/vb/TestProp2.vb#4)]  
  
## <a name="related-exception-types"></a>関連する例外の種類  
 例外<xref:System.NotSupportedException>は、他の2つの例外の種類と密接に関連しています。  
  
 <xref:System.NotImplementedException>。  
 この例外は、メソッドが実装されていても、メンバーがそれ以降のバージョンで実装される場合、メンバーが特定のプラットフォームで使用できない場合、メンバーが抽象クラスに属していて、派生クラスが im を提供する必要がある場合にスローされます。plementation.  
  
 <xref:System.InvalidOperationException>  
 この例外は、要求された操作をオブジェクトが実行できる可能性がある場合にスローされます。また、オブジェクトの状態によって、操作を実行できるかどうかが決まります。  
  
## <a name="net-compact-framework-notes"></a>.NET Compact Framework メモ  
 [!INCLUDE[Compact](~/includes/compact-md.md)] での作業でネイティブ関数に P/Invoke を使用しているとき、この例外は次の場合にスローされます。  
  
-   マネージド コード内の宣言が正しくない。  
  
-   実行しようとしている操作を [!INCLUDE[Compact](~/includes/compact-md.md)] がサポートしていない。  
  
-   エクスポート時に DLL 名が変形処理されている。  
  
 <xref:System.NotSupportedException.%23ctor%2A>例外がスローされた場合は、次のチェックボックスをオンにします。  
  
-   [!INCLUDE[Compact](~/includes/compact-md.md)] の P/Invoke 制限違反。  
  
-   割り当て済みのメモリを必要とする引数。 存在する場合は、既存の変数への参照を渡す必要があります。  
  
-   エクスポートされた関数の名前が正しいかどうか。 これは、 [DumpBin](https://msdn.microsoft.com/library/c1h23y6c.aspx)を使用して確認できます。  
  
-   渡そうとしている引数の数が多すぎないかどうか。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <altmember cref="T:System.IO.FileStream" />
    <related type="Article" href="~/docs/standard/exceptions/index.md">.NET での例外の処理とスロー</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.NotSupportedException" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotSupportedException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NotSupportedException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotSupportedException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.NotSupportedException" /> クラスの新しいインスタンスの <see cref="P:System.Exception.Message" /> プロパティを初期化し、その値としてエラーを説明するシステム提供のメッセージを指定します。 このメッセージには、現在のシステムのカルチャが考慮されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.NotSupportedException> インスタンスの初期プロパティ値を次の表に示します。  
  
|プロパティ|[値]|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`。|  
|<xref:System.Exception.Message%2A>|ローカライズされたエラー メッセージ文字列。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotSupportedException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NotSupportedException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotSupportedException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new NotSupportedException : string -&gt; NotSupportedException" Usage="new System.NotSupportedException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">エラーを説明する <see cref="T:System.String" />。 <paramref name="message" /> の内容は、ユーザーが理解できる内容にします。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</param>
        <summary>指定したエラー メッセージを使用して、<see cref="T:System.NotSupportedException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.NotSupportedException> インスタンスの初期プロパティ値を次の表に示します。  
  
|プロパティ|[値]|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`。|  
|<xref:System.Exception.Message%2A>|エラー メッセージ文字列。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NotSupportedException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NotSupportedException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new NotSupportedException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; NotSupportedException" Usage="new System.NotSupportedException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
        <param name="context">転送元または転送先に関するコンテキスト情報。</param>
        <summary>シリアル化したデータを使用して、<see cref="T:System.NotSupportedException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは、逆シリアル化中に、ストリームで送信された例外オブジェクトを再構築するために呼び出されます。 詳細については、次を参照してください。 [XML および SOAP シリアル化](~/docs/standard/serialization/xml-and-soap-serialization.md)します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md">XML シリアル化および SOAP シリアル化</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotSupportedException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NotSupportedException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotSupportedException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new NotSupportedException : string * Exception -&gt; NotSupportedException" Usage="new System.NotSupportedException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">例外の原因を説明するエラー メッセージ。</param>
        <param name="innerException">現在の例外の原因となった例外。 <paramref name="innerException" /> パラメーターが null 参照でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</param>
        <summary>指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.NotSupportedException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 前の例外の直接の結果としてスローされる例外については、<xref:System.Exception.InnerException%2A> プロパティに、前の例外への参照を含める必要があります。 <xref:System.Exception.InnerException%2A> プロパティは、コンストラクターに渡されたものと同じ値を返します。`null` プロパティによって内部例外値がコンストラクターに渡されなかった場合は、<xref:System.Exception.InnerException%2A> を返します。  
  
 <xref:System.NotSupportedException> インスタンスの初期プロパティ値を次の表に示します。  
  
|プロパティ|[値]|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|内部例外の参照。|  
|<xref:System.Exception.Message%2A>|エラー メッセージ文字列。|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md">.NET での例外の処理とスロー</related>
      </Docs>
    </Member>
  </Members>
</Type>
