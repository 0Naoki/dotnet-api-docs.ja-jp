<Type Name="UInt64" FullName="System.UInt64">
  <Metadata><Meta Name="ms.openlocfilehash" Value="815cef69494578bed0a0c1ba73134d58693df2e9" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70685034" /></Metadata><TypeSignature Language="C#" Value="public struct UInt64 : IComparable, IComparable&lt;ulong&gt;, IConvertible, IEquatable&lt;ulong&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit unsigned int64 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int64&gt;, class System.IConvertible, class System.IEquatable`1&lt;unsigned int64&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.UInt64" />
  <TypeSignature Language="VB.NET" Value="Public Structure UInt64&#xA;Implements IComparable, IComparable(Of ULong), IConvertible, IEquatable(Of ULong), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class UInt64 : IComparable, IComparable&lt;System::UInt64&gt;, IConvertible, IEquatable&lt;System::UInt64&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type uint64 = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.UInt64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.UInt64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c46b7-101">64 ビット符号なし整数を表します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-101">Represents a 64-bit unsigned integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-102">値<xref:System.UInt64>型は、0から18446744073709551615までの値を持つ符号なし整数を表します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-102">The <xref:System.UInt64> value type represents unsigned integers with values ranging from 0 to 18,446,744,073,709,551,615.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c46b7-103"><xref:System.UInt64>型は CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-103">The <xref:System.UInt64> type is not CLS-compliant.</span></span> <span data-ttu-id="c46b7-104">CLS 準拠の代替型は<xref:System.Decimal>です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-104">The CLS-compliant alternative type is <xref:System.Decimal>.</span></span> <span data-ttu-id="c46b7-105"><xref:System.Int64>を使用すると、 <xref:System.UInt64> 0 からまで<xref:System.Int64.MaxValue>の範囲の値を置き換えることができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-105"><xref:System.Int64> can be used instead to replace a <xref:System.UInt64> value that ranges from zero to <xref:System.Int64.MaxValue>.</span></span> <span data-ttu-id="c46b7-106">CLS 準拠の詳細については、「言語への[非依存性と言語に依存しないコンポーネント](~/docs/standard/language-independence-and-language-independent-components.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-106">For more information about CLS compliance, see [Language Independence and Language-Independent Components](~/docs/standard/language-independence-and-language-independent-components.md).</span></span>  
  
 <span data-ttu-id="c46b7-107"><xref:System.UInt64>この型のインスタンスを比較し、インスタンスの値をその文字列形式に変換し、数値の文字列形式をこの型のインスタンスに変換するメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-107"><xref:System.UInt64> provides methods to compare instances of this type, convert the value of an instance to its string representation, and convert the string representation of a number to an instance of this type.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="c46b7-108">この型のすべてのメンバーは、スレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="c46b7-108">All members of this type are thread safe.</span></span> <span data-ttu-id="c46b7-109">インスタンスの状態を変更するように見えるメンバーは、実際には新しい値で初期化された新しいインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-109">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="c46b7-110">他の型と同様に、この型のインスタンスを含む共有変数の読み取りと書き込みは、スレッドセーフを保証するためにロックによって保護される必要があります。</span><span class="sxs-lookup"><span data-stu-id="c46b7-110">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.Int64" />
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="c46b7-111">サンプル: .NET Core WinForms 書式指定ユーティリティC#()</span><span class="sxs-lookup"><span data-stu-id="c46b7-111">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="c46b7-112">サンプル: .NET Core WinForms の書式設定ユーティリティ (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c46b7-112">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c46b7-113">指定したオブジェクトまたは <see cref="T:System.UInt64" /> とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-113">Compares this instance to a specified object or <see cref="T:System.UInt64" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="uint64.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c46b7-114">比較対象のオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c46b7-114">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c46b7-115">指定したオブジェクトとこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-115">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="c46b7-116">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="c46b7-116">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="c46b7-117">戻り値</span><span class="sxs-lookup"><span data-stu-id="c46b7-117">Return Value</span></span> 
 </term><description> <span data-ttu-id="c46b7-118">説明</span><span class="sxs-lookup"><span data-stu-id="c46b7-118">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="c46b7-119">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="c46b7-119">Less than zero</span></span> 
 </term><description> <span data-ttu-id="c46b7-120">このインスタンスは <paramref name="value" /> よりも小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-120">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="c46b7-121">0</span><span class="sxs-lookup"><span data-stu-id="c46b7-121">Zero</span></span> 
 </term><description> <span data-ttu-id="c46b7-122">このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-122">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="c46b7-123">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="c46b7-123">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="c46b7-124">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-124">This instance is greater than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="c46b7-125">- または -</span><span class="sxs-lookup"><span data-stu-id="c46b7-125">-or-</span></span> 
 <span data-ttu-id="c46b7-126"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-126"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-127">のすべての<xref:System.UInt64>インスタンスは、その値に関係なく、より`null`も大きいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-127">Any instance of <xref:System.UInt64>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="c46b7-128">`value`または`null`の<xref:System.UInt64>インスタンスである必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-128">`value` must be `null` or an instance of <xref:System.UInt64>; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c46b7-129">次のコード例は、 <xref:System.UInt64.CompareTo%2A>メソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-129">The following code example demonstrates the <xref:System.UInt64.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[UInt64 Example#3](~/samples/snippets/cpp/VS_Snippets_CLR/UInt64 Example/CPP/source.cpp#3)]
 [!code-csharp[UInt64 Example#3](~/samples/snippets/csharp/VS_Snippets_CLR/UInt64 Example/CS/source.cs#3)]
 [!code-vb[UInt64 Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt64 Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c46b7-130"><paramref name="value" /> が <see cref="T:System.UInt64" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-130"><paramref name="value" /> is not a <see cref="T:System.UInt64" />.</span></span></exception>
        <altmember cref="M:System.UInt64.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.CompareTo(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : uint64 -&gt; int&#xA;override this.CompareTo : uint64 -&gt; int" Usage="uint64.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c46b7-131">比較対象の符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="c46b7-131">An unsigned integer to compare.</span></span></param>
        <summary><span data-ttu-id="c46b7-132">指定した 64 ビット符号なし整数とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-132">Compares this instance to a specified 64-bit unsigned integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="c46b7-133">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="c46b7-133">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="c46b7-134">戻り値</span><span class="sxs-lookup"><span data-stu-id="c46b7-134">Return Value</span></span> 
 </term><description> <span data-ttu-id="c46b7-135">説明</span><span class="sxs-lookup"><span data-stu-id="c46b7-135">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="c46b7-136">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="c46b7-136">Less than zero</span></span> 
 </term><description> <span data-ttu-id="c46b7-137">このインスタンスは <paramref name="value" /> よりも小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-137">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="c46b7-138">0</span><span class="sxs-lookup"><span data-stu-id="c46b7-138">Zero</span></span> 
 </term><description> <span data-ttu-id="c46b7-139">このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-139">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="c46b7-140">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="c46b7-140">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="c46b7-141">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-141">This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-142">このメソッドは、 <xref:System.IComparable%601?displayProperty=nameWithType> `value`パラメーターをオブジェクトに変換する必要<xref:System.UInt64.CompareTo%2A?displayProperty=nameWithType>がないため、インターフェイスを実装し、メソッドよりも若干優れています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-142">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.UInt64.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="c46b7-143">プログラミング言語によっては、パラメーターの型がインスタンスの<xref:System.UInt64.CompareTo%2A>型よりも少ない (幅が狭い) メソッドをコーディングすることができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-143">Depending on your programming language, it might be possible to code a <xref:System.UInt64.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="c46b7-144">これが可能なのは、一部のプログラミング言語では、インスタンスと同数のビットを持つ型として、パラメーターを表す暗黙的な拡大変換が実行されるためです。</span><span class="sxs-lookup"><span data-stu-id="c46b7-144">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="c46b7-145">たとえば、インスタンスの型が<xref:System.Int32>で、パラメーターの型がである<xref:System.Byte>とします。</span><span class="sxs-lookup"><span data-stu-id="c46b7-145">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="c46b7-146">Microsoft C#コンパイラは、パラメーターの<xref:System.Int32>値をオブジェクトとして表現する命令を生成し、 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> <xref:System.Int32>インスタンスと<xref:System.Int32>パラメーターの値を比較するメソッドを生成します。もの.</span><span class="sxs-lookup"><span data-stu-id="c46b7-146">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="c46b7-147">プログラミング言語のドキュメントを参照して、コンパイラが数値型の暗黙的な拡大変換を実行するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-147">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c46b7-148">次のコード例は、いくつかの値および<xref:System.UInt64.CompareTo%2A>参照型について、ジェネリックおよび非ジェネリックバージョンのメソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-148">The following code example demonstrates generic and nongeneric versions of the <xref:System.UInt64.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt64.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c46b7-149">対象のインスタンスが、指定したオブジェクトまたは <see cref="T:System.UInt64" /> に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-149">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.UInt64" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uint64.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="c46b7-150">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c46b7-150">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="c46b7-151">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-151">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="c46b7-152"><paramref name="obj" /> が <see cref="T:System.UInt64" /> のインスタンスで、このインスタンスの値に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c46b7-152"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.UInt64" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c46b7-153">メソッドの<xref:System.UInt64.Equals%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-153">The following example demonstrates the <xref:System.UInt64.Equals%2A> method.</span></span>  
  
 [!code-csharp[System.UInt64.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equals1.cs#1)]
 [!code-vb[System.UInt64.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="c46b7-154">コンパイラのオーバーロードの解決では、2つ<see cref="M:System.UInt64.Equals(System.UInt64)" />のメソッドオーバーロードの動作の明らかな違いを考慮することができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-154">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt64.Equals(System.UInt64)" /> method overloads.</span></span> <span data-ttu-id="c46b7-155"><paramref name="obj" />引数との<see cref="T:System.UInt64" />間の暗黙の変換が定義されていて、引数<see cref="T:System.Object" />がとして型指定されていない<see cref="M:System.UInt64.Equals(System.UInt64)" />場合、コンパイラは暗黙的な変換を実行し、メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-155">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt64" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method.</span></span> <span data-ttu-id="c46b7-156">それ以外の場合は<see cref="M:System.UInt64.Equals(System.Object)" /> 、メソッドを呼び出します<see langword="false" /> 。この<paramref name="obj" />メソッドは、引数<see cref="T:System.UInt64" />が値でない場合は常にを返します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-156">Otherwise, they call the <see cref="M:System.UInt64.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt64" /> value.</span></span> <span data-ttu-id="c46b7-157">次の例は、2つのメソッドオーバーロード間の動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-157">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="c46b7-158"><see cref="T:System.Byte" /> <see langword="true" /> <see cref="M:System.UInt64.Equals(System.UInt64)" /> 、、およびの <see cref="T:System.UInt32" /> 各値の場合、最初の比較では、コンパイラが自動的に拡大変換を実行してメソッドを呼び出します。一方、2番目の比較では、 <see cref="T:System.UInt16" />コンパイラ<see langword="false" />が<see cref="M:System.UInt64.Equals(System.Object)" />メソッドを呼び出すため、が返されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-158">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, and <see cref="T:System.UInt32" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt64.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="c46b7-159">[! code-csharp[# 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)][! コード-vb[システム. UInt64. 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="c46b7-159">[!code-csharp[System.UInt64.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)] [!code-vb[System.UInt64.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</span></span></para></block>
        <altmember cref="M:System.UInt64.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ulong obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(unsigned int64 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Equals(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::UInt64 obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : uint64 -&gt; bool" Usage="uint64.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.UInt64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="c46b7-160">このインスタンスと比較する <see cref="T:System.UInt64" /> 値。</span><span class="sxs-lookup"><span data-stu-id="c46b7-160">A <see cref="T:System.UInt64" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="c46b7-161">このインスタンスが指定した <see cref="T:System.UInt64" /> 値に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-161">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.UInt64" /> value.</span></span></summary>
        <returns><span data-ttu-id="c46b7-162"><paramref name="obj" /> の値がこのインスタンスと同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c46b7-162"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-163">このメソッドは、 <xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイスを実装し、 `obj`パラメーターを<xref:System.UInt64.Equals%2A>オブジェクトに変換する必要がないため、より少しのパフォーマンスを発揮します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-163">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.UInt64.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c46b7-164">メソッドの<xref:System.UInt64.Equals%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-164">The following example demonstrates the <xref:System.UInt64.Equals%2A> method.</span></span>  
  
 [!code-cpp[UInt64_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/UInt64_Equals/CPP/uint64_equals.cpp#1)]
 [!code-csharp[UInt64_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/UInt64_Equals/CS/uint64_equals.cs#1)]
 [!code-vb[UInt64_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt64_Equals/VB/uint64_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="c46b7-165">コンパイラのオーバーロードの解決では、2つ<see cref="M:System.UInt64.Equals(System.UInt64)" />のメソッドオーバーロードの動作の明らかな違いを考慮することができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-165">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt64.Equals(System.UInt64)" /> method overloads.</span></span> <span data-ttu-id="c46b7-166"><paramref name="obj" />引数との<see cref="T:System.UInt64" />間の暗黙の変換が定義されていて、引数<see cref="T:System.Object" />がとして型指定されていない<see cref="M:System.UInt64.Equals(System.UInt64)" />場合、コンパイラは暗黙的な変換を実行し、メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-166">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt64" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method.</span></span> <span data-ttu-id="c46b7-167">それ以外の場合は<see cref="M:System.UInt64.Equals(System.Object)" /> 、メソッドを呼び出します<see langword="false" /> 。この<paramref name="obj" />メソッドは、引数<see cref="T:System.UInt64" />が値でない場合は常にを返します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-167">Otherwise, they call the <see cref="M:System.UInt64.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt64" /> value.</span></span> <span data-ttu-id="c46b7-168">次の例は、2つのメソッドオーバーロード間の動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-168">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="c46b7-169"><see cref="T:System.Byte" /> <see langword="true" /> <see cref="M:System.UInt64.Equals(System.UInt64)" /> 、、およびの <see cref="T:System.UInt32" /> 各値の場合、最初の比較では、コンパイラが自動的に拡大変換を実行してメソッドを呼び出します。一方、2番目の比較では、 <see cref="T:System.UInt16" />コンパイラ<see langword="false" />が<see cref="M:System.UInt64.Equals(System.Object)" />メソッドを呼び出すため、が返されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-169">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, and <see cref="T:System.UInt32" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt64.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="c46b7-170">[! code-csharp[# 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)][! コード-vb[システム. UInt64. 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="c46b7-170">[!code-csharp[System.UInt64.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)] [!code-vb[System.UInt64.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uint64.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c46b7-171">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-171">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="c46b7-172">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="c46b7-172">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="uint64.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c46b7-173"><see cref="T:System.TypeCode" /> 値型の <see cref="T:System.UInt64" />を返します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-173">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.UInt64" />.</span></span></summary>
        <returns><span data-ttu-id="c46b7-174">列挙型定数 <see cref="F:System.TypeCode.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="c46b7-174">The enumerated constant, <see cref="F:System.TypeCode.UInt64" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const ulong MaxValue = 18446744073709551615;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int64 MaxValue = unsigned int64(18446744073709551615)" />
      <MemberSignature Language="DocId" Value="F:System.UInt64.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As ULong  = 18446744073709551615" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt64 MaxValue = 18446744073709551615;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : uint64" Usage="System.uint64.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <MemberValue>18446744073709551615</MemberValue>
      <Docs>
        <summary><span data-ttu-id="c46b7-175"><see cref="T:System.UInt64" />の最大有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-175">Represents the largest possible value of <see cref="T:System.UInt64" />.</span></span> <span data-ttu-id="c46b7-176">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-176">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-177">この定数の値は18446744073709551615です。つまり、16進数の0xFFFFFFFFFFFFFFFF です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-177">The value of this constant is 18,446,744,073,709,551,615; that is, hexadecimal 0xFFFFFFFFFFFFFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c46b7-178">次の例では<xref:System.UInt64.MinValue> 、 <xref:System.UInt64.MaxValue> <xref:System.Double>フィールドとフィールドを使用して、型変換を実行<xref:System.UInt64>する前に、値が型の範囲内にあることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-178">The following example uses the <xref:System.UInt64.MinValue> and <xref:System.UInt64.MaxValue> fields to verify that a <xref:System.Double> value is within the range of the <xref:System.UInt64> type before it performs a type conversion.</span></span> <span data-ttu-id="c46b7-179">これにより<xref:System.OverflowException> 、実行時にが発生しなくなります。</span><span class="sxs-lookup"><span data-stu-id="c46b7-179">This prevents an <xref:System.OverflowException> at run time.</span></span>  
  
 [!code-csharp[System.UInt64.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt64.MaxValue/cs/MaxValue1.cs#1)]
 [!code-vb[System.UInt64.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt64.MaxValue/vb/MaxValue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt64.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const ulong MinValue = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int64 MinValue = unsigned int64(0)" />
      <MemberSignature Language="DocId" Value="F:System.UInt64.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As ULong  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt64 MinValue = 0;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : uint64" Usage="System.uint64.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="c46b7-180"><see cref="T:System.UInt64" /> の最小有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-180">Represents the smallest possible value of <see cref="T:System.UInt64" />.</span></span> <span data-ttu-id="c46b7-181">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-181">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-182">この定数の値は0です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-182">The value of this constant is 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c46b7-183">次の例では<xref:System.UInt64.MinValue> 、 <xref:System.UInt64.MaxValue> <xref:System.Double>フィールドとフィールドを使用して、型変換を実行<xref:System.UInt64>する前に、値が型の範囲内にあることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-183">The following example uses the <xref:System.UInt64.MinValue> and <xref:System.UInt64.MaxValue> fields to verify that a <xref:System.Double> value is within the range of the <xref:System.UInt64> type before it performs a type conversion.</span></span> <span data-ttu-id="c46b7-184">これにより<xref:System.OverflowException> 、実行時にが発生しなくなります。</span><span class="sxs-lookup"><span data-stu-id="c46b7-184">This prevents an <xref:System.OverflowException> at run time.</span></span>  
  
 [!code-csharp[System.UInt64.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt64.MaxValue/cs/MaxValue1.cs#1)]
 [!code-vb[System.UInt64.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt64.MaxValue/vb/MaxValue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt64.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c46b7-185">数値の文字列形式を、それと等価な 64 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-185">Converts the string representation of a number to its 64-bit unsigned integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.UInt64.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; uint64" Usage="System.uint64.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c46b7-186">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="c46b7-186">A string that represents the number to convert.</span></span></param>
        <summary><span data-ttu-id="c46b7-187">数値の文字列形式を、それと等価な 64 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-187">Converts the string representation of a number to its 64-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="c46b7-188"><paramref name="s" /> に格納されている数値と等しい 64 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="c46b7-188">A 64-bit unsigned integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-189">パラメーター `s`は、次の形式の数値の文字列形式である必要があります。</span><span class="sxs-lookup"><span data-stu-id="c46b7-189">The `s` parameter should be the string representation of a number in the following form.</span></span>  
  
 <span data-ttu-id="c46b7-190">[*ws*][*sign*]*数字*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="c46b7-190">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="c46b7-191">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-191">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="c46b7-192">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-192">The following table describes each element.</span></span>  
  
|<span data-ttu-id="c46b7-193">要素</span><span class="sxs-lookup"><span data-stu-id="c46b7-193">Element</span></span>|<span data-ttu-id="c46b7-194">説明</span><span class="sxs-lookup"><span data-stu-id="c46b7-194">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="c46b7-195">*ws*</span><span class="sxs-lookup"><span data-stu-id="c46b7-195">*ws*</span></span>|<span data-ttu-id="c46b7-196">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="c46b7-196">Optional white space.</span></span>|  
|<span data-ttu-id="c46b7-197">*sign*</span><span class="sxs-lookup"><span data-stu-id="c46b7-197">*sign*</span></span>|<span data-ttu-id="c46b7-198">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="c46b7-198">An optional sign.</span></span> <span data-ttu-id="c46b7-199">有効な符号文字は、現在<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>の<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>カルチャのプロパティおよびプロパティによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-199">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="c46b7-200">ただし、負の記号はゼロでのみ使用できます。それ以外の場合、メソッド<xref:System.OverflowException>はをスローします。</span><span class="sxs-lookup"><span data-stu-id="c46b7-200">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="c46b7-201">*数字*</span><span class="sxs-lookup"><span data-stu-id="c46b7-201">*digits*</span></span>|<span data-ttu-id="c46b7-202">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="c46b7-202">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="c46b7-203">先頭の0は無視されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-203">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="c46b7-204">`s`パラメーターで指定した文字列は、 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-204">The string specified by the `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="c46b7-205">これには、桁区切り記号や小数点を含めることはできません。また、小数点を含めることもできません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-205">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="c46b7-206">パラメーターは、現在のシステムカルチャに対して初期化<xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType>されたオブジェクトの書式情報を使用して解析されます。 `s`</span><span class="sxs-lookup"><span data-stu-id="c46b7-206">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> object that is initialized for the current system culture.</span></span> <span data-ttu-id="c46b7-207">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-207">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c46b7-208">特定のカルチャの書式情報を使用して文字列を解析するには<xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> 、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-208">To parse a string by using the formatting information of a specific culture, use the <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c46b7-209">次の例では<xref:System.UInt64.Parse%2A> 、メソッドを使用して、文字列値の配列を解析します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-209">The following example uses the <xref:System.UInt64.Parse%2A> method to parse an array of string values.</span></span>  
  
 [!code-csharp[System.UInt64.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.parse/cs/parse1.cs#1)]
 [!code-vb[System.UInt64.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.parse/vb/parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c46b7-210"><paramref name="s" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-210">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="c46b7-211"><paramref name="s" /> パラメーターの形式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-211">The <paramref name="s" /> parameter is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="c46b7-212"><paramref name="s" /> パラメーターが、<see cref="F:System.UInt64.MinValue" /> 未満の数値か、<see cref="F:System.UInt64.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-212">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.UInt64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="c46b7-213">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="c46b7-213">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; uint64" Usage="System.uint64.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c46b7-214">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="c46b7-214">A string that represents the number to convert.</span></span> <span data-ttu-id="c46b7-215">文字列は、<paramref name="style" /> パラメーターで指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-215">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="c46b7-216"><paramref name="s" /> に許可されている書式を指定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="c46b7-216">A bitwise combination of the enumeration values that specifies the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="c46b7-217">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-217">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="c46b7-218">指定したスタイルの数値の文字列形式を、それと等価な 64 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-218">Converts the string representation of a number in a specified style to its 64-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="c46b7-219"><paramref name="s" /> で指定した数値と等しい 64 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="c46b7-219">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-220">`style` パラメーター `s` では、解析操作を成功させるためにパラメーターで使用できるスタイル要素 (空白、正または負の記号、桁区切り記号、桁区切り記号、小数点の記号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-220">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="c46b7-221">`style`は、 <xref:System.Globalization.NumberStyles>列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="c46b7-221">`style` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="c46b7-222">パラメーター `style`を使用すると、が 16 `s`進値の文字列形式を格納している場合、で`s`表される数値システム (10 進数または16進数) が実行時にのみ認識される場合、または、次の場合に有効になります。で`s`空白または記号を許可しないようにします。</span><span class="sxs-lookup"><span data-stu-id="c46b7-222">The `style` parameter makes this method overload useful when `s` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `s` is known only at run time, or when you want to disallow white space or a sign symbol in `s`.</span></span>  
  
 <span data-ttu-id="c46b7-223">の`style`値に応じて、パラメーター `s`には次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-223">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="c46b7-224">[*ws*][*$*] [*sign*] [*digits*]*数字*[。*fractional_digits*] [E [*sign*]*exponential_digits*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="c46b7-224">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="c46b7-225">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-225">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="c46b7-226">が`style`含ま<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>れて`s`いる場合、パラメーターには次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-226">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="c46b7-227">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="c46b7-227">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="c46b7-228">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-228">The following table describes each element.</span></span>  
  
|<span data-ttu-id="c46b7-229">要素</span><span class="sxs-lookup"><span data-stu-id="c46b7-229">Element</span></span>|<span data-ttu-id="c46b7-230">説明</span><span class="sxs-lookup"><span data-stu-id="c46b7-230">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="c46b7-231">*ws*</span><span class="sxs-lookup"><span data-stu-id="c46b7-231">*ws*</span></span>|<span data-ttu-id="c46b7-232">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="c46b7-232">Optional white space.</span></span> <span data-ttu-id="c46b7-233">が`s` `s` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> `style`フラグを含む`style`場合は、の先頭に空白が表示されます。また、にフラグが含まれている場合は、の末尾に空白文字を含めることができます。 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c46b7-233">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="c46b7-234">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="c46b7-234">A culture-specific currency symbol.</span></span> <span data-ttu-id="c46b7-235">文字列内での位置は、現在の<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>カルチャ<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>のプロパティとプロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-235">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="c46b7-236">に<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグが含まれている場合`style`は`s` 、現在のカルチャの通貨記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-236">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c46b7-237">*sign*</span><span class="sxs-lookup"><span data-stu-id="c46b7-237">*sign*</span></span>|<span data-ttu-id="c46b7-238">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="c46b7-238">An optional sign.</span></span> <span data-ttu-id="c46b7-239">がフラグ`s`を含む`style` `style` <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>場合は、の先頭に符号が表示されます。また、にフラグ`s`が含まれている場合は、の末尾にも表示されます。 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c46b7-239">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c46b7-240">に`s` <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグが含まれている場合`style`は、かっこを使用して負の値を示すことができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-240">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c46b7-241">ただし、負の記号はゼロでのみ使用できます。それ以外の場合、メソッド<xref:System.OverflowException>はをスローします。</span><span class="sxs-lookup"><span data-stu-id="c46b7-241">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="c46b7-242">*数字*</span><span class="sxs-lookup"><span data-stu-id="c46b7-242">*digits*</span></span><br /><br /> <span data-ttu-id="c46b7-243">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="c46b7-243">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="c46b7-244">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="c46b7-244">*exponential_digits*</span></span>|<span data-ttu-id="c46b7-245">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="c46b7-245">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="c46b7-246">*Fractional_digits*の場合、数字0のみが有効です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-246">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="c46b7-247">*、*</span><span class="sxs-lookup"><span data-stu-id="c46b7-247">*,*</span></span>|<span data-ttu-id="c46b7-248">カルチャ固有のグループ区切り記号。</span><span class="sxs-lookup"><span data-stu-id="c46b7-248">A culture-specific group separator symbol.</span></span> <span data-ttu-id="c46b7-249">に<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグが含まれている場合`style`は`s` 、現在のカルチャのグループ区切り記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-249">The current culture's group separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c46b7-250">*.*</span><span class="sxs-lookup"><span data-stu-id="c46b7-250">*.*</span></span>|<span data-ttu-id="c46b7-251">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="c46b7-251">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="c46b7-252">に<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグが含まれている場合`style` 、現在`s`のカルチャの小数点の記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-252">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c46b7-253">解析操作が成功するためには、数字0のみが小数点の数字として表示されます。*fractional_digits*に他の数字が含まれ<xref:System.FormatException>ている場合は、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-253">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="c46b7-254">E</span><span class="sxs-lookup"><span data-stu-id="c46b7-254">E</span></span>|<span data-ttu-id="c46b7-255">"E" または "E" 文字。値が指数 (科学的) 表記で表されることを示します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-255">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="c46b7-256">に`s` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグが含まれている場合`style` 、パラメーターは指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-256">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c46b7-257">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="c46b7-257">*hexdigits*</span></span>|<span data-ttu-id="c46b7-258">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="c46b7-258">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="c46b7-259">の終端の NUL (U + 0000) 文字`s`は、 `style`引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-259">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="c46b7-260">数字のみを含む文字列 ( <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイルに対応) は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-260">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="c46b7-261">残り<xref:System.Globalization.NumberStyles>のメンバーのほとんどは、入力文字列に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-261">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="c46b7-262">次の表は、の<xref:System.Globalization.NumberStyles>各メンバーが、に`s`存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-262">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="c46b7-263">`NumberStyles` の値</span><span class="sxs-lookup"><span data-stu-id="c46b7-263">`NumberStyles` value</span></span>|<span data-ttu-id="c46b7-264">数字に加え`s`てで許可される要素</span><span class="sxs-lookup"><span data-stu-id="c46b7-264">Elements permitted in `s` in addition to digits</span></span>|  
|--------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="c46b7-265">*Digits*要素のみ。</span><span class="sxs-lookup"><span data-stu-id="c46b7-265">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="c46b7-266">小数点 (.) と*小数部の桁*の要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-266">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="c46b7-267">*Exponential_digits*と共に指数表記を示す "e" または "e" 文字。</span><span class="sxs-lookup"><span data-stu-id="c46b7-267">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="c46b7-268">の `s` 先頭にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-268">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="c46b7-269">の `s` 末尾の*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-269">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="c46b7-270">の `s` 先頭にある*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-270">The *sign* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="c46b7-271">の `s` 末尾の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-271">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="c46b7-272">数値を囲むかっこ形式の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-272">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="c46b7-273">桁区切り記号 (,) 要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-273">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="c46b7-274">Currency ($) 要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-274">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="c46b7-275">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-275">All elements.</span></span> <span data-ttu-id="c46b7-276">ただし、 `s`は、16進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-276">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="c46b7-277">`s`の\*\* `s`先頭または末尾にある ws 要素、の先頭に*符号*、小数点 (*.*) 記号。</span><span class="sxs-lookup"><span data-stu-id="c46b7-277">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="c46b7-278">パラメーター `s`では、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-278">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="c46b7-279">、、桁区切り記号 (*、*)、および小数点 (.) 要素。\*\* `ws` `sign`</span><span class="sxs-lookup"><span data-stu-id="c46b7-279">The `ws`, `sign`, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="c46b7-280">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-280">All elements.</span></span> <span data-ttu-id="c46b7-281">ただし、 `s`は16進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-281">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="c46b7-282">の特定の<xref:System.Globalization.NumberStyles>スタイル`s`要素の存在を許可するが必要ではない他の値とは異なり、 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>スタイル値は、内の`s`個々の数字が常にとして解釈されることを意味します。16進文字。</span><span class="sxs-lookup"><span data-stu-id="c46b7-282">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for, but do not require, the presence of particular style elements in `s`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `s` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="c46b7-283">有効な16進文字は、0-9、A-F、a-f です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-283">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="c46b7-284">"0x" のようなプレフィックスはサポートされていないため、解析操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-284">A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="c46b7-285">`style` パラメーターと組み合わせることができる他のフラグは、 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>とだけです。 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c46b7-285">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c46b7-286">(列挙<xref:System.Globalization.NumberStyles>体には、2つの<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>空白フラグを含む複合数値スタイルが含まれています)。</span><span class="sxs-lookup"><span data-stu-id="c46b7-286">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c46b7-287">が`s` 16 進数の文字列形式の場合、16進数と区別する装飾 ( `0x`や`&h`など) を前に付けることはできません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-287">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="c46b7-288">これにより、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-288">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="c46b7-289">パラメーターは、現在のシステムカルチャに対して初期化<xref:System.Globalization.NumberFormatInfo>されたオブジェクトの書式情報を使用して解析されます。 `s`</span><span class="sxs-lookup"><span data-stu-id="c46b7-289">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="c46b7-290">解析操作に使用する書式情報を持つカルチャを指定するには、 <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>オーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-290">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c46b7-291">次の例では、複数の<xref:System.Globalization.NumberStyles>値を使用して、文字列配列内の各要素の解析を試みます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-291">The following example tries to parse each element in a string array by using a number of <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt64.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.parse/cs/parseex2.cs#2)]
 [!code-vb[System.UInt64.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.parse/vb/parseex2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c46b7-292"><paramref name="s" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-292">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c46b7-293"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-293"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="c46b7-294">- または -</span><span class="sxs-lookup"><span data-stu-id="c46b7-294">-or-</span></span> 
 <span data-ttu-id="c46b7-295"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-295"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="c46b7-296"><paramref name="s" /> パラメーターの形式が <paramref name="style" /> に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-296">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="c46b7-297"><paramref name="s" /> パラメーターが、<see cref="F:System.UInt64.MinValue" /> 未満の数値か、<see cref="F:System.UInt64.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-297">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span>  
  
<span data-ttu-id="c46b7-298">- または -</span><span class="sxs-lookup"><span data-stu-id="c46b7-298">-or-</span></span> 
 <span data-ttu-id="c46b7-299"><paramref name="s" /> に 0 以外の小数部の桁が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-299"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="Overload:System.UInt64.ToString" />
        <altmember cref="Overload:System.UInt64.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="c46b7-300">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="c46b7-300">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; uint64" Usage="System.uint64.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c46b7-301">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="c46b7-301">A string that represents the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="c46b7-302"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c46b7-302">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="c46b7-303">指定したカルチャ固有の書式による数値の文字列形式を、それと等価な 64 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-303">Converts the string representation of a number in a specified culture-specific format to its 64-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="c46b7-304"><paramref name="s" /> で指定した数値と等しい 64 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="c46b7-304">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-305"><xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29>メソッドのこのオーバーロードは、通常、さまざまな方法で書式設定できるテキストを<xref:System.UInt64>値に変換するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-305">This overload of the <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to a <xref:System.UInt64> value.</span></span> <span data-ttu-id="c46b7-306">たとえば、ユーザーが入力したテキストを HTML テキストボックスに数値に変換するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-306">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="c46b7-307">パラメーター `s`には、次のような形式の数値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-307">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="c46b7-308">jax-ws[sign] 数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="c46b7-308">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="c46b7-309">角かっこ ([および]) 内の項目は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-309">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="c46b7-310">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-310">The following table describes each element.</span></span>  
  
|<span data-ttu-id="c46b7-311">要素</span><span class="sxs-lookup"><span data-stu-id="c46b7-311">Element</span></span>|<span data-ttu-id="c46b7-312">説明</span><span class="sxs-lookup"><span data-stu-id="c46b7-312">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="c46b7-313">*ws*</span><span class="sxs-lookup"><span data-stu-id="c46b7-313">*ws*</span></span>|<span data-ttu-id="c46b7-314">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="c46b7-314">Optional white space.</span></span>|  
|<span data-ttu-id="c46b7-315">*sign*</span><span class="sxs-lookup"><span data-stu-id="c46b7-315">*sign*</span></span>|<span data-ttu-id="c46b7-316">省略可能な正符号。値がゼロを`s`表す場合は負の符号。</span><span class="sxs-lookup"><span data-stu-id="c46b7-316">An optional positive sign, or a negative sign if `s` represents the value zero.</span></span>|  
|<span data-ttu-id="c46b7-317">*数字*</span><span class="sxs-lookup"><span data-stu-id="c46b7-317">*digits*</span></span>|<span data-ttu-id="c46b7-318">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="c46b7-318">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="c46b7-319">S パラメーターは、 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-319">The s parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="c46b7-320">符号なし整数値の10進数に加えて、先頭と末尾のスペースだけでなく先頭の符号も許可されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-320">In addition to the unsigned integer value's decimal digits, only leading and trailing spaces along with a leading sign is allowed.</span></span> <span data-ttu-id="c46b7-321">(負の符号が存在する場合`s` 、は値0を表す必要があり<xref:System.OverflowException>ます。それ以外の場合、メソッドはをスローします)。`s`で <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> 使用できるカルチャ固有の書式情報と共にスタイル要素を明示的に定義するには、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-321">(If the negative sign is present, `s` must represent a value of zero, or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="c46b7-322">パラメーター `provider` <xref:System.IFormatProvider.GetFormat%2A> <xref:System.Globalization.NumberFormatInfo>は、の書式 `s` に関するカルチャ固有の情報を提供するオブジェクトを返すメソッドを持つ実装です。 <xref:System.IFormatProvider></span><span class="sxs-lookup"><span data-stu-id="c46b7-322">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="c46b7-323">パラメーターを使用して、解析`provider`操作にカスタム書式情報を提供するには、次の3つの方法があります。</span><span class="sxs-lookup"><span data-stu-id="c46b7-323">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="c46b7-324">書式設定情報を提供<xref:System.Globalization.NumberFormatInfo>する実際のオブジェクトを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-324">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="c46b7-325">(の実装で<xref:System.IFormatProvider.GetFormat%2A>は、単にそれ自体が返されます)。</span><span class="sxs-lookup"><span data-stu-id="c46b7-325">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="c46b7-326">書式設定を使用<xref:System.Globalization.CultureInfo>するカルチャを指定するオブジェクトを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-326">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="c46b7-327">この<xref:System.Globalization.CultureInfo.NumberFormat%2A>プロパティは、書式設定情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-327">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="c46b7-328">カスタム<xref:System.IFormatProvider>実装を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-328">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="c46b7-329">このメソッドは、書式設定情報<xref:System.Globalization.NumberFormatInfo>を提供するオブジェクトをインスタンス化して返す必要があります。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="c46b7-329">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="c46b7-330">が`provider` の `null` 場合は、現在のカルチャのが使用されます。 <xref:System.Globalization.NumberFormatInfo></span><span class="sxs-lookup"><span data-stu-id="c46b7-330">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c46b7-331">次の例は、Web フォームのボタンクリックイベントハンドラーです。</span><span class="sxs-lookup"><span data-stu-id="c46b7-331">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="c46b7-332">このメソッドは、 <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>プロパティによって返される配列を使用して、ユーザーのロケールを決定します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-332">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="c46b7-333">次に、その<xref:System.Globalization.CultureInfo>ロケールに対応するオブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-333">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="c46b7-334">次に、その<xref:System.Globalization.CultureInfo>オブジェクトに属する<xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29>  <xref:System.UInt64> オブジェクトをメソッドに渡して、ユーザーの入力を値に変換します。 <xref:System.Globalization.NumberFormatInfo></span><span class="sxs-lookup"><span data-stu-id="c46b7-334">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.UInt64> value.</span></span>  
  
 [!code-csharp[ParseMethod#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#1)]
 [!code-vb[ParseMethod#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c46b7-335"><paramref name="s" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-335">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="c46b7-336"><paramref name="s" /> パラメーターが正しいスタイルではありません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-336">The <paramref name="s" /> parameter is not in the correct style.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="c46b7-337"><paramref name="s" /> パラメーターが、<see cref="F:System.UInt64.MinValue" /> 未満の数値か、<see cref="F:System.UInt64.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-337">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.UInt64.ToString" />
        <altmember cref="Overload:System.UInt64.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="c46b7-338">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="c46b7-338">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As ULong" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; uint64" Usage="System.uint64.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; uint64" Usage="System.uint64.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c46b7-339">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="c46b7-339">A string that represents the number to convert.</span></span> <span data-ttu-id="c46b7-340">文字列は、<paramref name="style" /> パラメーターで指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-340">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="c46b7-341"><paramref name="s" /> で存在する可能性を持つスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="c46b7-341">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="c46b7-342">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-342">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="c46b7-343"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c46b7-343">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="c46b7-344">指定したスタイルおよびカルチャ固有の書式による数値の文字列形式を、それと等価な 64 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-344">Converts the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="c46b7-345"><paramref name="s" /> で指定した数値と等しい 64 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="c46b7-345">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-346">パラメーター `style`は、解析操作を成功させるために`s`パラメーターで使用できるスタイル要素 (空白、正または負の記号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-346">The `style` parameter defines the style elements (such as white space or the positive or negative sign symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="c46b7-347"><xref:System.Globalization.NumberStyles>列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="c46b7-347">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span>  
  
 <span data-ttu-id="c46b7-348">の`style`値に応じて、パラメーター `s`には次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-348">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="c46b7-349">[*ws*][*$*] [*sign*]*数字*[です。*fractional_digits*] [E [*sign*]*exponential_digits*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="c46b7-349">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="c46b7-350">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-350">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="c46b7-351">が`style`含ま<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>れて`s`いる場合、パラメーターには次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-351">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="c46b7-352">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="c46b7-352">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="c46b7-353">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-353">The following table describes each element.</span></span>  
  
|<span data-ttu-id="c46b7-354">要素</span><span class="sxs-lookup"><span data-stu-id="c46b7-354">Element</span></span>|<span data-ttu-id="c46b7-355">説明</span><span class="sxs-lookup"><span data-stu-id="c46b7-355">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="c46b7-356">*ws*</span><span class="sxs-lookup"><span data-stu-id="c46b7-356">*ws*</span></span>|<span data-ttu-id="c46b7-357">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="c46b7-357">Optional white space.</span></span> <span data-ttu-id="c46b7-358">が`s` `s` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> `style`フラグを含む`style`場合は、の先頭に空白が表示されます。また、にフラグが含まれている場合は、の末尾に空白文字を含めることができます。 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c46b7-358">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="c46b7-359">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="c46b7-359">A culture-specific currency symbol.</span></span> <span data-ttu-id="c46b7-360">文字列内での位置<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>は、 `provider`パラメーターの<xref:System.IFormatProvider.GetFormat%2A>メソッドによっ<xref:System.Globalization.NumberFormatInfo>て返されるオブジェクトのプロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-360">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object that is returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="c46b7-361">に<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグが含まれて`s`いる`style`場合は、通貨記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-361">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c46b7-362">*sign*</span><span class="sxs-lookup"><span data-stu-id="c46b7-362">*sign*</span></span>|<span data-ttu-id="c46b7-363">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="c46b7-363">An optional sign.</span></span> <span data-ttu-id="c46b7-364">(が負の符号<xref:System.OverflowException>を`s`含み、0以外の数値を表している場合、メソッドはをスローします)。`s`に<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> `s` `style`フラグが含ま`style`れている場合は、の先頭に符号が表示されます。また、にフラグが含まれている場合は、の末尾にも表示されます。 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c46b7-364">(The method throws an <xref:System.OverflowException> if `s` includes a negative sign and represents a non-zero number.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c46b7-365">に`s` <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグが含まれている場合`style`は、かっこを使用して負の値を示すことができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-365">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c46b7-366">*数字*</span><span class="sxs-lookup"><span data-stu-id="c46b7-366">*digits*</span></span>|<span data-ttu-id="c46b7-367">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="c46b7-367">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="c46b7-368">*.*</span><span class="sxs-lookup"><span data-stu-id="c46b7-368">*.*</span></span>|<span data-ttu-id="c46b7-369">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="c46b7-369">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="c46b7-370">に<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグが含まれている場合`style` 、現在`s`のカルチャの小数点の記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-370">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c46b7-371">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="c46b7-371">*fractional_digits*</span></span>|<span data-ttu-id="c46b7-372">に`style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグが含まれている場合は、数字0-9 の1回以上の出現、そうでない場合は1回以上の数字0が発生します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-372">One or more occurrences of the digit 0-9 if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, or one or more occurrences of the digit 0 if it does not.</span></span> <span data-ttu-id="c46b7-373">に<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグが含まれ`s`ている`style`場合にのみ、に小数点以下の桁数が表示されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-373">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c46b7-374">E</span><span class="sxs-lookup"><span data-stu-id="c46b7-374">E</span></span>|<span data-ttu-id="c46b7-375">"E" または "E" 文字。値が指数 (科学的) 表記で表されることを示します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-375">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="c46b7-376">に`s` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグが含まれている場合`style` 、パラメーターは指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-376">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c46b7-377">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="c46b7-377">*exponential_digits*</span></span>|<span data-ttu-id="c46b7-378">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="c46b7-378">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="c46b7-379">に`s` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグが含まれている場合`style` 、パラメーターは指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-379">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c46b7-380">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="c46b7-380">*hexdigits*</span></span>|<span data-ttu-id="c46b7-381">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="c46b7-381">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="c46b7-382">の終端の NUL (U + 0000) 文字`s`は、 `style`引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-382">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="c46b7-383">10進数の数字のみを含む文字列 ( <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイルに対応) は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-383">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="c46b7-384">残り<xref:System.Globalization.NumberStyles>のメンバーのほとんどは、この入力文字列に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-384">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="c46b7-385">次の表は、の<xref:System.Globalization.NumberStyles>各メンバーが、に`s`存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-385">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="c46b7-386">非複合`NumberStyles`値</span><span class="sxs-lookup"><span data-stu-id="c46b7-386">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="c46b7-387">数字に加え`s`てで許可される要素</span><span class="sxs-lookup"><span data-stu-id="c46b7-387">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="c46b7-388">10進数のみ。</span><span class="sxs-lookup"><span data-stu-id="c46b7-388">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="c46b7-389">小数点 (*.*) と*fractional_digits*の要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-389">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="c46b7-390">ただし、style に<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグが含まれていない場合、 *fractional_digits*は1桁以上の0桁で構成する<xref:System.OverflowException>必要があります。それ以外の場合は、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-390">However, if style does not include the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, *fractional_digits* must consist of only one or more 0 digits; otherwise, an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="c46b7-391">*Exponential_digits*と共に指数表記を示す "e" または "e" 文字。</span><span class="sxs-lookup"><span data-stu-id="c46b7-391">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="c46b7-392">の `s` 先頭にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-392">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="c46b7-393">の `s` 末尾の*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-393">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="c46b7-394">*数字*の前に符号を付けます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-394">A sign before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="c46b7-395">*数字*の後に符号を付けます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-395">A sign after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="c46b7-396">負の値を示す*数字*の前後のかっこ。</span><span class="sxs-lookup"><span data-stu-id="c46b7-396">Parentheses before and after *digits* to indicate a negative value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="c46b7-397">桁区切り記号 (*,*) 要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-397">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="c46b7-398">Currency (*$*) 要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-398">The currency (*$*) element.</span></span>|  
  
 <span data-ttu-id="c46b7-399">フラグが<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用されて`s`いる場合、は16進数の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="c46b7-399">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="c46b7-400">有効な16進文字は、0-9、A-F、a-f です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-400">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="c46b7-401">"0x" のようなプレフィックスはサポートされていないため、解析操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-401">A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="c46b7-402">他のフラグと組み合わせて使用できるのは<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 、と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>だけです。</span><span class="sxs-lookup"><span data-stu-id="c46b7-402">The only other flags that can be combined with it are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c46b7-403">(列挙<xref:System.Globalization.NumberStyles>体には、2つの<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>空白フラグを含む複合数値スタイルが含まれています)。</span><span class="sxs-lookup"><span data-stu-id="c46b7-403">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c46b7-404">パラメーターが16進数の文字列表現である場合は、16進数と区別する装飾 ( `0x`や`&h`など) を前に付けることはできません。 `s`</span><span class="sxs-lookup"><span data-stu-id="c46b7-404">If the `s` parameter is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="c46b7-405">これにより、解析操作によって例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-405">This causes the parse operation to throw an exception.</span></span>  
  
 <span data-ttu-id="c46b7-406">パラメーター `provider` <xref:System.IFormatProvider.GetFormat%2A> <xref:System.Globalization.NumberFormatInfo>は、の書式 `s` に関するカルチャ固有の情報を提供するオブジェクトを返すメソッドを持つ実装です。 <xref:System.IFormatProvider></span><span class="sxs-lookup"><span data-stu-id="c46b7-406">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="c46b7-407">パラメーターを使用して、解析`provider`操作にカスタム書式情報を提供するには、次の3つの方法があります。</span><span class="sxs-lookup"><span data-stu-id="c46b7-407">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="c46b7-408">書式設定情報を提供<xref:System.Globalization.NumberFormatInfo>する実際のオブジェクトを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-408">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="c46b7-409">(の実装で<xref:System.IFormatProvider.GetFormat%2A>は、単にそれ自体が返されます)。</span><span class="sxs-lookup"><span data-stu-id="c46b7-409">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="c46b7-410">書式設定を使用<xref:System.Globalization.CultureInfo>するカルチャを指定するオブジェクトを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-410">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="c46b7-411">この<xref:System.Globalization.CultureInfo.NumberFormat%2A>プロパティは、書式設定情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-411">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="c46b7-412">カスタム<xref:System.IFormatProvider>実装を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-412">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="c46b7-413">このメソッドは、書式設定情報<xref:System.Globalization.NumberFormatInfo>を提供するオブジェクトをインスタンス化して返す必要があります。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="c46b7-413">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="c46b7-414"><xref:System.Globalization.NumberFormatInfo>が`provider` の場合は、現在のカルチャのオブジェクトが使用されます。 `null`</span><span class="sxs-lookup"><span data-stu-id="c46b7-414">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c46b7-415">次の例では<xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> 、メソッドを使用して、数値のさまざまな文字列形式を64ビット符号なし整数値に変換します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-415">The following example uses the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method to convert various string representations of numbers to 64-bit unsigned integer values.</span></span>  
  
 [!code-csharp[System.UInt64.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.parse/cs/parseex4.cs#4)]
 [!code-vb[System.UInt64.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.parse/vb/parseex4.vb#4)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c46b7-416"><paramref name="s" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-416">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c46b7-417"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-417"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="c46b7-418">- または -</span><span class="sxs-lookup"><span data-stu-id="c46b7-418">-or-</span></span> 
 <span data-ttu-id="c46b7-419"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-419"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="c46b7-420"><paramref name="s" /> パラメーターの形式が <paramref name="style" /> に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-420">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="c46b7-421"><paramref name="s" /> パラメーターが、<see cref="F:System.UInt64.MinValue" /> 未満の数値か、<see cref="F:System.UInt64.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-421">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span>  
  
<span data-ttu-id="c46b7-422">- または -</span><span class="sxs-lookup"><span data-stu-id="c46b7-422">-or-</span></span> 
 <span data-ttu-id="c46b7-423"><paramref name="s" /> に 0 以外の小数部の桁が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-423"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="Overload:System.UInt64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="c46b7-424">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="c46b7-424">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c46b7-425">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-425">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c46b7-426">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-426">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c46b7-427">現在のインスタンスの値が 0 でない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c46b7-427"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-428">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-428">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c46b7-429">これは、<xref:System.UInt64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-429">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c46b7-430">別の<xref:System.Convert.ToBoolean%28System.UInt64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c46b7-430">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c46b7-431">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-431">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c46b7-432">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-432">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c46b7-433"><see cref="T:System.Byte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="c46b7-433">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-434">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-434">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c46b7-435">これは、<xref:System.UInt64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-435">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c46b7-436">別の<xref:System.Convert.ToByte%28System.UInt64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c46b7-436">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c46b7-437">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-437">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c46b7-438">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-438">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c46b7-439"><see cref="T:System.Char" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="c46b7-439">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-440">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-440">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c46b7-441">これは、<xref:System.UInt64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-441">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c46b7-442">別の<xref:System.Convert.ToChar%28System.UInt64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c46b7-442">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c46b7-443">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-443">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c46b7-444">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-444">This conversion is not supported.</span></span> <span data-ttu-id="c46b7-445">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-445">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="c46b7-446">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-446">This conversion is not supported.</span></span> <span data-ttu-id="c46b7-447">値は返されません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-447">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c46b7-448">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="c46b7-448">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c46b7-449">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-449">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c46b7-450">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-450">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c46b7-451"><see cref="T:System.Decimal" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="c46b7-451">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-452">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-452">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c46b7-453">これは、<xref:System.UInt64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-453">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c46b7-454">別の<xref:System.Convert.ToDecimal%28System.UInt64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c46b7-454">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c46b7-455">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-455">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c46b7-456">このメンバーの説明については、<see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-456">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c46b7-457"><see cref="T:System.Double" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="c46b7-457">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-458">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-458">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c46b7-459">これは、<xref:System.UInt64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-459">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c46b7-460">別の<xref:System.Convert.ToDouble%28System.UInt64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c46b7-460">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c46b7-461">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-461">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c46b7-462">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-462">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c46b7-463"><see cref="T:System.Int16" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="c46b7-463">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-464">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-464">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c46b7-465">これは、<xref:System.UInt64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-465">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c46b7-466">別の<xref:System.Convert.ToInt16%28System.UInt64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c46b7-466">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c46b7-467">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-467">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c46b7-468">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-468">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c46b7-469"><see cref="T:System.Int32" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="c46b7-469">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-470">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-470">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c46b7-471">これは、<xref:System.UInt64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-471">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c46b7-472">別の<xref:System.Convert.ToInt32%28System.UInt64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c46b7-472">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c46b7-473">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-473">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c46b7-474">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-474">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c46b7-475"><see cref="T:System.Int64" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="c46b7-475">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-476">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-476">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c46b7-477">これは、<xref:System.UInt64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-477">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c46b7-478">別の<xref:System.Convert.ToInt64%28System.UInt64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c46b7-478">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c46b7-479">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-479">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c46b7-480">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-480">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c46b7-481"><see cref="T:System.SByte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="c46b7-481">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-482">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-482">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c46b7-483">これは、<xref:System.UInt64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-483">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c46b7-484">別の<xref:System.Convert.ToSByte%28System.UInt64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c46b7-484">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c46b7-485">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-485">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c46b7-486">このメンバーの説明については、<see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-486">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c46b7-487"><see cref="T:System.Single" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="c46b7-487">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-488">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-488">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c46b7-489">これは、<xref:System.UInt64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-489">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c46b7-490">別の<xref:System.Convert.ToSingle%28System.UInt64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c46b7-490">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="c46b7-491">この <see cref="T:System.UInt64" /> 値の変換後の型。</span><span class="sxs-lookup"><span data-stu-id="c46b7-491">The type to which to convert this <see cref="T:System.UInt64" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="c46b7-492">戻り値の書式に関する情報を提供する <see cref="T:System.IFormatProvider" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="c46b7-492">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="c46b7-493">このメンバーの説明については、<see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-493">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c46b7-494"><paramref name="type" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="c46b7-494">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-495">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-495">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c46b7-496">これは、<xref:System.UInt64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-496">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c46b7-497">別の方法として、 `static` (`Shared` Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c46b7-497">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c46b7-498">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-498">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c46b7-499">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-499">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c46b7-500"><see cref="T:System.UInt16" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="c46b7-500">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-501">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-501">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c46b7-502">これは、<xref:System.UInt64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-502">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c46b7-503">別の<xref:System.Convert.ToUInt16%28System.UInt64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c46b7-503">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c46b7-504">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-504">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c46b7-505">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-505">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c46b7-506"><see cref="T:System.UInt32" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="c46b7-506">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-507">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-507">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c46b7-508">これは、<xref:System.UInt64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-508">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="c46b7-509">別の<xref:System.Convert.ToUInt32%28System.UInt64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c46b7-509">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c46b7-510">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-510">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="c46b7-511">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-511">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="c46b7-512">変更されていない、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="c46b7-512">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-513">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-513">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c46b7-514">これは、<xref:System.UInt64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-514">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c46b7-515">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-515">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="uint64.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c46b7-516">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-516">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="c46b7-517">0 から 9 までの一連の数字から構成され、符号または先行ゼロを含まない、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="c46b7-517">The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-518">メソッド<xref:System.UInt64.ToString>は、現在<xref:System.UInt64>のカルチャの<xref:System.Globalization.NumberFormatInfo>オブジェクトを使用して、既定の ("G" または "general") 形式の値を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-518">The <xref:System.UInt64.ToString> method formats a <xref:System.UInt64> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="c46b7-519">別の形式またはカルチャを指定する場合は、次のように<xref:System.UInt64.ToString%2A>メソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-519">If you want to specify a different format or culture, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="c46b7-520">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="c46b7-520">To use format</span></span>|<span data-ttu-id="c46b7-521">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="c46b7-521">For culture</span></span>|<span data-ttu-id="c46b7-522">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="c46b7-522">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="c46b7-523">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="c46b7-523">Default ("G") format</span></span>|<span data-ttu-id="c46b7-524">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="c46b7-524">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="c46b7-525">特定の形式</span><span class="sxs-lookup"><span data-stu-id="c46b7-525">A specific format</span></span>|<span data-ttu-id="c46b7-526">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="c46b7-526">Default (current) culture</span></span>|<xref:System.UInt64.ToString%28System.String%29>|  
|<span data-ttu-id="c46b7-527">特定の形式</span><span class="sxs-lookup"><span data-stu-id="c46b7-527">A specific format</span></span>|<span data-ttu-id="c46b7-528">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="c46b7-528">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
   
  
## Examples  
 <span data-ttu-id="c46b7-529">次の例では<xref:System.UInt64> 、既定<xref:System.UInt64.ToString>のメソッドを使用して値を表示します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-529">The following example displays a <xref:System.UInt64> value by using the default <xref:System.UInt64.ToString> method.</span></span> <span data-ttu-id="c46b7-530">また、一部の標準書式指定子<xref:System.UInt64>を使用した結果得られる値の文字列形式も表示されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-530">It also displays the string representations of the <xref:System.UInt64> value that results from using some standard format specifiers.</span></span> <span data-ttu-id="c46b7-531">これらの例は、en-us カルチャの書式指定規則を使用して表示されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-531">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.UInt64.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="c46b7-532">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="c46b7-532">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="uint64.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c46b7-533">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c46b7-533">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="c46b7-534">このインスタンスの数値を、指定したカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-534">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="c46b7-535">0 から 9 までの一連の数字から構成され、符号または先行ゼロを含まない、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="c46b7-535">The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-536">メソッド<xref:System.UInt64.ToString%28System.IFormatProvider%29>は、指定<xref:System.UInt64>されたカルチャの<xref:System.Globalization.NumberFormatInfo>オブジェクトを使用して、既定の ("G" または "general") 形式の値を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-536">The <xref:System.UInt64.ToString%28System.IFormatProvider%29> method formats a <xref:System.UInt64> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="c46b7-537">別の形式または現在のカルチャを指定する場合は、次のように<xref:System.UInt64.ToString%2A>メソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-537">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="c46b7-538">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="c46b7-538">To use format</span></span>|<span data-ttu-id="c46b7-539">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="c46b7-539">For culture</span></span>|<span data-ttu-id="c46b7-540">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="c46b7-540">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="c46b7-541">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="c46b7-541">Default ("G") format</span></span>|<span data-ttu-id="c46b7-542">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="c46b7-542">Default (current) culture</span></span>|<xref:System.UInt64.ToString>|  
|<span data-ttu-id="c46b7-543">特定の形式</span><span class="sxs-lookup"><span data-stu-id="c46b7-543">A specific format</span></span>|<span data-ttu-id="c46b7-544">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="c46b7-544">Default (current) culture</span></span>|<xref:System.UInt64.ToString%28System.String%29>|  
|<span data-ttu-id="c46b7-545">特定の形式</span><span class="sxs-lookup"><span data-stu-id="c46b7-545">A specific format</span></span>|<span data-ttu-id="c46b7-546">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="c46b7-546">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="c46b7-547">`provider` パラメーター <xref:System.IFormatProvider> は、の実装です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-547">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="c46b7-548">このメソッドは、 <xref:System.Globalization.NumberFormatInfo>カルチャ固有の書式情報を提供するオブジェクトを返します。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="c46b7-548">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="c46b7-549">ただし、標準の<xref:System.Globalization.NumberFormatInfo>数値書式指定子 ("G") を使用して書式設定する場合、のプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-549">However, none of the properties of the <xref:System.Globalization.NumberFormatInfo> are used when formatting with the general numeric format specifier ("G").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c46b7-550">次の例では、インバリアントカルチャに対して1つを含む、複数の書式プロバイダーを使用して、64ビット符号付き整数値の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-550">The following example formats a 64-bit signed integer value by using several format providers, including one for the invariant culture.</span></span> <span data-ttu-id="c46b7-551">この例の出力は、書式プロバイダーに関係なく、 <xref:System.UInt64.ToString%28System.IFormatProvider%29>メソッドによって返される書式設定された文字列が同じであることを示しています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-551">The output from the example illustrates that the formatted string returned by the <xref:System.UInt64.ToString%28System.IFormatProvider%29> method is the same regardless of the format provider.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring2.cs#2)]
 [!code-vb[System.UInt64.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="c46b7-552">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="c46b7-552">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="uint64.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="c46b7-553">数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="c46b7-553">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="c46b7-554">このインスタンスの数値を、指定した書式を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-554">Converts the numeric value of this instance to its equivalent string representation using the specified format.</span></span></summary>
        <returns><span data-ttu-id="c46b7-555"><paramref name="format" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="c46b7-555">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-556">メソッド<xref:System.UInt64.ToString%28System.String%29>は、現在<xref:System.UInt64>のカルチャの規則を表す<xref:System.Globalization.NumberFormatInfo>オブジェクトを使用して、指定した書式で値の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-556">The <xref:System.UInt64.ToString%28System.String%29> method formats a <xref:System.UInt64> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="c46b7-557">既定の形式 ("G" または一般) を使用する場合、または別のカルチャを指定する場合は、次<xref:System.UInt64.ToString%2A>のようにメソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-557">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="c46b7-558">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="c46b7-558">To use format</span></span>|<span data-ttu-id="c46b7-559">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="c46b7-559">For culture</span></span>|<span data-ttu-id="c46b7-560">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="c46b7-560">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="c46b7-561">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="c46b7-561">Default ("G") format</span></span>|<span data-ttu-id="c46b7-562">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="c46b7-562">Default (current) culture</span></span>|<xref:System.UInt64.ToString>|  
|<span data-ttu-id="c46b7-563">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="c46b7-563">Default ("G") format</span></span>|<span data-ttu-id="c46b7-564">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="c46b7-564">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="c46b7-565">特定の形式</span><span class="sxs-lookup"><span data-stu-id="c46b7-565">A specific format</span></span>|<span data-ttu-id="c46b7-566">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="c46b7-566">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="c46b7-567">パラメーター `format`には、任意の有効な[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)、または[カスタムの数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)の任意の組み合わせを指定できます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-567">The `format` parameter can be any valid [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="c46b7-568">が`format` <xref:System.String.Empty?displayProperty=nameWithType>またはに <xref:System.UInt64> 等しい場合、現在のオブジェクトの戻り値は、一般書式指定子 ("G") で書式設定されます。 `null`</span><span class="sxs-lookup"><span data-stu-id="c46b7-568">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt64> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="c46b7-569">が`format`その他の値の場合、メソッドは<xref:System.FormatException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="c46b7-569">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="c46b7-570">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-570">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="c46b7-571">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-571">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="c46b7-572">.NET Framework での書式設定のサポートの詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-572">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="c46b7-573">返される文字列の形式は、現在のカルチャ<xref:System.Globalization.NumberFormatInfo>のオブジェクトによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-573">The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="c46b7-574">`format`パラメーターに応じて、このオブジェクトは、出力文字列内の区切り記号や小数点の記号などの記号を制御します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-574">Depending on the `format` parameter, this object controls symbols such as the group separator and the decimal point symbol in the output string.</span></span> <span data-ttu-id="c46b7-575">現在のカルチャ以外のカルチャの書式設定情報を提供するに<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>は、オーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-575">To provide formatting information for cultures other than the current culture, call the <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c46b7-576">次の例では、各標準書式指定文字列といくつかのカスタム書式指定文字列を使用して、64ビットの符号なし整数値を表示します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-576">The following example displays a 64-bit unsigned integer value by using each standard format string and some custom format strings.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring3.cs#3)]
 [!code-vb[System.UInt64.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="c46b7-577"><paramref name="format" /> パラメーターが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-577">The <paramref name="format" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="c46b7-578">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="c46b7-578">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="c46b7-579">方法: 数値に先行するゼロを埋め込む</span><span class="sxs-lookup"><span data-stu-id="c46b7-579">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="uint64.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="c46b7-580">数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="c46b7-580">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="c46b7-581">このインスタンスに関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c46b7-581">An object that supplies culture-specific formatting information about this instance.</span></span></param>
        <summary><span data-ttu-id="c46b7-582">このインスタンスの数値を、指定した書式およびカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-582">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="c46b7-583"><paramref name="format" /> および <paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="c46b7-583">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-584">メソッド<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>は、指定<xref:System.UInt64>されたカルチャの<xref:System.Globalization.NumberFormatInfo>オブジェクトを使用して、指定された書式で値の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-584">The <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.UInt64> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="c46b7-585">既定の書式設定またはカルチャ設定を使用する場合は、次のよう<xref:System.UInt64.ToString%2A>にメソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-585">If you want to use default format or culture settings, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="c46b7-586">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="c46b7-586">To use format</span></span>|<span data-ttu-id="c46b7-587">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="c46b7-587">For culture</span></span>|<span data-ttu-id="c46b7-588">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="c46b7-588">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="c46b7-589">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="c46b7-589">Default ("G") format</span></span>|<span data-ttu-id="c46b7-590">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="c46b7-590">Default (current) culture</span></span>|<xref:System.UInt64.ToString>|  
|<span data-ttu-id="c46b7-591">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="c46b7-591">Default ("G") format</span></span>|<span data-ttu-id="c46b7-592">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="c46b7-592">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="c46b7-593">特定の形式</span><span class="sxs-lookup"><span data-stu-id="c46b7-593">A specific format</span></span>|<span data-ttu-id="c46b7-594">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="c46b7-594">Default (current) culture</span></span>|<xref:System.UInt64.ToString%28System.String%29>|  
  
 <span data-ttu-id="c46b7-595">パラメーター `format`には、任意の有効な[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)、または[カスタムの数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)の任意の組み合わせを指定できます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-595">The `format` parameter can be any valid [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="c46b7-596">が`format` <xref:System.String.Empty?displayProperty=nameWithType>またはに <xref:System.UInt64> 等しい場合、現在のオブジェクトの戻り値は、一般書式指定子 ("G") で書式設定されます。 `null`</span><span class="sxs-lookup"><span data-stu-id="c46b7-596">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt64> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="c46b7-597">が`format`その他の値の場合、メソッドは<xref:System.FormatException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="c46b7-597">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="c46b7-598">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-598">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="c46b7-599">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-599">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="c46b7-600">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-600">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="c46b7-601">`provider` パラメーター <xref:System.IFormatProvider> は、の実装です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-601">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="c46b7-602">このメソッドは、 <xref:System.Globalization.NumberFormatInfo>このメソッドによって返される文字列の書式に関するカルチャ固有の情報を提供するオブジェクトを返します。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="c46b7-602">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="c46b7-603"><xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> <xref:System.Type> <xref:System.Globalization.NumberFormatInfo>メソッドが呼び出されると、 `provider`パラメーターのメソッドを呼び出し、型を表すオブジェクトを渡します。 <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29></span><span class="sxs-lookup"><span data-stu-id="c46b7-603">When the <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="c46b7-604">次<xref:System.IFormatProvider.GetFormat%2A>に、メソッドは<xref:System.Globalization.NumberFormatInfo> 、グループの区切り記号や小数<xref:System.UInt64>点の記号など、現在の値の書式設定に関する情報を提供するオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-604">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information for formatting the current <xref:System.UInt64> value, such as the group separator symbol or the decimal point symbol.</span></span> <span data-ttu-id="c46b7-605">パラメーターを使用して、 `provider` <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>メソッドに書式情報を提供するには、次の3つの方法があります。</span><span class="sxs-lookup"><span data-stu-id="c46b7-605">There are three ways to use the `provider` parameter to supply formatting information to the <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> method:</span></span>  
  
-   <span data-ttu-id="c46b7-606">書式設定情報を<xref:System.Globalization.CultureInfo>提供するカルチャを表すオブジェクトを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-606">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="c46b7-607">その<xref:System.Globalization.CultureInfo.GetFormat%2A>メソッドは、 <xref:System.Globalization.NumberFormatInfo>そのカルチャに対して数値の書式設定情報を提供するオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-607">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="c46b7-608">数値の書式設定情報<xref:System.Globalization.NumberFormatInfo>を提供する実際のオブジェクトを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-608">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="c46b7-609">(の実装で<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>は、だけが返されます)。</span><span class="sxs-lookup"><span data-stu-id="c46b7-609">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="c46b7-610">を実装<xref:System.IFormatProvider>するカスタムオブジェクトを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-610">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="c46b7-611">このメソッドは、書式設定<xref:System.Globalization.NumberFormatInfo>情報を提供するオブジェクトをインスタンス化して返します。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="c46b7-611">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="c46b7-612"><xref:System.Globalization.NumberFormatInfo>が`provider` の `null` 場合、返される文字列の書式設定は、現在のカルチャのオブジェクトに基づいています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-612">If `provider` is `null`, the formatting of the returned string is based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c46b7-613">次の例では、標準の数値書式指定子といくつかの特定<xref:System.Globalization.CultureInfo>のオブジェクトを使用して、32ビットの符号なし整数値を表示します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-613">The following example displays a 32-bit unsigned integer value by using the standard numeric format specifiers and a number of specific <xref:System.Globalization.CultureInfo> objects.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring4.cs#4)]
 [!code-vb[System.UInt64.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="c46b7-614"><paramref name="format" /> パラメーターが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-614">The <paramref name="format" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="c46b7-615">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="c46b7-615">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="c46b7-616">方法: 数値に先行するゼロを埋め込む</span><span class="sxs-lookup"><span data-stu-id="c46b7-616">How to: Pad a Number with Leading Zeros</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="c46b7-617">サンプル: .NET Core WinForms 書式指定ユーティリティC#()</span><span class="sxs-lookup"><span data-stu-id="c46b7-617">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="c46b7-618">サンプル: .NET Core WinForms の書式設定ユーティリティ (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c46b7-618">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="uint64.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c46b7-619">数値の文字列形式を、それと等価の 64 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-619">Tries to convert the string representation of a number to its 64-bit unsigned integer equivalent.</span></span> <span data-ttu-id="c46b7-620">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-620">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.UInt64.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.ReadOnlySpan{System.Char},System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.uint64.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.UInt64" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.String,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.uint64.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.UInt64" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c46b7-621">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="c46b7-621">A string that represents the number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="c46b7-622">このメソッドから制御が返されたとき、変換に成功した場合は、<paramref name="s" /> に格納された数値と等価な 64 ビット符号なし整数値が格納されます。変換に失敗した場合は 0 が格納されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-622">When this method returns, contains the 64-bit unsigned integer value that is equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="c46b7-623"><paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、正しい形式ではない、または <see cref="F:System.UInt64.MinValue" /> より小さいか <see cref="F:System.UInt64.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-623">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span> <span data-ttu-id="c46b7-624">このパラメーターは初期化されていない状態で渡されています。<paramref name="result" /> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-624">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="c46b7-625">数値の文字列形式を、それと等価の 64 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-625">Tries to convert the string representation of a number to its 64-bit unsigned integer equivalent.</span></span> <span data-ttu-id="c46b7-626">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-626">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="c46b7-627"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c46b7-627"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-628">メソッドは<xref:System.UInt64.Parse%28System.String%29>メソッドに似ていますが、変換に失敗した場合に例外をスローしない点が異なります。 <xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29></span><span class="sxs-lookup"><span data-stu-id="c46b7-628">The <xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29> method is like the <xref:System.UInt64.Parse%28System.String%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="c46b7-629">このメソッドを使用すると、が無効で、正常に<xref:System.FormatException>解析`s`できない場合に、例外処理を使用してをテストする必要がなくなります。</span><span class="sxs-lookup"><span data-stu-id="c46b7-629">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="c46b7-630">パラメーター `s`は、次の形式の10進数の文字列形式である必要があります。</span><span class="sxs-lookup"><span data-stu-id="c46b7-630">The `s` parameter should be the string representation of a decimal number in the following form:</span></span>  
  
 <span data-ttu-id="c46b7-631">[*ws*][*sign*]*数字*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="c46b7-631">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="c46b7-632">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-632">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="c46b7-633">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-633">The following table describes each element.</span></span>  
  
|<span data-ttu-id="c46b7-634">要素</span><span class="sxs-lookup"><span data-stu-id="c46b7-634">Element</span></span>|<span data-ttu-id="c46b7-635">説明</span><span class="sxs-lookup"><span data-stu-id="c46b7-635">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="c46b7-636">*ws*</span><span class="sxs-lookup"><span data-stu-id="c46b7-636">*ws*</span></span>|<span data-ttu-id="c46b7-637">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="c46b7-637">Optional white space.</span></span>|  
|<span data-ttu-id="c46b7-638">*sign*</span><span class="sxs-lookup"><span data-stu-id="c46b7-638">*sign*</span></span>|<span data-ttu-id="c46b7-639">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="c46b7-639">An optional sign.</span></span> <span data-ttu-id="c46b7-640">有効な符号文字は、現在<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>の<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>カルチャのプロパティおよびプロパティによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-640">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="c46b7-641">*数字*</span><span class="sxs-lookup"><span data-stu-id="c46b7-641">*digits*</span></span>|<span data-ttu-id="c46b7-642">0 ~ 9 の範囲の10進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="c46b7-642">A sequence of decimal digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="c46b7-643">パラメーターは、 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイルを使用して解釈されます。 `s`</span><span class="sxs-lookup"><span data-stu-id="c46b7-643">The `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="c46b7-644">10進数の数字に加えて、先頭と末尾のスペースのみが許可されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-644">In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</span></span> <span data-ttu-id="c46b7-645">で`s`使用できるカルチャ固有の書式情報を使用してスタイル要素を明示的に定義するに<xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29>は、メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-645">To explicitly define the style elements with the culture-specific formatting information that can be present in `s`, call the <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c46b7-646">`s`パラメーターによって指定された文字列に、グループ区切り記号や小数点を含めることはできません。また、小数部分は使用できません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-646">The string specified by the `s` parameter cannot contain any group separators or decimal separator, and it cannot have a fractional portion.</span></span>  
  
 <span data-ttu-id="c46b7-647">パラメーターは、現在のシステムカルチャに対して<xref:System.Globalization.NumberFormatInfo>初期化されたオブジェクトの書式情報を使用して解析されます。 `s`</span><span class="sxs-lookup"><span data-stu-id="c46b7-647">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="c46b7-648">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c46b7-648">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c46b7-649">このオーバーロードは、 `s`パラメーター内のすべての桁を10進数として解釈します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-649">This overload interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="c46b7-650">16進数の文字列形式を解析するには、代わりに<xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29>オーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-650">To parse the string representation of a hexadecimal number, call the <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> overload instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c46b7-651">次の例では<xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29> 、文字列配列の各要素に対してメソッドを1回呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-651">The following example calls the <xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29> method once for each element in a string array.</span></span>  
  
 [!code-csharp[System.UInt64.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.UInt64.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <altmember cref="Overload:System.UInt64.Parse" />
        <altmember cref="Overload:System.UInt64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="c46b7-652">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="c46b7-652">Parsing Numeric Strings in .NET</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="c46b7-653">サンプル: .NET Core WinForms 書式指定ユーティリティC#()</span><span class="sxs-lookup"><span data-stu-id="c46b7-653">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="c46b7-654">サンプル: .NET Core WinForms の書式設定ユーティリティ (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c46b7-654">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.uint64.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.UInt64" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.uint64.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.UInt64" RefType="out" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="c46b7-655">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="c46b7-655">A string that represents the number to convert.</span></span> <span data-ttu-id="c46b7-656">文字列は、<paramref name="style" /> パラメーターで指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-656">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="c46b7-657"><paramref name="s" /> で使用可能な書式を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="c46b7-657">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="c46b7-658">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-658">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="c46b7-659"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c46b7-659">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="c46b7-660">変換が成功した場合、このメソッドが返されるときに、<paramref name="s" /> に格納された数値と等しい 64 ビット符号なし整数値を格納します。変換に失敗した場合は 0 を格納します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-660">When this method returns, contains the 64-bit unsigned integer value equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="c46b7-661"><paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、<paramref name="style" /> に準拠した形式ではない、または <see cref="F:System.UInt64.MinValue" /> より小さいか <see cref="F:System.UInt64.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-661">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span> <span data-ttu-id="c46b7-662">このパラメーターは初期化されていない状態で渡されています。<paramref name="result" /> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-662">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="c46b7-663">指定したスタイルおよびカルチャ固有の書式による数値の文字列形式を、それと等価な 64 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-663">Tries to convert the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent.</span></span> <span data-ttu-id="c46b7-664">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-664">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="c46b7-665"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c46b7-665"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46b7-666">メソッドは<xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>メソッドに似ていますが、変換に失敗した場合に例外をスローしない点が異なります。 <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29></span><span class="sxs-lookup"><span data-stu-id="c46b7-666">The <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> method is like the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="c46b7-667">このメソッドを使用すると、が無効で、正常に<xref:System.FormatException>解析`s`できない場合に、例外処理を使用してをテストする必要がなくなります。</span><span class="sxs-lookup"><span data-stu-id="c46b7-667">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="c46b7-668">パラメーター `style`は、解析操作を成功させるために`s`パラメーターで使用できるスタイル要素 (空白、正または負の符号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-668">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="c46b7-669"><xref:System.Globalization.NumberStyles>列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="c46b7-669">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="c46b7-670">の`style`値に応じて、パラメーター `s`には次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-670">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="c46b7-671">[*ws*][*$*] [*sign*] [*digits*]*数字*[。*fractional_digits*] [E [*sign*]*exponential_digits*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="c46b7-671">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="c46b7-672">角かっこ ([および]) 内の項目は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-672">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="c46b7-673">または、 `style`パラメーターにが<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>含まれ`s`ている場合、パラメーターには次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-673">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="c46b7-674">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="c46b7-674">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="c46b7-675">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-675">The following table describes each element.</span></span>  
  
|<span data-ttu-id="c46b7-676">要素</span><span class="sxs-lookup"><span data-stu-id="c46b7-676">Element</span></span>|<span data-ttu-id="c46b7-677">説明</span><span class="sxs-lookup"><span data-stu-id="c46b7-677">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="c46b7-678">*ws*</span><span class="sxs-lookup"><span data-stu-id="c46b7-678">*ws*</span></span>|<span data-ttu-id="c46b7-679">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="c46b7-679">Optional white space.</span></span> <span data-ttu-id="c46b7-680">が`s` `style` `s` フラグを <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 含む場合、の先頭に空白が表示されます。または、の末尾にフラグが含まれている場合もあります。 `style`  <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c46b7-680">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="c46b7-681">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="c46b7-681">A culture-specific currency symbol.</span></span> <span data-ttu-id="c46b7-682">文字列内での位置<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>は、 `provider`パラメーターの<xref:System.IFormatProvider.GetFormat%2A>メソッドによっ<xref:System.Globalization.NumberFormatInfo>て返されるオブジェクトのプロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-682">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="c46b7-683">に<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグが含まれて`s`いる`style`場合は、通貨記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-683">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c46b7-684">*sign*</span><span class="sxs-lookup"><span data-stu-id="c46b7-684">*sign*</span></span>|<span data-ttu-id="c46b7-685">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="c46b7-685">An optional sign.</span></span> <span data-ttu-id="c46b7-686">がフラグ`s`を含む`style` `style` <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>場合は、の先頭に符号が表示されます。また、にフラグ`s`が含まれている場合は、の末尾にも表示されます。 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c46b7-686">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c46b7-687">に`s` <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグが含まれている場合`style`は、かっこを使用して負の値を示すことができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-687">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c46b7-688">ただし、負の符号が指定さ`s`れている場合、は解析操作が成功するまでの値0のみを表すことができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-688">However, if the negative sign is present, `s` can only represent the value zero for the parse operation to succeed.</span></span>|  
|<span data-ttu-id="c46b7-689">*数字*</span><span class="sxs-lookup"><span data-stu-id="c46b7-689">*digits*</span></span>|<span data-ttu-id="c46b7-690">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="c46b7-690">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="c46b7-691">*、*</span><span class="sxs-lookup"><span data-stu-id="c46b7-691">*,*</span></span>|<span data-ttu-id="c46b7-692">カルチャ固有のグループ区切り記号。</span><span class="sxs-lookup"><span data-stu-id="c46b7-692">A culture-specific group separator.</span></span> <span data-ttu-id="c46b7-693">で`provider`指定されたカルチャの区切り記号は、 `s`に`style` <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグが含まれている場合は、に表示されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-693">The group separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c46b7-694">*.*</span><span class="sxs-lookup"><span data-stu-id="c46b7-694">*.*</span></span>|<span data-ttu-id="c46b7-695">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="c46b7-695">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="c46b7-696">で指定さ`provider`れたカルチャの小数点の記号は`style` 、に<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグが含まれている場合にで`s`使用できます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-696">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c46b7-697">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="c46b7-697">*fractional_digits*</span></span>|<span data-ttu-id="c46b7-698">数字0の1回以上の出現。</span><span class="sxs-lookup"><span data-stu-id="c46b7-698">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="c46b7-699">に<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグが含まれ`s`ている`style`場合にのみ、に小数点以下の桁数が表示されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-699">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c46b7-700">E</span><span class="sxs-lookup"><span data-stu-id="c46b7-700">E</span></span>|<span data-ttu-id="c46b7-701">"E" または "E" 文字。値が指数 (科学的) 表記で表されることを示します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-701">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="c46b7-702">に`s` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグが含まれている場合`style` 、パラメーターは指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-702">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c46b7-703">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="c46b7-703">*exponential_digits*</span></span>|<span data-ttu-id="c46b7-704">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="c46b7-704">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="c46b7-705">に`s` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグが含まれている場合`style` 、パラメーターは指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-705">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="c46b7-706">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="c46b7-706">*hexdigits*</span></span>|<span data-ttu-id="c46b7-707">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="c46b7-707">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="c46b7-708">の終端の NUL (U + 0000) 文字`s`は、 `style`引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-708">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="c46b7-709">10進数の数字のみを含む文字列 ( <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>フラグに対応) は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-709">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="c46b7-710">残り<xref:System.Globalization.NumberStyles>のメンバーのほとんどは、この入力文字列に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-710">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="c46b7-711">次の表は、の<xref:System.Globalization.NumberStyles>各メンバーが、に`s`存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="c46b7-711">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="c46b7-712">非複合`NumberStyles`値</span><span class="sxs-lookup"><span data-stu-id="c46b7-712">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="c46b7-713">数字に加えて許容される要素</span><span class="sxs-lookup"><span data-stu-id="c46b7-713">Elements permitted in value in addition to digits</span></span>|  
|------------------------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="c46b7-714">10進数のみ。</span><span class="sxs-lookup"><span data-stu-id="c46b7-714">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="c46b7-715">小数点 (*.*) と*fractional_digits*の要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-715">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="c46b7-716">ただし、 *fractional_digits*は1桁以上の0桁で構成されている必要`false`があります。それ以外の場合、メソッドはを返します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-716">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="c46b7-717">*Exponential_digits*と共に指数表記を示す "e" または "e" 文字。</span><span class="sxs-lookup"><span data-stu-id="c46b7-717">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="c46b7-718">が`s`指数表記の数値を表す場合、0以外の小数部分を持つことはできません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-718">If `s` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="c46b7-719">の `s` 先頭にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-719">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="c46b7-720">の `s` 末尾の*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-720">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="c46b7-721">*数字*の前にある*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-721">The *sign* element before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="c46b7-722">*数字*の後の*符号*要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-722">The *sign* element after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="c46b7-723">0の数値を囲むかっこ形式の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-723">The *sign* element in the form of parentheses enclosing a zero numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="c46b7-724">桁区切り記号 (*,*) 要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-724">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="c46b7-725">Currency (*$*) 要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-725">The currency (*$*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="c46b7-726">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-726">All elements.</span></span> <span data-ttu-id="c46b7-727">ただし、 `s`は、16進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-727">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="c46b7-728">`s`の\*\* `s`先頭または末尾にある ws 要素、の先頭に*符号*、小数点 (*.*) 記号。</span><span class="sxs-lookup"><span data-stu-id="c46b7-728">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="c46b7-729">パラメーター `s`では、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-729">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="c46b7-730">*Ws*、 *sign*、group separator (*,*)、および小数点 (*.*) の各要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-730">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="c46b7-731">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="c46b7-731">All elements.</span></span> <span data-ttu-id="c46b7-732">ただし、 `s`は16進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-732">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="c46b7-733">フラグが<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用されて`s`いる場合、は16進数の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="c46b7-733">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="c46b7-734">有効な16進文字は、0-9、A-F、a-f です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-734">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="c46b7-735">"0x" のようなプレフィックスはサポートされていないため、解析操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-735">A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="c46b7-736">内に`style` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>存在できるフラグは、とだけです。 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c46b7-736">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c46b7-737">(列挙体には、空白フラグ<xref:System.Globalization.NumberStyles.HexNumber>の両方を含む複合スタイルがあります)。 <xref:System.Globalization.NumberStyles></span><span class="sxs-lookup"><span data-stu-id="c46b7-737">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c46b7-738">が`s` 16 進数の文字列形式の場合、16進数と区別する装飾 ( `0x`や`&h`など) を前に付けることはできません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-738">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="c46b7-739">これにより、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-739">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="c46b7-740">`provider` パラメーター <xref:System.IFormatProvider> は、の実装です。</span><span class="sxs-lookup"><span data-stu-id="c46b7-740">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="c46b7-741">このメソッドは、 <xref:System.Globalization.NumberFormatInfo>の`s`書式に関するカルチャ固有の情報を提供するオブジェクトを返します。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="c46b7-741">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="c46b7-742">パラメーター `provider`には、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="c46b7-742">The `provider` parameter can be any one of the following:</span></span>  
  
-   <span data-ttu-id="c46b7-743">書式設定情報を提供するカルチャを表すオブジェクト。 <xref:System.Globalization.CultureInfo></span><span class="sxs-lookup"><span data-stu-id="c46b7-743">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="c46b7-744">その<xref:System.Globalization.CultureInfo.GetFormat%2A>メソッドは、 <xref:System.Globalization.NumberFormatInfo>そのカルチャに対して数値の書式設定情報を提供するオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-744">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="c46b7-745">数値の書式設定情報を提供するオブジェクト。 <xref:System.Globalization.NumberFormatInfo></span><span class="sxs-lookup"><span data-stu-id="c46b7-745">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="c46b7-746">(の実装で<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>は、だけが返されます)。</span><span class="sxs-lookup"><span data-stu-id="c46b7-746">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="c46b7-747">を実装<xref:System.IFormatProvider>するカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c46b7-747">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="c46b7-748">このメソッドは、書式設定<xref:System.Globalization.NumberFormatInfo>情報を提供するオブジェクトをインスタンス化して返します。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="c46b7-748">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="c46b7-749"><xref:System.Globalization.NumberFormatInfo>が`provider` の場合は、現在のカルチャのオブジェクトが使用されます。 `null`</span><span class="sxs-lookup"><span data-stu-id="c46b7-749">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c46b7-750">次の例では<xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> 、さまざまな文字列と<xref:System.Globalization.NumberStyles>値を指定してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c46b7-750">The following example calls the <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> method with a number of different strings and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt64.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tryparse/cs/tryparse2.cs#2)]
 [!code-vb[System.UInt64.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tryparse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c46b7-751"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-751"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="c46b7-752">- または -</span><span class="sxs-lookup"><span data-stu-id="c46b7-752">-or-</span></span> 
 <span data-ttu-id="c46b7-753"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="c46b7-753"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <altmember cref="Overload:System.UInt64.Parse" />
        <altmember cref="Overload:System.UInt64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="c46b7-754">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="c46b7-754">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
