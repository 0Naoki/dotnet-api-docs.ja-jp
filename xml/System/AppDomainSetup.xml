<Type Name="AppDomainSetup" FullName="System.AppDomainSetup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9dced8104e52a28a761c235256ae0fcc10e6ac62" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52733396" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AppDomainSetup : IAppDomainSetup" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit AppDomainSetup extends System.Object implements class System.IAppDomainSetup" />
  <TypeSignature Language="DocId" Value="T:System.AppDomainSetup" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AppDomainSetup&#xA;Implements IAppDomainSetup" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppDomainSetup sealed : IAppDomainSetup" />
  <TypeSignature Language="F#" Value="type AppDomainSetup = class&#xA;    interface IAppDomainSetup" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAppDomainSetup</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.AppDomain" /> のインスタンスに追加できるアセンブリ バインディング情報を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティの変更、<xref:System.AppDomainSetup>インスタンスには影響しません、既存の<xref:System.AppDomain>します。 新しいの作成のみに影響すること<xref:System.AppDomain>、ときに、<xref:System.AppDomain.CreateDomain%2A>メソッドを呼び出すと、<xref:System.AppDomainSetup>をパラメーターとしてインスタンス。  
  
 このクラスは、 <xref:System.IAppDomainSetup> インターフェイスを実装します。  
  
> [!CAUTION]
>  既定値、<xref:System.AppDomainSetup.DisallowCodeDownload%2A>プロパティは false。 この設定は、サービスの安全ではありません。 サービスが部分的に信頼されたコードをダウンロードするを防ぐために、このプロパティを true に設定します。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/07ea8438-7a34-49f0-a7e8-3d6ff7e4a482">アプリケーション ドメインを構成する方法</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.AppDomainSetup" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainSetup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainSetup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.AppDomainSetup" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainSetup (ActivationContext activationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ActivationContext activationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.#ctor(System.ActivationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainSetup(ActivationContext ^ activationContext);" />
      <MemberSignature Language="F#" Value="new AppDomainSetup : ActivationContext -&gt; AppDomainSetup" Usage="new System.AppDomainSetup activationContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
      </Parameters>
      <Docs>
        <param name="activationContext">アプリケーション ドメインに使用されるアクティベーション コンテキスト。</param>
        <summary>アプリケーション ドメイン用に指定されたアクティベーション コンテキスト (マニフェストに基づくアクティベーションに使用される) で、<see cref="T:System.AppDomainSetup" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ActivationContext>オブジェクトの指定された`activationContext`生成に使用される、<xref:System.Runtime.Hosting.ActivationArguments>を新しいアプリケーション ドメインをアクティブ化するために必要な情報を含むオブジェクト。 これは、<xref:System.Runtime.Hosting.ActivationArguments>オブジェクトを使用してアクセスできる、<xref:System.AppDomainSetup.ActivationArguments%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="activationContext" /> は <see langword="null" /> です。</exception>
        <altmember cref="P:System.AppDomainSetup.ActivationArguments" />
        <altmember cref="T:System.Runtime.Hosting.ActivationArguments" />
        <altmember cref="T:System.ActivationContext" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainSetup (System.Runtime.Hosting.ActivationArguments activationArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Hosting.ActivationArguments activationArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.#ctor(System.Runtime.Hosting.ActivationArguments)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainSetup(System::Runtime::Hosting::ActivationArguments ^ activationArguments);" />
      <MemberSignature Language="F#" Value="new AppDomainSetup : System.Runtime.Hosting.ActivationArguments -&gt; AppDomainSetup" Usage="new System.AppDomainSetup activationArguments" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="activationArguments" Type="System.Runtime.Hosting.ActivationArguments" />
      </Parameters>
      <Docs>
        <param name="activationArguments">新しいアプリケーション ドメインの、マニフェストに基づくアクティベーションに必要な情報を指定するオブジェクト。</param>
        <summary>アプリケーション ドメインのマニフェストに基づくアクティベーション用に必要な、指定されたアクティベーション引数で、<see cref="T:System.AppDomainSetup" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オブジェクトの指定された`activationArguments`を使用してアクセスできる、<xref:System.AppDomainSetup.ActivationArguments%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="activationArguments" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ActivationArguments">
      <MemberSignature Language="C#" Value="public System.Runtime.Hosting.ActivationArguments ActivationArguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Hosting.ActivationArguments ActivationArguments" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ActivationArguments" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivationArguments As ActivationArguments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Hosting::ActivationArguments ^ ActivationArguments { System::Runtime::Hosting::ActivationArguments ^ get(); void set(System::Runtime::Hosting::ActivationArguments ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActivationArguments : System.Runtime.Hosting.ActivationArguments with get, set" Usage="System.AppDomainSetup.ActivationArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Hosting.ActivationArguments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーション ドメインのアクティベーションに関するデータを取得または設定します。</summary>
        <value>アプリケーション ドメインのアクティベーションに関するデータを格納するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティ設定されている場合に例外がスローされません`null`します。  
  
 によって提供される情報、<xref:System.Runtime.Hosting.ActivationArguments>オブジェクトは、マニフェストに基づくアクティベーションをサポートしています。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">プロパティは、<see cref="P:System.AppDomainSetup.ApplicationTrust" /> プロパティから返される <see cref="T:System.Security.Policy.ApplicationTrust" /> オブジェクトのアプリケーション ID とは一致しないアプリケーション ID の <see cref="T:System.Runtime.Hosting.ActivationArguments" /> オブジェクトに設定されています。 <see cref="P:System.AppDomainSetup.ApplicationTrust" /> プロパティが <see langword="null" /> の場合、例外はスローされません。</exception>
      </Docs>
    </Member>
    <Member MemberName="AppDomainInitializer">
      <MemberSignature Language="C#" Value="public AppDomainInitializer AppDomainInitializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AppDomainInitializer AppDomainInitializer" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.AppDomainInitializer" />
      <MemberSignature Language="VB.NET" Value="Public Property AppDomainInitializer As AppDomainInitializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomainInitializer ^ AppDomainInitializer { AppDomainInitializer ^ get(); void set(AppDomainInitializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppDomainInitializer : AppDomainInitializer with get, set" Usage="System.AppDomainSetup.AppDomainInitializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomainInitializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーション ドメインの初期化時に呼び出されるコールバック メソッドを表す <see cref="T:System.AppDomainInitializer" /> デリゲートを取得または設定します。</summary>
        <value>アプリケーション ドメインの初期化時に呼び出されるコールバック メソッドを表すデリゲート。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 情報をコールバック メソッドに渡すために文字列の配列を割り当てる、<xref:System.AppDomainSetup.AppDomainInitializerArguments%2A>プロパティ。 配列が毎回、コールバック メソッドに渡される、<xref:System.AppDomain>初期化されます。  
  
 コールバック メソッドは、新しく作成されたアプリケーション ドメインのコンテキストで実行されます。  
  
   
  
## Examples  
 次の例では、という名前の子アプリケーション ドメインを作成する`ChildDomain`を使用して、<xref:System.AppDomainSetup>オブジェクトと既定のアプリケーション ドメインからの証拠。 <xref:System.AppDomainSetup.AppDomainInitializer%2A>コールバック メソッドに設定されて`AppDomainInit`、子ドメインの初期化時に呼び出されます。 コールバック メソッドの引数に割り当てられている、文字列の配列に配置されます、<xref:System.AppDomainSetup.AppDomainInitializerArguments%2A>プロパティ。 子ドメインが作成されると、コールバック メソッドの文字列が出力されます。  
  
 [!code-cpp[AppDomainInitializer#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomainInitializer/cpp/source.cpp#1)]
 [!code-csharp[AppDomainInitializer#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomainInitializer/CS/source.cs#1)]
 [!code-vb[AppDomainInitializer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomainInitializer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.AppDomainInitializer" />
        <altmember cref="P:System.AppDomainSetup.AppDomainInitializerArguments" />
      </Docs>
    </Member>
    <Member MemberName="AppDomainInitializerArguments">
      <MemberSignature Language="C#" Value="public string[] AppDomainInitializerArguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AppDomainInitializerArguments" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.AppDomainInitializerArguments" />
      <MemberSignature Language="VB.NET" Value="Public Property AppDomainInitializerArguments As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AppDomainInitializerArguments { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppDomainInitializerArguments : string[] with get, set" Usage="System.AppDomainSetup.AppDomainInitializerArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.AppDomainInitializer" /> デリゲートが表すコールバック メソッドへの引数を取得または設定します。 コールバック メソッドは、アプリケーション ドメインの初期化時に呼び出されます。</summary>
        <value>
          <see cref="T:System.AppDomain" /> の初期化中、<see cref="T:System.AppDomainInitializer" /> デリゲートが表すコールバック メソッドが呼び出されたとき、このコールバック メソッドに渡される文字列の配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.AppDomainSetup.AppDomainInitializer%2A>中に呼び出されるコールバック メソッドを指定するプロパティ<xref:System.AppDomain>初期化します。 場合、<xref:System.AppDomainSetup.AppDomainInitializer%2A>プロパティが設定されていない、このプロパティに割り当てられた配列は使用されません。  
  
 コールバック メソッドは、新しく作成されたアプリケーション ドメインのコンテキストで実行されます。  
  
   
  
## Examples  
 次のコード例は、という名前の子アプリケーション ドメインを作成します。`ChildDomain`を使用して、<xref:System.AppDomainSetup>オブジェクトと既定のアプリケーション ドメインからの証拠。 <xref:System.AppDomainSetup.AppDomainInitializer%2A>コールバック メソッドに設定されて`AppDomainInit`、子ドメインの初期化時に呼び出されます。 コールバック メソッドの引数に割り当てられている、文字列の配列に配置されます、<xref:System.AppDomainSetup.AppDomainInitializerArguments%2A>プロパティ。 子ドメインが作成されると、コールバック メソッドの文字列が出力されます。  
  
 [!code-cpp[AppDomainInitializer#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomainInitializer/cpp/source.cpp#1)]
 [!code-csharp[AppDomainInitializer#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomainInitializer/CS/source.cs#1)]
 [!code-vb[AppDomainInitializer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomainInitializer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.AppDomainInitializer" />
        <altmember cref="P:System.AppDomainSetup.AppDomainInitializer" />
      </Docs>
    </Member>
    <Member MemberName="AppDomainManagerAssembly">
      <MemberSignature Language="C#" Value="public string AppDomainManagerAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppDomainManagerAssembly" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.AppDomainManagerAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property AppDomainManagerAssembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppDomainManagerAssembly { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppDomainManagerAssembly : string with get, set" Usage="System.AppDomainSetup.AppDomainManagerAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.AppDomainSetup" /> オブジェクトを使用して作成されたアプリケーション ドメインのアプリケーション ドメイン マネージャーの型を提供するアセンブリの表示名を取得または設定します。</summary>
        <value>アプリケーション ドメイン マネージャーの <see cref="T:System.Type" /> を提供するアセンブリの表示名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーション ドメイン マネージャーの種類を指定するには、この両方のプロパティを設定し、<xref:System.AppDomainSetup.AppDomainManagerType%2A>プロパティ。 これらのプロパティのいずれかが設定されていない場合、その他は無視されます。  
  
 アプリケーション ドメイン マネージャーが、親アプリケーション ドメインと同じ型から作成された型が指定されていない場合 (元のアプリケーション ドメインは、<xref:System.AppDomain.CreateDomain%2A?displayProperty=nameWithType>メソッドが呼び出されます)。  
  
 アプリケーション ドメインが読み込まれるときに<xref:System.TypeLoadException>アセンブリが存在しない場合、またはアセンブリに指定した型が含まれていない場合にスローされる、<xref:System.AppDomainSetup.AppDomainManagerType%2A>プロパティ。 <xref:System.IO.FileLoadException> アセンブリが見つかりましたが、バージョン情報が一致しない場合にスローされます。  
  
 既定のアプリケーション ドメインのアプリケーション ドメイン マネージャーを設定するには、使用、 [ \<appDomainManagerAssembly >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md)と[ \<appDomainManagerType >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md)内の要素、[\<ランタイム >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)セクションで説明されている環境変数を使用して、アプリケーション構成ファイルの<xref:System.AppDomainManager>します。  
  
 この機能には、完全な信頼のアプリケーションが必要です。 (たとえば、デスクトップで実行されているアプリケーションは完全な信頼があります。)アプリケーションには、完全な信頼がない場合、<xref:System.TypeLoadException>がスローされます。  
  
 アセンブリの表示名の形式である、<xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>プロパティ。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppDomainManagerType">
      <MemberSignature Language="C#" Value="public string AppDomainManagerType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppDomainManagerType" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.AppDomainManagerType" />
      <MemberSignature Language="VB.NET" Value="Public Property AppDomainManagerType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppDomainManagerType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppDomainManagerType : string with get, set" Usage="System.AppDomainSetup.AppDomainManagerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.AppDomainSetup" /> オブジェクトを使用して作成されたアプリケーション ドメインのアプリケーション ドメイン マネージャーを提供する型の完全名を取得または設定します。</summary>
        <value>名前空間を含む、型の完全名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーション ドメイン マネージャーの種類を指定するには、この両方のプロパティを設定し、<xref:System.AppDomainSetup.AppDomainManagerAssembly%2A>プロパティ。 これらのプロパティのいずれかが設定されていない場合、その他は無視されます。  
  
 アプリケーション ドメイン マネージャーが、親アプリケーション ドメインと同じ型から作成された型が指定されていない場合 (元のアプリケーション ドメインは、<xref:System.AppDomain.CreateDomain%2A?displayProperty=nameWithType>メソッドが呼び出されます)。  
  
 アプリケーション ドメインが読み込まれるときに<xref:System.TypeLoadException>によってアセンブリが指定されている場合にスローされる、<xref:System.AppDomainSetup.AppDomainManagerAssembly%2A>プロパティにこのプロパティで指定された型が含まれていません。  
  
 既定のアプリケーション ドメインのアプリケーション ドメイン マネージャーを設定するには、使用、 [ \<appDomainManagerAssembly >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md)と[ \<appDomainManagerType >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md)内の要素、[\<ランタイム >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)セクションで説明されている環境変数を使用して、アプリケーション構成ファイルの<xref:System.AppDomainManager>します。  
  
 この機能には、完全な信頼のアプリケーションが必要です。 (たとえば、デスクトップで実行されているアプリケーションは完全な信頼があります。)アプリケーションには、完全な信頼がない場合、<xref:System.TypeLoadException>がスローされます。  
  
 型の完全名の形式である、<xref:System.Type.FullName%2A?displayProperty=nameWithType>プロパティ。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationBase">
      <MemberSignature Language="C#" Value="public string ApplicationBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationBase" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ApplicationBase" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationBase { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationBase : string with get, set" Usage="System.AppDomainSetup.ApplicationBase" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.ApplicationBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションが格納されているディレクトリの名前を取得または設定します。</summary>
        <value>アプリケーションのベース ディレクトリの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーション ベース ディレクトリは、アセンブリのマネージャーがアセンブリのプローブを開始します。  
  
 <xref:System.AppDomainSetup.ApplicationBase%2A>プロパティをアプリケーション ドメインにアクセス許可が付与されますに影響を与えることができます。 たとえば、通常のローカルのコンピューターから送信されたアプリケーション ドメインは、元の場所に基づいて完全に信頼を受け取ります。 ただし場合、<xref:System.AppDomainSetup.ApplicationBase%2A>プロパティを<xref:System.AppDomain>、イントラネットのディレクトリの完全名に設定されている、<xref:System.AppDomainSetup.ApplicationBase%2A>設定する場合でも、アプリケーション ドメインのアプリケーション ドメイン、LocalIntranet 許可に付与されるアクセス許可と制限ローカル コンピューターから実際に発生します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.AppDomainSetup.ApplicationBase%2A>アセンブリ ローダーが新しいアプリケーション ドメインに読み込むアセンブリのプローブを開始位置を設定するプロパティ。  
  
> [!NOTE]
>  指定したフォルダーが存在することを確認する必要があります。  
  
 [!code-cpp[ADApplicationBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADApplicationBase/CPP/adapplicationbase.cpp#1)]
 [!code-csharp[ADApplicationBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADApplicationBase/CS/adapplicationbase.cs#1)]
 [!code-vb[ADApplicationBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADApplicationBase/VB/adapplicationbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">パス情報にアクセスします。 関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.AppDomainSetup.ApplicationName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.ApplicationName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションの名前を取得または設定します。</summary>
        <value>アプリケーションの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、設定する方法を示します、<xref:System.AppDomainSetup.ApplicationName%2A>プロパティ、新しいアプリケーション ドメインを作成するときにします。  
  
 例では、新しいアプリケーション ドメインを作成しを呼び出して、<xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=nameWithType>新しいアプリケーション ドメインにサンプル アセンブリを読み込むしのインスタンスを作成する方法、`Worker`クラス。 `Worker`クラスは継承<xref:System.MarshalByRefObject>例では、によって返されるプロキシを使用できるように、<xref:System.AppDomain.CreateInstanceAndUnwrap%2A>を呼び出す、`TestLoad`メソッド。  
  
 `TestLoad`メソッドは、指定したアセンブリを読み込みます。 有効な完全修飾アセンブリ名を指定か、コメント アウトする必要があります、<xref:System.Reflection.Assembly.Load%28System.String%29>メソッド。 `TestLoad`メソッドには、指定したアセンブリとアセンブリが読み込まれていることを示す、新しいアプリケーション ドメインに読み込まれるアセンブリが一覧表示されます。  
  
 この例では、<xref:System.LoaderOptimizationAttribute>属性へのアプリケーションがアプリケーション ドメイン間でコードを共有する方法をアセンブリ ローダーに通知します。  
  
 [!code-cpp[ADMultiDomain#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADMultiDomain/CPP/admultidomain.cpp#1)]
 [!code-csharp[ADMultiDomain#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADMultiDomain/CS/admultidomain.cs#1)]
 [!code-vb[ADMultiDomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADMultiDomain/VB/admultidomain.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationTrust">
      <MemberSignature Language="C#" Value="public System.Security.Policy.ApplicationTrust ApplicationTrust { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.ApplicationTrust ApplicationTrust" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ApplicationTrust" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationTrust As ApplicationTrust" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::ApplicationTrust ^ ApplicationTrust { System::Security::Policy::ApplicationTrust ^ get(); void set(System::Security::Policy::ApplicationTrust ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationTrust : System.Security.Policy.ApplicationTrust with get, set" Usage="System.AppDomainSetup.ApplicationTrust" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Policy.ApplicationTrust</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セキュリティ情報や信頼情報を格納するオブジェクトを取得または設定します。</summary>
        <value>セキュリティ情報や信頼情報を格納するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは`null`ときに、<xref:System.AppDomainSetup>が作成されます。 変更すると、null 参照をリセットできません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">プロパティは、<see cref="P:System.AppDomainSetup.ActivationArguments" /> プロパティから返される <see cref="T:System.Runtime.Hosting.ActivationArguments" /> オブジェクトのアプリケーション ID とは一致しないアプリケーション ID の <see cref="T:System.Security.Policy.ApplicationTrust" /> オブジェクトに設定されています。 <see cref="P:System.AppDomainSetup.ActivationArguments" /> プロパティが <see langword="null" /> の場合、例外はスローされません。</exception>
        <exception cref="T:System.ArgumentNullException">プロパティが <see langword="null" /> に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="CachePath">
      <MemberSignature Language="C#" Value="public string CachePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CachePath" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.CachePath" />
      <MemberSignature Language="VB.NET" Value="Public Property CachePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CachePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePath : string with get, set" Usage="System.AppDomainSetup.CachePath" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.CachePath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ファイルがシャドウ コピーされる、そのアプリケーションに固有の領域の名前を取得または設定します。</summary>
        <value>ファイルのシャドウ コピー先のディレクトリ パスとファイル名から成る完全修飾名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに影響を与えるために、<xref:System.AppDomainSetup.ApplicationName%2A>プロパティも設定する必要があります。 場合、<xref:System.AppDomainSetup.ApplicationName%2A>プロパティが設定されていない、<xref:System.AppDomainSetup.CachePath%2A>プロパティは無視され、ダウンロード キャッシュにシャドウ コピーのキャッシュの場所の既定値します。  
  
 シャドウ コピーの詳細については、次を参照してください。[アセンブリのシャドウ コピー](~/docs/framework/app-domains/shadow-copy-assemblies.md)します。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">パス情報にアクセスします。 関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <altmember cref="P:System.AppDomainSetup.ShadowCopyFiles" />
        <altmember cref="P:System.AppDomainSetup.ShadowCopyDirectories" />
        <related type="Article" href="~/docs/framework/app-domains/shadow-copy-assemblies.md">アセンブリのシャドウ コピー</related>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationFile">
      <MemberSignature Language="C#" Value="public string ConfigurationFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigurationFile" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ConfigurationFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfigurationFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConfigurationFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConfigurationFile : string with get, set" Usage="System.AppDomainSetup.ConfigurationFile" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.ConfigurationFile</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーション ドメインの構成ファイルの名前を取得または設定します。</summary>
        <value>構成ファイルの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 構成ファイルには、規則の検索と、アプリケーション ドメインの構成データがについて説明します。 アプリケーション ドメインを作成するホストは、意味のある値が状況によって異なるために、このデータを提供します。  
  
 たとえば、各アプリケーション、ユーザー、およびコンピューターの実行可能ファイルの構成データが格納されている各アプリケーション、サイト、およびコンピューターの ASP.NET アプリケーションの構成データが格納されます。 ホストだけでは、構成データの特定の状況の詳細を認識します。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">パス情報にアクセスします。 関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/f04816ab-110d-4e28-9283-845d6d9a4a68">ランタイム設定スキーマ</related>
      </Docs>
    </Member>
    <Member MemberName="DisallowApplicationBaseProbing">
      <MemberSignature Language="C#" Value="public bool DisallowApplicationBaseProbing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisallowApplicationBaseProbing" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.DisallowApplicationBaseProbing" />
      <MemberSignature Language="VB.NET" Value="Public Property DisallowApplicationBaseProbing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisallowApplicationBaseProbing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisallowApplicationBaseProbing : bool with get, set" Usage="System.AppDomainSetup.DisallowApplicationBaseProbing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>読み込むアセンブリを検索する際に、アプリケーションのベース パスおよびプライベート バイナリ パスを調査対象から除外するかどうかを指定します。</summary>
        <value>調査対象としない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A>プロパティは`true`の値、<xref:System.AppDomainSetup.ApplicationBase%2A>プロパティは無視されます。 つまり、アセンブリなしにプローブによって指定されたディレクトリで、<xref:System.AppDomainSetup.ApplicationBase%2A>プロパティ。 さらの値、<xref:System.AppDomainSetup.PrivateBinPath%2A>プロパティおよび<xref:System.AppDomainSetup.PrivateBinPathProbe%2A>プロパティは無視されます。 によって指定されたディレクトリ内のアセンブリがプローブされますなし、<xref:System.AppDomainSetup.PrivateBinPath%2A>プロパティ。  
  
 <xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A>プロパティは、読み込みプロセスの制御の追加レイヤーを提供します。 前に、アプリケーション ベースがプローブで通常のアセンブリを読み込み、<xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType>イベントが発生します。 ただし、一部のアプリケーションは、ドキュメント内の OLE 複合ファイルとは、グローバル アセンブリ キャッシュにも、によって指定されたディレクトリで、一意な既知の場所からアセンブリを読み込む必要があります、<xref:System.AppDomainSetup.ApplicationBase%2A>と<xref:System.AppDomainSetup.PrivateBinPath%2A>プロパティ。 このようなアプリケーションを使用できる、<xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A>プロパティと通常のプローブ パスに配置するために必要なアセンブリのコピーの読み込みを回避するために通常のプローブに起因する遅延を回避します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisallowBindingRedirects">
      <MemberSignature Language="C#" Value="public bool DisallowBindingRedirects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisallowBindingRedirects" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.DisallowBindingRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Property DisallowBindingRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisallowBindingRedirects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisallowBindingRedirects : bool with get, set" Usage="System.AppDomainSetup.DisallowBindingRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーション ドメインでアセンブリ バインディング リダイレクトを使用できるかどうかを示す値を取得または設定します。</summary>
        <value>アセンブリのリダイレクトを使用できない場合は <see langword="true" />、使用できる場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AppDomainSetup.DisallowBindingRedirects%2A>アセンブリ バインド リダイレクトがアプリケーションのシナリオの一部ではないサービスとサーバー アプリケーションで使用されるプロパティは設計されています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisallowCodeDownload">
      <MemberSignature Language="C#" Value="public bool DisallowCodeDownload { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisallowCodeDownload" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.DisallowCodeDownload" />
      <MemberSignature Language="VB.NET" Value="Public Property DisallowCodeDownload As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisallowCodeDownload { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisallowCodeDownload : bool with get, set" Usage="System.AppDomainSetup.DisallowCodeDownload" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーション ドメインでアセンブリの HTTP ダウンロードを使用できるかどうかを示す値を取得または設定します。</summary>
        <value>アセンブリの HTTP ダウンロードを使用できない場合は <see langword="true" />。使用できる場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AppDomainSetup.DisallowCodeDownload%2A>イントラネットまたはインターネットからダウンロード コードがアプリケーションのシナリオの一部ではないサービスとサーバー アプリケーションで使用されるプロパティは設計されています。  
  
> [!CAUTION]
>  既定値、<xref:System.AppDomainSetup.DisallowCodeDownload%2A>プロパティは`false`します。 この設定は、サービスの安全ではありません。 サービスが部分的に信頼されたコードをダウンロードするを防ぐために、このプロパティを設定`true`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisallowPublisherPolicy">
      <MemberSignature Language="C#" Value="public bool DisallowPublisherPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisallowPublisherPolicy" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.DisallowPublisherPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property DisallowPublisherPolicy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisallowPublisherPolicy { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisallowPublisherPolicy : bool with get, set" Usage="System.AppDomainSetup.DisallowPublisherPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>構成ファイルの [&lt;publisherPolicy&gt;](~/docs/framework/configure-apps/file-schema/runtime/publisherpolicy-element.md) セクションをアプリケーション ドメインに適用するかどうかを示す値を取得または設定します。</summary>
        <value>アプリケーション ドメインの構成ファイルの <see langword="&lt;publisherPolicy&gt;" /> セクションを無視する場合は <see langword="true" />。宣言された発行元ポリシーを有効とする場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AppDomainSetup.DisallowPublisherPolicy%2A>具体的には、プロパティはローカルで読み込まれた Web アプリケーションに適用されます。 セーフ モードで安全でない Web アプリケーションを実行するのに悪意のある試みを防ぐためには、このプロパティを使用します。  
  
 発行者ポリシーの省略の詳細については、次を参照してください。、[アセンブリ バージョンのリダイレクト](~/docs/framework/configure-apps/redirect-assembly-versions.md)トピック。 セーフ モードの詳細については、の「、構成ファイルを確認する」セクションを参照してください、[ランタイムがアセンブリを検索する方法](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md)トピック。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicBase">
      <MemberSignature Language="C#" Value="public string DynamicBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicBase" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.DynamicBase" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicBase { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicBase : string with get, set" Usage="System.AppDomainSetup.DynamicBase" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.DynamicBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的に生成されたファイルが格納されるディレクトリのベース ディレクトリを取得または設定します。</summary>
        <value>
          <see cref="P:System.AppDomain.DynamicDirectory" /> が置かれているディレクトリ。  

 <block subset="none" type="note"><para>  
 このプロパティの戻り値は、割り当てられた値とは異なります。
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks  
 このプロパティを使用すると、新しいアプリケーション ドメインの動的なディレクトリが配置される、ベース ディレクトリを設定できます。 新しいアプリケーション ドメインでコードが、アセンブリ、アセンブリの解決に読み込まれたらは、通常のプローブ パスの先頭に検索します。 によって返される、動的なディレクトリを検索、アセンブリが見つからない場合、<xref:System.AppDomain.DynamicDirectory%2A?displayProperty=nameWithType>プロパティ。 動的アセンブリが読み込まれ、新しいアプリケーション ドメインで実行するがありますに配置できます。  
  
 パスを割り当てると、<xref:System.AppDomainSetup.DynamicBase%2A>プロパティが追加のサブディレクトリが追加されました。 このサブディレクトリの名前はに割り当てられた値のハッシュ コード、<xref:System.AppDomainSetup.ApplicationName%2A>プロパティ。 そのため、このプロパティによって返される、その後、ベース ディレクトリでは、割り当てられている値と異なるは常にします。  
  
> [!IMPORTANT]
>  このプロパティに値を代入しても、すべてのディレクトリは作成されません。 ディレクトリを作成またはそれらを使用するコードで確認する必要があります。  
  
 動的なディレクトリのサブディレクトリでは<xref:System.AppDomainSetup.DynamicBase%2A>します。 単純な名前がによって返される値、<xref:System.AppDomainSetup.ApplicationName%2A>プロパティ、その形式が*元のパス*\\*ハッシュ コード*\\*アプリケーション名*.  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.AppDomainSetup.DynamicBase%2A>動的アセンブリの読み込み時にアプリケーション ドメインのパスを設定するプロパティがプローブされます。  
  
 例は、作成、<xref:System.AppDomainSetup>オブジェクトとセットの<xref:System.AppDomainSetup.ApplicationName%2A>を"Example"プロパティとその<xref:System.AppDomainSetup.DynamicBase%2A>プロパティを"C:\DynamicAssemblyDir"。 例を表示し、<xref:System.AppDomainSetup.DynamicBase%2A>プロパティ、アプリケーション名のハッシュ コードが最初に割り当てられたパスのサブディレクトリとして追加されていないことを表示します。  
  
> [!NOTE]
>  この例では、ベース ディレクトリの目的は、アプリケーションの例のプローブ パスの外部にします。 別の場所の例をコンパイルしてください。 例を実行するたびに、ベース ディレクトリとすべてのサブディレクトリを削除します。  
  
 例では新しいアプリケーション ドメインを作成、<xref:System.AppDomainSetup>オブジェクト。 例は、存在しない場合、動的ディレクトリを作成します。 例では、アプリケーション ドメインを使用していますが<xref:System.AppDomain.DynamicDirectory%2A?displayProperty=nameWithType>動的のディレクトリの名前を取得するプロパティ事前は元のパスは、アプリケーション名のハッシュ コードを連結して同じくらい簡単にディレクトリを作成、でしたし、アプリケーションの名前。  
  
 この例を`GenerateDynamicAssembly`という名前のアセンブリを出力するメソッド`DynamicHelloWorld.dll`し、新しいアプリケーション ドメインの動的なディレクトリに格納します。 動的アセンブリには、1 つの型が含まれています。 `HelloWorld`、静的メソッドを持つ (`Shared` Visual Basic でのメソッド) という名前の`HelloFromAD`します。 このメソッドを呼び出すには、アプリケーション ドメインの名前が表示されます。  
  
 `Example`クラスから派生<xref:System.MarshalByRefObject>例では、新しいアプリケーション ドメインと呼び出しで、クラスのインスタンスを作成できるように、その`Test`メソッド。 `Test`メソッドその表示名で動的アセンブリをロードして、静的な`HelloFromAD`メソッド。  
  
 という名前のアセンブリのコードを記述することで、動的なディレクトリが通常のプローブ パスの後に検索を表示する`DynamicHelloWorld.dll`し、この例と同じディレクトリにコンパイルしています。 という名前のクラスがアセンブリにあります`HelloWorld`という名前の静的メソッドで`HelloFromAD`します。 このメソッドはの例で 1 つとして同じ機能を使用する必要はありません。単にコンソールに文字列を表示できます。 アセンブリがあります、<xref:System.Reflection.AssemblyVersionAttribute>属性をそのバージョンを 1.0.0.0 に設定します。 例を実行するときに、動的なディレクトリを検索する前に、現在のディレクトリでコンパイルしたアセンブリが見つかりました。  
  
 [!code-cpp[ADDynamicBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADDynamicBase/CPP/addynamicbase.cpp#1)]
 [!code-csharp[ADDynamicBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADDynamicBase/CS/addynamicbase.cs#1)]
 [!code-vb[ADDynamicBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADDynamicBase/VB/addynamicbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException">アプリケーション ドメインのアプリケーション名が <see langword="null" /> であるため、このプロパティを設定できません。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">パス情報にアクセスします。 関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationBytes">
      <MemberSignature Language="C#" Value="public byte[] GetConfigurationBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetConfigurationBytes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.GetConfigurationBytes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConfigurationBytes () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetConfigurationBytes();" />
      <MemberSignature Language="F#" Value="member this.GetConfigurationBytes : unit -&gt; byte[]" Usage="appDomainSetup.GetConfigurationBytes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /> メソッドによって設定されたXML 構成情報を返します。これにより、アプリケーションの XML 構成情報はオーバーライドされます。</summary>
        <returns>
          <see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /> メソッドによって設定された XML 構成情報を格納する配列。<see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /> メソッドが呼び出されなかった場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AppDomainSetup.SetConfigurationBytes%2A>メソッドは、新しいアプリケーション ドメインを作成するアプリケーションの構成情報をオーバーライドする手段を提供します。 構成ファイルの情報で`value`アプリケーションの構成ファイルの情報をオーバーライドします。 たとえば、Example.exe アプリケーションでは、新しいアプリケーション ドメインを作成するときは、Example.exe.config ファイルから最初に取得された構成情報をオーバーライドできます。  
  
> [!IMPORTANT]
>  構成ファイルの情報の一部のコンシューマーが保存された情報を使用しないでください、<xref:System.AppDomainSetup.SetConfigurationBytes%2A>メソッド。 ランタイムは、これにも適用されません。 すべての構成ファイルの情報が、新しいアプリケーション ドメインでオーバーライドされることを確認するには使用、<xref:System.AppDomainSetup.ConfigurationFile%2A>プロパティを構成ファイルを指定します。 <xref:System.AppDomainSetup.SetConfigurationBytes%2A>アセンブリ バインディングのメソッドに影響します。  
  
 内の XML`value`として格納されている点を除いて、標準的な構成ファイル内の XML と同じでは、<xref:System.Byte>配列。  
  
 アプリケーション ドメインの構成のバイトにアクセスするには、使用、<xref:System.AppDomain.SetupInformation%2A?displayProperty=nameWithType>を取得するプロパティ、 <xref:System.AppDomainSetup> 、アプリケーション ドメインのオブジェクトを使用して、<xref:System.AppDomainSetup.GetConfigurationBytes%2A>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LicenseFile">
      <MemberSignature Language="C#" Value="public string LicenseFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LicenseFile" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.LicenseFile" />
      <MemberSignature Language="VB.NET" Value="Public Property LicenseFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LicenseFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LicenseFile : string with get, set" Usage="System.AppDomainSetup.LicenseFile" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.LicenseFile</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このドメインに関連付けられたライセンス ファイルの場所を取得または設定します。</summary>
        <value>ライセンス ファイルの場所と名前。</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">パス情報にアクセスします。 関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
      </Docs>
    </Member>
    <Member MemberName="LoaderOptimization">
      <MemberSignature Language="C#" Value="public LoaderOptimization LoaderOptimization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.LoaderOptimization LoaderOptimization" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.LoaderOptimization" />
      <MemberSignature Language="VB.NET" Value="Public Property LoaderOptimization As LoaderOptimization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property LoaderOptimization LoaderOptimization { LoaderOptimization get(); void set(LoaderOptimization value); };" />
      <MemberSignature Language="F#" Value="member this.LoaderOptimization : LoaderOptimization with get, set" Usage="System.AppDomainSetup.LoaderOptimization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.LoaderOptimization</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>実行可能ファイルを読み込むために使用する最適化ポリシーを指定します。</summary>
        <value>
          <see cref="T:System.LoaderOptimizationAttribute" /> で使用される列挙型定数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、動的アセンブリを作成し、ディスク、および、使用、保存、<xref:System.AppDomainSetup.LoaderOptimization%2A>アプリケーション ドメインにアセンブリを読み込むために使用する最適化ポリシーを設定するプロパティ。  
  
 [!code-cpp[ADDyno#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADDyno/CPP/addyno.cpp#1)]
 [!code-csharp[ADDyno#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADDyno/CS/addyno.cs#1)]
 [!code-vb[ADDyno#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADDyno/VB/addyno.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PartialTrustVisibleAssemblies">
      <MemberSignature Language="C#" Value="public string[] PartialTrustVisibleAssemblies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] PartialTrustVisibleAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.PartialTrustVisibleAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Property PartialTrustVisibleAssemblies As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ PartialTrustVisibleAssemblies { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PartialTrustVisibleAssemblies : string[] with get, set" Usage="System.AppDomainSetup.PartialTrustVisibleAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サンドボックス化されたアプリケーション ドメインで実行されている部分信頼コードから参照できる、<see cref="F:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault" /> フラグでマークされたアセンブリのリストを取得または設定します。</summary>
        <value>部分アセンブリ名の配列。各部分名は単純なアセンブリ名と公開キーで構成されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以降では、 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、 <xref:System.Security.AllowPartiallyTrustedCallersAttribute> (APTCA) 属性にできる条件を設定してその<xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A>プロパティを<xref:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault>します。 マークされている APTCA アセンブリ<xref:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault>ホスト アプリケーションでが許可されない限り、部分的に信頼されたコードによって使用されることはできません。  
  
 サンド ボックス アプリケーション ドメインのホストでは、簡易名と、各アセンブリの公開キーを含む配列を作成し、このプロパティに、配列を割り当てることによって、条件付きの APTCA 属性を持つアセンブリを使用するアプリケーション ドメイン内のコードで許可します。 たとえば、配列の要素が、次のようになります:"MyAssembly, PublicKey =。0024000004800000940000000602000000240000525341310004000001000100db2ad5e5fedc67ea526ff72ad426ef68e08e241d296c499eedfec6648dcc62b1a12f72be5833a45bbec481b68415b08a5fbc9f9ef247b523dd72bbea65bb532784ddc5c704544bd2f1c2d46fdbe41e4f949e76f9947357b2d5cf8ca9f970701bbd6e8ab64ad31b20ad0be9b56dae4f6b83332b92a2a3b8ea2804c40efbc0b6b9"。  
  
> [!IMPORTANT]
>  サブクラスを使用している場合<xref:System.AppDomainManager>、それを定義するアセンブリ、条件付きの APTCA 属性でマークされているアセンブリに依存して、一覧に渡すことで、これらのアセンブリを含める必要があります、<xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A>プロパティ、の<xref:System.AppDomainSetup>を使用するアプリケーション ドメインを作成します。 それ以外の場合、条件付きの APTCA 属性でマークされているアセンブリを無効化されます。  
  
> [!NOTE]
>  サンド ボックス アプリケーション ドメインで実行されているアプリケーションをデバッグするときにいくつか<xref:System.Security.SecurityException>メッセージを誤解を招くことができます。 たとえば、メッセージが、問題の本当の原因がサンド ボックス アプリケーション ドメインの許可セットを超えるセキュリティ要求がの境界に反映されること、アクセス許可を制限、完全に信頼されたアセンブリの 1 つあるのみを記述する場合があります、サンド ボックス アプリケーション ドメインと失敗します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" />
        <altmember cref="P:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel" />
        <altmember cref="F:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault" />
      </Docs>
    </Member>
    <Member MemberName="PrivateBinPath">
      <MemberSignature Language="C#" Value="public string PrivateBinPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrivateBinPath" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.PrivateBinPath" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateBinPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrivateBinPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrivateBinPath : string with get, set" Usage="System.AppDomainSetup.PrivateBinPath" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.PrivateBinPath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プライベート アセンブリが調査されるアプリケーション ベース ディレクトリ下に存在するディレクトリのリストを取得または設定します。</summary>
        <value>セミコロンで区切られたディレクトリ名のリスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プライベート アセンブリは、アプリケーションと同じディレクトリ構造にデプロイされます。 ディレクトリが指定されている場合<xref:System.AppDomainSetup.PrivateBinPath%2A>でない<xref:System.AppDomainSetup.ApplicationBase%2A>、それらは無視されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateBinPathProbe">
      <MemberSignature Language="C#" Value="public string PrivateBinPathProbe { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrivateBinPathProbe" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.PrivateBinPathProbe" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateBinPathProbe As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrivateBinPathProbe { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrivateBinPathProbe : string with get, set" Usage="System.AppDomainSetup.PrivateBinPathProbe" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.PrivateBinPathProbe</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.AppDomainSetup.ApplicationBase" /> をアプリケーションの検索パスに含めたり、検索パスから除外して <see cref="P:System.AppDomainSetup.PrivateBinPath" /> だけを検索するようにしたりするための文字列値を取得または設定します。</summary>
        <value>アセンブリを検索するときにアプリケーションのベース パスを含める場合は、null 参照 (Visual Basic では <see langword="Nothing" />)。パスを除外する場合は、null 以外の文字列値。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 任意の null 以外の文字列値にこのプロパティを設定を含む<xref:System.String.Empty?displayProperty=nameWithType>("")、アプリケーション ディレクトリのパスを除外する: は、 <xref:System.AppDomainSetup.ApplicationBase%2A> -アセンブリを検索して、アプリケーションの検索パスからのみで<xref:System.AppDomainSetup.PrivateBinPath%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SandboxInterop">
      <MemberSignature Language="C#" Value="public bool SandboxInterop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SandboxInterop" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.SandboxInterop" />
      <MemberSignature Language="VB.NET" Value="Public Property SandboxInterop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SandboxInterop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SandboxInterop : bool with get, set" Usage="System.AppDomainSetup.SandboxInterop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>呼び出しのたびに <c>QueryInterface</c> が実行されるように、アプリケーション ドメインの相互運用呼び出しに対するインターフェイス キャッシュが無効かどうかを示す値を取得または設定します。</summary>
        <value>現在の <see cref="T:System.AppDomainSetup" /> オブジェクトを使用して作成された、アプリケーション ドメインの相互運用呼び出しに対するインターフェイス キャッシュが無効の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 相互運用呼び出しのパフォーマンスに大きな影響を及ぼしますインターフェイスのキャッシュを無効にします。  
  
 このメンバーがで導入された、[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCompatibilitySwitches">
      <MemberSignature Language="C#" Value="public void SetCompatibilitySwitches (System.Collections.Generic.IEnumerable&lt;string&gt; switches);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCompatibilitySwitches(class System.Collections.Generic.IEnumerable`1&lt;string&gt; switches) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCompatibilitySwitches (switches As IEnumerable(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCompatibilitySwitches(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ switches);" />
      <MemberSignature Language="F#" Value="member this.SetCompatibilitySwitches : seq&lt;string&gt; -&gt; unit" Usage="appDomainSetup.SetCompatibilitySwitches switches" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switches" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="switches">互換性スイッチを指定する文字列値の列挙可能なセット。既存の互換性スイッチを消去する場合は <see langword="null" />。</param>
        <summary>指定されたスイッチを設定し、指定された問題のためにアプリケーション ドメインと以前のバージョンの .NET Framework の互換性を確保します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework のメジャー バージョンには、以前のバージョンからの重大な変更が生じる。 たとえば、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]から重大な変更の数が少ないが導入されています、[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]します。 使用して、<xref:System.AppDomainSetup.SetCompatibilitySwitches%2A>これらの重大な変更の 1 つ以上を指定するメソッドは、動作を .NET Framework の以前のバージョンと互換性のあるようにする、アプリケーション ドメインをロールバックする必要があります。  
  
 このメソッドを呼び出すたびに、既存のスイッチの設定が置き換えられます。 設定を消去するには指定`null`の`switches`パラメーター。  
  
 指定する文字列値のセット`switches`配列を実装するために、単純な文字列の配列を指定できます、<xref:System.Collections.IEnumerable>インターフェイス。  
  
 次の表では、.NET Framework の以前のバージョンの動作を復元する設定できる互換性スイッチの例を示します。  
  
|切り替え|説明|  
|------------|-------------|  
|"NetFx40_LegacySecurityPolicy"|コード アクセス セキュリティ (CAS)、[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]でこのアプリケーション ドメインを有効にします。 参照してください[ &lt;NetFx40_LegacySecurityPolicy&gt;要素](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)します。|  
|"NetFx40_Legacy20SortingBehavior"|文字列の既定値を並べ替え、[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]はこのアプリケーション ドメインで有効にします。 従来の並べ替え動作を正常に復元すると、ローカル システムで使用できるように sort00001000.dll ダイナミック リンク ライブラリも必要です。 参照してください[ &lt;CompatSortNLSVersion&gt;要素](~/docs/framework/configure-apps/file-schema/runtime/compatsortnlsversion-element.md)します。|  
|"NetFx40_Legacy40SortingBehavior"|文字列の既定値を並べ替え、 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] Unicode 5.0 は、このアプリケーション ドメインで有効になっているとします。 従来の並べ替え動作を正常に復元すると、ローカル システムで使用できるように sort00060101.dll ダイナミック リンク ライブラリも必要です。|  
|"NetFx40_TimeSpanLegacyFormatMode"|<xref:System.TimeSpan> 書式設定の動作、[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]でこのアプリケーション ドメインを有効にします。 参照してください[ &lt;TimeSpan_LegacyFormatMode&gt;要素](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md)の"復元レガシ TimeSpan"の書式設定」、および、<xref:System.TimeSpan>トピック。|  
|"UseRandomizedStringHashAlgorithm"|ランタイムに文字列のハッシュ コードを計算する、アプリケーション ドメイン間で一貫したハッシュ コードを生成する 1 つのハッシュ アルゴリズムを使用する代わりのアプリケーション ドメインごと。 参照してください[ &lt;UseRandomizedStringHashAlgorithm&gt;要素](~/docs/framework/configure-apps/file-schema/runtime/userandomizedstringhashalgorithm-element.md)します。|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.AppDomain.IsCompatibilitySwitchSet(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/07132b9c-4a72-4710-99d7-e702405e02d4">&lt;NetFx40_LegacySecurityPolicy&gt;要素</related>
        <related type="Article" href="https://msdn.microsoft.com/library/782cc82e-83f7-404a-80b7-6d3061a8b6e3">&lt;CompatSortNLSVersion&gt;要素</related>
        <related type="Article" href="https://msdn.microsoft.com/library/865e7207-d050-4442-b574-57ea29d5e2d6">&lt;TimeSpan_LegacyFormatMode&gt;要素</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c08125d6-56cc-4b23-b482-813ff85dc630">&lt;UseRandomizedStringHashAlgorithm&gt;要素</related>
      </Docs>
    </Member>
    <Member MemberName="SetConfigurationBytes">
      <MemberSignature Language="C#" Value="public void SetConfigurationBytes (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetConfigurationBytes(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetConfigurationBytes (value As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetConfigurationBytes(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetConfigurationBytes : byte[] -&gt; unit" Usage="appDomainSetup.SetConfigurationBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value">アプリケーション ドメイン用に使用される XML 構成情報が格納された配列。</param>
        <summary>アプリケーションの XML 構成情報を置換し、アプリケーション ドメインの XML 構成情報を提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AppDomainSetup.SetConfigurationBytes%2A>メソッドは、新しいアプリケーション ドメインを作成するアプリケーションの構成情報を交換する方法を提供します。 構成ファイルの情報で`value`アプリケーションの構成ファイルの情報が置き換えられます。 たとえば、Example.exe アプリケーションでは、新しいアプリケーション ドメインを作成するときは、Example.exe.config ファイルから最初に取得された構成情報を置き換えることができます。  
  
> [!IMPORTANT]
>  構成ファイルの情報の一部のコンシューマーが保存された情報を使用しないでください、<xref:System.AppDomainSetup.SetConfigurationBytes%2A>メソッド。 ランタイムは、これにも適用されません。 新しいアプリケーション ドメインですべての構成ファイルの情報を置き換えることを確認するには使用、<xref:System.AppDomainSetup.ConfigurationFile%2A>プロパティを構成ファイルを指定します。 <xref:System.AppDomainSetup.SetConfigurationBytes%2A>アセンブリ バインディングのメソッドに影響します。  
  
 内の XML`value`として格納されている点を除いて、標準的な構成ファイル内の XML と同じでは、<xref:System.Byte>配列。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f04816ab-110d-4e28-9283-845d6d9a4a68">ランタイム設定スキーマ</related>
      </Docs>
    </Member>
    <Member MemberName="SetNativeFunction">
      <MemberSignature Language="C#" Value="public void SetNativeFunction (string functionName, int functionVersion, IntPtr functionPointer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNativeFunction(string functionName, int32 functionVersion, native int functionPointer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNativeFunction (functionName As String, functionVersion As Integer, functionPointer As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNativeFunction(System::String ^ functionName, int functionVersion, IntPtr functionPointer);" />
      <MemberSignature Language="F#" Value="member this.SetNativeFunction : string * int * nativeint -&gt; unit" Usage="appDomainSetup.SetNativeFunction (functionName, functionVersion, functionPointer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionName" Type="System.String" />
        <Parameter Name="functionVersion" Type="System.Int32" />
        <Parameter Name="functionPointer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="functionName">オーバーライドする文字列比較関数の名前。</param>
        <param name="functionVersion">関数のバージョン。 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] では、その値は 1 以上である必要があります。</param>
        <param name="functionPointer">
          <paramref name="functionName" /> をオーバーライドする関数へのポインター。</param>
        <summary>文字列比較関数の代替実装を持つ共通言語ランタイムを提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の文字列の比較および並べ替えメソッドをオーバーライドできます、<xref:System.AppDomainSetup.SetNativeFunction%2A>メソッド。  
  
-   `IsNLSDefinedString`  
  
-   `CompareStringEx`  
  
-   `LCMapStringEx`  
  
-   `FindNLSStringEx`  
  
-   `CompareStringOrdinal`  
  
-   `GetNLSVersion`  
  
 これらの関数については、次を参照してください。 [National 言語のサポート関数](https://go.microsoft.com/fwlink/?LinkId=228134)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="functionName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="functionVersion" /> は 1 以上ではありません。  
  
- または - 
 <paramref name="functionPointer" /> は <see cref="F:System.IntPtr.Zero" /> です。</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に対する完全な信頼が必要です。 このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</permission>
      </Docs>
    </Member>
    <Member MemberName="ShadowCopyDirectories">
      <MemberSignature Language="C#" Value="public string ShadowCopyDirectories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShadowCopyDirectories" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ShadowCopyDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowCopyDirectories As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShadowCopyDirectories { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowCopyDirectories : string with get, set" Usage="System.AppDomainSetup.ShadowCopyDirectories" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.ShadowCopyDirectories</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>シャドウ コピー対象のアセンブリが格納されているディレクトリの名前を取得または設定します。</summary>
        <value>セミコロンで区切られたディレクトリ名のリスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定ですべてのアセンブリが調査で見つかったシャドウ コピーはシャドウ コピーを有効にすると、つまり、ディレクトリ内で指定された、<xref:System.AppDomainSetup.PrivateBinPath%2A>と<xref:System.AppDomainSetup.ApplicationBase%2A>プロパティ。 <xref:System.AppDomainSetup.ShadowCopyDirectories%2A>プロパティによって指定されたディレクトリでアセンブリをシャドウ コピーを制限します。<xref:System.AppDomainSetup.ShadowCopyDirectories%2A>します。  
  
 文字列を割り当てない場合、<xref:System.AppDomainSetup.ShadowCopyDirectories%2A>プロパティ、またはこのプロパティを設定する場合`null`、によって指定されたディレクトリのすべてのアセンブリ、<xref:System.AppDomainSetup.ApplicationBase%2A>と<xref:System.AppDomainSetup.PrivateBinPath%2A>プロパティは、シャドウ コピーします。  
  
> [!IMPORTANT]
>  セミコロンは区切り文字なので、ディレクトリ パスにはセミコロンを含めないでください。 セミコロンのためのエスケープ文字はありません。  
  
 シャドウ コピーは、有効になっているときに、アセンブリ ファイルは、アセンブリが読み込まれる前に別の場所にコピーされます。 元のアセンブリ ファイルはロックされていないため、更新することができます。 シャドウ コピーの詳細については、次を参照してください。[アセンブリのシャドウ コピー](~/docs/framework/app-domains/shadow-copy-assemblies.md)します。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">パス情報にアクセスします。 関連付けられた列挙体。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <altmember cref="P:System.AppDomainSetup.CachePath" />
        <altmember cref="P:System.AppDomainSetup.ShadowCopyFiles" />
        <related type="Article" href="~/docs/framework/app-domains/shadow-copy-assemblies.md">アセンブリのシャドウ コピー</related>
      </Docs>
    </Member>
    <Member MemberName="ShadowCopyFiles">
      <MemberSignature Language="C#" Value="public string ShadowCopyFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShadowCopyFiles" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ShadowCopyFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowCopyFiles As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShadowCopyFiles { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowCopyFiles : string with get, set" Usage="System.AppDomainSetup.ShadowCopyFiles" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.ShadowCopyFiles</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>シャドウ コピーが有効であるか無効であるかを示す文字列を取得または設定します。</summary>
        <value>シャドウ コピーが有効な場合は文字列値 "true"。シャドウ コピーが無効な場合は "false"。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 シャドウ コピーの詳細については、次を参照してください。[アセンブリのシャドウ コピー](~/docs/framework/app-domains/shadow-copy-assemblies.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.AppDomainSetup.CachePath" />
        <altmember cref="P:System.AppDomainSetup.ShadowCopyDirectories" />
        <related type="Article" href="~/docs/framework/app-domains/shadow-copy-assemblies.md">アセンブリのシャドウ コピー</related>
      </Docs>
    </Member>
    <Member MemberName="TargetFrameworkName">
      <MemberSignature Language="C#" Value="public string TargetFrameworkName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetFrameworkName" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.TargetFrameworkName" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetFrameworkName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetFrameworkName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetFrameworkName : string with get, set" Usage="System.AppDomainSetup.TargetFrameworkName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String)" /> コンストラクターによって解析できる形式で、アプリケーション ドメインの .NET Framework のターゲット バージョンおよびプロファイルを指定する文字列を取得または設定します。</summary>
        <value>対象となる .NET Framework のバージョンとプロファイル。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework の現在実行中のバージョンの読み込みおよびターゲット バージョンおよびプロファイルのコンパイルされたアセンブリを実行するアプリケーション ドメインが使用されることを指示するには、このプロパティを設定します。 現在実行中のバージョンの .NET Framework のターゲット バージョンでコンパイルされたコードの互換性に影響する省略可能な動作が有効にするもの互換性を向上させるために、必要に応じて、これらの動作を無効にできます。 これは、アプリケーションは、個別のアプリケーション ドメインで実行することにより、.NET Framework の複数のバージョンでコンパイルされたアドインをサポートしている場合に役立ちます。  
  
 クライアント アプリケーションの場合の値、<xref:System.AppDomainSetup.TargetFrameworkName%2A>プロパティから推論、<xref:System.Runtime.Versioning.TargetFrameworkAttribute>属性。 [!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)]され、プロジェクトの設定に基づいて自動的にアセンブリにこの属性を追加した後で**ターゲット フレームワーク**プロパティ。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>