<Type Name="Base64FormattingOptions" FullName="System.Base64FormattingOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5ada681aa80278ccaf7a403acc2b2035802e39e9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36433153" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum Base64FormattingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Base64FormattingOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Base64FormattingOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum Base64FormattingOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class Base64FormattingOptions" />
  <TypeSignature Language="F#" Value="type Base64FormattingOptions = " />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>関連する <see cref="Overload:System.Convert.ToBase64CharArray" /> メソッドと <see cref="Overload:System.Convert.ToBase64String" /> メソッドで、それぞれの出力に改行を挿入するかどうかを指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>と<xref:System.Convert.ToBase64String%2A?displayProperty=nameWithType>メソッドは、8 ビット符号なし整数の配列の値を base64 の数字で構成される等価の文字列形式に変換します。 文字列形式には、1 つ含めることができますを返したり、復帰文字として改行が定義されている複数の改行文字 (U+000D)、改行文字 (u+000 a)。 改行は、base 64 エンコード形式での空白文字と見なされる、ために、エンコードされたバイト配列に文字列を base 64 に変換するときに、無視されます。 コントロールまたはコンソール ウィンドウなどのデバイスに、エンコードされた文字列を表示するときに、改行は単に便利です。  
  
 [なし] と InsertLineBreaks 値は相互に排他的です。 したがって、ですが、<xref:System.Base64FormattingOptions.None?displayProperty=nameWithType>列挙が付いて、<xref:System.FlagsAttribute>属性、意味はありませんこれら 2 つの値のビットごとの組み合わせを実行します。  
  
   
  
## Examples  
 次の例では、 <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType> 100 要素のバイト配列をエンコードすることによって生成される文字列で、InsertLineBreaks で行を挿入する引数の区切りです。  
  
 [!code-csharp[System.Convert.ToBase64String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String3.cs#3)]
 [!code-vb[System.Convert.ToBase64String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String3.vb#3)]  
  
 例から出力として、<xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType>元のバイト配列の復元に成功すると、変換中に、改行文字は無視されます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="InsertLineBreaks">
      <MemberSignature Language="C#" Value="InsertLineBreaks" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Base64FormattingOptions InsertLineBreaks = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Base64FormattingOptions.InsertLineBreaks" />
      <MemberSignature Language="VB.NET" Value="InsertLineBreaks" />
      <MemberSignature Language="C++ CLI" Value="InsertLineBreaks" />
      <MemberSignature Language="F#" Value="InsertLineBreaks = 1" Usage="System.Base64FormattingOptions.InsertLineBreaks" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Base64FormattingOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>文字列形式で 76 文字ごとに改行を挿入します。</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Base64FormattingOptions None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Base64FormattingOptions.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Base64FormattingOptions.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Base64FormattingOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>文字列形式で 76 文字ごとに改行を挿入しません。</summary>
      </Docs>
    </Member>
  </Members>
</Type>