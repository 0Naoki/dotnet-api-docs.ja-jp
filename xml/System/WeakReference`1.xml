<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WeakReference`1.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5445c8847c1cf56a5e289cd96ac390fbdd8732935.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">445c8847c1cf56a5e289cd96ac390fbdd8732935</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.WeakReference`1">
          <source>The type of the object referenced.</source>
          <target state="translated">参照されるオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.WeakReference`1">
          <source>Represents a typed weak reference, which references an object while still allowing that object to be reclaimed by garbage collection.</source>
          <target state="translated">型指定された "弱い参照" を表します。弱い参照は、オブジェクトがガベージ コレクションによるクリアの対象になっている状態のままで、そのオブジェクトを参照します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.WeakReference`1">
          <source>A weak reference enables the garbage collector to collect an object while still allowing an application to access the object.</source>
          <target state="translated">弱い参照を有効に、ガベージ コレクターがオブジェクトにアクセスするアプリケーション状態のまま、オブジェクトを収集します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.WeakReference`1">
          <source>If you need the object, you can obtain a strong reference to it and prevent it from being collected.</source>
          <target state="translated">オブジェクトを必要がある場合は、強力な参照を取得し、収集されるを防ぐことできます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.WeakReference`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.WeakReference`1" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.WeakReference`1" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.WeakReference`1.#ctor(`0)">
          <source>The object to reference, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">参照するオブジェクト、または <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.WeakReference`1.#ctor(`0)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.WeakReference`1" /&gt;</ph> class that references the specified object.</source>
          <target state="translated">指定したオブジェクトを参照する <ph id="ph1">&lt;see cref="T:System.WeakReference`1" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.WeakReference`1.#ctor(`0,System.Boolean)">
          <source>The object to reference, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">参照するオブジェクト、または <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.WeakReference`1.#ctor(`0,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to track the object after finalization; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to track the object only until finalization.</source>
          <target state="translated">オブジェクトを終了後に追跡する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。オブジェクトを終了時点まで追跡し、終了後は追跡しない場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.WeakReference`1.#ctor(`0,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.WeakReference`1" /&gt;</ph> class that references the specified object and uses the specified resurrection tracking.</source>
          <target state="translated">指定したオブジェクトを参照し、指定した再生処理追跡を使用する <ph id="ph1">&lt;see cref="T:System.WeakReference`1" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.WeakReference`1.Finalize">
          <source>Discards the reference to the target that is represented by the current <ph id="ph1">&lt;see cref="T:System.WeakReference`1" /&gt;</ph> object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.WeakReference`1" /&gt;</ph> オブジェクトが表すターゲットへの参照を破棄します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.WeakReference`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>An object that holds all the data necessary to serialize or deserialize the current <ph id="ph1">&lt;see cref="T:System.WeakReference`1" /&gt;</ph> object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.WeakReference`1" /&gt;</ph> オブジェクトのシリアル化または逆シリアル化に必要なすべてのデータを保持するオブジェクト。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.WeakReference`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The location where serialized data is stored and retrieved.</source>
          <target state="translated">シリアル化データを格納および取得する位置。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.WeakReference`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with all the data necessary to serialize the current <ph id="ph2">&lt;see cref="T:System.WeakReference`1" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> オブジェクトに、現在の <ph id="ph2">&lt;see cref="T:System.WeakReference`1" /&gt;</ph> オブジェクトをシリアル化するために必要なすべてのデータを設定します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.WeakReference`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.WeakReference`1.SetTarget(`0)">
          <source>The new target object.</source>
          <target state="translated">新しい対象オブジェクト。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.WeakReference`1.SetTarget(`0)">
          <source>Sets the target object that is referenced by this <ph id="ph1">&lt;see cref="T:System.WeakReference`1" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.WeakReference`1" /&gt;</ph> オブジェクトが参照するターゲット オブジェクトを設定します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.WeakReference`1.TryGetTarget(`0@)">
          <source>When this method returns, contains the target object, if it is available.</source>
          <target state="translated">このメソッドから制御が戻るときに、可能であればターゲット オブジェクトが格納されます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.WeakReference`1.TryGetTarget(`0@)">
          <source>This parameter is treated as uninitialized.</source>
          <target state="translated">このパラメーターは初期化前として処理されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.WeakReference`1.TryGetTarget(`0@)">
          <source>Tries to retrieve the target object that is referenced by the current <ph id="ph1">&lt;see cref="T:System.WeakReference`1" /&gt;</ph> object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.WeakReference`1" /&gt;</ph> オブジェクトが参照するターゲット オブジェクトの取得を試みます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.WeakReference`1.TryGetTarget(`0@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the target was retrieved; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ターゲットが取得された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>