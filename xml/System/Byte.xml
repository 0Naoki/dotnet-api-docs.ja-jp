<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Byte.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac559d48c0bd83171c7515395be3988452d5e69c5aa.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">59d48c0bd83171c7515395be3988452d5e69c5aa</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Byte">
          <source>Represents an 8-bit unsigned integer.</source>
          <target state="translated">8 ビット符号なし整数を表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source><ph id="ph1">&lt;xref:System.Byte&gt;</ph> is an immutable value type that represents unsigned integers with values that range from 0 (which is represented by the <ph id="ph2">&lt;xref:System.Byte.MinValue?displayProperty=nameWithType&gt;</ph> constant) to 255 (which is represented by the <ph id="ph3">&lt;xref:System.Byte.MaxValue?displayProperty=nameWithType&gt;</ph> constant).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 符号なし整数の範囲は 0 から値を表す不変の値の型は、(で表される、<ph id="ph2">&lt;xref:System.Byte.MinValue?displayProperty=nameWithType&gt;</ph>定数) 255 (で表される、<ph id="ph3">&lt;xref:System.Byte.MaxValue?displayProperty=nameWithType&gt;</ph>定数)。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The .NET Framework also includes a signed 8-bit integer value type, <ph id="ph1">&lt;xref:System.SByte&gt;</ph>, which represents values that range from -128 to 127.</source>
          <target state="translated">.NET Framework は、8 ビット符号付き整数値型でも含まれています。 <ph id="ph1">&lt;xref:System.SByte&gt;</ph>、-128 から 127 までの値を表します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>Instantiating a Byte Value</source>
          <target state="translated">バイト値をインスタンス化します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value in several ways:</source>
          <target state="translated">インスタンス化することができます、<ph id="ph1">&lt;xref:System.Byte&gt;</ph>方法はいくつかの値。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>You can declare a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> variable and assign it a literal integer value that is within the range of the <ph id="ph2">&lt;xref:System.Byte&gt;</ph> data type.</source>
          <target state="translated">宣言することができます、<ph id="ph1">&lt;xref:System.Byte&gt;</ph>変数の範囲内にあるリテラルの整数値を割り当てると、<ph id="ph2">&lt;xref:System.Byte&gt;</ph>データ型。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The following example declares two <ph id="ph1">&lt;xref:System.Byte&gt;</ph> variables and assigns them values in this way.</source>
          <target state="translated">次の例では、2 つ宣言<ph id="ph1">&lt;xref:System.Byte&gt;</ph>変数し、それらにこの方法で値を割り当てます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>You can assign a non-byte numeric value to a byte.</source>
          <target state="translated">バイト以外の数値は、バイトに割り当てることができます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if <ph id="ph1">`Option Strict`</ph> is on.</source>
          <target state="translated">これは、縮小変換は c# のキャスト演算子が、Visual Basic での変換メソッド場合<ph id="ph1">`Option Strict`</ph>にします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>If the non-byte value is a <ph id="ph1">&lt;xref:System.Single&gt;</ph>, <ph id="ph2">&lt;xref:System.Double&gt;</ph>, or <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion.</source>
          <target state="translated">バイト以外の値がある場合、 <ph id="ph1">&lt;xref:System.Single&gt;</ph>、 <ph id="ph2">&lt;xref:System.Double&gt;</ph>、または<ph id="ph3">&lt;xref:System.Decimal&gt;</ph>を小数部が、その小数部の処理を含む値は、変換を実行して、コンパイラによって異なります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The following example assigns several numeric values to <ph id="ph1">&lt;xref:System.Byte&gt;</ph> variables.</source>
          <target state="translated">次の例では、いくつかの数値を<ph id="ph1">&lt;xref:System.Byte&gt;</ph>変数。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>You can call a method of the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class to convert any supported type to a <ph id="ph2">&lt;xref:System.Byte&gt;</ph> value.</source>
          <target state="translated">メソッドを呼び出すことができます、<ph id="ph1">&lt;xref:System.Convert&gt;</ph>すべて変換クラスにする型がサポートされている、<ph id="ph2">&lt;xref:System.Byte&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>This is possible because <ph id="ph1">&lt;xref:System.Byte&gt;</ph> supports the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、考えられるため<ph id="ph1">&lt;xref:System.Byte&gt;</ph>をサポートしている、<ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The following example illustrates the conversion of an array of <ph id="ph1">&lt;xref:System.Int32&gt;</ph> values to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> values.</source>
          <target state="translated">次の例は、配列の変換を示しています。<ph id="ph1">&lt;xref:System.Int32&gt;</ph>値<ph id="ph2">&lt;xref:System.Byte&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>You can call the <ph id="ph1">&lt;xref:System.Byte.Parse%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Byte.TryParse%2A&gt;</ph> method to convert the string representation of a <ph id="ph3">&lt;xref:System.Byte&gt;</ph> value to a <ph id="ph4">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">呼び出すことができます、<ph id="ph1">&lt;xref:System.Byte.Parse%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Byte.TryParse%2A&gt;</ph>の文字列形式に変換するメソッド、<ph id="ph3">&lt;xref:System.Byte&gt;</ph>値を<ph id="ph4">&lt;xref:System.Byte&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The string can contain either decimal or hexadecimal digits.</source>
          <target state="translated">文字列は、10 進または 16 進数の数字を含めることができます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The following example illustrates the parse operation by using both a decimal and a hexadecimal string.</source>
          <target state="translated">次の例では、10 進数と 16 進数文字列の両方を使用して、解析操作を示しています。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>Performing Operations on Byte Values</source>
          <target state="translated">バイトの値に対して操作を実行します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The <ph id="ph1">&lt;xref:System.Byte&gt;</ph> type supports standard mathematical operations such as addition, subtraction, division, multiplication, subtraction, negation, and unary negation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph>型は、加算、減算、除算、乗算、減算、否定、単項否定演算子などの標準的な数学的演算をサポートしています。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>Like the other integral types, the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> type also supports the bitwise <ph id="ph2">`AND`</ph>, <ph id="ph3">`OR`</ph>, <ph id="ph4">`XOR`</ph>, left shift, and right shift operators.</source>
          <target state="translated">などの他の整数型、<ph id="ph1">&lt;xref:System.Byte&gt;</ph>型もサポートしている、ビットごと<ph id="ph2">`AND`</ph>、 <ph id="ph3">`OR`</ph>、 <ph id="ph4">`XOR`</ph>、shift キー、および右シフト演算子のままです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>You can use the standard numeric operators to compare two <ph id="ph1">&lt;xref:System.Byte&gt;</ph> values, or you can call the <ph id="ph2">&lt;xref:System.Byte.CompareTo%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Byte.Equals%2A&gt;</ph> method.</source>
          <target state="translated">標準の数値演算子を使用するには 2 つを比較する<ph id="ph1">&lt;xref:System.Byte&gt;</ph>値、またはを呼び出すことができます、<ph id="ph2">&lt;xref:System.Byte.CompareTo%2A&gt;</ph>または<ph id="ph3">&lt;xref:System.Byte.Equals%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>You can also call the members of the <ph id="ph1">&lt;xref:System.Math&gt;</ph> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.</source>
          <target state="translated">メンバーを呼び出すこともできます、<ph id="ph1">&lt;xref:System.Math&gt;</ph>をさまざまな数値の絶対値の取得、商と整数除算の剰余を計算する、2 つの整数の最大値または最小値を決定する、数値の符号を取得および数値の丸め処理を行うなど、数値の操作を実行するクラス。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>Representing a Byte as a String</source>
          <target state="translated">バイトを文字列として表す</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The <ph id="ph1">&lt;xref:System.Byte&gt;</ph> type provides full support for standard and custom numeric format strings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph>標準およびカスタム数値書式指定文字列の型が完全にサポートを提供します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>(For more information, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>, <bpt id="p2">[</bpt>Standard Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>, and <bpt id="p3">[</bpt>Custom Numeric Format Strings<ept id="p3">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.) However, most commonly, byte values are represented as one-digit to three-digit values without any additional formatting, or as two-digit hexadecimal values.</source>
          <target state="translated">(詳細については、次を参照してください<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>、<bpt id="p2">[</bpt>標準の数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>、および<bpt id="p3">[</bpt>カスタム数値書式指定文字列<ept id="p3">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。)。ただし、ほとんどの場合、バイト値として表される 1 桁の 3 桁の値の追加書式設定なし、または 2 桁の 16 進値として。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>To format a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value as an integral string with no leading zeros, you can call the parameterless <ph id="ph2">&lt;xref:System.Byte.ToString&gt;</ph> method.</source>
          <target state="translated">書式設定、<ph id="ph1">&lt;xref:System.Byte&gt;</ph>値先行ゼロなしで整数を文字列として呼び出すことができます、パラメーターなし<ph id="ph2">&lt;xref:System.Byte.ToString&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>By using the "D" format specifier, you can also include a specified number of leading zeros in the string representation.</source>
          <target state="translated">"D"書式指定子を使用すると、指定された数の文字列形式には先行ゼロを含めることもできます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>By using the "X" format specifier, you can represent a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value as a hexadecimal string.</source>
          <target state="translated">"X"書式指定子を使用して表すことができます、 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 16 進数文字列値です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The following example formats the elements in an array of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> values in these three ways.</source>
          <target state="translated">次の例の配列内の要素を書式設定<ph id="ph1">&lt;xref:System.Byte&gt;</ph>これら 3 つの方法で値。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>You can also format a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value as a binary, octal, decimal, or hexadecimal string by calling the <ph id="ph2">&lt;xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29&gt;</ph> method and supplying the base as the method's second parameter.</source>
          <target state="translated">フォーマットすることも、<ph id="ph1">&lt;xref:System.Byte&gt;</ph>バイナリ、8 進数、呼び出すことによって、10 進数または 16 進数の文字列値、<ph id="ph2">&lt;xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29&gt;</ph>メソッドおよびメソッドの 2 番目のパラメーターとして情報を指定します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The following example calls this method to display the binary, octal, and hexadecimal representations of an array of byte values.</source>
          <target state="translated">次の例では、このバイナリは、8 進数、表示するメソッドとバイト値の配列の 16 進数表記を呼び出します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>Working with Non-Decimal Byte Values</source>
          <target state="translated">非 10 進数のバイト値の扱い</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>In addition to working with individual bytes as decimal values, you may want to perform bitwise operations with byte values, or work with byte arrays or with the binary or hexadecimal representations of byte values.</source>
          <target state="translated">に加えて、10 進数値として個々 のバイトを使用するには、バイト値のビットごとの演算を実行またはバイト配列またはバイト値のバイナリまたは 16 進表現でしたいと可能性があります。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>For example, overloads of the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method can convert each of the primitive data types to a byte array, and the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType&gt;</ph> method converts a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value to a byte array.</source>
          <target state="translated">などのオーバー ロードが、<ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph>メソッドはバイト配列への各プリミティブ データ型を変換できます、<ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType&gt;</ph>メソッドに変換、<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>をバイト配列値です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source><ph id="ph1">&lt;xref:System.Byte&gt;</ph> values are represented in 8 bits by their magnitude only, without a sign bit.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 値は、符号ビットせず、8 ビットで、のみ、その規模で表現されます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>This is important to keep in mind when you perform bitwise operations on <ph id="ph1">&lt;xref:System.Byte&gt;</ph> values or when you work with individual bits.</source>
          <target state="translated">これでビットごとの演算を実行するときに注意する重要<ph id="ph1">&lt;xref:System.Byte&gt;</ph>値または個々 のビットを操作する際にします。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.</source>
          <target state="translated">数値型、ブール値、または 2 つの非 10 進値の比較演算を実行するために両方の値は同じ形式を使用する必要があります。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>When an operation is performed on two <ph id="ph1">&lt;xref:System.Byte&gt;</ph> values, the values share the same representation, so the result is accurate.</source>
          <target state="translated">2 つの操作を実行するときに<ph id="ph1">&lt;xref:System.Byte&gt;</ph>値、値を共有、同じ形式をので、結果が正確です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>This is illustrated in the following example, which masks the lowest-order bit of a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value to ensure that it is even.</source>
          <target state="translated">最下位ビットをマスクする次の例に示す、<ph id="ph1">&lt;xref:System.Byte&gt;</ph>でもあることを確認する値。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>On the other hand, when you work with both unsigned and signed bits, bitwise operations are complicated by the fact that the <ph id="ph1">&lt;xref:System.SByte&gt;</ph> values use sign-and-magnitude representation for positive values, and two's complement representation for negative values.</source>
          <target state="translated">その一方で、符号付きと符号なしの両方のビットを操作するときにビットごとの演算は複雑にする、<ph id="ph1">&lt;xref:System.SByte&gt;</ph>値が正の値、および 2 の補数表現負の値の符号および絶対値による表現を使用します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>In order to perform a meaningful bitwise operation, the values must be converted to two equivalent representations, and information about the sign bit must be preserved.</source>
          <target state="translated">意味のあるビットごとの演算を実行するために、値は、2 つの同等の表現に変換する必要があります、符号ビットに関する情報を保持する必要があります。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The following example does this to mask out bits 2 and 4 of an array of 8-bit signed and unsigned values.</source>
          <target state="translated">次の例は、2、8 ビット符号付きと符号なしの値の配列の 4 ビットをマスクするされます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>All members of this type are thread safe.</source>
          <target state="translated">この種類のすべてのメンバーでは、スレッド セーフです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>Members that appear to modify instance state actually return a new instance initialized with the new value.</source>
          <target state="translated">インスタンスの状態を変更する表示されるメンバーは、新しい値で初期化された新しいインスタンスを実際に返します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</source>
          <target state="translated">として、他の種類と読み取りと書き込みをこの型のインスタンスを含む共有変数を保護する必要があるスレッド セーフを確保するロックによってです。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="T:System.Byte">
          <source>Compares this instance to a specified object or <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> and returns an indication of their relative values.</source>
          <target state="translated">指定したオブジェクトまたは <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> とこのインスタンスを比較し、これらの相対値を示す値を返します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source>An 8-bit unsigned integer to compare.</source>
          <target state="translated">比較対象の 8 ビット符号なし整数。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source>Compares this instance to a specified 8-bit unsigned integer and returns an indication of their relative values.</source>
          <target state="translated">指定した 8 ビット符号なし整数とこのインスタンスを比較し、これらの相対値を示す値を返します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source>A signed integer that indicates the relative order of this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">このインスタンスと <ph id="ph1">&lt;paramref name="value" /&gt;</ph> の相対順序を示す符号付き整数。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 戻り値</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>説明</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0 より小さい値</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスは、<ph id="ph3">&lt;paramref name="value" /&gt;</ph> よりも小さいです。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is equal to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスは <ph id="ph3">&lt;paramref name="value" /&gt;</ph> と等価です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0 より大きい値</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスは <ph id="ph3">&lt;paramref name="value" /&gt;</ph> よりも大きいです。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Byte)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface and performs slightly better than the <ph id="ph2">&lt;xref:System.Byte.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph> method because it does not have to convert the <ph id="ph3">`value`</ph> parameter to an object.</source>
          <target state="translated">このメソッドを実装する、<ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph>インターフェイスし、実行よりもわずかに向上、<ph id="ph2">&lt;xref:System.Byte.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph>メソッドに変換があるないため、<ph id="ph3">`value`</ph>オブジェクトへのパラメーターです。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Byte)">
          <source>Depending on your programming language, it might be possible to code a <ph id="ph1">&lt;xref:System.Byte.CompareTo%2A&gt;</ph> method where the parameter type has fewer bits (is narrower) than the instance type.</source>
          <target state="translated">プログラミング言語に応じてコードに考えられる場合があります、<ph id="ph1">&lt;xref:System.Byte.CompareTo%2A&gt;</ph>メソッドのパラメーターの型のビット数が少ないがここではインスタンスの型よりもします。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Byte)">
          <source>This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</source>
          <target state="translated">これには一部のプログラミング言語は、ビット数のインスタンスと型としてパラメーターを表す暗黙の拡大変換を実行するため。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Byte)">
          <source>For example, suppose the instance type is <ph id="ph1">&lt;xref:System.Int32&gt;</ph> and the parameter type is <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">たとえば、インスタンスの型が<ph id="ph1">&lt;xref:System.Int32&gt;</ph>パラメーターの型と<ph id="ph2">&lt;xref:System.Byte&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Byte)">
          <source>The Microsoft C# compiler generates instructions to represent the value of the parameter as an <ph id="ph1">&lt;xref:System.Int32&gt;</ph>, then generates a <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method that compares the values of the <ph id="ph3">&lt;xref:System.Int32&gt;</ph> instance and the <ph id="ph4">&lt;xref:System.Int32&gt;</ph> parameter representation.</source>
          <target state="translated">Microsoft c# コンパイラは、パラメーターの値を表す命令を生成、<ph id="ph1">&lt;xref:System.Int32&gt;</ph>が生成されます、<ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph>の値を比較するメソッド、<ph id="ph3">&lt;xref:System.Int32&gt;</ph>インスタンスおよび<ph id="ph4">&lt;xref:System.Int32&gt;</ph>パラメーター形式です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Byte)">
          <source>Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</source>
          <target state="translated">コンパイラが数値型に暗黙の拡大変換を実行するかどうかを決定する、プログラミング言語のドキュメントを参照してください。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Byte)">
          <source>The following code example demonstrates generic and non-generic versions of the <ph id="ph1">`CompareTo`</ph> method for several value and reference types.</source>
          <target state="translated">次のコード例に示しますジェネリックと非ジェネリック バージョンの<ph id="ph1">`CompareTo`</ph>いくつかの値と参照型のメソッドです。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source>An object to compare, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">比較対象のオブジェクト、または <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source>Compares this instance to a specified object and returns an indication of their relative values.</source>
          <target state="translated">指定したオブジェクトとこのインスタンスを比較し、これらの相対値を示す値を返します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source>A signed integer that indicates the relative order of this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">このインスタンスと <ph id="ph1">&lt;paramref name="value" /&gt;</ph> の相対順序を示す符号付き整数。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 戻り値</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>説明</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0 より小さい値</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスは、<ph id="ph3">&lt;paramref name="value" /&gt;</ph> よりも小さいです。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is equal to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスは <ph id="ph3">&lt;paramref name="value" /&gt;</ph> と等価です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0 より大きい値</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスは <ph id="ph3">&lt;paramref name="value" /&gt;</ph> よりも大きいです。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">`value`</ph> must be <ph id="ph2">`null`</ph> or an instance of <ph id="ph3">&lt;xref:System.Byte&gt;</ph>; otherwise, an exception is thrown.</source>
          <target state="translated"><ph id="ph1">`value`</ph> 必要があります<ph id="ph2">`null`</ph>またはのインスタンス<ph id="ph3">&lt;xref:System.Byte&gt;</ph>です。 それ以外の場合、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Object)">
          <source>Any instance of <ph id="ph1">&lt;xref:System.Byte&gt;</ph>, regardless of its value, is considered greater than <ph id="ph2">`null`</ph>.</source>
          <target state="translated">任意のインスタンス<ph id="ph1">&lt;xref:System.Byte&gt;</ph>、その値に関係なくが大きいと見なされますより<ph id="ph2">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Object)">
          <source>This method is implemented to support the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">このメソッドがサポートするために実装されている、<ph id="ph1">&lt;xref:System.IComparable&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Object)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Byte.CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例を示しています、<ph id="ph1">&lt;xref:System.Byte.CompareTo%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> ではありません。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="T:System.Byte">
          <source>Returns a value indicating whether two instances of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> represent the same value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> の 2 つのインスタンスが同じ値を表しているかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Byte.Equals(System.Byte)">
          <source>An object to compare to this instance.</source>
          <target state="translated">このインスタンスと比較するオブジェクト。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Byte.Equals(System.Byte)">
          <source>Returns a value indicating whether this instance and a specified <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> object represent the same value.</source>
          <target state="translated">このインスタンスと指定した <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> オブジェクトが同じ値を表しているかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Byte.Equals(System.Byte)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is equal to this instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="obj" /&gt;</ph> がこのインスタンスと等しい場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Equals(System.Byte)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interface, and performs slightly better than <ph id="ph2">&lt;xref:System.Byte.Equals%28System.Object%29&gt;</ph> because it does not have to convert the <ph id="ph3">`obj`</ph> parameter to an object.</source>
          <target state="translated">このメソッドを実装する、<ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph>インターフェイス、および実行よりもわずかに向上<ph id="ph2">&lt;xref:System.Byte.Equals%28System.Object%29&gt;</ph>変換があるないため、<ph id="ph3">`obj`</ph>オブジェクトへのパラメーターです。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Equals(System.Byte)">
          <source>The following code example determines whether the first <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value is equal to the second <ph id="ph2">&lt;xref:System.Byte&gt;</ph> value, and whether the first <ph id="ph3">&lt;xref:System.Byte&gt;</ph> value is equal to the boxed version of the second <ph id="ph4">&lt;xref:System.Byte&gt;</ph> value.</source>
          <target state="translated">次のコード例を決定するかどうか、最初<ph id="ph1">&lt;xref:System.Byte&gt;</ph>値は、2 番目に<ph id="ph2">&lt;xref:System.Byte&gt;</ph>値、かどうかおよび最初<ph id="ph3">&lt;xref:System.Byte&gt;</ph>値は、2 番目のボックス化されたバージョンに<ph id="ph4">&lt;xref:System.Byte&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Byte.Equals(System.Object)">
          <source>An object to compare with this instance, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">対象のインスタンスと比較する対象のオブジェクト、または <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Byte.Equals(System.Object)">
          <source>Returns a value indicating whether this instance is equal to a specified object.</source>
          <target state="translated">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Byte.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is an instance of <ph id="ph3">&lt;see cref="T:System.Byte" /&gt;</ph> and equals the value of this instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="obj" /&gt;</ph> が <ph id="ph3">&lt;see cref="T:System.Byte" /&gt;</ph> のインスタンスで、このインスタンスの値に等しい場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Equals(System.Object)">
          <source>The following code example determines whether the first <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value is equal to the second <ph id="ph2">&lt;xref:System.Byte&gt;</ph> value, and whether the first <ph id="ph3">&lt;xref:System.Byte&gt;</ph> value is equal to the boxed version of the second <ph id="ph4">&lt;xref:System.Byte&gt;</ph> value.</source>
          <target state="translated">次のコード例を決定するかどうか、最初<ph id="ph1">&lt;xref:System.Byte&gt;</ph>値は、2 番目に<ph id="ph2">&lt;xref:System.Byte&gt;</ph>値、かどうかおよび最初<ph id="ph3">&lt;xref:System.Byte&gt;</ph>値は、2 番目のボックス化されたバージョンに<ph id="ph4">&lt;xref:System.Byte&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Byte.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">このインスタンスのハッシュ コードを返します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Byte.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> のハッシュ コード。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Byte.GetTypeCode">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> for value type <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> 値型の <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Byte.GetTypeCode">
          <source>The enumerated constant, <ph id="ph1">&lt;see cref="F:System.TypeCode.Byte" /&gt;</ph>.</source>
          <target state="translated">列挙型定数 <ph id="ph1">&lt;see cref="F:System.TypeCode.Byte" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="F:System.Byte.MaxValue">
          <source>Represents the largest possible value of a <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> の最大有効値を表します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="F:System.Byte.MaxValue">
          <source>This field is constant.</source>
          <target state="translated">このフィールドは定数です。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Byte.MaxValue">
          <source>The value of this constant is 255 (hexadecimal 0xFF).</source>
          <target state="translated">この定数の値は、255 (16 進数 0 xff まで) です。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Byte.MaxValue">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Byte.MaxValue&gt;</ph> field to screen variable inputs for values that are outside the range of possible byte values.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Byte.MaxValue&gt;</ph>可能なバイト値の範囲外にある値を変数の入力を画面にフィールドです。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="F:System.Byte.MinValue">
          <source>Represents the smallest possible value of a <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> の最小有効値を表します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="F:System.Byte.MinValue">
          <source>This field is constant.</source>
          <target state="translated">このフィールドは定数です。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Byte.MinValue">
          <source>The value of this constant is 0.</source>
          <target state="translated">この定数の値は 0 です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Byte.MinValue">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Byte.MinValue&gt;</ph> field to screen variable inputs for values that are outside the range of possible byte values.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Byte.MinValue&gt;</ph>可能なバイト値の範囲外にある値を変数の入力を画面にフィールドです。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="T:System.Byte">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> equivalent.</source>
          <target state="translated">数値の文字列形式を、それと等価の <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> に変換します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">変換する数値を含んだ文字列。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String)">
          <source>The string is interpreted using the <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph> style.</source>
          <target state="translated">文字列は、<ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph> スタイルを使用して解釈されます。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String)">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> equivalent.</source>
          <target state="translated">数値の文字列形式を、それと等価の <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> に変換します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String)">
          <source>A byte value that is equivalent to the number contained in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> に格納されている数値と等価のバイト値。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>The <ph id="ph1">`s`</ph> parameter contains a number of the form:</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターには、フォームの番号が含まれています。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>[ws][sign]digits[ws]</source>
          <target state="translated">[ws][サインイン] 桁 [ws]</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">角かっこ ([ および ]) 内の要素は省略可能です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>The following table describes each element.</source>
          <target state="translated">次の表では、各要素について説明します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>Optional white space.</source>
          <target state="translated">省略可能なホワイト スペースです。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>An optional positive or negative sign.</source>
          <target state="translated">オプションで正または負符号。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">0 から 9 までの数字のシーケンス。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>The <ph id="ph1">`s`</ph> parameter is interpreted using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターを使用して解釈されますが、<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph>スタイル。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>In addition to the byte value's decimal digits, only leading and trailing spaces together with a leading sign are allowed.</source>
          <target state="translated">バイト値の 10 進数字以外には、先頭と末尾のスペースが先頭の符号と共にのみを使用できます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>(If the sign is present, it must be a positive sign or the method throws an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.) To explicitly define the style elements that can be present in <ph id="ph2">`s`</ph>, use either the <ph id="ph3">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph4">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">(符号が場合、正の符号をする必要がありますまたはメソッドをスロー、 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>)。使用できるスタイル要素を明示的に定義する<ph id="ph2">`s`</ph>、いずれかを使用して、<ph id="ph3">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph>または<ph id="ph4">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that is initialized for the current system culture.</source>
          <target state="translated"><ph id="ph1">`s`</ph>で書式設定情報を使用してパラメーターを解析、<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>現在のシステムのカルチャに初期化されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.</source>
          <target state="translated">詳細については、「<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>To parse a string using the formatting information of some other culture, use the <ph id="ph1">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">いくつか他のカルチャの書式情報を使用して文字列を解析するを使用して、<ph id="ph1">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>The following example demonstrates how to convert a string value into a byte value using the <ph id="ph1">&lt;xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">次の例では、文字列値を使用して、バイト値に変換する方法、<ph id="ph1">&lt;xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>The resulting byte value is then displayed to the console.</source>
          <target state="translated">結果のバイト値は、コンソールに表示されます。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not of the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> の書式が正しくありません。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> 未満の数値か、<ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph> より大きい数値を表しています。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">変換する数値を含んだ文字列。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The string is interpreted using the style specified by <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">文字列は、<bpt id="p1">&lt;c&gt;</bpt> スタイル <ept id="p1">&lt;/c&gt;</ept> で指定されたスタイルを使用して解釈されます。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A bitwise combination of enumeration values that indicates the style elements that can be present in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>.</source>
          <target state="translated">通常指定する値は、<ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Converts the string representation of a number in a specified style to its <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> equivalent.</source>
          <target state="translated">指定のスタイルで表現された数値の文字列形式を、それと等価な <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> に変換します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A byte value that is equivalent to the number contained in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> に格納されている数値と等価のバイト値。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as white space or the positive sign) that are allowed in the <ph id="ph2">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph>パラメーター スタイル要素を定義します (空白や正符号) では許可されて、<ph id="ph2">`s`</ph>解析操作が成功するためのパラメーターです。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">ビット フラグの組み合わせを可能にする必要があります、<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>列挙します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`s`</ph> parameter may include the following elements:</source>
          <target state="translated">値に応じて<ph id="ph1">`style`</ph>、<ph id="ph2">`s`</ph>パラメーターは、次の要素を含めることがあります。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws]</source>
          <target state="translated">[ws][$][サインイン] 桁 [.fractional_digits] [e [サインイン] 桁] [ws]</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Or, if <ph id="ph1">`style`</ph> includes <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:</source>
          <target state="translated">または、<ph id="ph1">`style`</ph>が含まれています<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>[ws]hexdigits[ws]</source>
          <target state="translated">[ws] hexdigits [ws]</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">角かっこ ([ および ]) 内の要素は省略可能です。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following table describes each element.</source>
          <target state="translated">次の表では、各要素について説明します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Optional white space.</source>
          <target state="translated">省略可能なホワイト スペースです。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, or at the end of s if style includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">先頭に空白文字は使用できません<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>フラグ、またはスタイルが含まれる場合は、s の最後に、<ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">カルチャ固有の通貨記号。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> property of the current culture.</source>
          <target state="translated">文字列内での位置がによって定義された、<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph>現在のカルチャのプロパティです。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">現在のカルチャの通貨記号に表示される<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>An optional positive sign.</source>
          <target state="translated">省略可能な正の符号。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>(The method throws an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> if a negative sign is present in <ph id="ph2">`s`</ph>.) The sign can appear at the beginning of <ph id="ph3">`s`</ph> if <ph id="ph4">`style`</ph> includes the <ph id="ph5">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, or at the end of <ph id="ph6">`s`</ph> if <ph id="ph7">`style`</ph> includes the <ph id="ph8">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">(メソッドをスロー、<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>に負の符号がである場合<ph id="ph2">`s`</ph>)。先頭に表示できる符号<ph id="ph3">`s`</ph>場合<ph id="ph4">`style`</ph>が含まれています、<ph id="ph5">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph>フラグ、またはの末尾<ph id="ph6">`s`</ph>場合<ph id="ph7">`style`</ph>が含まれています、<ph id="ph8">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">0 ~ 9 桁の数字のシーケンス。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">カルチャに固有の小数点記号です。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's decimal point symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">現在のカルチャの小数点記号に表示される<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>One or more occurrences of the digit 0.</source>
          <target state="translated">数字の 0 の 1 つ以上の出現します。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Fractional digits can appear in <ph id="ph1">`s`</ph> only if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">小数部の桁が表示できる<ph id="ph1">`s`</ph>場合にのみ、<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>e<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>e<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The e or E character, which indicates that the value is represented in exponential notation.</source>
          <target state="translated">E または E の文字は、値を指数表記で表されていることを示します。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`s`</ph>場合、パラメーターは指数表記の数値を表すことができる<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A sequence of hexadecimal digits from 0 through f, or 0 through F.</source>
          <target state="translated">一連の 0 f からまたは f 0 から 16 進数の数字</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A string with decimal digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> style) always parses successfully.</source>
          <target state="translated">10 進数字のみを含む文字列 (に対応する、<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph>スタイル) が正常に解析します。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Most of the remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be but are not required to be present in this input string.</source>
          <target state="translated">ほとんど残りの<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>メンバーを制御する可能性がありますが、この入力文字列内に存在する必要はない要素です。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">次の表に示す個別<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>メンバー内に存在可能な要素に影響を与える<ph id="ph2">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Non-composite NumberStyles values</source>
          <target state="translated">非複合 NumberStyles 値</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Elements permitted in s in addition to digits</source>
          <target state="translated">数字だけでなく s で許可されている要素</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Decimal digits only.</source>
          <target state="translated">10 進数字のみです。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>and <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> elements.</source>
          <target state="translated">および<bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>要素。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>However, <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> must consist of only one or more 0 digits or an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> is thrown.</source>
          <target state="translated">ただし、 <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>のみ 1 つ以上の数字が 0 ので構成されている必要がありますまたは<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターは、指数表記も使用できます。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>の先頭にある要素<ph id="ph1">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>の末尾に要素<ph id="ph1">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A positive sign can appear before <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>.</source>
          <target state="translated">正の符号は、前に表示できる<bpt id="p1">*</bpt>桁<ept id="p1">*</ept>です。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A positive sign can appear after <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>.</source>
          <target state="translated">正の符号が後に表示される可能性が<bpt id="p1">*</bpt>桁<ept id="p1">*</ept>です。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Although this flag is supported, the use of parentheses in <ph id="ph1">`s`</ph> results in an <ph id="ph2">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">このフラグはサポートされていますでかっこを使用する<ph id="ph1">`s`</ph>結果、<ph id="ph2">&lt;xref:System.OverflowException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Although the group separator symbol can appear in <ph id="ph1">`s`</ph>, it can be preceded by only one or more 0 digits.</source>
          <target state="translated">表示される桁区切り記号が<ph id="ph1">`s`</ph>、のみ 1 つ以上の数字が 0 の前にします。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt> <ph id="ph1">$</ph> <ept id="p1">*</ept>要素。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> flag is used, <ph id="ph2">`s`</ph> must be a hexadecimal value without a prefix.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>フラグを使用すると、<ph id="ph2">`s`</ph>プレフィックスのない 16 進値でなければなりません。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>For example, "F3" parses successfully, but "0xF3" does not.</source>
          <target state="translated">たとえば、"F3"を正常に解析していて、"0xF3"にはないです。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The only other flags that can be combined with it are <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">のみの他のフラグと組み合わせることができますが<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>(The <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration includes a composite number style, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType&gt;</ph>, that includes both white space flags.)</source>
          <target state="translated">(、<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>列挙には、複合数値スタイルが含まれています<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType&gt;</ph>、両方の空白文字のフラグが含まれている。)。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that is initialized for the current system culture.</source>
          <target state="translated"><ph id="ph1">`s`</ph>で書式設定情報を使用してパラメーターを解析、<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>現在のシステムのカルチャに初期化されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>To use the formatting information of some other culture, call the <ph id="ph1">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> overload.</source>
          <target state="translated">いくつか他のカルチャの書式情報を使用するのには、呼び出し、<ph id="ph1">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>オーバー ロードします。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following example parses string representations of <ph id="ph1">`Byte`</ph> values with the <ph id="ph2">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">次の例の文字列表現を解析して<ph id="ph1">`Byte`</ph>の値を使った、<ph id="ph2">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture for the example is en-US.</source>
          <target state="translated">たとえば、現在のカルチャは、EN-US です。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not of the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> の書式が正しくありません。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> 未満の数値か、<ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph> より大きい数値を表しています。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> includes non-zero, fractional digits.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> は 0 以外の小数部の桁を含んでいます。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a combination of <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 値と <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> 値の組み合わせではありません。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">変換する数値を含んだ文字列。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>The string is interpreted using the <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph> style.</source>
          <target state="translated">文字列は、<ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph> スタイルを使用して解釈されます。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific parsing information about <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> に関するカルチャ固有の解析情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the thread current culture is used.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept> が <ph id="ph1">&lt;see langword="null" /&gt;</ph> の場合は、スレッドの現在のカルチャが使用されます。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>Converts the string representation of a number in a specified culture-specific format to its <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> equivalent.</source>
          <target state="translated">指定されたカルチャ固有の書式で表現された文字列形式の数値を、それと等価の <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> に変換します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>A byte value that is equivalent to the number contained in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> に格納されている数値と等価のバイト値。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter contains a number of the form:</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターには、フォームの番号が含まれています。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>[ws][sign]digits[ws]</source>
          <target state="translated">[ws][サインイン] 桁 [ws]</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">角かっこ ([ および ]) 内の要素は省略可能です。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>The following table describes each element.</source>
          <target state="translated">次の表では、各要素について説明します。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>Optional white space.</source>
          <target state="translated">省略可能なホワイト スペースです。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>An optional positive sign.</source>
          <target state="translated">省略可能な正の符号。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">0 から 9 までの数字のシーケンス。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter is interpreted using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer&gt;</ph> style.</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターを使用して解釈されますが、<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer&gt;</ph>スタイル。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>In addition to the byte value's decimal digits, only leading and trailing spaces together with a leading sign are allowed.</source>
          <target state="translated">バイト値の 10 進数字以外には、先頭と末尾のスペースが先頭の符号と共にのみを使用できます。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>(If the sign is present, it must be a positive sign or the method throws an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in <ph id="ph2">`s`</ph>, use the <ph id="ph3">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">(符号が場合、正の符号をする必要がありますまたはメソッドをスロー、 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>)。使用できるカルチャに固有の書式情報とスタイル要素を明示的に定義する<ph id="ph2">`s`</ph>を使用して、<ph id="ph3">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object supplied by <ph id="ph3">`provider`</ph>.</source>
          <target state="translated"><ph id="ph1">`s`</ph>で書式設定情報を使用してパラメーターを解析する<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>で指定されたオブジェクト<ph id="ph3">`provider`</ph>です。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation such as a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>パラメーターは、<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>などの実装、<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>または<ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information used in parsing.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>パラメーターの解析中に使用されるカルチャに固有の情報を提供します。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the thread current culture is used.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> が <ph id="ph2">`null`</ph> の場合は、スレッドの現在のカルチャが使用されます。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>The following example parses string representations of <ph id="ph1">`Byte`</ph> values with the <ph id="ph2">&lt;xref:System.Byte.Parse%2A&gt;</ph> method.</source>
          <target state="translated">次の例の文字列表現を解析して<ph id="ph1">`Byte`</ph>の値を使った、<ph id="ph2">&lt;xref:System.Byte.Parse%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not of the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> の書式が正しくありません。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> 未満の数値か、<ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph> より大きい数値を表しています。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">変換する数値を含んだ文字列。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The string is interpreted using the style specified by <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">文字列は、<bpt id="p1">&lt;c&gt;</bpt> スタイル <ept id="p1">&lt;/c&gt;</ept> で指定されたスタイルを使用して解釈されます。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A bitwise combination of enumeration values that indicates the style elements that can be present in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>.</source>
          <target state="translated">通常指定する値は、<ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>An object that supplies culture-specific information about the format of <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> の書式設定に関するカルチャ固有の情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the thread current culture is used.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept> が <ph id="ph1">&lt;see langword="null" /&gt;</ph> の場合は、スレッドの現在のカルチャが使用されます。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Converts the string representation of a number in a specified style and culture-specific format to its <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> equivalent.</source>
          <target state="translated">指定したスタイルおよびカルチャ固有の書式の数値の文字列形式を、それと等価の <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> に変換します。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A byte value that is equivalent to the number contained in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> に格納されている数値と等価のバイト値。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as white space or the positive sign) that are allowed in the <ph id="ph2">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph>パラメーター スタイル要素を定義します (空白や正符号) では許可されて、<ph id="ph2">`s`</ph>解析操作が成功するためのパラメーターです。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">ビット フラグの組み合わせを可能にする必要があります、<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>列挙します。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`s`</ph> parameter may include the following elements:</source>
          <target state="translated">値に応じて<ph id="ph1">`style`</ph>、<ph id="ph2">`s`</ph>パラメーターは、次の要素を含めることがあります。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws]</source>
          <target state="translated">[ws][$][サインイン] 桁 [.fractional_digits] [e [サインイン] 桁] [ws]</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Or, if the <ph id="ph1">`style`</ph> parameter includes <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:</source>
          <target state="translated">またはの場合、<ph id="ph1">`style`</ph>パラメーターが含まれています<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>[ws]hexdigits[ws]</source>
          <target state="translated">[ws] hexdigits [ws]</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">角かっこ ([ および ]) 内の要素は省略可能です。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following table describes each element.</source>
          <target state="translated">次の表では、各要素について説明します。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Optional white space.</source>
          <target state="translated">省略可能なホワイト スペースです。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, or at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">先頭に空白文字は使用できません<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>フラグ、またはの末尾<ph id="ph4">`s`</ph>場合<ph id="ph5">`style`</ph>が含まれています、<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">カルチャ固有の通貨記号。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method of the <ph id="ph4">`provider`</ph> parameter.</source>
          <target state="translated">文字列内での位置がによって定義された、<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>によって返されるオブジェクト、<ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>のメソッド、<ph id="ph4">`provider`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">通貨記号に表示される<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>An optional positive sign.</source>
          <target state="translated">省略可能な正の符号。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>(The method throws an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> if a negative sign is present in <ph id="ph2">`s`</ph>.) The sign can appear at the beginning of <ph id="ph3">`s`</ph> if <ph id="ph4">`style`</ph> includes the <ph id="ph5">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, or at the end of <ph id="ph6">`s`</ph> if <ph id="ph7">`style`</ph> includes the <ph id="ph8">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">(メソッドをスロー、<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>に負の符号がである場合<ph id="ph2">`s`</ph>)。先頭に表示できる符号<ph id="ph3">`s`</ph>場合<ph id="ph4">`style`</ph>が含まれています、<ph id="ph5">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph>フラグ、またはの末尾<ph id="ph6">`s`</ph>場合<ph id="ph7">`style`</ph>が含まれています、<ph id="ph8">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">0 ~ 9 桁の数字のシーケンス。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">カルチャに固有の小数点記号です。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The decimal point symbol of the culture specified by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`s`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">指定されたカルチャの小数点記号<ph id="ph1">`provider`</ph>に表示できる<ph id="ph2">`s`</ph>場合<ph id="ph3">`style`</ph>が含まれています、<ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>One or more occurrences of the digit 0.</source>
          <target state="translated">数字の 0 の 1 つ以上の出現します。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Fractional digits can appear in <ph id="ph1">`s`</ph> only if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">小数部の桁が表示できる<ph id="ph1">`s`</ph>場合にのみ、<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>e<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>e<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The e or E character, which indicates that the value is represented in exponential notation.</source>
          <target state="translated">E または E の文字は、値を指数表記で表されていることを示します。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The s parameter can represent a number in exponential notation if <ph id="ph1">`style`</ph> includes the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">S パラメーターは指数表記の数値を表すことができる場合<ph id="ph1">`style`</ph>が含まれています、<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A sequence of hexadecimal digits from 0 through f, or 0 through F.</source>
          <target state="translated">一連の 0 f からまたは f 0 から 16 進数の数字</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A string with decimal digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> style) always parses successfully.</source>
          <target state="translated">10 進数字のみを含む文字列 (に対応する、<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph>スタイル) が正常に解析します。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Most of the remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be but are not required to be present in this input string.</source>
          <target state="translated">ほとんど残りの<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>メンバーを制御する可能性がありますが、この入力文字列内に存在する必要はない要素です。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">次の表に示す個別<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>メンバー内に存在可能な要素に影響を与える<ph id="ph2">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Non-composite NumberStyles values</source>
          <target state="translated">非複合 NumberStyles 値</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Elements permitted in s in addition to digits</source>
          <target state="translated">数字だけでなく s で許可されている要素</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Decimal digits only.</source>
          <target state="translated">10 進数字のみです。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>and <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> elements.</source>
          <target state="translated">および<bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>要素。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>However, <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> must consist of only one or more 0 digits or an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> is thrown.</source>
          <target state="translated">ただし、 <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>のみ 1 つ以上の数字が 0 ので構成されている必要がありますまたは<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターは、指数表記も使用できます。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>の先頭にある要素<ph id="ph1">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>の末尾に要素<ph id="ph1">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A positive sign can appear before <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>.</source>
          <target state="translated">正の符号は、前に表示できる<bpt id="p1">*</bpt>桁<ept id="p1">*</ept>です。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A positive sign can appear after <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>.</source>
          <target state="translated">正の符号が後に表示される可能性が<bpt id="p1">*</bpt>桁<ept id="p1">*</ept>です。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Although this flag is supported, the use of parentheses in <ph id="ph1">`s`</ph> results in an <ph id="ph2">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">このフラグはサポートされていますでかっこを使用する<ph id="ph1">`s`</ph>結果、<ph id="ph2">&lt;xref:System.OverflowException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Although the group separator symbol can appear in <ph id="ph1">`s`</ph>, it can be preceded by only one or more 0 digits.</source>
          <target state="translated">表示される桁区切り記号が<ph id="ph1">`s`</ph>、のみ 1 つ以上の数字が 0 の前にします。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt> <ph id="ph1">$</ph> <ept id="p1">*</ept>要素。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> flag is used, <ph id="ph2">`s`</ph> must be a hexadecimal value without a prefix.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>フラグを使用すると、<ph id="ph2">`s`</ph>プレフィックスのない 16 進値でなければなりません。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>For example, "F3" parses successfully, but "0xF3" does not.</source>
          <target state="translated">たとえば、"F3"を正常に解析していて、"0xF3"にはないです。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The only other flags that can be present in <ph id="ph1">`style`</ph> are <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">その他のフラグのみで使用可能な<ph id="ph1">`style`</ph>は<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>と<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>(The <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration has a composite number style, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType&gt;</ph>, that includes both white space flags.)</source>
          <target state="translated">(、<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>列挙体には、複合数値スタイル<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType&gt;</ph>、両方の空白文字のフラグが含まれている)。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation, such as a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>パラメーターは、<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>実装など、<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>または<ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information used in parsing.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>パラメーターの解析中に使用されるカルチャに固有の情報を提供します。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the thread current culture is used.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> が <ph id="ph2">`null`</ph> の場合は、スレッドの現在のカルチャが使用されます。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following code example parses string representations of <ph id="ph1">`Byte`</ph> values with this overload of the <ph id="ph2">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">次のコード例の文字列表現を解析して<ph id="ph1">`Byte`</ph>のこのオーバー ロードを持つ値、<ph id="ph2">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not of the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> の書式が正しくありません。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> 未満の数値か、<ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph> より大きい数値を表しています。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> includes non-zero, fractional digits.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> は 0 以外の小数部の桁を含んでいます。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a combination of <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 値と <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> 値の組み合わせではありません。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the current instance is not zero; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のインスタンスの値がゼロでない場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Byte&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.Byte%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>The value of the current instance, unchanged.</source>
          <target state="translated">変更されていない、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Byte&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Byte&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToChar%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToChar%28System.Byte%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">この変換はサポートされていません。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">このメソッドを使用しようとすると、<ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> がスローされます。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">この変換はサポートされていません。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>No value is returned.</source>
          <target state="translated">値は返されません。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>In all cases.</source>
          <target state="translated">すべての場合。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Byte&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToDecimal%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToDecimal%28System.Byte%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Byte&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToDouble%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToDouble%28System.Byte%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The value of the current instance, converted to an <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Byte&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt16%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToInt16%28System.Byte%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The value of the current instance, converted to an <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Byte&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.Byte%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The value of the current instance, converted to an <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Byte&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.Byte%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The value of the current instance, converted to an <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Byte&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.Byte%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Byte&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToSingle%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToSingle%28System.Byte%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The type to which to convert this <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> value.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 値の変換後の型。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> implementation that supplies information about the format of the returned value.</source>
          <target state="translated">戻り値の書式に関する情報を提供する <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> の実装。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The value of the current instance, converted to <ph id="ph1">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Byte&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) <ph id="ph3">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">推奨される代替手段が呼び出されて、 <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> Visual Basic で)<ph id="ph3">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph>メソッド代わりにします。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The requested type conversion is not supported.</source>
          <target state="translated">要求された型変換はサポートされていません。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Byte&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.Byte%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Byte&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.Byte%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Byte&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.Byte%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="T:System.Byte">
          <source>Converts the value of the current <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> object to its equivalent string representation.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> オブジェクトの値を等価の文字列形式に変換します。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString">
          <source>Converts the value of the current <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> object to its equivalent string representation.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> オブジェクトの値を等価の文字列形式に変換します。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString">
          <source>The string representation of the value of this object, which consists of a sequence of digits that range from 0 to 9 with no leading zeroes.</source>
          <target state="translated">0 から 9 までの一連の数字で構成され、先行ゼロを含まない、このオブジェクトの値の文字列形式。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString">
          <source>The return value is formatted with the general numeric format specifier ("G") and the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the thread current culture.</source>
          <target state="translated">戻り値は、[全般] の数値書式指定子 ("G") でフォーマットされた、<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>の現在のスレッド カルチャ オブジェクト。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString">
          <source>To define the formatting of the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value's string representation, call the <ph id="ph2">&lt;xref:System.Byte.ToString%2A&gt;</ph> method.</source>
          <target state="translated">書式を定義する、<ph id="ph1">&lt;xref:System.Byte&gt;</ph>値の文字列表現を呼び出し、<ph id="ph2">&lt;xref:System.Byte.ToString%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString">
          <source>To define both the format specifiers and culture used to create the string representation of a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value, call the <ph id="ph2">&lt;xref:System.Byte.ToString%2A&gt;</ph> method.</source>
          <target state="translated">書式指定子およびカルチャの文字列表現を作成するために使用の両方を定義する、<ph id="ph1">&lt;xref:System.Byte&gt;</ph>値を呼び出し、<ph id="ph2">&lt;xref:System.Byte.ToString%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">数値書式指定子の詳細については、次を参照してください。<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">書式設定に関する詳細については、次を参照してください。<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString">
          <source>For information about the thread current culture, see <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">現在のスレッド カルチャのについては、次を参照してください。<ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString">
          <source>The following example displays an array of byte values.</source>
          <target state="translated">次の例では、バイト値の配列を表示します。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString">
          <source>Note that the <ph id="ph1">&lt;xref:System.Byte.ToString&gt;</ph> method is not called explicitly in the example.</source>
          <target state="translated">なお、<ph id="ph1">&lt;xref:System.Byte.ToString&gt;</ph>の例では、メソッドは明示的に呼び出されません。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString">
          <source>Instead, it is called implicitly, because of the use of the <bpt id="p1">[</bpt>composite formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> feature.</source>
          <target state="translated">代わりに、これは暗黙的に呼び出されますを使用するため、<bpt id="p1">[</bpt>複合書式指定<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>機能します。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">カルチャ固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>Converts the numeric value of the current <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> object to its equivalent string representation using the specified culture-specific formatting information.</source>
          <target state="translated">指定したカルチャ固有の書式設定情報を使用して、現在の <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> オブジェクトの値をそれと等価な文字列形式に変換します。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>The string representation of the value of this object in the format specified by the <ph id="ph1">&lt;paramref name="provider" /&gt;</ph> parameter.</source>
          <target state="translated">このオブジェクトの値を <ph id="ph1">&lt;paramref name="provider" /&gt;</ph> パラメーターに指定されたの文字列形式で表現した値。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>The return value is formatted with the general numeric format specifier ("G").</source>
          <target state="translated">戻り値には、[全般] の数値書式指定子 ("G") が表示されます。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an object that implements the <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>パラメーターを実装するオブジェクト、<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the string that is returned by this method.</source>
          <target state="translated">その<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>メソッドを返します、<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>このメソッドによって返される文字列の書式に関するカルチャ固有の情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>The object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> can be any of the following:</source>
          <target state="translated">実装するオブジェクト<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>次のいずれかを指定できます。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture whose formatting rules are to be used.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>が書式指定規則が使用されるカルチャを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that contains specific numeric formatting information for this value.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>この値の特定の数値書式設定情報を含むオブジェクトです。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>A custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">実装するカスタム オブジェクト<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph> or a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object cannot be obtained from <ph id="ph4">`provider`</ph>, the return value is formatted using the <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the thread current culture.</source>
          <target state="translated">場合<ph id="ph1">`provider`</ph>は<ph id="ph2">`null`</ph>または<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>からオブジェクトを取得できません<ph id="ph4">`provider`</ph>を使用して、戻り値が書式設定、<ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>の現在のスレッド カルチャ オブジェクト。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>For information about the thread current culture, see <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">現在のスレッド カルチャのについては、次を参照してください。<ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">数値書式指定子の詳細については、次を参照してください。<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">書式設定に関する詳細については、次を参照してください。<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>The following example iterates an array of byte values and displays each of them to the console by calling the <ph id="ph1">&lt;xref:System.Byte.ToString%28System.IFormatProvider%29&gt;</ph> method with different format providers.</source>
          <target state="translated">次の例は、バイトの配列の値し、それらの各を呼び出すことによってコンソールに表示、<ph id="ph1">&lt;xref:System.Byte.ToString%28System.IFormatProvider%29&gt;</ph>異なる書式プロバイダーを持つメソッドです。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String)">
          <source>A numeric format string.</source>
          <target state="translated">数値書式指定文字列。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String)">
          <source>Converts the value of the current <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> object to its equivalent string representation using the specified format.</source>
          <target state="translated">指定した書式を使用して、現在の <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> オブジェクトの値をそれと等価な文字列形式に変換します。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String)">
          <source>The string representation of the current <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> object, formatted as specified by the <ph id="ph2">&lt;paramref name="format" /&gt;</ph> parameter.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> オブジェクトの文字列形式を、<ph id="ph2">&lt;paramref name="format" /&gt;</ph> パラメーターで指定された書式で表現した値。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>The <ph id="ph1">`format`</ph> parameter can be either a standard or a custom numeric format string.</source>
          <target state="translated"><ph id="ph1">`format`</ph>パラメーターには、標準またはカスタム数値書式指定文字列のいずれかを指定できます。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</source>
          <target state="translated">すべてのカスタム数値書式指定文字として、"R"(または"r") 以外のすべての標準数値書式指定文字列はサポートされます。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is <ph id="ph2">`null`</ph> or an empty string (""), the return value is formatted with the general numeric format specifier ("G").</source>
          <target state="translated">場合<ph id="ph1">`format`</ph>は<ph id="ph2">`null`</ph>または空の文字列 ("")、戻り値が、一般的な数値書式指定子 ("G") でフォーマットされています。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>The return value of this function is formatted using the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the thread current culture.</source>
          <target state="translated">使用してこの関数の戻り値の書式は、<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>の現在のスレッド カルチャ オブジェクト。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>For information about the thread current culture, see <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">現在のスレッド カルチャのについては、次を参照してください。<ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>To provide formatting information for cultures other than the current culture, call the <ph id="ph1">&lt;xref:System.Byte.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">現在のカルチャ以外のカルチャの書式情報を提供するには、呼び出し、<ph id="ph1">&lt;xref:System.Byte.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">数値書式指定子の詳細については、次を参照してください。<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">書式設定に関する詳細については、次を参照してください。<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>The following example initializes a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value and displays it to the console using each of the supported standard format strings and a custom format string.</source>
          <target state="translated">次の例の初期化、<ph id="ph1">&lt;xref:System.Byte&gt;</ph>値し、サポートされている標準書式指定文字列とカスタム書式指定文字列の各を使用して、コンソールに表示されます。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>The example is run with en-US as the current culture.</source>
          <target state="translated">例は、現在のカルチャとして EN-US で実行されます。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> includes an unsupported specifier.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> にサポート外の指定子が含まれています。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String)">
          <source>Supported format specifiers are listed in the Remarks section.</source>
          <target state="translated">サポートされている書式指定子は、「解説」に記載されています。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>A standard or custom numeric format string.</source>
          <target state="translated">標準またはカスタムの数値書式指定文字列。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">カルチャ固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>Converts the value of the current <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> object to its equivalent string representation using the specified format and culture-specific formatting information.</source>
          <target state="translated">指定した形式およびカルチャ固有の書式設定情報を使用して、現在の <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> オブジェクトの値をそれと等価の文字列形式に変換します。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the current <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> object, formatted as specified by the <ph id="ph2">&lt;paramref name="format" /&gt;</ph> and <ph id="ph3">&lt;paramref name="provider" /&gt;</ph> parameters.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> オブジェクトの文字列形式を、<ph id="ph2">&lt;paramref name="format" /&gt;</ph> および <ph id="ph3">&lt;paramref name="provider" /&gt;</ph> パラメーターで指定された書式で表現した値。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Byte.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Byte&gt;</ph> value in a specified format of a specified culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph>メソッドの形式、<ph id="ph2">&lt;xref:System.Byte&gt;</ph>特定のカルチャの指定した形式の値。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>To format a number by using the default ("G") format of the current culture, call the <ph id="ph1">&lt;xref:System.Byte.ToString&gt;</ph> method.</source>
          <target state="translated">現在のカルチャの既定値 ("G") の形式を使用して、数値の書式設定、呼び出し、<ph id="ph1">&lt;xref:System.Byte.ToString&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>To format a number by using a specified format of the current culture, call the <ph id="ph1">&lt;xref:System.Byte.ToString%28System.String%29&gt;</ph> method.</source>
          <target state="translated">現在のカルチャの指定された形式を使用して、数値の書式設定、呼び出し、<ph id="ph1">&lt;xref:System.Byte.ToString%28System.String%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`format`</ph> parameter can be either a standard or a custom numeric format string.</source>
          <target state="translated"><ph id="ph1">`format`</ph>パラメーターには、標準またはカスタム数値書式指定文字列のいずれかを指定できます。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</source>
          <target state="translated">すべてのカスタム数値書式指定文字として、"R"(または"r") 以外のすべての標準数値書式指定文字列はサポートされます。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is <ph id="ph2">`null`</ph> or an empty string (""), the return value of this method is formatted with the general numeric format specifier ("G").</source>
          <target state="translated">場合<ph id="ph1">`format`</ph>は<ph id="ph2">`null`</ph>または空の文字列 ("")、このメソッドの戻り値が、一般的な数値書式指定子 ("G") でフォーマットされています。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an object that implements the <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>パラメーターを実装するオブジェクト、<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the string that is returned by this method.</source>
          <target state="translated">その<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>メソッドを返します、<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>このメソッドによって返される文字列の書式に関するカルチャ固有の情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>The object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> can be any of the following:</source>
          <target state="translated">実装するオブジェクト<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>次のいずれかを指定できます。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture whose formatting rules are to be used.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>が書式指定規則が使用されるカルチャを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that contains specific numeric formatting information for this value.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>この値の特定の数値書式設定情報を含むオブジェクトです。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>A custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">実装するカスタム オブジェクト<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph> or a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object cannot be obtained from <ph id="ph4">`provider`</ph>, the return value is formatted using the <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the thread current culture.</source>
          <target state="translated">場合<ph id="ph1">`provider`</ph>は<ph id="ph2">`null`</ph>または<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>からオブジェクトを取得できません<ph id="ph4">`provider`</ph>を使用して、戻り値が書式設定、<ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>の現在のスレッド カルチャ オブジェクト。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>For information about the thread current culture, see <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">現在のスレッド カルチャのについては、次を参照してください。<ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">数値書式指定子の詳細については、次を参照してください。<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">書式設定に関する詳細については、次を参照してください。<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>The following example uses the standard "N" format string and four different <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objects to display the string representation of a byte value to the console.</source>
          <target state="translated">次の例では、標準的な"N"書式指定文字列と 4 つの異なる<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>バイト値の文字列形式をコンソールに表示するオブジェクト。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> includes an unsupported specifier.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> にサポート外の指定子が含まれています。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>Supported format specifiers are listed in the Remarks section.</source>
          <target state="translated">サポートされている書式指定子は、「解説」に記載されています。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="T:System.Byte">
          <source>Tries to convert the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> equivalent, and returns a value that indicates whether the conversion succeeded.</source>
          <target state="translated">数値の文字列形式を対応する <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 表現に変換できるかどうかを試行し、変換に成功したかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">変換する数値を含んだ文字列。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>The string is interpreted using the <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph> style.</source>
          <target state="translated">文字列は、<ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph> スタイルを使用して解釈されます。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>When this method returns, contains the <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> value equivalent to the number contained in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> if the conversion succeeded, or zero if the conversion failed.</source>
          <target state="translated">このメソッドから制御が返されたとき、変換に成功した場合は、<bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> に含まれる数値と等価な <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 値が格納されます。変換に失敗した場合は 0 が格納されます。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>This parameter is passed uninitialized; any value originally supplied in <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> will be overwritten.</source>
          <target state="translated">このパラメーターは初期化されていない状態で渡されています。<bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> で最初に指定された任意の値が上書きされます。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>Tries to convert the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> equivalent, and returns a value that indicates whether the conversion succeeded.</source>
          <target state="translated">数値の文字列形式を対応する <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 表現に変換できるかどうかを試行し、変換に成功したかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="s" /&gt;</ph> was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> が正常に変換された場合は <ph id="ph2">&lt;paramref name="s" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>The conversion fails and the method returns <ph id="ph1">`false`</ph> if the <ph id="ph2">`s`</ph> parameter is not in the correct format, if it is <ph id="ph3">`null`</ph> or <ph id="ph4">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, or if it represents a number less than <ph id="ph5">&lt;xref:System.Byte.MinValue&gt;</ph> or greater than <ph id="ph6">&lt;xref:System.Byte.MaxValue&gt;</ph>.</source>
          <target state="translated">変換に失敗して、メソッドを返します<ph id="ph1">`false`</ph>場合、<ph id="ph2">`s`</ph>パラメーターに含まれない、正しい形式である場合<ph id="ph3">`null`</ph>または<ph id="ph4">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>、数値を表している場合、またはより小さい<ph id="ph5">&lt;xref:System.Byte.MinValue&gt;</ph>以上<ph id="ph6">&lt;xref:System.Byte.MaxValue&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>The <ph id="ph1">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29?displayProperty=nameWithType&gt;</ph> method is similar to the <ph id="ph2">&lt;xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> method, except that <ph id="ph3">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29&gt;</ph> does not throw an exception if the conversion fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29?displayProperty=nameWithType&gt;</ph>メソッドがに似ていますが、<ph id="ph2">&lt;xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph>メソッドの点を除いて、<ph id="ph3">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29&gt;</ph>変換が失敗した場合、例外はスローされません。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>The <ph id="ph1">`s`</ph> parameter should be the string representation of a number in the following form:</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターが、次の形式の数値の文字列形式にする必要があります。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">角かっこ ([ および ]) 内の要素は省略可能です。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>The following table describes each element.</source>
          <target state="translated">次の表では、各要素について説明します。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>Optional white space.</source>
          <target state="translated">省略可能なホワイト スペースです。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>An optional positive sign, as specified by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph> property of the current culture.</source>
          <target state="translated">指定された、省略可能なの正符号、<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph>現在のカルチャのプロパティです。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>A sequence of decimal digits that range from 0 to 9.</source>
          <target state="translated">0 から 9 の範囲の 10 進数字のシーケンス。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>The <ph id="ph1">`s`</ph> parameter is interpreted using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer&gt;</ph> style.</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターを使用して解釈されますが、<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer&gt;</ph>スタイル。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>In addition to the byte value's decimal digits, only leading and trailing spaces together with a leading sign are allowed.</source>
          <target state="translated">バイト値の 10 進数字以外には、先頭と末尾のスペースが先頭の符号と共にのみを使用できます。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>(If the sign is present, it must be a positive sign or the method throws an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in <ph id="ph2">`s`</ph>, use the <ph id="ph3">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">(符号が場合、正の符号をする必要がありますまたはメソッドをスロー、 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>)。使用できるカルチャに固有の書式情報とスタイル要素を明示的に定義する<ph id="ph2">`s`</ph>を使用して、<ph id="ph3">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.</source>
          <target state="translated"><ph id="ph1">`s`</ph>で書式設定情報を使用してパラメーターを解析する<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>現在のカルチャ オブジェクト。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">詳細については、「<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29?displayProperty=nameWithType&gt;</ph> method interprets all digits in the <ph id="ph2">`s`</ph> parameter as decimal digits.</source>
          <target state="translated">このオーバー ロード、<ph id="ph1">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29?displayProperty=nameWithType&gt;</ph>メソッド内のすべての桁を解釈し、<ph id="ph2">`s`</ph>として小数点以下桁数のパラメーターです。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>To parse the string representation of a hexadecimal number, call the <ph id="ph1">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Byte%40%29?displayProperty=nameWithType&gt;</ph> overload.</source>
          <target state="translated">16 進数の文字列表現を解析するには、呼び出し、<ph id="ph1">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Byte%40%29?displayProperty=nameWithType&gt;</ph>オーバー ロードします。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29&gt;</ph> method with a number of different string values.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29&gt;</ph>別の文字列値の数を持つメソッドです。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A string containing a number to convert.</source>
          <target state="translated">変換する数値を含む文字列。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The string is interpreted using the style specified by <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">文字列は、<bpt id="p1">&lt;c&gt;</bpt> スタイル <ept id="p1">&lt;/c&gt;</ept> で指定されたスタイルを使用して解釈されます。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A bitwise combination of enumeration values that indicates the style elements that can be present in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>.</source>
          <target state="translated">通常指定する値は、<ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>An object that supplies culture-specific formatting information about <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> に関するカルチャ固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the thread current culture is used.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept> が <ph id="ph1">&lt;see langword="null" /&gt;</ph> の場合は、スレッドの現在のカルチャが使用されます。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>When this method returns, contains the 8-bit unsigned integer value equivalent to the number contained in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> if the conversion succeeded, or zero if the conversion failed.</source>
          <target state="translated">変換が成功した場合、このメソッドが返されるときに、<bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> に格納された数値と等しい 8 ビット符号なし整数値を格納します。変換に失敗した場合は 0 を格納します。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The conversion fails if the <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>, is not of the correct format, or represents a number less than <ph id="ph3">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> パラメーターが <ph id="ph1">&lt;see langword="null" /&gt;</ph> または <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph> であるか、正しい形式ではない、または <ph id="ph3">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> より小さいか <ph id="ph4">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph> より大きい数値を表している場合、変換は失敗します。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>This parameter is passed uninitialized; any value originally supplied in <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> will be overwritten.</source>
          <target state="translated">このパラメーターは初期化されていない状態で渡されています。<bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> で最初に指定された任意の値が上書きされます。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Converts the string representation of a number in a specified style and culture-specific format to its <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> equivalent.</source>
          <target state="translated">指定したスタイルおよびカルチャ固有の書式の数値の文字列形式を、それと等価の <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> に変換します。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A return value indicates whether the conversion succeeded or failed.</source>
          <target state="translated">戻り値は変換が成功したか失敗したかを示します。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="s" /&gt;</ph> was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> が正常に変換された場合は <ph id="ph2">&lt;paramref name="s" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The <ph id="ph1">&lt;xref:System.Byte.TryParse%2A&gt;</ph> method is like the <ph id="ph2">&lt;xref:System.Byte.Parse%2A&gt;</ph> method, except the <ph id="ph3">&lt;xref:System.Byte.TryParse%2A&gt;</ph> method does not throw an exception if the conversion fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte.TryParse%2A&gt;</ph>などのメソッドは、<ph id="ph2">&lt;xref:System.Byte.Parse%2A&gt;</ph>メソッドを除く、<ph id="ph3">&lt;xref:System.Byte.TryParse%2A&gt;</ph>変換が失敗した場合、メソッドが例外をスローしません。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object supplied by the <ph id="ph3">`provider`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`s`</ph>で書式設定情報を使用してパラメーターを解析する<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>で指定されたオブジェクト、<ph id="ph3">`provider`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The style parameter defines the style elements (such as white space or the positive sign) that are allowed in the <ph id="ph1">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated">スタイル パラメーターを定義で使用できるスタイル要素 (空白や正符号) など、<ph id="ph1">`s`</ph>解析操作が成功するためのパラメーターです。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">ビット フラグの組み合わせを可能にする必要があります、<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>列挙します。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`s`</ph> parameter may include the following elements:</source>
          <target state="translated">値に応じて<ph id="ph1">`style`</ph>、<ph id="ph2">`s`</ph>パラメーターは、次の要素を含めることがあります。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws]</source>
          <target state="translated">[ws][$][サインイン] 桁 [.fractional_digits] [e [サインイン] 桁] [ws]</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Or, if the <ph id="ph1">`style`</ph> parameter includes <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:</source>
          <target state="translated">またはの場合、<ph id="ph1">`style`</ph>パラメーターが含まれています<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>[ws]hexdigits[ws]</source>
          <target state="translated">[ws] hexdigits [ws]</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Elements in square brackets ( [ and ] ) are optional.</source>
          <target state="translated">角かっこ ([および]) は省略可能内の要素。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The following table describes each element.</source>
          <target state="translated">次の表では、各要素について説明します。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Optional white space.</source>
          <target state="translated">省略可能なホワイト スペースです。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, or at the end of s if style includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">先頭に空白文字は使用できません<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>フラグ、またはスタイルが含まれる場合は、s の最後に、<ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">カルチャ固有の通貨記号。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method of the <ph id="ph4">`provider`</ph> parameter.</source>
          <target state="translated">文字列内での位置がによって定義された、<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>によって返されるオブジェクト、<ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>のメソッド、<ph id="ph4">`provider`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">通貨記号に表示される<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>An optional positive sign.</source>
          <target state="translated">省略可能な正の符号。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>(The parse operation fails if a negative sign is present in <ph id="ph1">`s`</ph>.) The sign can appear at the beginning of <ph id="ph2">`s`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, or at the end of <ph id="ph5">`s`</ph> if <ph id="ph6">`style`</ph> includes the <ph id="ph7">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">(マイナス記号にある場合、解析操作が失敗した<ph id="ph1">`s`</ph>)。先頭に表示できる符号<ph id="ph2">`s`</ph>場合<ph id="ph3">`style`</ph>が含まれています、<ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph>フラグ、またはの末尾<ph id="ph5">`s`</ph>場合<ph id="ph6">`style`</ph>が含まれています、<ph id="ph7">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">0 ~ 9 桁の数字のシーケンス。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">カルチャに固有の小数点記号です。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The decimal point symbol of the culture specified by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`s`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">指定されたカルチャの小数点記号<ph id="ph1">`provider`</ph>に表示できる<ph id="ph2">`s`</ph>場合<ph id="ph3">`style`</ph>が含まれています、<ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>One or more occurrences of the digit 0.</source>
          <target state="translated">数字の 0 の 1 つ以上の出現します。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Fractional digits can appear in <ph id="ph1">`s`</ph> only if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">小数部の桁が表示できる<ph id="ph1">`s`</ph>場合にのみ、<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source><bpt id="p1">*</bpt>e<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>e<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The e or E character, which indicates that the value is represented in exponential notation.</source>
          <target state="translated">E または E の文字は、値を指数表記で表されていることを示します。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The <ph id="ph1">`s`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`s`</ph>場合、パラメーターは指数表記の数値を表すことができる<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A sequence of hexadecimal digits from 0 through f, or 0 through F.</source>
          <target state="translated">一連の 0 f からまたは f 0 から 16 進数の数字</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A string with decimal digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> style) always parses successfully.</source>
          <target state="translated">10 進数字のみを含む文字列 (に対応する、<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph>スタイル) が正常に解析します。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Most of the remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be but are not required to be present in this input string.</source>
          <target state="translated">ほとんど残りの<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>メンバーを制御する可能性がありますが、この入力文字列内に存在する必要はない要素です。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">次の表に示す個別<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>メンバー内に存在可能な要素に影響を与える<ph id="ph2">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Non-composite NumberStyles values</source>
          <target state="translated">非複合 NumberStyles 値</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Elements permitted in s in addition to digits</source>
          <target state="translated">数字だけでなく s で許可されている要素</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Decimal digits only.</source>
          <target state="translated">10 進数字のみです。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The <bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>and <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> elements.</source>
          <target state="translated">および<bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>要素。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>However, <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> must consist of only one or more 0 digits or the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">ただし、 <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>のみ 1 つ以上の数字が 0 のメソッドを返しますで構成されている必要があります<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターは、指数表記も使用できます。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>If <ph id="ph1">`s`</ph> represents a number in exponential notation, it must represent an integer within the range of the <ph id="ph2">&lt;xref:System.Byte&gt;</ph> data type without a non-zero, fractional component.</source>
          <target state="translated">場合<ph id="ph1">`s`</ph>指数表記の数値を表すの範囲内の整数を表す必要があります、<ph id="ph2">&lt;xref:System.Byte&gt;</ph>ゼロ以外、小数部がないデータ型。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>の先頭にある要素<ph id="ph1">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>の末尾に要素<ph id="ph1">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A positive sign can appear before <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>.</source>
          <target state="translated">正の符号は、前に表示できる<bpt id="p1">*</bpt>桁<ept id="p1">*</ept>です。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A positive sign can appear after <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>.</source>
          <target state="translated">正の符号が後に表示される可能性が<bpt id="p1">*</bpt>桁<ept id="p1">*</ept>です。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Although this flag is supported, the method returns <ph id="ph1">`false`</ph> if parentheses are present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">このフラグはサポートされていますが、メソッドが返す<ph id="ph1">`false`</ph>かっこが存在する場合に<ph id="ph2">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Although the group separator symbol can appear in <ph id="ph1">`s`</ph>, it can be preceded by only one or more 0 digits.</source>
          <target state="translated">表示される桁区切り記号が<ph id="ph1">`s`</ph>、のみ 1 つ以上の数字が 0 の前にします。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The <bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt> <ph id="ph1">$</ph> <ept id="p1">*</ept>要素。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> flag is used, <ph id="ph2">`s`</ph> must be a hexadecimal value without a prefix.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>フラグを使用すると、<ph id="ph2">`s`</ph>プレフィックスのない 16 進値でなければなりません。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>For example, "F3" parses successfully, but "0xF3" does not.</source>
          <target state="translated">たとえば、"F3"を正常に解析していて、"0xF3"にはないです。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The only other flags that can be present in <ph id="ph1">`style`</ph> are <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">その他のフラグのみで使用可能な<ph id="ph1">`style`</ph>は<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>と<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>(The <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration has a composite number style, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType&gt;</ph>, that includes both white space flags.)</source>
          <target state="translated">(、<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>列挙体には、複合数値スタイル<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType&gt;</ph>、両方の空白文字のフラグが含まれている)。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation, such as a <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object or a <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object, whose <ph id="ph5">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph6">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>パラメーターは、<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>実装など、<ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph>オブジェクトまたは<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>オブジェクト、<ph id="ph5">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>メソッドを返します、<ph id="ph6">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object provides culture-specific information about the format of <ph id="ph2">`s`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>オブジェクトの書式に関するカルチャ固有の情報を提供<ph id="ph2">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Byte%40%29&gt;</ph> method with a number of different string values.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Byte%40%29&gt;</ph>別の文字列値の数を持つメソッドです。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a combination of <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 値と <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> 値の組み合わせではありません。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>