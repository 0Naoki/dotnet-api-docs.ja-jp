<Type Name="Byte" FullName="System.Byte">
  <TypeSignature Language="C#" Value="public struct Byte : IComparable, IComparable&lt;byte&gt;, IConvertible, IEquatable&lt;byte&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit unsigned int8 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int8&gt;, class System.IConvertible, class System.IEquatable`1&lt;unsigned int8&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Byte" />
  <TypeSignature Language="VB.NET" Value="Public Structure Byte&#xA;Implements IComparable, IComparable(Of Byte), IConvertible, IEquatable(Of Byte), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Byte : IComparable, IComparable&lt;System::Byte&gt;, IConvertible, IEquatable&lt;System::Byte&gt;, IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Byte&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Byte&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4f931-101">8 ビット符号なし整数を表します。</span><span class="sxs-lookup"><span data-stu-id="4f931-101">Represents an 8-bit unsigned integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-102"><xref:System.Byte> 符号なし整数の範囲は 0 から値を表す不変の値の型は、(で表される、<xref:System.Byte.MinValue?displayProperty=nameWithType>定数) 255 (で表される、<xref:System.Byte.MaxValue?displayProperty=nameWithType>定数)。</span><span class="sxs-lookup"><span data-stu-id="4f931-102"><xref:System.Byte> is an immutable value type that represents unsigned integers with values that range from 0 (which is represented by the <xref:System.Byte.MinValue?displayProperty=nameWithType> constant) to 255 (which is represented by the <xref:System.Byte.MaxValue?displayProperty=nameWithType> constant).</span></span> <span data-ttu-id="4f931-103">.NET Framework は、8 ビット符号付き整数値型でも含まれています。 <xref:System.SByte>、-128 から 127 までの値を表します。</span><span class="sxs-lookup"><span data-stu-id="4f931-103">The .NET Framework also includes a signed 8-bit integer value type, <xref:System.SByte>, which represents values that range from -128 to 127.</span></span>  
  
## <a name="instantiating-a-byte-value"></a><span data-ttu-id="4f931-104">バイト値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="4f931-104">Instantiating a Byte Value</span></span>  
 <span data-ttu-id="4f931-105">インスタンス化することができます、<xref:System.Byte>方法はいくつかの値。</span><span class="sxs-lookup"><span data-stu-id="4f931-105">You can instantiate a <xref:System.Byte> value in several ways:</span></span>  
  
-   <span data-ttu-id="4f931-106">宣言することができます、<xref:System.Byte>変数の範囲内にあるリテラルの整数値を割り当てると、<xref:System.Byte>データ型。</span><span class="sxs-lookup"><span data-stu-id="4f931-106">You can declare a <xref:System.Byte> variable and assign it a literal integer value that is within the range of the <xref:System.Byte> data type.</span></span> <span data-ttu-id="4f931-107">次の例では、2 つ宣言<xref:System.Byte>変数し、それらにこの方法で値を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="4f931-107">The following example declares two <xref:System.Byte> variables and assigns them values in this way.</span></span>  
  
     [!code-csharp[System.Byte.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.instantiation/cs/byteinstantiation1.cs#1)]
     [!code-vb[System.Byte.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.instantiation/vb/byteinstantiate1.vb#1)]  
  
-   <span data-ttu-id="4f931-108">バイト以外の数値は、バイトに割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="4f931-108">You can assign a non-byte numeric value to a byte.</span></span> <span data-ttu-id="4f931-109">これは、縮小変換は c# のキャスト演算子が、Visual Basic での変換メソッド場合`Option Strict`にします。</span><span class="sxs-lookup"><span data-stu-id="4f931-109">This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if `Option Strict` is on.</span></span> <span data-ttu-id="4f931-110">バイト以外の値がある場合、 <xref:System.Single>、 <xref:System.Double>、または<xref:System.Decimal>を小数部が、その小数部の処理を含む値は、変換を実行して、コンパイラによって異なります。</span><span class="sxs-lookup"><span data-stu-id="4f931-110">If the non-byte value is a <xref:System.Single>, <xref:System.Double>, or <xref:System.Decimal> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion.</span></span> <span data-ttu-id="4f931-111">次の例では、いくつかの数値を<xref:System.Byte>変数。</span><span class="sxs-lookup"><span data-stu-id="4f931-111">The following example assigns several numeric values to <xref:System.Byte> variables.</span></span>  
  
     [!code-csharp[System.Byte.Instantiation#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.instantiation/cs/byteinstantiation1.cs#2)]
     [!code-vb[System.Byte.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.instantiation/vb/byteinstantiate1.vb#2)]  
  
-   <span data-ttu-id="4f931-112">メソッドを呼び出すことができます、<xref:System.Convert>すべて変換クラスにする型がサポートされている、<xref:System.Byte>値。</span><span class="sxs-lookup"><span data-stu-id="4f931-112">You can call a method of the <xref:System.Convert> class to convert any supported type to a <xref:System.Byte> value.</span></span> <span data-ttu-id="4f931-113">これは、考えられるため<xref:System.Byte>をサポートしている、<xref:System.IConvertible>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="4f931-113">This is possible because <xref:System.Byte> supports the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4f931-114">次の例は、配列の変換を示しています。<xref:System.Int32>値<xref:System.Byte>値。</span><span class="sxs-lookup"><span data-stu-id="4f931-114">The following example illustrates the conversion of an array of <xref:System.Int32> values to <xref:System.Byte> values.</span></span>  
  
     [!code-csharp[System.Convert.ToByte#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#4)]
     [!code-vb[System.Convert.ToByte#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#4)]  
  
-   <span data-ttu-id="4f931-115">呼び出すことができます、<xref:System.Byte.Parse%2A>または<xref:System.Byte.TryParse%2A>の文字列形式に変換するメソッド、<xref:System.Byte>値を<xref:System.Byte>です。</span><span class="sxs-lookup"><span data-stu-id="4f931-115">You can call the <xref:System.Byte.Parse%2A> or <xref:System.Byte.TryParse%2A> method to convert the string representation of a <xref:System.Byte> value to a <xref:System.Byte>.</span></span> <span data-ttu-id="4f931-116">文字列は、10 進または 16 進数の数字を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="4f931-116">The string can contain either decimal or hexadecimal digits.</span></span> <span data-ttu-id="4f931-117">次の例では、10 進数と 16 進数文字列の両方を使用して、解析操作を示しています。</span><span class="sxs-lookup"><span data-stu-id="4f931-117">The following example illustrates the parse operation by using both a decimal and a hexadecimal string.</span></span>  
  
     [!code-csharp[System.Byte.Instantiation#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.instantiation/cs/byteinstantiation1.cs#3)]
     [!code-vb[System.Byte.Instantiation#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.instantiation/vb/byteinstantiate1.vb#3)]  
  
## <a name="performing-operations-on-byte-values"></a><span data-ttu-id="4f931-118">バイトの値に対して操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="4f931-118">Performing Operations on Byte Values</span></span>  
 <span data-ttu-id="4f931-119"><xref:System.Byte>型は、加算、減算、除算、乗算、減算、否定、単項否定演算子などの標準的な数学的演算をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="4f931-119">The <xref:System.Byte> type supports standard mathematical operations such as addition, subtraction, division, multiplication, subtraction, negation, and unary negation.</span></span> <span data-ttu-id="4f931-120">などの他の整数型、<xref:System.Byte>型もサポートしている、ビットごと`AND`、 `OR`、 `XOR`、shift キー、および右シフト演算子のままです。</span><span class="sxs-lookup"><span data-stu-id="4f931-120">Like the other integral types, the <xref:System.Byte> type also supports the bitwise `AND`, `OR`, `XOR`, left shift, and right shift operators.</span></span>  
  
 <span data-ttu-id="4f931-121">標準の数値演算子を使用するには 2 つを比較する<xref:System.Byte>値、またはを呼び出すことができます、<xref:System.Byte.CompareTo%2A>または<xref:System.Byte.Equals%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-121">You can use the standard numeric operators to compare two <xref:System.Byte> values, or you can call the <xref:System.Byte.CompareTo%2A> or <xref:System.Byte.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="4f931-122">メンバーを呼び出すこともできます、<xref:System.Math>をさまざまな数値の絶対値の取得、商と整数除算の剰余を計算する、2 つの整数の最大値または最小値を決定する、数値の符号を取得および数値の丸め処理を行うなど、数値の操作を実行するクラス。</span><span class="sxs-lookup"><span data-stu-id="4f931-122">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.</span></span>  
  
## <a name="representing-a-byte-as-a-string"></a><span data-ttu-id="4f931-123">バイトを文字列として表す</span><span class="sxs-lookup"><span data-stu-id="4f931-123">Representing a Byte as a String</span></span>  
 <span data-ttu-id="4f931-124"><xref:System.Byte>標準およびカスタム数値書式指定文字列の型が完全にサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="4f931-124">The <xref:System.Byte> type provides full support for standard and custom numeric format strings.</span></span> <span data-ttu-id="4f931-125">(詳細については、次を参照してください[型の書式設定](~/docs/standard/base-types/formatting-types.md)、[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)、および[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)。)。ただし、ほとんどの場合、バイト値として表される 1 桁の 3 桁の値の追加書式設定なし、または 2 桁の 16 進値として。</span><span class="sxs-lookup"><span data-stu-id="4f931-125">(For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md), [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).) However, most commonly, byte values are represented as one-digit to three-digit values without any additional formatting, or as two-digit hexadecimal values.</span></span>  
  
 <span data-ttu-id="4f931-126">書式設定、<xref:System.Byte>値先行ゼロなしで整数を文字列として呼び出すことができます、パラメーターなし<xref:System.Byte.ToString>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-126">To format a <xref:System.Byte> value as an integral string with no leading zeros, you can call the parameterless <xref:System.Byte.ToString> method.</span></span> <span data-ttu-id="4f931-127">"D"書式指定子を使用すると、指定された数の文字列形式には先行ゼロを含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="4f931-127">By using the "D" format specifier, you can also include a specified number of leading zeros in the string representation.</span></span> <span data-ttu-id="4f931-128">"X"書式指定子を使用して表すことができます、 <xref:System.Byte> 16 進数文字列値です。</span><span class="sxs-lookup"><span data-stu-id="4f931-128">By using the "X" format specifier, you can represent a <xref:System.Byte> value as a hexadecimal string.</span></span> <span data-ttu-id="4f931-129">次の例の配列内の要素を書式設定<xref:System.Byte>これら 3 つの方法で値。</span><span class="sxs-lookup"><span data-stu-id="4f931-129">The following example formats the elements in an array of <xref:System.Byte> values in these three ways.</span></span>  
  
 [!code-csharp[System.Byte.Formatting#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.formatting/cs/formatting1.cs#1)]
 [!code-vb[System.Byte.Formatting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.formatting/vb/formatting1.vb#1)]  
  
 <span data-ttu-id="4f931-130">フォーマットすることも、<xref:System.Byte>バイナリ、8 進数、呼び出すことによって、10 進数または 16 進数の文字列値、<xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29>メソッドおよびメソッドの 2 番目のパラメーターとして情報を指定します。</span><span class="sxs-lookup"><span data-stu-id="4f931-130">You can also format a <xref:System.Byte> value as a binary, octal, decimal, or hexadecimal string by calling the <xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29> method and supplying the base as the method's second parameter.</span></span> <span data-ttu-id="4f931-131">次の例では、このバイナリは、8 進数、表示するメソッドとバイト値の配列の 16 進数表記を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4f931-131">The following example calls this method to display the binary, octal, and hexadecimal representations of an array of byte values.</span></span>  
  
 [!code-csharp[System.Byte.Formatting#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.formatting/cs/formatting1.cs#2)]
 [!code-vb[System.Byte.Formatting#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.formatting/vb/formatting1.vb#2)]  
  
## <a name="working-with-non-decimal-byte-values"></a><span data-ttu-id="4f931-132">非 10 進数のバイト値の扱い</span><span class="sxs-lookup"><span data-stu-id="4f931-132">Working with Non-Decimal Byte Values</span></span>  
 <span data-ttu-id="4f931-133">に加えて、10 進数値として個々 のバイトを使用するには、バイト値のビットごとの演算を実行またはバイト配列またはバイト値のバイナリまたは 16 進表現でしたいと可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4f931-133">In addition to working with individual bytes as decimal values, you may want to perform bitwise operations with byte values, or work with byte arrays or with the binary or hexadecimal representations of byte values.</span></span> <span data-ttu-id="4f931-134">などのオーバー ロードが、<xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType>メソッドはバイト配列への各プリミティブ データ型を変換できます、<xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType>メソッドに変換、<xref:System.Numerics.BigInteger>をバイト配列値です。</span><span class="sxs-lookup"><span data-stu-id="4f931-134">For example, overloads of the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method can convert each of the primitive data types to a byte array, and the <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> method converts a <xref:System.Numerics.BigInteger> value to a byte array.</span></span>  
  
 <span data-ttu-id="4f931-135"><xref:System.Byte> 値は、符号ビットせず、8 ビットで、のみ、その規模で表現されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-135"><xref:System.Byte> values are represented in 8 bits by their magnitude only, without a sign bit.</span></span> <span data-ttu-id="4f931-136">これでビットごとの演算を実行するときに注意する重要<xref:System.Byte>値または個々 のビットを操作する際にします。</span><span class="sxs-lookup"><span data-stu-id="4f931-136">This is important to keep in mind when you perform bitwise operations on <xref:System.Byte> values or when you work with individual bits.</span></span> <span data-ttu-id="4f931-137">数値型、ブール値、または 2 つの非 10 進値の比較演算を実行するために両方の値は同じ形式を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4f931-137">In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.</span></span>  
  
 <span data-ttu-id="4f931-138">2 つの操作を実行するときに<xref:System.Byte>値、値を共有、同じ形式をので、結果が正確です。</span><span class="sxs-lookup"><span data-stu-id="4f931-138">When an operation is performed on two <xref:System.Byte> values, the values share the same representation, so the result is accurate.</span></span> <span data-ttu-id="4f931-139">最下位ビットをマスクする次の例に示す、<xref:System.Byte>でもあることを確認する値。</span><span class="sxs-lookup"><span data-stu-id="4f931-139">This is illustrated in the following example, which masks the lowest-order bit of a <xref:System.Byte> value to ensure that it is even.</span></span>  
  
 [!code-csharp[System.Byte.Bitwise#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.bitwise/cs/bitwise1.cs#1)]
 [!code-vb[System.Byte.Bitwise#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.bitwise/vb/bitwise1.vb#1)]  
  
 <span data-ttu-id="4f931-140">その一方で、符号付きと符号なしの両方のビットを操作するときにビットごとの演算は複雑にする、<xref:System.SByte>値が正の値、および 2 の補数表現負の値の符号および絶対値による表現を使用します。</span><span class="sxs-lookup"><span data-stu-id="4f931-140">On the other hand, when you work with both unsigned and signed bits, bitwise operations are complicated by the fact that the <xref:System.SByte> values use sign-and-magnitude representation for positive values, and two's complement representation for negative values.</span></span> <span data-ttu-id="4f931-141">意味のあるビットごとの演算を実行するために、値は、2 つの同等の表現に変換する必要があります、符号ビットに関する情報を保持する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4f931-141">In order to perform a meaningful bitwise operation, the values must be converted to two equivalent representations, and information about the sign bit must be preserved.</span></span> <span data-ttu-id="4f931-142">次の例は、2、8 ビット符号付きと符号なしの値の配列の 4 ビットをマスクするされます。</span><span class="sxs-lookup"><span data-stu-id="4f931-142">The following example does this to mask out bits 2 and 4 of an array of 8-bit signed and unsigned values.</span></span>  
  
 [!code-csharp[System.Byte.Bitwise#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.bitwise/cs/bitwise2.cs#2)]
 [!code-vb[System.Byte.Bitwise#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.bitwise/vb/bitwise2.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="4f931-143">この種類のすべてのメンバーでは、スレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="4f931-143">All members of this type are thread safe.</span></span> <span data-ttu-id="4f931-144">インスタンスの状態を変更する表示されるメンバーは、新しい値で初期化された新しいインスタンスを実際に返します。</span><span class="sxs-lookup"><span data-stu-id="4f931-144">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="4f931-145">として、他の種類と読み取りと書き込みをこの型のインスタンスを含む共有変数を保護する必要があるスレッド セーフを確保するロックによってです。</span><span class="sxs-lookup"><span data-stu-id="4f931-145">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.SByte" />
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IFormattable" />
    <altmember cref="T:System.IConvertible" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4f931-146">指定したオブジェクトまたは <see cref="T:System.Byte" /> とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="4f931-146">Compares this instance to a specified object or <see cref="T:System.Byte" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.CompareTo(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Byte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Byte value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4f931-147">比較対象の 8 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="4f931-147">An 8-bit unsigned integer to compare.</span></span></param>
        <summary><span data-ttu-id="4f931-148">指定した 8 ビット符号なし整数とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="4f931-148">Compares this instance to a specified 8-bit unsigned integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="4f931-149">このインスタンスと <paramref name="value" /> の相対順序を示す符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="4f931-149">A signed integer that indicates the relative order of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="4f931-150"><list type="table"><listheader><term> 戻り値</span><span class="sxs-lookup"><span data-stu-id="4f931-150"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="4f931-151"></term><description>説明</span><span class="sxs-lookup"><span data-stu-id="4f931-151"></term><description> Description</span></span>  
  
 <span data-ttu-id="4f931-152"></description></listheader><item><term> 0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="4f931-152"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="4f931-153"></term><description> このインスタンスは、<paramref name="value" /> よりも小さいです。</span><span class="sxs-lookup"><span data-stu-id="4f931-153"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="4f931-154"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="4f931-154"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="4f931-155"></term><description> このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="4f931-155"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="4f931-156"></description></item><item><term> 0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="4f931-156"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="4f931-157"></term><description> このインスタンスは <paramref name="value" /> よりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="4f931-157"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-158">このメソッドを実装する、<xref:System.IComparable%601?displayProperty=nameWithType>インターフェイスし、実行よりもわずかに向上、<xref:System.Byte.CompareTo%28System.Object%29?displayProperty=nameWithType>メソッドに変換があるないため、`value`オブジェクトへのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="4f931-158">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Byte.CompareTo%28System.Object%29?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="4f931-159">プログラミング言語に応じてコードに考えられる場合があります、<xref:System.Byte.CompareTo%2A>メソッドのパラメーターの型のビット数が少ないがここではインスタンスの型よりもします。</span><span class="sxs-lookup"><span data-stu-id="4f931-159">Depending on your programming language, it might be possible to code a <xref:System.Byte.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="4f931-160">これには一部のプログラミング言語は、ビット数のインスタンスと型としてパラメーターを表す暗黙の拡大変換を実行するため。</span><span class="sxs-lookup"><span data-stu-id="4f931-160">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="4f931-161">たとえば、インスタンスの型が<xref:System.Int32>パラメーターの型と<xref:System.Byte>です。</span><span class="sxs-lookup"><span data-stu-id="4f931-161">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="4f931-162">Microsoft c# コンパイラは、パラメーターの値を表す命令を生成、<xref:System.Int32>が生成されます、<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>の値を比較するメソッド、<xref:System.Int32>インスタンスおよび<xref:System.Int32>パラメーター形式です。</span><span class="sxs-lookup"><span data-stu-id="4f931-162">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32>, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="4f931-163">コンパイラが数値型に暗黙の拡大変換を実行するかどうかを決定する、プログラミング言語のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4f931-163">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f931-164">次のコード例に示しますジェネリックと非ジェネリック バージョンの`CompareTo`いくつかの値と参照型のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-164">The following code example demonstrates generic and non-generic versions of the `CompareTo` method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Byte.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4f931-165">比較対象のオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4f931-165">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="4f931-166">指定したオブジェクトとこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="4f931-166">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="4f931-167">このインスタンスと <paramref name="value" /> の相対順序を示す符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="4f931-167">A signed integer that indicates the relative order of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="4f931-168"><list type="table"><listheader><term> 戻り値</span><span class="sxs-lookup"><span data-stu-id="4f931-168"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="4f931-169"></term><description>説明</span><span class="sxs-lookup"><span data-stu-id="4f931-169"></term><description> Description</span></span>  
  
 <span data-ttu-id="4f931-170"></description></listheader><item><term> 0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="4f931-170"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="4f931-171"></term><description> このインスタンスは、<paramref name="value" /> よりも小さいです。</span><span class="sxs-lookup"><span data-stu-id="4f931-171"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="4f931-172"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="4f931-172"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="4f931-173"></term><description> このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="4f931-173"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="4f931-174"></description></item><item><term> 0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="4f931-174"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="4f931-175"></term><description> このインスタンスは <paramref name="value" /> よりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="4f931-175"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="4f931-176">- または -</span><span class="sxs-lookup"><span data-stu-id="4f931-176">-or-</span></span>  
  
 <span data-ttu-id="4f931-177"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="4f931-177"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-178">`value` 必要があります`null`またはのインスタンス<xref:System.Byte>です。 それ以外の場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="4f931-178">`value` must be `null` or an instance of <xref:System.Byte>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="4f931-179">任意のインスタンス<xref:System.Byte>、その値に関係なくが大きいと見なされますより`null`です。</span><span class="sxs-lookup"><span data-stu-id="4f931-179">Any instance of <xref:System.Byte>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="4f931-180">このメソッドがサポートするために実装されている、<xref:System.IComparable>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="4f931-180">This method is implemented to support the <xref:System.IComparable> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f931-181">次のコード例を示しています、<xref:System.Byte.CompareTo%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-181">The following code example demonstrates the <xref:System.Byte.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[System.Byte Examples#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte Examples/CPP/systembyte.cpp#3)]
 [!code-csharp[System.Byte Examples#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte Examples/CS/systembyte.cs#3)]
 [!code-vb[System.Byte Examples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte Examples/VB/systembyte.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f931-182"><paramref name="value" /> が <see cref="T:System.Byte" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="4f931-182"><paramref name="value" /> is not a <see cref="T:System.Byte" />.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Byte.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4f931-183"><see cref="T:System.Byte" /> の 2 つのインスタンスが同じ値を表しているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="4f931-183">Returns a value indicating whether two instances of <see cref="T:System.Byte" /> represent the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (byte obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(unsigned int8 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Equals(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Byte obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="4f931-184">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-184">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="4f931-185">このインスタンスと指定した <see cref="T:System.Byte" /> オブジェクトが同じ値を表しているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="4f931-185">Returns a value indicating whether this instance and a specified <see cref="T:System.Byte" /> object represent the same value.</span></span></summary>
        <returns>
          <span data-ttu-id="4f931-186"><paramref name="obj" /> がこのインスタンスと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4f931-186"><see langword="true" /> if <paramref name="obj" /> is equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-187">このメソッドを実装する、<xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイス、および実行よりもわずかに向上<xref:System.Byte.Equals%28System.Object%29>変換があるないため、`obj`オブジェクトへのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="4f931-187">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Byte.Equals%28System.Object%29> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f931-188">次のコード例を決定するかどうか、最初<xref:System.Byte>値は、2 番目に<xref:System.Byte>値、かどうかおよび最初<xref:System.Byte>値は、2 番目のボックス化されたバージョンに<xref:System.Byte>値。</span><span class="sxs-lookup"><span data-stu-id="4f931-188">The following code example determines whether the first <xref:System.Byte> value is equal to the second <xref:System.Byte> value, and whether the first <xref:System.Byte> value is equal to the boxed version of the second <xref:System.Byte> value.</span></span>  
  
 [!code-cpp[system.byte.equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.byte.equals/cpp/eq.cpp#1)]
 [!code-csharp[system.byte.equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.equals/cs/eq.cs#1)]
 [!code-vb[system.byte.equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.equals/vb/eq.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Byte.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="4f931-189">対象のインスタンスと比較する対象のオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4f931-189">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="4f931-190">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="4f931-190">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="4f931-191"><paramref name="obj" /> が <see cref="T:System.Byte" /> のインスタンスで、このインスタンスの値に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4f931-191"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Byte" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4f931-192">次のコード例を決定するかどうか、最初<xref:System.Byte>値は、2 番目に<xref:System.Byte>値、かどうかおよび最初<xref:System.Byte>値は、2 番目のボックス化されたバージョンに<xref:System.Byte>値。</span><span class="sxs-lookup"><span data-stu-id="4f931-192">The following code example determines whether the first <xref:System.Byte> value is equal to the second <xref:System.Byte> value, and whether the first <xref:System.Byte> value is equal to the boxed version of the second <xref:System.Byte> value.</span></span>  
  
 [!code-cpp[system.byte.equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.byte.equals/cpp/eq.cpp#1)]
 [!code-csharp[system.byte.equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.equals/cs/eq.cs#1)]
 [!code-vb[system.byte.equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.equals/vb/eq.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Byte.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f931-193">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="4f931-193">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="4f931-194">現在の <see cref="T:System.Byte" /> のハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="4f931-194">A hash code for the current <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f931-195"><see cref="T:System.TypeCode" /> 値型の <see cref="T:System.Byte" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="4f931-195">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Byte" />.</span></span></summary>
        <returns><span data-ttu-id="4f931-196">列挙型定数 <see cref="F:System.TypeCode.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="4f931-196">The enumerated constant, <see cref="F:System.TypeCode.Byte" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const byte MaxValue = 255;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int8 MaxValue = unsigned int8(255)" />
      <MemberSignature Language="DocId" Value="F:System.Byte.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Byte  = 255" />
      <MemberSignature Language="C++ CLI" Value="public: System::Byte MaxValue = 255;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <MemberValue>255</MemberValue>
      <Docs>
        <summary><span data-ttu-id="4f931-197"><see cref="T:System.Byte" /> の最大有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="4f931-197">Represents the largest possible value of a <see cref="T:System.Byte" />.</span></span> <span data-ttu-id="4f931-198">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="4f931-198">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-199">この定数の値は、255 (16 進数 0 xff まで) です。</span><span class="sxs-lookup"><span data-stu-id="4f931-199">The value of this constant is 255 (hexadecimal 0xFF).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f931-200">次の例で使用する方法、<xref:System.Byte.MaxValue>可能なバイト値の範囲外にある値を変数の入力を画面にフィールドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-200">The following example demonstrates how to use the <xref:System.Byte.MaxValue> field to screen variable inputs for values that are outside the range of possible byte values.</span></span>  
  
 [!code-cpp[System.Byte Examples#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte Examples/CPP/systembyte.cpp#1)]
 [!code-csharp[System.Byte Examples#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte Examples/CS/systembyte.cs#1)]
 [!code-vb[System.Byte Examples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte Examples/VB/systembyte.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Byte.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const byte MinValue = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int8 MinValue = unsigned int8(0)" />
      <MemberSignature Language="DocId" Value="F:System.Byte.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Byte  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: System::Byte MinValue = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="4f931-201"><see cref="T:System.Byte" /> の最小有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="4f931-201">Represents the smallest possible value of a <see cref="T:System.Byte" />.</span></span> <span data-ttu-id="4f931-202">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="4f931-202">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-203">この定数の値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="4f931-203">The value of this constant is 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f931-204">次の例で使用する方法、<xref:System.Byte.MinValue>可能なバイト値の範囲外にある値を変数の入力を画面にフィールドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-204">The following example demonstrates how to use the <xref:System.Byte.MinValue> field to screen variable inputs for values that are outside the range of possible byte values.</span></span>  
  
 [!code-cpp[System.Byte Examples#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte Examples/CPP/systembyte.cpp#1)]
 [!code-csharp[System.Byte Examples#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte Examples/CS/systembyte.cs#1)]
 [!code-vb[System.Byte Examples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte Examples/VB/systembyte.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Byte.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4f931-205">数値の文字列形式を、それと等価の <see cref="T:System.Byte" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="4f931-205">Converts the string representation of a number to its <see cref="T:System.Byte" /> equivalent.</span></span></summary>
        <altmember cref="Overload:System.Byte.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static byte Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4f931-206">変換する数値を含んだ文字列。</span><span class="sxs-lookup"><span data-stu-id="4f931-206">A string that contains a number to convert.</span></span> <span data-ttu-id="4f931-207">文字列は、<see cref="F:System.Globalization.NumberStyles.Integer" /> スタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-207">The string is interpreted using the <see cref="F:System.Globalization.NumberStyles.Integer" /> style.</span></span></param>
        <summary><span data-ttu-id="4f931-208">数値の文字列形式を、それと等価の <see cref="T:System.Byte" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="4f931-208">Converts the string representation of a number to its <see cref="T:System.Byte" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="4f931-209"><paramref name="s" /> に格納されている数値と等価のバイト値。</span><span class="sxs-lookup"><span data-stu-id="4f931-209">A byte value that is equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-210">`s`パラメーターには、フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="4f931-210">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="4f931-211">[ws][サインイン] 桁 [ws]</span><span class="sxs-lookup"><span data-stu-id="4f931-211">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="4f931-212">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="4f931-212">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="4f931-213">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="4f931-213">The following table describes each element.</span></span>  
  
|<span data-ttu-id="4f931-214">要素</span><span class="sxs-lookup"><span data-stu-id="4f931-214">Element</span></span>|<span data-ttu-id="4f931-215">説明</span><span class="sxs-lookup"><span data-stu-id="4f931-215">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="4f931-216">*ws*</span><span class="sxs-lookup"><span data-stu-id="4f931-216">*ws*</span></span>|<span data-ttu-id="4f931-217">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="4f931-217">Optional white space.</span></span>|  
|<span data-ttu-id="4f931-218">*sign*</span><span class="sxs-lookup"><span data-stu-id="4f931-218">*sign*</span></span>|<span data-ttu-id="4f931-219">オプションで正または負符号。</span><span class="sxs-lookup"><span data-stu-id="4f931-219">An optional positive or negative sign.</span></span>|  
|<span data-ttu-id="4f931-220">*digits*</span><span class="sxs-lookup"><span data-stu-id="4f931-220">*digits*</span></span>|<span data-ttu-id="4f931-221">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="4f931-221">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="4f931-222">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="4f931-222">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="4f931-223">バイト値の 10 進数字以外には、先頭と末尾のスペースが先頭の符号と共にのみを使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-223">In addition to the byte value's decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="4f931-224">(符号が場合、正の符号をする必要がありますまたはメソッドをスロー、 <xref:System.OverflowException>)。使用できるスタイル要素を明示的に定義する`s`、いずれかを使用して、<xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>または<xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-224">(If the sign is present, it must be a positive sign or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements that can be present in `s`, use either the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4f931-225">`s`で書式設定情報を使用してパラメーターを解析、<xref:System.Globalization.NumberFormatInfo>現在のシステムのカルチャに初期化されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-225">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="4f931-226">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4f931-226">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="4f931-227">いくつか他のカルチャの書式情報を使用して文字列を解析するを使用して、<xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-227">To parse a string using the formatting information of some other culture, use the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f931-228">次の例では、文字列値を使用して、バイト値に変換する方法、<xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-228">The following example demonstrates how to convert a string value into a byte value using the <xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4f931-229">結果のバイト値は、コンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-229">The resulting byte value is then displayed to the console.</span></span>  
  
 [!code-cpp[System.Byte.Parse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.Parse/cpp/parse.cpp#1)]
 [!code-csharp[System.Byte.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.Parse/CS/parse.cs#1)]
 [!code-vb[System.Byte.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.Parse/VB/parse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f931-230"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="4f931-230"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4f931-231"><paramref name="s" /> の書式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="4f931-231"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4f931-232"><paramref name="s" /> が <see cref="F:System.Byte.MinValue" /> 未満の数値か、<see cref="F:System.Byte.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="4f931-232"><paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Byte.ToString" />
        <altmember cref="F:System.Byte.MaxValue" />
        <altmember cref="F:System.Byte.MinValue" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static byte Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4f931-233">変換する数値を含んだ文字列。</span><span class="sxs-lookup"><span data-stu-id="4f931-233">A string that contains a number to convert.</span></span> <span data-ttu-id="4f931-234">文字列は、<c> スタイル </c> で指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-234">The string is interpreted using the style specified by <c>style</c>.</span></span></param>
        <param name="style"><span data-ttu-id="4f931-235"><c>s</c> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="4f931-235">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="4f931-236">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="4f931-236">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="4f931-237">指定のスタイルで表現された数値の文字列形式を、それと等価な <see cref="T:System.Byte" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="4f931-237">Converts the string representation of a number in a specified style to its <see cref="T:System.Byte" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="4f931-238"><paramref name="s" /> に格納されている数値と等価のバイト値。</span><span class="sxs-lookup"><span data-stu-id="4f931-238">A byte value that is equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-239">`style`パラメーター スタイル要素を定義します (空白や正符号) では許可されて、`s`解析操作が成功するためのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="4f931-239">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="4f931-240">ビット フラグの組み合わせを可能にする必要があります、<xref:System.Globalization.NumberStyles>列挙します。</span><span class="sxs-lookup"><span data-stu-id="4f931-240">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="4f931-241">値に応じて`style`、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="4f931-241">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="4f931-242">[ws][$][サインイン] 桁 [.fractional_digits] [e [サインイン] 桁] [ws]</span><span class="sxs-lookup"><span data-stu-id="4f931-242">[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="4f931-243">または、`style`が含まれています<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="4f931-243">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="4f931-244">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="4f931-244">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="4f931-245">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="4f931-245">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="4f931-246">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="4f931-246">The following table describes each element.</span></span>  
  
|<span data-ttu-id="4f931-247">要素</span><span class="sxs-lookup"><span data-stu-id="4f931-247">Element</span></span>|<span data-ttu-id="4f931-248">説明</span><span class="sxs-lookup"><span data-stu-id="4f931-248">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="4f931-249">*ws*</span><span class="sxs-lookup"><span data-stu-id="4f931-249">*ws*</span></span>|<span data-ttu-id="4f931-250">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="4f931-250">Optional white space.</span></span> <span data-ttu-id="4f931-251">先頭に空白文字は使用できません`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>フラグ、またはスタイルが含まれる場合は、s の最後に、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="4f931-251">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of s if style includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="4f931-252">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="4f931-252">A culture-specific currency symbol.</span></span> <span data-ttu-id="4f931-253">文字列内での位置がによって定義された、<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>現在のカルチャのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="4f931-253">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the current culture.</span></span> <span data-ttu-id="4f931-254">現在のカルチャの通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="4f931-254">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4f931-255">*sign*</span><span class="sxs-lookup"><span data-stu-id="4f931-255">*sign*</span></span>|<span data-ttu-id="4f931-256">省略可能な正の符号。</span><span class="sxs-lookup"><span data-stu-id="4f931-256">An optional positive sign.</span></span> <span data-ttu-id="4f931-257">(メソッドをスロー、<xref:System.OverflowException>に負の符号がである場合`s`)。先頭に表示できる符号`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>フラグ、またはの末尾`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="4f931-257">(The method throws an <xref:System.OverflowException> if a negative sign is present in `s`.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4f931-258">*digits*</span><span class="sxs-lookup"><span data-stu-id="4f931-258">*digits*</span></span>|<span data-ttu-id="4f931-259">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="4f931-259">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="4f931-260">*.*</span><span class="sxs-lookup"><span data-stu-id="4f931-260">*.*</span></span>|<span data-ttu-id="4f931-261">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="4f931-261">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="4f931-262">現在のカルチャの小数点記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="4f931-262">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4f931-263">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="4f931-263">*fractional_digits*</span></span>|<span data-ttu-id="4f931-264">数字の 0 の 1 つ以上の出現します。</span><span class="sxs-lookup"><span data-stu-id="4f931-264">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="4f931-265">小数部の桁が表示できる`s`場合にのみ、`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="4f931-265">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4f931-266">*e*</span><span class="sxs-lookup"><span data-stu-id="4f931-266">*e*</span></span>|<span data-ttu-id="4f931-267">E または E の文字は、値を指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="4f931-267">The e or E character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="4f931-268">`s`場合、パラメーターは指数表記の数値を表すことができる`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="4f931-268">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4f931-269">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="4f931-269">*hexdigits*</span></span>|<span data-ttu-id="4f931-270">一連の 0 f からまたは f 0 から 16 進数の数字</span><span class="sxs-lookup"><span data-stu-id="4f931-270">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="4f931-271">10 進数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイル) が正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="4f931-271">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="4f931-272">ほとんど残りの<xref:System.Globalization.NumberStyles>メンバーを制御する可能性がありますが、この入力文字列内に存在する必要はない要素です。</span><span class="sxs-lookup"><span data-stu-id="4f931-272">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="4f931-273">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在可能な要素に影響を与える`s`です。</span><span class="sxs-lookup"><span data-stu-id="4f931-273">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="4f931-274">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="4f931-274">Non-composite NumberStyles values</span></span>|<span data-ttu-id="4f931-275">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="4f931-275">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="4f931-276">10 進数字のみです。</span><span class="sxs-lookup"><span data-stu-id="4f931-276">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="4f931-277">*.*</span><span class="sxs-lookup"><span data-stu-id="4f931-277">The *.*</span></span> <span data-ttu-id="4f931-278">および*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="4f931-278">and *fractional_digits* elements.</span></span> <span data-ttu-id="4f931-279">ただし、 *fractional_digits*のみ 1 つ以上の数字が 0 ので構成されている必要がありますまたは<xref:System.OverflowException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="4f931-279">However, *fractional_digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="4f931-280">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-280">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="4f931-281">*Ws*の先頭にある要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="4f931-281">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="4f931-282">*Ws*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="4f931-282">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="4f931-283">正の符号は、前に表示できる*桁*です。</span><span class="sxs-lookup"><span data-stu-id="4f931-283">A positive sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="4f931-284">正の符号が後に表示される可能性が*桁*です。</span><span class="sxs-lookup"><span data-stu-id="4f931-284">A positive sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="4f931-285">このフラグはサポートされていますでかっこを使用する`s`結果、<xref:System.OverflowException>です。</span><span class="sxs-lookup"><span data-stu-id="4f931-285">Although this flag is supported, the use of parentheses in `s` results in an <xref:System.OverflowException>.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="4f931-286">表示される桁区切り記号が`s`、のみ 1 つ以上の数字が 0 の前にします。</span><span class="sxs-lookup"><span data-stu-id="4f931-286">Although the group separator symbol can appear in `s`, it can be preceded by only one or more 0 digits.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="4f931-287">* $ *要素。</span><span class="sxs-lookup"><span data-stu-id="4f931-287">The *$* element.</span></span>|  
  
 <span data-ttu-id="4f931-288">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、`s`プレフィックスのない 16 進値でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="4f931-288">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="4f931-289">たとえば、"F3"を正常に解析していて、"0xF3"にはないです。</span><span class="sxs-lookup"><span data-stu-id="4f931-289">For example, "F3" parses successfully, but "0xF3" does not.</span></span> <span data-ttu-id="4f931-290">のみの他のフラグと組み合わせることができますが<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="4f931-290">The only other flags that can be combined with it are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4f931-291">(、<xref:System.Globalization.NumberStyles>列挙には、複合数値スタイルが含まれています<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、両方の空白文字のフラグが含まれている。)。</span><span class="sxs-lookup"><span data-stu-id="4f931-291">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="4f931-292">`s`で書式設定情報を使用してパラメーターを解析、<xref:System.Globalization.NumberFormatInfo>現在のシステムのカルチャに初期化されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-292">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="4f931-293">いくつか他のカルチャの書式情報を使用するのには、呼び出し、<xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="4f931-293">To use the formatting information of some other culture, call the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f931-294">次の例の文字列表現を解析して`Byte`の値を使った、<xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-294">The following example parses string representations of `Byte` values with the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4f931-295">たとえば、現在のカルチャは、EN-US です。</span><span class="sxs-lookup"><span data-stu-id="4f931-295">The current culture for the example is en-US.</span></span>  
  
 [!code-cpp[System.Byte.Parse#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.Parse/cpp/parse.cpp#3)]
 [!code-csharp[System.Byte.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.Parse/CS/parse.cs#3)]
 [!code-vb[System.Byte.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.Parse/VB/parse.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f931-296"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="4f931-296"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4f931-297"><paramref name="s" /> の書式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="4f931-297"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4f931-298"><paramref name="s" /> が <see cref="F:System.Byte.MinValue" /> 未満の数値か、<see cref="F:System.Byte.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="4f931-298"><paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span>  
  
 <span data-ttu-id="4f931-299">- または -</span><span class="sxs-lookup"><span data-stu-id="4f931-299">-or-</span></span>  
  
 <span data-ttu-id="4f931-300"><paramref name="s" /> は 0 以外の小数部の桁を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="4f931-300"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f931-301"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="4f931-301"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="4f931-302">- または -</span><span class="sxs-lookup"><span data-stu-id="4f931-302">-or-</span></span>  
  
 <span data-ttu-id="4f931-303"><paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="4f931-303"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.Byte.ToString" />
        <altmember cref="Overload:System.Byte.TryParse" />
        <altmember cref="F:System.Byte.MaxValue" />
        <altmember cref="F:System.Byte.MinValue" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static byte Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4f931-304">変換する数値を含んだ文字列。</span><span class="sxs-lookup"><span data-stu-id="4f931-304">A string that contains a number to convert.</span></span> <span data-ttu-id="4f931-305">文字列は、<see cref="F:System.Globalization.NumberStyles.Integer" /> スタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-305">The string is interpreted using the <see cref="F:System.Globalization.NumberStyles.Integer" /> style.</span></span></param>
        <param name="provider"><span data-ttu-id="4f931-306"><c>s</c> に関するカルチャ固有の解析情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-306">An object that supplies culture-specific parsing information about <c>s</c>.</span></span> <span data-ttu-id="4f931-307"><c>provider</c> が <see langword="null" /> の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-307">If <c>provider</c> is <see langword="null" />, the thread current culture is used.</span></span></param>
        <summary><span data-ttu-id="4f931-308">指定されたカルチャ固有の書式で表現された文字列形式の数値を、それと等価の <see cref="T:System.Byte" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="4f931-308">Converts the string representation of a number in a specified culture-specific format to its <see cref="T:System.Byte" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="4f931-309"><paramref name="s" /> に格納されている数値と等価のバイト値。</span><span class="sxs-lookup"><span data-stu-id="4f931-309">A byte value that is equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-310">`s`パラメーターには、フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="4f931-310">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="4f931-311">[ws][サインイン] 桁 [ws]</span><span class="sxs-lookup"><span data-stu-id="4f931-311">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="4f931-312">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="4f931-312">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="4f931-313">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="4f931-313">The following table describes each element.</span></span>  
  
|<span data-ttu-id="4f931-314">要素</span><span class="sxs-lookup"><span data-stu-id="4f931-314">Element</span></span>|<span data-ttu-id="4f931-315">説明</span><span class="sxs-lookup"><span data-stu-id="4f931-315">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="4f931-316">*ws*</span><span class="sxs-lookup"><span data-stu-id="4f931-316">*ws*</span></span>|<span data-ttu-id="4f931-317">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="4f931-317">Optional white space.</span></span>|  
|<span data-ttu-id="4f931-318">*sign*</span><span class="sxs-lookup"><span data-stu-id="4f931-318">*sign*</span></span>|<span data-ttu-id="4f931-319">省略可能な正の符号。</span><span class="sxs-lookup"><span data-stu-id="4f931-319">An optional positive sign.</span></span>|  
|<span data-ttu-id="4f931-320">*digits*</span><span class="sxs-lookup"><span data-stu-id="4f931-320">*digits*</span></span>|<span data-ttu-id="4f931-321">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="4f931-321">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="4f931-322">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Integer>スタイル。</span><span class="sxs-lookup"><span data-stu-id="4f931-322">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer> style.</span></span> <span data-ttu-id="4f931-323">バイト値の 10 進数字以外には、先頭と末尾のスペースが先頭の符号と共にのみを使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-323">In addition to the byte value's decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="4f931-324">(符号が場合、正の符号をする必要がありますまたはメソッドをスロー、 <xref:System.OverflowException>)。使用できるカルチャに固有の書式情報とスタイル要素を明示的に定義する`s`を使用して、<xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-324">(If the sign is present, it must be a positive sign or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4f931-325">`s`で書式設定情報を使用してパラメーターを解析する<xref:System.Globalization.NumberFormatInfo>で指定されたオブジェクト`provider`です。</span><span class="sxs-lookup"><span data-stu-id="4f931-325">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object supplied by `provider`.</span></span> <span data-ttu-id="4f931-326">`provider`パラメーターは、<xref:System.IFormatProvider>などの実装、<xref:System.Globalization.NumberFormatInfo>または<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-326">The `provider` parameter is an <xref:System.IFormatProvider> implementation such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="4f931-327">`provider`パラメーターの解析中に使用されるカルチャに固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="4f931-327">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="4f931-328">`provider` が `null` の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-328">If `provider` is `null`, the thread current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f931-329">次の例の文字列表現を解析して`Byte`の値を使った、<xref:System.Byte.Parse%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-329">The following example parses string representations of `Byte` values with the <xref:System.Byte.Parse%2A> method.</span></span>  
  
 [!code-cpp[System.Byte.Parse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.Parse/cpp/parse.cpp#2)]
 [!code-csharp[System.Byte.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.Parse/CS/parse.cs#2)]
 [!code-vb[System.Byte.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.Parse/VB/parse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f931-330"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="4f931-330"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4f931-331"><paramref name="s" /> の書式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="4f931-331"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4f931-332"><paramref name="s" /> が <see cref="F:System.Byte.MinValue" /> 未満の数値か、<see cref="F:System.Byte.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="4f931-332"><paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Byte.ToString" />
        <altmember cref="Overload:System.Byte.TryParse" />
        <altmember cref="F:System.Byte.MaxValue" />
        <altmember cref="F:System.Byte.MinValue" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static byte Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Byte" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static byte Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4f931-333">変換する数値を含んだ文字列。</span><span class="sxs-lookup"><span data-stu-id="4f931-333">A string that contains a number to convert.</span></span> <span data-ttu-id="4f931-334">文字列は、<c> スタイル </c> で指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-334">The string is interpreted using the style specified by <c>style</c>.</span></span></param>
        <param name="style"><span data-ttu-id="4f931-335"><c>s</c> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="4f931-335">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="4f931-336">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="4f931-336">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="4f931-337"><c>s</c> の書式設定に関するカルチャ固有の情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-337">An object that supplies culture-specific information about the format of <c>s</c>.</span></span> <span data-ttu-id="4f931-338"><c>provider</c> が <see langword="null" /> の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-338">If <c>provider</c> is <see langword="null" />, the thread current culture is used.</span></span></param>
        <summary><span data-ttu-id="4f931-339">指定したスタイルおよびカルチャ固有の書式の数値の文字列形式を、それと等価の <see cref="T:System.Byte" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="4f931-339">Converts the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Byte" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="4f931-340"><paramref name="s" /> に格納されている数値と等価のバイト値。</span><span class="sxs-lookup"><span data-stu-id="4f931-340">A byte value that is equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-341">`style`パラメーター スタイル要素を定義します (空白や正符号) では許可されて、`s`解析操作が成功するためのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="4f931-341">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="4f931-342">ビット フラグの組み合わせを可能にする必要があります、<xref:System.Globalization.NumberStyles>列挙します。</span><span class="sxs-lookup"><span data-stu-id="4f931-342">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="4f931-343">値に応じて`style`、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="4f931-343">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="4f931-344">[ws][$][サインイン] 桁 [.fractional_digits] [e [サインイン] 桁] [ws]</span><span class="sxs-lookup"><span data-stu-id="4f931-344">[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="4f931-345">またはの場合、`style`パラメーターが含まれています<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="4f931-345">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="4f931-346">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="4f931-346">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="4f931-347">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="4f931-347">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="4f931-348">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="4f931-348">The following table describes each element.</span></span>  
  
|<span data-ttu-id="4f931-349">要素</span><span class="sxs-lookup"><span data-stu-id="4f931-349">Element</span></span>|<span data-ttu-id="4f931-350">説明</span><span class="sxs-lookup"><span data-stu-id="4f931-350">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="4f931-351">*ws*</span><span class="sxs-lookup"><span data-stu-id="4f931-351">*ws*</span></span>|<span data-ttu-id="4f931-352">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="4f931-352">Optional white space.</span></span> <span data-ttu-id="4f931-353">先頭に空白文字は使用できません`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>フラグ、またはの末尾`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="4f931-353">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="4f931-354">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="4f931-354">A culture-specific currency symbol.</span></span> <span data-ttu-id="4f931-355">文字列内での位置がによって定義された、<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>のプロパティ、<xref:System.Globalization.NumberFormatInfo>によって返されるオブジェクト、<xref:System.IFormatProvider.GetFormat%2A>のメソッド、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="4f931-355">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="4f931-356">通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="4f931-356">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4f931-357">*sign*</span><span class="sxs-lookup"><span data-stu-id="4f931-357">*sign*</span></span>|<span data-ttu-id="4f931-358">省略可能な正の符号。</span><span class="sxs-lookup"><span data-stu-id="4f931-358">An optional positive sign.</span></span> <span data-ttu-id="4f931-359">(メソッドをスロー、<xref:System.OverflowException>に負の符号がである場合`s`)。先頭に表示できる符号`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>フラグ、またはの末尾`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="4f931-359">(The method throws an <xref:System.OverflowException> if a negative sign is present in `s`.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4f931-360">*digits*</span><span class="sxs-lookup"><span data-stu-id="4f931-360">*digits*</span></span>|<span data-ttu-id="4f931-361">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="4f931-361">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="4f931-362">*.*</span><span class="sxs-lookup"><span data-stu-id="4f931-362">*.*</span></span>|<span data-ttu-id="4f931-363">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="4f931-363">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="4f931-364">指定されたカルチャの小数点記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="4f931-364">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4f931-365">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="4f931-365">*fractional_digits*</span></span>|<span data-ttu-id="4f931-366">数字の 0 の 1 つ以上の出現します。</span><span class="sxs-lookup"><span data-stu-id="4f931-366">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="4f931-367">小数部の桁が表示できる`s`場合にのみ、`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="4f931-367">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4f931-368">*e*</span><span class="sxs-lookup"><span data-stu-id="4f931-368">*e*</span></span>|<span data-ttu-id="4f931-369">E または E の文字は、値を指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="4f931-369">The e or E character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="4f931-370">S パラメーターは指数表記の数値を表すことができる場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="4f931-370">The s parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4f931-371">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="4f931-371">*hexdigits*</span></span>|<span data-ttu-id="4f931-372">一連の 0 f からまたは f 0 から 16 進数の数字</span><span class="sxs-lookup"><span data-stu-id="4f931-372">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="4f931-373">10 進数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイル) が正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="4f931-373">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="4f931-374">ほとんど残りの<xref:System.Globalization.NumberStyles>メンバーを制御する可能性がありますが、この入力文字列内に存在する必要はない要素です。</span><span class="sxs-lookup"><span data-stu-id="4f931-374">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="4f931-375">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在可能な要素に影響を与える`s`です。</span><span class="sxs-lookup"><span data-stu-id="4f931-375">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="4f931-376">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="4f931-376">Non-composite NumberStyles values</span></span>|<span data-ttu-id="4f931-377">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="4f931-377">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="4f931-378">10 進数字のみです。</span><span class="sxs-lookup"><span data-stu-id="4f931-378">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="4f931-379">*.*</span><span class="sxs-lookup"><span data-stu-id="4f931-379">The *.*</span></span> <span data-ttu-id="4f931-380">および*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="4f931-380">and *fractional_digits* elements.</span></span> <span data-ttu-id="4f931-381">ただし、 *fractional_digits*のみ 1 つ以上の数字が 0 ので構成されている必要がありますまたは<xref:System.OverflowException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="4f931-381">However, *fractional_digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="4f931-382">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-382">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="4f931-383">*Ws*の先頭にある要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="4f931-383">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="4f931-384">*Ws*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="4f931-384">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="4f931-385">正の符号は、前に表示できる*桁*です。</span><span class="sxs-lookup"><span data-stu-id="4f931-385">A positive sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="4f931-386">正の符号が後に表示される可能性が*桁*です。</span><span class="sxs-lookup"><span data-stu-id="4f931-386">A positive sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="4f931-387">このフラグはサポートされていますでかっこを使用する`s`結果、<xref:System.OverflowException>です。</span><span class="sxs-lookup"><span data-stu-id="4f931-387">Although this flag is supported, the use of parentheses in `s` results in an <xref:System.OverflowException>.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="4f931-388">表示される桁区切り記号が`s`、のみ 1 つ以上の数字が 0 の前にします。</span><span class="sxs-lookup"><span data-stu-id="4f931-388">Although the group separator symbol can appear in `s`, it can be preceded by only one or more 0 digits.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="4f931-389">* $ *要素。</span><span class="sxs-lookup"><span data-stu-id="4f931-389">The *$* element.</span></span>|  
  
 <span data-ttu-id="4f931-390">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、`s`プレフィックスのない 16 進値でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="4f931-390">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="4f931-391">たとえば、"F3"を正常に解析していて、"0xF3"にはないです。</span><span class="sxs-lookup"><span data-stu-id="4f931-391">For example, "F3" parses successfully, but "0xF3" does not.</span></span> <span data-ttu-id="4f931-392">その他のフラグのみで使用可能な`style`は<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="4f931-392">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4f931-393">(、<xref:System.Globalization.NumberStyles>列挙体には、複合数値スタイル<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、両方の空白文字のフラグが含まれている)。</span><span class="sxs-lookup"><span data-stu-id="4f931-393">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="4f931-394">`provider`パラメーターは、<xref:System.IFormatProvider>実装など、<xref:System.Globalization.NumberFormatInfo>または<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-394">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="4f931-395">`provider`パラメーターの解析中に使用されるカルチャに固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="4f931-395">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="4f931-396">`provider` が `null` の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-396">If `provider` is `null`, the thread current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f931-397">次のコード例の文字列表現を解析して`Byte`のこのオーバー ロードを持つ値、<xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-397">The following code example parses string representations of `Byte` values with this overload of the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Byte.Parse#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.Parse/cpp/parse.cpp#4)]
 [!code-csharp[System.Byte.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.Parse/CS/parse.cs#4)]
 [!code-vb[System.Byte.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.Parse/VB/parse.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f931-398"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="4f931-398"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4f931-399"><paramref name="s" /> の書式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="4f931-399"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="4f931-400"><paramref name="s" /> が <see cref="F:System.Byte.MinValue" /> 未満の数値か、<see cref="F:System.Byte.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="4f931-400"><paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span>  
  
 <span data-ttu-id="4f931-401">- または -</span><span class="sxs-lookup"><span data-stu-id="4f931-401">-or-</span></span>  
  
 <span data-ttu-id="4f931-402"><paramref name="s" /> は 0 以外の小数部の桁を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="4f931-402"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f931-403"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="4f931-403"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="4f931-404">- または -</span><span class="sxs-lookup"><span data-stu-id="4f931-404">-or-</span></span>  
  
 <span data-ttu-id="4f931-405"><paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="4f931-405"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.Byte.ToString" />
        <altmember cref="F:System.Byte.MaxValue" />
        <altmember cref="F:System.Byte.MinValue" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4f931-406">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-406">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4f931-407">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="4f931-407">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="4f931-408">現在のインスタンスの値がゼロでない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4f931-408"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-409">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="4f931-409">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f931-410">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-410">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4f931-411">推奨される代替手段が呼び出されて、<xref:System.Convert.ToBoolean%28System.Byte%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-411">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4f931-412">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-412">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4f931-413">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="4f931-413">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4f931-414">変更されていない、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="4f931-414">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-415">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="4f931-415">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f931-416">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-416">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4f931-417">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-417">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4f931-418">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="4f931-418">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4f931-419"><see cref="T:System.Char" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="4f931-419">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-420">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="4f931-420">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f931-421">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-421">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4f931-422">推奨される代替手段が呼び出されて、<xref:System.Convert.ToChar%28System.Byte%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-422">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4f931-423">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-423">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4f931-424">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="4f931-424">This conversion is not supported.</span></span> <span data-ttu-id="4f931-425">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="4f931-425">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="4f931-426">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="4f931-426">This conversion is not supported.</span></span> <span data-ttu-id="4f931-427">値は返されません。</span><span class="sxs-lookup"><span data-stu-id="4f931-427">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4f931-428">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="4f931-428">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4f931-429">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-429">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4f931-430">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="4f931-430">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4f931-431"><see cref="T:System.Decimal" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="4f931-431">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-432">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="4f931-432">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f931-433">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-433">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4f931-434">推奨される代替手段が呼び出されて、<xref:System.Convert.ToDecimal%28System.Byte%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-434">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4f931-435">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-435">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4f931-436">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="4f931-436">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4f931-437"><see cref="T:System.Double" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="4f931-437">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-438">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="4f931-438">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f931-439">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-439">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4f931-440">推奨される代替手段が呼び出されて、<xref:System.Convert.ToDouble%28System.Byte%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-440">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4f931-441">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-441">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4f931-442">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="4f931-442">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4f931-443"><see cref="T:System.Int16" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="4f931-443">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-444">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="4f931-444">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f931-445">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-445">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4f931-446">推奨される代替手段が呼び出されて、<xref:System.Convert.ToInt16%28System.Byte%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-446">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4f931-447">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-447">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4f931-448">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="4f931-448">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4f931-449"><see cref="T:System.Int32" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="4f931-449">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-450">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="4f931-450">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f931-451">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-451">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4f931-452">推奨される代替手段が呼び出されて、<xref:System.Convert.ToInt32%28System.Byte%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-452">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4f931-453">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-453">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4f931-454">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="4f931-454">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4f931-455"><see cref="T:System.Int64" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="4f931-455">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-456">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="4f931-456">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f931-457">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-457">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4f931-458">推奨される代替手段が呼び出されて、<xref:System.Convert.ToInt64%28System.Byte%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-458">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4f931-459">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-459">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4f931-460">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="4f931-460">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4f931-461"><see cref="T:System.SByte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="4f931-461">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-462">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="4f931-462">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f931-463">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-463">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4f931-464">推奨される代替手段が呼び出されて、<xref:System.Convert.ToSByte%28System.Byte%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-464">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4f931-465">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-465">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4f931-466">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="4f931-466">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4f931-467"><see cref="T:System.Single" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="4f931-467">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-468">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="4f931-468">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f931-469">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-469">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4f931-470">推奨される代替手段が呼び出されて、<xref:System.Convert.ToSingle%28System.Byte%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-470">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="4f931-471">この <see cref="T:System.Byte" /> 値の変換後の型。</span><span class="sxs-lookup"><span data-stu-id="4f931-471">The type to which to convert this <see cref="T:System.Byte" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="4f931-472">戻り値の書式に関する情報を提供する <see cref="T:System.IFormatProvider" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="4f931-472">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="4f931-473">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="4f931-473">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4f931-474"><paramref name="type" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="4f931-474">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-475">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="4f931-475">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f931-476">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-476">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4f931-477">推奨される代替手段が呼び出されて、 `static` (`Shared` Visual Basic で)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="4f931-477">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f931-478"><paramref name="type" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="4f931-478"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4f931-479">要求された型変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="4f931-479">The requested type conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4f931-480">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-480">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4f931-481">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="4f931-481">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4f931-482"><see cref="T:System.UInt16" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="4f931-482">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-483">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="4f931-483">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f931-484">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-484">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4f931-485">推奨される代替手段が呼び出されて、<xref:System.Convert.ToUInt16%28System.Byte%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-485">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4f931-486">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-486">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4f931-487">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="4f931-487">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4f931-488"><see cref="T:System.UInt32" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="4f931-488">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-489">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="4f931-489">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f931-490">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-490">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4f931-491">推奨される代替手段が呼び出されて、<xref:System.Convert.ToUInt32%28System.Byte%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-491">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4f931-492">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-492">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4f931-493">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="4f931-493">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4f931-494"><see cref="T:System.UInt64" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="4f931-494">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-495">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="4f931-495">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4f931-496">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-496">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4f931-497">推奨される代替手段が呼び出されて、<xref:System.Convert.ToUInt64%28System.Byte%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-497">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4f931-498">現在の <see cref="T:System.Byte" /> オブジェクトの値を等価の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="4f931-498">Converts the value of the current <see cref="T:System.Byte" /> object to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f931-499">現在の <see cref="T:System.Byte" /> オブジェクトの値を等価の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="4f931-499">Converts the value of the current <see cref="T:System.Byte" /> object to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="4f931-500">0 から 9 までの一連の数字で構成され、先行ゼロを含まない、このオブジェクトの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="4f931-500">The string representation of the value of this object, which consists of a sequence of digits that range from 0 to 9 with no leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-501">戻り値は、[全般] の数値書式指定子 ("G") でフォーマットされた、<xref:System.Globalization.NumberFormatInfo>の現在のスレッド カルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-501">The return value is formatted with the general numeric format specifier ("G") and the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture.</span></span> <span data-ttu-id="4f931-502">書式を定義する、<xref:System.Byte>値の文字列表現を呼び出し、<xref:System.Byte.ToString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-502">To define the formatting of the <xref:System.Byte> value's string representation, call the <xref:System.Byte.ToString%2A> method.</span></span> <span data-ttu-id="4f931-503">書式指定子およびカルチャの文字列表現を作成するために使用の両方を定義する、<xref:System.Byte>値を呼び出し、<xref:System.Byte.ToString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-503">To define both the format specifiers and culture used to create the string representation of a <xref:System.Byte> value, call the <xref:System.Byte.ToString%2A> method.</span></span>  
  
 <span data-ttu-id="4f931-504">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="4f931-504">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="4f931-505">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="4f931-505">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4f931-506">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="4f931-506">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="4f931-507">現在のスレッド カルチャのについては、次を参照してください。<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="4f931-507">For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f931-508">次の例では、バイト値の配列を表示します。</span><span class="sxs-lookup"><span data-stu-id="4f931-508">The following example displays an array of byte values.</span></span> <span data-ttu-id="4f931-509">なお、<xref:System.Byte.ToString>の例では、メソッドは明示的に呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="4f931-509">Note that the <xref:System.Byte.ToString> method is not called explicitly in the example.</span></span> <span data-ttu-id="4f931-510">代わりに、これは暗黙的に呼び出されますを使用するため、[複合書式指定](~/docs/standard/base-types/composite-formatting.md)機能します。</span><span class="sxs-lookup"><span data-stu-id="4f931-510">Instead, it is called implicitly, because of the use of the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature.</span></span>  
  
 [!code-cpp[System.Byte.ToString#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.ToString/CPP/newbytemembers2.cpp#2)]
 [!code-csharp[System.Byte.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.ToString/CS/NewByteMembers.cs#2)]
 [!code-vb[System.Byte.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.ToString/VB/NewByteMembers.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4f931-511">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-511">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="4f931-512">指定したカルチャ固有の書式設定情報を使用して、現在の <see cref="T:System.Byte" /> オブジェクトの値をそれと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="4f931-512">Converts the numeric value of the current <see cref="T:System.Byte" /> object to its equivalent string representation using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="4f931-513">このオブジェクトの値を <paramref name="provider" /> パラメーターに指定されたの文字列形式で表現した値。</span><span class="sxs-lookup"><span data-stu-id="4f931-513">The string representation of the value of this object in the format specified by the <paramref name="provider" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-514">戻り値には、[全般] の数値書式指定子 ("G") が表示されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-514">The return value is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="4f931-515">`provider`パラメーターを実装するオブジェクト、<xref:System.IFormatProvider>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="4f931-515">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="4f931-516">その<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>このメソッドによって返される文字列の書式に関するカルチャ固有の情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-516">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="4f931-517">実装するオブジェクト<xref:System.IFormatProvider>次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-517">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="4f931-518">A<xref:System.Globalization.CultureInfo>が書式指定規則が使用されるカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-518">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="4f931-519">A<xref:System.Globalization.NumberFormatInfo>この値の特定の数値書式設定情報を含むオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="4f931-519">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="4f931-520">実装するカスタム オブジェクト<xref:System.IFormatProvider>です。</span><span class="sxs-lookup"><span data-stu-id="4f931-520">A custom object that implements <xref:System.IFormatProvider>.</span></span>  
  
 <span data-ttu-id="4f931-521">場合`provider`は`null`または<xref:System.Globalization.NumberFormatInfo>からオブジェクトを取得できません`provider`を使用して、戻り値が書式設定、<xref:System.Globalization.NumberFormatInfo>の現在のスレッド カルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-521">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture.</span></span> <span data-ttu-id="4f931-522">現在のスレッド カルチャのについては、次を参照してください。<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="4f931-522">For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4f931-523">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="4f931-523">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="4f931-524">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="4f931-524">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4f931-525">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="4f931-525">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f931-526">次の例は、バイトの配列の値し、それらの各を呼び出すことによってコンソールに表示、<xref:System.Byte.ToString%28System.IFormatProvider%29>異なる書式プロバイダーを持つメソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-526">The following example iterates an array of byte values and displays each of them to the console by calling the <xref:System.Byte.ToString%28System.IFormatProvider%29> method with different format providers.</span></span>  
  
 [!code-cpp[System.Byte.ToString#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.ToString/CPP/newbytemembers.cpp#3)]
 [!code-csharp[System.Byte.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.ToString/CS/NewByteMembers.cs#3)]
 [!code-vb[System.Byte.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.ToString/VB/NewByteMembers.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Byte.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="4f931-527">数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="4f931-527">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="4f931-528">指定した書式を使用して、現在の <see cref="T:System.Byte" /> オブジェクトの値をそれと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="4f931-528">Converts the value of the current <see cref="T:System.Byte" /> object to its equivalent string representation using the specified format.</span></span></summary>
        <returns><span data-ttu-id="4f931-529">現在の <see cref="T:System.Byte" /> オブジェクトの文字列形式を、<paramref name="format" /> パラメーターで指定された書式で表現した値。</span><span class="sxs-lookup"><span data-stu-id="4f931-529">The string representation of the current <see cref="T:System.Byte" /> object, formatted as specified by the <paramref name="format" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-530">`format`パラメーターには、標準またはカスタム数値書式指定文字列のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-530">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="4f931-531">すべてのカスタム数値書式指定文字として、"R"(または"r") 以外のすべての標準数値書式指定文字列はサポートされます。</span><span class="sxs-lookup"><span data-stu-id="4f931-531">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="4f931-532">場合`format`は`null`または空の文字列 ("")、戻り値が、一般的な数値書式指定子 ("G") でフォーマットされています。</span><span class="sxs-lookup"><span data-stu-id="4f931-532">If `format` is `null` or an empty string (""), the return value is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="4f931-533">使用してこの関数の戻り値の書式は、<xref:System.Globalization.NumberFormatInfo>の現在のスレッド カルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-533">The return value of this function is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture.</span></span> <span data-ttu-id="4f931-534">現在のスレッド カルチャのについては、次を参照してください。<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="4f931-534">For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4f931-535">現在のカルチャ以外のカルチャの書式情報を提供するには、呼び出し、<xref:System.Byte.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-535">To provide formatting information for cultures other than the current culture, call the <xref:System.Byte.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4f931-536">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="4f931-536">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="4f931-537">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="4f931-537">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4f931-538">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="4f931-538">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f931-539">次の例の初期化、<xref:System.Byte>値し、サポートされている標準書式指定文字列とカスタム書式指定文字列の各を使用して、コンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-539">The following example initializes a <xref:System.Byte> value and displays it to the console using each of the supported standard format strings and a custom format string.</span></span> <span data-ttu-id="4f931-540">例は、現在のカルチャとして EN-US で実行されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-540">The example is run with en-US as the current culture.</span></span>  
  
 [!code-cpp[System.Byte.ToString#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.ToString/CPP/newbytemembers2.cpp#4)]
 [!code-csharp[System.Byte.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.ToString/CS/NewByteMembers.cs#4)]
 [!code-vb[System.Byte.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.ToString/VB/NewByteMembers.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4f931-541"><paramref name="format" /> にサポート外の指定子が含まれています。</span><span class="sxs-lookup"><span data-stu-id="4f931-541"><paramref name="format" /> includes an unsupported specifier.</span></span> <span data-ttu-id="4f931-542">サポートされている書式指定子は、「解説」に記載されています。</span><span class="sxs-lookup"><span data-stu-id="4f931-542">Supported format specifiers are listed in the Remarks section.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="4f931-543">標準またはカスタムの数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="4f931-543">A standard or custom numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="4f931-544">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-544">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="4f931-545">指定した形式およびカルチャ固有の書式設定情報を使用して、現在の <see cref="T:System.Byte" /> オブジェクトの値をそれと等価の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="4f931-545">Converts the value of the current <see cref="T:System.Byte" /> object to its equivalent string representation using the specified format and culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="4f931-546">現在の <see cref="T:System.Byte" /> オブジェクトの文字列形式を、<paramref name="format" /> および <paramref name="provider" /> パラメーターで指定された書式で表現した値。</span><span class="sxs-lookup"><span data-stu-id="4f931-546">The string representation of the current <see cref="T:System.Byte" /> object, formatted as specified by the <paramref name="format" /> and <paramref name="provider" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-547"><xref:System.Byte.ToString%28System.String%2CSystem.IFormatProvider%29>メソッドの形式、<xref:System.Byte>特定のカルチャの指定した形式の値。</span><span class="sxs-lookup"><span data-stu-id="4f931-547">The <xref:System.Byte.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Byte> value in a specified format of a specified culture.</span></span> <span data-ttu-id="4f931-548">現在のカルチャの既定値 ("G") の形式を使用して、数値の書式設定、呼び出し、<xref:System.Byte.ToString>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-548">To format a number by using the default ("G") format of the current culture, call the <xref:System.Byte.ToString> method.</span></span> <span data-ttu-id="4f931-549">現在のカルチャの指定された形式を使用して、数値の書式設定、呼び出し、<xref:System.Byte.ToString%28System.String%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-549">To format a number by using a specified format of the current culture, call the <xref:System.Byte.ToString%28System.String%29> method.</span></span>  
  
 <span data-ttu-id="4f931-550">`format`パラメーターには、標準またはカスタム数値書式指定文字列のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-550">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="4f931-551">すべてのカスタム数値書式指定文字として、"R"(または"r") 以外のすべての標準数値書式指定文字列はサポートされます。</span><span class="sxs-lookup"><span data-stu-id="4f931-551">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="4f931-552">場合`format`は`null`または空の文字列 ("")、このメソッドの戻り値が、一般的な数値書式指定子 ("G") でフォーマットされています。</span><span class="sxs-lookup"><span data-stu-id="4f931-552">If `format` is `null` or an empty string (""), the return value of this method is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="4f931-553">`provider`パラメーターを実装するオブジェクト、<xref:System.IFormatProvider>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="4f931-553">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="4f931-554">その<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>このメソッドによって返される文字列の書式に関するカルチャ固有の情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-554">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="4f931-555">実装するオブジェクト<xref:System.IFormatProvider>次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-555">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="4f931-556">A<xref:System.Globalization.CultureInfo>が書式指定規則が使用されるカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-556">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="4f931-557">A<xref:System.Globalization.NumberFormatInfo>この値の特定の数値書式設定情報を含むオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="4f931-557">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="4f931-558">実装するカスタム オブジェクト<xref:System.IFormatProvider>です。</span><span class="sxs-lookup"><span data-stu-id="4f931-558">A custom object that implements <xref:System.IFormatProvider>.</span></span>  
  
 <span data-ttu-id="4f931-559">場合`provider`は`null`または<xref:System.Globalization.NumberFormatInfo>からオブジェクトを取得できません`provider`を使用して、戻り値が書式設定、<xref:System.Globalization.NumberFormatInfo>の現在のスレッド カルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-559">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture.</span></span> <span data-ttu-id="4f931-560">現在のスレッド カルチャのについては、次を参照してください。<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="4f931-560">For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4f931-561">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="4f931-561">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="4f931-562">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="4f931-562">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4f931-563">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="4f931-563">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f931-564">次の例では、標準的な"N"書式指定文字列と 4 つの異なる<xref:System.Globalization.CultureInfo>バイト値の文字列形式をコンソールに表示するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-564">The following example uses the standard "N" format string and four different <xref:System.Globalization.CultureInfo> objects to display the string representation of a byte value to the console.</span></span>  
  
 [!code-cpp[System.Byte.ToString#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.ToString/CPP/newbytemembers2.cpp#5)]
 [!code-csharp[System.Byte.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.ToString/CS/NewByteMembers.cs#5)]
 [!code-vb[System.Byte.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.ToString/VB/NewByteMembers.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4f931-565"><paramref name="format" /> にサポート外の指定子が含まれています。</span><span class="sxs-lookup"><span data-stu-id="4f931-565"><paramref name="format" /> includes an unsupported specifier.</span></span> <span data-ttu-id="4f931-566">サポートされている書式指定子は、「解説」に記載されています。</span><span class="sxs-lookup"><span data-stu-id="4f931-566">Supported format specifiers are listed in the Remarks section.</span></span></exception>
        <altmember cref="M:System.Byte.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.IFormattable" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4f931-567">数値の文字列形式を対応する <see cref="T:System.Byte" /> 表現に変換できるかどうかを試行し、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="4f931-567">Tries to convert the string representation of a number to its <see cref="T:System.Byte" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <altmember cref="Overload:System.Byte.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out byte result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] unsigned int8&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.TryParse(System.ReadOnlySpan{System.Char},System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::Byte % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Byte&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out byte result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] unsigned int8&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.TryParse(System.String,System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::Byte % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Byte&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4f931-568">変換する数値を含んだ文字列。</span><span class="sxs-lookup"><span data-stu-id="4f931-568">A string that contains a number to convert.</span></span> <span data-ttu-id="4f931-569">文字列は、<see cref="F:System.Globalization.NumberStyles.Integer" /> スタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-569">The string is interpreted using the <see cref="F:System.Globalization.NumberStyles.Integer" /> style.</span></span></param>
        <param name="result"><span data-ttu-id="4f931-570">このメソッドから制御が返されたとき、変換に成功した場合は、<c>s</c> に含まれる数値と等価な <see cref="T:System.Byte" /> 値が格納されます。変換に失敗した場合は 0 が格納されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-570">When this method returns, contains the <see cref="T:System.Byte" /> value equivalent to the number contained in <c>s</c> if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="4f931-571">このパラメーターは初期化されていない状態で渡されています。<c>result</c> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="4f931-571">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="4f931-572">数値の文字列形式を対応する <see cref="T:System.Byte" /> 表現に変換できるかどうかを試行し、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="4f931-572">Tries to convert the string representation of a number to its <see cref="T:System.Byte" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns>
          <span data-ttu-id="4f931-573"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4f931-573"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-574">変換に失敗して、メソッドを返します`false`場合、`s`パラメーターに含まれない、正しい形式である場合`null`または<xref:System.String.Empty?displayProperty=nameWithType>、数値を表している場合、またはより小さい<xref:System.Byte.MinValue>以上<xref:System.Byte.MaxValue>です。</span><span class="sxs-lookup"><span data-stu-id="4f931-574">The conversion fails and the method returns `false` if the `s` parameter is not in the correct format, if it is `null` or <xref:System.String.Empty?displayProperty=nameWithType>, or if it represents a number less than <xref:System.Byte.MinValue> or greater than <xref:System.Byte.MaxValue>.</span></span>  
  
 <span data-ttu-id="4f931-575"><xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29?displayProperty=nameWithType>メソッドがに似ていますが、<xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType>メソッドの点を除いて、<xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29>変換が失敗した場合、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="4f931-575">The <xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29?displayProperty=nameWithType> method is similar to the <xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType> method, except that <xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29> does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="4f931-576">`s`パラメーターが、次の形式の数値の文字列形式にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4f931-576">The `s` parameter should be the string representation of a number in the following form:</span></span>  
  
```  
[ws][sign]digits[ws]  
```  
  
 <span data-ttu-id="4f931-577">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="4f931-577">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="4f931-578">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="4f931-578">The following table describes each element.</span></span>  
  
|<span data-ttu-id="4f931-579">要素</span><span class="sxs-lookup"><span data-stu-id="4f931-579">Element</span></span>|<span data-ttu-id="4f931-580">説明</span><span class="sxs-lookup"><span data-stu-id="4f931-580">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="4f931-581">*ws*</span><span class="sxs-lookup"><span data-stu-id="4f931-581">*ws*</span></span>|<span data-ttu-id="4f931-582">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="4f931-582">Optional white space.</span></span>|  
|<span data-ttu-id="4f931-583">*sign*</span><span class="sxs-lookup"><span data-stu-id="4f931-583">*sign*</span></span>|<span data-ttu-id="4f931-584">指定された、省略可能なの正符号、<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>現在のカルチャのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="4f931-584">An optional positive sign, as specified by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> property of the current culture.</span></span>|  
|<span data-ttu-id="4f931-585">*digits*</span><span class="sxs-lookup"><span data-stu-id="4f931-585">*digits*</span></span>|<span data-ttu-id="4f931-586">0 から 9 の範囲の 10 進数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="4f931-586">A sequence of decimal digits that range from 0 to 9.</span></span>|  
  
 <span data-ttu-id="4f931-587">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Integer>スタイル。</span><span class="sxs-lookup"><span data-stu-id="4f931-587">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer> style.</span></span> <span data-ttu-id="4f931-588">バイト値の 10 進数字以外には、先頭と末尾のスペースが先頭の符号と共にのみを使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-588">In addition to the byte value's decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="4f931-589">(符号が場合、正の符号をする必要がありますまたはメソッドをスロー、 <xref:System.OverflowException>)。使用できるカルチャに固有の書式情報とスタイル要素を明示的に定義する`s`を使用して、<xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-589">(If the sign is present, it must be a positive sign or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4f931-590">`s`で書式設定情報を使用してパラメーターを解析する<xref:System.Globalization.NumberFormatInfo>現在のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-590">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="4f931-591">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4f931-591">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4f931-592">このオーバー ロード、<xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29?displayProperty=nameWithType>メソッド内のすべての桁を解釈し、`s`として小数点以下桁数のパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="4f931-592">This overload of the <xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29?displayProperty=nameWithType> method interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="4f931-593">16 進数の文字列表現を解析するには、呼び出し、<xref:System.Byte.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Byte%40%29?displayProperty=nameWithType>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="4f931-593">To parse the string representation of a hexadecimal number, call the <xref:System.Byte.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Byte%40%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f931-594">次の例では、<xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29>別の文字列値の数を持つメソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-594">The following example calls the <xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29> method with a number of different string values.</span></span>  
  
 [!code-cpp[System.Byte.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.TryParse/cpp/tryparse.cpp#1)]
 [!code-csharp[System.Byte.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.TryParse/cs/TryParse.cs#1)]
 [!code-vb[System.Byte.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.TryParse/vb/TryParse.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out byte result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int8&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Byte % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Byte&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out byte result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int8&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Byte % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Byte&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4f931-595">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="4f931-595">A string containing a number to convert.</span></span> <span data-ttu-id="4f931-596">文字列は、<c> スタイル </c> で指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-596">The string is interpreted using the style specified by <c>style</c>.</span></span></param>
        <param name="style"><span data-ttu-id="4f931-597"><c>s</c> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="4f931-597">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="4f931-598">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="4f931-598">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="4f931-599"><c>s</c> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-599">An object that supplies culture-specific formatting information about <c>s</c>.</span></span> <span data-ttu-id="4f931-600"><c>provider</c> が <see langword="null" /> の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="4f931-600">If <c>provider</c> is <see langword="null" />, the thread current culture is used.</span></span></param>
        <param name="result"><span data-ttu-id="4f931-601">変換が成功した場合、このメソッドが返されるときに、<c>s</c> に格納された数値と等しい 8 ビット符号なし整数値を格納します。変換に失敗した場合は 0 を格納します。</span><span class="sxs-lookup"><span data-stu-id="4f931-601">When this method returns, contains the 8-bit unsigned integer value equivalent to the number contained in <c>s</c> if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="4f931-602"><c>s</c> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、正しい形式ではない、または <see cref="F:System.Byte.MinValue" /> より小さいか <see cref="F:System.Byte.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="4f931-602">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span> <span data-ttu-id="4f931-603">このパラメーターは初期化されていない状態で渡されています。<c>result</c> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="4f931-603">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="4f931-604">指定したスタイルおよびカルチャ固有の書式の数値の文字列形式を、それと等価の <see cref="T:System.Byte" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="4f931-604">Converts the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Byte" /> equivalent.</span></span> <span data-ttu-id="4f931-605">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="4f931-605">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="4f931-606"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4f931-606"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f931-607"><xref:System.Byte.TryParse%2A>などのメソッドは、<xref:System.Byte.Parse%2A>メソッドを除く、<xref:System.Byte.TryParse%2A>変換が失敗した場合、メソッドが例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="4f931-607">The <xref:System.Byte.TryParse%2A> method is like the <xref:System.Byte.Parse%2A> method, except the <xref:System.Byte.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="4f931-608">`s`で書式設定情報を使用してパラメーターを解析する<xref:System.Globalization.NumberFormatInfo>で指定されたオブジェクト、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="4f931-608">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object supplied by the `provider` parameter.</span></span>  
  
 <span data-ttu-id="4f931-609">スタイル パラメーターを定義で使用できるスタイル要素 (空白や正符号) など、`s`解析操作が成功するためのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="4f931-609">The style parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="4f931-610">ビット フラグの組み合わせを可能にする必要があります、<xref:System.Globalization.NumberStyles>列挙します。</span><span class="sxs-lookup"><span data-stu-id="4f931-610">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="4f931-611">値に応じて`style`、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="4f931-611">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="4f931-612">[ws][$][サインイン] 桁 [.fractional_digits] [e [サインイン] 桁] [ws]</span><span class="sxs-lookup"><span data-stu-id="4f931-612">[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="4f931-613">またはの場合、`style`パラメーターが含まれています<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="4f931-613">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="4f931-614">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="4f931-614">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="4f931-615">角かっこ ([および]) は省略可能内の要素。</span><span class="sxs-lookup"><span data-stu-id="4f931-615">Elements in square brackets ( [ and ] ) are optional.</span></span> <span data-ttu-id="4f931-616">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="4f931-616">The following table describes each element.</span></span>  
  
|<span data-ttu-id="4f931-617">要素</span><span class="sxs-lookup"><span data-stu-id="4f931-617">Element</span></span>|<span data-ttu-id="4f931-618">説明</span><span class="sxs-lookup"><span data-stu-id="4f931-618">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="4f931-619">*ws*</span><span class="sxs-lookup"><span data-stu-id="4f931-619">*ws*</span></span>|<span data-ttu-id="4f931-620">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="4f931-620">Optional white space.</span></span> <span data-ttu-id="4f931-621">先頭に空白文字は使用できません`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>フラグ、またはスタイルが含まれる場合は、s の最後に、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="4f931-621">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of s if style includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="4f931-622">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="4f931-622">A culture-specific currency symbol.</span></span> <span data-ttu-id="4f931-623">文字列内での位置がによって定義された、<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>のプロパティ、<xref:System.Globalization.NumberFormatInfo>によって返されるオブジェクト、<xref:System.IFormatProvider.GetFormat%2A>のメソッド、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="4f931-623">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="4f931-624">通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="4f931-624">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4f931-625">*sign*</span><span class="sxs-lookup"><span data-stu-id="4f931-625">*sign*</span></span>|<span data-ttu-id="4f931-626">省略可能な正の符号。</span><span class="sxs-lookup"><span data-stu-id="4f931-626">An optional positive sign.</span></span> <span data-ttu-id="4f931-627">(マイナス記号にある場合、解析操作が失敗した`s`)。先頭に表示できる符号`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>フラグ、またはの末尾`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="4f931-627">(The parse operation fails if a negative sign is present in `s`.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4f931-628">*digits*</span><span class="sxs-lookup"><span data-stu-id="4f931-628">*digits*</span></span>|<span data-ttu-id="4f931-629">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="4f931-629">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="4f931-630">*.*</span><span class="sxs-lookup"><span data-stu-id="4f931-630">*.*</span></span>|<span data-ttu-id="4f931-631">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="4f931-631">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="4f931-632">指定されたカルチャの小数点記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="4f931-632">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4f931-633">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="4f931-633">*fractional_digits*</span></span>|<span data-ttu-id="4f931-634">数字の 0 の 1 つ以上の出現します。</span><span class="sxs-lookup"><span data-stu-id="4f931-634">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="4f931-635">小数部の桁が表示できる`s`場合にのみ、`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="4f931-635">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4f931-636">*e*</span><span class="sxs-lookup"><span data-stu-id="4f931-636">*e*</span></span>|<span data-ttu-id="4f931-637">E または E の文字は、値を指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="4f931-637">The e or E character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="4f931-638">`s`場合、パラメーターは指数表記の数値を表すことができる`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="4f931-638">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4f931-639">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="4f931-639">*hexdigits*</span></span>|<span data-ttu-id="4f931-640">一連の 0 f からまたは f 0 から 16 進数の数字</span><span class="sxs-lookup"><span data-stu-id="4f931-640">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="4f931-641">10 進数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイル) が正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="4f931-641">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="4f931-642">ほとんど残りの<xref:System.Globalization.NumberStyles>メンバーを制御する可能性がありますが、この入力文字列内に存在する必要はない要素です。</span><span class="sxs-lookup"><span data-stu-id="4f931-642">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="4f931-643">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在可能な要素に影響を与える`s`です。</span><span class="sxs-lookup"><span data-stu-id="4f931-643">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="4f931-644">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="4f931-644">Non-composite NumberStyles values</span></span>|<span data-ttu-id="4f931-645">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="4f931-645">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="4f931-646">10 進数字のみです。</span><span class="sxs-lookup"><span data-stu-id="4f931-646">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="4f931-647">*.*</span><span class="sxs-lookup"><span data-stu-id="4f931-647">The *.*</span></span> <span data-ttu-id="4f931-648">および*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="4f931-648">and *fractional_digits* elements.</span></span> <span data-ttu-id="4f931-649">ただし、 *fractional_digits*のみ 1 つ以上の数字が 0 のメソッドを返しますで構成されている必要があります`false`です。</span><span class="sxs-lookup"><span data-stu-id="4f931-649">However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="4f931-650">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f931-650">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="4f931-651">場合`s`指数表記の数値を表すの範囲内の整数を表す必要があります、<xref:System.Byte>ゼロ以外、小数部がないデータ型。</span><span class="sxs-lookup"><span data-stu-id="4f931-651">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Byte> data type without a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="4f931-652">*Ws*の先頭にある要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="4f931-652">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="4f931-653">*Ws*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="4f931-653">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="4f931-654">正の符号は、前に表示できる*桁*です。</span><span class="sxs-lookup"><span data-stu-id="4f931-654">A positive sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="4f931-655">正の符号が後に表示される可能性が*桁*です。</span><span class="sxs-lookup"><span data-stu-id="4f931-655">A positive sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="4f931-656">このフラグはサポートされていますが、メソッドが返す`false`かっこが存在する場合に`s`です。</span><span class="sxs-lookup"><span data-stu-id="4f931-656">Although this flag is supported, the method returns `false` if parentheses are present in `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="4f931-657">表示される桁区切り記号が`s`、のみ 1 つ以上の数字が 0 の前にします。</span><span class="sxs-lookup"><span data-stu-id="4f931-657">Although the group separator symbol can appear in `s`, it can be preceded by only one or more 0 digits.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="4f931-658">* $ *要素。</span><span class="sxs-lookup"><span data-stu-id="4f931-658">The *$* element.</span></span>|  
  
 <span data-ttu-id="4f931-659">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、`s`プレフィックスのない 16 進値でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="4f931-659">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="4f931-660">たとえば、"F3"を正常に解析していて、"0xF3"にはないです。</span><span class="sxs-lookup"><span data-stu-id="4f931-660">For example, "F3" parses successfully, but "0xF3" does not.</span></span> <span data-ttu-id="4f931-661">その他のフラグのみで使用可能な`style`は<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="4f931-661">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4f931-662">(、<xref:System.Globalization.NumberStyles>列挙体には、複合数値スタイル<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、両方の空白文字のフラグが含まれている)。</span><span class="sxs-lookup"><span data-stu-id="4f931-662">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="4f931-663">`provider`パラメーターは、<xref:System.IFormatProvider>実装など、<xref:System.Globalization.CultureInfo>オブジェクトまたは<xref:System.Globalization.NumberFormatInfo>オブジェクト、<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f931-663">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4f931-664"><xref:System.Globalization.NumberFormatInfo>オブジェクトの書式に関するカルチャ固有の情報を提供`s`です。</span><span class="sxs-lookup"><span data-stu-id="4f931-664">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f931-665">次の例では、<xref:System.Byte.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Byte%40%29>別の文字列値の数を持つメソッドです。</span><span class="sxs-lookup"><span data-stu-id="4f931-665">The following example calls the <xref:System.Byte.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Byte%40%29> method with a number of different string values.</span></span>  
  
 [!code-cpp[System.Byte.TryParse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.TryParse/cpp/tryparse2.cpp#2)]
 [!code-csharp[System.Byte.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.TryParse/cs/TryParse2.cs#2)]
 [!code-vb[System.Byte.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.TryParse/vb/TryParse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f931-666"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="4f931-666"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="4f931-667">- または -</span><span class="sxs-lookup"><span data-stu-id="4f931-667">-or-</span></span>  
  
 <span data-ttu-id="4f931-668"><paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="4f931-668"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.Byte.ToString" />
        <altmember cref="F:System.Byte.MaxValue" />
        <altmember cref="F:System.Byte.MinValue" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
  </Members>
</Type>