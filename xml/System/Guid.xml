<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Guid.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54f579b3263d4c8f6a549a812ccf125e5c8bff7df.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f579b3263d4c8f6a549a812ccf125e5c8bff7df</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Guid">
          <source>Represents a globally unique identifier (GUID).</source>
          <target state="translated">グローバル一意識別子 (GUID) を表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Guid">
          <source>A GUID is a 128-bit integer (16 bytes) that can be used across all computers and networks wherever a unique identifier is required.</source>
          <target state="translated">GUID は、128 ビットの整数 (16 バイト) を使用できるすべてのコンピューターとネットワーク間で一意の識別子が必要です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Guid">
          <source>Such an identifier has a very low probability of being duplicated.</source>
          <target state="translated">このような識別子では、重複する可能性は非常に低いがします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Guid">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType&gt;</ph> class to assign a GUID to an interface and to a user-defined class.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType&gt;</ph>クラス GUID とに割り当てるインターフェイス ユーザー定義のクラスをします。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Guid">
          <source>It retrieves the value of the GUID by calling the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph> method, and compares it with two other GUIDs to determine whether they are equal.</source>
          <target state="translated">呼び出すことによって、GUID の値を取得、<ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A&gt;</ph>メソッド、し、それらが等しいかどうかを決定するその他の 2 つの Guid と比較します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Guid">
          <source>Note that the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GuidAttribute&gt;</ph> attribute is typically used in an application to expose a type to COM.</source>
          <target state="translated">なお、 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GuidAttribute&gt;</ph> com 型を公開するアプリケーションで属性が通常使用されます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Guid">
          <source>If you compile this example, you can run the <bpt id="p1">[</bpt>Assembly Registration tool (Regasm.exe)<ept id="p1">](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)</ept> on the generated assembly to create registry (.reg) and type library (.tlb) files.</source>
          <target state="translated">この例をコンパイルする場合は、実行、<bpt id="p1">[</bpt>アセンブリ登録ツール (Regasm.exe)<ept id="p1">](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)</ept>レジストリ (.reg) を作成し、タイプ ライブラリ (.tlb) ファイルに生成されたアセンブリでします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Guid">
          <source>The .reg file can be used to register the coclass in the registry, and the .tlb file can provide metadata for COM interop.</source>
          <target state="translated">.Reg ファイルは、レジストリで、コクラスを登録するために使用できます、.tlb ファイルは、COM 相互運用機能のメタデータを提供できます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Guid">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 構造体の新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Byte[])">
          <source>A 16-element byte array containing values with which to initialize the GUID.</source>
          <target state="translated">GUID を初期化するための値を含む 16 要素のバイト配列。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> structure by using the specified array of bytes.</source>
          <target state="translated">指定したバイト配列を使用して、<ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 構造体の新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="b" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="b" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="b" /&gt;</ph> is not 16 bytes long.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="b" /&gt;</ph> の長さが 16 バイトではありません。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>A string that contains a GUID in one of the following formats ("d" represents a hexadecimal digit whose case is ignored):</source>
          <target state="translated">次のいずれかの形式の GUID を保持する文字列 ("d" は、大文字と小文字が区別されない 16 進数の文字を表します)。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>32 contiguous digits:</source>
          <target state="translated">連続する 32 桁:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>dddddddddddddddddddddddddddddddd</source>
          <target state="translated">dddddddddddddddddddddddddddddddd</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>Groups of 8, 4, 4, 4, and 12 digits with hyphens between the groups.</source>
          <target state="translated">間をハイフン (-) で区切った 8 桁、4 桁、4 桁、4 桁、12 桁のグループ。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>The entire GUID can optionally be enclosed in matching braces or parentheses:</source>
          <target state="translated">左右が対応している中かっこや丸かっこで GUID 全体を囲むこともできます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>dddddddd-dddd-dddd-dddd-dddddddddddd</source>
          <target state="translated">dddddddd-dddd-dddd-dddd-dddddddddddd</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>{dddddddd-dddd-dddd-dddd-dddddddddddd}</source>
          <target state="translated">{dddddddd-dddd-dddd-dddd-dddddddddddd}</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>(dddddddd-dddd-dddd-dddd-dddddddddddd)</source>
          <target state="translated">(dddddddd-dddd-dddd-dddd-dddddddddddd)</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>Groups of 8, 4, and 4 digits, and a subset of eight groups of 2 digits, with each group prefixed by "0x" or "0X", and separated by commas.</source>
          <target state="translated">8 桁、4 桁、4 桁のグループと、2 桁のグループ 8 個で構成されるサブセット。各グループは "0x" または "0X" で始まり、コンマで区切ります。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>The entire GUID, as well as the subset, is enclosed in matching braces:</source>
          <target state="translated">GUID 全体およびサブセットは、左右が対応している中かっこで囲みます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>{0xdddddddd, 0xdddd, 0xdddd,{0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd}}</source>
          <target state="translated">{0xdddddddd, 0xdddd, 0xdddd,{0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd}}</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>All braces, commas, and "0x" prefixes are required.</source>
          <target state="translated">中かっこ、コンマ、プリフィックスの "0x" はすべて必須です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>All embedded spaces are ignored.</source>
          <target state="translated">埋め込まれている空白はすべて無視されます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>All leading zeros in a group are ignored.</source>
          <target state="translated">グループの先頭にある 0 はすべて無視されます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>The digits shown in a group are the maximum number of meaningful digits that can appear in that group.</source>
          <target state="translated">各グループの桁数は、そのグループに指定できる最大の有効桁数です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>You can specify from 1 to the number of digits shown for a group.</source>
          <target state="translated">1 から、例で示した各グループの桁の数までを指定できます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>The specified digits are assumed to be the low-order digits of the group.</source>
          <target state="translated">指定した数字は、そのグループの下位の桁と見なされます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> structure by using the value represented by the specified string.</source>
          <target state="translated">指定した文字列で表される値を使用して、<ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 構造体の新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.#ctor(System.String)">
          <source>The alphabetic hexadecimal digits in the <ph id="ph1">`g`</ph> parameter can be uppercase or lowercase.</source>
          <target state="translated">アルファベット順の 16 進数字、<ph id="ph1">`g`</ph>パラメーターは、大文字と小文字を使用できます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.#ctor(System.String)">
          <source>For example, the following strings represent the same GUID:</source>
          <target state="translated">たとえば、次の文字列は、同じ GUID を表します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.#ctor(System.String)">
          <source>"ca761232ed4211cebacd00aa0057b223"</source>
          <target state="translated">"ca761232ed4211cebacd00aa0057b223"</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.#ctor(System.String)">
          <source>"CA761232-ED42-11CE-BACD-00AA0057B223"</source>
          <target state="translated">"CA761232-ED42-11CE-BACD-00AA0057B223"</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.#ctor(System.String)">
          <source>"{CA761232-ED42-11CE-BACD-00AA0057B223}"</source>
          <target state="translated">"{CA761232-ED42-11CE-BACD-00AA0057B223}"</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.#ctor(System.String)">
          <source>"(CA761232-ED42-11CE-BACD-00AA0057B223)"</source>
          <target state="translated">"(CA761232-ED42-11CE-BACD-00AA0057B223)"</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.#ctor(System.String)">
          <source>"{0xCA761232, 0xED42, 0x11CE, {0xBA, 0xCD, 0x00, 0xAA, 0x00, 0x57, 0xB2, 0x23}}"</source>
          <target state="translated">"{0xCA761232、0xED42、0x11CE、{0xBA、0 xcd、0x00、0xAA、0x00、0x57、0xB2、0x23}}"</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.#ctor(System.String)">
          <source>The following example passes each string listed in the Remarks section to the <ph id="ph1">&lt;xref:System.Guid.%23ctor%28System.String%29&gt;</ph> constructor.</source>
          <target state="translated">次の例は、「解説」セクションに記載の各文字列を渡します、<ph id="ph1">&lt;xref:System.Guid.%23ctor%28System.String%29&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="g" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="g" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>The format of <ph id="ph1">&lt;paramref name="g" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="g" /&gt;</ph> の形式が無効です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.String)">
          <source>The format of <ph id="ph1">&lt;paramref name="g" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="g" /&gt;</ph> の形式が無効です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])">
          <source>The first 4 bytes of the GUID.</source>
          <target state="translated">GUID の最初の 4 バイト。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])">
          <source>The next 2 bytes of the GUID.</source>
          <target state="translated">GUID の次の 2 バイト。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])">
          <source>The next 2 bytes of the GUID.</source>
          <target state="translated">GUID の次の 2 バイト。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])">
          <source>The remaining 8 bytes of the GUID.</source>
          <target state="translated">GUID の残りの 8 バイト。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> structure by using the specified integers and byte array.</source>
          <target state="translated">指定した整数とバイト配列を使用して、<ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 構造体の新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])">
          <source><ph id="ph1">`Guid(1,2,3,new byte[]{0,1,2,3,4,5,6,7})`</ph> creates a <ph id="ph2">&lt;xref:System.Guid&gt;</ph> that corresponds to "00000001-0002-0003-0001-020304050607".</source>
          <target state="translated"><ph id="ph1">`Guid(1,2,3,new byte[]{0,1,2,3,4,5,6,7})`</ph> 作成、 <ph id="ph2">&lt;xref:System.Guid&gt;</ph> 「00000001-0002-0003-0001-020304050607」に対応します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="d" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="d" /&gt;</ph> is not 8 bytes long.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> の長さが 8 バイトではありません。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The first 4 bytes of the GUID.</source>
          <target state="translated">GUID の最初の 4 バイト。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The next 2 bytes of the GUID.</source>
          <target state="translated">GUID の次の 2 バイト。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The next 2 bytes of the GUID.</source>
          <target state="translated">GUID の次の 2 バイト。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The next byte of the GUID.</source>
          <target state="translated">GUID の次のバイト。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The next byte of the GUID.</source>
          <target state="translated">GUID の次のバイト。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The next byte of the GUID.</source>
          <target state="translated">GUID の次のバイト。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The next byte of the GUID.</source>
          <target state="translated">GUID の次のバイト。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The next byte of the GUID.</source>
          <target state="translated">GUID の次のバイト。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The next byte of the GUID.</source>
          <target state="translated">GUID の次のバイト。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The next byte of the GUID.</source>
          <target state="translated">GUID の次のバイト。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The next byte of the GUID.</source>
          <target state="translated">GUID の次のバイト。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> structure by using the specified integers and bytes.</source>
          <target state="translated">指定した整数とバイトを使用して、<ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 構造体の新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>Specifying individual bytes in this manner can be used to circumvent byte order restrictions (big-endian or little-endian byte order) on particular types of computers.</source>
          <target state="translated">この方法で個々 のバイト数を指定することは、特定の種類のコンピューターのバイト順への制約 (ビッグ エンディアンまたはリトル エンディアン バイト順) を回避するため使用できます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The following example creates a GUID whose string representation is "0000000a-000b-000c-0001-020304050607".</source>
          <target state="translated">次の例では、GUID の文字列表現は、"0000000a-000b-000c-0001-020304050607"を作成します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The first 4 bytes of the GUID.</source>
          <target state="translated">GUID の最初の 4 バイト。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The next 2 bytes of the GUID.</source>
          <target state="translated">GUID の次の 2 バイト。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The next 2 bytes of the GUID.</source>
          <target state="translated">GUID の次の 2 バイト。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The next byte of the GUID.</source>
          <target state="translated">GUID の次のバイト。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The next byte of the GUID.</source>
          <target state="translated">GUID の次のバイト。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The next byte of the GUID.</source>
          <target state="translated">GUID の次のバイト。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The next byte of the GUID.</source>
          <target state="translated">GUID の次のバイト。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The next byte of the GUID.</source>
          <target state="translated">GUID の次のバイト。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The next byte of the GUID.</source>
          <target state="translated">GUID の次のバイト。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The next byte of the GUID.</source>
          <target state="translated">GUID の次のバイト。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>The next byte of the GUID.</source>
          <target state="translated">GUID の次のバイト。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> structure by using the specified unsigned integers and bytes.</source>
          <target state="translated">指定した符号なし整数とバイトを使用して、<ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 構造体の新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>Specifying the bytes in this manner avoids endianness issues.</source>
          <target state="translated">この方法で、バイト数を指定することによりエンディアン問題を回避します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
          <source>Guid(0xa,0xb,0xc,0,1,2,3,4,5,6,7) creates a <ph id="ph1">&lt;xref:System.Guid&gt;</ph> that corresponds to "0000000a-000b-000c-0001-020304050607".</source>
          <target state="translated">Guid(0xa,0xb,0xc,0,1,2,3,4,5,6,7) を作成、 <ph id="ph1">&lt;xref:System.Guid&gt;</ph> "0000000a-000b-000c-0001-020304050607"に対応します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="T:System.Guid">
          <source>Compares this instance to a specified object or <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> and returns an indication of their relative values.</source>
          <target state="translated">指定したオブジェクトまたは <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> とこのインスタンスを比較し、これらの相対値を示す値を返します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Guid)">
          <source>An object to compare to this instance.</source>
          <target state="translated">このインスタンスと比較するオブジェクト。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Guid)">
          <source>Compares this instance to a specified <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> object and returns an indication of their relative values.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> オブジェクトとこのインスタンスを比較し、これらの相対値を示す値を返します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Guid)">
          <source>A signed number indicating the relative values of this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">このインスタンスと <ph id="ph1">&lt;paramref name="value" /&gt;</ph> の相対値を示す符号付き数値。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Guid)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 戻り値</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Guid)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>説明</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Guid)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 負の整数</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Guid)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスは、<ph id="ph3">&lt;paramref name="value" /&gt;</ph> よりも小さいです。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Guid)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Guid)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is equal to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスは <ph id="ph3">&lt;paramref name="value" /&gt;</ph> と等価です。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Guid)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 正の整数</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Guid)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスは <ph id="ph3">&lt;paramref name="value" /&gt;</ph> よりも大きいです。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Guid)">
          <source>The <ph id="ph1">&lt;xref:System.Guid.CompareTo%2A&gt;</ph> method compares the GUIDs as if they were values provided to the <ph id="ph2">&lt;xref:System.Guid.%23ctor%28System.Int32%2CSystem.Int16%2CSystem.Int16%2CSystem.Byte%5B%5D%29&gt;</ph> constructor, as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Guid.CompareTo%2A&gt;</ph>メソッド場合に指定された値と同様に、Guid を比較し、<ph id="ph2">&lt;xref:System.Guid.%23ctor%28System.Int32%2CSystem.Int16%2CSystem.Int16%2CSystem.Byte%5B%5D%29&gt;</ph>コンス トラクターで、次のようにします。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Guid)">
          <source>It compares the <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> values, and returns a result if they are unequal.</source>
          <target state="translated">比較、 <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> 、値し、等しくない場合、結果を返します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Guid)">
          <source>If they are equal, it performs the next comparison.</source>
          <target state="translated">これらが等しい場合は、次の比較を行います。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Guid)">
          <source>It compares the first <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> values, and returns a result if they are unequal.</source>
          <target state="translated">最初の比較<ph id="ph1">&lt;xref:System.UInt16&gt;</ph>、値し、等しくない場合、結果を返します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Guid)">
          <source>If they are equal, it performs the next comparison.</source>
          <target state="translated">これらが等しい場合は、次の比較を行います。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Guid)">
          <source>It compares the second <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> values, and returns a result if they are unequal.</source>
          <target state="translated">2 番目と比較<ph id="ph1">&lt;xref:System.UInt16&gt;</ph>、値し、等しくない場合、結果を返します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Guid)">
          <source>If they are equal, it performs the next comparison.</source>
          <target state="translated">これらが等しい場合は、次の比較を行います。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Guid)">
          <source>If performs a byte-by-byte comparison of the next eight <ph id="ph1">&lt;xref:System.Byte&gt;</ph> values.</source>
          <target state="translated">場合の次の 8 バイトで比較を実行<ph id="ph1">&lt;xref:System.Byte&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Guid)">
          <source>When it encounters the first unequal pair, it returns the result.</source>
          <target state="translated">最初の等しくないペアが検出されると、結果を返します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Guid)">
          <source>Otherwise, it returns 0 to indicate that the two <ph id="ph1">&lt;xref:System.Guid&gt;</ph> values are equal.</source>
          <target state="translated">示す 0 を返しますそれ以外の場合、2 つ<ph id="ph1">&lt;xref:System.Guid&gt;</ph>値が等しい。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Guid)">
          <source>Note that the final eight bytes appear in the string representation of a <ph id="ph1">&lt;xref:System.Guid&gt;</ph> in reverse order, from low byte to high byte.</source>
          <target state="translated">最後の 8 バイトがの文字列形式に表示されるメモ、<ph id="ph1">&lt;xref:System.Guid&gt;</ph>下位バイトを上位バイトから逆の順序で。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Guid)">
          <source>For example, in the string representation of the <ph id="ph1">&lt;xref:System.Guid&gt;</ph> value "01e75c83-c6f5-4192-b57e-7427cec5560d", the final eight bytes are "b57e-7427cec5560d."</source>
          <target state="translated">などの文字列形式で、<ph id="ph1">&lt;xref:System.Guid&gt;</ph>値"01e75c83-c6f5-4192-b57e-7427cec5560d"最後の 8 バイトは、"b57e-7427cec5560d"。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Guid)">
          <source>In other words, the final eight bytes are compared on a byte-by-byte basis from left to right starting with 0xb5.</source>
          <target state="translated">つまり、最後の 8 バイトは、左から右から始まる 0xb5 をバイトでごとに比較されます。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Guid)">
          <source>If two GUIDs have equal values for a component, the method compares the next component.</source>
          <target state="translated">2 つの Guid のコンポーネントの値に等しい場合は、メソッドは、次のコンポーネントを比較します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Guid)">
          <source>When it finds a component whose values are unequal, it returns the result.</source>
          <target state="translated">値が等しくないコンポーネントを検出すると、結果を返します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Guid)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface and performs slightly better than the <ph id="ph2">&lt;xref:System.Guid.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method because it does not have to convert the <ph id="ph3">`value`</ph> parameter to a <ph id="ph4">&lt;xref:System.Guid&gt;</ph> value.</source>
          <target state="translated">このメソッドを実装する、<ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph>インターフェイスし、実行よりもわずかに向上、<ph id="ph2">&lt;xref:System.Guid.CompareTo%2A?displayProperty=nameWithType&gt;</ph>メソッドに変換があるないため、<ph id="ph3">`value`</ph>パラメーターを<ph id="ph4">&lt;xref:System.Guid&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Guid)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Guid.CompareTo%28System.Guid%29&gt;</ph> method to compare a GUID value with two similar GUID values.</source>
          <target state="translated">次の例では、 <ph id="ph1">&lt;xref:System.Guid.CompareTo%28System.Guid%29&gt;</ph> 2 のような GUID 値を持つ GUID 値を比較するメソッド。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Object)">
          <source>An object to compare, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">比較対象のオブジェクト、または <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Object)">
          <source>Compares this instance to a specified object and returns an indication of their relative values.</source>
          <target state="translated">指定したオブジェクトとこのインスタンスを比較し、これらの相対値を示す値を返します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Object)">
          <source>A signed number indicating the relative values of this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">このインスタンスと <ph id="ph1">&lt;paramref name="value" /&gt;</ph> の相対値を示す符号付き数値。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 戻り値</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>説明</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 負の整数</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスは、<ph id="ph3">&lt;paramref name="value" /&gt;</ph> よりも小さいです。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is equal to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスは <ph id="ph3">&lt;paramref name="value" /&gt;</ph> と等価です。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 正の整数</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="value" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスが <ph id="ph3">&lt;paramref name="value" /&gt;</ph> より大きいか、<ph id="ph4">&lt;paramref name="value" /&gt;</ph> が <ph id="ph5">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Object)">
          <source>The <ph id="ph1">`value`</ph> parameter must be <ph id="ph2">`null`</ph> or an instance of <ph id="ph3">&lt;xref:System.Guid&gt;</ph>; otherwise, an exception is thrown.</source>
          <target state="translated"><ph id="ph1">`value`</ph>パラメーターでなければなりません<ph id="ph2">`null`</ph>またはのインスタンス<ph id="ph3">&lt;xref:System.Guid&gt;</ph>です。 それ以外の場合、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Object)">
          <source>Any instance of <ph id="ph1">&lt;xref:System.Guid&gt;</ph>, regardless of its value, is considered greater than <ph id="ph2">`null`</ph>.</source>
          <target state="translated">任意のインスタンス<ph id="ph1">&lt;xref:System.Guid&gt;</ph>、その値に関係なくが大きいと見なされますより<ph id="ph2">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Guid.CompareTo%2A&gt;</ph> method compares the GUIDs as if they were values provided to the <ph id="ph2">&lt;xref:System.Guid.%23ctor%2A&gt;</ph> constructor, as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Guid.CompareTo%2A&gt;</ph>メソッド場合に指定された値と同様に、Guid を比較し、<ph id="ph2">&lt;xref:System.Guid.%23ctor%2A&gt;</ph>コンス トラクターで、次のようにします。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Object)">
          <source>It compares the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> values, and returns a result if they are unequal.</source>
          <target state="translated">比較、 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 、値し、等しくない場合、結果を返します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Object)">
          <source>If they are equal, it performs the next comparison.</source>
          <target state="translated">これらが等しい場合は、次の比較を行います。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Object)">
          <source>It compares the first <ph id="ph1">&lt;xref:System.Int16&gt;</ph> values, and returns a result if they are unequal.</source>
          <target state="translated">最初の比較<ph id="ph1">&lt;xref:System.Int16&gt;</ph>、値し、等しくない場合、結果を返します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Object)">
          <source>If they are equal, it performs the next comparison.</source>
          <target state="translated">これらが等しい場合は、次の比較を行います。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Object)">
          <source>It compares the second <ph id="ph1">&lt;xref:System.Int16&gt;</ph> values, and returns a result if they are unequal.</source>
          <target state="translated">2 番目と比較<ph id="ph1">&lt;xref:System.Int16&gt;</ph>、値し、等しくない場合、結果を返します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Object)">
          <source>If they are equal, it performs the next comparison.</source>
          <target state="translated">これらが等しい場合は、次の比較を行います。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Object)">
          <source>If performs a byte-by-byte comparison of the next eight <ph id="ph1">&lt;xref:System.Byte&gt;</ph> values.</source>
          <target state="translated">場合の次の 8 バイトで比較を実行<ph id="ph1">&lt;xref:System.Byte&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Object)">
          <source>When it encounters the first unequal pair, it returns the result.</source>
          <target state="translated">最初の等しくないペアが検出されると、結果を返します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Object)">
          <source>Otherwise, it returns 0 to indicate that the two <ph id="ph1">&lt;xref:System.Guid&gt;</ph> values are equal.</source>
          <target state="translated">示す 0 を返しますそれ以外の場合、2 つ<ph id="ph1">&lt;xref:System.Guid&gt;</ph>値が等しい。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Object)">
          <source>If two GUIDs have equal values for a component, the method compares the next component.</source>
          <target state="translated">2 つの Guid のコンポーネントの値に等しい場合は、メソッドは、次のコンポーネントを比較します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Object)">
          <source>When it finds a component whose values are unequal, it returns the result.</source>
          <target state="translated">値が等しくないコンポーネントを検出すると、結果を返します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Object)">
          <source>Note that the final eight bytes appear in the string representation of a <ph id="ph1">&lt;xref:System.Guid&gt;</ph> in reverse order, from low byte to high byte.</source>
          <target state="translated">最後の 8 バイトがの文字列形式に表示されるメモ、<ph id="ph1">&lt;xref:System.Guid&gt;</ph>下位バイトを上位バイトから逆の順序で。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Object)">
          <source>For example, in the string representation of the <ph id="ph1">&lt;xref:System.Guid&gt;</ph> value "01e75c83-c6f5-4192-b57e-7427cec5560d", the final eight bytes are "b57e-7427cec5560d."</source>
          <target state="translated">などの文字列形式で、<ph id="ph1">&lt;xref:System.Guid&gt;</ph>値"01e75c83-c6f5-4192-b57e-7427cec5560d"最後の 8 バイトは、"b57e-7427cec5560d"。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Object)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GuidAttribute&gt;</ph> attribute to assign a GUID to a class.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Runtime.InteropServices.GuidAttribute&gt;</ph>属性をクラスには GUID を割り当てます。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Object)">
          <source>It retrieves the value of this GUID by calling the <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A?displayProperty=nameWithType&gt;</ph> method and passing the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GuidAttribute.Value%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.Runtime.InteropServices.GuidAttribute&gt;</ph> object to the <ph id="ph4">&lt;xref:System.Guid.Parse%2A&gt;</ph> method.</source>
          <target state="translated">呼び出してこの GUID の値を取得、<ph id="ph1">&lt;xref:System.Attribute.GetCustomAttribute%2A?displayProperty=nameWithType&gt;</ph>メソッドと受け渡し、 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GuidAttribute.Value%2A&gt;</ph> 、返されたプロパティ<ph id="ph3">&lt;xref:System.Runtime.InteropServices.GuidAttribute&gt;</ph>オブジェクトを<ph id="ph4">&lt;xref:System.Guid.Parse%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.CompareTo(System.Object)">
          <source>Then it compares that GUID with an array of values.</source>
          <target state="translated">値の配列でその GUID を比較します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Guid.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph> ではありません。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="F:System.Guid.Empty">
          <source>A read-only instance of the <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> structure whose value is all zeros.</source>
          <target state="translated">値がすべて 0 である <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 構造体の読み取り専用インスタンス。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Guid.Empty">
          <source>You can compare a GUID with the value of the <ph id="ph1">&lt;xref:System.Guid.Empty?displayProperty=nameWithType&gt;</ph> field to determine whether a GUID is non-zero.</source>
          <target state="translated">値の GUID を比較することができます、<ph id="ph1">&lt;xref:System.Guid.Empty?displayProperty=nameWithType&gt;</ph>フィールド GUID がゼロ以外であるかどうかを判別します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Guid.Empty">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Guid.op_Equality%2A&gt;</ph> operator to compare two GUID values with <ph id="ph2">&lt;xref:System.Guid.Empty?displayProperty=nameWithType&gt;</ph> to determine whether they consist exclusively of zeros.</source>
          <target state="translated">次の例で、 <ph id="ph1">&lt;xref:System.Guid.op_Equality%2A&gt;</ph> 2 つの GUID 値を比較する演算子<ph id="ph2">&lt;xref:System.Guid.Empty?displayProperty=nameWithType&gt;</ph>にゼロのとは排他的に構成されているかどうかを判定します。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="T:System.Guid">
          <source>Returns a value that indicates whether two instances of <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> represent the same value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> の 2 つのインスタンスが同じ値を表しているかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Guid.Equals(System.Guid)">
          <source>An object to compare to this instance.</source>
          <target state="translated">このインスタンスと比較するオブジェクト。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Guid.Equals(System.Guid)">
          <source>Returns a value indicating whether this instance and a specified <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> object represent the same value.</source>
          <target state="translated">このインスタンスと指定した <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> オブジェクトが同じ値を表しているかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Guid.Equals(System.Guid)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="g" /&gt;</ph> is equal to this instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="g" /&gt;</ph> がこのインスタンスと等しい場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Equals(System.Guid)">
          <source>Two <ph id="ph1">&lt;xref:System.Guid&gt;</ph> objects are equal if they have identical byte values.</source>
          <target state="translated">2 つ<ph id="ph1">&lt;xref:System.Guid&gt;</ph>オブジェクトが同一のバイト値がある場合は等しい。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Equals(System.Guid)">
          <source>This method performs slightly better than the <ph id="ph1">&lt;xref:System.Guid.Equals%2A&gt;</ph> method because it does not have to box the <ph id="ph2">`g`</ph> parameter.</source>
          <target state="translated">このメソッドがわずかに実行よりも高く、<ph id="ph1">&lt;xref:System.Guid.Equals%2A&gt;</ph>メソッドがあるないためボックスに、<ph id="ph2">`g`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Guid.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">このインスタンスと比較するオブジェクト。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Guid.Equals(System.Object)">
          <source>Returns a value that indicates whether this instance is equal to a specified object.</source>
          <target state="translated">このインスタンスが、指定されたオブジェクトと等価であるかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Guid.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="o" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.Guid" /&gt;</ph> that has the same value as this instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="o" /&gt;</ph> が、このインスタンスと同じ値を持つ <ph id="ph3">&lt;see cref="T:System.Guid" /&gt;</ph> の場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Equals(System.Object)">
          <source>Two <ph id="ph1">&lt;xref:System.Guid&gt;</ph> objects are equal if they have identical byte values.</source>
          <target state="translated">2 つ<ph id="ph1">&lt;xref:System.Guid&gt;</ph>オブジェクトが同一のバイト値がある場合は等しい。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Guid.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">このインスタンスのハッシュ コードを返します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Guid.GetHashCode">
          <source>The hash code for this instance.</source>
          <target state="translated">対象のインスタンスのハッシュ コード。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Guid.NewGuid">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 構造体の新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Guid.NewGuid">
          <source>A new GUID object.</source>
          <target state="translated">新しい GUID オブジェクト。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.NewGuid">
          <source>This is a convenient <ph id="ph1">`static`</ph> method that you can call to get a new <ph id="ph2">&lt;xref:System.Guid&gt;</ph>.</source>
          <target state="translated">これは便利な<ph id="ph1">`static`</ph>メソッドを呼び出すことができる新しいを取得する<ph id="ph2">&lt;xref:System.Guid&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.NewGuid">
          <source>The method wraps a call to the Windows <bpt id="p1">[</bpt>CoCreateGuid<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms688568.aspx)</ept> function.</source>
          <target state="translated">メソッドは、Windows への呼び出しをラップする<bpt id="p1">[</bpt>CoCreateGuid<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms688568.aspx)</ept>関数。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.NewGuid">
          <source>The returned <ph id="ph1">&lt;xref:System.Guid&gt;</ph> is guaranteed to not equal <ph id="ph2">&lt;xref:System.Guid.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">返された<ph id="ph1">&lt;xref:System.Guid&gt;</ph>に等しくないことが保証<ph id="ph2">&lt;xref:System.Guid.Empty?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.NewGuid">
          <source>The following code example creates and displays the values of two <ph id="ph1">&lt;xref:System.Guid&gt;</ph> objects.</source>
          <target state="translated">次のコード例を作成し、2 つの値を表示<ph id="ph1">&lt;xref:System.Guid&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Guid.op_Equality(System.Guid,System.Guid)">
          <source>The first object to compare.</source>
          <target state="translated">比較する最初のオブジェクト。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Guid.op_Equality(System.Guid,System.Guid)">
          <source>The second object to compare.</source>
          <target state="translated">比較する 2 番目のオブジェクト。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Guid.op_Equality(System.Guid,System.Guid)">
          <source>Indicates whether the values of two specified <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> objects are equal.</source>
          <target state="translated">2 つの指定された <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> オブジェクトの値が等しいかどうかを示します。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Guid.op_Equality(System.Guid,System.Guid)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="a" /&gt;</ph> and <ph id="ph3">&lt;paramref name="b" /&gt;</ph> are equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> と <ph id="ph2">&lt;paramref name="a" /&gt;</ph> が等しい場合は <ph id="ph3">&lt;paramref name="b" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.op_Equality(System.Guid,System.Guid)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Guid.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">この演算子を同等の方法は、します。 <ph id="ph1">&lt;xref:System.Guid.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.op_Equality(System.Guid,System.Guid)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Guid.op_Equality%2A&gt;</ph> operator to compare two GUID values with <ph id="ph2">&lt;xref:System.Guid.Empty?displayProperty=nameWithType&gt;</ph> to determine whether they consist exclusively of zeros.</source>
          <target state="translated">次の例で、 <ph id="ph1">&lt;xref:System.Guid.op_Equality%2A&gt;</ph> 2 つの GUID 値を比較する演算子<ph id="ph2">&lt;xref:System.Guid.Empty?displayProperty=nameWithType&gt;</ph>にゼロのとは排他的に構成されているかどうかを判定します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Guid.op_Inequality(System.Guid,System.Guid)">
          <source>The first object to compare.</source>
          <target state="translated">比較する最初のオブジェクト。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Guid.op_Inequality(System.Guid,System.Guid)">
          <source>The second object to compare.</source>
          <target state="translated">比較する 2 番目のオブジェクト。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Guid.op_Inequality(System.Guid,System.Guid)">
          <source>Indicates whether the values of two specified <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> objects are not equal.</source>
          <target state="translated">2 つの指定された <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> オブジェクトの値が等しくないかどうかを示します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Guid.op_Inequality(System.Guid,System.Guid)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="a" /&gt;</ph> and <ph id="ph3">&lt;paramref name="b" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="a" /&gt;</ph> と <ph id="ph3">&lt;paramref name="b" /&gt;</ph> が等しくない場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.op_Inequality(System.Guid,System.Guid)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Guid.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">この演算子を同等の方法は、します。 <ph id="ph1">&lt;xref:System.Guid.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Guid.Parse(System.String)">
          <source>The string to convert.</source>
          <target state="translated">変換する文字列。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Guid.Parse(System.String)">
          <source>Converts the string representation of a GUID to the equivalent <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> structure.</source>
          <target state="translated">GUID の文字列形式を、等価の <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 構造体に変換します。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Guid.Parse(System.String)">
          <source>A structure that contains the value that was parsed.</source>
          <target state="translated">解析された値を格納する構造体。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Guid.Parse%2A&gt;</ph> method trims any leading or trailing white space from <ph id="ph2">`input`</ph> and converts the string representation of a GUID to a <ph id="ph3">&lt;xref:System.Guid&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Guid.Parse%2A&gt;</ph>メソッドからの先頭または末尾にある空白文字をトリムする<ph id="ph2">`input`</ph>に GUID の文字列形式に変換し、<ph id="ph3">&lt;xref:System.Guid&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source>This method can convert strings in any of the five formats produced by the <ph id="ph1">&lt;xref:System.Guid.ToString%28System.String%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Guid.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> methods, as shown in the following table.</source>
          <target state="translated">このメソッドは、によって生成される 5 つの形式のいずれかで文字列を変換できる、<ph id="ph1">&lt;xref:System.Guid.ToString%28System.String%29&gt;</ph>と<ph id="ph2">&lt;xref:System.Guid.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph>メソッドは、次の表に示すようにします。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source>Specifier</source>
          <target state="translated">指定子</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source>Format</source>
          <target state="translated">形式</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source>32 digits</source>
          <target state="translated">32 桁の数字</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source>00000000000000000000000000000000</source>
          <target state="translated">00000000000000000000000000000000</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source>32 digits separated by hyphens</source>
          <target state="translated">ハイフンで区切られた 32 桁の数字</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source>00000000-0000-0000-0000-000000000000</source>
          <target state="translated">00000000-0000-0000-0000-000000000000</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source>32 digits separated by hyphens, enclosed in braces</source>
          <target state="translated">中かっこで囲まれ、ハイフンで区切られた 32 桁</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source>{00000000-0000-0000-0000-000000000000}</source>
          <target state="translated">{00000000-0000-0000-0000-000000000000}</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source>32 digits separated by hyphens, enclosed in parentheses</source>
          <target state="translated">かっこで囲まれた、ハイフンで区切られた 32 桁</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source>(00000000-0000-0000-0000-000000000000)</source>
          <target state="translated">(00000000-0000-0000-0000-000000000000)</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source>Four hexadecimal values enclosed in braces, where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces</source>
          <target state="translated">4 番目の値が中かっこで囲まれた 8 つの 16 進値のサブセットをかっこで囲まれた 4 つの 16 進値</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source>{0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}</source>
          <target state="translated">{0x00000000、0x0000、0x0000、{0x00、0x00、0x00、0x00、0x00、0x00、0x00、0x00}}</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source>The method throws a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> if it is unable to successfully parse the string.</source>
          <target state="translated">メソッドをスロー、<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>が正常に文字列を解析できない場合。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source>Here are some of the reasons why this might occur include:</source>
          <target state="translated">ここでは、なぜこれが発生する理由のいくつか含まれます。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source><ph id="ph1">`input`</ph> contains characters that are not part of the hexadecimal character set.</source>
          <target state="translated"><ph id="ph1">`input`</ph> 16 進数の文字セットの一部ではない文字が含まれています。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source><ph id="ph1">`input`</ph> has too many or too few numeric characters.</source>
          <target state="translated"><ph id="ph1">`input`</ph> 多すぎるか少なすぎますの数値文字が含まれています。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source><ph id="ph1">`input`</ph> has too many or too few of the non-numeric characters appropriate for a particular format.</source>
          <target state="translated"><ph id="ph1">`input`</ph> 多すぎるか、特定の形式の適切な数値以外の文字が少なすぎます。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source><ph id="ph1">`input`</ph> is not in one of the formats recognized by the <ph id="ph2">&lt;xref:System.Guid.ToString%2A&gt;</ph> method and listed in the previous table.</source>
          <target state="translated"><ph id="ph1">`input`</ph> によって認識される形式のいずれかに含まれない、<ph id="ph2">&lt;xref:System.Guid.ToString%2A&gt;</ph>メソッドであり、前の表に表示します。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Guid.TryParse%2A&gt;</ph> method to catch any unsuccessful parse operations without having to handle an exception.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Guid.TryParse%2A&gt;</ph>例外を処理することがなく、解析が失敗した操作をキャッチします。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.Parse(System.String)">
          <source>The following example creates a new GUID, converts it to three separate string representations by calling the <ph id="ph1">&lt;xref:System.Guid.ToString%28System.String%29&gt;</ph> method with the "B", "D", and "X" format specifiers, and then calls the <ph id="ph2">&lt;xref:System.Guid.Parse%2A&gt;</ph> method to convert the strings back to <ph id="ph3">&lt;xref:System.Guid&gt;</ph> values.</source>
          <target state="translated">次の例は、新しい GUID を作成、呼び出すことによって次の 3 つの個別の文字列形式に変換、 <ph id="ph1">&lt;xref:System.Guid.ToString%28System.String%29&gt;</ph> 、"B"、"D"と"X"書式指定子と呼び出すメソッド、 <ph id="ph2">&lt;xref:System.Guid.Parse%2A&gt;</ph> 、文字列に変換するメソッドが戻ります<ph id="ph3">&lt;xref:System.Guid&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Guid.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Guid.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> is not in a recognized format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> が、認識されている形式ではありません。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>The GUID to convert.</source>
          <target state="translated">変換対象の GUID。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>One of the following specifiers that indicates the exact format to use when interpreting <bpt id="p1">&lt;c&gt;</bpt>input<ept id="p1">&lt;/c&gt;</ept>: "N", "D", "B", "P", or "X".</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>input<ept id="p1">&lt;/c&gt;</ept> を解釈するときに使用する正確な形式を示す、"N"、"D"、"B"、"P"、"X" のいずれかの指定子。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>Converts the string representation of a GUID to the equivalent <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> structure, provided that the string is in the specified format.</source>
          <target state="translated">文字列が指定の形式であれば、GUID の文字列形式を等価の <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 構造体に変換します。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>A structure that contains the value that was parsed.</source>
          <target state="translated">解析された値を格納する構造体。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Guid.ParseExact%2A&gt;</ph> method requires the string to convert to be exactly in the format specified by the <ph id="ph2">`format`</ph> parameter, after leading and trailing white-space characters are removed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Guid.ParseExact%2A&gt;</ph>メソッドで指定された形式で正確に変換する文字列が必要です、<ph id="ph2">`format`</ph>先頭および末尾の空白文字が削除された後のパラメーターです。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>The following table shows the accepted format specifiers for the <ph id="ph1">`format`</ph> parameter.</source>
          <target state="translated">次の表は、承認済みの書式指定子、<ph id="ph1">`format`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>"0" represents a digit; hyphens ("-"), braces ("{", "}"), and parentheses ("(", ")") appear as shown.</source>
          <target state="translated">「0」を表す 1 桁の数字です。ハイフン ("-")、中かっこ ("{"、"}")、およびかっこ (「(",」)") ように表示されます。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>Specifier</source>
          <target state="translated">指定子</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>Format of the <ph id="ph1">`input`</ph> parameter</source>
          <target state="translated">書式設定、<ph id="ph1">`input`</ph>パラメーター</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>N</source>
          <target state="translated">N</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>32 digits:</source>
          <target state="translated">32 桁:</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>00000000000000000000000000000000</source>
          <target state="translated">00000000000000000000000000000000</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>D</source>
          <target state="translated">D</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>32 digits separated by hyphens:</source>
          <target state="translated">ハイフンで区切られた 32 桁:</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>00000000-0000-0000-0000-000000000000</source>
          <target state="translated">00000000-0000-0000-0000-000000000000</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>B</source>
          <target state="translated">B</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>32 digits separated by hyphens, enclosed in braces:</source>
          <target state="translated">中かっこで囲まれ、ハイフンで区切られた 32 桁:</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>{00000000-0000-0000-0000-000000000000}</source>
          <target state="translated">{00000000-0000-0000-0000-000000000000}</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>P</source>
          <target state="translated">P</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>32 digits separated by hyphens, enclosed in parentheses:</source>
          <target state="translated">かっこで囲まれ、ハイフンで区切られた 32 桁:</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>(00000000-0000-0000-0000-000000000000)</source>
          <target state="translated">(00000000-0000-0000-0000-000000000000)</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>X</source>
          <target state="translated">x</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>Four hexadecimal values enclosed in braces, where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces:</source>
          <target state="translated">4 番目の値が中かっこで囲まれた 8 つの 16 進値のサブセットをかっこで囲まれた 4 つの 16 進値:</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>{0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}</source>
          <target state="translated">{0x00000000、0x0000、0x0000、{0x00、0x00、0x00、0x00、0x00、0x00、0x00、0x00}}</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Guid.ToString%28System.String%29&gt;</ph> method with each of the supported format specifiers to generate an array of strings that represent a single GUID.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Guid.ToString%28System.String%29&gt;</ph>各を 1 つの GUID を表す文字列の配列を生成するサポートされている書式指定子を持つメソッドです。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source>These are then passed to the <ph id="ph1">&lt;xref:System.Guid.ParseExact%2A&gt;</ph> method, which successfully parses only the string that conforms to the "B" format specifier.</source>
          <target state="translated">渡されますし、 <ph id="ph1">&lt;xref:System.Guid.ParseExact%2A&gt;</ph> "B"書式指定子に準拠している文字列だけを正常に解析するメソッド。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> or <ph id="ph2">&lt;paramref name="format" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> または <ph id="ph2">&lt;paramref name="format" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Guid.ParseExact(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> is not in the format specified by <ph id="ph2">&lt;paramref name="format" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> が <ph id="ph2">&lt;paramref name="format" /&gt;</ph> で指定された形式ではありません。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Guid.ToByteArray">
          <source>Returns a 16-element byte array that contains the value of this instance.</source>
          <target state="translated">このインスタンスの値を格納する 16 要素のバイト配列を返します。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Guid.ToByteArray">
          <source>A 16-element byte array.</source>
          <target state="translated">16 要素のバイト配列。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToByteArray">
          <source>You can use the byte array returned by this method to round-trip a <ph id="ph1">&lt;xref:System.Guid&gt;</ph> value by calling the <ph id="ph2">&lt;xref:System.Guid.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor.</source>
          <target state="translated">ラウンドト リップにこのメソッドによって返されるバイト配列を使用することができます、<ph id="ph1">&lt;xref:System.Guid&gt;</ph>値を呼び出して、<ph id="ph2">&lt;xref:System.Guid.%23ctor%28System.Byte%5B%5D%29&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToByteArray">
          <source>Note that the order of bytes in the returned byte array is different from the string representation of a <ph id="ph1">&lt;xref:System.Guid&gt;</ph> value.</source>
          <target state="translated">返されるバイト配列内のバイトの順序の文字列形式と異なることに注意してください、<ph id="ph1">&lt;xref:System.Guid&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToByteArray">
          <source>The order of the beginning four-byte group and the next two two-byte groups is reversed, whereas the order of the last two-byte group and the closing six-byte group is the same.</source>
          <target state="translated">最後の 2 バイト グループと終わり 6 バイトのグループの順序は同じ先頭 4 バイト グループと 2 バイトの次の 2 つのグループの順序を反転します。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToByteArray">
          <source>The example provides an illustration.</source>
          <target state="translated">具体的な例を次に示します。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToByteArray">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Guid.NewGuid%2A&gt;</ph> method to create a <ph id="ph2">&lt;xref:System.Guid&gt;</ph> value, and then calls the <ph id="ph3">&lt;xref:System.Guid.ToByteArray%2A&gt;</ph> method to represent the <ph id="ph4">&lt;xref:System.Guid&gt;</ph> value as a byte array.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Guid.NewGuid%2A&gt;</ph>メソッドを作成、<ph id="ph2">&lt;xref:System.Guid&gt;</ph>値を呼び出し、続いて、<ph id="ph3">&lt;xref:System.Guid.ToByteArray%2A&gt;</ph>メソッドを表す、<ph id="ph4">&lt;xref:System.Guid&gt;</ph>バイト配列として値。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToByteArray">
          <source>It then displays both values to the console.</source>
          <target state="translated">両方の値がコンソールに表示されます。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToByteArray">
          <source>Finally, it instantiates a new <ph id="ph1">&lt;xref:System.Guid&gt;</ph> value from the byte array and calls its <ph id="ph2">&lt;xref:System.Guid.Equals%28System.Guid%29&gt;</ph> method to show that the two <ph id="ph3">&lt;xref:System.Guid&gt;</ph> values are identical.</source>
          <target state="translated">最後に、そのインスタンスを作成、新しい<ph id="ph1">&lt;xref:System.Guid&gt;</ph>呼び出し、バイト配列から値、<ph id="ph2">&lt;xref:System.Guid.Equals%28System.Guid%29&gt;</ph>を 2 つを表示するメソッド<ph id="ph3">&lt;xref:System.Guid&gt;</ph>の値が同じです。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="T:System.Guid">
          <source>Returns a string representation of the value of this instance of the <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 構造体のこのインスタンスの値を文字列形式で返します。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Guid.ToString">
          <source>Returns a string representation of the value of this instance in registry format.</source>
          <target state="translated">このインスタンスの値の文字列形式をレジストリ形式で返します。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Guid.ToString">
          <source>The value of this <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>, formatted by using the "D" format specifier as follows:</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> の値で、"D" 書式指定子で次のように書式設定されています。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Guid.ToString">
          <source><bpt id="p1">&lt;c&gt;</bpt>xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx<ept id="p1">&lt;/c&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx<ept id="p1">&lt;/c&gt;</ept></target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Guid.ToString">
          <source>where the value of the GUID is represented as a series of lowercase hexadecimal digits in groups of 8, 4, 4, 4, and 12 digits and separated by hyphens.</source>
          <target state="translated">ここで、GUID の値は、ハイフンで 8 桁、4 桁、4 桁、4 桁、および 12 桁のグループに区切られた小文字の 16 進数で表されます。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Guid.ToString">
          <source>An example of a return value is "382c74c3-721d-4f34-80e5-57657b6cbc27".</source>
          <target state="translated">戻り値は、たとえば "382c74c3-721d-4f34-80e5-57657b6cbc27" のようになります。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Guid.ToString">
          <source>To convert the hexadecimal digits from a through f to uppercase, call the <ph id="ph1">&lt;see cref="M:System.String.ToUpper" /&gt;</ph> method on the returned string.</source>
          <target state="translated">16 進数の数字 a から f を大文字に変換するには、返された文字列に <ph id="ph1">&lt;see cref="M:System.String.ToUpper" /&gt;</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString">
          <source>This method provides a default GUID format that is sufficient for typical use; however, other versions of this method that take a <ph id="ph1">`format`</ph> parameter provide a few common format variations.</source>
          <target state="translated">このメソッドは、一般的な使用するための十分な既定の GUID 形式を提供します。ただし、このメソッドの他のバージョンを受け取る、<ph id="ph1">`format`</ph>パラメーターがいくつかの一般的な形式バリエーションを提供します。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Guid.ToString(System.String)">
          <source>A single format specifier that indicates how to format the value of this <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> の値の書式を指定する 1 文字の書式指定子。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Guid.ToString(System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> parameter can be "N", "D", "B", "P", or "X".</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> パラメーターには、"N"、"D"、"B"、"P"、または "X" を指定できます。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Guid.ToString(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an empty string (""), "D" is used.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> が <ph id="ph1">&lt;see langword="null" /&gt;</ph> または空の文字列 ("") である場合は、"D" が使用されます。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Guid.ToString(System.String)">
          <source>Returns a string representation of the value of this <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> instance, according to the provided format specifier.</source>
          <target state="translated">指定した書式指定子に従って、この <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> インスタンスの値を文字列形式で返します。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Guid.ToString(System.String)">
          <source>The value of this <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>, represented as a series of lowercase hexadecimal digits in the specified format.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> の値。指定した書式を使用して一連の小文字の 16 進数の数字で表されます。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String)">
          <source>The following table shows the accepted format specifiers for the <ph id="ph1">`format`</ph> parameter.</source>
          <target state="translated">次の表は、承認済みの書式指定子、<ph id="ph1">`format`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String)">
          <source>"0" represents a digit; hyphens ("-"), braces ("{", "}"), and parentheses ("(", ")") appear as shown.</source>
          <target state="translated">「0」を表す 1 桁の数字です。ハイフン ("-")、中かっこ ("{"、"}")、およびかっこ (「(",」)") ように表示されます。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String)">
          <source>Specifier</source>
          <target state="translated">指定子</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String)">
          <source>Format of return value</source>
          <target state="translated">戻り値の形式</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String)">
          <source>32 digits:</source>
          <target state="translated">32 桁:</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String)">
          <source>00000000000000000000000000000000</source>
          <target state="translated">00000000000000000000000000000000</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String)">
          <source>32 digits separated by hyphens:</source>
          <target state="translated">ハイフンで区切られた 32 桁:</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String)">
          <source>00000000-0000-0000-0000-000000000000</source>
          <target state="translated">00000000-0000-0000-0000-000000000000</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String)">
          <source>32 digits separated by hyphens, enclosed in braces:</source>
          <target state="translated">中かっこで囲まれ、ハイフンで区切られた 32 桁:</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String)">
          <source>{00000000-0000-0000-0000-000000000000}</source>
          <target state="translated">{00000000-0000-0000-0000-000000000000}</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String)">
          <source>32 digits separated by hyphens, enclosed in parentheses:</source>
          <target state="translated">かっこで囲まれ、ハイフンで区切られた 32 桁:</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String)">
          <source>(00000000-0000-0000-0000-000000000000)</source>
          <target state="translated">(00000000-0000-0000-0000-000000000000)</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String)">
          <source>Four hexadecimal values enclosed in braces, where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces:</source>
          <target state="translated">4 番目の値が中かっこで囲まれた 8 つの 16 進値のサブセットをかっこで囲まれた 4 つの 16 進値:</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String)">
          <source>{0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}</source>
          <target state="translated">{0x00000000、0x0000、0x0000、{0x00、0x00、0x00、0x00、0x00、0x00、0x00、0x00}}</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String)">
          <source>The hexadecimal digits a through f are lowercase in the returned string.</source>
          <target state="translated">16 進数、a ~ f は小文字で返される文字列です。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String)">
          <source>To convert them to uppercase, call the <ph id="ph1">&lt;xref:System.String.ToUpper%2A?displayProperty=nameWithType&gt;</ph> method on the returned string.</source>
          <target state="translated">それらを大文字に変換を呼び出し、<ph id="ph1">&lt;xref:System.String.ToUpper%2A?displayProperty=nameWithType&gt;</ph>メソッドで返される文字列。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Guid.ToString(System.String)">
          <source>The value of <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not <ph id="ph2">&lt;see langword="null" /&gt;</ph>, an empty string (""), "N", "D", "B", "P", or "X".</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> の値は、<ph id="ph2">&lt;see langword="null" /&gt;</ph>、空の文字列 ("")、"N"、"D"、"B"、"P"、または "X" ではありません。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>A single format specifier that indicates how to format the value of this <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> の値の書式を指定する 1 文字の書式指定子。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> parameter can be "N", "D", "B", "P", or "X".</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> パラメーターには、"N"、"D"、"B"、"P"、または "X" を指定できます。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an empty string (""), "D" is used.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept> が <ph id="ph1">&lt;see langword="null" /&gt;</ph> または空の文字列 ("") である場合は、"D" が使用されます。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>(Reserved) An object that supplies culture-specific formatting information.</source>
          <target state="translated">(予約済み) カルチャ固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>Returns a string representation of the value of this instance of the <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> class, according to the provided format specifier and culture-specific format information.</source>
          <target state="translated">指定した書式指定子とカルチャ固有の書式情報に従って、<ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> クラスのこのインスタンスの値を文字列形式で返します。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>The value of this <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>, represented as a series of lowercase hexadecimal digits in the specified format.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> の値。指定した書式を使用して一連の小文字の 16 進数の数字で表されます。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is reserved for future use and does not contribute to the execution of this method.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>パラメーターは将来使用するために予約されていると、このメソッドの実行には含まれません。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>You can pass <ph id="ph1">`null`</ph> in the method call.</source>
          <target state="translated">渡すことができます<ph id="ph1">`null`</ph>メソッドの呼び出しで。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>The following table shows the accepted format specifiers for the <ph id="ph1">`format`</ph> parameter.</source>
          <target state="translated">次の表は、承認済みの書式指定子、<ph id="ph1">`format`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>"0" represents a digit; hyphens ("-"), braces ("{", "}"), and parentheses ("(", ")") appear as shown.</source>
          <target state="translated">「0」を表す 1 桁の数字です。ハイフン ("-")、中かっこ ("{"、"}")、およびかっこ (「(",」)") ように表示されます。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>Specifier</source>
          <target state="translated">指定子</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>Format of return value</source>
          <target state="translated">戻り値の形式</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>32 digits:</source>
          <target state="translated">32 桁:</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>00000000000000000000000000000000</source>
          <target state="translated">00000000000000000000000000000000</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>32 digits separated by hyphens:</source>
          <target state="translated">ハイフンで区切られた 32 桁:</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>00000000-0000-0000-0000-000000000000</source>
          <target state="translated">00000000-0000-0000-0000-000000000000</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>32 digits separated by hyphens, enclosed in braces:</source>
          <target state="translated">中かっこで囲まれ、ハイフンで区切られた 32 桁:</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>{00000000-0000-0000-0000-000000000000}</source>
          <target state="translated">{00000000-0000-0000-0000-000000000000}</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>32 digits separated by hyphens, enclosed in parentheses:</source>
          <target state="translated">かっこで囲まれ、ハイフンで区切られた 32 桁:</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>(00000000-0000-0000-0000-000000000000)</source>
          <target state="translated">(00000000-0000-0000-0000-000000000000)</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>Four hexadecimal values enclosed in braces, where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces:</source>
          <target state="translated">4 番目の値が中かっこで囲まれた 8 つの 16 進値のサブセットをかっこで囲まれた 4 つの 16 進値:</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>{0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}</source>
          <target state="translated">{0x00000000、0x0000、0x0000、{0x00、0x00、0x00、0x00、0x00、0x00、0x00、0x00}}</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>The hexadecimal digits a through f are lowercase in the returned string.</source>
          <target state="translated">16 進数、a ~ f は小文字で返される文字列です。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>To convert them to uppercase, call the <ph id="ph1">&lt;xref:System.String.ToUpper%2A?displayProperty=nameWithType&gt;</ph> method on the returned string.</source>
          <target state="translated">それらを大文字に変換を呼び出し、<ph id="ph1">&lt;xref:System.String.ToUpper%2A?displayProperty=nameWithType&gt;</ph>メソッドで返される文字列。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>Because the <ph id="ph1">`provider`</ph> parameter is ignored, you cannot use it to provide a custom formatting solution.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>パラメーターは無視され、それを使用して、カスタムの書式設定ソリューションを提供することはできません。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>To represent a <ph id="ph1">&lt;xref:System.Guid&gt;</ph> value as a string in a format that isn't supported by the standard GUID format strings, call the <ph id="ph2">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method with a <ph id="ph3">`provider`</ph> object that implements both the <ph id="ph4">&lt;xref:System.ICustomFormatter&gt;</ph> and <ph id="ph5">&lt;xref:System.IFormatProvider&gt;</ph> interfaces.</source>
          <target state="translated">表すために、<ph id="ph1">&lt;xref:System.Guid&gt;</ph>標準 GUID 書式指定文字列の呼び出しによってサポートされていない形式で文字列として値、<ph id="ph2">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>メソッドを<ph id="ph3">`provider`</ph>両方を実装するオブジェクト、<ph id="ph4">&lt;xref:System.ICustomFormatter&gt;</ph>と<ph id="ph5">&lt;xref:System.IFormatProvider&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>For more information, see the "Custom Formatting with ICustomFormatter" section in the <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept> article.</source>
          <target state="translated">詳細については、「カスタム書式設定と icustomformatter を使用」」セクションを参照してください、<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>資料です。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Guid.ToString(System.String,System.IFormatProvider)">
          <source>The value of <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not <ph id="ph2">&lt;see langword="null" /&gt;</ph>, an empty string (""), "N", "D", "B", "P", or "X".</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> の値は、<ph id="ph2">&lt;see langword="null" /&gt;</ph>、空の文字列 ("")、"N"、"D"、"B"、"P"、または "X" ではありません。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>The GUID to convert.</source>
          <target state="translated">変換対象の GUID。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>The structure that will contain the parsed value.</source>
          <target state="translated">解析された値を格納する構造体。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>If the method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph>, <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> contains a valid <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">メソッドが <ph id="ph1">&lt;see langword="true" /&gt;</ph> を返した場合、<bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> には有効な <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph> が格納されます。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>If the method returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>, <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> equals <ph id="ph2">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>.</source>
          <target state="translated">メソッドが <ph id="ph1">&lt;see langword="false" /&gt;</ph> を返す場合、<bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> は <ph id="ph2">&lt;see cref="F:System.Guid.Empty" /&gt;</ph> と同じです。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>Converts the string representation of a GUID to the equivalent <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> structure.</source>
          <target state="translated">GUID の文字列形式を、等価の <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 構造体に変換します。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the parse operation was successful; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">解析操作が正常に実行された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>This method is like the <ph id="ph1">&lt;xref:System.Guid.Parse%2A&gt;</ph> method, except that instead of returning the parsed GUID, it returns <ph id="ph2">`false`</ph> if <ph id="ph3">`input`</ph> is <ph id="ph4">`null`</ph> or not in a recognized format, and doesn't throw an exception.</source>
          <target state="translated">同様に、このメソッドは、<ph id="ph1">&lt;xref:System.Guid.Parse%2A&gt;</ph>以外を返します、解析された GUID を返す代わりに、メソッド<ph id="ph2">`false`</ph>場合<ph id="ph3">`input`</ph>は<ph id="ph4">`null`</ph>か、認識される形式ではなく、例外をスローしません。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>It trims any leading or trailing white space from <ph id="ph1">`input`</ph> and converts strings in any of the five formats recognized by the <ph id="ph2">&lt;xref:System.Guid.ToString%28System.String%29&gt;</ph> and <ph id="ph3">&lt;xref:System.Guid.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> methods, as shown in the following table.</source>
          <target state="translated">先頭または末尾にある空白文字をトリム<ph id="ph1">`input`</ph>によって認識される 5 つの形式のいずれかの文字列に変換して、<ph id="ph2">&lt;xref:System.Guid.ToString%28System.String%29&gt;</ph>と<ph id="ph3">&lt;xref:System.Guid.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph>メソッドは、次の表に示すようにします。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>Specifier</source>
          <target state="translated">指定子</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>Format</source>
          <target state="translated">形式</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>32 digits</source>
          <target state="translated">32 桁の数字</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>00000000000000000000000000000000</source>
          <target state="translated">00000000000000000000000000000000</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>32 digits separated by hyphens</source>
          <target state="translated">ハイフンで区切られた 32 桁の数字</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>00000000-0000-0000-0000-000000000000</source>
          <target state="translated">00000000-0000-0000-0000-000000000000</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>32 digits separated by hyphens, enclosed in braces</source>
          <target state="translated">中かっこで囲まれ、ハイフンで区切られた 32 桁</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>{00000000-0000-0000-0000-000000000000}</source>
          <target state="translated">{00000000-0000-0000-0000-000000000000}</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>32 digits separated by hyphens, enclosed in parentheses</source>
          <target state="translated">かっこで囲まれた、ハイフンで区切られた 32 桁</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>(00000000-0000-0000-0000-000000000000)</source>
          <target state="translated">(00000000-0000-0000-0000-000000000000)</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>Four hexadecimal values enclosed in braces, where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces</source>
          <target state="translated">4 番目の値が中かっこで囲まれた 8 つの 16 進値のサブセットをかっこで囲まれた 4 つの 16 進値</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>{0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}</source>
          <target state="translated">{0x00000000、0x0000、0x0000、{0x00、0x00、0x00、0x00、0x00、0x00、0x00、0x00}}</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParse(System.String,System.Guid@)">
          <source>The following example creates a new GUID, converts it to three separate string representations by calling the <ph id="ph1">&lt;xref:System.Guid.ToString%28System.String%29&gt;</ph> method with the "B", "D", and "X" format specifiers, and then calls the <ph id="ph2">&lt;xref:System.Guid.TryParse%2A&gt;</ph> method to convert the strings back to <ph id="ph3">&lt;xref:System.Guid&gt;</ph> values.</source>
          <target state="translated">次の例は、新しい GUID を作成、呼び出すことによって次の 3 つの個別の文字列形式に変換、 <ph id="ph1">&lt;xref:System.Guid.ToString%28System.String%29&gt;</ph> 、"B"、"D"と"X"書式指定子と呼び出すメソッド、 <ph id="ph2">&lt;xref:System.Guid.TryParse%2A&gt;</ph> 、文字列に変換するメソッドが戻ります<ph id="ph3">&lt;xref:System.Guid&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>The GUID to convert.</source>
          <target state="translated">変換対象の GUID。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>One of the following specifiers that indicates the exact format to use when interpreting <bpt id="p1">&lt;c&gt;</bpt>input<ept id="p1">&lt;/c&gt;</ept>: "N", "D", "B", "P", or "X".</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>input<ept id="p1">&lt;/c&gt;</ept> を解釈するときに使用する正確な形式を示す、"N"、"D"、"B"、"P"、"X" のいずれかの指定子。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>The structure that will contain the parsed value.</source>
          <target state="translated">解析された値を格納する構造体。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>If the method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph>, <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> contains a valid <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">メソッドが <ph id="ph1">&lt;see langword="true" /&gt;</ph> を返した場合、<bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> には有効な <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph> が格納されます。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>If the method returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>, <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> equals <ph id="ph2">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>.</source>
          <target state="translated">メソッドが <ph id="ph1">&lt;see langword="false" /&gt;</ph> を返す場合、<bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> は <ph id="ph2">&lt;see cref="F:System.Guid.Empty" /&gt;</ph> と同じです。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>Converts the string representation of a GUID to the equivalent <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> structure, provided that the string is in the specified format.</source>
          <target state="translated">文字列が指定の形式であれば、GUID の文字列形式を等価の <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 構造体に変換します。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the parse operation was successful; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">解析操作が正常に実行された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>This method requires the string to convert to be exactly in the format specified by the <ph id="ph1">`format`</ph> parameter, after leading and trailing white-space characters are removed.</source>
          <target state="translated">このメソッドで指定された形式で正確に変換する文字列では、<ph id="ph1">`format`</ph>先頭および末尾の空白文字が削除された後のパラメーターです。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>It returns <ph id="ph1">`false`</ph> if <ph id="ph2">`input`</ph> is <ph id="ph3">`null`</ph> or is not in the format specified by <ph id="ph4">`format`</ph>, and doesn't throw an exception.</source>
          <target state="translated">返します<ph id="ph1">`false`</ph>場合<ph id="ph2">`input`</ph>は<ph id="ph3">`null`</ph>で指定された形式ではありませんか<ph id="ph4">`format`</ph>例外をスローしないとします。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>The following table shows the accepted format specifiers for the <ph id="ph1">`format`</ph> parameter.</source>
          <target state="translated">次の表は、承認済みの書式指定子、<ph id="ph1">`format`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>"0" represents a digit; hyphens ("-"), braces ("{", "}"), and parentheses ("(", ")") appear as shown.</source>
          <target state="translated">「0」を表す 1 桁の数字です。ハイフン ("-")、中かっこ ("{"、"}")、およびかっこ (「(",」)") ように表示されます。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>Specifier</source>
          <target state="translated">指定子</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>Format of the <ph id="ph1">`input`</ph> parameter</source>
          <target state="translated">書式設定、<ph id="ph1">`input`</ph>パラメーター</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>N</source>
          <target state="translated">N</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>32 digits:</source>
          <target state="translated">32 桁:</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>00000000000000000000000000000000</source>
          <target state="translated">00000000000000000000000000000000</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>D</source>
          <target state="translated">D</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>32 digits separated by hyphens:</source>
          <target state="translated">ハイフンで区切られた 32 桁:</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>00000000-0000-0000-0000-000000000000</source>
          <target state="translated">00000000-0000-0000-0000-000000000000</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>B</source>
          <target state="translated">B</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>32 digits separated by hyphens, enclosed in braces:</source>
          <target state="translated">中かっこで囲まれ、ハイフンで区切られた 32 桁:</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>{00000000-0000-0000-0000-000000000000}</source>
          <target state="translated">{00000000-0000-0000-0000-000000000000}</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>P</source>
          <target state="translated">P</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>32 digits separated by hyphens, enclosed in parentheses:</source>
          <target state="translated">かっこで囲まれ、ハイフンで区切られた 32 桁:</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>(00000000-0000-0000-0000-000000000000)</source>
          <target state="translated">(00000000-0000-0000-0000-000000000000)</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>X</source>
          <target state="translated">x</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>Four hexadecimal values enclosed in braces, where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces:</source>
          <target state="translated">4 番目の値が中かっこで囲まれた 8 つの 16 進値のサブセットをかっこで囲まれた 4 つの 16 進値:</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>{0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}</source>
          <target state="translated">{0x00000000、0x0000、0x0000、{0x00、0x00、0x00、0x00、0x00、0x00、0x00、0x00}}</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Guid.ToString%28System.String%29&gt;</ph> method with each of the supported format specifiers to generate an array of strings that represent a single GUID.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Guid.ToString%28System.String%29&gt;</ph>各を 1 つの GUID を表す文字列の配列を生成するサポートされている書式指定子を持つメソッドです。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
          <source>These are then passed to the <ph id="ph1">&lt;xref:System.Guid.TryParseExact%2A&gt;</ph> method, which successfully parses the string that conforms to the "B" format specifier.</source>
          <target state="translated">渡されますし、<ph id="ph1">&lt;xref:System.Guid.TryParseExact%2A&gt;</ph>メソッドで、"B"書式指定子に準拠している文字列を正常に解析します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>