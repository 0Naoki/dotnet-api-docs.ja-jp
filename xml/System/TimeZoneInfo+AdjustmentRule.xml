<Type Name="TimeZoneInfo+AdjustmentRule" FullName="System.TimeZoneInfo+AdjustmentRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b1eeea4982e62144e434859e5e89eb964936bd1a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36428025" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TimeZoneInfo.AdjustmentRule : IEquatable&lt;TimeZoneInfo.AdjustmentRule&gt;, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi serializable sealed beforefieldinit TimeZoneInfo/AdjustmentRule extends System.Object implements class System.IEquatable`1&lt;class System.TimeZoneInfo/AdjustmentRule&gt;, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.TimeZoneInfo.AdjustmentRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TimeZoneInfo.AdjustmentRule&#xA;Implements IDeserializationCallback, IEquatable(Of TimeZoneInfo.AdjustmentRule), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public: ref class TimeZoneInfo::AdjustmentRule sealed : IEquatable&lt;TimeZoneInfo::AdjustmentRule ^&gt;, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type TimeZoneInfo.AdjustmentRule = class&#xA;    interface IEquatable&lt;TimeZoneInfo.AdjustmentRule&gt;&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.TimeZoneInfo+AdjustmentRule&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides information about a time zone adjustment, such as the transition to and from daylight saving time.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeZoneInfo.AdjustmentRule>クラスそれぞれ定義して、有効な開始日と終了日の特定の時刻の変更、夏時間が送受信する、だけでなく、デルタ (調整を変更するタイム ゾーンの標準時のによって、正確な量)。 さらに、2 つのプロパティを返す<xref:System.TimeZoneInfo.TransitionTime>と標準時の間の各遷移が発生したときを定義するオブジェクト。  
  
> [!NOTE]
>  インスタンス、<xref:System.TimeZoneInfo.AdjustmentRule>クラスは変更できません。 オブジェクトが作成されたら、その値を変更できません。  
  
 作成する、<xref:System.TimeZoneInfo.AdjustmentRule>オブジェクトを呼び出し、 `static` (`Shared` Visual Basic で)<xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A?displayProperty=nameWithType>メソッドです。 配列を指定することができますし、<xref:System.TimeZoneInfo.AdjustmentRule>を 2 つのオーバー ロードのオブジェクト、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>メソッドです。 特定のタイム ゾーンの調整規則を取得するその<xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=nameWithType>の配列を返すメソッド<xref:System.TimeZoneInfo.AdjustmentRule>オブジェクト。  
  
   
  
## Examples  
 次の例は、ローカル システムで定義されているすべてのタイム ゾーンを取得し、それらの調整規則に関する詳細を表示します。  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#3)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#3)]  
  
 この例によって生成される出力の一部を次に示します。 実際の出力は、オペレーティング システムと、例を実行する日付によって異なります。  
  
```  
Morocco Standard Time Adjustment rules  
   Adjustment rule #1  
      Start Date: Tuesday, January 01, 2008  
      End Date: Wednesday, December 31, 2008  
      Time Change: 1:00 hours  
      Annual Start: The Last Saturday of May at 11:59 PM  
      Annual End: The Last Sunday of August at 11:59 PM  
   Adjustment rule #2  
      Start Date: Thursday, January 01, 2009  
      End Date: Thursday, December 31, 2009  
      Time Change: 1:00 hours  
      Annual Start: The Last Sunday of May at 11:59 PM  
      Annual End: The Third Thursday of August at 11:59 PM  
  
Coordinated Universal Time has no adjustment rules  
  
GMT Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 1:00 AM  
   Annual End: The Last Sunday of October at 2:00 AM  
  
Greenwich Standard Time has no adjustment rules  
  
W. Europe Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Central Europe Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Romance Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Central European Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
W. Central Africa Standard Time has no adjustment rules  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.TimeZoneInfo" />
  </Docs>
  <Members>
    <Member MemberName="CreateAdjustmentRule">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo.AdjustmentRule CreateAdjustmentRule (DateTime dateStart, DateTime dateEnd, TimeSpan daylightDelta, TimeZoneInfo.TransitionTime daylightTransitionStart, TimeZoneInfo.TransitionTime daylightTransitionEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo/AdjustmentRule CreateAdjustmentRule(valuetype System.DateTime dateStart, valuetype System.DateTime dateEnd, valuetype System.TimeSpan daylightDelta, valuetype System.TimeZoneInfo/TransitionTime daylightTransitionStart, valuetype System.TimeZoneInfo/TransitionTime daylightTransitionEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(System.DateTime,System.DateTime,System.TimeSpan,System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAdjustmentRule (dateStart As DateTime, dateEnd As DateTime, daylightDelta As TimeSpan, daylightTransitionStart As TimeZoneInfo.TransitionTime, daylightTransitionEnd As TimeZoneInfo.TransitionTime) As TimeZoneInfo.AdjustmentRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo::AdjustmentRule ^ CreateAdjustmentRule(DateTime dateStart, DateTime dateEnd, TimeSpan daylightDelta, TimeZoneInfo::TransitionTime daylightTransitionStart, TimeZoneInfo::TransitionTime daylightTransitionEnd);" />
      <MemberSignature Language="F#" Value="static member CreateAdjustmentRule : DateTime * DateTime * TimeSpan * TimeZoneInfo.TransitionTime * TimeZoneInfo.TransitionTime -&gt; TimeZoneInfo.AdjustmentRule" Usage="System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule (dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+AdjustmentRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateStart" Type="System.DateTime" />
        <Parameter Name="dateEnd" Type="System.DateTime" />
        <Parameter Name="daylightDelta" Type="System.TimeSpan" />
        <Parameter Name="daylightTransitionStart" Type="System.TimeZoneInfo+TransitionTime" />
        <Parameter Name="daylightTransitionEnd" Type="System.TimeZoneInfo+TransitionTime" />
      </Parameters>
      <Docs>
        <param name="dateStart">The effective date of the adjustment rule. If the value of the <c>dateStart</c> parameter is <see langword="DateTime.MinValue.Date" />, this is the first adjustment rule in effect for a time zone.</param>
        <param name="dateEnd">The last date that the adjustment rule is in force. If the value of the <c>dateEnd</c> parameter is <see langword="DateTime.MaxValue.Date" />, the adjustment rule has no end date.</param>
        <param name="daylightDelta">The time change that results from the adjustment. This value is added to the time zone's <see cref="P:System.TimeZoneInfo.BaseUtcOffset" /> property to obtain the correct daylight offset from Coordinated Universal Time (UTC). This value can range from -14 to 14.</param>
        <param name="daylightTransitionStart">An object that defines the start of daylight saving time.</param>
        <param name="daylightTransitionEnd">An object that defines the end of daylight saving time.</param>
        <summary>Creates a new adjustment rule for a particular time zone.</summary>
        <returns>An object that represents the new adjustment rule.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用するには、カスタム タイム ゾーンの 1 つまたは複数の調整規則を作成します。 配列、<xref:System.TimeZoneInfo.AdjustmentRule>このメソッドの呼び出しによって返されるオブジェクトとして渡すことができます、`adjustmentRules`の 2 つのオーバー ロードに対するパラメーター、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>メソッドです。 この例では、この手順を示します。  
  
> [!NOTE]
>  <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A>メソッドは、新しいタイム ゾーンの調整規則を定義するときだけ使用できます。 既存のタイム ゾーンの調整規則を変更するには使用できません。  
  
 `dateStart`と`dateEnd`パラメーターが時刻要素なしの日付値にする必要がありますまたは<xref:System.ArgumentException>がスローされます。 取得することで、時刻部分を削除することができます、<xref:System.DateTime>から日付と時刻の値<xref:System.DateTime.Date%2A>プロパティが次のステートメントで示すようにします。  
  
```  
DateTime.MinValue.Date  
DateTime.MaxValue.Date  
DateTime.Now.Date   
dateVariable.Date  
```  
  
 <xref:System.DateTime.Kind%2A>のプロパティ、`dateStart`と`dateEnd`パラメーターがある必要がありますも<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>します。  
  
 値、`daylightDelta`パラメーター範囲は-14 ~ 14 です。 合計、`daylightDelta`パラメーターおよび`baseUtcOffset`への呼び出しで使用するパラメーター、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>メソッド必要がありますも範囲-14 ~ 14 または<xref:System.InvalidTimeZoneException>がスローされます。  
  
> [!NOTE]
>  `daylightDelta`パラメーターは、タイム ゾーンの標準時間と夏時間の違いを定義します。 タイム ゾーンの標準時刻のオフセットから世界協定時刻 (UTC) を定義することはありません。 <xref:System.TimeZoneInfo>クラスは、UTC からのこのオフセットがタイム ゾーンの有効期間全体で一定であると見なされます。 調整規則の適用によって影響を受けない UTC からのタイム ゾーンのオフセットの変更を反映するために使用する必要があります、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>メソッドを新しいカスタムのタイム ゾーンを作成します。  
  
   
  
## Examples  
 次の例では、代替の中部標準時ゾーンを作成し、1976 1986、1987 2006、および 2007 期間以降に次の 3 つの調整規則を定義します。 これらの規則は、ジェネリック型に追加されます<xref:System.Collections.Generic.List%601>に要素がコピーされた、オブジェクト、<xref:System.TimeZoneInfo.AdjustmentRule>配列。 呼び出しでこの配列を使用して、<xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%29?displayProperty=nameWithType>メソッドです。  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#1)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateStart" /> or <paramref name="dateEnd" /> parameter does not equal <see cref="F:System.DateTimeKind.Unspecified" />.  -or-  The <paramref name="daylightTransitionStart" /> parameter is equal to the <paramref name="daylightTransitionEnd" /> parameter.  -or-  The <paramref name="dateStart" /> or <paramref name="dateEnd" /> parameter includes a time of day value.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="dateEnd" /> is earlier than <paramref name="dateStart" />.  -or-  <paramref name="daylightDelta" /> is less than -14 or greater than 14.  -or-  The <see cref="P:System.TimeSpan.Milliseconds" /> property of the <paramref name="daylightDelta" /> parameter is not equal to 0.  -or-  The <see cref="P:System.TimeSpan.Ticks" /> property of the <paramref name="daylightDelta" /> parameter does not equal a whole number of seconds.</exception>
      </Docs>
    </Member>
    <Member MemberName="DateEnd">
      <MemberSignature Language="C#" Value="public DateTime DateEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateEnd" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DateEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateEnd As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateEnd { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateEnd : DateTime" Usage="System.TimeZoneInfo.AdjustmentRule.DateEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the date when the adjustment rule ceases to be in effect.</summary>
        <value>調整規則の終了日を示す <see cref="T:System.DateTime" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値、<xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A>プロパティは、時刻部分なしの日付値。  
  
 現在の調整規則の終了日は通常認識していないため、割り当てることができます`DateTime.MaxValue.Date`を<xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A>プロパティ、カスタムの調整規則を作成するときにします。  
  
> [!IMPORTANT]
>  それ以外の場合は特別な理由がある場合を除き、タイム ゾーンで標準時が適用される時間間隔内に発生する調整規則の終了日を定義する必要があります。 そう説得力のある理由がある場合を除き、タイム ゾーンで夏時間が適用される時間間隔内に発生する調整規則の終了日を定義しないでください。 たとえば、年 3 月の第 3 の日曜日に夏時間からタイム ゾーンの遷移が行われ、10 月の最初の日曜日に夏時間への遷移が発生する、調整規則の有効終了日しないで、特定の 12 月 31 日年、夏時間の期間内でその日付が行われるためです。  
  
 Windows XP でレジストリを既定には、最後の日付の年 12 月 31 日金曜日 9999 単一の調整規則を定義します (値の`DateTime.MaxValue.Date`)、各タイム ゾーン。 米国の州のタイム ゾーンは、Windows Vista のレジストリには、2 つの調整規則が定義されています。  
  
-   月曜日、1 月 1 日、0001、2006 年 12 月 31 日日曜日です。  
  
-   月曜日、01、2007 年 1 月 12 月 31 日金曜日に 9999 です。  
  
 これは、こと、レジストリに格納されているタイム ゾーン調整規則が現在のタイム ゾーンに関連する操作を実行するのに便利ですが、確実には使用できません履歴タイム ゾーン情報を取得することを意味します。 履歴のタイム ゾーンに対応するアプリケーションで使用できる複数の調整規則と、カスタム タイム ゾーンを定義する方法の詳細については、次を参照してください。[する方法: 調整規則の作成のタイム ゾーン](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md)です。  
  
   
  
## Examples  
 次の例では、ローカル コンピューターのシステム レジストリをなど、開始日と終了日のそれらの調整規則で定義されているタイム ゾーンのすべてについての情報を表示します。  
  
 [!code-csharp[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/cs/DateStart1.cs#1)]
 [!code-vb[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/vb/DateStart1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateStart">
      <MemberSignature Language="C#" Value="public DateTime DateStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateStart" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DateStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateStart As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateStart { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateStart : DateTime" Usage="System.TimeZoneInfo.AdjustmentRule.DateStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the date when the adjustment rule takes effect.</summary>
        <value>調整規則がいつ有効になるかを示す <see cref="T:System.DateTime" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値、<xref:System.TimeZoneInfo.AdjustmentRule.DateStart%2A>プロパティは、時刻部分なしの日付値。 これで、特定の調整規則が有効になる日付を定義します。  これは、有効に移動する (通常は夏時間に 1 つの遷移と標準時に 1 つの遷移で定義された) する遷移の一連の日付です。 たとえば、2017 年 1 月 1 日に調整規則が出る可能性が年 3 月の第 2 日曜日夏時間への遷移のおよび提供年 11 月の最初の日曜日に標準時に移行します。 調整規則の開始日が最初の遷移の日付に関連付けられていないことに注意してください。  
  
 割り当てることができます`DateTime.MinValue.Date`を<xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A>プロパティ、タイム ゾーン対応のアプリケーションで使用するためのカスタムの調整規則を作成するときは履歴タイム ゾーン情報を処理する必要はありません。  
  
> [!IMPORTANT]
>  それ以外の場合は特別な理由がある場合を除き、タイム ゾーンで標準時が適用される時間間隔内に発生する調整規則の開始日を定義する必要があります。 そう説得力のある理由がある場合を除き、タイム ゾーンで夏時間が適用される時間間隔内に発生する調整規則の開始日を定義しないでください。 たとえば、年 3 月の第 3 の日曜日に夏時間からタイム ゾーンの遷移が行われ、10 月の最初の日曜日に夏時間への遷移が発生する、調整規則の有効開始日しないで、特定の 1 月 1 日年、夏時間の期間内でその日付が行われるためです。  
  
 Windows XP でレジストリを既定には、開始の日付の年 1 月 1日、月曜日 0001 単一の調整規則を定義します (値の`DateTime.MinValue.Date`)、各タイム ゾーン。 米国の州のタイム ゾーンは、Windows Vista のレジストリには、2 つの調整規則が定義されています。  
  
-   月曜日、1 月 1 日、0001、2006 年 12 月 31 日日曜日です。  
  
-   月曜日、01、2007 年 1 月 12 月 31 日金曜日に 9999 です。  
  
 これは、こと、レジストリに格納されているタイム ゾーン調整規則が現在のタイム ゾーンに関連する操作を実行するのに便利ですが、確実には使用できません履歴タイム ゾーン情報を取得することを意味します。 履歴のタイム ゾーンに対応するアプリケーションで使用できる複数の調整規則と、カスタム タイム ゾーンを定義する方法の詳細については、次を参照してください。[する方法: 調整規則の作成のタイム ゾーン](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md)です。  
  
   
  
## Examples  
 次の例では、ローカル コンピューターのシステム レジストリをなど、開始日と終了日のそれらの調整規則で定義されているタイム ゾーンのすべてについての情報を表示します。  
  
 [!code-csharp[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/cs/DateStart1.cs#1)]
 [!code-vb[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/vb/DateStart1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightDelta">
      <MemberSignature Language="C#" Value="public TimeSpan DaylightDelta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DaylightDelta" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightDelta As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DaylightDelta { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightDelta : TimeSpan" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightDelta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the amount of time that is required to form the time zone's daylight saving time. This amount of time is added to the time zone's offset from Coordinated Universal Time (UTC).</summary>
        <value>調整規則の結果として標準時の変更に追加する時間を示す <see cref="T:System.TimeSpan" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の数式では、タイム ゾーンの夏時間を定義します。  
  
```  
TimeZoneTime = BaseUtcOffset + DaylightDelta + UtcTime  
```  
  
 値、<xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A>プロパティは、-14 時間を 14 時間の範囲はします。  
  
> [!NOTE]
>  <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A>プロパティは、タイム ゾーンの標準時間と夏時間の違いを測定します。 これは適用されませんタイム ゾーンの標準的なオフセットの変更に世界協定時刻 (UTC) から。 呼び出す必要があります (utc) から標準時のオフセットに変更されたタイム ゾーンを表すため、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>新しいタイム ゾーンを作成します。  
  
 最も一般的な値、<xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A>プロパティが 1.0 の時間。 夏時間の調整規則の適用は、1 時間のタイム ゾーンのオフセット世界協定時刻 (UTC) からを増加します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightTransitionEnd">
      <MemberSignature Language="C#" Value="public TimeZoneInfo.TransitionTime DaylightTransitionEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeZoneInfo/TransitionTime DaylightTransitionEnd" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightTransitionEnd As TimeZoneInfo.TransitionTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeZoneInfo::TransitionTime DaylightTransitionEnd { TimeZoneInfo::TransitionTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightTransitionEnd : TimeZoneInfo.TransitionTime" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+TransitionTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets information about the annual transition from daylight saving time back to standard time.</summary>
        <value>夏時間からタイム ゾーンの標準時に戻す年次切り替えを定義する <see cref="T:System.TimeZoneInfo.TransitionTime" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeZoneInfo.TransitionTime>によって返されるオブジェクト、<xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd%2A>プロパティは、固定日付の規則または標準時へ戻るのフローティング日付規則のいずれかを定義します。 固定日付の規則は、月、日、および遷移が発生する日の時刻を提供します。 フローティング日付規則は、月、週、日、週の曜日と時間、遷移が発生したを提供します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightTransitionStart">
      <MemberSignature Language="C#" Value="public TimeZoneInfo.TransitionTime DaylightTransitionStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeZoneInfo/TransitionTime DaylightTransitionStart" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightTransitionStart As TimeZoneInfo.TransitionTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeZoneInfo::TransitionTime DaylightTransitionStart { TimeZoneInfo::TransitionTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightTransitionStart : TimeZoneInfo.TransitionTime" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+TransitionTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets information about the annual transition from standard time to daylight saving time.</summary>
        <value>タイム ゾーンの標準時間から夏時間への年次切り替えを定義する <see cref="T:System.TimeZoneInfo.TransitionTime" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeZoneInfo.TransitionTime>によって返されるオブジェクト、<xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart%2A>プロパティ夏時間に固定日付の規則または遷移のフローティング日付規則のいずれかを定義します。 固定日付の規則は、月、日、および遷移が発生する日の時刻を提供します。 フローティング日付規則は、月、週、曜日、および遷移が発生する日の時間を提供します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TimeZoneInfo.AdjustmentRule other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.TimeZoneInfo/AdjustmentRule other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.Equals(System.TimeZoneInfo.AdjustmentRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As TimeZoneInfo.AdjustmentRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TimeZoneInfo::AdjustmentRule ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : TimeZoneInfo.AdjustmentRule -&gt; bool" Usage="adjustmentRule.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.TimeZoneInfo+AdjustmentRule" />
      </Parameters>
      <Docs>
        <param name="other">The object to compare with the current object.</param>
        <summary>Determines whether the current <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> object is equal to a second <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> object.</summary>
        <returns>
          <see langword="true" /> if both <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> objects have equal values; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 2 つあるかどうかを判断する<xref:System.TimeZoneInfo.AdjustmentRule>オブジェクトが等しく、<xref:System.TimeZoneInfo.AdjustmentRule.Equals%28System.TimeZoneInfo.AdjustmentRule%29>メソッドは、各オブジェクトのメンバーの値を比較します。 2 つの調整規則が同じ発効日、同じデルタ、およびに対して同じ値がある場合は、等しい、<xref:System.TimeZoneInfo.TransitionTime>によって返されるオブジェクトの<xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart%2A>と<xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd%2A>プロパティです。  
  
   
  
## Examples  
 次の例では、<xref:System.TimeZoneInfo.AdjustmentRule.Equals%28System.TimeZoneInfo.AdjustmentRule%29?displayProperty=nameWithType>とカナダ中部標準時とメキシコ標準時の中部標準時の調整規則を比較するメソッド。  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#2)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#2)]  
  
 このコードは、コンソールに、次の出力を表示します。  
  
```  
Comparing Central Standard Time rule for 1/1/0001 to 12/31/9999 with:  
   Canada Central Standard Time has no adjustment rules.  
   Mexican CST for 1/1/0001 to 12/31/9999: Equal  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="adjustmentRule.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Serves as a hash function for hashing algorithms and data structures such as hash tables.</summary>
        <returns>A 32-bit signed integer that serves as the hash code for the current <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">The object that initiated the callback. The functionality for this parameter is not currently implemented.</param>
        <summary>Runs when the deserialization of a <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> object is completed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">The object to populate with data.</param>
        <param name="context">The destination for this serialization (see <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
        <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data that is required to serialize this object.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に対する完全な信頼が必要です。 このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</permission>
      </Docs>
    </Member>
  </Members>
</Type>