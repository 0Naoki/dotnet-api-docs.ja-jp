<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NotImplementedException.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5eb4319c05d987ee89995cf17ccc172aff1cf7c9e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb4319c05d987ee89995cf17ccc172aff1cf7c9e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.NotImplementedException">
          <source>The exception that is thrown when a requested method or operation is not implemented.</source>
          <target state="translated">要求されたメソッドまたは操作が実装されない場合にスローされる例外。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>The <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception is thrown when a particular method, get accessor, or set accessor is present as a member of a type but is not implemented.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>例外がスローされます、特定の方法、get アクセサーまたは set アクセサーが型のメンバーとして表されますが、実装されていません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source><ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> uses the default <ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation, which supports reference equality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> 既定値を使用して<ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>参照の等価性をサポートする実装。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>For a list of initial values for an instance of <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.NotImplementedException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">インスタンスの初期値の一覧については<ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>を参照してください、<ph id="ph2">&lt;xref:System.NotImplementedException.%23ctor%2A&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>Throwing the exception</source>
          <target state="translated">例外をスロー</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>You might choose to throw a  <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception in properties or methods in your own types when the that member is still in development and will only later be implemented in production code.</source>
          <target state="translated">スローすることができます、<ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>プロパティで例外ときに、独自のメソッド、型、または、そのメンバーはまだ開発段階とは、実稼働コードで後でのみ実装されます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>In other words,  a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception should be synonymous with "still in development."</source>
          <target state="translated">言い換えると、<ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>例外を「引き続きの開発」と同義にする必要があります。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>Handling the exception</source>
          <target state="translated">例外を処理</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>The <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception indicates that the method or property that you are attempting to invoke has no implementation and therefore provides no functionality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>例外ことを示し、メソッドまたはプロパティを呼び出すしようとしている実装を持たないため、機能は備えていません。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>As a result, you should not handle this error in a <ph id="ph1">`try/catch`</ph> block.</source>
          <target state="translated">このエラーを処理するため、しないでください、<ph id="ph1">`try/catch`</ph>ブロックします。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>Instead, you should remove the member invocation from your code.</source>
          <target state="translated">代わりに、コードからメンバーの呼び出しを削除する必要があります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>You can include a call to the member when it is implemented in the production version of a library.</source>
          <target state="translated">ライブラリの運用バージョンで実装されている場合は、メンバーへの呼び出しを含めることができます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>In some cases, a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception may not be used to indicate functionality that is still in development in a pre-production library.</source>
          <target state="translated">場合によっては、<ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>例外は、実稼働前ライブラリでの開発に残っている機能を示すためには使用できません。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>However, this still indicates that the functionality is unavailable, and you should remove the member invocation from your code.</source>
          <target state="translated">ただし、これは、機能を使用できない、コードからメンバーの呼び出しを削除する必要がありますに引き続き表示されます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>NotImplementedException and other exception types</source>
          <target state="translated">NotImplementedException およびその他の例外の種類</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>The .NET Framework also includes two other exception types, <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> and <ph id="ph2">&lt;xref:System.PlatformNotSupportedException&gt;</ph>, that indicate that no implementation exists for a particular member of a type.</source>
          <target state="translated">.NET Framework は、その他の 2 つの例外型も含まれています。<ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>と<ph id="ph2">&lt;xref:System.PlatformNotSupportedException&gt;</ph>、型の特定のメンバーの実装が存在しないことを示すです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>You should use throw one of these instead of a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception under the following conditions.</source>
          <target state="translated">代わりに throw これらのいずれかを使用する必要があります、<ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>次の条件下での例外。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source><ph id="ph1">&lt;xref:System.PlatformNotSupportedException&gt;</ph> exception</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.PlatformNotSupportedException&gt;</ph> 例外</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>If you've designed a type with one or more members that are available on some platforms or in some versions but not on others, you can throw  this exception on platforms on which the functionality is not supported.</source>
          <target state="translated">一部のプラットフォームもいくつかのバージョンで使用可能な 1 つまたは複数のメンバーと型を設計した場合は、他のユーザーではなく、機能がサポートされていないプラットフォームでこの例外をスローすることができます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source><ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 例外</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>Throw a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception if the implementation of an interface  member or an override to an abstract base class method is not possible.</source>
          <target state="translated">スロー、<ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>インターフェイスのメンバーまたは抽象基本クラス メソッドをオーバーライドの実装が不可能な場合は例外です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>For example, the   <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.DateTime%29?displayProperty=nameWithType&gt;</ph> method throws a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> exception because no meaningful conversion between a date and time and a 32-bit signed integer exists.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.DateTime%29?displayProperty=nameWithType&gt;</ph>メソッドがスローされます、<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>例外、日付と時刻、32 ビット符号付き整数の間で意味のある変換が存在しないためです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>The method must be present in this case because the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">メソッドがあります存在ここではため、<ph id="ph1">&lt;xref:System.Convert&gt;</ph>クラスが実装する、<ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>You should also throw a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception if you've implemented an abstract base class and add a new member to it that must be overridden by derived classes.</source>
          <target state="translated">またをスローする必要があります、<ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>クラスを派生する例外の抽象基本クラスを実装によってオーバーライドする必要がありますに新しいメンバーを追加するとします。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>In that case, making the member abstract causes existing subclasses to fail to load.</source>
          <target state="translated">メンバーを抽象にする場合は、原因で既存のサブクラスを読み込みに失敗します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>The following example throws this exception for a method that has not been developed.</source>
          <target state="translated">次の例では、作成されていないメソッドに対しては、この例外をスローします。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.NotImplementedException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.NotImplementedException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> class with default properties.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> クラスの新しいインスタンスを、既定のプロパティを使用して初期化します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> のインスタンスの初期プロパティ値を次の表に示します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor">
          <source>Property</source>
          <target state="translated">プロパティ</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor">
          <source>Value</source>
          <target state="translated">[値]</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor">
          <source>The empty string ("").</source>
          <target state="translated">空の文字列 ("") です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.NotImplementedException.#ctor(System.String)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">例外の原因を説明するエラー メッセージ。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.NotImplementedException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">指定したエラー メッセージを使用して、<ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> のインスタンスの初期プロパティ値を次の表に示します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">プロパティ</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">[値]</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">エラー メッセージ文字列。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.NotImplementedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">スローされている例外に関するシリアル化済みオブジェクト データを保持している <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.NotImplementedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated">転送元または転送先についてのコンテキスト情報を含む <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.NotImplementedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">シリアル化したデータを使用して、<ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">例外の原因を説明するエラー メッセージ。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">現在の例外の原因となった例外。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> パラメーターが <ph id="ph1">&lt;see langword="null" /&gt;</ph> でない場合は、内部例外を処理する <ph id="ph2">&lt;see langword="catch" /&gt;</ph> ブロックで現在の例外が発生します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">前の例外の直接の結果としてスローされる例外については、<ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> プロパティに、前の例外への参照が格納されます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> プロパティは、コンストラクターに渡されたものと同じ値を返します。<ph id="ph2">`null`</ph> プロパティによって内部例外値がコンストラクターに渡されなかった場合は、<ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> のインスタンスの初期プロパティ値を次の表に示します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">プロパティ</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">[値]</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">内部例外の参照。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">エラー メッセージ文字列。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>