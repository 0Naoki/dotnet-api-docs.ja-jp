<Type Name="HashCode" FullName="System.HashCode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d77770a9d046adcf6315565d2a5c3e1cbaf2aba8" />
    <Meta Name="ms.sourcegitcommit" Value="44933aff38db926168781f50300446344189a04d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/16/2018" />
    <Meta Name="ms.locfileid" Value="39064742" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct HashCode" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit HashCode extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.HashCode" />
  <TypeSignature Language="VB.NET" Value="Public Structure HashCode" />
  <TypeSignature Language="C++ CLI" Value="public value class HashCode" />
  <TypeSignature Language="F#" Value="type HashCode = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>複数の値のハッシュ コードを 1 つのハッシュ コードに結合します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

使用することができます<xref:System.HashCode>に 1 つのハッシュ コードを複数の値 (たとえば、構造体またはクラスのフィールド) を結合します。 この構造体は、2 つの方法のいずれかで動作します。

 * 結合する最大 8 つの値のセットをそのまま使用する静的メソッド。
 * 2 つのインスタンス、一度に 1 つずつ値を受け入れ、ストリーミング方式で操作するメソッド。

> [!WARNING]
> 実装は、アセンブリのバージョン間で変わる可能性が、ハッシュ コードを実装の詳細として考慮すべきベスト プラクティスを勧めします。 によって生成されたハッシュ コードを保存しない<xref:System.HashCode>でシリアル化された構造体は、たとえば、ディスク上です。 <xref:System.HashCode> つまり、ハッシュ コードは、オペレーティング システム処理のスコープ内で決定論的のみ、このベスト プラクティスを適用するのにには、静的に初期化されたランダム シードを使用します。

### <a name="static-methods"></a>静的メソッド

静的メソッドでは、最大 8 つの値の既定のハッシュ コードを結合します。
 
 [!code-csharp[System.HashCode.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.hashcode.structure/cs/example1.cs#1)]
 [!code-vb[System.HashCode.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.hashcode.structure/vb/example1.vb#1)] 

### <a name="instance-methods"></a>インスタンス メソッド

> [!IMPORTANT]
> <xref:System.HashCode.ToHashCode> インスタンスごとに最大 1 回呼び出す必要があります<xref:System.HashCode>します。

インスタンス メソッドでは、8 個を超える値のハッシュ コードを結合します。
 
 [!code-csharp[System.HashCode.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.hashcode.structure/cs/example2.cs#1)]
 [!code-vb[System.HashCode.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.hashcode.structure/vb/example2.vb#1)]

インスタンス メソッドを組み合わせることも、特定によって生成されたハッシュ コード<xref:System.Collections.Generic.IEqualityComparer%601>実装します。

 [!code-csharp[System.HashCode.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.hashcode.structure/cs/example3.cs#1)]
 [!code-vb[System.HashCode.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.hashcode.structure/vb/example3.vb#1)]

<xref:System.HashCode>構造渡す必要がある参照で他の方法では、値型であります。
 
 [!code-csharp[System.HashCode.Structure#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.hashcode.structure/cs/example4.cs#1)]
 [!code-vb[System.HashCode.Structure#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.hashcode.structure/vb/example4.vb#1)]

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Add&lt;T&gt; (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add&lt;T&gt;(!!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Add``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add(Of T) (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Add(T value);" />
      <MemberSignature Language="F#" Value="member this.Add : 'T -&gt; unit" Usage="hashCode.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">ハッシュ コードを追加する値の型。</typeparam>
        <param name="value">ハッシュ コードに追加する値。</param>
        <summary>ハッシュ コードに値を 1 つ追加します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Add&lt;T&gt; (T value, System.Collections.Generic.IEqualityComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add&lt;T&gt;(!!T value, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Add``1(``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add(Of T) (value As T, comparer As IEqualityComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Add(T value, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Add : 'T * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; unit" Usage="hashCode.Add (value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">ハッシュ コードを追加する値の型。</typeparam>
        <param name="value">ハッシュ コードに追加する値。</param>
        <param name="comparer">ハッシュ コードの計算に使用する <see cref="T:System.Collections.Generic.IEqualityComparer&lt;T&gt;" />。
この値には、<typeparamref name="T" /> の既定の等値比較子を使用する null 参照 (Visual Basic では Nothing) を指定できます。</param>
        <summary>ハッシュ コード関数を提供する型を指定し、ハッシュ コードに単一の値を追加します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1&gt; (T1 value1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1&gt;(!!T1 value1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1) (value1 As T1) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1&gt;&#xA; static int Combine(T1 value1);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 -&gt; int" Usage="System.HashCode.Combine value1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
      </Parameters>
      <Docs>
        <typeparam name="T1">追加する値の型のハッシュ コード。</typeparam>
        <param name="value1">ハッシュ コードに追加する値。</param>
        <summary>指定した値によって返されるハッシュ コードを拡散します。</summary>
        <returns>単一の値を表すハッシュ コード。</returns>
        <remarks>一部のデータ構造では、大きな範囲にわたるハッシュ コードが拡散されることを前提としています。 このメソッドは、値によって返されたハッシュ コードの品質が向上し、基になるデータ型が単純で、たとえば、整数値である場合に便利です。</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2&gt; (T1 value1, T2 value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2&gt;(!!T1 value1, !!T2 value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``2(``0,``1)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2) (value1 As T1, value2 As T2) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static int Combine(T1 value1, T2 value2);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 -&gt; int" Usage="System.HashCode.Combine (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
      </Parameters>
      <Docs>
        <typeparam name="T1">ハッシュ コードに結合する最初の値の型。</typeparam>
        <typeparam name="T2">ハッシュ コードに結合する 2 番目の値の型。</typeparam>
        <param name="value1">ハッシュ コードに結合する最初の値。</param>
        <param name="value2">ハッシュ コードに結合する 2 番目の値。</param>
        <summary>2 つの値をハッシュ コードに結合します。</summary>
        <returns>2 つの値を表すハッシュ コード。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3&gt; (T1 value1, T2 value2, T3 value3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3&gt;(!!T1 value1, !!T2 value2, !!T3 value3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``3(``0,``1,``2)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3) (value1 As T1, value2 As T2, value3 As T3) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
      </Parameters>
      <Docs>
        <typeparam name="T1">ハッシュ コードに結合する最初の値の型。</typeparam>
        <typeparam name="T2">ハッシュ コードに結合する 2 番目の値の型。</typeparam>
        <typeparam name="T3">ハッシュ コードを組み込んで、3 番目の値の型。</typeparam>
        <param name="value1">ハッシュ コードに結合する最初の値。</param>
        <param name="value2">ハッシュ コードに結合する 2 番目の値。</param>
        <param name="value3">ハッシュ コードに結合する 3 番目の値。</param>
        <summary>3 つの値をハッシュ コードに結合します。</summary>
        <returns>3 つの値を表すハッシュ コード。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3,T4&gt; (T1 value1, T2 value2, T3 value3, T4 value4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3, T4&gt;(!!T1 value1, !!T2 value2, !!T3 value3, !!T4 value4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``4(``0,``1,``2,``3)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3, T4) (value1 As T1, value2 As T2, value3 As T3, value4 As T4) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3, T4 value4);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 * 'T4 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3, value4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
      </Parameters>
      <Docs>
        <typeparam name="T1">ハッシュ コードに結合する最初の値の型。</typeparam>
        <typeparam name="T2">ハッシュ コードに結合する 2 番目の値の型。</typeparam>
        <typeparam name="T3">ハッシュ コードを組み込んで、3 番目の値の型。</typeparam>
        <typeparam name="T4">ハッシュ コードを組み込んで、4 番目の値の型。</typeparam>
        <param name="value1">ハッシュ コードに結合する最初の値。</param>
        <param name="value2">ハッシュ コードに結合する 2 番目の値。</param>
        <param name="value3">ハッシュ コードに結合する 3 番目の値。</param>
        <param name="value4">ハッシュ コードに結合する 4 番目の値。</param>
        <summary>4 つの値をハッシュ コードに結合します。</summary>
        <returns>4 つの値を表すハッシュ コード。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3,T4,T5&gt; (T1 value1, T2 value2, T3 value3, T4 value4, T5 value5);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3, T4, T5&gt;(!!T1 value1, !!T2 value2, !!T3 value3, !!T4 value4, !!T5 value5) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``5(``0,``1,``2,``3,``4)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3, T4, T5) (value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3, value4, value5)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
        <Parameter Name="value5" Type="T5" />
      </Parameters>
      <Docs>
        <typeparam name="T1">ハッシュ コードに結合する最初の値の型。</typeparam>
        <typeparam name="T2">ハッシュ コードに結合する 2 番目の値の型。</typeparam>
        <typeparam name="T3">ハッシュ コードを組み込んで、3 番目の値の型。</typeparam>
        <typeparam name="T4">ハッシュ コードを組み込んで、4 番目の値の型。</typeparam>
        <typeparam name="T5">ハッシュ コードを組み込んで、5 番目の値の型。</typeparam>
        <param name="value1">ハッシュ コードに結合する最初の値。</param>
        <param name="value2">ハッシュ コードに結合する 2 番目の値。</param>
        <param name="value3">ハッシュ コードに結合する 3 番目の値。</param>
        <param name="value4">ハッシュ コードに結合する 4 番目の値。</param>
        <param name="value5">ハッシュ コードに結合する 5 番目の値。</param>
        <summary>5 つの値をハッシュ コードに結合します。</summary>
        <returns>5 つの値を表すハッシュ コード。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3,T4,T5,T6&gt; (T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3, T4, T5, T6&gt;(!!T1 value1, !!T2 value2, !!T3 value3, !!T4 value4, !!T5 value5, !!T6 value6) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``6(``0,``1,``2,``3,``4,``5)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3, T4, T5, T6) (value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5, value6 As T6) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3, value4, value5, value6)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
        <Parameter Name="value5" Type="T5" />
        <Parameter Name="value6" Type="T6" />
      </Parameters>
      <Docs>
        <typeparam name="T1">ハッシュ コードに結合する最初の値の型。</typeparam>
        <typeparam name="T2">ハッシュ コードに結合する 2 番目の値の型。</typeparam>
        <typeparam name="T3">ハッシュ コードを組み込んで、3 番目の値の型。</typeparam>
        <typeparam name="T4">ハッシュ コードを組み込んで、4 番目の値の型。</typeparam>
        <typeparam name="T5">ハッシュ コードを組み込んで、5 番目の値の型。</typeparam>
        <typeparam name="T6">ハッシュ コードを組み込んで、6 番目の値の型。</typeparam>
        <param name="value1">ハッシュ コードに結合する最初の値。</param>
        <param name="value2">ハッシュ コードに結合する 2 番目の値。</param>
        <param name="value3">ハッシュ コードに結合する 3 番目の値。</param>
        <param name="value4">ハッシュ コードに結合する 4 番目の値。</param>
        <param name="value5">ハッシュ コードに結合する 5 番目の値。</param>
        <param name="value6">ハッシュ コードに結合する 6 番目の値。</param>
        <summary>6 つの値をハッシュ コードに結合します。</summary>
        <returns>6 つの値を表すハッシュ コード。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3,T4,T5,T6,T7&gt; (T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3, T4, T5, T6, T7&gt;(!!T1 value1, !!T2 value2, !!T3 value3, !!T4 value4, !!T5 value5, !!T6 value6, !!T7 value7) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``7(``0,``1,``2,``3,``4,``5,``6)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3, T4, T5, T6, T7) (value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5, value6 As T6, value7 As T7) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3, value4, value5, value6, value7)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
        <Parameter Name="value5" Type="T5" />
        <Parameter Name="value6" Type="T6" />
        <Parameter Name="value7" Type="T7" />
      </Parameters>
      <Docs>
        <typeparam name="T1">ハッシュ コードに結合する最初の値の型。</typeparam>
        <typeparam name="T2">ハッシュ コードに結合する 2 番目の値の型。</typeparam>
        <typeparam name="T3">ハッシュ コードを組み込んで、3 番目の値の型。</typeparam>
        <typeparam name="T4">ハッシュ コードを組み込んで、4 番目の値の型。</typeparam>
        <typeparam name="T5">ハッシュ コードを組み込んで、5 番目の値の型。</typeparam>
        <typeparam name="T6">ハッシュ コードを組み込んで、6 番目の値の型。</typeparam>
        <typeparam name="T7">ハッシュ コードを組み込んで、7 番目の値の型。</typeparam>
        <param name="value1">ハッシュ コードに結合する最初の値。</param>
        <param name="value2">ハッシュ コードに結合する 2 番目の値。</param>
        <param name="value3">ハッシュ コードに結合する 3 番目の値。</param>
        <param name="value4">ハッシュ コードに結合する 4 番目の値。</param>
        <param name="value5">ハッシュ コードに結合する 5 番目の値。</param>
        <param name="value6">ハッシュ コードに結合する 6 番目の値。</param>
        <param name="value7">ハッシュ コードに結合する 7 番目の値。</param>
        <summary>6 つの値をハッシュ コードに結合します。</summary>
        <returns>7 つの値を表すハッシュ コード。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(!!T1 value1, !!T2 value2, !!T3 value3, !!T4 value4, !!T5 value5, !!T6 value6, !!T7 value7, !!T8 value8) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``8(``0,``1,``2,``3,``4,``5,``6,``7)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3, T4, T5, T6, T7, T8) (value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5, value6 As T6, value7 As T7, value8 As T8) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3, value4, value5, value6, value7, value8)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
        <Parameter Name="value5" Type="T5" />
        <Parameter Name="value6" Type="T6" />
        <Parameter Name="value7" Type="T7" />
        <Parameter Name="value8" Type="T8" />
      </Parameters>
      <Docs>
        <typeparam name="T1">ハッシュ コードに結合する最初の値の型。</typeparam>
        <typeparam name="T2">ハッシュ コードに結合する 2 番目の値の型。</typeparam>
        <typeparam name="T3">ハッシュ コードを組み込んで、3 番目の値の型。</typeparam>
        <typeparam name="T4">ハッシュ コードを組み込んで、4 番目の値の型。</typeparam>
        <typeparam name="T5">ハッシュ コードを組み込んで、5 番目の値の型。</typeparam>
        <typeparam name="T6">ハッシュ コードを組み込んで、6 番目の値の型。</typeparam>
        <typeparam name="T7">ハッシュ コードを組み込んで、7 番目の値の型。</typeparam>
        <typeparam name="T8">ハッシュ コードを組み込んで、8 番目の値の型。</typeparam>
        <param name="value1">ハッシュ コードに結合する最初の値。</param>
        <param name="value2">ハッシュ コードに結合する 2 番目の値。</param>
        <param name="value3">ハッシュ コードに結合する 3 番目の値。</param>
        <param name="value4">ハッシュ コードに結合する 4 番目の値。</param>
        <param name="value5">ハッシュ コードに結合する 5 番目の値。</param>
        <param name="value6">ハッシュ コードに結合する 6 番目の値。</param>
        <param name="value7">ハッシュ コードに結合する 7 番目の値。</param>
        <param name="value8">ハッシュ コードに結合する 8 番目の値。</param>
        <summary>8 つの値をハッシュ コードに結合します。</summary>
        <returns>8 つの値を表すハッシュ コード。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="hashCode.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("HashCode is a mutable struct and should not be compared with other HashCodes.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">無視されます。</param>
        <summary>このメソッドはサポートされておらず、呼び出すことはできません。</summary>
        <returns>このメソッドは、常に <see cref="T:System.NotSupportedException" /> をスローします。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">このメソッドが呼び出されると常にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="hashCode.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("HashCode is a mutable struct and should not be compared with other HashCodes. Use ToHashCode to retrieve the computed hash code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメソッドはサポートされておらず、呼び出すことはできません。</summary>
        <returns>このメソッドは、常に <see cref="T:System.NotSupportedException" /> をスローします。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">このメソッドが呼び出されると常にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName="ToHashCode">
      <MemberSignature Language="C#" Value="public int ToHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ToHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.ToHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function ToHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ToHashCode();" />
      <MemberSignature Language="F#" Value="member this.ToHashCode : unit -&gt; int" Usage="hashCode.ToHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="Overload:System.HashCode.Add" /> を連続して呼び出した後に、最終的なハッシュ コードを計算します。</summary>
        <returns>計算されたハッシュ コード。</returns>
        <remarks>このメソッドのインスタンスごとに最大 1 回呼び出す必要があります<see cref="T:System.HashCode" />します。</remarks>
      </Docs>
    </Member>
  </Members>
</Type>