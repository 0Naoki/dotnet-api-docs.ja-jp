<Type Name="DateTime" FullName="System.DateTime">
  <Metadata><Meta Name="ms.openlocfilehash" Value="19ff56dedfbefe8980b8d2a11eda302e0706ca3a" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70372424" /></Metadata><TypeSignature Language="C#" Value="public struct DateTime : IComparable, IComparable&lt;DateTime&gt;, IConvertible, IEquatable&lt;DateTime&gt;, IFormattable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTime extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.DateTime&gt;, class System.IConvertible, class System.IEquatable`1&lt;valuetype System.DateTime&gt;, class System.IFormattable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.DateTime" />
  <TypeSignature Language="VB.NET" Value="Public Structure DateTime&#xA;Implements IComparable, IComparable(Of DateTime), IConvertible, IEquatable(Of DateTime), IFormattable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public value class DateTime : IComparable, IComparable&lt;DateTime&gt;, IConvertible, IEquatable&lt;DateTime&gt;, IFormattable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type DateTime = struct&#xA;    interface IFormattable&#xA;    interface IConvertible&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.DateTime&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.DateTime&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="46cae-101">通常、日付や時刻として表現される瞬間を表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-101">Represents an instant in time, typically expressed as a date and time of day.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

## <a name="quick-links-to-example-code"></a><span data-ttu-id="46cae-102">コード例へのクイックリンク</span><span class="sxs-lookup"><span data-stu-id="46cae-102">Quick links to example code</span></span>

[!INCLUDE[interactive-note](~/includes/csharp-interactive-with-utc-note.md)]

<span data-ttu-id="46cae-103">この記事には、 `DateTime`型を使用する例がいくつか含まれています。</span><span class="sxs-lookup"><span data-stu-id="46cae-103">This article includes several examples that use the `DateTime` type:</span></span>

<span data-ttu-id="46cae-104">**初期化の例**</span><span class="sxs-lookup"><span data-stu-id="46cae-104">**Initialization Examples**</span></span>      
- [<span data-ttu-id="46cae-105">コンストラクターを呼び出す</span><span class="sxs-lookup"><span data-stu-id="46cae-105">Invoke a constructor</span></span>](#initialization-01)
- [<span data-ttu-id="46cae-106">暗黙のパラメーターなしのコンストラクターを呼び出す</span><span class="sxs-lookup"><span data-stu-id="46cae-106">Invoke the implicit parameterless constructor</span></span>](#initialization-02)
- [<span data-ttu-id="46cae-107">戻り値からの割り当て</span><span class="sxs-lookup"><span data-stu-id="46cae-107">Assignment from return value</span></span>](#initialization-03)
- [<span data-ttu-id="46cae-108">日付と時刻を表す文字列を解析する</span><span class="sxs-lookup"><span data-stu-id="46cae-108">Parsing a string that represents a date and time</span></span>](#initialization-04)
- [<span data-ttu-id="46cae-109">日付と時刻を初期化する Visual Basic 構文</span><span class="sxs-lookup"><span data-stu-id="46cae-109">Visual Basic syntax to initialize a date and time</span></span>](#initialization-05)

<span data-ttu-id="46cae-110">**オブジェクト`DateTime`を文字列として書式設定する**</span><span class="sxs-lookup"><span data-stu-id="46cae-110">**Formatting `DateTime` objects as strings**</span></span>  
- [<span data-ttu-id="46cae-111">既定の日付と時刻の形式を使用する</span><span class="sxs-lookup"><span data-stu-id="46cae-111">Use the default date time format</span></span>](#formatting-01)
- [<span data-ttu-id="46cae-112">特定のカルチャを使用して日付と時刻を書式設定する</span><span class="sxs-lookup"><span data-stu-id="46cae-112">Format a date and time using a specific culture</span></span>](#formatting-02)
- [<span data-ttu-id="46cae-113">標準またはカスタムの書式指定文字列を使用して日付時刻を書式設定する</span><span class="sxs-lookup"><span data-stu-id="46cae-113">Format a date time using a standard or custom format string</span></span>](#formatting-03)
- [<span data-ttu-id="46cae-114">書式指定文字列と特定のカルチャの両方を指定する</span><span class="sxs-lookup"><span data-stu-id="46cae-114">Specify both a format string and a specific culture</span></span>](#formatting-04)
- [<span data-ttu-id="46cae-115">Web サービスの ISO 8601 標準を使用して日付時刻を書式設定する</span><span class="sxs-lookup"><span data-stu-id="46cae-115">Format a date time using the ISO 8601 standard for web services</span></span>](#formatting-05)

<span data-ttu-id="46cae-116">**オブジェクトとし`DateTime`ての文字列の解析**</span><span class="sxs-lookup"><span data-stu-id="46cae-116">**Parsing strings as `DateTime` objects**</span></span>  
- [<span data-ttu-id="46cae-117">また`Parse` は`TryParse`を使用して、文字列を日付と時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-117">Use `Parse` or `TryParse` to convert a string to a date and time</span></span>](#parsing-01)
- [<span data-ttu-id="46cae-118">また`ParseExact` は`TryParseExact`を使用して、既知の形式の文字列を変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-118">Use `ParseExact` or `TryParseExact` to convert a string in a known format</span></span>](#parsing-02)
- [<span data-ttu-id="46cae-119">ISO 8601 文字列形式から日付と時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-119">Convert from the ISO 8601 string representation to a date and time</span></span>](#parsing-03)

<span data-ttu-id="46cae-120">**`DateTime`解決**</span><span class="sxs-lookup"><span data-stu-id="46cae-120">**`DateTime` resolution**</span></span>  
- [<span data-ttu-id="46cae-121">日付と時刻の値の解決方法を調べる</span><span class="sxs-lookup"><span data-stu-id="46cae-121">Explore the resolution of date and time values</span></span>](#resolution-01)
- [<span data-ttu-id="46cae-122">許容範囲内での等しいかどうかの比較</span><span class="sxs-lookup"><span data-stu-id="46cae-122">Comparing for equality within a tolerance</span></span>](#comparison-01)

<span data-ttu-id="46cae-123">**カルチャとカレンダー**</span><span class="sxs-lookup"><span data-stu-id="46cae-123">**Culture and calendars**</span></span>  
- [<span data-ttu-id="46cae-124">カルチャ固有の暦を使用して日付と時刻の値を表示する</span><span class="sxs-lookup"><span data-stu-id="46cae-124">Display date and time values using culture specific calendars</span></span>](#calendars-01)
- [<span data-ttu-id="46cae-125">カルチャ固有の暦に従って文字列を解析する</span><span class="sxs-lookup"><span data-stu-id="46cae-125">Parse strings according to a culture specific calendar</span></span>](#calendars-02)
- [<span data-ttu-id="46cae-126">特定のカルチャの暦から日付と時刻を初期化する</span><span class="sxs-lookup"><span data-stu-id="46cae-126">Initialize a date and time from a specific culture's calendar</span></span>](#calendars-03)
- [<span data-ttu-id="46cae-127">特定のカルチャのカレンダーを使用した日付と時刻のプロパティへのアクセス</span><span class="sxs-lookup"><span data-stu-id="46cae-127">Accessing date and time properties using a specific culture's calendar</span></span>](#calendars-04)
- [<span data-ttu-id="46cae-128">カルチャ固有の暦を使用して年の通算週を取得する</span><span class="sxs-lookup"><span data-stu-id="46cae-128">Retrieving the week of the year using culture specific calendars</span></span>](#calendars-05)

<span data-ttu-id="46cae-129">**永続性**</span><span class="sxs-lookup"><span data-stu-id="46cae-129">**Persistence**</span></span>  
- [<span data-ttu-id="46cae-130">日付と時刻の値を文字列としてローカルタイムゾーンに保持する</span><span class="sxs-lookup"><span data-stu-id="46cae-130">Persisting date and time values as strings in the local time zone</span></span>](#persistence-01)
- [<span data-ttu-id="46cae-131">カルチャおよび時刻の不変の形式で文字列として日付と時刻の値を保持する</span><span class="sxs-lookup"><span data-stu-id="46cae-131">Persisting date and time values as strings in a culture and time invariant format</span></span>](#persistence-02)
- [<span data-ttu-id="46cae-132">日付と時刻の値を整数として保持する</span><span class="sxs-lookup"><span data-stu-id="46cae-132">Persisting date and time values as integers</span></span>](#persistence-03)
- [<span data-ttu-id="46cae-133">を使用した日付と時刻の値の保持`XmlSerializer`</span><span class="sxs-lookup"><span data-stu-id="46cae-133">Persisting date and time values using the `XmlSerializer`</span></span>](#persistence-04)
- [<span data-ttu-id="46cae-134">を使用した日付と時刻の値の保持`BinaryFormatter`</span><span class="sxs-lookup"><span data-stu-id="46cae-134">Persisting date and time values using the `BinaryFormatter`</span></span>](#persistence-05)
- [<span data-ttu-id="46cae-135">日付と時刻の値をタイムゾーンデータで保持する</span><span class="sxs-lookup"><span data-stu-id="46cae-135">Persisting date and time values with time zone data</span></span>](#persistence-06)

## <a name="quick-links-to-remarks-topics"></a><span data-ttu-id="46cae-136">「解説」トピックへのクイックリンク。</span><span class="sxs-lookup"><span data-stu-id="46cae-136">Quick links to Remarks topics.</span></span>

<span data-ttu-id="46cae-137">このセクションには、 `DateTime`構造体の一般的な使用方法に関するトピックが含まれています。</span><span class="sxs-lookup"><span data-stu-id="46cae-137">This section contains topics for many common uses of the `DateTime` struct:</span></span>
  
- [<span data-ttu-id="46cae-138">オブジェクトの`DateTime`初期化</span><span class="sxs-lookup"><span data-stu-id="46cae-138">Initializing a `DateTime` object</span></span>](#initializing-a-datetime-object)
- [<span data-ttu-id="46cae-139">DateTime 値とその文字列形式</span><span class="sxs-lookup"><span data-stu-id="46cae-139">DateTime values and their string representations</span></span>](#datetime-values-and-their-string-representations)
- [<span data-ttu-id="46cae-140">文字列からの DateTime 値の解析</span><span class="sxs-lookup"><span data-stu-id="46cae-140">Parsing DateTime values from strings</span></span>](#parsing-datetime-values-from-strings)
- [<span data-ttu-id="46cae-141">DateTime 値</span><span class="sxs-lookup"><span data-stu-id="46cae-141">DateTime values</span></span>](#datetime-values)
- [<span data-ttu-id="46cae-142">DateTime 操作</span><span class="sxs-lookup"><span data-stu-id="46cae-142">DateTime operations</span></span>](#datetime-operations)
- [<span data-ttu-id="46cae-143">DateTime の解決</span><span class="sxs-lookup"><span data-stu-id="46cae-143">DateTime resolution</span></span>](#datetime-resolution)
- [<span data-ttu-id="46cae-144">DateTime 値とカレンダー</span><span class="sxs-lookup"><span data-stu-id="46cae-144">DateTime values and calendars</span></span>](#datetime-values-and-calendars)
- [<span data-ttu-id="46cae-145">DateTime 値の保持</span><span class="sxs-lookup"><span data-stu-id="46cae-145">Persisting DateTime values</span></span>](#persisting-datetime-values)
- [<span data-ttu-id="46cae-146">DateTime とTimeSpan</span><span class="sxs-lookup"><span data-stu-id="46cae-146">DateTime vs. TimeSpan</span></span>](#datetime-vs-timespan)
- [<span data-ttu-id="46cae-147">許容範囲内での等しいかどうかの比較</span><span class="sxs-lookup"><span data-stu-id="46cae-147">Comparing for equality within tolerance</span></span>](#comparing-for-equality-within-tolerance)
- [<span data-ttu-id="46cae-148">COM 相互運用の考慮事項</span><span class="sxs-lookup"><span data-stu-id="46cae-148">COM interop considerations</span></span>](#com-interop-considerations)
   
<span data-ttu-id="46cae-149">値<xref:System.DateTime>の型は、00:00:00 (午前0時)、1月1日、0001キリスト domini (共通時代 (年号)、9999年12月31日の 11:59:59 P.M. までの値を含む日付と時刻を表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-149">The <xref:System.DateTime> value type represents dates and times with values ranging from 00:00:00 (midnight), January 1, 0001 Anno Domini (Common Era) through 11:59:59 P.M., December 31, 9999 A.D.</span></span> <span data-ttu-id="46cae-150">西暦グレゴリオ暦。</span><span class="sxs-lookup"><span data-stu-id="46cae-150">(C.E.) in the Gregorian calendar.</span></span>  
  
<span data-ttu-id="46cae-151">時刻値は、ティックと呼ばれる100ナノ秒単位で測定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-151">Time values are measured in 100-nanosecond units called ticks.</span></span> <span data-ttu-id="46cae-152">特定の日付は、0001年1月1日午前12:00 時からのタイマー刻みの数です。</span><span class="sxs-lookup"><span data-stu-id="46cae-152">A particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D.</span></span> <span data-ttu-id="46cae-153">西暦カレンダーに<xref:System.Globalization.GregorianCalendar>含まれています。</span><span class="sxs-lookup"><span data-stu-id="46cae-153">(C.E.) in the <xref:System.Globalization.GregorianCalendar> calendar.</span></span> <span data-ttu-id="46cae-154">この数値には、閏月によって追加されるティックは含まれません。</span><span class="sxs-lookup"><span data-stu-id="46cae-154">The number excludes ticks that would be added by leap seconds.</span></span> <span data-ttu-id="46cae-155">たとえば、31241376000000000L のティック値は、12:00:00 0100 年1月01日金曜日の午前0時を表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-155">For example, a ticks value of 31241376000000000L represents the date Friday, January 01, 0100 12:00:00 midnight.</span></span> <span data-ttu-id="46cae-156"><xref:System.DateTime>値は常に明示的または既定の暦のコンテキストで表されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-156">A <xref:System.DateTime> value is always expressed in the context of an explicit or default calendar.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="46cae-157">分や秒などの他の時間間隔に変換するティック値を使用する場合は<xref:System.TimeSpan.TicksPerDay?displayProperty=nameWithType> <xref:System.TimeSpan.TicksPerMinute?displayProperty=nameWithType>、、 <xref:System.TimeSpan.TicksPerHour?displayProperty=nameWithType>、、 <xref:System.TimeSpan.TicksPerSecond?displayProperty=nameWithType>、または<xref:System.TimeSpan.TicksPerMillisecond?displayProperty=nameWithType>定数を使用して変換を実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-157">If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <xref:System.TimeSpan.TicksPerDay?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerHour?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=nameWithType>, or <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=nameWithType> constant to perform the conversion.</span></span> <span data-ttu-id="46cae-158">たとえば、指定されたタイマー刻みの数で表される秒数を<xref:System.DateTime.Second%2A> <xref:System.DateTime>値のコンポーネントに追加するには、式`dateValue.Second + nTicks/Timespan.TicksPerSecond`を使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-158">For example, to add the number of seconds represented by a specified number of ticks to the <xref:System.DateTime.Second%2A> component of a <xref:System.DateTime> value, you can use the expression `dateValue.Second + nTicks/Timespan.TicksPerSecond`.</span></span>  

<span data-ttu-id="46cae-159">この記事では、 [Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/System.DateTime/)または[C#](https://github.com/dotnet/samples/tree/master/snippets/csharp/System.DateTime/) GitHub の docs リポジトリから、例のセット全体のソースを表示できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-159">You can view the source for the entire set of examples from this article in either [Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/System.DateTime/) or [C#](https://github.com/dotnet/samples/tree/master/snippets/csharp/System.DateTime/) from the docs repository on GitHub.</span></span>

> [!NOTE]
>  <span data-ttu-id="46cae-160">特定のタイムゾーン<xref:System.DateTime>で日付と時刻の値を操作するための構造体の<xref:System.DateTimeOffset>代替手段として、構造体があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-160">An alternative to the <xref:System.DateTime> structure for working with date and time values in particular time zones is the <xref:System.DateTimeOffset> structure.</span></span> <span data-ttu-id="46cae-161">構造<xref:System.DateTimeOffset>体は、プライベートフィールドに日付と時刻<xref:System.DateTime>の情報を格納し、その日付と時刻がプライベート<xref:System.Int16>フィールドの UTC と異なる時間を分単位で格納します。</span><span class="sxs-lookup"><span data-stu-id="46cae-161">The <xref:System.DateTimeOffset> structure stores date and time information in a private <xref:System.DateTime> field and the number of minutes by which that date and time differs from UTC in a private <xref:System.Int16> field.</span></span> <span data-ttu-id="46cae-162">これにより、 <xref:System.DateTimeOffset>値に特定のタイムゾーンの時刻を反映させることができます。一方、値には<xref:System.DateTime> 、UTC とローカルタイムゾーンの時刻のみが明確に反映されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-162">This makes it possible for a <xref:System.DateTimeOffset> value to reflect the time in a particular time zone, whereas a <xref:System.DateTime> value can unambiguously reflect only UTC and the local time zone's time.</span></span> <span data-ttu-id="46cae-163">日付と時刻の値を操作する<xref:System.DateTime>ときに構造<xref:System.DateTimeOffset>体または構造体を使用する場合の詳細については、「 [DateTime、DateTimeOffset、TimeSpan、および TimeZoneInfo の使い分け](~/docs/standard/datetime/choosing-between-datetime.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-163">For a discussion about when to use the <xref:System.DateTime> structure or the <xref:System.DateTimeOffset> structure when working with date and time values, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md).</span></span>  
  
### <a name="initializing-a-datetime-object"></a><span data-ttu-id="46cae-164">DateTime オブジェクトの初期化</span><span class="sxs-lookup"><span data-stu-id="46cae-164">Initializing a DateTime object</span></span>  

<span data-ttu-id="46cae-165">新しい`DateTime`値には、次のようなさまざまな方法で初期値を割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="46cae-165">You can assign an initial value to a new `DateTime` value in many different ways:</span></span>

- <span data-ttu-id="46cae-166">コンストラクターを呼び出すと (値の引数を指定する場合)、暗黙のパラメーターなしのコンストラクターを使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="46cae-166">Calling a constructor, either one where you specify arguments for values, or use the implicit parameterless constructor.</span></span>
- <span data-ttu-id="46cae-167">プロパティまた`DateTime`はメソッドの戻り値にを割り当てる。</span><span class="sxs-lookup"><span data-stu-id="46cae-167">Assigning a `DateTime` to the return value of a property or method.</span></span>
- <span data-ttu-id="46cae-168">文字列形式`DateTime`から値を解析しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-168">Parsing a `DateTime` value from its string representation.</span></span>
- <span data-ttu-id="46cae-169">Visual Basic 固有の言語機能を使用して`DateTime`をインスタンス化する。</span><span class="sxs-lookup"><span data-stu-id="46cae-169">Using Visual Basic-specific language features to instantiate a `DateTime`.</span></span> 

<span data-ttu-id="46cae-170">次のコードスニペットは、それぞれの例を示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-170">The following code snippets show examples of each:</span></span>

#### <a name="invoke-constructors"></a><span data-ttu-id="46cae-171">コンストラクターの呼び出し</span><span class="sxs-lookup"><span data-stu-id="46cae-171">Invoke Constructors</span></span>

<span data-ttu-id="46cae-172">日付と時刻の値 (年、 <xref:System.DateTime>月、日、タイマー刻みの数など) の要素を指定するコンストラクターの任意のオーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-172">You call any of the overloads of the <xref:System.DateTime> constructor that specify elements of the date and time value (such as the year, month, and day, or the number of ticks).</span></span> <span data-ttu-id="46cae-173">次のコードでは、年、月<xref:System.DateTime> 、日、時、分、および秒を指定するコンストラクターを使用して、特定の日付を作成します。</span><span class="sxs-lookup"><span data-stu-id="46cae-173">The following code creates a specific date using the <xref:System.DateTime> constructor specifying the year, month, day, hour, minute, and second.</span></span>  

<a name="initialization-01"></a> <span data-ttu-id="46cae-174">[!code-vb[System.DateTime.Instantiation#1](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="46cae-174">[!code-vb[System.DateTime.Instantiation#1](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#1)]</span></span>  
[!code-csharp[System.DateTime.Instantiation#1](~/samples/snippets/csharp/System.DateTime/Instantiation.cs#1)]

<span data-ttu-id="46cae-175">を既定値`DateTime`に初期化する必要がある場合は、 `DateTime`構造体の暗黙的なパラメーターなしのコンストラクターを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-175">You invoke the `DateTime` structure's implicit parameterless constructor when you want a `DateTime` initialized to its default value.</span></span> <span data-ttu-id="46cae-176">(値型の暗黙的なパラメーターなしのコンストラクターの詳細については、「[値型](~/docs/csharp/language-reference/keywords/value-types.md)」を参照してください)。一部のコンパイラでは、 <xref:System.DateTime>値を明示的に代入せずに値を宣言することもできます。</span><span class="sxs-lookup"><span data-stu-id="46cae-176">(For details on the implicit parameterless constructor of a value type, see [Value Types](~/docs/csharp/language-reference/keywords/value-types.md).) Some compilers also support declaring a <xref:System.DateTime> value without explicitly assigning a value to it.</span></span> <span data-ttu-id="46cae-177">明示的な初期化を行わずに値を作成した場合も、既定値になります。</span><span class="sxs-lookup"><span data-stu-id="46cae-177">Creating a value without an explicit initialization also results in the default value.</span></span> <span data-ttu-id="46cae-178">次の例は、 <xref:System.DateTime>および Visual Basic 内のC#暗黙的なパラメーターなしのコンストラクターと<xref:System.DateTime> 、Visual Basic に割り当てられていない宣言を示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-178">The following example illustrates the <xref:System.DateTime> implicit parameterless constructor in C# and Visual Basic, as well as a <xref:System.DateTime> declaration without assignment in Visual Basic.</span></span>  

<a name="initialization-02"></a> <span data-ttu-id="46cae-179">[!code-vb[System.DateTime.Instantiation#5](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#5)]</span><span class="sxs-lookup"><span data-stu-id="46cae-179">[!code-vb[System.DateTime.Instantiation#5](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#5)]</span></span>  
[!code-csharp-interactive[System.DateTime.Instantiation#5](~/samples/snippets/csharp/System.DateTime/Instantiation.cs#5)]
    
#### <a name="assigning-a-computed-value"></a><span data-ttu-id="46cae-180">計算値の割り当て</span><span class="sxs-lookup"><span data-stu-id="46cae-180">Assigning a computed value</span></span>

<span data-ttu-id="46cae-181">オブジェクトに<xref:System.DateTime>は、プロパティまたはメソッドによって返された日付と時刻の値を割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="46cae-181">You can assign the <xref:System.DateTime> object a date and time value returned by a property or method.</span></span> <span data-ttu-id="46cae-182">次の例では、現在の日付と時刻、現在の世界協定時刻 (UTC) の日付と時刻、および現在の日付<xref:System.DateTime>を3つの新しい変数に代入します。</span><span class="sxs-lookup"><span data-stu-id="46cae-182">The following example assigns the current date and time, the current Coordinated Universal Time (UTC) date and time, and the current date to three new <xref:System.DateTime> variables.</span></span>  

<a name="initialization-03"></a> <span data-ttu-id="46cae-183">[!code-vb[System.DateTime.Instantiation#3](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="46cae-183">[!code-vb[System.DateTime.Instantiation#3](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#3)]</span></span>  
[!code-csharp[System.DateTime.Instantiation#3](~/samples/snippets/csharp/System.DateTime/Instantiation.cs#3)]

#### <a name="parsing-a-string-that-represents-a-datetime"></a><span data-ttu-id="46cae-184">DateTime を表す文字列を解析する</span><span class="sxs-lookup"><span data-stu-id="46cae-184">Parsing a string that represents a DateTime</span></span>

<span data-ttu-id="46cae-185">、 、、および<xref:System.DateTime.Parse%2A>の<xref:System.DateTime.TryParseExact%2A>各メソッドはすべて、文字列をそれと等価な日付と時刻の値に変換します。 <xref:System.DateTime.ParseExact%2A> <xref:System.DateTime.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-185">The <xref:System.DateTime.Parse%2A>, <xref:System.DateTime.ParseExact%2A>, <xref:System.DateTime.TryParse%2A>, and <xref:System.DateTime.TryParseExact%2A> methods all convert a string to its equivalent date and time value.</span></span> <span data-ttu-id="46cae-186">次の例では<xref:System.DateTime.Parse%2A> 、 <xref:System.DateTime.ParseExact%2A>メソッドとメソッドを使用して文字列を解析<xref:System.DateTime>し、値に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-186">The following examples use the <xref:System.DateTime.Parse%2A> and <xref:System.DateTime.ParseExact%2A> methods to parse a string and convert it to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="46cae-187">2番目の形式では、文字列形式の日付と時刻を表すの[ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)標準でサポートされている形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-187">The second format uses a form supported by the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard for a representing date and time in string format.</span></span> <span data-ttu-id="46cae-188">この標準表現は、多くの場合、web サービスで日付情報を転送するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-188">This standard representation is often used to transfer date information in web services.</span></span>

<a name="initialization-04"></a> <span data-ttu-id="46cae-189">[!code-vb[System.DateTime.Instantiation#4](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#4)]</span><span class="sxs-lookup"><span data-stu-id="46cae-189">[!code-vb[System.DateTime.Instantiation#4](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#4)]</span></span>  
[!code-csharp[System.DateTime.Instantiation#4](~/samples/snippets/csharp/System.DateTime/Instantiation.cs#4)]

<span data-ttu-id="46cae-190">メソッド<xref:System.DateTime.TryParse%2A> <xref:System.DateTime>と<xref:System.DateTime.TryParseExact%2A>メソッドは、文字列が値の有効な表現であるかどうかを示します。文字列がの場合は、変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="46cae-190">The <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods indicate whether a string is a valid representation of a <xref:System.DateTime> value and, if it is, performs the conversion.</span></span>  

#### <a name="language-specific-syntax-for-visual-basic"></a><span data-ttu-id="46cae-191">Visual Basic の言語固有の構文</span><span class="sxs-lookup"><span data-stu-id="46cae-191">Language-specific syntax for Visual Basic</span></span>

<span data-ttu-id="46cae-192">次の Visual Basic ステートメントは、新しい<xref:System.DateTime>値を初期化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-192">The following Visual Basic statement initializes a new <xref:System.DateTime> value.</span></span>  

<a name="initialization-05"></a> <span data-ttu-id="46cae-193">[!code-vb[System.DateTime.Instantiation#2](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="46cae-193">[!code-vb[System.DateTime.Instantiation#2](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#2)]</span></span>  

### <a name="datetime-values-and-their-string-representations"></a><span data-ttu-id="46cae-194">DateTime 値とその文字列形式</span><span class="sxs-lookup"><span data-stu-id="46cae-194">DateTime values and their string representations</span></span>  

<span data-ttu-id="46cae-195">内部的に<xref:System.DateTime>は、すべての値は、0001年1月1日午前0時12:00:00 以降に経過したティック数 (100 ナノ秒間隔の数) として表されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-195">Internally, all <xref:System.DateTime> values are represented as the number of ticks (the number of 100-nanosecond intervals) that have elapsed since 12:00:00 midnight, January 1, 0001.</span></span> <span data-ttu-id="46cae-196">実際<xref:System.DateTime>の値は、表示されたときの値の表示方法とは関係ありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-196">The actual <xref:System.DateTime> value is independent of the way in which that value appears when displayed.</span></span> <span data-ttu-id="46cae-197"><xref:System.DateTime>値の外観は、値を文字列形式に変換する書式設定操作の結果です。</span><span class="sxs-lookup"><span data-stu-id="46cae-197">The appearance of a <xref:System.DateTime> value is the result of a formatting operation that converts a value to its string representation.</span></span>  
  
<span data-ttu-id="46cae-198">日付と時刻の値の外観は、カルチャ、国際基準、アプリケーションの要件、および個人設定によって異なります。</span><span class="sxs-lookup"><span data-stu-id="46cae-198">The appearance of date and time values is dependent on culture, international standards, application requirements, and personal preference.</span></span> <span data-ttu-id="46cae-199">構造<xref:System.DateTime>体は、のオーバーロードを使用して日付と時刻<xref:System.DateTime.ToString%2A>の値を書式設定する際の柔軟性を備えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-199">The <xref:System.DateTime> structure offers flexibility in formatting date and time values through overloads of  <xref:System.DateTime.ToString%2A>.</span></span> <span data-ttu-id="46cae-200">既定<xref:System.DateTime.ToString?displayProperty=nameWithType>のメソッドは、現在のカルチャの短い日付と長い形式の時刻パターンを使用して、日付と時刻の値の文字列形式を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-200">The default <xref:System.DateTime.ToString?displayProperty=nameWithType> method returns the string representation of a date and time value using the current culture's short date and long time pattern.</span></span> <span data-ttu-id="46cae-201">次の例では、 <xref:System.DateTime.ToString?displayProperty=nameWithType>既定のメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-201">The following example uses the default <xref:System.DateTime.ToString?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="46cae-202">現在のカルチャの短い日付パターンと長い時刻パターンを使用して、日付と時刻が表示されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-202">It displays the date and time using the short date and long time pattern for the current culture.</span></span> <span data-ttu-id="46cae-203">En-us カルチャは、この例が実行されたコンピューター上の現在のカルチャです。</span><span class="sxs-lookup"><span data-stu-id="46cae-203">The en-US culture is the current culture on the computer on which the example was run.</span></span>  
  
<a name="formatting-01"></a> <span data-ttu-id="46cae-204">[!code-csharp[System.DateTime.Formatting#1](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#1)]</span><span class="sxs-lookup"><span data-stu-id="46cae-204">[!code-csharp[System.DateTime.Formatting#1](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#1)]</span></span>
[!code-vb[System.DateTime.Formatting#1](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#1)]  

<span data-ttu-id="46cae-205">場合によっては、特定のカルチャで日付の書式を設定して、サーバーがクライアントとは異なるカルチャに存在する可能性がある web シナリオをサポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-205">You may need to format dates in a specific culture to support web scenarios where the server may be in a different culture from the client.</span></span> <span data-ttu-id="46cae-206">カルチャを指定するには<xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> 、メソッドを使用して、特定のカルチャで短い日付と長い時刻の表現を作成します。</span><span class="sxs-lookup"><span data-stu-id="46cae-206">You specify the culture using the <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to create the short date and long time representation in a specific culture.</span></span> <span data-ttu-id="46cae-207">次の例では<xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> 、メソッドを使用して、fr-fr カルチャの短い日付パターンと長い時刻パターンを使用して日付と時刻を表示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-207">The following example uses the <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to display the date and time using the short date and long time pattern for the fr-FR culture.</span></span>  
  
<a name="formatting-02"></a> <span data-ttu-id="46cae-208">[!code-csharp-interactive[System.DateTime.Formatting#2](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#2)]</span><span class="sxs-lookup"><span data-stu-id="46cae-208">[!code-csharp-interactive[System.DateTime.Formatting#2](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#2)]</span></span>
[!code-vb[System.DateTime.Formatting#2](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#2)]  

 <span data-ttu-id="46cae-209">他のアプリケーションでは、日付の異なる文字列形式が必要になる場合があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-209">Other applications may require different string representations of a date.</span></span> <span data-ttu-id="46cae-210">メソッド<xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>は、現在のカルチャの書式指定規則を使用して、標準またはカスタムの書式指定子によって定義された文字列形式を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-210">The <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method returns the string representation defined by a standard or custom format specifier using the formatting conventions of the current culture.</span></span> <span data-ttu-id="46cae-211">次の例では<xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> 、メソッドを使用して、en-us カルチャ (例が実行されたコンピューター上の現在のカルチャ) の完全な日付と時刻のパターンを表示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-211">The following example uses the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method to display the full date and time pattern for the en-US culture, the current culture on the computer on which the example was run.</span></span>  
  
<a name="formatting-03"></a> <span data-ttu-id="46cae-212">[!code-csharp[System.DateTime.Formatting#3](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#3)]</span><span class="sxs-lookup"><span data-stu-id="46cae-212">[!code-csharp[System.DateTime.Formatting#3](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#3)]</span></span>
[!code-vb[System.DateTime.Formatting#3](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#3)]  

 <span data-ttu-id="46cae-213">最後に、 <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドを使用して、カルチャと形式の両方を指定できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-213">Finally, you can specify both the culture and the format using the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="46cae-214">次の例では<xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 、メソッドを使用して、fr-fr カルチャの完全な日付と時刻のパターンを表示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-214">The following example uses the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method to display the full date and time pattern for the fr-FR culture.</span></span>  

<a name="formatting-04"></a> <span data-ttu-id="46cae-215">[!code-csharp-interactive[System.DateTime.Formatting#4](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#4)]</span><span class="sxs-lookup"><span data-stu-id="46cae-215">[!code-csharp-interactive[System.DateTime.Formatting#4](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#4)]</span></span>
[!code-vb[System.DateTime.Formatting#4](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#4)]  

<span data-ttu-id="46cae-216"><xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>オーバーロードをカスタム書式指定文字列と共に使用して、他の形式を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="46cae-216">The <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> overload can also be used with a custom format string to specify other formats.</span></span> <span data-ttu-id="46cae-217">次の例では、web サービスでよく使用される[ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)標準形式を使用して文字列の書式を設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-217">The following example shows how to format a string using the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard format often used for web services.</span></span> <span data-ttu-id="46cae-218">Iso 8601 形式には、対応する標準書式指定文字列がありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-218">The Iso 8601 format does not have a corresponding standard format string.</span></span>

<a name="formatting-05"></a> <span data-ttu-id="46cae-219">[!code-csharp-interactive[System.DateTime.Formatting#5](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#5)]</span><span class="sxs-lookup"><span data-stu-id="46cae-219">[!code-csharp-interactive[System.DateTime.Formatting#5](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#5)]</span></span>
[!code-vb[System.DateTime.Formatting#5](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#5)]  

<span data-ttu-id="46cae-220">値の書式設定<xref:System.DateTime>の詳細については、「標準の[日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)」および「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-220">For more information about formatting <xref:System.DateTime> values, see  [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  

### <a name="parsing-datetime-values-from-strings"></a><span data-ttu-id="46cae-221">文字列からの DateTime 値の解析</span><span class="sxs-lookup"><span data-stu-id="46cae-221">Parsing DateTime values from strings</span></span>

<span data-ttu-id="46cae-222">解析は、日付と時刻の文字列形式を<xref:System.DateTime>値に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-222">Parsing converts the string representation of a date and time to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="46cae-223">通常、日付と時刻の文字列には、アプリケーションで2つの異なる使用方法があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-223">Typically, date and time strings have two different usages in applications:</span></span>  
  
-   <span data-ttu-id="46cae-224">日付と時刻は、さまざまな形式を取り、現在のカルチャまたは特定のカルチャの規則を反映しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-224">A date and time takes a variety of forms and reflects the conventions of either the current culture or a specific culture.</span></span> <span data-ttu-id="46cae-225">たとえば、アプリケーションでは、現在のカルチャが en-us であるユーザーが "12/15/2013" または "December 15, 2013" という日付値を入力することを許可しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-225">For example, an application allows a user whose current culture is en-US to input a date value as "12/15/2013" or "December 15, 2013".</span></span> <span data-ttu-id="46cae-226">これにより、現在のカルチャが en gb であるユーザーが、日付値を "15/12/2013" または "15 December 2013" として入力できるようになります。</span><span class="sxs-lookup"><span data-stu-id="46cae-226">It allows a user whose current culture is en-gb to input a date value as "15/12/2013" or "15 December 2013."</span></span>  
  
-   <span data-ttu-id="46cae-227">日付と時刻は定義済みの形式で表されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-227">A date and time is represented in a predefined format.</span></span> <span data-ttu-id="46cae-228">たとえば、アプリケーションは、アプリが実行されているカルチャとは無関係に、日付を "20130103" としてシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-228">For example, an application serializes a date as "20130103" independently of the culture on which the app is running.</span></span> <span data-ttu-id="46cae-229">アプリケーションでは、現在のカルチャの短い日付形式で日付を入力する必要がある場合があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-229">An application may require dates be input in the current culture's short date format.</span></span>
  
<span data-ttu-id="46cae-230"><xref:System.DateTime.Parse%2A>また<xref:System.DateTime>は<xref:System.DateTime.TryParse%2A>メソッドを使用して、カルチャで使用される一般的な日付と時刻の形式のいずれかの文字列を値に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-230">You use the <xref:System.DateTime.Parse%2A> or <xref:System.DateTime.TryParse%2A> method to convert a string from one of the common date and time formats used by a culture to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="46cae-231">次の例では、を使用<xref:System.DateTime.TryParse%2A>して、カルチャ固有のさまざまな形式の日付文字列<xref:System.DateTime>を値に変換する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-231">The following example shows how you can use <xref:System.DateTime.TryParse%2A> to convert date strings in different culture-specific formats to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="46cae-232">現在のカルチャを英語 (英国) に変更し、 <xref:System.DateTime.GetDateTimeFormats>メソッドを呼び出して、日付と時刻の文字列の配列を生成します。</span><span class="sxs-lookup"><span data-stu-id="46cae-232">It changes the current culture to English (Great Britain) and calls the <xref:System.DateTime.GetDateTimeFormats> method to generate an array of date and time strings.</span></span> <span data-ttu-id="46cae-233">次に、配列内の各要素を<xref:System.DateTime.TryParse%2A>メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="46cae-233">It then passes each element in the array to the <xref:System.DateTime.TryParse%2A> method.</span></span> <span data-ttu-id="46cae-234">この例の出力は、解析メソッドがカルチャ固有の各日付と時刻の文字列を正常に変換できることを示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-234">The output from the example shows the parsing method was able to successfully convert each of the culture-specific date and time strings.</span></span>  
  
<a name="parsing-01"></a> <span data-ttu-id="46cae-235">[!code-csharp-interactive[System.DateTime.Parsing#1](~/samples/snippets/csharp/System.DateTime/Parsing.cs#1)]</span><span class="sxs-lookup"><span data-stu-id="46cae-235">[!code-csharp-interactive[System.DateTime.Parsing#1](~/samples/snippets/csharp/System.DateTime/Parsing.cs#1)]</span></span>
[!code-vb[System.DateTime.Parsing#1](~/samples/snippets/visualbasic/System.DateTime/Parsing.vb#1)]  

<span data-ttu-id="46cae-236">特定の<xref:System.DateTime.ParseExact%2A> 形式また<xref:System.DateTime.TryParseExact%2A>は書式に一致する文字列を値に変換するには、メソッドとメソッドを使用します。<xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="46cae-236">You use the <xref:System.DateTime.ParseExact%2A> and <xref:System.DateTime.TryParseExact%2A> methods to convert a string that must match a particular format or formats to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="46cae-237">1つまたは複数の日付と時刻の書式指定文字列を、解析メソッドのパラメーターとして指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-237">You specify one or more date and time format strings as a parameter to the parsing method.</span></span> <span data-ttu-id="46cae-238">次の例では<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> 、メソッドを使用して、"yyyyMMdd" 形式または "HHmmss" 形式の文字列を値<xref:System.DateTime>に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-238">The following example uses the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method to convert strings that must be either in a "yyyyMMdd" format or a "HHmmss" format to <xref:System.DateTime> values.</span></span>  
  
<a name="parsing-02"></a> <span data-ttu-id="46cae-239">[!code-csharp[System.DateTime.Parsing#2](~/samples/snippets/csharp/System.DateTime/Parsing.cs#2)]</span><span class="sxs-lookup"><span data-stu-id="46cae-239">[!code-csharp[System.DateTime.Parsing#2](~/samples/snippets/csharp/System.DateTime/Parsing.cs#2)]</span></span>
[!code-vb[System.DateTime.Parsing#2](~/samples/snippets/visualbasic/System.DateTime/Parsing.vb#2)]  

<span data-ttu-id="46cae-240">の一般的な使用<xref:System.DateTime.ParseExact%2A>方法の1つは、web サービスから文字列形式を変換することです (通常は[ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)標準形式)。</span><span class="sxs-lookup"><span data-stu-id="46cae-240">One common use for <xref:System.DateTime.ParseExact%2A> is to convert a string representation from a web service, usually in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard format.</span></span> <span data-ttu-id="46cae-241">次のコードは、使用する正しい書式設定文字列を示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-241">The following code shows the correct format string to use:</span></span>

<a name="parsing-03"></a> <span data-ttu-id="46cae-242">[!code-csharp-interactive[System.DateTime.Parsing#3](~/samples/snippets/csharp/System.DateTime/Parsing.cs#3)]</span><span class="sxs-lookup"><span data-stu-id="46cae-242">[!code-csharp-interactive[System.DateTime.Parsing#3](~/samples/snippets/csharp/System.DateTime/Parsing.cs#3)]</span></span>
[!code-vb[System.DateTime.Parsing#3](~/samples/snippets/visualbasic/System.DateTime/Parsing.vb#3)]  

<span data-ttu-id="46cae-243">文字列を解析できない場合、メソッド<xref:System.DateTime.Parse%2A>と<xref:System.DateTime.ParseExact%2A>メソッドは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="46cae-243">If a string cannot be parsed, the <xref:System.DateTime.Parse%2A> and <xref:System.DateTime.ParseExact%2A> methods throw an exception.</span></span> <span data-ttu-id="46cae-244">メソッド<xref:System.DateTime.TryParse%2A>と<xref:System.DateTime.TryParseExact%2A>メソッドは、 <xref:System.Boolean>変換が成功したか失敗したかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-244">The <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods return a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span> <span data-ttu-id="46cae-245">パフォーマンスが重要な<xref:System.DateTime.TryParse%2A>シナリオ<xref:System.DateTime.TryParseExact%2A>では、メソッドまたはメソッドを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-245">You should use the <xref:System.DateTime.TryParse%2A> or <xref:System.DateTime.TryParseExact%2A> methods in scenarios where performance is important.</span></span> <span data-ttu-id="46cae-246">日付と時刻の文字列の解析操作は、高いエラー率を持つ傾向があり、例外処理はコストが高くなります。</span><span class="sxs-lookup"><span data-stu-id="46cae-246">The parsing operation for date and time strings tends to have a high failure rate, and exception handling is expensive.</span></span> <span data-ttu-id="46cae-247">これらのメソッドは、文字列がユーザーによって入力された場合、または不明なソースからのものである場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-247">Use these methods if strings are input by users or coming from an unknown source.</span></span> 
  
<span data-ttu-id="46cae-248">日付と時刻の値の解析の詳細については、「[日付と時刻の文字列の解析](~/docs/standard/base-types/parsing-datetime.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-248">For more information about parsing date and time values, see [Parsing Date and Time Strings](~/docs/standard/base-types/parsing-datetime.md).</span></span>  

### <a name="datetime-values"></a><span data-ttu-id="46cae-249">DateTime 値</span><span class="sxs-lookup"><span data-stu-id="46cae-249">DateTime values</span></span>

<span data-ttu-id="46cae-250"><xref:System.DateTime>型の時刻値の説明は、通常、協定世界時 (UTC) 標準を使用して表現されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-250">Descriptions of time values in the <xref:System.DateTime> type are often expressed using the Coordinated Universal Time (UTC) standard.</span></span> <span data-ttu-id="46cae-251">世界協定時刻は、グリニッジ標準時 (GMT) の国際的に認識されている名前です。</span><span class="sxs-lookup"><span data-stu-id="46cae-251">Coordinated Universal Time is the internationally recognized name for Greenwich Mean Time (GMT).</span></span> <span data-ttu-id="46cae-252">世界協定時刻とは、0度の経度 (UTC の始点) で計測された時間です。</span><span class="sxs-lookup"><span data-stu-id="46cae-252">Coordinated Universal Time is the time as measured at zero degrees longitude, the UTC origin point.</span></span> <span data-ttu-id="46cae-253">夏時間は UTC には適用されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-253">Daylight saving time is not applicable to UTC.</span></span>  
  
<span data-ttu-id="46cae-254">現地時刻は、特定のタイムゾーンに対する相対値です。</span><span class="sxs-lookup"><span data-stu-id="46cae-254">Local time is relative to a particular time zone.</span></span> <span data-ttu-id="46cae-255">タイムゾーンは、タイムゾーンオフセットに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="46cae-255">A time zone is associated with a time zone offset.</span></span> <span data-ttu-id="46cae-256">タイムゾーンオフセットは、UTC 送信元ポイントから時間単位で計測されたタイムゾーンの変位です。</span><span class="sxs-lookup"><span data-stu-id="46cae-256">A time zone offset is the displacement of the time zone measured in hours from the UTC origin point.</span></span> <span data-ttu-id="46cae-257">また、現地時刻は、時間間隔調整を追加または減算する夏時間の影響を受けることもあります。</span><span class="sxs-lookup"><span data-stu-id="46cae-257">In addition, local time is optionally affected by daylight saving time, which adds or subtracts a time interval adjustment.</span></span> <span data-ttu-id="46cae-258">現地時刻は、タイムゾーンオフセットを UTC に追加し、必要に応じて夏時間を調整することによって計算されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-258">Local time is calculated by adding the time zone offset to UTC and adjusting for daylight saving time if necessary.</span></span> <span data-ttu-id="46cae-259">UTC の配信元ポイントのタイムゾーンオフセットが0です。</span><span class="sxs-lookup"><span data-stu-id="46cae-259">The time zone offset at the UTC origin point is zero.</span></span>  
  
<span data-ttu-id="46cae-260">UTC 時刻は、ファイルにおける計算、比較、および日付と時刻の格納に適しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-260">UTC time is suitable for calculations, comparisons, and storing dates and time in files.</span></span> <span data-ttu-id="46cae-261">ローカル時刻は、デスクトップアプリケーションのユーザーインターフェイスに表示する場合に適しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-261">Local time is appropriate for display in user interfaces of desktop applications.</span></span> <span data-ttu-id="46cae-262">タイムゾーンに対応したアプリケーション (多くの Web アプリケーションなど) でも、他の多くのタイムゾーンを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-262">Time zone-aware applications (such as many Web applications) also need to work with a number of other time zones.</span></span>  
  
<span data-ttu-id="46cae-263">オブジェクトのプロパティが<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>の場合、時間が現地時刻、UTC 時刻、または他のタイムゾーンの時刻のいずれであるかは指定されていません。 <xref:System.DateTime.Kind%2A> <xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="46cae-263">If the <xref:System.DateTime.Kind%2A> property of a <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, it is unspecified whether the time represented is local time, UTC time, or a time in some other time zone.</span></span>  

### <a name="datetime-resolution"></a><span data-ttu-id="46cae-264">DateTime の解決</span><span class="sxs-lookup"><span data-stu-id="46cae-264">DateTime resolution</span></span>
  
> [!NOTE]
>  <span data-ttu-id="46cae-265">経過時間を計測するために、値に<xref:System.DateTime>対して日付と時刻の演算を実行する<xref:System.Diagnostics.Stopwatch>代わりに、クラスを使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="46cae-265">As an alternative to performing date and time arithmetic on <xref:System.DateTime> values to measure elapsed time, you can use the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
<span data-ttu-id="46cae-266">プロパティ<xref:System.DateTime.Ticks%2A>は、日付と時刻の値を 1 10-万の単位で表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-266">The <xref:System.DateTime.Ticks%2A> property expresses date and time values in units of one ten-millionth of a second.</span></span> <span data-ttu-id="46cae-267">プロパティ<xref:System.DateTime.Millisecond%2A>は、日時値の秒部分の1/1000 を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-267">The <xref:System.DateTime.Millisecond%2A> property returns the thousandths of a second in a date and time value.</span></span> <span data-ttu-id="46cae-268">プロパティへの<xref:System.DateTime.Now%2A?displayProperty=nameWithType>繰り返し呼び出しを使用して経過時間を計測することは、システムクロックに依存します。</span><span class="sxs-lookup"><span data-stu-id="46cae-268">Using repeated calls to the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> property to measure elapsed time is dependent on the system clock.</span></span> <span data-ttu-id="46cae-269">Windows 7 および Windows 8 システムのシステムクロックには、約15ミリ秒の解決策があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-269">The system clock on  Windows 7 and Windows 8 systems has a resolution of approximately 15 milliseconds.</span></span> <span data-ttu-id="46cae-270">この解像度は、100ミリ秒未満の短い時間間隔に影響します。</span><span class="sxs-lookup"><span data-stu-id="46cae-270">This resolution affects small time intervals less than 100 milliseconds.</span></span> 
  
<span data-ttu-id="46cae-271">次の例は、システムクロックの解決における現在の日付と時刻の値の依存関係を示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-271">The following example illustrates the dependence of current date and time values on the resolution of the system clock.</span></span> <span data-ttu-id="46cae-272">この例では、外側のループは20回繰り返され、内側のループは外側のループを遅らせます。</span><span class="sxs-lookup"><span data-stu-id="46cae-272">In the example, an outer loop repeats 20 times, and an inner loop serves to delay the outer loop.</span></span> <span data-ttu-id="46cae-273">外側のループカウンターの値が10の場合、 <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>メソッドを呼び出すと5ミリ秒の遅延が発生します。</span><span class="sxs-lookup"><span data-stu-id="46cae-273">If the value of the outer loop counter is 10, a call to the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method introduces a five-millisecond delay.</span></span> <span data-ttu-id="46cae-274">次の例は、の`DateTime.Now.Milliseconds` <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>呼び出しの後にのみ、プロパティの変更によって返されるミリ秒数を示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-274">The following example shows the number of milliseconds returned by the `DateTime.Now.Milliseconds` property changes only after the call to <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>.</span></span>  

<a name="resolution-01"></a> <span data-ttu-id="46cae-275">[!code-csharp-interactive[System.DateTime.Resolution#1](~/samples/snippets/csharp/System.DateTime/Resolution.cs#1)]</span><span class="sxs-lookup"><span data-stu-id="46cae-275">[!code-csharp-interactive[System.DateTime.Resolution#1](~/samples/snippets/csharp/System.DateTime/Resolution.cs#1)]</span></span>
[!code-vb[System.DateTime.Resolution#1](~/samples/snippets/visualbasic/System.DateTime/Resolution.vb#1)]  

### <a name="datetime-operations"></a><span data-ttu-id="46cae-276">DateTime 操作</span><span class="sxs-lookup"><span data-stu-id="46cae-276">DateTime operations</span></span>  

<span data-ttu-id="46cae-277"><xref:System.DateTime>構造体を使用した計算 ( <xref:System.DateTime.Add%2A>や<xref:System.DateTime.Subtract%2A>など) では、構造体の値は変更されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-277">A calculation using a <xref:System.DateTime> structure, such as <xref:System.DateTime.Add%2A> or <xref:System.DateTime.Subtract%2A>, does not modify the value of the structure.</span></span> <span data-ttu-id="46cae-278">代わりに、計算結果が値で<xref:System.DateTime>ある新しい構造体が返されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-278">Instead, the calculation returns a new <xref:System.DateTime> structure whose value is the result of the calculation.</span></span>  
  
<span data-ttu-id="46cae-279">タイムゾーン間での変換操作 (UTC と現地時刻の間、または1つのタイムゾーンと別のタイムゾーン間の変換操作) では、夏時間が考慮されますが、算術演算と比較操作は行われません。</span><span class="sxs-lookup"><span data-stu-id="46cae-279">Conversion operations between time zones (such as between UTC and local time, or between one time zone and another) take daylight saving time into account, but arithmetic and comparison operations do not.</span></span>  
  
<span data-ttu-id="46cae-280">構造<xref:System.DateTime>体自体は、あるタイムゾーンから別のタイムゾーンへの変換に対して限定的なサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="46cae-280">The <xref:System.DateTime> structure itself offers limited support for converting from one time zone to another.</span></span> <span data-ttu-id="46cae-281">メソッドを使用し<xref:System.DateTime.ToLocalTime%2A>て UTC を現地時刻に変換することも、メソッドを<xref:System.DateTime.ToUniversalTime%2A>使用して現地時刻から utc に変換することもできます。</span><span class="sxs-lookup"><span data-stu-id="46cae-281">You can use the <xref:System.DateTime.ToLocalTime%2A> method to convert UTC to local time, or you can use the <xref:System.DateTime.ToUniversalTime%2A> method to convert from local time to UTC.</span></span> <span data-ttu-id="46cae-282">ただし、 <xref:System.TimeZoneInfo>クラスでは、すべてのタイムゾーン変換メソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-282">However, a full set of time zone conversion methods is available in the <xref:System.TimeZoneInfo> class.</span></span> <span data-ttu-id="46cae-283">これらの方法を使用して、世界のタイムゾーンの時刻を他のタイムゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-283">You convert the time in any one of the world's time zones to the time in any other time zone using these methods.</span></span>  
  
<span data-ttu-id="46cae-284">オブジェクトの<xref:System.DateTime>計算と比較は、オブジェクトが同じタイムゾーンの時刻を表す場合にのみ意味があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-284">Calculations and comparisons of <xref:System.DateTime> objects are meaningful only if the objects represent times in the same time zone.</span></span> <span data-ttu-id="46cae-285">オブジェクトを<xref:System.TimeZoneInfo>使用して、 <xref:System.DateTime>値のタイムゾーンを表すことができます。ただし、この2つは疎結合です。</span><span class="sxs-lookup"><span data-stu-id="46cae-285">You can use a <xref:System.TimeZoneInfo> object to represent a <xref:System.DateTime> value's time zone, although the two are loosely coupled.</span></span> <span data-ttu-id="46cae-286">オブジェクト<xref:System.DateTime>には、その日付と時刻の値のタイムゾーンを表すオブジェクトを返すプロパティがありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-286">A <xref:System.DateTime> object does not have a property that returns an object that represents that date and time value's time zone.</span></span> <span data-ttu-id="46cae-287">プロパティ<xref:System.DateTime.Kind%2A>は、 `DateTime`が UTC、現地時刻、または指定されていないかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-287">The <xref:System.DateTime.Kind%2A> property indicates if a `DateTime` represents UTC, local time, or is unspecified.</span></span> <span data-ttu-id="46cae-288">タイムゾーンに対応するアプリケーションでは、何らかの外部メカニズムを使用して、 <xref:System.DateTime>オブジェクトが作成されたタイムゾーンを特定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-288">In a time zone-aware application, you must rely on some external mechanism to determine the time zone in which a <xref:System.DateTime> object was created.</span></span> <span data-ttu-id="46cae-289">値<xref:System.DateTime> と、<xref:System.DateTime>値のタイムゾーンを表すオブジェクトの両方をラップする構造体を使用できます。<xref:System.TimeZoneInfo></span><span class="sxs-lookup"><span data-stu-id="46cae-289">You could use a structure that wraps both the <xref:System.DateTime> value and the <xref:System.TimeZoneInfo> object that represents the <xref:System.DateTime> value's time zone.</span></span> <span data-ttu-id="46cae-290">計算および値を使用した<xref:System.DateTime>比較での UTC の使用の詳細については、「[日付と時刻を使用した算術](~/docs/standard/datetime/performing-arithmetic-operations.md)演算の実行」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-290">For details on using UTC in calculations and comparisons with <xref:System.DateTime> values, see [Performing Arithmetic Operations with Dates and Times](~/docs/standard/datetime/performing-arithmetic-operations.md).</span></span>  
  
<span data-ttu-id="46cae-291">各<xref:System.DateTime>メンバーは、グレゴリオ暦を暗黙的に使用して操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="46cae-291">Each <xref:System.DateTime> member implicitly uses the Gregorian calendar to perform its operation.</span></span> <span data-ttu-id="46cae-292">例外は、カレンダーを暗黙的に指定するメソッドです。</span><span class="sxs-lookup"><span data-stu-id="46cae-292">Exceptions are methods that implicitly specify a calendar.</span></span> <span data-ttu-id="46cae-293">これには、カレンダーを指定するコンストラクターと、から<xref:System.IFormatProvider>派生したパラメーター (など<xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType>) を持つメソッドが含まれます。</span><span class="sxs-lookup"><span data-stu-id="46cae-293">These include constructors that specify a calendar, and methods with a parameter derived from <xref:System.IFormatProvider>, such as <xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType>.</span></span>  
  
<span data-ttu-id="46cae-294"><xref:System.DateTime>型のメンバーによる操作では、閏月や月の日数などの詳細が考慮されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-294">Operations by members of the <xref:System.DateTime> type take into account details such as leap years and the number of days in a month.</span></span>  

## <a name="datetime-values-and-calendars"></a><span data-ttu-id="46cae-295">DateTime 値とカレンダー</span><span class="sxs-lookup"><span data-stu-id="46cae-295">DateTime values and calendars</span></span>  

<span data-ttu-id="46cae-296">.NET Framework クラスライブラリには、多数の calendar クラスが含まれています。これら<xref:System.Globalization.Calendar>はすべてクラスから派生します。</span><span class="sxs-lookup"><span data-stu-id="46cae-296">The .NET Framework Class Library includes a number of calendar classes, all of which are derived from the <xref:System.Globalization.Calendar> class.</span></span>  <span data-ttu-id="46cae-297">それらは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="46cae-297">They are:</span></span>  
  
-   <span data-ttu-id="46cae-298"><xref:System.Globalization.ChineseLunisolarCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="46cae-298">The <xref:System.Globalization.ChineseLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="46cae-299"><xref:System.Globalization.EastAsianLunisolarCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="46cae-299">The <xref:System.Globalization.EastAsianLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="46cae-300"><xref:System.Globalization.GregorianCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="46cae-300">The <xref:System.Globalization.GregorianCalendar> class.</span></span>  
-   <span data-ttu-id="46cae-301"><xref:System.Globalization.HebrewCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="46cae-301">The <xref:System.Globalization.HebrewCalendar> class.</span></span>  
-   <span data-ttu-id="46cae-302"><xref:System.Globalization.HijriCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="46cae-302">The <xref:System.Globalization.HijriCalendar> class.</span></span>  
-   <span data-ttu-id="46cae-303"><xref:System.Globalization.JapaneseCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="46cae-303">The <xref:System.Globalization.JapaneseCalendar> class.</span></span>  
-   <span data-ttu-id="46cae-304"><xref:System.Globalization.JapaneseLunisolarCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="46cae-304">The <xref:System.Globalization.JapaneseLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="46cae-305"><xref:System.Globalization.JulianCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="46cae-305">The <xref:System.Globalization.JulianCalendar> class.</span></span>  
-   <span data-ttu-id="46cae-306"><xref:System.Globalization.KoreanCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="46cae-306">The <xref:System.Globalization.KoreanCalendar> class.</span></span>  
-   <span data-ttu-id="46cae-307"><xref:System.Globalization.KoreanLunisolarCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="46cae-307">The <xref:System.Globalization.KoreanLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="46cae-308"><xref:System.Globalization.PersianCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="46cae-308">The <xref:System.Globalization.PersianCalendar> class.</span></span>  
-   <span data-ttu-id="46cae-309"><xref:System.Globalization.TaiwanCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="46cae-309">The <xref:System.Globalization.TaiwanCalendar> class.</span></span>  
-   <span data-ttu-id="46cae-310"><xref:System.Globalization.TaiwanLunisolarCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="46cae-310">The <xref:System.Globalization.TaiwanLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="46cae-311"><xref:System.Globalization.ThaiBuddhistCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="46cae-311">The <xref:System.Globalization.ThaiBuddhistCalendar> class.</span></span>  
-   <span data-ttu-id="46cae-312"><xref:System.Globalization.UmAlQuraCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="46cae-312">The <xref:System.Globalization.UmAlQuraCalendar> class.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

<span data-ttu-id="46cae-313">各カルチャは、読み取り<xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType>専用プロパティによって定義された既定の暦を使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-313">Each culture uses a default calendar defined by its read-only <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="46cae-314">各カルチャは、読み取り<xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType>専用プロパティによって定義された1つ以上の暦をサポートする場合があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-314">Each culture may support one or more calendars defined by its read-only <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="46cae-315">特定<xref:System.Globalization.CultureInfo>のオブジェクトによって現在使用されている<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>カレンダーは、そのプロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-315">The calendar currently used by a specific <xref:System.Globalization.CultureInfo> object is defined by its <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="46cae-316"><xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType>配列内のいずれかのカレンダーである必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-316">It must be one of the calendars found in the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> array.</span></span>  
  
<span data-ttu-id="46cae-317">カルチャの現在の暦は、そのカルチャのすべての書式設定操作で使用されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-317">A culture's current calendar is used in all formatting operations for that culture.</span></span> <span data-ttu-id="46cae-318">たとえば、タイ仏文化の既定の暦は、 <xref:System.Globalization.ThaiBuddhistCalendar>クラスによって表されるタイ仏時代 (暦) の暦です。</span><span class="sxs-lookup"><span data-stu-id="46cae-318">For example, the default calendar of the Thai Buddhist culture is the Thai Buddhist Era calendar, which is represented by the <xref:System.Globalization.ThaiBuddhistCalendar> class.</span></span>  <span data-ttu-id="46cae-319">タイ仏暦カルチャを表すオブジェクトを日付と時刻の書式設定操作で使用すると、既定でタイ仏暦の暦が使用されます。<xref:System.Globalization.CultureInfo></span><span class="sxs-lookup"><span data-stu-id="46cae-319">When a <xref:System.Globalization.CultureInfo> object that represents the Thai Buddhist culture is used in a date and time formatting operation, the Thai Buddhist Era calendar is used by default.</span></span> <span data-ttu-id="46cae-320">グレゴリオ暦は、次の例に示すよう<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>に、カルチャのプロパティが変更された場合にのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-320">The Gregorian calendar is used only if the culture's <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property is changed, as the following example shows:</span></span>  

<a name="calendars-01"></a> <span data-ttu-id="46cae-321">[!code-csharp[System.DateTime.Calendar#1](~/samples/snippets/csharp/System.DateTime/Calendar.cs#1)]</span><span class="sxs-lookup"><span data-stu-id="46cae-321">[!code-csharp[System.DateTime.Calendar#1](~/samples/snippets/csharp/System.DateTime/Calendar.cs#1)]</span></span>
[!code-vb[System.DateTime.Calendar#1](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#1)]  

<span data-ttu-id="46cae-322">カルチャの現在の暦は、次の例に示すように、そのカルチャのすべての解析操作でも使用されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-322">A culture's current calendar is also used in all parsing operations for that culture, as the following example shows.</span></span>  
  
<a name="calendars-02"></a> <span data-ttu-id="46cae-323">[!code-csharp[System.DateTime.Calendar#2](~/samples/snippets/csharp/System.DateTime/Calendar.cs#2)]</span><span class="sxs-lookup"><span data-stu-id="46cae-323">[!code-csharp[System.DateTime.Calendar#2](~/samples/snippets/csharp/System.DateTime/Calendar.cs#2)]</span></span>
[!code-vb[System.DateTime.Calendar#2](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#2)]  

<span data-ttu-id="46cae-324">特定の暦<xref:System.DateTime>の日付と時刻の要素 (年、月、日) を使用して値をインスタンス化するには、パラメーターを`calendar`含む[DateTime コンストラクター](xref:System.DateTime.%23ctor%2A)を呼び出し、それ<xref:System.Globalization.CultureInfo.Calendar%2A>をオブジェクトに渡します。カレンダーを表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-324">You instantiate a <xref:System.DateTime> value using the date and time elements (number of the year, month, and day) of a specific calendar by calling a [DateTime constructor](xref:System.DateTime.%23ctor%2A) that includes a `calendar` parameter and passing it a <xref:System.Globalization.CultureInfo.Calendar%2A> object that represents that calendar.</span></span> <span data-ttu-id="46cae-325">次の例では、 <xref:System.Globalization.ThaiBuddhistCalendar>カレンダーの日付と時刻の要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-325">The following example uses the date and time elements from the <xref:System.Globalization.ThaiBuddhistCalendar> calendar.</span></span>  
  
<a name="calendars-03"></a> <span data-ttu-id="46cae-326">[!code-csharp[System.DateTime.Calendar#3](~/samples/snippets/csharp/System.DateTime/Calendar.cs#3)]</span><span class="sxs-lookup"><span data-stu-id="46cae-326">[!code-csharp[System.DateTime.Calendar#3](~/samples/snippets/csharp/System.DateTime/Calendar.cs#3)]</span></span>
[!code-vb[System.DateTime.Calendar#3](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#3)]  

<span data-ttu-id="46cae-327"><xref:System.DateTime>パラメーターを`calendar`含まないコンストラクターは、日付と時刻の要素がグレゴリオ暦の単位として表されることを想定しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-327"><xref:System.DateTime> constructors that do not include a `calendar` parameter assume that the date and time elements are expressed as units in the Gregorian calendar.</span></span>  
  
<span data-ttu-id="46cae-328">その他<xref:System.DateTime>のすべてのプロパティとメソッドは、グレゴリオ暦を使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-328">All other <xref:System.DateTime> properties and methods use the Gregorian calendar.</span></span> <span data-ttu-id="46cae-329">たとえば、プロパティは<xref:System.DateTime.Year%2A?displayProperty=nameWithType>グレゴリオ暦の年を返し、メソッドは<xref:System.DateTime.IsLeapYear%28System.Int32%29?displayProperty=nameWithType> 、 `year`パラメーターがグレゴリオ暦の年であると想定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-329">For example, the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> property returns the year in the Gregorian calendar, and the <xref:System.DateTime.IsLeapYear%28System.Int32%29?displayProperty=nameWithType> method assumes that the `year` parameter is a year in the Gregorian calendar.</span></span>  <span data-ttu-id="46cae-330">グレゴリオ<xref:System.DateTime>暦を使用する各メンバーには、特定の暦<xref:System.Globalization.CultureInfo.Calendar%2A>を使用するクラスの対応するメンバーがあります。</span><span class="sxs-lookup"><span data-stu-id="46cae-330">Each <xref:System.DateTime> member that uses the Gregorian calendar has a corresponding member of the <xref:System.Globalization.CultureInfo.Calendar%2A> class that uses a specific calendar.</span></span> <span data-ttu-id="46cae-331">たとえば、メソッドは<xref:System.Globalization.Calendar.GetYear%2A?displayProperty=nameWithType>特定の暦の年を返し、メソッドは<xref:System.Globalization.Calendar.IsLeapYear%2A?displayProperty=nameWithType>パラメーターを特定の`year`暦の年の数値として解釈します。</span><span class="sxs-lookup"><span data-stu-id="46cae-331">For example, the <xref:System.Globalization.Calendar.GetYear%2A?displayProperty=nameWithType> method returns the year in a specific calendar, and the <xref:System.Globalization.Calendar.IsLeapYear%2A?displayProperty=nameWithType> method interprets the `year` parameter as a year number in a specific calendar.</span></span> <span data-ttu-id="46cae-332">次の例では、 <xref:System.DateTime> <xref:System.Globalization.ThaiBuddhistCalendar>クラスのおよび対応するメンバーの両方を使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-332">The following example uses both the <xref:System.DateTime> and the corresponding members of the  <xref:System.Globalization.ThaiBuddhistCalendar> class.</span></span>  
  
<a name="calendars-04"></a> <span data-ttu-id="46cae-333">[!code-csharp[System.DateTime.Calendar#4](~/samples/snippets/csharp/System.DateTime/Calendar.cs#4)]</span><span class="sxs-lookup"><span data-stu-id="46cae-333">[!code-csharp[System.DateTime.Calendar#4](~/samples/snippets/csharp/System.DateTime/Calendar.cs#4)]</span></span>
[!code-vb[System.DateTime.Calendar#4](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#4)]  

<span data-ttu-id="46cae-334">構造<xref:System.DateTime>体には<xref:System.DateTime.DayOfWeek%2A> 、グレゴリオ暦の曜日を返すプロパティが含まれています。</span><span class="sxs-lookup"><span data-stu-id="46cae-334">The <xref:System.DateTime> structure includes a <xref:System.DateTime.DayOfWeek%2A> property that returns the day of the week in the Gregorian calendar.</span></span> <span data-ttu-id="46cae-335">年の週番号を取得できるメンバーは含まれていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-335">It does not include a member that allows you to retrieve the week number of the year.</span></span> <span data-ttu-id="46cae-336">年の週を取得するには、個々のカレンダーの<xref:System.Globalization.Calendar.GetWeekOfYear%2A?displayProperty=nameWithType>メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-336">To retrieve the week of the year, call the individual calendar's <xref:System.Globalization.Calendar.GetWeekOfYear%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="46cae-337">具体的な例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-337">The following example provides an illustration.</span></span>  
  
<a name="calendars-05"></a> <span data-ttu-id="46cae-338">[!code-csharp[System.DateTime.Calendar#5](~/samples/snippets/csharp/System.DateTime/Calendar.cs#5)]</span><span class="sxs-lookup"><span data-stu-id="46cae-338">[!code-csharp[System.DateTime.Calendar#5](~/samples/snippets/csharp/System.DateTime/Calendar.cs#5)]</span></span>
[!code-vb[System.DateTime.Calendar#5](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#5)]  

<span data-ttu-id="46cae-339">日付とカレンダーの詳細については、「[カレンダーの操作](~/docs/standard/datetime/working-with-calendars.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-339">For more information on dates and calendars, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
### <a name="persisting-datetime-values"></a><span data-ttu-id="46cae-340">DateTime 値の保持</span><span class="sxs-lookup"><span data-stu-id="46cae-340">Persisting DateTime values</span></span>  

<span data-ttu-id="46cae-341">値を保持<xref:System.DateTime>するには、次の4つの方法があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-341">You can persist <xref:System.DateTime> values in four ways:</span></span>  
  
-   <span data-ttu-id="46cae-342">[これらを文字列に変換](#persisting-values-as-strings)し、文字列を保持します。</span><span class="sxs-lookup"><span data-stu-id="46cae-342">You [convert them to strings](#persisting-values-as-strings) and persist the strings.</span></span>  
-   <span data-ttu-id="46cae-343">[これらを64ビットの整数値](#persisting-values-as-integers)( <xref:System.DateTime.Ticks%2A>プロパティの値) に変換し、整数を保持します。</span><span class="sxs-lookup"><span data-stu-id="46cae-343">You [convert them to 64-bit integer values](#persisting-values-as-integers) (the value of the <xref:System.DateTime.Ticks%2A> property) and persist the integers.</span></span>  
-   <span data-ttu-id="46cae-344">[DateTime 値をシリアル化](#serializing-datetime-values)します。</span><span class="sxs-lookup"><span data-stu-id="46cae-344">You [serialize the DateTime values](#serializing-datetime-values).</span></span>  
-   <span data-ttu-id="46cae-345">[DateTime 値とタイムゾーン情報をシリアル化](#serializing-datetime-and-time-zone-data)します。</span><span class="sxs-lookup"><span data-stu-id="46cae-345">You [serialize the DateTime values along with time zone information](#serializing-datetime-and-time-zone-data).</span></span>  
  
<span data-ttu-id="46cae-346"><xref:System.DateTime>値を復元するルーチンでは、データが失われないようにするか、選択する技法に関係なく例外をスローする必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-346">You must ensure that the routine that restores the <xref:System.DateTime> values doesn't lose data or throw an exception regardless of which technique you choose.</span></span> <span data-ttu-id="46cae-347"><xref:System.DateTime>値はラウンドトリップする必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-347"><xref:System.DateTime> values should round-trip.</span></span> <span data-ttu-id="46cae-348">つまり、元の値と復元された値は同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-348">That is, the original value and the restored value should be the same.</span></span> <span data-ttu-id="46cae-349">また、元<xref:System.DateTime>の値が1つの瞬間を表す場合は、復元時の同じ時間を識別する必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-349">And if the original <xref:System.DateTime> value represents a single instant of time, it should identify the same moment of time when it's restored.</span></span>  
  
#### <a name="persisting-values-as-strings"></a><span data-ttu-id="46cae-350">保持 (値を文字列として)</span><span class="sxs-lookup"><span data-stu-id="46cae-350">Persisting values as strings</span></span>  

<span data-ttu-id="46cae-351">文字列とし<xref:System.DateTime>て保存されている値を正常に復元するには、次の規則に従います。</span><span class="sxs-lookup"><span data-stu-id="46cae-351">To successfully restore <xref:System.DateTime> values that are persisted as strings, follow these rules:</span></span>  
  
-   <span data-ttu-id="46cae-352">文字列を永続化したときと同じように復元する場合は、カルチャ固有の書式設定についても同じ仮定を行います。</span><span class="sxs-lookup"><span data-stu-id="46cae-352">Make the same assumptions about culture-specific formatting when you restore the string as when you persisted it.</span></span> <span data-ttu-id="46cae-353">現在のカルチャが保存されているシステムのカルチャと異なるシステムで文字列を復元できるようにするには、 <xref:System.DateTime.ToString%2A>オーバーロードを呼び出して、インバリアントカルチャの規則を使用して文字列を保存します。</span><span class="sxs-lookup"><span data-stu-id="46cae-353">To ensure that a string can be restored on a system whose current culture is different from the culture of the system it was saved on, call the <xref:System.DateTime.ToString%2A> overload to save the string by using the conventions of the invariant culture.</span></span> <span data-ttu-id="46cae-354">インバリアント<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>カルチャ<xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29>の規則を使用して文字列を復元するには、またはのオーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-354">Call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> or <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> overload to restore the string by using the conventions of the invariant culture.</span></span> <span data-ttu-id="46cae-355">現在のスレッド<xref:System.DateTime.ToString>カルチャ<xref:System.DateTime.Parse%28System.String%29>の規則<xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29>を使用する、、またはのオーバーロードは使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="46cae-355">Never use the <xref:System.DateTime.ToString>, <xref:System.DateTime.Parse%28System.String%29>, or <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> overloads, which use the conventions of the current thread culture.</span></span>  
  
-   <span data-ttu-id="46cae-356">日付が1つの時間を表す場合は、別のタイムゾーンでも復元された時点を表していることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-356">If the date represents a single moment of time, ensure that it represents the same moment in time when it's restored, even on a different time zone.</span></span> <span data-ttu-id="46cae-357">保存する<xref:System.DateTime>前に、値を世界協定時刻 (UTC) に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-357">Convert the <xref:System.DateTime> value to Coordinated Universal Time (UTC) before saving it.</span></span> <span data-ttu-id="46cae-358">値をタイムゾーン情報と共にシリアル化することもできます。</span><span class="sxs-lookup"><span data-stu-id="46cae-358">You can also serialize the value along with time zone information.</span></span> <span data-ttu-id="46cae-359">この方法の詳細については、「[日付時刻とタイムゾーンデータのシリアル](#serializing-datetime-and-time-zone-data)化」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-359">For more information about this approach, see [Serializing DateTime and time zone data](#serializing-datetime-and-time-zone-data).</span></span>  
  
 <span data-ttu-id="46cae-360">文字列として値を永続<xref:System.DateTime>化するときに発生する最も一般的なエラーは、既定のカルチャまたは現在のカルチャの書式指定規則に依存することです。</span><span class="sxs-lookup"><span data-stu-id="46cae-360">The most common error made when persisting <xref:System.DateTime> values as strings is to rely on the formatting conventions of the default or current culture.</span></span> <span data-ttu-id="46cae-361">文字列を保存および復元するときに現在のカルチャが異なると、問題が発生します。</span><span class="sxs-lookup"><span data-stu-id="46cae-361">Problems arise if the current culture is different when saving and restoring the strings.</span></span> <span data-ttu-id="46cae-362">これらの問題を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-362">The following example illustrates these problems.</span></span> <span data-ttu-id="46cae-363">現在のカルチャの書式指定規則 (この場合は英語 (米国)) を使用して、5つの日付を保存します。</span><span class="sxs-lookup"><span data-stu-id="46cae-363">It saves five dates using the formatting conventions of the current culture, which in this case is English (United States).</span></span> <span data-ttu-id="46cae-364">この例では、別のカルチャの書式指定規則 (この場合は英語 (英国)) を使用して日付を復元します。</span><span class="sxs-lookup"><span data-stu-id="46cae-364">It restores the dates using the formatting conventions of a different culture, which in this case is English (Great Britain).</span></span> <span data-ttu-id="46cae-365">2つのカルチャの書式指定規則が異なるため、2つの日付は復元できず、残りの3つの日付は正しく解釈されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-365">Because the formatting conventions of the two cultures are different, two of the dates can't be restored, and the remaining three dates are interpreted incorrectly.</span></span> <span data-ttu-id="46cae-366">また、元の日付と時刻の値が単精度を表している場合は、タイムゾーン情報が失われるため、復元された時刻は正しくありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-366">Also, if the original date and time values represent single moments in time, the restored times are incorrect because time zone information is lost.</span></span>  
  
<a name="persistence-01"></a> <span data-ttu-id="46cae-367">[!code-csharp[System.DateTime.Persistence#1](~/samples/snippets/csharp/System.DateTime/Persistence.cs#1)]</span><span class="sxs-lookup"><span data-stu-id="46cae-367">[!code-csharp[System.DateTime.Persistence#1](~/samples/snippets/csharp/System.DateTime/Persistence.cs#1)]</span></span>
[!code-vb[System.DateTime.Persistence#1](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#1)]  

<span data-ttu-id="46cae-368">値のラウンドトリップ<xref:System.DateTime>を成功させるには、次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="46cae-368">To round-trip <xref:System.DateTime> values successfully, follow these steps:</span></span>  
  
1.  <span data-ttu-id="46cae-369">値が単一の時間を表している場合は、 <xref:System.DateTime.ToUniversalTime%2A>メソッドを呼び出して現地時刻から UTC に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-369">If the values represent single moments of time, convert them from the local time to UTC by calling the <xref:System.DateTime.ToUniversalTime%2A> method.</span></span>  
1.  <span data-ttu-id="46cae-370"><xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29>または<xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>オーバーロードを呼び出して、日付を文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-370">Convert the dates to their string representations by calling the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> or <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="46cae-371">を<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> 引数`provider`として指定することにより、インバリアントカルチャの書式指定規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-371">Use the formatting conventions of the invariant culture by specifying <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> as the `provider` argument.</span></span> <span data-ttu-id="46cae-372">"O" または "R" 標準書式指定文字列を使用して、値がラウンドトリップするように指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-372">Specify that the value should round-trip by using the "O" or "R" standard format string.</span></span>  
  
<span data-ttu-id="46cae-373">データ損失なしで<xref:System.DateTime>永続化された値を復元するには、次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="46cae-373">To restore the persisted <xref:System.DateTime> values without data loss, follow these steps:</span></span>  
  
1.  <span data-ttu-id="46cae-374"><xref:System.DateTime.ParseExact%2A>または<xref:System.DateTime.TryParseExact%2A>オーバーロードを呼び出して、データを解析します。</span><span class="sxs-lookup"><span data-stu-id="46cae-374">Parse the data by calling the <xref:System.DateTime.ParseExact%2A> or <xref:System.DateTime.TryParseExact%2A> overload.</span></span> <span data-ttu-id="46cae-375">を<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> 引数`provider`として指定し、変換時に`format`引数に使用したのと同じ標準書式指定文字列を使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-375">Specify <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> as the `provider` argument, and use the same standard format string you used for the `format` argument during conversion.</span></span> <span data-ttu-id="46cae-376">引数に値を<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>含めます。 `styles`</span><span class="sxs-lookup"><span data-stu-id="46cae-376">Include the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> value in the `styles` argument.</span></span>  
1.  <span data-ttu-id="46cae-377">値が<xref:System.DateTime>単精度を表す場合は、 <xref:System.DateTime.ToLocalTime%2A>メソッドを呼び出して、解析された日付を UTC から現地時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-377">If the <xref:System.DateTime> values represent single moments in time, call the <xref:System.DateTime.ToLocalTime%2A> method to convert the parsed date from UTC to local time.</span></span>  
  
<span data-ttu-id="46cae-378">次の例では、インバリアントカルチャと "O" 標準書式指定文字列を<xref:System.DateTime>使用して、ソースシステムとターゲットシステムのシステム、カルチャ、またはタイムゾーンに関係なく、保存および復元された値が同じ時点を表していることを確認します。</span><span class="sxs-lookup"><span data-stu-id="46cae-378">The following example uses the invariant culture and the "O" standard format string to ensure that <xref:System.DateTime> values saved and restored represent the same moment in time regardless of the system, culture, or time zone of the source and target systems.</span></span>  
  
<a name="persistence-02"></a> <span data-ttu-id="46cae-379">[!code-csharp[System.DateTime.Persistence#2](~/samples/snippets/csharp/System.DateTime/Persistence.cs#2)]</span><span class="sxs-lookup"><span data-stu-id="46cae-379">[!code-csharp[System.DateTime.Persistence#2](~/samples/snippets/csharp/System.DateTime/Persistence.cs#2)]</span></span>
[!code-vb[System.DateTime.Persistence#2](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#2)]  

#### <a name="persisting-values-as-integers"></a><span data-ttu-id="46cae-380">値を整数として保持する</span><span class="sxs-lookup"><span data-stu-id="46cae-380">Persisting values as integers</span></span>  

<span data-ttu-id="46cae-381">日付と時刻は、タイマー刻みの数<xref:System.Int64>を表す値として保持できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-381">You can persist a date and time as an <xref:System.Int64> value that represents a number of ticks.</span></span> <span data-ttu-id="46cae-382">この場合、 <xref:System.DateTime>値を永続化して復元するシステムのカルチャを考慮する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-382">In this case, you don't have to consider the culture of the systems the <xref:System.DateTime> values are persisted and restored on.</span></span>  
  
<span data-ttu-id="46cae-383">値を整数<xref:System.DateTime>として保持するには、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="46cae-383">To persist a <xref:System.DateTime> value as an integer:</span></span>  
  
-   <span data-ttu-id="46cae-384">値が<xref:System.DateTime>単精度を表す場合は、 <xref:System.DateTime.ToUniversalTime%2A>メソッドを呼び出して UTC に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-384">If the <xref:System.DateTime> values represent single moments in time, convert them to UTC by calling the <xref:System.DateTime.ToUniversalTime%2A> method.</span></span>  
-   <span data-ttu-id="46cae-385">プロパティから値<xref:System.DateTime>によって表されるタイマー刻みの数を取得します。 <xref:System.DateTime.Ticks%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-385">Retrieve the number of ticks represented by the <xref:System.DateTime> value from its <xref:System.DateTime.Ticks%2A> property.</span></span>  
  
<span data-ttu-id="46cae-386">整数とし<xref:System.DateTime>て保存されている値を復元するには、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="46cae-386">To restore a <xref:System.DateTime> value that has been persisted as an integer:</span></span>  
  
1.  <span data-ttu-id="46cae-387">コンストラクターに<xref:System.Int64> <xref:System.DateTime> 値を渡すことによって、新しいオブジェクトをインスタンス化します<xref:System.DateTime.%23ctor%28System.Int64%29> 。</span><span class="sxs-lookup"><span data-stu-id="46cae-387">Instantiate a new <xref:System.DateTime> object by passing the <xref:System.Int64> value to the <xref:System.DateTime.%23ctor%28System.Int64%29> constructor.</span></span>  
1.  <span data-ttu-id="46cae-388">値が<xref:System.DateTime> 1 つの時点を表す場合は、 <xref:System.DateTime.ToLocalTime%2A>メソッドを呼び出して UTC からローカル時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-388">If the <xref:System.DateTime> value represents a single moment in time, convert it from UTC to the local time by calling the <xref:System.DateTime.ToLocalTime%2A> method.</span></span>  
  
<span data-ttu-id="46cae-389">次の例では、米国<xref:System.DateTime>のシステムで、値の配列を整数として保持します。表示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-389">The following example persists an array of <xref:System.DateTime> values as integers on a system in the U.S. Pacific Time zone.</span></span> <span data-ttu-id="46cae-390">UTC ゾーンのシステムで復元されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-390">It restores it on a system in the UTC zone.</span></span> <span data-ttu-id="46cae-391">整数を含むファイルには、その<xref:System.Int32>直後に続く値の<xref:System.Int64>合計数を示す値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="46cae-391">The file that contains the integers includes an <xref:System.Int32> value that indicates the total number of <xref:System.Int64> values that immediately follow it.</span></span>  
  
<a name="persistence-03"></a> <span data-ttu-id="46cae-392">[!code-csharp[System.DateTime.Persistence#3](~/samples/snippets/csharp/System.DateTime/Persistence.cs#3)]</span><span class="sxs-lookup"><span data-stu-id="46cae-392">[!code-csharp[System.DateTime.Persistence#3](~/samples/snippets/csharp/System.DateTime/Persistence.cs#3)]</span></span>
[!code-vb[System.DateTime.Persistence#3](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#3)]  

<a name="serializing-datetime-values"></a>
#### <a name="serializing-datetime-values"></a><span data-ttu-id="46cae-393">DateTime 値のシリアル化</span><span class="sxs-lookup"><span data-stu-id="46cae-393">Serializing DateTime values</span></span>  

<span data-ttu-id="46cae-394">シリアル化に<xref:System.DateTime>よってストリームまたはファイルに値を保持し、逆シリアル化によって値を復元できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-394">You can persist <xref:System.DateTime> values through serialization to a stream or file, and then restore them through deserialization.</span></span> <span data-ttu-id="46cae-395"><xref:System.DateTime>データは、指定されたオブジェクト形式でシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-395"><xref:System.DateTime> data is serialized in some specified object format.</span></span> <span data-ttu-id="46cae-396">オブジェクトは逆シリアル化されるときに復元されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-396">The objects are restored when they are deserialized.</span></span> <span data-ttu-id="46cae-397"><xref:System.Xml.Serialization.XmlSerializer>または<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>などのフォーマッタまたはシリアライザーは、シリアル化と逆シリアル化のプロセスを処理します。</span><span class="sxs-lookup"><span data-stu-id="46cae-397">A formatter or serializer, such as <xref:System.Xml.Serialization.XmlSerializer> or <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>, handles the process of serialization and deserialization.</span></span> <span data-ttu-id="46cae-398">.NET Framework によってサポートされるシリアル化とシリアル化の種類の詳細については、「[シリアル化](~/docs/standard/serialization/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-398">For more information about serialization and the types of serialization supported by the .NET Framework, see [Serialization](~/docs/standard/serialization/index.md).</span></span>
  
<span data-ttu-id="46cae-399">次の例では<xref:System.Xml.Serialization.XmlSerializer> 、クラスを使用し<xref:System.DateTime>て値をシリアル化および逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-399">The following example uses the <xref:System.Xml.Serialization.XmlSerializer> class to serialize and deserialize <xref:System.DateTime> values.</span></span> <span data-ttu-id="46cae-400">値は、20番目の世紀の閏年のすべての日を表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-400">The values represent all leap year days in the twenty-first century.</span></span> <span data-ttu-id="46cae-401">出力は、現在のカルチャが英語 (英国) であるシステム上でこの例を実行した場合の結果を表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-401">The output represents the result if the example is run on a system whose current culture is English (Great Britain).</span></span> <span data-ttu-id="46cae-402"><xref:System.DateTime>オブジェクト自体を逆シリアル化したため、コードは日付と時刻の形式のカルチャの違いを処理する必要がありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-402">Because you've deserialized the <xref:System.DateTime> object itself, the code doesn't have to handle cultural differences in date and time formats.</span></span>  
  
<a name="persistence-04"></a> <span data-ttu-id="46cae-403">[!code-csharp[System.DateTime.Persistence#4](~/samples/snippets/csharp/System.DateTime/Persistence.cs#4)]</span><span class="sxs-lookup"><span data-stu-id="46cae-403">[!code-csharp[System.DateTime.Persistence#4](~/samples/snippets/csharp/System.DateTime/Persistence.cs#4)]</span></span>
[!code-vb[System.DateTime.Persistence#4](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#4)]  

<span data-ttu-id="46cae-404">前の例には、時刻情報は含まれていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-404">The previous example doesn't include time information.</span></span> <span data-ttu-id="46cae-405">値が時間を表し、現地時刻として表現されている場合は、 <xref:System.DateTime.ToUniversalTime%2A>メソッドを呼び出すことによってシリアル化する前に、現地時刻から UTC に変換します。 <xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="46cae-405">If a <xref:System.DateTime> value represents a moment in time and is expressed as a local time, convert it from local time to UTC before serializing it by calling the <xref:System.DateTime.ToUniversalTime%2A> method.</span></span> <span data-ttu-id="46cae-406">逆シリアル化した後、 <xref:System.DateTime.ToLocalTime%2A>メソッドを呼び出して UTC からローカル時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-406">After you deserialize it, convert it from UTC to local time by calling the <xref:System.DateTime.ToLocalTime%2A> method.</span></span> <span data-ttu-id="46cae-407">次の例では<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> 、クラスを<xref:System.DateTime>使用して、米国のシステム上のデータをシリアル化します。太平洋標準時ゾーンと、米国のシステムで逆シリアル化するには中部標準ゾーン。</span><span class="sxs-lookup"><span data-stu-id="46cae-407">The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize <xref:System.DateTime> data on a system in the U.S. Pacific Standard Time zone and to deserialize it on a system in the U.S. Central Standard zone.</span></span>  
  
<a name="persistence-05"></a> <span data-ttu-id="46cae-408">[!code-csharp[System.DateTime.Persistence#5](~/samples/snippets/csharp/System.DateTime/Persistence.cs#5)]</span><span class="sxs-lookup"><span data-stu-id="46cae-408">[!code-csharp[System.DateTime.Persistence#5](~/samples/snippets/csharp/System.DateTime/Persistence.cs#5)]</span></span>
[!code-vb[System.DateTime.Persistence#5](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#5)]  

<a name="serializing-datetime-and-time-zone-data"></a>
#### <a name="serializing-datetime-and-time-zone-data"></a><span data-ttu-id="46cae-409">日付時刻とタイムゾーンデータのシリアル化</span><span class="sxs-lookup"><span data-stu-id="46cae-409">Serializing DateTime and time zone data</span></span>  

<span data-ttu-id="46cae-410">前の例では、 <xref:System.DateTime>値が現地時刻として表現されていると想定しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-410">The previous examples all assumed that <xref:System.DateTime> values are expressed as local times.</span></span> <span data-ttu-id="46cae-411">コードは UTC と現地時刻の間で値を変換し、ソースシステムとターゲットシステムで同じ時間を反映しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-411">The code converted the values between UTC and local time so they reflect the same moment in time on the source and target systems.</span></span> <span data-ttu-id="46cae-412"><xref:System.DateTime>値には、ローカルおよび UTC 以外のタイムゾーンの時刻を反映することもできます。</span><span class="sxs-lookup"><span data-stu-id="46cae-412"><xref:System.DateTime> values may also reflect moments in time in a time zone other than local and UTC.</span></span> <span data-ttu-id="46cae-413">構造体はタイムゾーンに対応していないため、 <xref:System.DateTime>値とそのタイムゾーンを<xref:System.TimeZoneInfo>表すオブジェクトの両方をシリアル化する必要があります。 <xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="46cae-413">Because the <xref:System.DateTime> structure is not time zone-aware, you have to serialize both the <xref:System.DateTime> value and the <xref:System.TimeZoneInfo> object that represents its time zone.</span></span> <span data-ttu-id="46cae-414">値とそのタイムゾーンの<xref:System.DateTime>両方を含むフィールドを持つ型を作成します。</span><span class="sxs-lookup"><span data-stu-id="46cae-414">Create a type whose fields include both the <xref:System.DateTime> value and its time zone.</span></span> <span data-ttu-id="46cae-415">次の例では`DateWithTimeZone` 、構造体を定義します。</span><span class="sxs-lookup"><span data-stu-id="46cae-415">The following example defines a `DateWithTimeZone` structure.</span></span>  
  
<a name="persistence-06"></a> <span data-ttu-id="46cae-416">[!code-csharp[System.DateTime.Persistence#6](~/samples/snippets/csharp/System.DateTime/DateWithTimeZone.cs#6)]</span><span class="sxs-lookup"><span data-stu-id="46cae-416">[!code-csharp[System.DateTime.Persistence#6](~/samples/snippets/csharp/System.DateTime/DateWithTimeZone.cs#6)]</span></span>
[!code-vb[System.DateTime.Persistence#6](~/samples/snippets/visualbasic/System.DateTime/DateWithTimeZone.vb#6)]  

> [!IMPORTANT]
>  <span data-ttu-id="46cae-417">この構造体は、オブジェクトの`DateWithTimeZone`配列をシリアル化および逆シリアル化する次の2つの例で使用されます。 `DateWithTimeZone`</span><span class="sxs-lookup"><span data-stu-id="46cae-417">The `DateWithTimeZone` structure is used in the next two examples, which serialize and deserialize an array of `DateWithTimeZone` objects.</span></span> <span data-ttu-id="46cae-418">この記事では、 [Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/System.DateTime/)または[C#](https://github.com/dotnet/samples/tree/master/snippets/csharp/System.DateTime/) GitHub の docs リポジトリから、例のセット全体のソースを表示できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-418">You can view the source for the entire set of examples from this article in either [Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/System.DateTime/) or [C#](https://github.com/dotnet/samples/tree/master/snippets/csharp/System.DateTime/) from the docs repository on GitHub.</span></span>
  
<span data-ttu-id="46cae-419">`DateWithTimeZone`構造体を使用すると、日付と時刻をタイムゾーン情報と共に保持できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-419">By using the `DateWithTimeZone` structure, you can then persist date and time along with time zone information.</span></span> <span data-ttu-id="46cae-420">次の例では<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> 、クラスを使用して`DateWithTimeZone` 、オブジェクトの配列をシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-420">The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize an array of `DateWithTimeZone` objects.</span></span>  
  
[!code-csharp[System.DateTime.Persistence#7](~/samples/snippets/csharp/System.DateTime/Persistence.cs#7)]
[!code-vb[System.DateTime.Persistence#7](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#7)]  

<span data-ttu-id="46cae-421">次の例では、 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType>メソッドを呼び出して逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-421">The following example then calls the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType> method to deserialize it.</span></span>  
  
[!code-csharp[System.DateTime.Persistence#8](~/samples/snippets/csharp/System.DateTime/Persistence.cs#8)]
[!code-vb[System.DateTime.Persistence#8](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#8)]  

### <a name="datetime-vs-timespan"></a><span data-ttu-id="46cae-422">DateTime とTimeSpan</span><span class="sxs-lookup"><span data-stu-id="46cae-422">DateTime vs. TimeSpan</span></span>  

<span data-ttu-id="46cae-423">と<xref:System.DateTime> <xref:System.DateTime> <xref:System.TimeSpan>の値型は、が時間間隔を表すのに対しては、が瞬間を表している点で異なります。 <xref:System.TimeSpan></span><span class="sxs-lookup"><span data-stu-id="46cae-423">The <xref:System.DateTime> and <xref:System.TimeSpan> value types differ in that a <xref:System.DateTime> represents an instant in time whereas a <xref:System.TimeSpan> represents a time interval.</span></span> <span data-ttu-id="46cae-424">の1つの<xref:System.DateTime>インスタンスを別のインスタンスから減算して、それらの間の時間間隔を表す<xref:System.TimeSpan>オブジェクトを取得することができます。</span><span class="sxs-lookup"><span data-stu-id="46cae-424">You can subtract one instance of <xref:System.DateTime> from another to obtain a <xref:System.TimeSpan> object that represents the time interval between them.</span></span> <span data-ttu-id="46cae-425">または、現在<xref:System.TimeSpan> <xref:System.DateTime>のに正符号を追加して<xref:System.DateTime> 、将来の日付を表す値を取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="46cae-425">Or you could add a positive <xref:System.TimeSpan> to the current <xref:System.DateTime> to obtain a <xref:System.DateTime> value that represents a future date.</span></span>  
  
<span data-ttu-id="46cae-426"><xref:System.DateTime>オブジェクトから時間間隔を加算または減算することができます。</span><span class="sxs-lookup"><span data-stu-id="46cae-426">You can add or subtract a time interval from a <xref:System.DateTime> object.</span></span> <span data-ttu-id="46cae-427">時間間隔は、負または正の値にすることができ、タイマー刻み、秒、 <xref:System.TimeSpan>オブジェクトなどの単位で表すことができます。</span><span class="sxs-lookup"><span data-stu-id="46cae-427">Time intervals can be negative or positive, and they can be expressed in units such as ticks, seconds, or as a <xref:System.TimeSpan> object.</span></span>  

### <a name="comparing-for-equality-within-tolerance"></a><span data-ttu-id="46cae-428">許容範囲内での等しいかどうかの比較</span><span class="sxs-lookup"><span data-stu-id="46cae-428">Comparing for equality within tolerance</span></span>

<span data-ttu-id="46cae-429">値の<xref:System.DateTime>等価比較は正確です。</span><span class="sxs-lookup"><span data-stu-id="46cae-429">Equality comparisons for <xref:System.DateTime> values are exact.</span></span> <span data-ttu-id="46cae-430">つまり、2つの値は等しいと見なされるように、同じタイマー刻みの数として表す必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-430">That means two values must be expressed as the same number of ticks to be considered equal.</span></span> <span data-ttu-id="46cae-431">多くの場合、この有効桁数は不要であるか、または多くのアプリケーションで間違っています。</span><span class="sxs-lookup"><span data-stu-id="46cae-431">That precision is often unnecessary or even incorrect for many applications.</span></span> <span data-ttu-id="46cae-432">多くの場合、オブジェクトが<xref:System.DateTime> **ほぼ等しい**かどうかをテストする必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-432">Often, you want to test if <xref:System.DateTime> objects are **roughly equal**.</span></span> 

<span data-ttu-id="46cae-433">次の例は、ほぼ同等<xref:System.DateTime>の値を比較する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-433">The following example demonstrates how to compare roughly equivalent <xref:System.DateTime> values.</span></span> <span data-ttu-id="46cae-434">等しいかどうかを宣言する場合、小さい余白が許容されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-434">It accepts a small margin of difference when declaring them equal.</span></span>  
  
<a name="comparison-01"></a> <span data-ttu-id="46cae-435">[!code-csharp[System.DateTime.Comparisons#1](~/samples/snippets/csharp/System.DateTime/DateTimeComparisons.cs#1)]</span><span class="sxs-lookup"><span data-stu-id="46cae-435">[!code-csharp[System.DateTime.Comparisons#1](~/samples/snippets/csharp/System.DateTime/DateTimeComparisons.cs#1)]</span></span>
[!code-vb[System.DateTime.Comparisons#1](~/samples/snippets/visualbasic/System.DateTime/DateTimeComparisons.vb#1)]  

### <a name="com-interop-considerations"></a><span data-ttu-id="46cae-436">COM 相互運用の考慮事項</span><span class="sxs-lookup"><span data-stu-id="46cae-436">COM interop considerations</span></span>  

<span data-ttu-id="46cae-437">COM アプリケーションに転送され、マネージアプリケーションに転送される値は、ラウンドトリップと呼ばれます。<xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="46cae-437">A <xref:System.DateTime> value that is transferred to a COM application, then is transferred back to a managed application, is said to round-trip.</span></span> <span data-ttu-id="46cae-438">ただし、 <xref:System.DateTime>時刻だけを指定する値は、期待どおりにラウンドトリップしません。</span><span class="sxs-lookup"><span data-stu-id="46cae-438">However, a <xref:System.DateTime> value that specifies only a time does not round-trip as you might expect.</span></span>  
  
<span data-ttu-id="46cae-439">3 pm などの時刻のみをラウンドトリップする場合、最終的な日付と時刻は紀元1899年12月30日になります。</span><span class="sxs-lookup"><span data-stu-id="46cae-439">If you round-trip only a time, such as 3 P.M., the final date and time is December 30, 1899 C.E.</span></span> <span data-ttu-id="46cae-440">午後3:00、午後1時から0001年1月1日ではなく、</span><span class="sxs-lookup"><span data-stu-id="46cae-440">at 3:00 P.M., instead of January, 1, 0001 C.E.</span></span> <span data-ttu-id="46cae-441">午後3:00</span><span class="sxs-lookup"><span data-stu-id="46cae-441">at 3:00 P.M.</span></span> <span data-ttu-id="46cae-442">.NET Framework と COM は、時刻のみが指定されている場合、既定の日付を想定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-442">The .NET Framework and COM assume a default date when only a time is specified.</span></span> <span data-ttu-id="46cae-443">ただし、COM システムでは、西暦1899年12月30日という基本日付が想定されていますが、.NET Framework では、西暦1月、1日、0001年1月の基本日付を前提としています。</span><span class="sxs-lookup"><span data-stu-id="46cae-443">However, the COM system assumes a base date of December 30, 1899 C.E., while the .NET Framework assumes a base date of January, 1, 0001 C.E.</span></span>  
  
<span data-ttu-id="46cae-444">.NET Framework から COM に渡されるのが時間だけの場合は、その時刻を COM によって使用される形式に変換する特別な処理が実行されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-444">When only a time is passed from the .NET Framework to COM, special processing is performed that converts the time to the format used by COM.</span></span> <span data-ttu-id="46cae-445">COM から .NET Framework に1つの時刻だけが渡された場合は、1899年12月30日以前の正しい日付と時刻が破損するため、特別な処理は実行されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-445">When only a time is passed from COM to the .NET Framework, no special processing is performed because that would corrupt legitimate dates and times on or before December 30, 1899.</span></span> <span data-ttu-id="46cae-446">日付が COM からのラウンドトリップを開始した場合、.NET Framework と COM は日付を保持します。</span><span class="sxs-lookup"><span data-stu-id="46cae-446">If a date starts its round-trip from COM, the .NET Framework and COM preserve the date.</span></span>  
  
<span data-ttu-id="46cae-447">.NET Framework と COM の動作は、アプリケーションが時刻のみを指定するを<xref:System.DateTime>ラウンドトリップする場合、最終的<xref:System.DateTime>なオブジェクトからの誤った日付を変更または無視するようにアプリケーションが記憶する必要があることを意味します。</span><span class="sxs-lookup"><span data-stu-id="46cae-447">The behavior of the .NET Framework and COM means that if your application round-trips a <xref:System.DateTime> that only specifies a time, your application must remember to modify or ignore the erroneous date from the final <xref:System.DateTime> object.</span></span>  
     
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="46cae-448">この型のすべてのメンバーは、スレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="46cae-448">All members of this type are thread safe.</span></span> <span data-ttu-id="46cae-449">インスタンスの状態を変更するように見えるメンバーは、実際には新しい値で初期化された新しいインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-449">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="46cae-450">他の型と同様に、この型のインスタンスを含む共有変数の読み取りと書き込みは、スレッドセーフを保証するためにロックによって保護される必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-450">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.DateTimeOffset" />
    <altmember cref="T:System.TimeSpan" />
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
    <altmember cref="T:System.TimeZoneInfo" />
    <related type="Article" href="~/docs/standard/datetime/choosing-between-datetime.md"><span data-ttu-id="46cae-451">DateTime、DateTimeOffset、TimeSpan、および TimeZoneInfo の使い分け</span><span class="sxs-lookup"><span data-stu-id="46cae-451">Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo</span></span></related>
    <related type="Article" href="~/docs/standard/datetime/working-with-calendars.md"><span data-ttu-id="46cae-452">カレンダーの使用</span><span class="sxs-lookup"><span data-stu-id="46cae-452">Working with Calendars</span></span></related>
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="46cae-453">サンプル: .NET Core WinForms 書式指定ユーティリティC#()</span><span class="sxs-lookup"><span data-stu-id="46cae-453">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="46cae-454">サンプル: .NET Core WinForms の書式設定ユーティリティ (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="46cae-454">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="46cae-455"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-455">Initializes a new instance of the <see cref="T:System.DateTime" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (long ticks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 ticks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ticks As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(long ticks);" />
      <MemberSignature Language="F#" Value="new DateTime : int64 -&gt; DateTime" Usage="new System.DateTime ticks" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ticks"><span data-ttu-id="46cae-456">日時をグレゴリオ暦の 0001 年 1 月 1 日の 00:00:00.000 以降の経過時間 (100 ナノ秒単位) で表した値。</span><span class="sxs-lookup"><span data-stu-id="46cae-456">A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.</span></span></param>
        <summary><span data-ttu-id="46cae-457"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定したタイマー刻み数に初期化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-457">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to a specified number of ticks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-458"><xref:System.DateTime.Kind%2A> プロパティは <xref:System.DateTimeKind.Unspecified> に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-458">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="46cae-459">日付と時刻のデータの移植性、または制限されたタイムゾーンの認識が重要なアプリケーションの場合は<xref:System.DateTimeOffset> 、対応するコンストラクターを使用できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-459">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-460">次の例では、 <xref:System.DateTime>コンストラクターの1つを示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-460">The following example demonstrates one of the <xref:System.DateTime> constructors.</span></span>  
  
 [!code-cpp[datetime.ctor_Int64#1](~/samples/snippets/cpp/VS_Snippets_CLR/datetime.ctor_Int64/CPP/ticks.cpp#1)]
 [!code-csharp[datetime.ctor_Int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/datetime.ctor_Int64/CS/ticks.cs#1)]
 [!code-vb[datetime.ctor_Int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/datetime.ctor_Int64/VB/ticks.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-461"><paramref name="ticks" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか <see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="46cae-461"><paramref name="ticks" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (long ticks, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 ticks, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int64,System.DateTimeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ticks As Long, kind As DateTimeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(long ticks, DateTimeKind kind);" />
      <MemberSignature Language="F#" Value="new DateTime : int64 * DateTimeKind -&gt; DateTime" Usage="new System.DateTime (ticks, kind)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="kind" Type="System.DateTimeKind" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ticks"><span data-ttu-id="46cae-462">日時をグレゴリオ暦の 0001 年 1 月 1 日の 00:00:00.000 以降の経過時間 (100 ナノ秒単位) で表した値。</span><span class="sxs-lookup"><span data-stu-id="46cae-462">A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.</span></span></param>
        <param name="kind"><span data-ttu-id="46cae-463"><paramref name="ticks" /> が、現地時刻、世界協定時刻 (UTC)、またはそのどちらでもない時刻のうち、どれを指定するかを示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="46cae-463">One of the enumeration values that indicates whether <paramref name="ticks" /> specifies a local time, Coordinated Universal Time (UTC), or neither.</span></span></param>
        <summary><span data-ttu-id="46cae-464"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定したタイマー刻み数と世界協定時刻 (UTC) または現地時刻に初期化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-464">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to a specified number of ticks and to Coordinated Universal Time (UTC) or local time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-465">日付と時刻のデータの移植性、または制限されたタイムゾーンの認識が重要なアプリケーションの場合は<xref:System.DateTimeOffset> 、対応するコンストラクターを使用できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-465">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-466"><paramref name="ticks" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか <see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="46cae-466"><paramref name="ticks" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46cae-467"><paramref name="kind" /> は <see cref="T:System.DateTimeKind" /> 値のいずれでもありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-467"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int -&gt; DateTime" Usage="new System.DateTime (year, month, day)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="46cae-468">年 (1 から 9999)。</span><span class="sxs-lookup"><span data-stu-id="46cae-468">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="46cae-469">月 (1 ～ 12)。</span><span class="sxs-lookup"><span data-stu-id="46cae-469">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="46cae-470">日付 (1 ～ <paramref name="month" /> の日数)。</span><span class="sxs-lookup"><span data-stu-id="46cae-470">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <summary><span data-ttu-id="46cae-471"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定した年、月、日に初期化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-471">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, and day.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-472">このコンストラクターは`year`、 `month`、、 `day`およびを、グレゴリオ暦の年、月、日として解釈します。</span><span class="sxs-lookup"><span data-stu-id="46cae-472">This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="46cae-473">別の暦<xref:System.DateTime>で年、月、日を使用して値をインスタンス化するに<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29>は、コンストラクターを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-473">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.</span></span>  
  
 <span data-ttu-id="46cae-474">結果として得ら<xref:System.DateTime>れるの時刻 (00:00:00)。</span><span class="sxs-lookup"><span data-stu-id="46cae-474">The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00).</span></span> <span data-ttu-id="46cae-475"><xref:System.DateTime.Kind%2A> プロパティは <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-475">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-476">次の例では<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%29> 、コンストラクターを使用<xref:System.DateTime>して値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-476">The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%29> constructor to instantiate a <xref:System.DateTime> value.</span></span> <span data-ttu-id="46cae-477">この例では、このオーバーロードが、 <xref:System.DateTime>時刻部分が午前0時 (または 0:00) と等しい値を作成することも示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-477">The example also illustrates that this overload creates a <xref:System.DateTime> value whose time component equals midnight (or 0:00).</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#1)]
 [!code-vb[System.DateTime.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-478"><paramref name="year" /> が 1 未満であるか、または 9999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-478"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
<span data-ttu-id="46cae-479">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-479">-or-</span></span> 
 <span data-ttu-id="46cae-480"><paramref name="month" /> が 1 未満であるか、または 12 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-480"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="46cae-481">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-481">-or-</span></span> 
 <span data-ttu-id="46cae-482"><paramref name="day" /> が 1 未満であるか、または <paramref name="month" /> の日数を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-482"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, System.Globalization.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, class System.Globalization.Calendar calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, System::Globalization::Calendar ^ calendar);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * System.Globalization.Calendar -&gt; DateTime" Usage="new System.DateTime (year, month, day, calendar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="46cae-483">年 (1 から <paramref name="calendar" /> の年数)。</span><span class="sxs-lookup"><span data-stu-id="46cae-483">The year (1 through the number of years in <paramref name="calendar" />).</span></span></param>
        <param name="month"><span data-ttu-id="46cae-484">月 (1 から <paramref name="calendar" /> の月数)。</span><span class="sxs-lookup"><span data-stu-id="46cae-484">The month (1 through the number of months in <paramref name="calendar" />).</span></span></param>
        <param name="day"><span data-ttu-id="46cae-485">日付 (1 ～ <paramref name="month" /> の日数)。</span><span class="sxs-lookup"><span data-stu-id="46cae-485">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="calendar"><span data-ttu-id="46cae-486"><paramref name="year" />、<paramref name="month" />、および <paramref name="day" /> を解釈するために使用される暦。</span><span class="sxs-lookup"><span data-stu-id="46cae-486">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />.</span></span></param>
        <summary><span data-ttu-id="46cae-487"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定した暦の指定した年、月、および日に初期化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-487">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, and day for the specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-488">結果として得ら<xref:System.DateTime>れるの時刻 (00:00:00)。</span><span class="sxs-lookup"><span data-stu-id="46cae-488">The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00).</span></span> <span data-ttu-id="46cae-489"><xref:System.DateTime.Kind%2A> プロパティは <xref:System.DateTimeKind.Unspecified> に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-489">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="46cae-490">、 `year` 、`month`および`calendar`に使用できる値は、によって異なります。 `day`</span><span class="sxs-lookup"><span data-stu-id="46cae-490">The allowable values for `year`, `month`, and `day` depend on `calendar`.</span></span> <span data-ttu-id="46cae-491">を使用して`calendar`指定した日付と時刻を表現できない場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-491">An exception is thrown if the specified date and time cannot be expressed using `calendar`.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="46cae-492">名前<xref:System.Globalization>空間には、や<xref:System.Globalization.GregorianCalendar> <xref:System.Globalization.JulianCalendar>などの複数のカレンダーが用意されています。</span><span class="sxs-lookup"><span data-stu-id="46cae-492">The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-493">次の例では<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> 、コンストラクターを2回<xref:System.DateTime>呼び出して、2つの値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-493">The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values.</span></span> <span data-ttu-id="46cae-494">最初の呼び出しでは<xref:System.DateTime> 、 <xref:System.Globalization.PersianCalendar>オブジェクトを使用して値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-494">The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object.</span></span> <span data-ttu-id="46cae-495">ペルシャ暦はカルチャの既定の暦として指定できないため、ペルシャ暦で日付を表示するには<xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>、 <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>、、および<xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType>の各メソッドを個別に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-495">Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="46cae-496">コンストラクターへの2回目の呼び出し<xref:System.DateTime>では、 <xref:System.Globalization.HijriCalendar>オブジェクトを使用して値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-496">The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object.</span></span> <span data-ttu-id="46cae-497">この例では、現在のカルチャをアラビア語 (シリア) に変更し、現在のカルチャの既定の暦をイスラム暦に変更します。</span><span class="sxs-lookup"><span data-stu-id="46cae-497">The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar.</span></span> <span data-ttu-id="46cae-498">イスラム暦は現在のカルチャの既定の暦で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>あるため、メソッドはそれを使用して日付の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-498">Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses it to format the date.</span></span> <span data-ttu-id="46cae-499">以前の現在のカルチャ (この場合は英語 (米国)) が復元されると、 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>メソッドは現在のカルチャの既定のグレゴリオ暦を使用して日付の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-499">When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses the current culture's default Gregorian calendar to format the date.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample2.cs#2)]
 [!code-vb[System.DateTime.Constructor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46cae-500"><paramref name="calendar" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="46cae-500"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-501"><paramref name="year" /> は <paramref name="calendar" /> でサポートされる範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-501"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="46cae-502">または</span><span class="sxs-lookup"><span data-stu-id="46cae-502">-or-</span></span> 
 <span data-ttu-id="46cae-503"><paramref name="month" /> は 1 未満か、<paramref name="calendar" /> の月数を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-503"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="46cae-504">または</span><span class="sxs-lookup"><span data-stu-id="46cae-504">-or-</span></span> 
 <span data-ttu-id="46cae-505"><paramref name="day" /> が 1 未満であるか、または <paramref name="month" /> の日数を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-505"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="46cae-506">年 (1 から 9999)。</span><span class="sxs-lookup"><span data-stu-id="46cae-506">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="46cae-507">月 (1 ～ 12)。</span><span class="sxs-lookup"><span data-stu-id="46cae-507">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="46cae-508">日付 (1 ～ <paramref name="month" /> の日数)。</span><span class="sxs-lookup"><span data-stu-id="46cae-508">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="46cae-509">時間 (0 から 23)。</span><span class="sxs-lookup"><span data-stu-id="46cae-509">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="46cae-510">分 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="46cae-510">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="46cae-511">秒 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="46cae-511">The seconds (0 through 59).</span></span></param>
        <summary><span data-ttu-id="46cae-512"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定した年、月、日、時、分、および秒に初期化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-512">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, and second.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-513"><xref:System.DateTime.Kind%2A> プロパティは <xref:System.DateTimeKind.Unspecified> に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-513">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="46cae-514">このコンストラクターは`year`、 `month`、、 `day`およびを、グレゴリオ暦の年、月、日として解釈します。</span><span class="sxs-lookup"><span data-stu-id="46cae-514">This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="46cae-515">別の暦<xref:System.DateTime>で年、月、日を使用して値をインスタンス化するに<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29>は、コンストラクターを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-515">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.</span></span>  
  
 <span data-ttu-id="46cae-516">日付と時刻のデータの移植性、または制限されたタイムゾーンの認識が重要なアプリケーションの場合は<xref:System.DateTimeOffset> 、対応するコンストラクターを使用できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-516">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-517">次の例では<xref:System.DateTime.%23ctor%2A> 、コンストラクターを使用<xref:System.DateTime>して値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-517">The following example uses the <xref:System.DateTime.%23ctor%2A> constructor to instantiate a <xref:System.DateTime> value.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#3)]
 [!code-vb[System.DateTime.Constructor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-518"><paramref name="year" /> が 1 未満であるか、または 9999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-518"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
<span data-ttu-id="46cae-519">または</span><span class="sxs-lookup"><span data-stu-id="46cae-519">-or-</span></span> 
 <span data-ttu-id="46cae-520"><paramref name="month" /> が 1 未満であるか、または 12 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-520"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="46cae-521">または</span><span class="sxs-lookup"><span data-stu-id="46cae-521">-or-</span></span> 
 <span data-ttu-id="46cae-522"><paramref name="day" /> が 1 未満であるか、または <paramref name="month" />の日数を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-522"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="46cae-523">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-523">-or-</span></span> 
 <span data-ttu-id="46cae-524"><paramref name="hour" /> が 0 未満であるか、または 23 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-524"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="46cae-525">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-525">-or-</span></span> 
 <span data-ttu-id="46cae-526"><paramref name="minute" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-526"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="46cae-527">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-527">-or-</span></span> 
 <span data-ttu-id="46cae-528"><paramref name="second" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-528"><paramref name="second" /> is less than 0 or greater than 59.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, kind As DateTimeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * DateTimeKind -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, kind)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hour" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="minute" Type="System.Int32" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="second" Type="System.Int32" Index="5" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="kind" Type="System.DateTimeKind" Index="6" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="46cae-529">年 (1 から 9999)。</span><span class="sxs-lookup"><span data-stu-id="46cae-529">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="46cae-530">月 (1 ～ 12)。</span><span class="sxs-lookup"><span data-stu-id="46cae-530">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="46cae-531">日付 (1 ～ <paramref name="month" /> の日数)。</span><span class="sxs-lookup"><span data-stu-id="46cae-531">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="46cae-532">時間 (0 から 23)。</span><span class="sxs-lookup"><span data-stu-id="46cae-532">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="46cae-533">分 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="46cae-533">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="46cae-534">秒 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="46cae-534">The seconds (0 through 59).</span></span></param>
        <param name="kind"><span data-ttu-id="46cae-535"><paramref name="year" />、<paramref name="month" />、<paramref name="day" />、<paramref name="hour" />、<paramref name="minute" />、および <paramref name="second" /> が、現地時刻、世界協定時刻 (UTC)、またはそのどちらでもない時刻のうち、どれを指定するかを示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="46cae-535">One of the enumeration values that indicates whether <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" /> and <paramref name="second" /> specify a local time, Coordinated Universal Time (UTC), or neither.</span></span></param>
        <summary><span data-ttu-id="46cae-536"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定した年、月、日、時、分、秒、および世界協定時刻 (UTC) または現地時刻に初期化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-536">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and Coordinated Universal Time (UTC) or local time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-537">このコンストラクターは`year`、 `month`、、 `day`およびを、グレゴリオ暦の年、月、日として解釈します。</span><span class="sxs-lookup"><span data-stu-id="46cae-537">This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="46cae-538">別の暦<xref:System.DateTime>で年、月、日を使用して値をインスタンス化するに<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29>は、コンストラクターを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-538">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor.</span></span>  
  
 <span data-ttu-id="46cae-539">日付と時刻のデータの移植性、または制限されたタイムゾーンの認識が重要なアプリケーションの場合は<xref:System.DateTimeOffset> 、対応するコンストラクターを使用できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-539">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-540">次の例では<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29> 、コンストラクターを使用<xref:System.DateTime>して値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-540">The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29> constructor to instantiate a <xref:System.DateTime> value.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#7)]
 [!code-vb[System.DateTime.Constructor#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-541"><paramref name="year" /> が 1 未満であるか、または 9999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-541"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
<span data-ttu-id="46cae-542">または</span><span class="sxs-lookup"><span data-stu-id="46cae-542">-or-</span></span> 
 <span data-ttu-id="46cae-543"><paramref name="month" /> が 1 未満であるか、または 12 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-543"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="46cae-544">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-544">-or-</span></span> 
 <span data-ttu-id="46cae-545"><paramref name="day" /> が 1 未満であるか、または <paramref name="month" />の日数を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-545"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="46cae-546">または</span><span class="sxs-lookup"><span data-stu-id="46cae-546">-or-</span></span> 
 <span data-ttu-id="46cae-547"><paramref name="hour" /> が 0 未満であるか、または 23 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-547"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="46cae-548">または</span><span class="sxs-lookup"><span data-stu-id="46cae-548">-or-</span></span> 
 <span data-ttu-id="46cae-549"><paramref name="minute" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-549"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="46cae-550">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-550">-or-</span></span> 
 <span data-ttu-id="46cae-551"><paramref name="second" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-551"><paramref name="second" /> is less than 0 or greater than 59.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46cae-552"><paramref name="kind" /> は <see cref="T:System.DateTimeKind" /> 値のいずれでもありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-552"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, System.Globalization.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, class System.Globalization.Calendar calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, System::Globalization::Calendar ^ calendar);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * System.Globalization.Calendar -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, calendar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hour" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="minute" Type="System.Int32" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="second" Type="System.Int32" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="46cae-553">年 (1 から <paramref name="calendar" /> の年数)。</span><span class="sxs-lookup"><span data-stu-id="46cae-553">The year (1 through the number of years in <paramref name="calendar" />).</span></span></param>
        <param name="month"><span data-ttu-id="46cae-554">月 (1 から <paramref name="calendar" /> の月数)。</span><span class="sxs-lookup"><span data-stu-id="46cae-554">The month (1 through the number of months in <paramref name="calendar" />).</span></span></param>
        <param name="day"><span data-ttu-id="46cae-555">日付 (1 ～ <paramref name="month" /> の日数)。</span><span class="sxs-lookup"><span data-stu-id="46cae-555">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="46cae-556">時間 (0 から 23)。</span><span class="sxs-lookup"><span data-stu-id="46cae-556">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="46cae-557">分 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="46cae-557">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="46cae-558">秒 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="46cae-558">The seconds (0 through 59).</span></span></param>
        <param name="calendar"><span data-ttu-id="46cae-559"><paramref name="year" />、<paramref name="month" />、および <paramref name="day" /> を解釈するために使用される暦。</span><span class="sxs-lookup"><span data-stu-id="46cae-559">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />.</span></span></param>
        <summary><span data-ttu-id="46cae-560"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定した暦の指定した年、月、日、時、分、および秒に初期化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-560">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, and second for the specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-561"><xref:System.DateTime.Kind%2A> プロパティは <xref:System.DateTimeKind.Unspecified> に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-561">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="46cae-562">、 `year` 、`month`および`calendar`に使用できる値は、によって異なります。 `day`</span><span class="sxs-lookup"><span data-stu-id="46cae-562">The allowable values for `year`, `month`, and `day` depend on `calendar`.</span></span> <span data-ttu-id="46cae-563">を使用して`calendar`指定した日付と時刻を表現できない場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-563">An exception is thrown if the specified date and time cannot be expressed using `calendar`.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="46cae-564">名前<xref:System.Globalization>空間には、や<xref:System.Globalization.GregorianCalendar> <xref:System.Globalization.JulianCalendar>などの複数のカレンダーが用意されています。</span><span class="sxs-lookup"><span data-stu-id="46cae-564">The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-565">次の例では<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> 、コンストラクターを2回<xref:System.DateTime>呼び出して、2つの値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-565">The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values.</span></span> <span data-ttu-id="46cae-566">最初の呼び出しでは<xref:System.DateTime> 、 <xref:System.Globalization.PersianCalendar>オブジェクトを使用して値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-566">The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object.</span></span> <span data-ttu-id="46cae-567">ペルシャ暦はカルチャの既定の暦として指定できないため、ペルシャ暦で日付を表示するには<xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>、 <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>、、および<xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType>の各メソッドを個別に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-567">Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="46cae-568">コンストラクターへの2回目の呼び出し<xref:System.DateTime>では、 <xref:System.Globalization.HijriCalendar>オブジェクトを使用して値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-568">The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object.</span></span> <span data-ttu-id="46cae-569">この例では、現在のカルチャをアラビア語 (シリア) に変更し、現在のカルチャの既定の暦をイスラム暦に変更します。</span><span class="sxs-lookup"><span data-stu-id="46cae-569">The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar.</span></span> <span data-ttu-id="46cae-570">イスラム暦は現在のカルチャの既定の暦で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>あるため、メソッドはそれを使用して日付の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-570">Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses it to format the date.</span></span> <span data-ttu-id="46cae-571">以前の現在のカルチャ (この場合は英語 (米国)) が復元されると、 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>メソッドは現在のカルチャの既定のグレゴリオ暦を使用して日付の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-571">When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses the current culture's default Gregorian calendar to format the date.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample4.cs#4)]
 [!code-vb[System.DateTime.Constructor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46cae-572"><paramref name="calendar" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="46cae-572"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-573"><paramref name="year" /> は <paramref name="calendar" /> でサポートされる範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-573"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="46cae-574">または</span><span class="sxs-lookup"><span data-stu-id="46cae-574">-or-</span></span> 
 <span data-ttu-id="46cae-575"><paramref name="month" /> は 1 未満か、<paramref name="calendar" /> の月数を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-575"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="46cae-576">または</span><span class="sxs-lookup"><span data-stu-id="46cae-576">-or-</span></span> 
 <span data-ttu-id="46cae-577"><paramref name="day" /> が 1 未満であるか、または <paramref name="month" />の日数を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-577"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="46cae-578">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-578">-or-</span></span> 
 <span data-ttu-id="46cae-579"><paramref name="hour" /> が 0 未満であるか、または 23 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-579"><paramref name="hour" /> is less than 0 or greater than 23</span></span> 
<span data-ttu-id="46cae-580">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-580">-or-</span></span> 
 <span data-ttu-id="46cae-581"><paramref name="minute" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-581"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="46cae-582">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-582">-or-</span></span> 
 <span data-ttu-id="46cae-583"><paramref name="second" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-583"><paramref name="second" /> is less than 0 or greater than 59.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * int -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, millisecond)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="46cae-584">年 (1 から 9999)。</span><span class="sxs-lookup"><span data-stu-id="46cae-584">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="46cae-585">月 (1 ～ 12)。</span><span class="sxs-lookup"><span data-stu-id="46cae-585">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="46cae-586">日付 (1 ～ <paramref name="month" /> の日数)。</span><span class="sxs-lookup"><span data-stu-id="46cae-586">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="46cae-587">時間 (0 から 23)。</span><span class="sxs-lookup"><span data-stu-id="46cae-587">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="46cae-588">分 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="46cae-588">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="46cae-589">秒 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="46cae-589">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="46cae-590">ミリ秒 (0 から 999)。</span><span class="sxs-lookup"><span data-stu-id="46cae-590">The milliseconds (0 through 999).</span></span></param>
        <summary><span data-ttu-id="46cae-591"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定した年、月、日、時、分、秒、およびミリ秒に初期化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-591">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and millisecond.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-592">このコンストラクターは`year`、 `month`、、 `day`およびを、グレゴリオ暦の年、月、日として解釈します。</span><span class="sxs-lookup"><span data-stu-id="46cae-592">This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="46cae-593">別の暦<xref:System.DateTime>で年、月、日を使用して値をインスタンス化するに<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29>は、コンストラクターを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-593">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.</span></span>  
  
 <span data-ttu-id="46cae-594"><xref:System.DateTime.Kind%2A> プロパティは <xref:System.DateTimeKind.Unspecified> に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-594">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="46cae-595">日付と時刻のデータの移植性、または制限されたタイムゾーンの認識が重要なアプリケーションの場合は<xref:System.DateTimeOffset> 、対応するコンストラクターを使用できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-595">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-596">次の例では<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29> 、コンストラクターを使用<xref:System.DateTime>して値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-596">The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29> constructor to instantiate a <xref:System.DateTime> value.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#5)]
 [!code-vb[System.DateTime.Constructor#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-597"><paramref name="year" /> が 1 未満であるか、または 9999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-597"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
<span data-ttu-id="46cae-598">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-598">-or-</span></span> 
 <span data-ttu-id="46cae-599"><paramref name="month" /> が 1 未満であるか、または 12 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-599"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="46cae-600">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-600">-or-</span></span> 
 <span data-ttu-id="46cae-601"><paramref name="day" /> が 1 未満であるか、または <paramref name="month" />の日数を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-601"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="46cae-602">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-602">-or-</span></span> 
 <span data-ttu-id="46cae-603"><paramref name="hour" /> が 0 未満であるか、または 23 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-603"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="46cae-604">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-604">-or-</span></span> 
 <span data-ttu-id="46cae-605"><paramref name="minute" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-605"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="46cae-606">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-606">-or-</span></span> 
 <span data-ttu-id="46cae-607"><paramref name="second" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-607"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="46cae-608">または</span><span class="sxs-lookup"><span data-stu-id="46cae-608">-or-</span></span> 
 <span data-ttu-id="46cae-609"><paramref name="millisecond" /> が 0 未満であるか、または 999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-609"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, kind As DateTimeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * int * DateTimeKind -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, millisecond, kind)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hour" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="minute" Type="System.Int32" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="second" Type="System.Int32" Index="5" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="millisecond" Type="System.Int32" Index="6" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="kind" Type="System.DateTimeKind" Index="7" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="46cae-610">年 (1 から 9999)。</span><span class="sxs-lookup"><span data-stu-id="46cae-610">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="46cae-611">月 (1 ～ 12)。</span><span class="sxs-lookup"><span data-stu-id="46cae-611">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="46cae-612">日付 (1 ～ <paramref name="month" /> の日数)。</span><span class="sxs-lookup"><span data-stu-id="46cae-612">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="46cae-613">時間 (0 から 23)。</span><span class="sxs-lookup"><span data-stu-id="46cae-613">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="46cae-614">分 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="46cae-614">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="46cae-615">秒 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="46cae-615">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="46cae-616">ミリ秒 (0 から 999)。</span><span class="sxs-lookup"><span data-stu-id="46cae-616">The milliseconds (0 through 999).</span></span></param>
        <param name="kind"><span data-ttu-id="46cae-617"><paramref name="year" />、<paramref name="month" />、<paramref name="day" />、<paramref name="hour" />、<paramref name="minute" />、<paramref name="second" />、および <paramref name="millisecond" /> が、現地時刻、世界協定時刻 (UTC)、またはそのどちらでもない時刻のうち、どれを指定するかを示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="46cae-617">One of the enumeration values that indicates whether <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" />, <paramref name="second" />, and <paramref name="millisecond" /> specify a local time, Coordinated Universal Time (UTC), or neither.</span></span></param>
        <summary><span data-ttu-id="46cae-618"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定した年、月、日、時、分、秒、ミリ秒、および世界協定時刻 (UTC) または現地時刻に初期化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-618">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-619">このコンストラクターは`year`、 `month`、、 `day`およびを、グレゴリオ暦の年、月、日として解釈します。</span><span class="sxs-lookup"><span data-stu-id="46cae-619">This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="46cae-620">別の暦<xref:System.DateTime>で年、月、日を使用して値をインスタンス化するに<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29>は、コンストラクターを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-620">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor.</span></span>  
  
 <span data-ttu-id="46cae-621">日付と時刻のデータの移植性、または制限されたタイムゾーンの認識が重要なアプリケーションの場合は<xref:System.DateTimeOffset> 、対応するコンストラクターを使用できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-621">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-622">次の例では<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29> 、コンストラクターを使用<xref:System.DateTime>して値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-622">The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29> constructor to instantiate a <xref:System.DateTime> value.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#8)]
 [!code-vb[System.DateTime.Constructor#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-623"><paramref name="year" /> が 1 未満であるか、または 9999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-623"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
<span data-ttu-id="46cae-624">または</span><span class="sxs-lookup"><span data-stu-id="46cae-624">-or-</span></span> 
 <span data-ttu-id="46cae-625"><paramref name="month" /> が 1 未満であるか、または 12 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-625"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="46cae-626">または</span><span class="sxs-lookup"><span data-stu-id="46cae-626">-or-</span></span> 
 <span data-ttu-id="46cae-627"><paramref name="day" /> が 1 未満であるか、または <paramref name="month" />の日数を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-627"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="46cae-628">または</span><span class="sxs-lookup"><span data-stu-id="46cae-628">-or-</span></span> 
 <span data-ttu-id="46cae-629"><paramref name="hour" /> が 0 未満であるか、または 23 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-629"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="46cae-630">または</span><span class="sxs-lookup"><span data-stu-id="46cae-630">-or-</span></span> 
 <span data-ttu-id="46cae-631"><paramref name="minute" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-631"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="46cae-632">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-632">-or-</span></span> 
 <span data-ttu-id="46cae-633"><paramref name="second" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-633"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="46cae-634">または</span><span class="sxs-lookup"><span data-stu-id="46cae-634">-or-</span></span> 
 <span data-ttu-id="46cae-635"><paramref name="millisecond" /> が 0 未満であるか、または 999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-635"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46cae-636"><paramref name="kind" /> は <see cref="T:System.DateTimeKind" /> 値のいずれでもありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-636"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, class System.Globalization.Calendar calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, System::Globalization::Calendar ^ calendar);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * int * System.Globalization.Calendar -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, millisecond, calendar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hour" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="minute" Type="System.Int32" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="second" Type="System.Int32" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="millisecond" Type="System.Int32" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" Index="7" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="46cae-637">年 (1 から <paramref name="calendar" /> の年数)。</span><span class="sxs-lookup"><span data-stu-id="46cae-637">The year (1 through the number of years in <paramref name="calendar" />).</span></span></param>
        <param name="month"><span data-ttu-id="46cae-638">月 (1 から <paramref name="calendar" /> の月数)。</span><span class="sxs-lookup"><span data-stu-id="46cae-638">The month (1 through the number of months in <paramref name="calendar" />).</span></span></param>
        <param name="day"><span data-ttu-id="46cae-639">日付 (1 ～ <paramref name="month" /> の日数)。</span><span class="sxs-lookup"><span data-stu-id="46cae-639">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="46cae-640">時間 (0 から 23)。</span><span class="sxs-lookup"><span data-stu-id="46cae-640">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="46cae-641">分 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="46cae-641">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="46cae-642">秒 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="46cae-642">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="46cae-643">ミリ秒 (0 から 999)。</span><span class="sxs-lookup"><span data-stu-id="46cae-643">The milliseconds (0 through 999).</span></span></param>
        <param name="calendar"><span data-ttu-id="46cae-644"><paramref name="year" />、<paramref name="month" />、および <paramref name="day" /> を解釈するために使用される暦。</span><span class="sxs-lookup"><span data-stu-id="46cae-644">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />.</span></span></param>
        <summary><span data-ttu-id="46cae-645"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定した暦の指定した年、月、日、時、分、秒、およびミリ秒に初期化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-645">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and millisecond for the specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-646"><xref:System.DateTime.Kind%2A> プロパティは <xref:System.DateTimeKind.Unspecified> に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-646">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="46cae-647">、 `year` 、`month`および`calendar`に使用できる値は、によって異なります。 `day`</span><span class="sxs-lookup"><span data-stu-id="46cae-647">The allowable values for `year`, `month`, and `day` depend on `calendar`.</span></span> <span data-ttu-id="46cae-648">を使用して`calendar`指定した日付と時刻を表現できない場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-648">An exception is thrown if the specified date and time cannot be expressed using `calendar`.</span></span>  
  
 <span data-ttu-id="46cae-649">日付と時刻のデータの移植性、または制限されたタイムゾーンの認識が重要なアプリケーションの場合は<xref:System.DateTimeOffset> 、対応するコンストラクターを使用できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-649">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="46cae-650">名前<xref:System.Globalization>空間には、や<xref:System.Globalization.GregorianCalendar> <xref:System.Globalization.JulianCalendar>などの複数のカレンダーが用意されています。</span><span class="sxs-lookup"><span data-stu-id="46cae-650">The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-651">次の例では<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> 、コンストラクターを2回<xref:System.DateTime>呼び出して、2つの値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-651">The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values.</span></span> <span data-ttu-id="46cae-652">最初の呼び出しでは<xref:System.DateTime> 、 <xref:System.Globalization.PersianCalendar>オブジェクトを使用して値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-652">The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object.</span></span> <span data-ttu-id="46cae-653">ペルシャ暦はカルチャの既定の暦として指定できないため、ペルシャ暦で日付を表示するには<xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>、 <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>、、および<xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType>の各メソッドを個別に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-653">Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="46cae-654">コンストラクターへの2回目の呼び出し<xref:System.DateTime>では、 <xref:System.Globalization.HijriCalendar>オブジェクトを使用して値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-654">The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object.</span></span> <span data-ttu-id="46cae-655">この例では、現在のカルチャをアラビア語 (シリア) に変更し、現在のカルチャの既定の暦をイスラム暦に変更します。</span><span class="sxs-lookup"><span data-stu-id="46cae-655">The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar.</span></span> <span data-ttu-id="46cae-656">イスラム暦は現在のカルチャの既定の暦で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>あるため、メソッドはそれを使用して日付の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-656">Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses it to format the date.</span></span> <span data-ttu-id="46cae-657">以前の現在のカルチャ (この場合は英語 (米国)) が復元されると、 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>メソッドは現在のカルチャの既定のグレゴリオ暦を使用して日付の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-657">When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses the current culture's default Gregorian calendar to format the date.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample6.cs#6)]
 [!code-vb[System.DateTime.Constructor#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46cae-658"><paramref name="calendar" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="46cae-658"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-659"><paramref name="year" /> は <paramref name="calendar" /> でサポートされる範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-659"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="46cae-660">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-660">-or-</span></span> 
 <span data-ttu-id="46cae-661"><paramref name="month" /> は 1 未満か、<paramref name="calendar" /> の月数を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-661"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="46cae-662">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-662">-or-</span></span> 
 <span data-ttu-id="46cae-663"><paramref name="day" /> が 1 未満であるか、または <paramref name="month" />の日数を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-663"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="46cae-664">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-664">-or-</span></span> 
 <span data-ttu-id="46cae-665"><paramref name="hour" /> が 0 未満であるか、または 23 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-665"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="46cae-666">または</span><span class="sxs-lookup"><span data-stu-id="46cae-666">-or-</span></span> 
 <span data-ttu-id="46cae-667"><paramref name="minute" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-667"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="46cae-668">または</span><span class="sxs-lookup"><span data-stu-id="46cae-668">-or-</span></span> 
 <span data-ttu-id="46cae-669"><paramref name="second" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-669"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="46cae-670">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-670">-or-</span></span> 
 <span data-ttu-id="46cae-671"><paramref name="millisecond" /> が 0 未満であるか、または 999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-671"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, class System.Globalization.Calendar calendar, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, System::Globalization::Calendar ^ calendar, DateTimeKind kind);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * int * System.Globalization.Calendar * DateTimeKind -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, millisecond, calendar, kind)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hour" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="minute" Type="System.Int32" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="second" Type="System.Int32" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="millisecond" Type="System.Int32" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" Index="7" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="kind" Type="System.DateTimeKind" Index="8" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="46cae-672">年 (1 から <paramref name="calendar" /> の年数)。</span><span class="sxs-lookup"><span data-stu-id="46cae-672">The year (1 through the number of years in <paramref name="calendar" />).</span></span></param>
        <param name="month"><span data-ttu-id="46cae-673">月 (1 から <paramref name="calendar" /> の月数)。</span><span class="sxs-lookup"><span data-stu-id="46cae-673">The month (1 through the number of months in <paramref name="calendar" />).</span></span></param>
        <param name="day"><span data-ttu-id="46cae-674">日付 (1 ～ <paramref name="month" /> の日数)。</span><span class="sxs-lookup"><span data-stu-id="46cae-674">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="46cae-675">時間 (0 から 23)。</span><span class="sxs-lookup"><span data-stu-id="46cae-675">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="46cae-676">分 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="46cae-676">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="46cae-677">秒 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="46cae-677">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="46cae-678">ミリ秒 (0 から 999)。</span><span class="sxs-lookup"><span data-stu-id="46cae-678">The milliseconds (0 through 999).</span></span></param>
        <param name="calendar"><span data-ttu-id="46cae-679"><paramref name="year" />、<paramref name="month" />、および <paramref name="day" /> を解釈するために使用される暦。</span><span class="sxs-lookup"><span data-stu-id="46cae-679">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />.</span></span></param>
        <param name="kind"><span data-ttu-id="46cae-680"><paramref name="year" />、<paramref name="month" />、<paramref name="day" />、<paramref name="hour" />、<paramref name="minute" />、<paramref name="second" />、および <paramref name="millisecond" /> が、現地時刻、世界協定時刻 (UTC)、またはそのどちらでもない時刻のうち、どれを指定するかを示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="46cae-680">One of the enumeration values that indicates whether <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" />, <paramref name="second" />, and <paramref name="millisecond" /> specify a local time, Coordinated Universal Time (UTC), or neither.</span></span></param>
        <summary><span data-ttu-id="46cae-681"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定した暦の指定した年、月、日、時、分、秒、ミリ秒、および世界協定時刻 (UTC) または現地時刻に初期化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-681">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time for the specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-682">、 `year` 、`month`および`day`の各パラメーターに使用できる値は、パラメーターによって異なります。`calendar`</span><span class="sxs-lookup"><span data-stu-id="46cae-682">The allowable values for `year`, `month`, and `day` parameters depend on the `calendar` parameter.</span></span> <span data-ttu-id="46cae-683">を使用して`calendar`指定した日付と時刻を表現できない場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-683">An exception is thrown if the specified date and time cannot be expressed using `calendar`.</span></span>  
  
 <span data-ttu-id="46cae-684">日付と時刻のデータの移植性、または制限されたタイムゾーンの認識が重要なアプリケーションの場合は<xref:System.DateTimeOffset> 、対応するコンストラクターを使用できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-684">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="46cae-685">名前<xref:System.Globalization>空間には、や<xref:System.Globalization.GregorianCalendar> <xref:System.Globalization.JulianCalendar>などの複数のカレンダーが用意されています。</span><span class="sxs-lookup"><span data-stu-id="46cae-685">The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-686">次の例では<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> 、コンストラクターを2回<xref:System.DateTime>呼び出して、2つの値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-686">The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor twice to instantiate two <xref:System.DateTime> values.</span></span> <span data-ttu-id="46cae-687">最初の呼び出しでは<xref:System.DateTime> 、 <xref:System.Globalization.PersianCalendar>オブジェクトを使用して値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-687">The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object.</span></span> <span data-ttu-id="46cae-688">ペルシャ暦はカルチャの既定の暦として指定できないため、ペルシャ暦で日付を表示するには<xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>、 <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>、、および<xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType>の各メソッドを個別に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-688">Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="46cae-689">コンストラクターへの2回目の呼び出し<xref:System.DateTime>では、 <xref:System.Globalization.HijriCalendar>オブジェクトを使用して値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-689">The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object.</span></span> <span data-ttu-id="46cae-690">この例では、現在のカルチャをアラビア語 (シリア) に変更し、現在のカルチャの既定の暦をイスラム暦に変更します。</span><span class="sxs-lookup"><span data-stu-id="46cae-690">The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar.</span></span> <span data-ttu-id="46cae-691">イスラム暦は現在のカルチャの既定の暦で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>あるため、メソッドはそれを使用して日付の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-691">Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses it to format the date.</span></span> <span data-ttu-id="46cae-692">以前の現在のカルチャ (この場合は英語 (米国)) が復元されると、 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>メソッドは現在のカルチャの既定のグレゴリオ暦を使用して日付の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-692">When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses the current culture's default Gregorian calendar to format the date.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample9.cs#9)]
 [!code-vb[System.DateTime.Constructor#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample9.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46cae-693"><paramref name="calendar" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="46cae-693"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-694"><paramref name="year" /> は <paramref name="calendar" /> でサポートされる範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-694"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="46cae-695">または</span><span class="sxs-lookup"><span data-stu-id="46cae-695">-or-</span></span> 
 <span data-ttu-id="46cae-696"><paramref name="month" /> は 1 未満か、<paramref name="calendar" /> の月数を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-696"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="46cae-697">または</span><span class="sxs-lookup"><span data-stu-id="46cae-697">-or-</span></span> 
 <span data-ttu-id="46cae-698"><paramref name="day" /> が 1 未満であるか、または <paramref name="month" />の日数を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-698"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="46cae-699">または</span><span class="sxs-lookup"><span data-stu-id="46cae-699">-or-</span></span> 
 <span data-ttu-id="46cae-700"><paramref name="hour" /> が 0 未満であるか、または 23 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-700"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="46cae-701">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-701">-or-</span></span> 
 <span data-ttu-id="46cae-702"><paramref name="minute" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-702"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="46cae-703">または</span><span class="sxs-lookup"><span data-stu-id="46cae-703">-or-</span></span> 
 <span data-ttu-id="46cae-704"><paramref name="second" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-704"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="46cae-705">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-705">-or-</span></span> 
 <span data-ttu-id="46cae-706"><paramref name="millisecond" /> が 0 未満であるか、または 999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-706"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46cae-707"><paramref name="kind" /> は <see cref="T:System.DateTimeKind" /> 値のいずれでもありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-707"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public DateTime Add (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime Add(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Add(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As TimeSpan) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime Add(TimeSpan value);" />
      <MemberSignature Language="F#" Value="member this.Add : TimeSpan -&gt; DateTime" Usage="dateTime.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="46cae-708">正または負の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="46cae-708">A positive or negative time interval.</span></span></param>
        <summary><span data-ttu-id="46cae-709">このインスタンスの値に、指定された <see cref="T:System.TimeSpan" /> の値を加算した新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-709">Returns a new <see cref="T:System.DateTime" /> that adds the value of the specified <see cref="T:System.TimeSpan" /> to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="46cae-710">このインスタンスで表された日付と時刻に <paramref name="value" /> で表された時間間隔を加算した値を保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-710">An object whose value is the sum of the date and time represented by this instance and the time interval represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-711">メソッドを使用し<xref:System.DateTime.Add%2A>て、1回の操作で複数の種類の時間間隔 (日、時間、分、秒、またはミリ秒) を追加できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-711">You can use the <xref:System.DateTime.Add%2A> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation.</span></span> <span data-ttu-id="46cae-712">このメソッドの動作は、加算演算子と同じです。</span><span class="sxs-lookup"><span data-stu-id="46cae-712">This method's behavior is identical to that of the addition operator.</span></span> <span data-ttu-id="46cae-713">この<xref:System.DateTime>構造体は、各時間間隔に対し<xref:System.DateTime.AddDays%2A>て<xref:System.DateTime.AddHours%2A>特殊な<xref:System.DateTime.AddMinutes%2A>加算メソッド (、、など) もサポートしています。</span><span class="sxs-lookup"><span data-stu-id="46cae-713">The <xref:System.DateTime> structure also supports specialized addition methods (such as <xref:System.DateTime.AddDays%2A>, <xref:System.DateTime.AddHours%2A>, and <xref:System.DateTime.AddMinutes%2A>) for each time interval.</span></span>  
  
 <span data-ttu-id="46cae-714">この<xref:System.DateTime.Add%2A>メソッドは、日付の算術演算を実行するときに、うるう年と、月の日数を考慮します。</span><span class="sxs-lookup"><span data-stu-id="46cae-714">The <xref:System.DateTime.Add%2A> method takes into account leap years and the number of days in a month when performing date arithmetic.</span></span>  
  
 <span data-ttu-id="46cae-715">このメソッドは、この<xref:System.DateTime>の値を変更しません。</span><span class="sxs-lookup"><span data-stu-id="46cae-715">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="46cae-716">代わりに、この操作の結果<xref:System.DateTime>を値として持つ新しいを返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-716">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span> <span data-ttu-id="46cae-717"><xref:System.DateTime.Kind%2A> 新しい<xref:System.DateTime>インスタンスのプロパティは、現在のインスタンスのプロパティと同じです。</span><span class="sxs-lookup"><span data-stu-id="46cae-717">The <xref:System.DateTime.Kind%2A> property of the new <xref:System.DateTime> instance is the same as that of the current instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-718">メソッドの<xref:System.DateTime.Add%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-718">The following example demonstrates the <xref:System.DateTime.Add%2A> method.</span></span> <span data-ttu-id="46cae-719">この時点から36日 (864 時間) の曜日を計算します。</span><span class="sxs-lookup"><span data-stu-id="46cae-719">It calculates the day of the week that is 36 days (864 hours) from this moment.</span></span>  
  
 [!code-cpp[DateTime.Add#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Add/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Add#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Add/CS/class1.cs#1)]
 [!code-vb[DateTime.Add#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Add/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-720">結果として返された <see cref="T:System.DateTime" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="46cae-720">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="M:System.TimeSpan.Add(System.TimeSpan)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="46cae-721">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="46cae-721">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public DateTime AddDays (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddDays(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddDays(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDays (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddDays(double value);" />
      <MemberSignature Language="F#" Value="member this.AddDays : double -&gt; DateTime" Usage="dateTime.AddDays value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="46cae-722">整数部と小数部から成る日数。</span><span class="sxs-lookup"><span data-stu-id="46cae-722">A number of whole and fractional days.</span></span> <span data-ttu-id="46cae-723"><paramref name="value" /> パラメーターは、正または負のどちらの場合もあります。</span><span class="sxs-lookup"><span data-stu-id="46cae-723">The <paramref name="value" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="46cae-724">このインスタンスの値に、指定された日数を加算した新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-724">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of days to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="46cae-725">このインスタンスで表された日付と時刻に <paramref name="value" /> で表された日数を加算した値を保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-725">An object whose value is the sum of the date and time represented by this instance and the number of days represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-726">このメソッドは、この<xref:System.DateTime>の値を変更しません。</span><span class="sxs-lookup"><span data-stu-id="46cae-726">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="46cae-727">代わりに、この操作の結果<xref:System.DateTime>を値として持つ新しいを返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-727">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="46cae-728">の`value`小数部は、1日の小数部です。</span><span class="sxs-lookup"><span data-stu-id="46cae-728">The fractional part of `value` is the fractional part of a day.</span></span> <span data-ttu-id="46cae-729">たとえば、4.5 は、4日、12時間、0分、0秒、0ミリ秒、および0ティックに相当します。</span><span class="sxs-lookup"><span data-stu-id="46cae-729">For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds, and 0 ticks.</span></span>  
  
 <span data-ttu-id="46cae-730">`value`パラメーターは、ミリ秒単位で丸められます。</span><span class="sxs-lookup"><span data-stu-id="46cae-730">The `value` parameter is rounded to the nearest millisecond.</span></span>  
  
 <span data-ttu-id="46cae-731">この<xref:System.DateTime.AddDays%2A>メソッドは、日付の算術演算を実行するときに、うるう年と、月の日数を考慮します。</span><span class="sxs-lookup"><span data-stu-id="46cae-731">The <xref:System.DateTime.AddDays%2A> method takes into account leap years and the number of days in a month when performing date arithmetic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-732">次の例では<xref:System.DateTime.AddDays%2A> 、メソッドを使用して、現在の日付から36日後の曜日を確認します。</span><span class="sxs-lookup"><span data-stu-id="46cae-732">The following example uses the <xref:System.DateTime.AddDays%2A> method to determine the day of the week 36 days after the current date.</span></span>  
  
 [!code-cpp[DateTime.AddDays#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.AddDays/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.AddDays#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.AddDays/CS/class1.cs#1)]
 [!code-vb[DateTime.AddDays#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.AddDays/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-733">結果として返された <see cref="T:System.DateTime" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="46cae-733">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public DateTime AddHours (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddHours(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddHours(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddHours (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddHours(double value);" />
      <MemberSignature Language="F#" Value="member this.AddHours : double -&gt; DateTime" Usage="dateTime.AddHours value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="46cae-734">整数部と小数部から成る時間数。</span><span class="sxs-lookup"><span data-stu-id="46cae-734">A number of whole and fractional hours.</span></span> <span data-ttu-id="46cae-735"><paramref name="value" /> パラメーターは、正または負のどちらの場合もあります。</span><span class="sxs-lookup"><span data-stu-id="46cae-735">The <paramref name="value" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="46cae-736">このインスタンスの値に、指定された時間数を加算した新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-736">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of hours to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="46cae-737">このインスタンスで表された日付と時刻に <paramref name="value" /> で表された時間数を加算した値を保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-737">An object whose value is the sum of the date and time represented by this instance and the number of hours represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-738">このメソッドは、この<xref:System.DateTime>の値を変更しません。</span><span class="sxs-lookup"><span data-stu-id="46cae-738">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="46cae-739">代わりに、この操作の結果<xref:System.DateTime>を値として持つ新しいを返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-739">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span> <span data-ttu-id="46cae-740">`value`返さ<xref:System.DateTime.Kind%2A> れるオブジェクトのプロパティは、のプロパティ<xref:System.DateTime>と同じです。</span><span class="sxs-lookup"><span data-stu-id="46cae-740">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is the same as that of `value`.</span></span>  
  
 <span data-ttu-id="46cae-741">の`value`小数部は、1時間の小数部です。</span><span class="sxs-lookup"><span data-stu-id="46cae-741">The fractional part of `value` is the fractional part of an hour.</span></span> <span data-ttu-id="46cae-742">たとえば、4.5 は、4時間、30分、0秒、0ミリ秒、および0ティックに相当します。</span><span class="sxs-lookup"><span data-stu-id="46cae-742">For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds, and 0 ticks.</span></span>  
  
 <span data-ttu-id="46cae-743">`value`パラメーターは、ミリ秒単位で丸められます。</span><span class="sxs-lookup"><span data-stu-id="46cae-743">The `value` parameter is rounded to the nearest millisecond.</span></span>  
  
 <span data-ttu-id="46cae-744">1時間未満の時間間隔を分数に変換すると、結果が終了しない反復10進数の場合、精度が失われる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-744">Converting time intervals of less than an hour to a fraction can involve a loss of precision if the result is a non-terminating repeating decimal.</span></span> <span data-ttu-id="46cae-745">(たとえば、1分は0.016667 時間です)。この問題が発生した場合は、 <xref:System.DateTime.Add%2A>メソッドを使用できます。これにより、1回のメソッド呼び出しで複数の種類の時間間隔を指定できるようになり、時間間隔を1時間の小数部分に変換する必要がなくなります。</span><span class="sxs-lookup"><span data-stu-id="46cae-745">(For example, one minute is 0.016667 of an hour.) If this is problematic, you can use the <xref:System.DateTime.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-746">次の例では<xref:System.DateTime.AddHours%2A> 、メソッドを使用して、整数部と小数部の値を日付と時刻に追加しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-746">The following example uses the <xref:System.DateTime.AddHours%2A> method to add a number of whole and fractional values to a date and time.</span></span> <span data-ttu-id="46cae-747">また、小数部分を含む値をメソッドに渡すことによって生じる精度の低下についても示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-747">It also illustrates the loss of precision caused by passing the method a value that includes a fractional component.</span></span>  
  
 [!code-csharp[System.DateTime.AddHours#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.AddHours/cs/AddHours1.cs#1)]
 [!code-vb[System.DateTime.AddHours#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.AddHours/vb/AddHours1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-748">結果として返された <see cref="T:System.DateTime" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="46cae-748">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Add(System.TimeSpan)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="46cae-749">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="46cae-749">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public DateTime AddMilliseconds (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddMilliseconds(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddMilliseconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMilliseconds (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddMilliseconds(double value);" />
      <MemberSignature Language="F#" Value="member this.AddMilliseconds : double -&gt; DateTime" Usage="dateTime.AddMilliseconds value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="46cae-750">整数部と小数部から成るミリ秒数。</span><span class="sxs-lookup"><span data-stu-id="46cae-750">A number of whole and fractional milliseconds.</span></span> <span data-ttu-id="46cae-751"><paramref name="value" /> パラメーターは、正または負のどちらの場合もあります。</span><span class="sxs-lookup"><span data-stu-id="46cae-751">The <paramref name="value" /> parameter can be negative or positive.</span></span> <span data-ttu-id="46cae-752">この値は、近似値の整数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="46cae-752">Note that this value is rounded to the nearest integer.</span></span></param>
        <summary><span data-ttu-id="46cae-753">このインスタンスの値に、指定されたミリ秒数を加算した新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-753">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of milliseconds to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="46cae-754">このインスタンスで表された日付と時刻に <paramref name="value" /> で表されたミリ秒数を加算した値を保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-754">An object whose value is the sum of the date and time represented by this instance and the number of milliseconds represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-755">このメソッドは、この<xref:System.DateTime>の値を変更しません。</span><span class="sxs-lookup"><span data-stu-id="46cae-755">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="46cae-756">代わりに、この操作の結果<xref:System.DateTime>を値として持つ新しいを返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-756">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="46cae-757">の`value`小数部は、ミリ秒の小数部です。</span><span class="sxs-lookup"><span data-stu-id="46cae-757">The fractional part of `value` is the fractional part of a millisecond.</span></span> <span data-ttu-id="46cae-758">たとえば、4.5 は、4ミリ秒と5000ティックに相当します。ここで、1ミリ秒 = 1万ティックです。</span><span class="sxs-lookup"><span data-stu-id="46cae-758">For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond = 10000 ticks.</span></span>  
  
 <span data-ttu-id="46cae-759">`value`パラメーターは、最も近い整数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="46cae-759">The `value` parameter is rounded to the nearest integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-760">次の例では<xref:System.DateTime.AddMilliseconds%2A> 、メソッドを使用して、1ミリ秒<xref:System.DateTime>と1.5 ミリ秒を値に加算します。</span><span class="sxs-lookup"><span data-stu-id="46cae-760">The following example uses the <xref:System.DateTime.AddMilliseconds%2A> method to add one millisecond and 1.5 milliseconds to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="46cae-761">その後、それぞれの新しい値が表示され、その値と元の値の差が表示されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-761">It then displays each new value and displays the difference between it and the original value.</span></span> <span data-ttu-id="46cae-762">差は、時間間隔とタイマー刻みの数の両方として表示されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-762">The difference is displayed both as a time span and as a number of ticks.</span></span> <span data-ttu-id="46cae-763">この例では、1ミリ秒が1万ティックに等しいことが明確になります。</span><span class="sxs-lookup"><span data-stu-id="46cae-763">The example makes it clear that one millisecond equals 10,000 ticks.</span></span> <span data-ttu-id="46cae-764">また、加算を実行する前に小数部のミリ秒が丸められることも示しています。元<xref:System.DateTime>の日付に1.5 ミリ秒を加算した結果として得られる値は、元の日付より2ミリ秒を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-764">It also shows that fractional milliseconds are rounded before performing the addition; the <xref:System.DateTime> value that results from adding 1.5 milliseconds to the original date is 2 milliseconds greater than the original date.</span></span>  
  
 [!code-csharp[System.DateTime.AddMilliseconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addmilliseconds/cs/addmilliseconds2.cs#1)]
 [!code-vb[System.DateTime.AddMilliseconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addmilliseconds/vb/addmilliseconds2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-765">結果として返された <see cref="T:System.DateTime" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="46cae-765">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="46cae-766">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="46cae-766">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public DateTime AddMinutes (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddMinutes(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddMinutes(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMinutes (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddMinutes(double value);" />
      <MemberSignature Language="F#" Value="member this.AddMinutes : double -&gt; DateTime" Usage="dateTime.AddMinutes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="46cae-767">整数部と小数部から成る分数。</span><span class="sxs-lookup"><span data-stu-id="46cae-767">A number of whole and fractional minutes.</span></span> <span data-ttu-id="46cae-768"><paramref name="value" /> パラメーターは、正または負のどちらの場合もあります。</span><span class="sxs-lookup"><span data-stu-id="46cae-768">The <paramref name="value" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="46cae-769">このインスタンスの値に、指定された分数を加算した新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-769">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of minutes to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="46cae-770">このインスタンスで表された日付と時刻に <paramref name="value" /> で表された分数を加算した値を保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-770">An object whose value is the sum of the date and time represented by this instance and the number of minutes represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-771">このメソッドは、この<xref:System.DateTime>の値を変更しません。</span><span class="sxs-lookup"><span data-stu-id="46cae-771">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="46cae-772">代わりに、この操作の結果<xref:System.DateTime>を値として持つ新しいを返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-772">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="46cae-773">の`value`小数部は、分の小数部です。</span><span class="sxs-lookup"><span data-stu-id="46cae-773">The fractional part of `value` is the fractional part of a minute.</span></span> <span data-ttu-id="46cae-774">たとえば、4.5 は、4分、30秒、0ミリ秒、および0ティックに相当します。</span><span class="sxs-lookup"><span data-stu-id="46cae-774">For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds, and 0 ticks.</span></span>  
  
 <span data-ttu-id="46cae-775">`value`パラメーターは、ミリ秒単位で丸められます。</span><span class="sxs-lookup"><span data-stu-id="46cae-775">The `value` parameter is rounded to the nearest millisecond.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-776">次の例では<xref:System.DateTime.AddMinutes%2A> 、メソッドを使用して、整数部と小数部の値を日付と時刻に追加しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-776">The following example uses the <xref:System.DateTime.AddMinutes%2A> method to add a number of whole and fractional values to a date and time.</span></span>  
  
 [!code-cpp[System.DateTime.AddMinutes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.addminutes/cpp/addminutes1.cpp#1)]
 [!code-csharp[System.DateTime.AddMinutes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addminutes/cs/addminutes1.cs#1)]
 [!code-vb[System.DateTime.AddMinutes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addminutes/vb/addminutes1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-777">結果として返された <see cref="T:System.DateTime" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="46cae-777">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="46cae-778">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="46cae-778">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public DateTime AddMonths (int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddMonths(int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddMonths(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMonths (months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddMonths(int months);" />
      <MemberSignature Language="F#" Value="member this.AddMonths : int -&gt; DateTime" Usage="dateTime.AddMonths months" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="months"><span data-ttu-id="46cae-779">月数。</span><span class="sxs-lookup"><span data-stu-id="46cae-779">A number of months.</span></span> <span data-ttu-id="46cae-780"><paramref name="months" /> パラメーターは、正または負のどちらの場合もあります。</span><span class="sxs-lookup"><span data-stu-id="46cae-780">The <paramref name="months" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="46cae-781">このインスタンスの値に、指定された月数を加算した新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-781">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of months to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="46cae-782">このインスタンスで表された日付と時刻と <paramref name="months" /> の合計を値とするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-782">An object whose value is the sum of the date and time represented by this instance and <paramref name="months" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-783">このメソッドは、この<xref:System.DateTime>オブジェクトの値を変更しません。</span><span class="sxs-lookup"><span data-stu-id="46cae-783">This method does not change the value of this <xref:System.DateTime> object.</span></span> <span data-ttu-id="46cae-784">代わりに、この操作の結果<xref:System.DateTime>を値として持つ新しいオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-784">Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="46cae-785">メソッド<xref:System.DateTime.AddMonths%2A>は、うるう年と月の日数を考慮して、結果の月と年を計算し、結果として得ら<xref:System.DateTime>れるオブジェクトの日の部分を調整します。</span><span class="sxs-lookup"><span data-stu-id="46cae-785">The <xref:System.DateTime.AddMonths%2A> method calculates the resulting month and year, taking into account leap years and the number of days in a month, then adjusts the day part of the resulting <xref:System.DateTime> object.</span></span> <span data-ttu-id="46cae-786">結果として得られる月の日付が有効な日付でない場合は、その月の最後の有効日が使用されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-786">If the resulting day is not a valid day in the resulting month, the last valid day of the resulting month is used.</span></span> <span data-ttu-id="46cae-787">たとえば、3月31日 + 1 か月 = 4 月30日、3月31日-1 か月 = 28 年以外の場合は2月28日、閏年の場合は2月29日となります。</span><span class="sxs-lookup"><span data-stu-id="46cae-787">For example, March 31st + 1 month = April 30th, and March 31st - 1 month = February 28 for a non-leap year and February 29 for a leap year.</span></span>  
  
 <span data-ttu-id="46cae-788">結果として生成<xref:System.DateTime>されるオブジェクトの時刻部分は、このインスタンスと同じままです。</span><span class="sxs-lookup"><span data-stu-id="46cae-788">The time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-789">次の例では、0 ~ 15 か月の期間を、2015年12月の最後の日に加算します。</span><span class="sxs-lookup"><span data-stu-id="46cae-789">The following example adds between zero and fifteen months to the last day of December, 2015.</span></span> <span data-ttu-id="46cae-790">この場合、AddMonths メソッドは、毎月の最終日の日付を返し、うるう年を正常に処理します。</span><span class="sxs-lookup"><span data-stu-id="46cae-790">In this case, the AddMonths method returns the date of the last day of each month, and successfully handles leap years.</span></span>  
  
 [!code-csharp[System.DateTime.AddMonths#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addmonths/cs/addmonths1.cs#1)]
 [!code-vb[System.DateTime.AddMonths#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addmonths/vb/addmonths1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-791">結果として返された <see cref="T:System.DateTime" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="46cae-791">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span>  
  
<span data-ttu-id="46cae-792">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-792">-or-</span></span> 
 <span data-ttu-id="46cae-793"><paramref name="months" /> が -120,000 未満であるか、120,000 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-793"><paramref name="months" /> is less than -120,000 or greater than 120,000.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public DateTime AddSeconds (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddSeconds(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddSeconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddSeconds (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddSeconds(double value);" />
      <MemberSignature Language="F#" Value="member this.AddSeconds : double -&gt; DateTime" Usage="dateTime.AddSeconds value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="46cae-794">整数部と小数部から成る秒数。</span><span class="sxs-lookup"><span data-stu-id="46cae-794">A number of whole and fractional seconds.</span></span> <span data-ttu-id="46cae-795"><paramref name="value" /> パラメーターは、正または負のどちらの場合もあります。</span><span class="sxs-lookup"><span data-stu-id="46cae-795">The <paramref name="value" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="46cae-796">このインスタンスの値に、指定された秒数を加算した新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-796">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of seconds to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="46cae-797">このインスタンスで表された日付と時刻に <paramref name="value" /> で表された秒数を加算した値を保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-797">An object whose value is the sum of the date and time represented by this instance and the number of seconds represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-798">このメソッドは、この<xref:System.DateTime>の値を変更しません。</span><span class="sxs-lookup"><span data-stu-id="46cae-798">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="46cae-799">代わりに、この操作の結果<xref:System.DateTime>を値として持つ新しいを返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-799">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="46cae-800">の`value`小数部は、秒の小数部です。</span><span class="sxs-lookup"><span data-stu-id="46cae-800">The fractional part of `value` is the fractional part of a second.</span></span> <span data-ttu-id="46cae-801">たとえば、4.5 は、4秒、500ミリ秒、および0ティックに相当します。</span><span class="sxs-lookup"><span data-stu-id="46cae-801">For example, 4.5 is equivalent to 4 seconds, 500 milliseconds, and 0 ticks.</span></span>  
  
 <span data-ttu-id="46cae-802">`value`パラメーターは、ミリ秒単位で丸められます。</span><span class="sxs-lookup"><span data-stu-id="46cae-802">The `value` parameter is rounded to the nearest millisecond.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-803">次の例では<xref:System.DateTime.AddSeconds%2A> 、メソッドを使用して、1日の<xref:System.DateTime>値に30秒と秒数を加算します。</span><span class="sxs-lookup"><span data-stu-id="46cae-803">The following example uses the <xref:System.DateTime.AddSeconds%2A> method to add 30 seconds and the number of seconds in one day to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="46cae-804">その後、それぞれの新しい値が表示され、その値と元の値の差が表示されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-804">It then displays each new value and displays the difference between it and the original value.</span></span> <span data-ttu-id="46cae-805">差は、時間間隔とタイマー刻みの数の両方として表示されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-805">The difference is displayed both as a time span and as a number of ticks.</span></span>  
  
 [!code-csharp[System.DateTime.AddSeconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addseconds/cs/addseconds1.cs#1)]
 [!code-vb[System.DateTime.AddSeconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addseconds/vb/addseconds1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-806">結果として返された <see cref="T:System.DateTime" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="46cae-806">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="46cae-807">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="46cae-807">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddTicks">
      <MemberSignature Language="C#" Value="public DateTime AddTicks (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddTicks(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddTicks(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTicks (value As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddTicks(long value);" />
      <MemberSignature Language="F#" Value="member this.AddTicks : int64 -&gt; DateTime" Usage="dateTime.AddTicks value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="46cae-808">100 ナノ秒タイマー刻み数。</span><span class="sxs-lookup"><span data-stu-id="46cae-808">A number of 100-nanosecond ticks.</span></span> <span data-ttu-id="46cae-809"><paramref name="value" /> パラメーターは、正または負のどちらの場合もあります。</span><span class="sxs-lookup"><span data-stu-id="46cae-809">The <paramref name="value" /> parameter can be positive or negative.</span></span></param>
        <summary><span data-ttu-id="46cae-810">このインスタンスの値に、指定されたタイマー刻みの数を加算した新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-810">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of ticks to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="46cae-811">このインスタンスで表された日付と時刻に <paramref name="value" /> で表された時間数を加算した値を保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-811">An object whose value is the sum of the date and time represented by this instance and the time represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-812">このメソッドは、この<xref:System.DateTime>の値を変更しません。</span><span class="sxs-lookup"><span data-stu-id="46cae-812">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="46cae-813">代わりに、この操作の結果<xref:System.DateTime>を値として持つ新しいを返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-813">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-814">結果として返された <see cref="T:System.DateTime" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="46cae-814">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int64" />
        <altmember cref="P:System.DateTime.Ticks" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="46cae-815">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="46cae-815">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public DateTime AddYears (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddYears(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddYears(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddYears (value As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddYears(int value);" />
      <MemberSignature Language="F#" Value="member this.AddYears : int -&gt; DateTime" Usage="dateTime.AddYears value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="46cae-816">年数。</span><span class="sxs-lookup"><span data-stu-id="46cae-816">A number of years.</span></span> <span data-ttu-id="46cae-817"><paramref name="value" /> パラメーターは、正または負のどちらの場合もあります。</span><span class="sxs-lookup"><span data-stu-id="46cae-817">The <paramref name="value" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="46cae-818">このインスタンスの値に、指定された年数を加算した新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-818">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of years to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="46cae-819">このインスタンスで表された日付と時刻に <paramref name="value" /> で表された年数を加算した値を保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-819">An object whose value is the sum of the date and time represented by this instance and the number of years represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-820">このメソッドは、この<xref:System.DateTime>オブジェクトの値を変更しません。</span><span class="sxs-lookup"><span data-stu-id="46cae-820">This method does not change the value of this <xref:System.DateTime> object.</span></span> <span data-ttu-id="46cae-821">代わりに、この操作の結果<xref:System.DateTime>を値として持つ新しいオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-821">Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="46cae-822">メソッド<xref:System.DateTime.AddYears%2A>は、うるう年を考慮して、結果として得られた年を計算します。</span><span class="sxs-lookup"><span data-stu-id="46cae-822">The <xref:System.DateTime.AddYears%2A> method calculates the resulting year taking into account leap years.</span></span> <span data-ttu-id="46cae-823">結果<xref:System.DateTime>のオブジェクトの月と時刻の部分は、このインスタンスと同じままです。</span><span class="sxs-lookup"><span data-stu-id="46cae-823">The month and time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance.</span></span>  
  
 <span data-ttu-id="46cae-824">現在のインスタンスが閏年の閏年を表している場合、戻り値はターゲットの日付によって異なります。</span><span class="sxs-lookup"><span data-stu-id="46cae-824">If the current instance represents the leap day in a leap year, the return value depends on the target date:</span></span>  
  
-   <span data-ttu-id="46cae-825">が`value`閏年でもある場合 +  <xref:System.DateTime.Year%2A?displayProperty=nameWithType> 、戻り値はその年の閏年を表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-825">If `value` + <xref:System.DateTime.Year%2A?displayProperty=nameWithType> is also a leap year, the return value represents the leap day in that year.</span></span> <span data-ttu-id="46cae-826">たとえば、2012年2月29日に4年を加算した場合、返された日付は2016年2月29日になります。</span><span class="sxs-lookup"><span data-stu-id="46cae-826">For example, if four years is added to February 29, 2012, the date returned is February 29, 2016.</span></span>  
  
-   <span data-ttu-id="46cae-827">が`value`閏年でない場合 +  <xref:System.DateTime.Year%2A?displayProperty=nameWithType> 、戻り値はその年の閏年より前の日を表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-827">If `value` + <xref:System.DateTime.Year%2A?displayProperty=nameWithType> is not a leap year, the return value represents the day before the leap day in that year.</span></span> <span data-ttu-id="46cae-828">たとえば、1年が2012年2月29日に追加された場合、返される日付は2013年2月28日になります。</span><span class="sxs-lookup"><span data-stu-id="46cae-828">For example, if one year is added to February 29, 2012, the date returned is February 28, 2013.</span></span>  
  
 <span data-ttu-id="46cae-829">次の例では、 <xref:System.DateTime.AddYears%2A>閏月を表す<xref:System.DateTime>値を使用してメソッドを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-829">The following example illustrates using the <xref:System.DateTime.AddYears%2A> method with a <xref:System.DateTime> value that represents a leap year day.</span></span> <span data-ttu-id="46cae-830">15年前の日付と、2000年2月29日以降の15年が表示されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-830">It displays the date for the fifteen years prior to and the fifteen years that follow February 29, 2000.</span></span>  
  
 [!code-csharp[System.DateTime.AddYears#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addyears/cs/addyears1.cs#1)]
 [!code-vb[System.DateTime.AddYears#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addyears/vb/addyears1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-831"><paramref name="value" /> または結果として返された <see cref="T:System.DateTime" /> は <see cref="F:System.DateTime.MinValue" /> 未満であるか、<see cref="F:System.DateTime.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-831"><paramref name="value" /> or the resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (t1 As DateTime, t2 As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member Compare : DateTime * DateTime -&gt; int" Usage="System.DateTime.Compare (t1, t2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="46cae-832">比較する最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-832">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="46cae-833">比較する 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-833">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="46cae-834"><see cref="T:System.DateTime" /> の 2 つのインスタンスを比較し、第 1 のインスタンスが第 2 のインスタンスよりも前か、同じか、それとも後かを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-834">Compares two instances of <see cref="T:System.DateTime" /> and returns an integer that indicates whether the first instance is earlier than, the same as, or later than the second instance.</span></span></summary>
        <returns><span data-ttu-id="46cae-835"><paramref name="t1" /> と <paramref name="t2" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="46cae-835">A signed number indicating the relative values of <paramref name="t1" /> and <paramref name="t2" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="46cae-836">値型</span><span class="sxs-lookup"><span data-stu-id="46cae-836">Value Type</span></span> 
 </term><description> <span data-ttu-id="46cae-837">条件</span><span class="sxs-lookup"><span data-stu-id="46cae-837">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="46cae-838">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="46cae-838">Less than zero</span></span> 
 </term><description><span data-ttu-id="46cae-839"><paramref name="t1" /> が <paramref name="t2" /> よりも前の日時です。</span><span class="sxs-lookup"><span data-stu-id="46cae-839"><paramref name="t1" /> is earlier than <paramref name="t2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="46cae-840">0</span><span class="sxs-lookup"><span data-stu-id="46cae-840">Zero</span></span> 
 </term><description><span data-ttu-id="46cae-841"><paramref name="t1" /> は <paramref name="t2" /> と同じです。</span><span class="sxs-lookup"><span data-stu-id="46cae-841"><paramref name="t1" /> is the same as <paramref name="t2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="46cae-842">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="46cae-842">Greater than zero</span></span> 
 </term><description><span data-ttu-id="46cae-843"><paramref name="t1" /> が <paramref name="t2" /> より後の日時です。</span><span class="sxs-lookup"><span data-stu-id="46cae-843"><paramref name="t1" /> is later than <paramref name="t2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-844">`t1`との関係`t2`を判断するために<xref:System.DateTime.Compare%2A> 、メソッドは<xref:System.DateTime.Ticks%2A>と`t2`の`t1`プロパティを<xref:System.DateTime.Kind%2A>比較しますが、プロパティを無視します。</span><span class="sxs-lookup"><span data-stu-id="46cae-844">To determine the relationship of `t1` to `t2`, the <xref:System.DateTime.Compare%2A> method compares the <xref:System.DateTime.Ticks%2A> property of `t1` and `t2` but ignores their <xref:System.DateTime.Kind%2A> property.</span></span> <span data-ttu-id="46cae-845">オブジェクトを<xref:System.DateTime>比較する前に、オブジェクトが同じタイムゾーンの時刻を表していることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-845">Before comparing <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-846">メソッドの<xref:System.DateTime.Compare%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-846">The following example demonstrates the <xref:System.DateTime.Compare%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.compare/cs/compare1.cs#1)]
 [!code-vb[System.DateTime.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.compare/vb/compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.Object)" />
        <altmember cref="M:System.DateTime.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="46cae-847">このインスタンスの値と指定した <see cref="T:System.DateTime" /> の値を比較し、このインスタンスの値が指定した <see cref="T:System.DateTime" /> の値よりも前か、同じか、または後かを示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-847">Compares the value of this instance to a specified <see cref="T:System.DateTime" /> value and indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-848"><xref:System.DateTime.CompareTo%2A>メソッドの2つのオーバーロードは、次の表に示すように、このインスタンス`value`と引数の相対値を示す符号付き数値を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-848">The two overloads of the <xref:System.DateTime.CompareTo%2A> method return a signed number that indicates the relative value of this instance and the `value` argument, as shown in the following table.</span></span>  
  
|<span data-ttu-id="46cae-849">[値]</span><span class="sxs-lookup"><span data-stu-id="46cae-849">Value</span></span>|<span data-ttu-id="46cae-850">説明</span><span class="sxs-lookup"><span data-stu-id="46cae-850">Description</span></span>|  
|-----------|-----------------|  
|<span data-ttu-id="46cae-851">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="46cae-851">Less than zero</span></span>|<span data-ttu-id="46cae-852">このインスタンスは、`value` よりも前の日時です。</span><span class="sxs-lookup"><span data-stu-id="46cae-852">This instance is earlier than `value`.</span></span>|  
|<span data-ttu-id="46cae-853">0</span><span class="sxs-lookup"><span data-stu-id="46cae-853">Zero</span></span>|<span data-ttu-id="46cae-854">このインスタンスは `value` と同じです。</span><span class="sxs-lookup"><span data-stu-id="46cae-854">This instance is the same as `value`.</span></span>|  
|<span data-ttu-id="46cae-855">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="46cae-855">Greater than zero</span></span>|<span data-ttu-id="46cae-856">このインスタンスは、`value` よりも後の日時です。</span><span class="sxs-lookup"><span data-stu-id="46cae-856">This instance is later than `value`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.CompareTo(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(DateTime value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : DateTime -&gt; int&#xA;override this.CompareTo : DateTime -&gt; int" Usage="dateTime.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="46cae-857">現在のインスタンスと比較する対象のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-857">The object to compare to the current instance.</span></span></param>
        <summary><span data-ttu-id="46cae-858">このインスタンスの値と指定した <see cref="T:System.DateTime" /> の値を比較し、このインスタンスの値が指定した <see cref="T:System.DateTime" /> の値よりも前か、同じか、または後かを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-858">Compares the value of this instance to a specified <see cref="T:System.DateTime" /> value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <returns><span data-ttu-id="46cae-859">このインスタンスと <paramref name="value" /> パラメーターの相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="46cae-859">A signed number indicating the relative values of this instance and the <paramref name="value" /> parameter.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="46cae-860">[値]</span><span class="sxs-lookup"><span data-stu-id="46cae-860">Value</span></span> 
 </term><description> <span data-ttu-id="46cae-861">説明</span><span class="sxs-lookup"><span data-stu-id="46cae-861">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="46cae-862">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="46cae-862">Less than zero</span></span> 
 </term><description> <span data-ttu-id="46cae-863">このインスタンスは、<paramref name="value" /> よりも前の日時です。</span><span class="sxs-lookup"><span data-stu-id="46cae-863">This instance is earlier than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="46cae-864">0</span><span class="sxs-lookup"><span data-stu-id="46cae-864">Zero</span></span> 
 </term><description> <span data-ttu-id="46cae-865">このインスタンスは <paramref name="value" /> と同じです。</span><span class="sxs-lookup"><span data-stu-id="46cae-865">This instance is the same as <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="46cae-866">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="46cae-866">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="46cae-867">このインスタンスは、<paramref name="value" /> よりも後の日時です。</span><span class="sxs-lookup"><span data-stu-id="46cae-867">This instance is later than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-868">`value`現在のインスタンスとの関係を判断するために<xref:System.DateTime.CompareTo%2A> 、メソッドは<xref:System.DateTime.Ticks%2A>現在のインスタンスのプロパティを`value`比較します<xref:System.DateTime.Kind%2A>が、そのプロパティは無視します。</span><span class="sxs-lookup"><span data-stu-id="46cae-868">To determine the relationship of the current instance to `value`, the <xref:System.DateTime.CompareTo%2A> method compares the <xref:System.DateTime.Ticks%2A> property of the current instance and `value` but ignores their <xref:System.DateTime.Kind%2A> property.</span></span>  <span data-ttu-id="46cae-869">オブジェクトを<xref:System.DateTime>比較する前に、オブジェクトが同じタイムゾーンの時刻を表していることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-869">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="46cae-870">これを行うには、 <xref:System.DateTime.Kind%2A>プロパティの値を比較します。</span><span class="sxs-lookup"><span data-stu-id="46cae-870">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> properties.</span></span>  
  
 <span data-ttu-id="46cae-871">このメソッドは、 <xref:System.IComparable%601?displayProperty=nameWithType> `value`パラメーターをオブジェクトに変換する必要<xref:System.DateTime.CompareTo%28System.Object%29?displayProperty=nameWithType>がないため、インターフェイスを実装し、メソッドのオーバーロードよりも若干優れています。</span><span class="sxs-lookup"><span data-stu-id="46cae-871">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.DateTime.CompareTo%28System.Object%29?displayProperty=nameWithType> method overload because it does not have to convert the `value` parameter to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-872">次の例では<xref:System.DateTime> 、今日の日付を表す3つのオブジェクト、1年前の日付を表す別のオブジェクト、および将来の日付を表す3つのオブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-872">The following example instantiates three <xref:System.DateTime> objects, one that represents today's date, another that represents the date one year previously, and a third that represents the date one year in the future.</span></span> <span data-ttu-id="46cae-873">次に<xref:System.DateTime.CompareTo%28System.DateTime%29> 、メソッドを呼び出し、比較の結果を表示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-873">It then calls the <xref:System.DateTime.CompareTo%28System.DateTime%29> method and displays the result of the comparison.</span></span>  
  
 [!code-csharp[DateTime.CompareTo.2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.CompareTo.2/CS/CompareTo_CS1_24564.cs#1)]
 [!code-vb[DateTime.CompareTo.2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.CompareTo.2/VB/CompareTo_VB1_24564.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(object value) cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ value);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="F#" Value="member this.CompareTo : obj -&gt; int" Usage="dateTime.CompareTo value" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="dateTime.CompareTo value" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="46cae-874">比較対象のボックス化されたオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="46cae-874">A boxed object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="46cae-875">このインスタンスの値と指定した <see cref="T:System.DateTime" /> の値を含む指定したオブジェクトを比較し、このインスタンスの値が指定した <see cref="T:System.DateTime" /> の値よりも前か、同じか、または後かを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-875">Compares the value of this instance to a specified object that contains a specified <see cref="T:System.DateTime" /> value, and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <returns><span data-ttu-id="46cae-876">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="46cae-876">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="46cae-877">[値]</span><span class="sxs-lookup"><span data-stu-id="46cae-877">Value</span></span> 
 </term><description> <span data-ttu-id="46cae-878">説明</span><span class="sxs-lookup"><span data-stu-id="46cae-878">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="46cae-879">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="46cae-879">Less than zero</span></span> 
 </term><description> <span data-ttu-id="46cae-880">このインスタンスは、<paramref name="value" /> よりも前の日時です。</span><span class="sxs-lookup"><span data-stu-id="46cae-880">This instance is earlier than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="46cae-881">0</span><span class="sxs-lookup"><span data-stu-id="46cae-881">Zero</span></span> 
 </term><description> <span data-ttu-id="46cae-882">このインスタンスは <paramref name="value" /> と同じです。</span><span class="sxs-lookup"><span data-stu-id="46cae-882">This instance is the same as <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="46cae-883">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="46cae-883">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="46cae-884">このインスタンスは <paramref name="value" /> より後の時刻を表しているか、または <paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="46cae-884">This instance is later than <paramref name="value" />, or <paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-885">`value`現在のインスタンスとの関係を判断するために<xref:System.DateTime.CompareTo%2A> 、メソッドは<xref:System.DateTime.Ticks%2A>現在のインスタンスのプロパティを`value`比較します<xref:System.DateTime.Kind%2A>が、そのプロパティは無視します。</span><span class="sxs-lookup"><span data-stu-id="46cae-885">To determine the relationship of the current instance to `value`, the <xref:System.DateTime.CompareTo%2A> method compares the <xref:System.DateTime.Ticks%2A> property of the current instance and `value` but ignores their <xref:System.DateTime.Kind%2A> property.</span></span> <span data-ttu-id="46cae-886">オブジェクトを<xref:System.DateTime>比較する前に、オブジェクトが同じタイムゾーンの時刻を表していることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-886">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="46cae-887">これを行うには、 <xref:System.DateTime.Kind%2A>プロパティの値を比較します。</span><span class="sxs-lookup"><span data-stu-id="46cae-887">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> properties.</span></span>  
  
 <span data-ttu-id="46cae-888">のすべての<xref:System.DateTime>インスタンスは、その値に関係なく、より`null`も大きいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-888">Any instance of <xref:System.DateTime>, regardless of its value, is considered greater than `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-889">メソッドの<xref:System.DateTime.CompareTo%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-889">The following example demonstrates the <xref:System.DateTime.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[DateTime.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.CompareTo/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.CompareTo/CS/class1.cs#1)]
 [!code-vb[DateTime.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.CompareTo/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46cae-890"><paramref name="value" /> が <see cref="T:System.DateTime" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-890"><paramref name="value" /> is not a <see cref="T:System.DateTime" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Date">
      <MemberSignature Language="C#" Value="public DateTime Date { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Date" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Date" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Date As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Date { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Date : DateTime" Usage="System.DateTime.Date" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="46cae-891">このインスタンスの日付の部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-891">Gets the date component of this instance.</span></span></summary>
        <value><span data-ttu-id="46cae-892">このインスタンスと日付が同じで、時刻値が深夜の 12 時 (00:00:00) に設定された新しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-892">A new object with the same date as this instance, and the time value set to 12:00:00 midnight (00:00:00).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-893"><xref:System.DateTime.Kind%2A> 戻り<xref:System.DateTime>値のプロパティの値は、現在のインスタンスの値と同じです。</span><span class="sxs-lookup"><span data-stu-id="46cae-893">The value of the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is the same as that of the current instance.</span></span>  
  
 <span data-ttu-id="46cae-894">型は<xref:System.DateTime> 、1つの型の日付と時刻の両方を表すため、 <xref:System.DateTime.Date%2A>プロパティによって返された日付が日付と時刻として解釈されないようにすることが重要です。</span><span class="sxs-lookup"><span data-stu-id="46cae-894">Because the <xref:System.DateTime> type represents both dates and times in a single type, it is important to avoid misinterpreting a date returned by the <xref:System.DateTime.Date%2A> property as a date and time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-895">次の例では<xref:System.DateTime.Date%2A> 、プロパティを使用して、その<xref:System.DateTime>時刻部分が 0 (または0:00:00 または午前0時) に設定された値の日付部分を抽出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-895">The following example uses the <xref:System.DateTime.Date%2A> property to extract the date component of a <xref:System.DateTime> value with its time component set to zero (or 0:00:00, or midnight).</span></span> <span data-ttu-id="46cae-896">また、 <xref:System.DateTime>値を表示するときに使用される書式指定文字列によっては、書式設定された出力に時間部分が引き続き表示されることがわかります。</span><span class="sxs-lookup"><span data-stu-id="46cae-896">It also illustrates that, depending on the format string used when displaying the <xref:System.DateTime> value, the time component can continue to appear in formatted output.</span></span>  
  
 [!code-cpp[System.DateTime.Date#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Date/cpp/date1.cpp#1)]
 [!code-csharp[System.DateTime.Date#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Date/cs/Date1.cs#1)]
 [!code-vb[System.DateTime.Date#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Date/vb/Date1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public int Day { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Day" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Day" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Day As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Day { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Day : int" Usage="System.DateTime.Day" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="46cae-897">このインスタンスで表される月の日付を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-897">Gets the day of the month represented by this instance.</span></span></summary>
        <value><span data-ttu-id="46cae-898">DateTime の日付部分 (1 ～ 31)。</span><span class="sxs-lookup"><span data-stu-id="46cae-898">The day component, expressed as a value between 1 and 31.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-899">プロパティ<xref:System.DateTime.Day%2A>は、現在<xref:System.DateTime>の値が他の暦を使用してインスタンス化されている場合や、現在のスレッドカルチャの既定の暦がグレゴリオ暦ではない場合でも、グレゴリオ暦の月の日付を常に返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-899">The <xref:System.DateTime.Day%2A> property always returns the day of the month in the Gregorian calendar, even if the current <xref:System.DateTime> value was instantiated using some other calendar or if the current thread culture's default calendar is not the Gregorian calendar.</span></span> <span data-ttu-id="46cae-900">他の暦を使用して特定の日付の月の日付を取得するには、 <xref:System.Globalization.Calendar.GetDayOfMonth%2A?displayProperty=nameWithType>そのカレンダーのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-900">To retrieve the day of the month of a particular date using some other calendar, call that calendar's <xref:System.Globalization.Calendar.GetDayOfMonth%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="46cae-901">次の例では、 <xref:System.DateTime.Day%2A>プロパティ<xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>とメソッドの両方を使用して、イスラム暦を<xref:System.DateTime>使用してインスタンス化された値の月の日付を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-901">The following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=nameWithType> method to retrieve the day of the month for a <xref:System.DateTime> value that is instantiated using the Hijri calendar.</span></span>  
  
 [!code-csharp[System.DateTime.Day#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day1.cs#1)]
 [!code-vb[System.DateTime.Day#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day1.vb#1)]  
  
 <span data-ttu-id="46cae-902">同様に、次の例では<xref:System.DateTime.Day%2A> 、プロパティ<xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>とメソッドの両方を使用して、現在のスレッドカルチャが、既定の暦としてイスラム暦を使用している場合に、その月の日付を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-902">Similarly, the following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=nameWithType> method to retrieve the day of the month when the current thread culture is ar-SA, which uses Hijri as its default calendar.</span></span>  
  
 [!code-csharp[System.DateTime.Day#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day2.cs#2)]
 [!code-vb[System.DateTime.Day#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day2.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="46cae-903">プロパティの<xref:System.DateTime.Day%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-903">The following example demonstrates the <xref:System.DateTime.Day%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek DayOfWeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek DayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.DayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek DayOfWeek { DayOfWeek get(); };" />
      <MemberSignature Language="F#" Value="member this.DayOfWeek : DayOfWeek" Usage="System.DateTime.DayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="46cae-904">このインスタンスで表される曜日を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-904">Gets the day of the week represented by this instance.</span></span></summary>
        <value><span data-ttu-id="46cae-905">この <see cref="T:System.DateTime" /> 値の曜日を示す列挙型定数。</span><span class="sxs-lookup"><span data-stu-id="46cae-905">An enumerated constant that indicates the day of the week of this <see cref="T:System.DateTime" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-906"><xref:System.DayOfWeek>列挙体の定数の値は、から<xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>まで<xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>の範囲です。</span><span class="sxs-lookup"><span data-stu-id="46cae-906">The value of the constants in the <xref:System.DayOfWeek> enumeration ranges from <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType> to <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-907">整数にキャストする場合、値は 0 (を示す<xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>) から 6 (を示す<xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>) の範囲内になります。</span><span class="sxs-lookup"><span data-stu-id="46cae-907">If cast to an integer, its value ranges from zero (which indicates <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>) to six (which indicates <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="46cae-908">プロパティ<xref:System.DateTime.DayOfWeek%2A>は、列挙定数を返します。システムの地域と言語の設定は反映されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-908">The <xref:System.DateTime.DayOfWeek%2A> property returns an enumerated constant; it does not reflect a system's regional and language settings.</span></span> <span data-ttu-id="46cae-909">特定の日付のローカライズされた曜日名を表す文字列を取得するには、パラメーターを<xref:System.DateTime.ToString%2A> `format`含むメソッドのオーバーロードの1つを呼び出し、 `ddd`また`dddd`はカスタム書式指定文字列のいずれかを渡します。</span><span class="sxs-lookup"><span data-stu-id="46cae-909">To retrieve a string representing a localized weekday name for a particular date, call one of the overloads of the <xref:System.DateTime.ToString%2A> method that includes a `format` parameter and pass it either the `ddd` or `dddd` custom format strings.</span></span> <span data-ttu-id="46cae-910">詳細については、「[方法: 特定の日付から曜日を抽出する](~/docs/standard/base-types/how-to-extract-the-day-of-the-week-from-a-specific-date.md)。</span><span class="sxs-lookup"><span data-stu-id="46cae-910">For details, see [How to: Extract the Day of the Week from a Specific Date](~/docs/standard/base-types/how-to-extract-the-day-of-the-week-from-a-specific-date.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-911"><xref:System.DateTime.DayOfWeek%2A> プロパティ<xref:System.DayOfWeek?displayProperty=nameWithType>と列挙体の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-911">The following example demonstrates the <xref:System.DateTime.DayOfWeek%2A> property and the <xref:System.DayOfWeek?displayProperty=nameWithType> enumeration.</span></span>  
  
 [!code-cpp[DateTime.DayOfWeek#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.DayOfWeek/CPP/dow.cpp#1)]
 [!code-csharp[DateTime.DayOfWeek#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.DayOfWeek/CS/dow.cs#1)]
 [!code-vb[DateTime.DayOfWeek#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.DayOfWeek/VB/dow.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Ticks" />
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="DayOfYear">
      <MemberSignature Language="C#" Value="public int DayOfYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DayOfYear" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.DayOfYear" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DayOfYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DayOfYear : int" Usage="System.DateTime.DayOfYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="46cae-912">このインスタンスで表される年間積算日を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-912">Gets the day of the year represented by this instance.</span></span></summary>
        <value><span data-ttu-id="46cae-913">1 から 366 までの間の積算日。</span><span class="sxs-lookup"><span data-stu-id="46cae-913">The day of the year, expressed as a value between 1 and 366.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-914">プロパティ<xref:System.DateTime.DayOfYear%2A>は、年の日付を計算するときに、うるう年を考慮します。</span><span class="sxs-lookup"><span data-stu-id="46cae-914">The <xref:System.DateTime.DayOfYear%2A> property takes leap years into account when it calculates the day of the year.</span></span> <span data-ttu-id="46cae-915">プロパティ値は、現在のスレッドカルチャの現在の暦に関係なく、グレゴリオ暦の年の日付を常に反映します。</span><span class="sxs-lookup"><span data-stu-id="46cae-915">The property value always reflects the day of the year in the Gregorian calendar, regardless of the current thread culture's current calendar.</span></span> <span data-ttu-id="46cae-916">別の暦で年の日付を取得するには、その<xref:System.Globalization.Calendar.GetDayOfYear%2A?displayProperty=nameWithType>暦のメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-916">To retrieve the day of the year in a different calendar, call the <xref:System.Globalization.Calendar.GetDayOfYear%2A?displayProperty=nameWithType> method of that calendar.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-917">次の例では、グレゴリオ暦の2010-2020 年の年12月31日を表示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-917">The following example displays the day of the year of December 31 for the years 2010-2020 in the Gregorian calendar.</span></span> <span data-ttu-id="46cae-918">この例では、12月31日がうるう年の年の36番目の日であることが示されています。</span><span class="sxs-lookup"><span data-stu-id="46cae-918">Note that the example shows that December 31 is the 366th day of the year in leap years.</span></span>  
  
 [!code-csharp[System.DateTime.DayOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.dayofyear/cs/dayofyear2.cs#1)]
 [!code-vb[System.DateTime.DayOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.dayofyear/vb/dayofyear2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="DaysInMonth">
      <MemberSignature Language="C#" Value="public static int DaysInMonth (int year, int month);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DaysInMonth(int32 year, int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.DaysInMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DaysInMonth (year As Integer, month As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DaysInMonth(int year, int month);" />
      <MemberSignature Language="F#" Value="static member DaysInMonth : int * int -&gt; int" Usage="System.DateTime.DaysInMonth (year, month)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="46cae-919">年。</span><span class="sxs-lookup"><span data-stu-id="46cae-919">The year.</span></span></param>
        <param name="month"><span data-ttu-id="46cae-920">月 (1 から 12 までの範囲の数)。</span><span class="sxs-lookup"><span data-stu-id="46cae-920">The month (a number ranging from 1 to 12).</span></span></param>
        <summary><span data-ttu-id="46cae-921">指定した月および年の日数を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-921">Returns the number of days in the specified month and year.</span></span></summary>
        <returns><span data-ttu-id="46cae-922">指定した <paramref name="year" /> の <paramref name="month" /> の日数。</span><span class="sxs-lookup"><span data-stu-id="46cae-922">The number of days in <paramref name="month" /> for the specified <paramref name="year" />.</span></span>  
  
<span data-ttu-id="46cae-923">たとえば、<paramref name="month" /> が 2 月を表す 2 に等しい場合、戻り値には、<paramref name="year" /> が閏年かどうかによって 28 または 29 を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-923">For example, if <paramref name="month" /> equals 2 for February, the return value is 28 or 29 depending upon whether <paramref name="year" /> is a leap year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-924">この<xref:System.DateTime.DaysInMonth%2A>メソッドは、 `month`グレゴリオ`year`暦が現在のカルチャの現在の暦でない場合でも、とは常にとを、グレゴリオ暦の月と年として解釈します。</span><span class="sxs-lookup"><span data-stu-id="46cae-924">The <xref:System.DateTime.DaysInMonth%2A> method always interprets `month` and `year` as the month and year of the Gregorian calendar even if the Gregorian calendar is not the current culture's current calendar.</span></span> <span data-ttu-id="46cae-925">特定の暦の指定した月の日数を取得するには、そのカレンダーの<xref:System.Globalization.Calendar.GetDaysInMonth%2A>メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-925">To get the number of days in a specified month of a particular calendar, call that calendar's <xref:System.Globalization.Calendar.GetDaysInMonth%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-926">次の例では、 <xref:System.DateTime.DaysInMonth%2A>メソッドを使用して、2001年7月、1998年2月 (うるう年以外)、および 1996 (閏年) の日数を確認する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-926">The following example demonstrates how to use the <xref:System.DateTime.DaysInMonth%2A> method to determine the number of days in July 2001, February 1998 (a non-leap year), and February 1996 (a leap year).</span></span>  
  
 [!code-cpp[DateTime.DaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.DaysInMonth/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.DaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.DaysInMonth/CS/class1.cs#1)]
 [!code-vb[DateTime.DaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.DaysInMonth/VB/class1.vb#1)]  
  
 <span data-ttu-id="46cae-927">次の例では、整数の配列で指定された年の各月の日数を表示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-927">The following example displays the number of days in each month of a year specified in an integer array.</span></span>  
  
 [!code-csharp[System.DateTime.DaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.daysinmonth/cs/daysinmonth3.cs#1)]
 [!code-vb[System.DateTime.DaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.daysinmonth/vb/daysinmonth3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-928"><paramref name="month" /> が 1 未満であるか、または 12 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-928"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="46cae-929">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-929">-or-</span></span> 
 <span data-ttu-id="46cae-930"><paramref name="year" /> が 1 未満であるか、または 9999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-930"><paramref name="year" /> is less than 1 or greater than 9999.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="46cae-931">2 つの <see cref="T:System.DateTime" /> オブジェクトの値が等しいかどうか、または、特定の <see cref="T:System.DateTime" /> インスタンスと別のオブジェクト (<see cref="T:System.DateTime" />) の値が等しいかどうかを表す値を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-931">Returns a value indicating whether two <see cref="T:System.DateTime" /> objects, or a <see cref="T:System.DateTime" /> instance and another object or <see cref="T:System.DateTime" />, have the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Equals(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(DateTime value);" />
      <MemberSignature Language="F#" Value="override this.Equals : DateTime -&gt; bool" Usage="dateTime.Equals value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="46cae-932">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-932">The object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="46cae-933">このインスタンスの値が、指定した <see cref="T:System.DateTime" /> インスタンスの値と等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-933">Returns a value indicating whether the value of this instance is equal to the value of the specified <see cref="T:System.DateTime" /> instance.</span></span></summary>
        <returns><span data-ttu-id="46cae-934"><paramref name="value" /> パラメーターがこのインスタンスの値と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46cae-934"><see langword="true" /> if the <paramref name="value" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-935">現在のインスタンスと`value`は、 <xref:System.DateTime.Ticks%2A>プロパティ値が等しい場合に等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-935">The current instance and `value` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal.</span></span> <span data-ttu-id="46cae-936">これら<xref:System.DateTime.Kind%2A>のプロパティ値は、等しいかどうかのテストでは考慮されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-936">Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.</span></span>  
  
 <span data-ttu-id="46cae-937">このメソッドは、 <xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイスを実装し、 `value`パラメーターをオブジェクト<xref:System.DateTime.Equals%2A>に変換する必要がないため、メソッドよりも若干優れています。</span><span class="sxs-lookup"><span data-stu-id="46cae-937">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than the <xref:System.DateTime.Equals%2A> method because the `value` parameter does not have to be converted to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-938">メソッドの<xref:System.DateTime.Equals%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-938">The following example demonstrates the <xref:System.DateTime.Equals%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.Equals-Instance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/cs/sample.cs#1)]
 [!code-vb[System.DateTime.Equals-Instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Equals(System.Object)" />
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dateTime.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="46cae-939">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-939">The object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="46cae-940">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-940">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="46cae-941"><paramref name="value" /> が <see cref="T:System.DateTime" /> のインスタンスで、このインスタンスの値に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46cae-941"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.DateTime" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-942">現在のインスタンスと`value`は、 <xref:System.DateTime.Ticks%2A>プロパティ値が等しい場合に等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-942">The current instance and `value` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal.</span></span> <span data-ttu-id="46cae-943">これら<xref:System.DateTime.Kind%2A>のプロパティ値は、等しいかどうかのテストでは考慮されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-943">Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-944">メソッドの<xref:System.DateTime.Equals%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-944">The following example demonstrates the <xref:System.DateTime.Equals%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.Equals-Instance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/cs/sample.cs#1)]
 [!code-vb[System.DateTime.Equals-Instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Equals(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member Equals : DateTime * DateTime -&gt; bool" Usage="System.DateTime.Equals (t1, t2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="46cae-945">比較する最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-945">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="46cae-946">比較する 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-946">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="46cae-947"><see cref="T:System.DateTime" /> の 2 つのインスタンスが同じ日付/時刻値を持っているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-947">Returns a value indicating whether two <see cref="T:System.DateTime" /> instances  have the same date and time value.</span></span></summary>
        <returns><span data-ttu-id="46cae-948">2 つの値が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46cae-948"><see langword="true" /> if the two values are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-949">`t1`と`t2`は、 <xref:System.DateTime.Ticks%2A>プロパティ値が等しい場合に等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-949">`t1` and `t2` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal.</span></span> <span data-ttu-id="46cae-950">これら<xref:System.DateTime.Kind%2A>のプロパティ値は、等しいかどうかのテストでは考慮されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-950">Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-951">メソッドの<xref:System.DateTime.Equals%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-951">The following example demonstrates the <xref:System.DateTime.Equals%2A> method.</span></span>  
  
 [!code-cpp[DateTime.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Equals/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Equals/CS/class1.cs#1)]
 [!code-vb[DateTime.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Equals/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FromBinary">
      <MemberSignature Language="C#" Value="public static DateTime FromBinary (long dateData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime FromBinary(int64 dateData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.FromBinary(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBinary (dateData As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FromBinary(long dateData);" />
      <MemberSignature Language="F#" Value="static member FromBinary : int64 -&gt; DateTime" Usage="System.DateTime.FromBinary dateData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateData" Type="System.Int64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateData"><span data-ttu-id="46cae-952">2 ビット フィールドの <see cref="P:System.DateTime.Kind" /> プロパティおよび 62 ビット フィールドの <see cref="P:System.DateTime.Ticks" /> プロパティをエンコードする 64 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="46cae-952">A 64-bit signed integer that encodes the <see cref="P:System.DateTime.Kind" /> property in a 2-bit field and the <see cref="P:System.DateTime.Ticks" /> property in a 62-bit field.</span></span></param>
        <summary><span data-ttu-id="46cae-953">64 ビットのバイナリ値を逆シリアル化し、元のシリアル化 <see cref="T:System.DateTime" /> オブジェクトを再構築します。</span><span class="sxs-lookup"><span data-stu-id="46cae-953">Deserializes a 64-bit binary value and recreates an original serialized <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="46cae-954"><see cref="T:System.DateTime" /> メソッドによってシリアル化された <see cref="M:System.DateTime.ToBinary" /> オブジェクトと等価なオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-954">An object that is equivalent to the <see cref="T:System.DateTime" /> object that was serialized by the <see cref="M:System.DateTime.ToBinary" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-955">メソッドを使用して、現在<xref:System.DateTime>のオブジェクトの値をバイナリ値に変換します。 <xref:System.DateTime.ToBinary%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-955">Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value.</span></span> <span data-ttu-id="46cae-956">その後、バイナリ値と<xref:System.DateTime.FromBinary%2A>メソッドを使用して、元<xref:System.DateTime>のオブジェクトを再作成します。</span><span class="sxs-lookup"><span data-stu-id="46cae-956">Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="46cae-957">場合<xref:System.DateTime>に<xref:System.DateTime> <xref:System.DateTime.ToBinary%2A>よっては、メソッドによって返される値が、メソッドに渡された元の値と一致していないことがあります。<xref:System.DateTime.FromBinary%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-957">In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method.</span></span> <span data-ttu-id="46cae-958">詳細については、次のセクション「ローカル時間の調整」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-958">For more information, see the next section, "Local Time Adjustment".</span></span>  
  
## <a name="local-time-adjustment"></a><span data-ttu-id="46cae-959">ローカル時間の調整</span><span class="sxs-lookup"><span data-stu-id="46cae-959">Local Time Adjustment</span></span>  
 <span data-ttu-id="46cae-960">現地時刻は、ローカルタイムゾーンに調整された世界協定時刻であり、プロパティの値<xref:System.DateTime> <xref:System.DateTimeKind.Local>がで<xref:System.DateTime.Kind%2A>ある構造体によって表されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-960">A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>.</span></span> <span data-ttu-id="46cae-961">メソッドによって<xref:System.DateTime>生成されたバイナリ表現からローカル値を復元する場合<xref:System.DateTime.FromBinary%2A> 、メソッドは、再作成された値が元の値と等しくならないように調整します。 <xref:System.DateTime.ToBinary%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-961">When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value.</span></span> <span data-ttu-id="46cae-962">これは、次のような条件で発生します。</span><span class="sxs-lookup"><span data-stu-id="46cae-962">This can occur under the following conditions:</span></span>  
  
-   <span data-ttu-id="46cae-963">ローカル<xref:System.DateTime>オブジェクトが<xref:System.DateTime.ToBinary%2A>メソッドによって1つのタイムゾーンでシリアル化され、 <xref:System.DateTime.FromBinary%2A>メソッドによって別のタイムゾーンで逆シリアル化された<xref:System.DateTime>場合、結果のオブジェクトによって表されるローカル時刻が自動的に調整されます。2番目のタイムゾーンにします。</span><span class="sxs-lookup"><span data-stu-id="46cae-963">If a local <xref:System.DateTime> object is serialized in one time zone by the <xref:System.DateTime.ToBinary%2A> method, and then deserialized in a different time zone by the <xref:System.DateTime.FromBinary%2A> method, the local time represented by the resulting <xref:System.DateTime> object is automatically adjusted to the second time zone.</span></span>  
  
     <span data-ttu-id="46cae-964">たとえば、午後3時<xref:System.DateTime>の現地時刻を表すオブジェクトについて考えてみます。</span><span class="sxs-lookup"><span data-stu-id="46cae-964">For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M.</span></span> <span data-ttu-id="46cae-965">米国で実行されているアプリケーション太平洋標準時ゾーンで<xref:System.DateTime.ToBinary%2A>は、メソッドを<xref:System.DateTime>使用して、そのオブジェクトをバイナリ値に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-965">An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value.</span></span> <span data-ttu-id="46cae-966">米国で実行されている別のアプリケーション次に、東部標準時は<xref:System.DateTime.FromBinary%2A>メソッドを使用して、バイナリ値を新しい<xref:System.DateTime>オブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-966">Another application that is executing in the U.S. Eastern Time zone then uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object.</span></span> <span data-ttu-id="46cae-967">新しい<xref:System.DateTime>オブジェクトの値は午後6時です。これは、元の午後3時と同じ時点を表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-967">The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M.</span></span> <span data-ttu-id="46cae-968">値は、東部標準時のタイムゾーンで現地時刻に調整されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-968">value, but is adjusted to local time in the Eastern Time zone.</span></span>  
  
-   <span data-ttu-id="46cae-969">ローカル<xref:System.DateTime>値のバイナリ表現<xref:System.DateTime.FromBinary%2A>が、が呼び出されたシステムのローカルタイムゾーンの無効な時刻を表している場合、その時刻は有効であるように調整されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-969">If the binary representation of a local <xref:System.DateTime> value represents an invalid time in the local time zone of the system on which <xref:System.DateTime.FromBinary%2A> is called, the time is adjusted so that it is valid.</span></span>  
  
     <span data-ttu-id="46cae-970">たとえば、標準時から夏時間への移行は、2:00 2010 年3月14日の米国の太平洋標準時のタイムゾーンで行われます。これは、時間が1時間経過したときに、午前3時3:00 になります。</span><span class="sxs-lookup"><span data-stu-id="46cae-970">For example, the transition from standard time to daylight saving time occurs in the Pacific Time zone of the United States on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="46cae-971">この時間間隔は、無効な時刻、つまり、このタイムゾーンに存在しない時間間隔です。</span><span class="sxs-lookup"><span data-stu-id="46cae-971">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="46cae-972">次の例は、この範囲内にある時間が<xref:System.DateTime.ToBinary%2A>メソッドによってバイナリ値に変換され、 <xref:System.DateTime.FromBinary%2A>メソッドによって復元されると、元の値が有効な時刻になるように調整されることを示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-972">The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="46cae-973">この例に示すように、特定の日付と時刻の値を<xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=nameWithType>メソッドに渡すことによって、変更される可能性があるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-973">You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=nameWithType> method, as the example illustrates.</span></span>  
  
     [!code-csharp[System.DateTime.FromBinary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)]
     [!code-vb[System.DateTime.FromBinary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)]  
  
## <a name="version-considerations"></a><span data-ttu-id="46cae-974">バージョンに関する考慮事項</span><span class="sxs-lookup"><span data-stu-id="46cae-974">Version Considerations</span></span>  
 <span data-ttu-id="46cae-975">.NET Framework バージョン2.0 以降では、構造<xref:System.DateTime>体は private Kind フィールドで構成されます。これは、指定した時刻が現地時刻、世界協定時刻 (UTC)、またはどちらでもない場合に、プライベートティックフィールドに連結されます。日付と時刻を指定する100ナノ秒刻みの数を格納します。</span><span class="sxs-lookup"><span data-stu-id="46cae-975">Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time is local time, Coordinated Universal Time (UTC), or neither, concatenated to a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time.</span></span> <span data-ttu-id="46cae-976">タイマー刻みの数には、 <xref:System.DateTime.Ticks%2A>プロパティを使用してアクセスできます。また、 <xref:System.DateTime.Kind%2A>プロパティを使用して、[種類] フィールドにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="46cae-976">The number of ticks can be accessed with the <xref:System.DateTime.Ticks%2A> property and theKind field can be accessed with the <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="46cae-977">.NET Framework 2.0 より前では、など<xref:System.DateTime> <xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>のシリアル化インターフェイスを使用せずに手動でオブジェクトをシリアル化した場合、の<xref:System.DateTime>ティックデータのみをシリアル化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-977">Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>, you needed to serialize only the Ticks data in the <xref:System.DateTime>.</span></span> <span data-ttu-id="46cae-978">.NET Framework 2.0 以降では、種類のデータもシリアル化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-978">Starting with the .NET Framework 2.0, you must also serialize the Kind data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46cae-979"><paramref name="dateData" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか <see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="46cae-979"><paramref name="dateData" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.ToBinary" />
      </Docs>
    </Member>
    <Member MemberName="FromFileTime">
      <MemberSignature Language="C#" Value="public static DateTime FromFileTime (long fileTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime FromFileTime(int64 fileTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.FromFileTime(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileTime (fileTime As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FromFileTime(long fileTime);" />
      <MemberSignature Language="F#" Value="static member FromFileTime : int64 -&gt; DateTime" Usage="System.DateTime.FromFileTime fileTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileTime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileTime"><span data-ttu-id="46cae-980">タイマー刻み単位で表した Windows ファイル時刻。</span><span class="sxs-lookup"><span data-stu-id="46cae-980">A Windows file time expressed in ticks.</span></span></param>
        <summary><span data-ttu-id="46cae-981">指定された Windows ファイル時刻を同等の現地時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-981">Converts the specified Windows file time to an equivalent local time.</span></span></summary>
        <returns><span data-ttu-id="46cae-982"><paramref name="fileTime" /> パラメーターによって表された日時に相当する現地時刻を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-982">An object that represents the local time equivalent of the date and time represented by the <paramref name="fileTime" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-983">Windows ファイル時刻は、64年1月 1601 1 日の午前0時から12:00 に経過した100ナノ秒間隔の数を表すビット値です。</span><span class="sxs-lookup"><span data-stu-id="46cae-983">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="46cae-984">西暦協定世界時 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="46cae-984">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="46cae-985">Windows では、ファイルの作成、アクセス、またはファイルへの書き込みを行うときに、ファイルの時刻が記録されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-985">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="46cae-986">パラメーター `fileTime`は、100ナノ秒単位で表されるファイル時刻を指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-986">The `fileTime` parameter specifies a file time expressed in 100-nanosecond ticks.</span></span>  
  
 <span data-ttu-id="46cae-987">.NET Framework バージョン2.0 以降の戻り値は、 <xref:System.DateTime> <xref:System.DateTime.Kind%2A>プロパティが<xref:System.DateTimeKind.Local?displayProperty=nameWithType>であるです。</span><span class="sxs-lookup"><span data-stu-id="46cae-987">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-988">メソッドの<xref:System.DateTime.FromFileTime%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-988">The following example demonstrates the <xref:System.DateTime.FromFileTime%2A> method.</span></span>  
  
 [!code-cpp[DateTime.FromFileTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.FromFileTime/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.FromFileTime/CS/class1.cs#1)]
 [!code-vb[DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.FromFileTime/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-989"><paramref name="fileTime" /> が 0 未満か、<see cref="F:System.DateTime.MaxValue" /> を超える時刻を表しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-989"><paramref name="fileTime" /> is less than 0 or represents a time greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="46cae-990">通常、メソッド<see cref="M:System.DateTime.FromFileTime(System.Int64)" />は、 <see cref="M:System.DateTime.ToFileTime" />メソッド<see cref="T:System.DateTime" />によって保存された値を復元します。</span><span class="sxs-lookup"><span data-stu-id="46cae-990">Ordinarily, the <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> method restores a <see cref="T:System.DateTime" /> value that was saved by the <see cref="M:System.DateTime.ToFileTime" /> method.</span></span> <span data-ttu-id="46cae-991">ただし、次のような状況では、2つの値が異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-991">However, the two values may differ under the following conditions:</span></span> 
<span data-ttu-id="46cae-992">- <see cref="T:System.DateTime" />値のシリアル化と逆シリアル化が異なるタイムゾーンで発生する場合。</span><span class="sxs-lookup"><span data-stu-id="46cae-992">-   If the serialization and deserialization of the <see cref="T:System.DateTime" /> value occur in different time zones.</span></span> <span data-ttu-id="46cae-993">たとえば、午後12:30 の<see cref="T:System.DateTime" />時刻の値の場合、</span><span class="sxs-lookup"><span data-stu-id="46cae-993">For example, if a <see cref="T:System.DateTime" /> value with a time of 12:30 P.M.</span></span> <span data-ttu-id="46cae-994">米国米国では、東部標準時のタイムゾーンがシリアル化され、逆シリアル化されます。太平洋標準時ゾーン (元の値は午後 12:30)</span><span class="sxs-lookup"><span data-stu-id="46cae-994">in the U.S. Eastern Time zone is serialized, and then deserialized in the U.S. Pacific Time zone, the original value of 12:30 P.M.</span></span> <span data-ttu-id="46cae-995">は午前9:30 に調整されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-995">is adjusted to 9:30 A.M.</span></span> <span data-ttu-id="46cae-996">2つのタイムゾーンの違いを反映する場合は。</span><span class="sxs-lookup"><span data-stu-id="46cae-996">to reflect the difference between the two time zones.</span></span>  
  
<span data-ttu-id="46cae-997">-シリアル化<see cref="T:System.DateTime" />された値がローカルタイムゾーンの無効な時刻を表している場合。</span><span class="sxs-lookup"><span data-stu-id="46cae-997">-   If the <see cref="T:System.DateTime" /> value that is serialized represents an invalid time in the local time zone.</span></span> <span data-ttu-id="46cae-998">この場合、メソッドは<see cref="M:System.DateTime.ToFileTime" /> 、ローカルタイムゾーン<see cref="T:System.DateTime" />の有効な時刻を表すように、復元された値を調整します。</span><span class="sxs-lookup"><span data-stu-id="46cae-998">In this case, the <see cref="M:System.DateTime.ToFileTime" /> method adjusts the restored <see cref="T:System.DateTime" /> value so that it represents a valid time in the local time zone.</span></span>  
  
<span data-ttu-id="46cae-999">たとえば、標準時間から夏時間への移行は、米国の2:00 2010 年3月14日の太平洋標準時ゾーン (午前15時)、時間が1時間経過したとき、午前3時3:00</span><span class="sxs-lookup"><span data-stu-id="46cae-999">For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="46cae-1000">この時間間隔は、無効な時刻、つまり、このタイムゾーンに存在しない時間間隔です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1000">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="46cae-1001">次の例は、この範囲内にある時間が<see cref="M:System.DateTime.ToFileTime" />メソッドによって長整数値に変換され、 <see cref="M:System.DateTime.FromFileTime(System.Int64)" />メソッドによって復元されると、元の値が有効な時刻になるように調整されることを示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1001">The following example shows that when a time that falls within this range is converted to a long integer value by the <see cref="M:System.DateTime.ToFileTime" /> method and is then restored by the <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="46cae-1002">この例に示すように、特定の日付と時刻の値を<see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />メソッドに渡すことによって、変更される可能性があるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1002">You can determine whether a particular date and time value may be subject to modification by passing it to the <see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" /> method, as the example illustrates.</span></span>  
  
<span data-ttu-id="46cae-1003">[!code-csharp[System.DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.fromfiletime/cs/fromfiletime1.cs#1)] [!code-vb[System.DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.fromfiletime/vb/fromfiletime1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="46cae-1003">[!code-csharp[System.DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.fromfiletime/cs/fromfiletime1.cs#1)] [!code-vb[System.DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.fromfiletime/vb/fromfiletime1.vb#1)]</span></span></para></block>
        <altmember cref="M:System.DateTime.ToUniversalTime" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="FromFileTimeUtc">
      <MemberSignature Language="C#" Value="public static DateTime FromFileTimeUtc (long fileTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime FromFileTimeUtc(int64 fileTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.FromFileTimeUtc(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileTimeUtc (fileTime As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FromFileTimeUtc(long fileTime);" />
      <MemberSignature Language="F#" Value="static member FromFileTimeUtc : int64 -&gt; DateTime" Usage="System.DateTime.FromFileTimeUtc fileTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileTime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileTime"><span data-ttu-id="46cae-1004">タイマー刻み単位で表した Windows ファイル時刻。</span><span class="sxs-lookup"><span data-stu-id="46cae-1004">A Windows file time expressed in ticks.</span></span></param>
        <summary><span data-ttu-id="46cae-1005">指定された Windows ファイル時刻を同等の UTC 時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1005">Converts the specified Windows file time to an equivalent UTC time.</span></span></summary>
        <returns><span data-ttu-id="46cae-1006"><paramref name="fileTime" /> パラメーターによって表された日時に相当する UTC 時刻を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1006">An object that represents the UTC time equivalent of the date and time represented by the <paramref name="fileTime" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1007">Windows ファイル時刻は、64年1月 1601 1 日の午前0時から12:00 に経過した100ナノ秒間隔の数を表すビット値です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1007">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="46cae-1008">西暦協定世界時 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="46cae-1008">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="46cae-1009">Windows では、ファイルの作成、アクセス、またはファイルへの書き込みを行うときに、ファイルの時刻が記録されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1009">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="46cae-1010">パラメーター `fileTime`は、100ナノ秒単位で表されるファイル時刻を指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1010">The `fileTime` parameter specifies a file time expressed in 100-nanosecond ticks.</span></span>  
  
 <span data-ttu-id="46cae-1011">.NET Framework バージョン2.0 以降の戻り値は、 <xref:System.DateTime> <xref:System.DateTime.Kind%2A>プロパティが<xref:System.DateTimeKind.Utc>であるです。</span><span class="sxs-lookup"><span data-stu-id="46cae-1011">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-1012"><paramref name="fileTime" /> が 0 未満か、<see cref="F:System.DateTime.MaxValue" /> を超える時刻を表しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1012"><paramref name="fileTime" /> is less than 0 or represents a time greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.ToUniversalTime" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
        <altmember cref="M:System.DateTime.FromFileTime(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FromOADate">
      <MemberSignature Language="C#" Value="public static DateTime FromOADate (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime FromOADate(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.FromOADate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromOADate (d As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FromOADate(double d);" />
      <MemberSignature Language="F#" Value="static member FromOADate : double -&gt; DateTime" Usage="System.DateTime.FromOADate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="46cae-1013">OLE オートメーション日付値。</span><span class="sxs-lookup"><span data-stu-id="46cae-1013">An OLE Automation Date value.</span></span></param>
        <summary><span data-ttu-id="46cae-1014">指定した OLE オートメーション日付と等しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1014">Returns a <see cref="T:System.DateTime" /> equivalent to the specified OLE Automation Date.</span></span></summary>
        <returns><span data-ttu-id="46cae-1015"><paramref name="d" /> と同じ日付と時刻を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1015">An object that represents the same date and time as <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1016">`d`パラメーターは、日付を基準日の前または後の日数として表す倍精度浮動小数点数で、1899年12月30日の午前0時を表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1016">The `d` parameter is a double-precision floating-point number that represents a date as the number of days before or after the base date, midnight, 30 December 1899.</span></span> <span data-ttu-id="46cae-1017">の`d`符号と整数部分は、1899年12月30日からの正または負の日のオフセットとして日付をエンコードし`d`ます。また、の小数部の絶対値は、午前0時からの時間を1日の割合でエンコードします。</span><span class="sxs-lookup"><span data-stu-id="46cae-1017">The sign and integral part of `d` encode the date as a positive or negative day displacement from 30 December 1899, and the absolute value of the fractional part of `d` encodes the time of day as a fraction of a day displacement from midnight.</span></span> <span data-ttu-id="46cae-1018">`d`負の 657435.0 ~ 正の2958465.99999999 の間の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1018">`d` must be a value between negative 657435.0 through positive 2958465.99999999.</span></span>  
  
 <span data-ttu-id="46cae-1019">日付のエンコード方法によっては、1899年12月30日の時刻を表す2つの方法があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1019">Note that because of the way dates are encoded, there are two ways of representing any time of day on 30 December 1899.</span></span> <span data-ttu-id="46cae-1020">たとえば、-0.5 と0.5 はどちらも、12 1899 月30日の正午を意味します。これは、底の日付から0日を加算するか、負の値を引いた値がまだ基本データであり、午前0時からの半期が正午であるためです。</span><span class="sxs-lookup"><span data-stu-id="46cae-1020">For example, -0.5 and 0.5 both mean noon on 30 December 1899 because a day displacement of plus or minus zero days from the base date is still the base date, and a half day displacement from midnight is noon.</span></span>  
  
 <span data-ttu-id="46cae-1021">OLE <xref:System.DateTime.ToOADate%2A>オートメーションの詳細については、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1021">See <xref:System.DateTime.ToOADate%2A> for more information on OLE Automation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46cae-1022">日付が有効な OLE オートメーション日付の値ではありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1022">The date is not a valid OLE Automation Date value.</span></span></exception>
        <altmember cref="M:System.DateTime.ToOADate" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDateTimeFormats">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="46cae-1023">このインスタンスの値を、標準の日時形式指定子によってサポートされるすべての文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1023">Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="46cae-1024">オーバーロードへの<xref:System.DateTime.GetDateTimeFormats%2A>複数の呼び出しで同一のデータが返されると想定しないでください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1024">You should not assume that multiple calls to the <xref:System.DateTime.GetDateTimeFormats%2A> overloads will return identical data.</span></span> <span data-ttu-id="46cae-1025">特定のオーバーロードに応じて、このメソッドによって返されるデータは、現在のカルチャが変更された場合、ユーザーが個々のカルチャ設定をオーバーライドした場合、または更新がシステムのカルチャデータに対して行われた場合に変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1025">Depending on the specific overload, the data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="46cae-1026">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1026">Standard Date and Time Format Strings</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDateTimeFormats">
      <MemberSignature Language="C#" Value="public string[] GetDateTimeFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDateTimeFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetDateTimeFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDateTimeFormats();" />
      <MemberSignature Language="F#" Value="member this.GetDateTimeFormats : unit -&gt; string[]" Usage="dateTime.GetDateTimeFormats " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46cae-1027">このインスタンスの値を、標準の日時形式指定子によってサポートされるすべての文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1027">Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.</span></span></summary>
        <returns><span data-ttu-id="46cae-1028">要素を格納した文字列配列。要素は、標準日時形式指定子のいずれかで書式指定されたインスタンスの値を表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1028">A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1029"><xref:System.DateTime.GetDateTimeFormats?displayProperty=nameWithType>メソッドによって返される文字列配列は、メソッドへの<xref:System.DateTime.GetDateTimeFormats%28System.Char%29?displayProperty=nameWithType>個別の呼び出しによって返される文字列配列を "d"、"d"、"f"、"f"、"g"、"g"、"m"、"o"、"r"、"s"、"t"、"t"、"u"、"u"、および "y" の標準書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1029">The string array returned by the <xref:System.DateTime.GetDateTimeFormats?displayProperty=nameWithType> method is equivalent to combining the string arrays returned by separate calls to the <xref:System.DateTime.GetDateTimeFormats%28System.Char%29?displayProperty=nameWithType> method with the "d", "D", "f", "F", "g", "G", "m", "o", "r", "s", "t", "T", "u", "U", and "y" standard format strings.</span></span> <span data-ttu-id="46cae-1030">標準書式指定子の詳細については、「[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1030">For more information about standard format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="46cae-1031">戻り値の各要素は、現在のカルチャの情報を使用して書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1031">Each element of the return value is formatted using information from the current culture.</span></span> <span data-ttu-id="46cae-1032">現在のカルチャのカルチャ固有の書式設定情報の詳細について<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>は、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1032">For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="46cae-1033">このメソッドはカルチャに依存するデータを使用するため、メソッドを複数回呼び出すと、同一のデータが返されると想定しないでください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1033">Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data.</span></span> <span data-ttu-id="46cae-1034">このメソッドによって返されるデータは、現在のカルチャが変更された場合、ユーザーが個々のカルチャ設定をオーバーライドした場合、または更新がシステムのカルチャデータに対して行われた場合に変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1034">The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1035">メソッドの<xref:System.DateTime.GetDateTimeFormats?displayProperty=nameWithType>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1035">The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="46cae-1036">この例では、コンピューターの現在のカルチャで使用可能なすべての標準の日付/時刻書式を使用して、日付の文字列形式を表示します (この場合は en-us)。</span><span class="sxs-lookup"><span data-stu-id="46cae-1036">It displays the string representation of a date using all possible standard date and time formats in the computer's current culture, which in this case is en-US.</span></span>  
  
 [!code-cpp[DateTime.GetDateTimeFormats#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.GetDateTimeFormats#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#1)]
 [!code-vb[DateTime.GetDateTimeFormats#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#1)]  
  
 <span data-ttu-id="46cae-1037">この例では、次の出力が表示されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1037">The example displays the following output:</span></span>  
  
```  
7/28/2009  
7/28/09  
07/28/09  
07/28/2009  
09/07/28  
2009-07-28  
28-Jul-09  
Tuesday, July 28, 2009  
July 28, 2009  
Tuesday, 28 July, 2009  
28 July, 2009  
Tuesday, July 28, 2009 5:23 AM  
Tuesday, July 28, 2009 05:23 AM  
Tuesday, July 28, 2009 5:23  
Tuesday, July 28, 2009 05:23  
July 28, 2009 5:23 AM  
July 28, 2009 05:23 AM  
July 28, 2009 5:23  
July 28, 2009 05:23  
Tuesday, 28 July, 2009 5:23 AM  
Tuesday, 28 July, 2009 05:23 AM  
Tuesday, 28 July, 2009 5:23  
Tuesday, 28 July, 2009 05:23  
28 July, 2009 5:23 AM  
28 July, 2009 05:23 AM  
28 July, 2009 5:23  
28 July, 2009 05:23  
Tuesday, July 28, 2009 5:23:15 AM  
Tuesday, July 28, 2009 05:23:15 AM  
Tuesday, July 28, 2009 5:23:15  
Tuesday, July 28, 2009 05:23:15  
July 28, 2009 5:23:15 AM  
July 28, 2009 05:23:15 AM  
July 28, 2009 5:23:15  
July 28, 2009 05:23:15  
Tuesday, 28 July, 2009 5:23:15 AM  
Tuesday, 28 July, 2009 05:23:15 AM  
Tuesday, 28 July, 2009 5:23:15  
Tuesday, 28 July, 2009 05:23:15  
28 July, 2009 5:23:15 AM  
28 July, 2009 05:23:15 AM  
28 July, 2009 5:23:15  
28 July, 2009 05:23:15  
7/28/2009 5:23 AM  
7/28/2009 05:23 AM  
7/28/2009 5:23  
7/28/2009 05:23  
7/28/09 5:23 AM  
7/28/09 05:23 AM  
7/28/09 5:23  
7/28/09 05:23  
07/28/09 5:23 AM  
07/28/09 05:23 AM  
07/28/09 5:23  
07/28/09 05:23  
07/28/2009 5:23 AM  
07/28/2009 05:23 AM  
07/28/2009 5:23  
07/28/2009 05:23  
09/07/28 5:23 AM  
09/07/28 05:23 AM  
09/07/28 5:23  
09/07/28 05:23  
2009-07-28 5:23 AM  
2009-07-28 05:23 AM  
2009-07-28 5:23  
2009-07-28 05:23  
28-Jul-09 5:23 AM  
28-Jul-09 05:23 AM  
28-Jul-09 5:23  
28-Jul-09 05:23  
7/28/2009 5:23:15 AM  
7/28/2009 05:23:15 AM  
7/28/2009 5:23:15  
7/28/2009 05:23:15  
7/28/09 5:23:15 AM  
7/28/09 05:23:15 AM  
7/28/09 5:23:15  
7/28/09 05:23:15  
07/28/09 5:23:15 AM  
07/28/09 05:23:15 AM  
07/28/09 5:23:15  
07/28/09 05:23:15  
07/28/2009 5:23:15 AM  
07/28/2009 05:23:15 AM  
07/28/2009 5:23:15  
07/28/2009 05:23:15  
09/07/28 5:23:15 AM  
09/07/28 05:23:15 AM  
09/07/28 5:23:15  
09/07/28 05:23:15  
2009-07-28 5:23:15 AM  
2009-07-28 05:23:15 AM  
2009-07-28 5:23:15  
2009-07-28 05:23:15  
28-Jul-09 5:23:15 AM  
28-Jul-09 05:23:15 AM  
28-Jul-09 5:23:15  
28-Jul-09 05:23:15  
July 28  
July 28  
2009-07-28T05:23:15.0160000  
2009-07-28T05:23:15.0160000  
Tue, 28 Jul 2009 05:23:15 GMT  
Tue, 28 Jul 2009 05:23:15 GMT  
2009-07-28T05:23:15  
5:23 AM  
05:23 AM  
5:23  
05:23  
5:23:15 AM  
05:23:15 AM  
5:23:15  
05:23:15  
2009-07-28 05:23:15Z  
Tuesday, July 28, 2009 12:23:15 PM  
Tuesday, July 28, 2009 12:23:15 PM  
Tuesday, July 28, 2009 12:23:15  
Tuesday, July 28, 2009 12:23:15  
July 28, 2009 12:23:15 PM  
July 28, 2009 12:23:15 PM  
July 28, 2009 12:23:15  
July 28, 2009 12:23:15  
Tuesday, 28 July, 2009 12:23:15 PM  
Tuesday, 28 July, 2009 12:23:15 PM  
Tuesday, 28 July, 2009 12:23:15  
Tuesday, 28 July, 2009 12:23:15  
28 July, 2009 12:23:15 PM  
28 July, 2009 12:23:15 PM  
28 July, 2009 12:23:15  
28 July, 2009 12:23:15  
July, 2009  
July, 2009  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="46cae-1038">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1038">Standard Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeFormats">
      <MemberSignature Language="C#" Value="public string[] GetDateTimeFormats (char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDateTimeFormats(char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetDateTimeFormats(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeFormats (format As Char) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDateTimeFormats(char format);" />
      <MemberSignature Language="F#" Value="member this.GetDateTimeFormats : char -&gt; string[]" Usage="dateTime.GetDateTimeFormats format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="46cae-1039">標準の日時書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1039">A standard date and time format string.</span></span></param>
        <summary><span data-ttu-id="46cae-1040">このインスタンスの値を、指定した標準の日時形式指定子によってサポートされるすべての文字列表記に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1040">Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier.</span></span></summary>
        <returns><span data-ttu-id="46cae-1041">各要素が <paramref name="format" /> 標準日時形式指定子で書式指定されたこのインスタンスの値を表す文字列配列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1041">A string array where each element is the representation of the value of this instance formatted with the <paramref name="format" /> standard date and time format specifier.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1042">パラメーター `format`には、標準の日時書式指定子を指定できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1042">The `format` parameter can be any of the standard date and time format specifiers.</span></span> <span data-ttu-id="46cae-1043">これには、d、D、f、F、g、G、M (または m)、O (または o)、R (または r)、s、t、T、u、U、Y (または y) が含まれます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1043">These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y).</span></span> <span data-ttu-id="46cae-1044">詳細については、「[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1044">For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="46cae-1045">戻り値の各要素は、現在のカルチャの情報を使用して書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1045">Each element of the return value is formatted using information from the current culture.</span></span> <span data-ttu-id="46cae-1046">現在のカルチャのカルチャ固有の書式設定情報の詳細について<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>は、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1046">For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="46cae-1047">このメソッドはカルチャに依存するデータを使用するため、メソッドを複数回呼び出すと、同一のデータが返されると想定しないでください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1047">Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data.</span></span> <span data-ttu-id="46cae-1048">このメソッドによって返されるデータは、現在のカルチャが変更された場合、ユーザーが個々のカルチャ設定をオーバーライドした場合、または更新がシステムのカルチャデータに対して行われた場合に変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1048">The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1049">メソッドの<xref:System.DateTime.GetDateTimeFormats%28System.Char%29>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1049">The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.Char%29> method.</span></span> <span data-ttu-id="46cae-1050">現在のカルチャの長い日付形式指定子 ("D") を使用して、日付の文字列形式を表示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1050">It displays the string representation of a date using the long date format specifier ("D") for the current culture.</span></span>  
  
 [!code-csharp[DateTime.GetDateTimeFormats#3](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#3)]
 [!code-vb[DateTime.GetDateTimeFormats#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="46cae-1051"><paramref name="format" /> は有効な標準日時形式指定子の文字ではありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1051"><paramref name="format" /> is not a valid standard date and time format specifier character.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="46cae-1052">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1052">Standard Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeFormats">
      <MemberSignature Language="C#" Value="public string[] GetDateTimeFormats (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDateTimeFormats(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetDateTimeFormats(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeFormats (provider As IFormatProvider) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDateTimeFormats(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="member this.GetDateTimeFormats : IFormatProvider -&gt; string[]" Usage="dateTime.GetDateTimeFormats provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46cae-1053">このインスタンスに関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1053">An object that supplies culture-specific formatting information about this instance.</span></span></param>
        <summary><span data-ttu-id="46cae-1054">このインスタンスの値を、標準日時形式指定子および指定したカルチャ固有の書式情報によってサポートされる、すべての文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1054">Converts the value of this instance to all the string representations supported by the standard date and time format specifiers and the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="46cae-1055">要素を格納した文字列配列。要素は、標準日時形式指定子のいずれかで書式指定されたインスタンスの値を表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1055">A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1056"><xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=nameWithType>メソッドによって返される文字列配列は、メソッドへの<xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29?displayProperty=nameWithType>個別の呼び出しによって返される文字列配列を "d"、"d"、"f"、"f"、"g"、"g"、"m"、"o"、"r"、"s"、"t"、"t"、"u"、"u"、および "y" の標準書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1056">The string array returned by the <xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=nameWithType> method is equivalent to combining the string arrays returned by separate calls to the <xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method with the "d", "D", "f", "F", "g", "G", "m", "o", "r", "s", "t", "T", "u", "U", and "y" standard format strings.</span></span> <span data-ttu-id="46cae-1057">標準書式指定子の詳細については、「[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1057">For more information about standard format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="46cae-1058">戻り値の各要素は、によって`provider`提供されるカルチャ固有の情報を使用して書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1058">Each element of the return value is formatted using culture-specific information supplied by `provider`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="46cae-1059">このメソッドはカルチャに依存するデータを使用するため、がインバリアントカルチャを表すオブジェクトで`provider` <xref:System.Globalization.CultureInfo>ない限り、メソッドの複数の呼び出しで同一のデータが返されると想定しないでください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1059">Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture.</span></span> <span data-ttu-id="46cae-1060">このメソッドによって返されるデータは、ユーザーがの`provider`個々のカルチャ設定をオーバーライドした場合、またはの`provider`システムのカルチャデータに更新が発生した場合に変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1060">The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1061">メソッドの<xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=nameWithType>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1061">The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="46cae-1062">このメソッドは、fr-fr カルチャに対して可能なすべての標準日時形式を使用して、日付の文字列形式を表示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1062">It displays the string representation of a date using all possible standard date and time formats for the fr-FR culture.</span></span>  
  
 [!code-cpp[DateTime.GetDateTimeFormats#2](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CPP/class1.cpp#2)]
 [!code-csharp[DateTime.GetDateTimeFormats#2](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#2)]
 [!code-vb[DateTime.GetDateTimeFormats#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#2)]  
  
 <span data-ttu-id="46cae-1063">この例では、次の出力が表示されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1063">The example displays the following output:</span></span>  
  
```  
28/07/2009  
28/07/09  
28.07.09  
28-07-09  
2009-07-28  
mardi 28 juillet 2009  
28 juil. 09  
28 juillet 2009  
mardi 28 juillet 2009 05:23  
mardi 28 juillet 2009 5:23  
mardi 28 juillet 2009 05.23  
mardi 28 juillet 2009 05 h 23  
28 juil. 09 05:23  
28 juil. 09 5:23  
28 juil. 09 05.23  
28 juil. 09 05 h 23  
28 juillet 2009 05:23  
28 juillet 2009 5:23  
28 juillet 2009 05.23  
28 juillet 2009 05 h 23  
mardi 28 juillet 2009 05:23:15  
mardi 28 juillet 2009 5:23:15  
mardi 28 juillet 2009 05.23  
mardi 28 juillet 2009 05 h 23  
28 juil. 09 05:23:15  
28 juil. 09 5:23:15  
28 juil. 09 05.23  
28 juil. 09 05 h 23  
28 juillet 2009 05:23:15  
28 juillet 2009 5:23:15  
28 juillet 2009 05.23  
28 juillet 2009 05 h 23  
28/07/2009 05:23  
28/07/2009 5:23  
28/07/2009 05.23  
28/07/2009 05 h 23  
28/07/09 05:23  
28/07/09 5:23  
28/07/09 05.23  
28/07/09 05 h 23  
28.07.09 05:23  
28.07.09 5:23  
28.07.09 05.23  
28.07.09 05 h 23  
28-07-09 05:23  
28-07-09 5:23  
28-07-09 05.23  
28-07-09 05 h 23  
2009-07-28 05:23  
2009-07-28 5:23  
2009-07-28 05.23  
2009-07-28 05 h 23  
28/07/2009 05:23:15  
28/07/2009 5:23:15  
28/07/2009 05.23  
28/07/2009 05 h 23  
28/07/09 05:23:15  
28/07/09 5:23:15  
28/07/09 05.23  
28/07/09 05 h 23  
28.07.09 05:23:15  
28.07.09 5:23:15  
28.07.09 05.23  
28.07.09 05 h 23  
28-07-09 05:23:15  
28-07-09 5:23:15  
28-07-09 05.23  
28-07-09 05 h 23  
2009-07-28 05:23:15  
2009-07-28 5:23:15  
2009-07-28 05.23  
2009-07-28 05 h 23  
28 juillet  
28 juillet  
2009-07-28T05:23:15.0160000  
2009-07-28T05:23:15.0160000  
Tue, 28 Jul 2009 05:23:15 GMT  
Tue, 28 Jul 2009 05:23:15 GMT  
2009-07-28T05:23:15  
05:23  
5:23  
05.23  
05 h 23  
05:23:15  
5:23:15  
05.23  
05 h 23  
2009-07-28 05:23:15Z  
mardi 28 juillet 2009 12:23:15  
mardi 28 juillet 2009 12:23:15  
mardi 28 juillet 2009 12.23  
mardi 28 juillet 2009 12 h 23  
28 juil. 09 12:23:15  
28 juil. 09 12:23:15  
28 juil. 09 12.23  
28 juil. 09 12 h 23  
28 juillet 2009 12:23:15  
28 juillet 2009 12:23:15  
28 juillet 2009 12.23  
28 juillet 2009 12 h 23  
juillet 2009  
juillet 2009  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="46cae-1064">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1064">Standard Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeFormats">
      <MemberSignature Language="C#" Value="public string[] GetDateTimeFormats (char format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDateTimeFormats(char format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeFormats (format As Char, provider As IFormatProvider) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDateTimeFormats(char format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="member this.GetDateTimeFormats : char * IFormatProvider -&gt; string[]" Usage="dateTime.GetDateTimeFormats (format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="46cae-1065">日時書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1065">A date and time format string.</span></span></param>
        <param name="provider"><span data-ttu-id="46cae-1066">このインスタンスに関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1066">An object that supplies culture-specific formatting information about this instance.</span></span></param>
        <summary><span data-ttu-id="46cae-1067">このインスタンスの値を、指定した標準日時形式指定子およびカルチャ固有の書式情報によってサポートされる、すべての文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1067">Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier and culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="46cae-1068">要素を格納した文字列配列。要素は、標準日時形式指定子のいずれかで書式指定されたインスタンスの値を表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1068">A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1069">Format パラメーターには、標準の日時書式指定子を指定できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1069">The format parameter can be any of the standard date and time format specifiers.</span></span> <span data-ttu-id="46cae-1070">これには、d、D、f、F、g、G、M (または m)、O (または o)、R (または r)、s、t、T、u、U、Y (または y) が含まれます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1070">These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y).</span></span> <span data-ttu-id="46cae-1071">詳細については、「[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1071">For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="46cae-1072">戻り値の各要素は、によって`provider`提供されるカルチャ固有の情報を使用して書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1072">Each element of the return value is formatted using culture-specific information supplied by `provider`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="46cae-1073">このメソッドはカルチャに依存するデータを使用するため、がインバリアントカルチャを表すオブジェクトで`provider` <xref:System.Globalization.CultureInfo>ない限り、メソッドの複数の呼び出しで同一のデータが返されると想定しないでください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1073">Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture.</span></span> <span data-ttu-id="46cae-1074">このメソッドによって返されるデータは、ユーザーがの`provider`個々のカルチャ設定をオーバーライドした場合、またはの`provider`システムのカルチャデータに更新が発生した場合に変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1074">The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1075">メソッドの<xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1075">The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="46cae-1076">このメソッドは、fr-fr カルチャの短い日付書式指定子 ("d") を使用して、日付の文字列形式を表示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1076">It displays the string representations of a date using the short date format specifier ("d") for the fr-FR culture.</span></span>  
  
 [!code-csharp[DateTime.GetDateTimeFormats#4](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#4)]
 [!code-vb[DateTime.GetDateTimeFormats#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="46cae-1077"><paramref name="format" /> は有効な標準日時形式指定子の文字ではありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1077"><paramref name="format" /> is not a valid standard date and time format specifier character.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="46cae-1078">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1078">Standard Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dateTime.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46cae-1079">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1079">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="46cae-1080">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="46cae-1080">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TypeCode GetTypeCode() cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCode GetTypeCode();" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="F#" Value="member this.GetTypeCode : unit -&gt; TypeCode" Usage="dateTime.GetTypeCode " FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="dateTime.GetTypeCode " FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46cae-1081"><see cref="T:System.TypeCode" /> 値型の <see cref="T:System.DateTime" />を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1081">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="46cae-1082">列挙型定数 <see cref="F:System.TypeCode.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="46cae-1082">The enumerated constant, <see cref="F:System.TypeCode.DateTime" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public int Hour { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hour" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Hour" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hour As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hour { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Hour : int" Usage="System.DateTime.Hour" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="46cae-1083">このインスタンスで表される日付の時間の部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1083">Gets the hour component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="46cae-1084">DateTime の時間部分 (0 ～ 23)。</span><span class="sxs-lookup"><span data-stu-id="46cae-1084">The hour component, expressed as a value between 0 and 23.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1085"><xref:System.DateTime.Hour%2A>プロパティの値は、常に24時間制を使用して表されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1085">The value of the <xref:System.DateTime.Hour%2A> property is always expressed using a 24-hour clock.</span></span> <span data-ttu-id="46cae-1086">12時間制を使用して日時の時刻を表す文字列を取得するに<xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>は、"h" カスタム書式指定子を使用してメソッドまたは<xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1086">To retrieve a string that represents the hour of a date and time using a 12-hour clock, call the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> or <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method with the "h" custom format specifier.</span></span> <span data-ttu-id="46cae-1087">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1087">For example:</span></span>  
  
 [!code-csharp[System.DateTime.Hour#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Hour/cs/Hour1.cs#1)]
 [!code-vb[System.DateTime.Hour#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Hour/vb/Hour1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1088">プロパティの<xref:System.DateTime.Hour%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1088">The following example demonstrates the <xref:System.DateTime.Hour%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public bool IsDaylightSavingTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDaylightSavingTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.IsDaylightSavingTime" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDaylightSavingTime () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDaylightSavingTime();" />
      <MemberSignature Language="F#" Value="member this.IsDaylightSavingTime : unit -&gt; bool" Usage="dateTime.IsDaylightSavingTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46cae-1089"><see cref="T:System.DateTime" /> のインスタンスが、現在のタイム ゾーンの夏時間の期間内であるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1089">Indicates whether this instance of <see cref="T:System.DateTime" /> is within the daylight saving time range for the current time zone.</span></span></summary>
        <returns><span data-ttu-id="46cae-1090"><see langword="true" /> プロパティの値が <see cref="P:System.DateTime.Kind" /> または <see cref="F:System.DateTimeKind.Local" /> で、この <see cref="F:System.DateTimeKind.Unspecified" /> インスタンスの値がローカル タイム ゾーンの夏時間の期間内にある場合は <see cref="T:System.DateTime" />。<see langword="false" /> が <see cref="P:System.DateTime.Kind" /> の場合は <see cref="F:System.DateTimeKind.Utc" />。</span><span class="sxs-lookup"><span data-stu-id="46cae-1090"><see langword="true" /> if the value of the <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Local" /> or <see cref="F:System.DateTimeKind.Unspecified" /> and the value of this instance of <see cref="T:System.DateTime" /> is within the daylight saving time range for the local time zone; <see langword="false" /> if <see cref="P:System.DateTime.Kind" /> is <see cref="F:System.DateTimeKind.Utc" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1091">このメソッドは、現在<xref:System.DateTime>の値が、 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>プロパティによって返されるローカルタイムゾーンの夏時間の範囲内に収まるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1091">This method determines whether the current <xref:System.DateTime> value falls within the daylight saving time range of the local time zone, which is returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="46cae-1092">タイムゾーンが<xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A?displayProperty=nameWithType>プロパティの値を取得することによって夏時間をサポートするかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1092">You can determine whether a time zone supports daylight saving time by retrieving the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="46cae-1093">夏時間を観察するタイムゾーンの場合は、タイムゾーンの<xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType> <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=nameWithType>プロパティによって返される配列を取得することによって、夏時間との間の切り替えが発生するタイミングを判断できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1093">For time zones that observe daylight saving time, you can determine when the transition to and from daylight saving time occurs by retrieving the <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType> array returned by the time zone's <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="46cae-1094">現在<xref:System.DateTime>の値がローカルタイムゾーンのあいまいな時刻または無効な時刻を表している場合`false`、メソッドはを返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1094">If the current <xref:System.DateTime> value represents either an ambiguous or an invalid time in the local time zone, the method returns `false`.</span></span>  
  
 <span data-ttu-id="46cae-1095">システム[!INCLUDE[winxp](~/includes/winxp-md.md)]では、 <xref:System.DateTime.IsDaylightSavingTime%2A>メソッドは現在のインスタンスが夏時間であるかどうかを判断するときに現在の調整規則のみを認識します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1095">On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.IsDaylightSavingTime%2A> method recognizes only the current adjustment rule when determining whether the current instance is a daylight saving time.</span></span> <span data-ttu-id="46cae-1096">その結果、現在のインスタンスが、現在の調整規則が有効になるまでの期間の夏時間であるかどうかが、メソッドによって正確に報告されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1096">As a result, the method may not accurately report whether the current instance is a daylight saving time for periods before the current adjustment rule came into effect.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public static bool IsLeapYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLeapYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.IsLeapYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLeapYear (year As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLeapYear(int year);" />
      <MemberSignature Language="F#" Value="static member IsLeapYear : int -&gt; bool" Usage="System.DateTime.IsLeapYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="46cae-1097">4 桁の年。</span><span class="sxs-lookup"><span data-stu-id="46cae-1097">A 4-digit year.</span></span></param>
        <summary><span data-ttu-id="46cae-1098">指定された年が閏年かどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1098">Returns an indication whether the specified year is a leap year.</span></span></summary>
        <returns><span data-ttu-id="46cae-1099"><see langword="true" /> が閏年である場合は <paramref name="year" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46cae-1099"><see langword="true" /> if <paramref name="year" /> is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1100">`year`4桁の10進数として指定します。たとえば、1996のようになります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1100">`year` is specified as a 4-digit base 10 number; for example, 1996.</span></span>  
  
 <span data-ttu-id="46cae-1101">`year`は、常にグレゴリオ暦で年として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1101">`year` is always interpreted as a year in the Gregorian calendar.</span></span> <span data-ttu-id="46cae-1102">特定の年が他の暦で閏年であるかどうかを確認するには、 `IsLeapYear`その calendar オブジェクトのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1102">To determine whether a particular year was a leap year in some other calendar, call that calendar object's `IsLeapYear` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1103">次の例では<xref:System.DateTime.IsLeapYear%2A> 、メソッドを使用して、1994と2014の間の年数が閏年かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1103">The following example uses the <xref:System.DateTime.IsLeapYear%2A> method to determine which years between 1994 and 2014 are leap years.</span></span> <span data-ttu-id="46cae-1104">また、この例では、 <xref:System.DateTime.AddYears%2A>メソッドを使用して閏年に年を追加した場合の結果も示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1104">The example also illustrates the result when the <xref:System.DateTime.AddYears%2A> method is used to add a year to a leap day.</span></span>  
  
 [!code-csharp[System.DateTime.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.IsLeapYear/cs/IsLeapYear1.cs#1)]
 [!code-vb[System.DateTime.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.IsLeapYear/vb/IsLeapYear1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-1105"><paramref name="year" /> が 1 未満であるか、または 9999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1105"><paramref name="year" /> is less than 1 or greater than 9999.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Kind">
      <MemberSignature Language="C#" Value="public DateTimeKind Kind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeKind Kind" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Kind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Kind As DateTimeKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTimeKind Kind { DateTimeKind get(); };" />
      <MemberSignature Language="F#" Value="member this.Kind : DateTimeKind" Usage="System.DateTime.Kind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="46cae-1106">このインスタンスが表す時刻の種類 (現地時刻、世界協定時刻 (UTC)、または、そのどちらでもない) を示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1106">Gets a value that indicates whether the time represented by this instance is based on local time, Coordinated Universal Time (UTC), or neither.</span></span></summary>
        <value><span data-ttu-id="46cae-1107">現在の時刻が表すものを示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="46cae-1107">One of the enumeration values that indicates what the current time represents.</span></span> <span data-ttu-id="46cae-1108">既定値は、<see cref="F:System.DateTimeKind.Unspecified" /> です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1108">The default is <see cref="F:System.DateTimeKind.Unspecified" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1109">メソッドを呼び出すこと<xref:System.DateTime.Kind%2A>により、新しい<xref:System.DateTime>値のプロパティを<xref:System.DateTimeKind>特定の値に明示的に設定できます。 <xref:System.DateTime.SpecifyKind%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-1109">You can explicitly set the <xref:System.DateTime.Kind%2A> property of a new <xref:System.DateTime> value to a particular <xref:System.DateTimeKind> value by calling the <xref:System.DateTime.SpecifyKind%2A> method.</span></span>  
  
 <span data-ttu-id="46cae-1110">プロパティを使用すると、協定世界時 (UTC) または現地時刻を明確に値に反映できます。<xref:System.DateTime> <xref:System.DateTime.Kind%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-1110">The <xref:System.DateTime.Kind%2A> property allows a <xref:System.DateTime> value to clearly reflect either Coordinated Universal Time (UTC) or the local time.</span></span> <span data-ttu-id="46cae-1111">これに対し、 <xref:System.DateTimeOffset>構造体は、任意のタイムゾーンの任意の時刻を1つの時点として明確に反映できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1111">In contrast, the <xref:System.DateTimeOffset> structure can unambiguously reflect any time in any time zone as a single point in time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1112">次の例では<xref:System.DateTime.SpecifyKind%2A> 、メソッドを使用し<xref:System.DateTime.Kind%2A>て、メソッド<xref:System.DateTime.ToLocalTime%2A>と<xref:System.DateTime.ToUniversalTime%2A>変換メソッドに対してプロパティがどのように影響するかを示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1112">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly DateTime MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.DateTime.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime MaxValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxValue : DateTime" Usage="System.DateTime.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="46cae-1113"><see cref="T:System.DateTime" /> の最大有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1113">Represents the largest possible value of <see cref="T:System.DateTime" />.</span></span> <span data-ttu-id="46cae-1114">このフィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1114">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1115">この定数の値は、グレゴリオ暦の 23:59: 59.9999999 UTC、9999年12月31日に相当します。これは、00:00:00 UTC (1 月 1万1日) の前に正確に 1 100 ナノ秒ティックを示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1115">The value of this constant is equivalent to 23:59:59.9999999 UTC, December 31, 9999 in the Gregorian calendar, exactly one 100-nanosecond tick before 00:00:00 UTC, January 1, 10000.</span></span>  
  
 <span data-ttu-id="46cae-1116">などの一部のカレンダーで<xref:System.Globalization.ThaiBuddhistCalendar>は、よりも<xref:System.DateTime.MaxValue>前の日付の範囲がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1116">Some calendars, such as the <xref:System.Globalization.ThaiBuddhistCalendar>, support an upper date range that is earlier than <xref:System.DateTime.MaxValue>.</span></span> <span data-ttu-id="46cae-1117">このような場合は、変数<xref:System.DateTime.MaxValue>の代入や書式設定および解析操作でにアクセス<xref:System.ArgumentOutOfRangeException>しようとすると、がスローされることがあります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1117">In these cases, trying to access <xref:System.DateTime.MaxValue> in variable assignments or formatting and parsing operations can throw an <xref:System.ArgumentOutOfRangeException>.</span></span> <span data-ttu-id="46cae-1118">の値を取得するの<xref:System.DateTime.MaxValue?displayProperty=nameWithType>ではなく、指定したカルチャの有効な日付値の値を<xref:System.Globalization.Calendar.MaxSupportedDateTime?displayProperty=nameWithType>プロパティから取得できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1118">Rather than retrieving the value of <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, you can retrieve the value of the specified culture's latest valid date value from the <xref:System.Globalization.Calendar.MaxSupportedDateTime?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1119">次の例では<xref:System.DateTime> 、タイマー刻みの数を<xref:System.Int64>表す値をコンストラクターに渡すことによって、オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1119">The following example instantiates a <xref:System.DateTime> object by passing its constructor an <xref:System.Int64> value that represents a number of ticks.</span></span> <span data-ttu-id="46cae-1120">この例では、コンストラクターを呼び出す前に、この値が`DateTime.MinValue.Ticks` `DateTime.MaxValue.Ticks`次の値以上であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1120">Before invoking the constructor, the example ensures that this value is greater than or equal to `DateTime.MinValue.Ticks` and less than or equal to `DateTime.MaxValue.Ticks`.</span></span> <span data-ttu-id="46cae-1121">そうでない場合は、 <xref:System.ArgumentOutOfRangeException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="46cae-1121">If not, it throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 [!code-csharp[System.DateTime.MinValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#2)]
 [!code-vb[System.DateTime.MinValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DateTime.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="Millisecond">
      <MemberSignature Language="C#" Value="public int Millisecond { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Millisecond" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Millisecond" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Millisecond As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Millisecond { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Millisecond : int" Usage="System.DateTime.Millisecond" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="46cae-1122">このインスタンスで表される日付のミリ秒の部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1122">Gets the milliseconds component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="46cae-1123">DateTime のミリ秒部分 (0 ～ 999)。</span><span class="sxs-lookup"><span data-stu-id="46cae-1123">The milliseconds component, expressed as a value between 0 and 999.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1124">"Fff" 書式指定子を使用<xref:System.DateTime.Millisecond%2A>して、プロパティの文字列形式を表示できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1124">You can display the string representation of the <xref:System.DateTime.Millisecond%2A> property by using the "fff" format specifier.</span></span> <span data-ttu-id="46cae-1125">たとえば、次のコードでは、コンソールへの日時のミリ秒数を含む文字列が表示されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1125">For example, the following code displays a string that contains the number of milliseconds in a date and time to the console.</span></span>  
  
 [!code-csharp[System.DateTime.Millisecond#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#1)]
 [!code-vb[System.DateTime.Millisecond#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#1)]  
  
 <span data-ttu-id="46cae-1126">また、"o" 標準書式指定子を使用して、日付と時刻の値の他のコンポーネントと共にミリ秒部分を表示することもできます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1126">You can also display the millisecond component together with the other components of a date and time value by using the "o" standard format specifier.</span></span> <span data-ttu-id="46cae-1127">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1127">For example:</span></span>  
  
 [!code-csharp[System.DateTime.Millisecond#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#2)]
 [!code-vb[System.DateTime.Millisecond#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#2)]  
  
 <span data-ttu-id="46cae-1128">ただし、"o" 書式指定子は、ラウンドトリップまたは<xref:System.DateTime>値の格納の場合よりも表示されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1128">However, the "o" format specifier is intended less for displaying than for round-tripping or storing a <xref:System.DateTime> value.</span></span> <span data-ttu-id="46cae-1129">次の例に示すように、カスタム書式指定文字列を使用して、ミリ秒を他の日付/時刻コンポーネントと共に表示することもできます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1129">You can also display milliseconds together with other date and time components by using a custom format string, as the following example shows.</span></span>  
  
 [!code-csharp[System.DateTime.Millisecond#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#3)]
 [!code-vb[System.DateTime.Millisecond#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1130">プロパティの<xref:System.DateTime.Millisecond%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1130">The following example demonstrates the <xref:System.DateTime.Millisecond%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public int Minute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minute" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Minute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minute As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minute { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Minute : int" Usage="System.DateTime.Minute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="46cae-1131">このインスタンスで表される日付の分の部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1131">Gets the minute component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="46cae-1132">DateTime の分の部分 (0 ～ 59)。</span><span class="sxs-lookup"><span data-stu-id="46cae-1132">The minute component, expressed as a value between 0 and 59.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="46cae-1133">プロパティの<xref:System.DateTime.Minute%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1133">The following example demonstrates the <xref:System.DateTime.Minute%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly DateTime MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime MinValue" />
      <MemberSignature Language="DocId" Value="F:System.DateTime.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime MinValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinValue : DateTime" Usage="System.DateTime.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="46cae-1134"><see cref="T:System.DateTime" /> の最小有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1134">Represents the smallest possible value of <see cref="T:System.DateTime" />.</span></span> <span data-ttu-id="46cae-1135">このフィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1135">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1136">この定数の値は、グレゴリオ暦での 00:00: 00.0000000 UTC (0001 年1月1日) に相当します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1136">The value of this constant is equivalent to 00:00:00.0000000 UTC, January 1, 0001, in the Gregorian calendar.</span></span>  
  
 <span data-ttu-id="46cae-1137"><xref:System.DateTime.MinValue>初期<xref:System.DateTime>化されていない変数に割り当てられた日付と時刻を定義します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1137"><xref:System.DateTime.MinValue> defines the date and time that is assigned to an uninitialized <xref:System.DateTime> variable.</span></span> <span data-ttu-id="46cae-1138">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1138">The following example illustrates this.</span></span>  
  
 [!code-csharp[System.DateTime.MinValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#1)]
 [!code-vb[System.DateTime.MinValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#1)]  
  
 <span data-ttu-id="46cae-1139">プロパティ<xref:System.DateTime.MinValue>と<xref:System.DateTime.MaxValue>プロパティを使用すると、値がサポートされている範囲内にあることを<xref:System.DateTime>確認してから、コンストラクターに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1139">The <xref:System.DateTime.MinValue> and <xref:System.DateTime.MaxValue> properties can be used to ensure that a value lies within the supported range before passing it to a <xref:System.DateTime> constructor.</span></span> <span data-ttu-id="46cae-1140">この例のコードは、この使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1140">The code in the Example section illustrates this usage.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1141">次の例では<xref:System.DateTime> 、タイマー刻みの数を<xref:System.Int64>表す値をコンストラクターに渡すことによって、オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1141">The following example instantiates a <xref:System.DateTime> object by passing its constructor an <xref:System.Int64> value that represents a number of ticks.</span></span> <span data-ttu-id="46cae-1142">この例では、コンストラクターを呼び出す前に、この値が`DateTime.MinValue.Ticks` `DateTime.MaxValue.Ticks`次の値以上であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1142">Before invoking the constructor, the example ensures that this value is greater than or equal to `DateTime.MinValue.Ticks` and less than or equal to `DateTime.MaxValue.Ticks`.</span></span> <span data-ttu-id="46cae-1143">そうでない場合は、 <xref:System.ArgumentOutOfRangeException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="46cae-1143">If not, it throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 [!code-csharp[System.DateTime.MinValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#2)]
 [!code-vb[System.DateTime.MinValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public int Month { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Month" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Month" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Month As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Month { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Month : int" Usage="System.DateTime.Month" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="46cae-1144">このインスタンスで表される日付の月の部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1144">Gets the month component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="46cae-1145">DateTime の月部分 (1 ～ 12)。</span><span class="sxs-lookup"><span data-stu-id="46cae-1145">The month component, expressed as a value between 1 and 12.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="46cae-1146">プロパティの<xref:System.DateTime.Month%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1146">The following example demonstrates the <xref:System.DateTime.Month%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Now">
      <MemberSignature Language="C#" Value="public static DateTime Now { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Now" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Now" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Now As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Now { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Now : DateTime" Usage="System.DateTime.Now" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="46cae-1147">コンピューター上の現在の日時を現地時刻で表した <see cref="T:System.DateTime" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1147">Gets a <see cref="T:System.DateTime" /> object that is set to the current date and time on this computer, expressed as the local time.</span></span></summary>
        <value><span data-ttu-id="46cae-1148">現在の現地日時を値として保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1148">An object whose value is the current local date and time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1149">プロパティ<xref:System.DateTime.Now%2A>は、ローカル<xref:System.DateTime>コンピューター上の現在の日付と時刻を表す値を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1149">The <xref:System.DateTime.Now%2A> property returns a <xref:System.DateTime> value that represents the current date and time on the local computer.</span></span> <span data-ttu-id="46cae-1150"><xref:System.DateTime>値には、0001年1月1日午前0時から経過したタイマー刻みの数と、その<xref:System.DateTime>値の文字列形式を表す値があります。これは、の日付と時刻の値を表します。カルチャ固有の形式。</span><span class="sxs-lookup"><span data-stu-id="46cae-1150">Note that there is a difference between a <xref:System.DateTime> value, which represents the number of ticks that have elapsed since midnight of January 1, 0001, and the string representation of that <xref:System.DateTime> value, which expresses a date and time value in a culture-specific-specific format.</span></span> <span data-ttu-id="46cae-1151">日付と時刻の値の書式設定の詳細に<xref:System.DateTime.ToString%2A>ついては、メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1151">For information on formatting date and time values, see the <xref:System.DateTime.ToString%2A> method.</span></span> <span data-ttu-id="46cae-1152">次の例では、短い日付と時刻の文字列を、カルチャ固有のさまざまな形式で表示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1152">The following example displays the short date and time string in a number of culture-specific formats.</span></span>  
  
 [!code-cpp[System.DateTime.Now#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/now1.cpp#2)]
 [!code-csharp[System.DateTime.Now#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/now1.cs#2)]
 [!code-vb[System.DateTime.Now#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/now1.vb#2)]  
  
 <span data-ttu-id="46cae-1153">このプロパティの解決策は、基になるオペレーティングシステムに依存するシステムタイマーによって異なります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1153">The resolution of this property depends on the system timer, which depends on the underlying operating system.</span></span> <span data-ttu-id="46cae-1154">0.5 ~ 15 ミリ秒の範囲で指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1154">It tends to be between 0.5 and 15 milliseconds.</span></span> <span data-ttu-id="46cae-1155">その結果、ループのように、 <xref:System.DateTime.Now%2A>短い時間間隔でプロパティを繰り返し呼び出すと、同じ値が返される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1155">As a result, repeated calls to the <xref:System.DateTime.Now%2A> property in a short time interval, such as in a loop, may return the same value.</span></span>  
  
 <span data-ttu-id="46cae-1156">プロパティ<xref:System.DateTime.Now%2A>は、パフォーマンスを測定するために頻繁に使用されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1156">The <xref:System.DateTime.Now%2A> property is frequently used to measure performance.</span></span> <span data-ttu-id="46cae-1157">ただし、解像度が低いため、ベンチマークツールとしての使用には適していません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1157">However, because of its low resolution, it is not suitable for use as a benchmarking tool.</span></span> <span data-ttu-id="46cae-1158">代わりに、 <xref:System.Diagnostics.Stopwatch>クラスを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="46cae-1158">A better alternative is to use the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 <span data-ttu-id="46cae-1159">.NET Framework バージョン2.0 以降、戻り値は、 <xref:System.DateTime> <xref:System.DateTime.Kind%2A>プロパティがを返す<xref:System.DateTimeKind.Local?displayProperty=nameWithType>を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1159">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="46cae-1160">また、 <xref:System.DateTimeOffset.Now%2A?displayProperty=nameWithType>プロパティを使用して、現在のローカルの日付と時刻を取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1160">You can also use the <xref:System.DateTimeOffset.Now%2A?displayProperty=nameWithType> property to retrieve the current local date and time.</span></span> <span data-ttu-id="46cae-1161">ローカル時刻を1つの時点として明確に表現できるため、その時刻値はコンピューター間で移植可能になります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1161">It allows a local time to be expressed unambiguously as a single point in time, which in turn makes that time value portable across computers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1162">次の例では<xref:System.DateTime.Now%2A> 、 <xref:System.DateTime.UtcNow%2A>プロパティとプロパティを使用して、現在の現地日時と現在の世界協定 (UTC) 日付と時刻を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1162">The following example uses the <xref:System.DateTime.Now%2A> and <xref:System.DateTime.UtcNow%2A> properties to retrieve the current local date and time and the current universal coordinated (UTC) date and time.</span></span> <span data-ttu-id="46cae-1163">次に、さまざまなカルチャの書式指定規則を使用して、その<xref:System.DateTime.Kind%2A>プロパティの値と共に文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1163">It then uses the formatting conventions of a number of cultures to display the strings, along with the values of the their <xref:System.DateTime.Kind%2A> properties.</span></span>  
  
 [!code-cpp[System.DateTime.Now#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/now2.cpp#3)]
 [!code-csharp[System.DateTime.Now#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/now2.cs#3)]
 [!code-vb[System.DateTime.Now#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/now2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.Now" />
        <altmember cref="P:System.DateTime.UtcNow" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static DateTime operator + (DateTime d, TimeSpan t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTime op_Addition(valuetype System.DateTime d, valuetype System.TimeSpan t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Addition(System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (d As DateTime, t As TimeSpan) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime operator +(DateTime d, TimeSpan t);" />
      <MemberSignature Language="F#" Value="static member ( + ) : DateTime * TimeSpan -&gt; DateTime" Usage="d + t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.DateTime" />
        <Parameter Name="t" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="46cae-1164">追加する日付と時刻の値。</span><span class="sxs-lookup"><span data-stu-id="46cae-1164">The date and time value to add.</span></span></param>
        <param name="t"><span data-ttu-id="46cae-1165">加算する時間間隔。</span><span class="sxs-lookup"><span data-stu-id="46cae-1165">The time interval to add.</span></span></param>
        <summary><span data-ttu-id="46cae-1166">指定した日付と時刻に指定した時間間隔を加算して、新しい日付と時刻を作成します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1166">Adds a specified time interval to a specified date and time, yielding a new date and time.</span></span></summary>
        <returns><span data-ttu-id="46cae-1167"><paramref name="d" /> に <paramref name="t" /> を加算した値であるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1167">An object that is the sum of the values of <paramref name="d" /> and <paramref name="t" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="46cae-1168">この演算子の同等の方法は次のようになります。<xref:System.DateTime.Add%28System.TimeSpan%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-1168">The equivalent method for this operator is <xref:System.DateTime.Add%28System.TimeSpan%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="46cae-1169">加算演算子の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1169">The following example demonstrates the addition operator.</span></span>  
  
 [!code-cpp[DateTime Operators#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime Operators/CPP/class1.cpp#1)]
 [!code-csharp[DateTime Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime Operators/CS/class1.cs#1)]
 [!code-vb[DateTime Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime Operators/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-1170">結果として返された <see cref="T:System.DateTime" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="46cae-1170">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Add(System.TimeSpan)" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.DateTime.Ticks" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="46cae-1171">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="46cae-1171">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (DateTime d1, DateTime d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.DateTime d1, valuetype System.DateTime d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Equality(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (d1 As DateTime, d2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(DateTime d1, DateTime d2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : DateTime * DateTime -&gt; bool" Usage="d1 = d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.DateTime" />
        <Parameter Name="d2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="46cae-1172">比較する最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1172">The first object to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="46cae-1173">比較する 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1173">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="46cae-1174"><see cref="T:System.DateTime" /> の 2 つの指定したインスタンスが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1174">Determines whether two specified instances of <see cref="T:System.DateTime" /> are equal.</span></span></summary>
        <returns><span data-ttu-id="46cae-1175"><see langword="true" /> と <paramref name="d1" /> が同じ日付と時刻を表す場合は <paramref name="d2" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46cae-1175"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> represent the same date and time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1176">演算子<xref:System.DateTime.op_Equality%2A>は、タイマー刻み<xref:System.DateTime>の数を比較することによって、2つの値が等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1176">The <xref:System.DateTime.op_Equality%2A> operator determines whether two <xref:System.DateTime> values are equal by comparing their number of ticks.</span></span> <span data-ttu-id="46cae-1177">オブジェクトを<xref:System.DateTime>比較する前に、オブジェクトが同じタイムゾーンの時刻を表していることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1177">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="46cae-1178">これを行うには、<xref:System.DateTime.Kind%2A> プロパティの値を比較します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1178">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="46cae-1179">この演算子の同等の方法は次のようになります。<xref:System.DateTime.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-1179">The equivalent method for this operator is <xref:System.DateTime.Equals%28System.Object%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="46cae-1180">等値演算子の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1180">The following example demonstrates the equality operator.</span></span>  
  
 [!code-cpp[DateTime Operators#2](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime Operators/CPP/class1.cpp#2)]
 [!code-csharp[DateTime Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime Operators/CS/class1.cs#2)]
 [!code-vb[DateTime Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime Operators/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Equals(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : DateTime * DateTime -&gt; bool" Usage="t1 &gt; t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="46cae-1181">比較する最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1181">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="46cae-1182">比較する 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1182">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="46cae-1183">指定した <see cref="T:System.DateTime" /> が、指定したもう 1 つの <see cref="T:System.DateTime" /> より後の時刻かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1183">Determines whether one specified <see cref="T:System.DateTime" /> is later than another specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="46cae-1184"><see langword="true" /> が <paramref name="t1" /> より遅い場合は <paramref name="t2" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46cae-1184"><see langword="true" /> if <paramref name="t1" /> is later than <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1185">演算子<xref:System.DateTime.op_GreaterThan%2A>は、タイマー刻みの数<xref:System.DateTime>を比較することによって、2つの値の間の関係を決定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1185">The <xref:System.DateTime.op_GreaterThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks.</span></span> <span data-ttu-id="46cae-1186">オブジェクトを<xref:System.DateTime>比較する前に、オブジェクトが同じタイムゾーンの時刻を表していることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1186">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="46cae-1187">これを行うには、<xref:System.DateTime.Kind%2A> プロパティの値を比較します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1187">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="46cae-1188">この演算子の同等の方法は次のようになります。<xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-1188">The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : DateTime * DateTime -&gt; bool" Usage="t1 &gt;= t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="46cae-1189">比較する最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1189">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="46cae-1190">比較する 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1190">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="46cae-1191">指定した 1 つの <see cref="T:System.DateTime" /> が、指定した別の <see cref="T:System.DateTime" /> と同じ日時またはそれより後の日時を表しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1191">Determines whether one specified <see cref="T:System.DateTime" /> represents a date and time that is the same as or later than another specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="46cae-1192"><paramref name="t1" /> が <paramref name="t2" /> と同じかそれより遅い場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46cae-1192"><see langword="true" /> if <paramref name="t1" /> is the same as or later than <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1193">演算子<xref:System.DateTime.op_GreaterThanOrEqual%2A>は、タイマー刻みの数<xref:System.DateTime>を比較することによって、2つの値の間の関係を決定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1193">The <xref:System.DateTime.op_GreaterThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks.</span></span> <span data-ttu-id="46cae-1194">オブジェクトを<xref:System.DateTime>比較する前に、オブジェクトが同じタイムゾーンの時刻を表していることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1194">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="46cae-1195">これを行うには、<xref:System.DateTime.Kind%2A> プロパティの値を比較します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1195">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="46cae-1196">この演算子の同等の方法は次のようになります。<xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-1196">The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (DateTime d1, DateTime d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.DateTime d1, valuetype System.DateTime d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Inequality(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (d1 As DateTime, d2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(DateTime d1, DateTime d2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : DateTime * DateTime -&gt; bool" Usage="System.DateTime.op_Inequality (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.DateTime" />
        <Parameter Name="d2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="46cae-1197">比較する最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1197">The first object to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="46cae-1198">比較する 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1198">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="46cae-1199"><see cref="T:System.DateTime" /> の 2 つの指定したインスタンスが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1199">Determines whether two specified instances of <see cref="T:System.DateTime" /> are not equal.</span></span></summary>
        <returns><span data-ttu-id="46cae-1200"><paramref name="d1" /> と <paramref name="d2" /> が同じ日付と時刻を表していない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46cae-1200"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> do not represent the same date and time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1201">演算子<xref:System.DateTime.op_Inequality%2A>は、タイマー刻み<xref:System.DateTime>の数を比較することによって、2つの値が等しくないかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1201">The <xref:System.DateTime.op_Inequality%2A> operator determines whether two <xref:System.DateTime> values are not equal by comparing their number of ticks.</span></span> <span data-ttu-id="46cae-1202">オブジェクトを<xref:System.DateTime>比較する前に、オブジェクトが同じタイムゾーンの時刻を表していることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1202">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="46cae-1203">これを行うには、<xref:System.DateTime.Kind%2A> プロパティの値を比較します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1203">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="46cae-1204">この演算子の同等の方法は次のようになります。<xref:System.DateTime.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-1204">The equivalent method for this operator is <xref:System.DateTime.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_LessThan(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : DateTime * DateTime -&gt; bool" Usage="t1 &lt; t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="46cae-1205">比較する最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1205">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="46cae-1206">比較する 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1206">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="46cae-1207">指定した <see cref="T:System.DateTime" /> が、指定したもう 1 つの <see cref="T:System.DateTime" /> より前の時刻かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1207">Determines whether one specified <see cref="T:System.DateTime" /> is earlier than another specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="46cae-1208"><see langword="true" /> が <paramref name="t1" /> より早い場合は <paramref name="t2" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46cae-1208"><see langword="true" /> if <paramref name="t1" /> is earlier than <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1209">演算子<xref:System.DateTime.op_LessThan%2A>は、タイマー刻みの数<xref:System.DateTime>を比較することによって、2つの値の間の関係を決定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1209">The <xref:System.DateTime.op_LessThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks.</span></span> <span data-ttu-id="46cae-1210">オブジェクトを<xref:System.DateTime>比較する前に、オブジェクトが同じタイムゾーンの時刻を表していることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1210">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="46cae-1211">これを行うには、<xref:System.DateTime.Kind%2A> プロパティの値を比較します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1211">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="46cae-1212">この演算子の同等の方法は次のようになります。<xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-1212">The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : DateTime * DateTime -&gt; bool" Usage="t1 &lt;= t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="46cae-1213">比較する最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1213">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="46cae-1214">比較する 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1214">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="46cae-1215">指定した 1 つの <see cref="T:System.DateTime" /> が、指定した別の <see cref="T:System.DateTime" /> と同じ日時またはそれより前の日時を表しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1215">Determines whether one specified <see cref="T:System.DateTime" /> represents a date and time that is the same as or earlier than another specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="46cae-1216"><paramref name="t1" /> が <paramref name="t2" /> と同じかそれより早い場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46cae-1216"><see langword="true" /> if <paramref name="t1" /> is the same as or earlier than <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1217">演算子<xref:System.DateTime.op_LessThanOrEqual%2A>は、タイマー刻みの数<xref:System.DateTime>を比較することによって、2つの値の間の関係を決定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1217">The <xref:System.DateTime.op_LessThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks.</span></span> <span data-ttu-id="46cae-1218">オブジェクトを<xref:System.DateTime>比較する前に、オブジェクトが同じタイムゾーンの時刻を表していることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1218">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="46cae-1219">これを行うには、<xref:System.DateTime.Kind%2A> プロパティの値を比較します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1219">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="46cae-1220">この演算子の同等の方法は次のようになります。<xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-1220">The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Subtraction">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="46cae-1221">指定した <see cref="T:System.DateTime" /> から指定した <see cref="T:System.DateTime" /> または <see cref="T:System.TimeSpan" /> を減算します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1221">Subtracts a specified <see cref="T:System.DateTime" /> or<see cref="T:System.TimeSpan" /> from a specified <see cref="T:System.DateTime" />.</span></span></summary>
        <altmember cref="M:System.DateTime.Subtract(System.DateTime)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static TimeSpan operator - (DateTime d1, DateTime d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Subtraction(valuetype System.DateTime d1, valuetype System.DateTime d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Subtraction(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d1 As DateTime, d2 As DateTime) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator -(DateTime d1, DateTime d2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : DateTime * DateTime -&gt; TimeSpan" Usage="d1 - d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.DateTime" />
        <Parameter Name="d2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="46cae-1222">減算対象の日付および時刻の値 (被減数)。</span><span class="sxs-lookup"><span data-stu-id="46cae-1222">The date and time value to subtract from (the minuend).</span></span></param>
        <param name="d2"><span data-ttu-id="46cae-1223">減算する日付および時刻の値 (減数)。</span><span class="sxs-lookup"><span data-stu-id="46cae-1223">The date and time value to subtract (the subtrahend).</span></span></param>
        <summary><span data-ttu-id="46cae-1224">指定した日付と時刻から指定したもう 1 つの日付と時刻を減算して、時間間隔を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1224">Subtracts a specified date and time from another specified date and time and returns a time interval.</span></span></summary>
        <returns><span data-ttu-id="46cae-1225"><paramref name="d1" /> と <paramref name="d2" /> の間の時間間隔、つまり <paramref name="d1" /> から <paramref name="d2" /> を引いた値です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1225">The time interval between <paramref name="d1" /> and <paramref name="d2" />; that is, <paramref name="d1" /> minus <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1226">メソッド<xref:System.DateTime.op_Subtraction%28System.DateTime%2CSystem.DateTime%29>は、減算を実行するときに<xref:System.DateTime.Kind%2A> 、2つ<xref:System.DateTime>の値のプロパティの値を考慮しません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1226">The <xref:System.DateTime.op_Subtraction%28System.DateTime%2CSystem.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction.</span></span> <span data-ttu-id="46cae-1227">オブジェクトを<xref:System.DateTime>差し引く前に、オブジェクトが同じタイムゾーンの時刻を表していることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1227">Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="46cae-1228">それ以外の場合、結果にはタイムゾーン間の違いが含まれます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1228">Otherwise, the result will include the difference between time zones.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="46cae-1229">メソッド<xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>は、減算を実行するときのタイムゾーン間の違いを考慮します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1229">The <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType> method does consider the difference between time zones when performing the subtraction.</span></span>  
  
 <span data-ttu-id="46cae-1230">この演算子の同等の方法は次のようになります。<xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-1230">The equivalent method for this operator is <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="46cae-1231">次の例は、 <xref:System.DateTime.Subtract%2A>メソッドと減算演算子を示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1231">The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.</span></span>  
  
 [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]
 [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Subtract(System.DateTime)" />
        <altmember cref="P:System.DateTime.Ticks" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="46cae-1232">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="46cae-1232">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static DateTime operator - (DateTime d, TimeSpan t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTime op_Subtraction(valuetype System.DateTime d, valuetype System.TimeSpan t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d As DateTime, t As TimeSpan) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime operator -(DateTime d, TimeSpan t);" />
      <MemberSignature Language="F#" Value="static member ( - ) : DateTime * TimeSpan -&gt; DateTime" Usage="d - t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.DateTime" />
        <Parameter Name="t" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="46cae-1233">減算される日時の値。</span><span class="sxs-lookup"><span data-stu-id="46cae-1233">The date and time value to subtract from.</span></span></param>
        <param name="t"><span data-ttu-id="46cae-1234">減算する時間間隔。</span><span class="sxs-lookup"><span data-stu-id="46cae-1234">The time interval to subtract.</span></span></param>
        <summary><span data-ttu-id="46cae-1235">指定した日付と時刻から指定した時間間隔を減算して、新しい日付と時刻を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1235">Subtracts a specified time interval from a specified date and time and returns a new date and time.</span></span></summary>
        <returns><span data-ttu-id="46cae-1236"><paramref name="d" /> の値から <paramref name="t" /> の値を減算した値を保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1236">An object whose value is the value of <paramref name="d" /> minus the value of <paramref name="t" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1237">このメソッドは、 `t`のティック値をの`d`ティック値から減算します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1237">This method subtracts the ticks value of `t` from the ticks value of `d`.</span></span>  
  
 <span data-ttu-id="46cae-1238">この演算子の同等の方法は次のようになります。<xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-1238">The equivalent method for this operator is <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="46cae-1239">次の例は、 <xref:System.DateTime.Subtract%2A>メソッドと減算演算子を示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1239">The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.</span></span>  
  
 [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]
 [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-1240">結果として返された <see cref="T:System.DateTime" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="46cae-1240">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Subtract(System.TimeSpan)" />
        <altmember cref="P:System.DateTime.Ticks" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="46cae-1241">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="46cae-1241">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="46cae-1242">日付と時刻の文字列形式を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1242">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks  
 <span data-ttu-id="46cae-1243">このセクションの内容:</span><span class="sxs-lookup"><span data-stu-id="46cae-1243">In this section:</span></span>  
  
- [<span data-ttu-id="46cae-1244">どの方法を呼び出すか。</span><span class="sxs-lookup"><span data-stu-id="46cae-1244">Which method do I call?</span></span>](#Tasks)
- [<span data-ttu-id="46cae-1245">解析する文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1245">The string to parse</span></span>](#StringToParse)
- [<span data-ttu-id="46cae-1246">解析とカルチャ規則</span><span class="sxs-lookup"><span data-stu-id="46cae-1246">Parsing and cultural conventions</span></span>](#Culture)
- [<span data-ttu-id="46cae-1247">解析とスタイル要素</span><span class="sxs-lookup"><span data-stu-id="46cae-1247">Parsing and style elements</span></span>](#Styles)
- [<span data-ttu-id="46cae-1248">戻り値と DateTime. Kind</span><span class="sxs-lookup"><span data-stu-id="46cae-1248">The return value and DateTime.Kind</span></span>](#kind)
 
<a name="Tasks"></a>   
### <a name="which-method-do-i-call"></a><span data-ttu-id="46cae-1249">どの方法を呼び出すか。</span><span class="sxs-lookup"><span data-stu-id="46cae-1249">Which method do I call?</span></span>  
  
|<span data-ttu-id="46cae-1250">終了</span><span class="sxs-lookup"><span data-stu-id="46cae-1250">To</span></span>|<span data-ttu-id="46cae-1251">Call</span><span class="sxs-lookup"><span data-stu-id="46cae-1251">Call</span></span>|  
|--------|----------|  
|<span data-ttu-id="46cae-1252">現在のカルチャの規則を使用して、日付と時刻の文字列を解析します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1252">Parse a date and time string by using the conventions of the current culture.</span></span>|<span data-ttu-id="46cae-1253"><xref:System.DateTime.Parse%28System.String%29> オーバーロード</span><span class="sxs-lookup"><span data-stu-id="46cae-1253"><xref:System.DateTime.Parse%28System.String%29> overload</span></span>|  
|<span data-ttu-id="46cae-1254">特定のカルチャの規則を使用して、日付と時刻の文字列を解析します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1254">Parse a date and time string by using the conventions of a specific culture.</span></span>|<span data-ttu-id="46cae-1255"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29>オーバーロード (「[解析とカルチャ規則」を](#Culture)参照)</span><span class="sxs-lookup"><span data-stu-id="46cae-1255"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> overload (see [Parsing and Cultural Conventions](#Culture))</span></span>|  
|<span data-ttu-id="46cae-1256">特殊なスタイル要素 (空白文字、空白文字など) を使用して、日付と時刻の文字列を解析します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1256">Parse a date and time string with special style elements (such as white space or no white space).</span></span>|<span data-ttu-id="46cae-1257"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> オーバーロード</span><span class="sxs-lookup"><span data-stu-id="46cae-1257"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload</span></span>|  
|<span data-ttu-id="46cae-1258">特定の形式にする必要がある日付と時刻の文字列を解析します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1258">Parse a date and time string that must be in a particular format.</span></span>|<span data-ttu-id="46cae-1259"><xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> または <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-1259"><xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> or <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType></span></span>|
|<span data-ttu-id="46cae-1260">日付と時刻の文字列を解析し、UTC または現地時刻への変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1260">Parse a date and time string and perform a conversion to UTC or local time.</span></span>|<span data-ttu-id="46cae-1261"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> オーバーロード</span><span class="sxs-lookup"><span data-stu-id="46cae-1261"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload</span></span>|  
|<span data-ttu-id="46cae-1262">例外を処理せずに、日付と時刻の文字列を解析します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1262">Parse a date and time string without handling exceptions.</span></span>|<span data-ttu-id="46cae-1263"><xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> メソッド</span><span class="sxs-lookup"><span data-stu-id="46cae-1263"><xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> method</span></span>|  
|<span data-ttu-id="46cae-1264">書式設定操作によって作成された日付と時刻の値を復元 (ラウンドトリップ) します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1264">Restore (round-trip) a date and time value created by a formatting operation.</span></span>|<span data-ttu-id="46cae-1265">"O" または "r" の標準書式指定文字列を<xref:System.DateTime.ToString%28System.String%29>メソッドに渡し、を<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>使用してオーバーロードを呼び出します。<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-1265">Pass the "o" or "r" standard format string to the <xref:System.DateTime.ToString%28System.String%29> method, and call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload with <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="46cae-1266">コンピューター (および場合によってはカルチャ) の境界を越えて、固定形式の日付と時刻の文字列を解析します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1266">Parse a date and time string in a fixed format across machine (and possibly cultural) boundaries.</span></span>|<span data-ttu-id="46cae-1267"><xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType>また<xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType>はメソッド</span><span class="sxs-lookup"><span data-stu-id="46cae-1267"><xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> or <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> method</span></span>|  
  
<a name="StringToParse"></a>   
### <a name="the-string-to-parse"></a><span data-ttu-id="46cae-1268">解析する文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1268">The string to parse</span></span>  
 <span data-ttu-id="46cae-1269">メソッド<xref:System.DateTime.Parse%2A>は、日付と時刻の値の文字列形式<xref:System.DateTime>を、それと等価のに変換しようとします。</span><span class="sxs-lookup"><span data-stu-id="46cae-1269">The <xref:System.DateTime.Parse%2A> method tries to convert the string representation of a date and time value to its <xref:System.DateTime> equivalent.</span></span> <span data-ttu-id="46cae-1270">このメソッドは、例外を<xref:System.FormatException>スローせずに入力文字列を完全に解析しようとします。</span><span class="sxs-lookup"><span data-stu-id="46cae-1270">It tries to parse the input string completely without throwing a <xref:System.FormatException> exception.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="46cae-1271">認識され<xref:System.DateTime.Parse%2A>ない文字列形式のために解析操作が失敗した場合、メソッドはを<xref:System.FormatException>スロー `false` <xref:System.DateTime.TryParse%2A>しますが、メソッドはを返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1271">If the parsing operation fails because of an unrecognized string format, the <xref:System.DateTime.Parse%2A> method throws a <xref:System.FormatException>, whereas the <xref:System.DateTime.TryParse%2A> method returns `false`.</span></span> <span data-ttu-id="46cae-1272">例外処理はコストがかかる場合があるため<xref:System.DateTime.Parse%2A> 、入力ソースが信頼されているために解析操作が成功すると予想される場合は、を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1272">Because exception handling can be expensive, you should use <xref:System.DateTime.Parse%2A> when the parsing operation is expected to succeed because the input source is trusted.</span></span> <span data-ttu-id="46cae-1273"><xref:System.DateTime.TryParse%2A>は、解析エラーが発生する可能性がある場合 (特に入力ソースが信頼されていない場合)、または正しく解析されない文字列の代わりに適切な既定値がある場合に適しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1273"><xref:System.DateTime.TryParse%2A> is preferable when parsing failures are likely, particularly because an input source is not trusted, or you have reasonable default values to substitute for strings that do not parse successfully.</span></span>   

 <span data-ttu-id="46cae-1274">解析する文字列は、次のいずれかの形式になります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1274">The string to be parsed can take any of the following forms:</span></span>  
  
-   <span data-ttu-id="46cae-1275">日付と時刻のコンポーネントを含む文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1275">A string with a date and a time component.</span></span>  
  
-   <span data-ttu-id="46cae-1276">日付と時刻のコンポーネントを含まない文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1276">A string with a date but no time component.</span></span> <span data-ttu-id="46cae-1277">時刻部分が存在しない場合、メソッドは午前0時12:00 を想定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1277">If the time component is absent, the method assumes 12:00 midnight.</span></span> <span data-ttu-id="46cae-1278">日付部分に2桁の年がある場合、現在のカルチャの現在<xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>の暦または指定したカルチャの現在の暦のに基づいて年に変換されます (null `provider`以外の引数を持つオーバーロードを使用する場合)。</span><span class="sxs-lookup"><span data-stu-id="46cae-1278">If the date component has a two-digit year, it is converted to a year based on the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> of the current culture's current calendar or the specified culture's current calendar (if you use an overload with a non-null `provider` argument).</span></span>  
  
- <span data-ttu-id="46cae-1279">月と年だけを含み、日の部分を含まない日付部分を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1279">A string with a date component that includes only the month and the year but no day component.</span></span> <span data-ttu-id="46cae-1280">このメソッドは、月の最初の日を想定しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1280">The method assumes the first day of the month.</span></span>

- <span data-ttu-id="46cae-1281">月と日だけを含み、年を含まない、日付部分を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1281">A string with a date component that includes only the month and the day but no year component.</span></span> <span data-ttu-id="46cae-1282">このメソッドは、現在の年を想定しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1282">The method assumes the current year.</span></span>

-   <span data-ttu-id="46cae-1283">時刻を指定し、日付部分を含まない文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1283">A string with a time but no date component.</span></span> <span data-ttu-id="46cae-1284"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>オーバーロードを呼び出して`styles`引数にを含める<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>場合を除き、メソッドは現在の日付を想定します。この場合、メソッドは0001年1月1日の日付を想定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1284">The method assumes the current date unless you call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload and include <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> in the `styles` argument, in which case the method assumes a date of January 1, 0001.</span></span>  

- <span data-ttu-id="46cae-1285">時刻部分と AM/PM 指定子のみを含み、日付部分を含まない、時刻部分を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1285">A string with a time component that includes only the hour and an AM/PM designator, with no date component.</span></span> <span data-ttu-id="46cae-1286">このメソッドは、現在の日付と時刻を指定します。時間はありません。秒は使用できません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1286">The method assumes the current date and a time with no minutes and no seconds.</span></span> <span data-ttu-id="46cae-1287">この動作を変更するには、 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>オーバーロードを呼び出し<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> 、 `styles`引数にを含めます。この場合、メソッドは、0001年1月1日の日付を想定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1287">You can change this behavior by calling the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload and include <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> in the `styles` argument, in which case the method assumes a date of January 1, 0001.</span></span>

-   <span data-ttu-id="46cae-1288">タイムゾーン情報を含み、ISO 8601 に準拠している文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1288">A string that includes time zone information and conforms to ISO 8601.</span></span> <span data-ttu-id="46cae-1289">次の例では、最初の文字列は世界協定時刻 (UTC) を指定し、2番目の文字列は UTC より7時間前のタイムゾーンの時刻を指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1289">In the following examples, the first string designates Coordinated Universal Time (UTC), and the second designates the time in a time zone that's seven hours earlier than UTC:</span></span>  
  
    <span data-ttu-id="46cae-1290">"2008-11-01T19:35:00.0000000Z"</span><span class="sxs-lookup"><span data-stu-id="46cae-1290">"2008-11-01T19:35:00.0000000Z"</span></span>   
    <span data-ttu-id="46cae-1291">"2008-11-01T19:35:00.0000000-07:00"</span><span class="sxs-lookup"><span data-stu-id="46cae-1291">"2008-11-01T19:35:00.0000000-07:00"</span></span>  
  
-   <span data-ttu-id="46cae-1292">GMT 指定子を含み、RFC 1123 時刻形式に準拠している文字列。例えば：</span><span class="sxs-lookup"><span data-stu-id="46cae-1292">A string that includes the GMT designator and conforms to the RFC 1123 time format; for example:</span></span>  
  
     <span data-ttu-id="46cae-1293">"Sat, 01 11 月 2008 19:35:00 GMT"</span><span class="sxs-lookup"><span data-stu-id="46cae-1293">"Sat, 01 Nov 2008 19:35:00 GMT"</span></span>  
  
-   <span data-ttu-id="46cae-1294">タイムゾーンオフセット情報と共に日付と時刻を含む文字列。例えば：</span><span class="sxs-lookup"><span data-stu-id="46cae-1294">A string that includes the date and time along with time zone offset information; for example:</span></span>  
  
     <span data-ttu-id="46cae-1295">"03/01/2009 05:42:00 -5:00"</span><span class="sxs-lookup"><span data-stu-id="46cae-1295">"03/01/2009 05:42:00 -5:00"</span></span>  

<span data-ttu-id="46cae-1296">次の例では、現在のカルチャの書式指定規則 (この例では en-us カルチャ) を使用して、これらの各形式の文字列を解析します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1296">The following example parses strings in each of these formats by using the formatting conventions of the current culture, which in this case is the en-US culture:</span></span>

[!code-csharp[Default parsing](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse6.cs)]
[!code-vb[Default parsing](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse6.vb)]  
  
 <span data-ttu-id="46cae-1297">入力文字列が、解析メソッドによって使用される暦における閏年の閏年を表している場合 (「[解析とカルチャ規則](#Culture)」を参照)、メソッドは<xref:System.DateTime.Parse%2A>文字列を正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1297">If the input string represents a leap day in a leap year in the calendar used by the parsing method (see [Parsing and cultural conventions](#Culture)), the <xref:System.DateTime.Parse%2A> method parses the string successfully.</span></span> <span data-ttu-id="46cae-1298">入力文字列がうるう年以外の閏日を表している場合、メソッドはを<xref:System.FormatException>スローします。</span><span class="sxs-lookup"><span data-stu-id="46cae-1298">If the input string represents a leap day in a non-leap year, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="46cae-1299">メソッドは<xref:System.DateTime.Parse%2A> 、現在のカルチャまたは指定されたカルチャの書式設定規則を使用して、日付と時刻の文字列形式を解析しようとするため、異なるカルチャで文字列を解析しようとすると失敗することがあります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1299">Because the <xref:System.DateTime.Parse%2A> method tries to parse the string representation of a date and time by using the formatting rules of the current or a specified culture, trying to parse a string across different cultures can fail.</span></span> <span data-ttu-id="46cae-1300">異なるロケールで特定の日付と時刻の書式を解析するには、 <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType>メソッドのオーバーロードのいずれかを使用して、書式指定子を指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1300">To parse a specific date and time format across different locales, use one of the overloads of the <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> method and provide a format specifier.</span></span>  
  
<a name="Culture"></a>   
### <a name="parsing-and-cultural-conventions"></a><span data-ttu-id="46cae-1301">解析とカルチャ規則</span><span class="sxs-lookup"><span data-stu-id="46cae-1301">Parsing and cultural conventions</span></span>  
 <span data-ttu-id="46cae-1302"><xref:System.DateTime.Parse%2A>メソッドのすべてのオーバーロードは、(次の表ので`s`表される) 解析対象の文字列が ISO 8601 パターンに準拠している場合を除き、カルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1302">All overloads of the <xref:System.DateTime.Parse%2A> method are culture-sensitive unless the string to be parsed (which is represented by `s` in the following table) conforms to the ISO 8601 pattern.</span></span> <span data-ttu-id="46cae-1303">解析操作では、次のように<xref:System.Globalization.DateTimeFormatInfo>派生したオブジェクトの書式情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1303">The parsing operation uses the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object that is derived as follows:</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

|<span data-ttu-id="46cae-1304">を呼び出す場合</span><span class="sxs-lookup"><span data-stu-id="46cae-1304">If you call</span></span>|<span data-ttu-id="46cae-1305">と`provider`は</span><span class="sxs-lookup"><span data-stu-id="46cae-1305">And `provider` is</span></span>|<span data-ttu-id="46cae-1306">書式設定情報の派生元</span><span class="sxs-lookup"><span data-stu-id="46cae-1306">Formatting information is derived from</span></span>|  
|-----------------|-----------------------|--------------------------------------------|  
|<xref:System.DateTime.Parse%28System.String%29>|-|<span data-ttu-id="46cae-1307">現在のスレッドカルチャ (<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>プロパティ)</span><span class="sxs-lookup"><span data-stu-id="46cae-1307">The current thread culture (<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> property)</span></span>|  
|<span data-ttu-id="46cae-1308"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> または <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="46cae-1308"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span></span>|<span data-ttu-id="46cae-1309"><xref:System.Globalization.DateTimeFormatInfo>オブジェクト</span><span class="sxs-lookup"><span data-stu-id="46cae-1309">a <xref:System.Globalization.DateTimeFormatInfo> object</span></span>|<span data-ttu-id="46cae-1310">指定さ<xref:System.Globalization.DateTimeFormatInfo>れたオブジェクト</span><span class="sxs-lookup"><span data-stu-id="46cae-1310">The specified <xref:System.Globalization.DateTimeFormatInfo> object</span></span>|  
|<span data-ttu-id="46cae-1311"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> または <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="46cae-1311"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span></span>|`null`|<span data-ttu-id="46cae-1312">現在のスレッドカルチャ (<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>プロパティ)</span><span class="sxs-lookup"><span data-stu-id="46cae-1312">The current thread culture (<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> property)</span></span>|  
|<span data-ttu-id="46cae-1313"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> または <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="46cae-1313"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span></span>|<span data-ttu-id="46cae-1314"><xref:System.Globalization.CultureInfo>オブジェクト</span><span class="sxs-lookup"><span data-stu-id="46cae-1314">a <xref:System.Globalization.CultureInfo> object</span></span>|<span data-ttu-id="46cae-1315"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> プロパティ</span><span class="sxs-lookup"><span data-stu-id="46cae-1315">The <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property</span></span>|  
|<span data-ttu-id="46cae-1316"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> または <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="46cae-1316"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span></span>|<span data-ttu-id="46cae-1317">カスタム<xref:System.IFormatProvider>実装</span><span class="sxs-lookup"><span data-stu-id="46cae-1317">Custom <xref:System.IFormatProvider> implementation</span></span>|<span data-ttu-id="46cae-1318"><xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> メソッド</span><span class="sxs-lookup"><span data-stu-id="46cae-1318">The <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method</span></span>|  
  
 <span data-ttu-id="46cae-1319">書式設定情報が<xref:System.Globalization.DateTimeFormatInfo>オブジェクトから派生する場合、プロパティは解析操作で使用されるカレンダーを定義し<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>ます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1319">When formatting information is derived from a <xref:System.Globalization.DateTimeFormatInfo> object, the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property defines the calendar used in the parsing operation.</span></span>  
  
 <span data-ttu-id="46cae-1320">標準カルチャとは異なる設定でカスタマイズされた<xref:System.Globalization.DateTimeFormatInfo>オブジェクトを使用して日付と時刻の文字列を解析する場合は、 <xref:System.DateTime.ParseExact%2A> <xref:System.DateTime.Parse%2A>メソッドの代わりにメソッドを使用して、正常に変換できる可能性を向上させます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1320">If you parse a date and time string by using a <xref:System.Globalization.DateTimeFormatInfo> object with customized settings that are different from those of a standard culture, use the <xref:System.DateTime.ParseExact%2A> method instead of the <xref:System.DateTime.Parse%2A> method to improve the chances for a successful conversion.</span></span> <span data-ttu-id="46cae-1321">非標準の日付と時刻の文字列は複雑で解析が困難な場合があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1321">A non-standard date and time string can be complicated and difficult to parse.</span></span> <span data-ttu-id="46cae-1322">メソッド<xref:System.DateTime.Parse%2A>は、いくつかの暗黙的な解析パターンを使用して文字列を解析しようとしますが、これらはすべて失敗する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1322">The <xref:System.DateTime.Parse%2A> method tries to parse a string with several implicit parse patterns, all of which might fail.</span></span> <span data-ttu-id="46cae-1323">これに対して<xref:System.DateTime.ParseExact%2A> 、メソッドでは、成功する可能性がある1つ以上の正確な解析パターンを明示的に指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1323">In contrast, the <xref:System.DateTime.ParseExact%2A> method requires you to explicitly designate one or more exact parse patterns that are likely to succeed.</span></span> <span data-ttu-id="46cae-1324">詳細については、「」 <xref:System.Globalization.DateTimeFormatInfo>トピックの「DateTimeFormatInfo and 動的データ」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1324">For more information, see the "DateTimeFormatInfo and Dynamic Data" section in the <xref:System.Globalization.DateTimeFormatInfo> topic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="46cae-1325">特定のカルチャの書式指定規則は動的であり、変更される可能性があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1325">Note that the formatting conventions for a particular culture are dynamic and can be subject to change.</span></span> <span data-ttu-id="46cae-1326">これは、次のいずれかが発生した場合に、既定の (現在の) カルチャの<xref:System.IFormatProvider>書式指定規則に依存する、またはインバリアントカルチャ以外のカルチャを表すオブジェクトを指定する解析操作が予期せず失敗することを意味します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1326">This means that parsing operations that depend on the formatting conventions of the default (current) culture or that specify an <xref:System.IFormatProvider> object that represents a culture other than the invariant culture can unexpectedly fail if any of the following occurs:</span></span>  
>   
> -   <span data-ttu-id="46cae-1327">カルチャ固有のデータは、.NET Framework のメジャーバージョンまたはマイナーバージョン間で変更されるか、.NET Framework の既存のバージョンに対する更新の結果として変更されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1327">The culture-specific data has changed between major or minor versions of the .NET Framework or as the result of an update to the existing version of the .NET Framework.</span></span>  
> -   <span data-ttu-id="46cae-1328">カルチャ固有のデータにはユーザー設定が反映されますが、これはマシン間またはセッション間で異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1328">The culture-specific data reflects user preferences, which can vary from machine to machine or session to session.</span></span>  
> -   <span data-ttu-id="46cae-1329">カルチャ固有のデータは、標準カルチャまたはカスタムカルチャの設定をオーバーライドする置換カルチャを表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1329">The culture-specific data represents a replacement culture that overrides the settings of a standard culture or a custom culture.</span></span>  
>   
>  <span data-ttu-id="46cae-1330">カルチャデータの変更に関連付けられたデータと時刻文字列の解析に問題が発生しないようにするには、インバリアントカルチャを使用して日付と<xref:System.DateTime.ParseExact%2A>時刻<xref:System.DateTime.TryParseExact%2A>の文字列を解析するか、メソッドまたはメソッドを呼び出して正確な形式を指定します。解析する文字列の。</span><span class="sxs-lookup"><span data-stu-id="46cae-1330">To prevent the difficulties in parsing data and time strings that are associated with changes in cultural data, you can parse date and time strings by using the invariant culture, or you can call the <xref:System.DateTime.ParseExact%2A> or <xref:System.DateTime.TryParseExact%2A> method and specify the exact format of the string to be parsed.</span></span> <span data-ttu-id="46cae-1331">日付と時刻のデータをシリアル化および逆シリアル化する場合は、インバリアントカルチャの書式指定規則を使用するか、バイナリ形式<xref:System.DateTime>で値をシリアル化および逆シリアル化することができます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1331">If you are serializing and deserializing date and time data, you can either use the formatting conventions of the invariant culture, or you can serialize and deserialize the <xref:System.DateTime> value in a binary format.</span></span>  
>   
>  <span data-ttu-id="46cae-1332">詳細については、「」トピックの「動的カルチャ<xref:System.Globalization.CultureInfo>データ」セクションと「DateTime 値の保持」セクション<xref:System.DateTime>を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1332">For more information see the "Dynamic culture data" section in the <xref:System.Globalization.CultureInfo> topic and the "Persisting DateTime values" section in the <xref:System.DateTime> topic.</span></span>  
  
<a name="Styles"></a>   
### <a name="parsing-and-style-elements"></a><span data-ttu-id="46cae-1333">解析とスタイル要素</span><span class="sxs-lookup"><span data-stu-id="46cae-1333">Parsing and style elements</span></span>  
 <span data-ttu-id="46cae-1334">すべて<xref:System.DateTime.Parse%2A>のオーバーロードは、入力文字列 (次の表ので`s`表されます) の先頭、内部、または末尾の空白文字を無視します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1334">All <xref:System.DateTime.Parse%2A> overloads ignore leading, inner, or trailing white-space characters in the input string (which is represented by `s` in the following table).</span></span> <span data-ttu-id="46cae-1335">日付と時刻は、先頭と末尾の番号記号 ("#"、U + 0023) のペアで囲むことができ、1つ以上の NULL 文字 (U + 0000) で trailed できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1335">The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ("#", U+0023), and can be trailed with one or more NULL characters (U+0000).</span></span>  
  
 <span data-ttu-id="46cae-1336">また、 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>オーバーロードには、 <xref:System.Globalization.DateTimeStyles>列挙`styles`体の1つ以上のメンバーで構成されるパラメーターがあります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1336">In addition, the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload has a `styles` parameter that consists of one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration.</span></span> <span data-ttu-id="46cae-1337">このパラメーターは、 `s`をどのように解釈するか、および解析`s`操作を日付と時刻に変換する方法を定義します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1337">This parameter defines how `s` should be interpreted and how the parse operation should convert `s` to a date and time.</span></span> <span data-ttu-id="46cae-1338">次の表では、解析操作<xref:System.Globalization.DateTimeStyles>における各メンバーの効果について説明します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1338">The following table describes the effect of each <xref:System.Globalization.DateTimeStyles> member on the parse operation.</span></span>  
  
|<span data-ttu-id="46cae-1339">DateTimeStyles メンバー</span><span class="sxs-lookup"><span data-stu-id="46cae-1339">DateTimeStyles member</span></span>|<span data-ttu-id="46cae-1340">変換に対する影響</span><span class="sxs-lookup"><span data-stu-id="46cae-1340">Effect on conversion</span></span>|  
|---------------------------|--------------------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="46cae-1341">を`s`解析し、必要に応じて、次のように UTC に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1341">Parses `s` and, if necessary, converts it to UTC, as follows:</span></span><br /><br /> <span data-ttu-id="46cae-1342"><xref:System.Globalization.DateTimeStyles.AssumeLocal> `styles` `s` <xref:System.DateTime> <xref:System.DateTime.ToUniversalTime%2A> -にタイムゾーンオフセットが含まれている場合、またはにタイムゾーン情報が含まれておらず、フラグが含まれている場合、メソッドは文字列を解析し、を呼び出して、返された値をに変換します。 `s`UTC。 <xref:System.DateTime.Kind%2A>プロパティをに<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1342">-   If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span><br /><span data-ttu-id="46cae-1343"><xref:System.Globalization.DateTimeStyles.AssumeUniversal> `s` `styles` -が UTC を表すことを<xref:System.DateTime>示している場合、またはにタイムゾーン情報が含まれておらず、フラグが含まれている場合、メソッドは文字列を解析し、返されたにタイムゾーン変換を実行しません。 `s`値を指定し、 <xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>に設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1343">-   If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span><br /><span data-ttu-id="46cae-1344">-その他のすべての場合、フラグは無効です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1344">-   In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="46cae-1345">この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1345">This value is ignored.</span></span> <span data-ttu-id="46cae-1346">内部の空白文字は、常にの日付と時刻の`s`要素で許可されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1346">Inner white space is always permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="46cae-1347">この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1347">This value is ignored.</span></span> <span data-ttu-id="46cae-1348">先頭の空白文字は、常にの日付と時刻の`s`要素で許可されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1348">Leading white space is always permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="46cae-1349">この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1349">This value is ignored.</span></span> <span data-ttu-id="46cae-1350">の日付と時刻の要素では、末尾の`s`空白文字が常に許可されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1350">Trailing white space is always permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="46cae-1351">に、 `s`先頭、内部、および末尾の空白を含めることができることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1351">Specifies that `s` may contain leading, inner, and trailing white spaces.</span></span> <span data-ttu-id="46cae-1352">これが既定の動作です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1352">This is the default behavior.</span></span> <span data-ttu-id="46cae-1353"><xref:System.Globalization.DateTimeStyles> など<xref:System.Globalization.DateTimeStyles.None>、より制限の厳しい列挙値を指定することによってオーバーライドすることはできません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1353">It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value such as <xref:System.Globalization.DateTimeStyles.None>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="46cae-1354">にタイムゾーン`s`情報がない場合に、現地時刻と見なされるように指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1354">Specifies that if `s` lacks any time zone information, local time is assumed.</span></span> <span data-ttu-id="46cae-1355">フラグが指定されてい<xref:System.DateTime.Kind%2A>ない限り、戻り<xref:System.DateTime>値のプロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>に設定されます。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal></span><span class="sxs-lookup"><span data-stu-id="46cae-1355">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="46cae-1356">にタイムゾーン`s`情報がない場合、UTC が想定されることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1356">Specifies that if `s` lacks any time zone information, UTC is assumed.</span></span> <span data-ttu-id="46cae-1357">フラグが存在しない場合、メソッドは、返さ<xref:System.DateTime>れた値を UTC から現地時刻に<xref:System.DateTime.Kind%2A>変換し<xref:System.DateTimeKind.Local?displayProperty=nameWithType>、そのプロパティをに設定します。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal></span><span class="sxs-lookup"><span data-stu-id="46cae-1357">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="46cae-1358">有効ですが、この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1358">Although valid, this value is ignored.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="46cae-1359">タイムゾーン情報を含む文字列の場合、は、その<xref:System.DateTime> <xref:System.DateTime.Kind%2A>プロパティがに<xref:System.DateTimeKind.Local?displayProperty=nameWithType>設定された日付と時刻の文字列を、現地時刻を表す値に変換しないように試みます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1359">For strings that contain time zone information, tries to prevent the conversion of a date and time string to a <xref:System.DateTime> value that represents a local time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-1360">通常、このような文字列は、 <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>メソッドを呼び出し、"o"、"r"、または "u" 標準書式指定子を使用することによって作成されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1360">Typically, such a string is created by calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method and by using the "o", "r", or "u" standard format specifier.</span></span>|  

<a name="kind"></a>   
### <a name="the-return-value-and-datetimekind"></a><span data-ttu-id="46cae-1361">戻り値と DateTime. Kind</span><span class="sxs-lookup"><span data-stu-id="46cae-1361">The return value and DateTime.Kind</span></span>

<span data-ttu-id="46cae-1362">オーバーロード`DateTime.Parse`は、タイム<xref:System.DateTime>ゾーン情報<xref:System.DateTime.Kind>を含むプロパティを持つ値を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1362">The `DateTime.Parse` overloads return a <xref:System.DateTime> value whose <xref:System.DateTime.Kind> property includes time zone information.</span></span> <span data-ttu-id="46cae-1363">時刻が次のように指定されている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1363">It can indicate that the time is:</span></span>

- <span data-ttu-id="46cae-1364">協定世界時 (<xref:System.DateTimeKind.Utc?displayProperty=fullName>)。</span><span class="sxs-lookup"><span data-stu-id="46cae-1364">Coordinated Universal Time (<xref:System.DateTimeKind.Utc?displayProperty=fullName>).</span></span>
- <span data-ttu-id="46cae-1365">ローカルタイムゾーンの時刻 (<xref:System.DateTimeKind.Local?displayProperty=fullName>)。</span><span class="sxs-lookup"><span data-stu-id="46cae-1365">The time in the local time zone (<xref:System.DateTimeKind.Local?displayProperty=fullName>).</span></span>
- <span data-ttu-id="46cae-1366">不明なタイムゾーンの時刻 (xref: Datetimekind.utc? displayProperty = fullName >)。</span><span class="sxs-lookup"><span data-stu-id="46cae-1366">The time in an unknown time zone (xref:System.DateTimeKind.Unspecified?displayProperty=fullName>).</span></span>
 
 <span data-ttu-id="46cae-1367">一般に、 <xref:System.DateTime.Parse%2A>メソッドは、 <xref:System.DateTime> <xref:System.DateTime.Kind%2A>プロパティがで<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>あるオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1367">Generally, the <xref:System.DateTime.Parse%2A> method returns a <xref:System.DateTime> object whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-1368">ただし、メソッド<xref:System.DateTime.Parse%2A>は、パラメーター `s`と`styles`パラメーターの値に応じて、タイムゾーン<xref:System.DateTime.Kind%2A>の変換を実行し、プロパティの値を別の値に設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1368">However, the <xref:System.DateTime.Parse%2A> method may also perform time zone conversion and set the value of the <xref:System.DateTime.Kind%2A> property differently, depending on the values of the `s` and `styles` parameters:</span></span>  
  
|<span data-ttu-id="46cae-1369">If</span><span class="sxs-lookup"><span data-stu-id="46cae-1369">If</span></span>|<span data-ttu-id="46cae-1370">タイムゾーンの変換</span><span class="sxs-lookup"><span data-stu-id="46cae-1370">Time zone conversion</span></span>|<span data-ttu-id="46cae-1371">Kind プロパティ</span><span class="sxs-lookup"><span data-stu-id="46cae-1371">Kind property</span></span>|  
|--------|--------------------------|-------------------|  
|<span data-ttu-id="46cae-1372">`s`タイムゾーン情報を格納します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1372">`s` contains time zone information.</span></span>|<span data-ttu-id="46cae-1373">日付と時刻は、ローカルタイムゾーンの時刻に変換されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1373">The date and time is converted to the time in the local time zone.</span></span>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|  
|<span data-ttu-id="46cae-1374">`s``styles` に<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>はタイムゾーン情報が含まれ、にはフラグが含まれています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1374">`s` contains time zone information, and `styles` includes the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag.</span></span>|<span data-ttu-id="46cae-1375">日付と時刻は世界協定時刻 (UTC) に変換されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1375">The date and time is converted to Coordinated Universal Time (UTC).</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
|<span data-ttu-id="46cae-1376">`s`には、Z または GMT のタイムゾーン`styles`指定子<xref:System.Globalization.DateTimeStyles.RoundtripKind>が含まれ、フラグが含まれています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1376">`s` contains the Z or GMT time zone designator, and `styles` includes the <xref:System.Globalization.DateTimeStyles.RoundtripKind> flag.</span></span>|<span data-ttu-id="46cae-1377">日付と時刻は UTC として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1377">The date and time are interpreted as UTC.</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
  
 <span data-ttu-id="46cae-1378">次の例では、タイムゾーン情報を含む日付文字列をローカルタイムゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1378">The following example converts date strings that contain time zone information to the time in the local time zone:</span></span>  
  
 [!code-csharp[System.DateTime.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse2.cs#2)]
 [!code-vb[System.DateTime.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse2.vb#2)]  

  <span data-ttu-id="46cae-1379">フラグを使用して、書式設定および解析操作中<xref:System.DateTime.Kind%2A>に、日付と時刻のプロパティの値を保持することもできます。 <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-1379">You can also preserve the value of a date and time's <xref:System.DateTime.Kind%2A> property during a formatting and parsing operation by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="46cae-1380">次の例は、" <xref:System.Globalization.DateTimeStyles.RoundtripKind> o"、"r" <xref:System.DateTime> 、または "u" 書式指定子を使用して、文字列に変換される値に対するフラグの影響を示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1380">The following example illustrates how the <xref:System.Globalization.DateTimeStyles.RoundtripKind> flag affects the parsing operation on <xref:System.DateTime> values that are converted to strings by using the "o", "r", or "u" format specifier.</span></span>  
  
 [!code-csharp[System.DateTime.Parse#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse5.cs#5)]
 [!code-vb[System.DateTime.Parse#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse5.vb#5)]  
  
## Examples

<span data-ttu-id="46cae-1381">この記事の「 `DateTime.Parse` [解説](#remarks)」セクションと個々`DateTime.Parse`のオーバーロードに関するドキュメントでは、メソッドを呼び出す多くの例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1381">Numerous examples that call the `DateTime.Parse` method are interspersed throughout the [Remarks](#remarks) section of this article and in the documentation for the individual `DateTime.Parse` overloads.</span></span>

[!INCLUDE[interactive-note](~/includes/csharp-interactive-with-utc-note.md)]

<span data-ttu-id="46cae-1382">また、サンプル`DateTime.Parse`の完全なセットをダウンロードすることもできます。これは[のC# .net core 2.0 プロジェクト](https://github.com/dotnet/samples/raw/master/snippets/csharp/downloads/api/System/DateTime.Parse.zip)に含まれており、 [Visual Basic 用の .net core 2.0 プロジェクト](https://github.com/dotnet/samples/raw/master/snippets/visualbasic/downloads/api/System/DateTime.Parse.zip)には、 [dotnet/samples GitHub リポジトリ](https://github.com/dotnet/samples)からダウンロードできます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1382">You can also download a complete set of `DateTime.Parse` examples, which are included in a [.NET Core 2.0 project for C#](https://github.com/dotnet/samples/raw/master/snippets/csharp/downloads/api/System/DateTime.Parse.zip) and a [.NET Core 2.0 project for Visual Basic](https://github.com/dotnet/samples/raw/master/snippets/visualbasic/downloads/api/System/DateTime.Parse.zip), from the [dotnet/samples GitHub repository](https://github.com/dotnet/samples).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)" />
        <altmember cref="Overload:System.DateTime.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTime Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; DateTime" Usage="System.DateTime.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="46cae-1383">変換する日時を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1383">A string that contains a date and time to convert.</span></span> <span data-ttu-id="46cae-1384">詳細については、「[解析する文字列](#StringToParse)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1384">See [The string to parse](#StringToParse) for more information.</span></span></param>
        <summary><span data-ttu-id="46cae-1385">現在のスレッド カルチャの書式規則を使用して、日付と時刻の文字列形式を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1385">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using the conventions of the current thread culture.</span></span></summary>
        <returns><span data-ttu-id="46cae-1386"><paramref name="s" /> に含まれる日時と等価のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1386">An object that is equivalent to the date and time contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="46cae-1387">に`s`タイムゾーン情報が含まれている場合、この<xref:System.DateTime.Kind%2A>メソッドは<xref:System.DateTimeKind.Local?displayProperty=nameWithType> 、プロパティがである<xref:System.DateTime>値を`s`返し、の日付と時刻を現地時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1387">If `s` contains time zone information, this method returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> and converts the date and time in `s` to local time.</span></span> <span data-ttu-id="46cae-1388">それ以外の場合、タイムゾーンの変換は実行<xref:System.DateTime>され<xref:System.DateTime.Kind%2A>ず、 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>プロパティがである値が返されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1388">Otherwise, it performs no time zone conversion and returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span>

<span data-ttu-id="46cae-1389">このオーバーロードは、現在`s`のカルチャの書式指定規則を使用して解析を試みます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1389">This overload attempts to parse `s` by using the formatting conventions of the current culture.</span></span> <span data-ttu-id="46cae-1390">現在のカルチャは、 <xref:System.Globalization.CultureInfo.CurrentCulture>プロパティによって示されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1390">The current culture is indicated by the <xref:System.Globalization.CultureInfo.CurrentCulture> property.</span></span> <span data-ttu-id="46cae-1391">特定のカルチャの書式指定規則を使用して文字列を解析する<xref:System.DateTime.Parse(System.String,System.IFormatProvider)>に<xref:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)>は、またはのオーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1391">To parse a string using the formatting conventions of a specific culture, call the <xref:System.DateTime.Parse(System.String,System.IFormatProvider)> or the <xref:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)> overloads.</span></span>

<span data-ttu-id="46cae-1392">このオーバーロードは、style `s`を使用<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>して解析を試みます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1392">This overload attempts to parse `s` by using <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType> style.</span></span>

## <a name="example"></a><span data-ttu-id="46cae-1393">例</span><span class="sxs-lookup"><span data-stu-id="46cae-1393">Example</span></span>

<span data-ttu-id="46cae-1394">次の例では、複数の日付と時刻の値の文字列形式を解析します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1394">The following example parses the string representation of several date and time values by:</span></span>

- <span data-ttu-id="46cae-1395">既定の書式プロバイダーを使用します。これは、サンプル出力の生成に使用されるコンピューターの現在のスレッドカルチャの書式指定規則を提供します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1395">Using the default format provider, which provides the formatting conventions of the current thread culture of the computer used to produce the example output.</span></span> <span data-ttu-id="46cae-1396">この例の出力には、en-us カルチャの書式指定規則が反映されています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1396">The output from this example reflects the formatting conventions of the en-US culture.</span></span>

- <span data-ttu-id="46cae-1397">既定のスタイル値 () <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWIthType>を使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1397">Using the default style value, which is <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWIthType>.</span></span> 

<span data-ttu-id="46cae-1398">この例外は<xref:System.FormatException> 、メソッドが他のカルチャの書式指定規則を使用して日付と時刻の文字列形式を解析しようとした場合にスローされる例外を処理します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1398">It handles the <xref:System.FormatException> exception that is thrown when the method tries to parse the string representation of a date and time by using some other culture's formatting conventions.</span></span> <span data-ttu-id="46cae-1399">また、現在のスレッドカルチャの書式指定規則を使用しない日付と時刻の値を正常に解析する方法も示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1399">It also shows how to successfully parse a date and time value that does not use the formatting conventions of the current thread culture.</span></span>  
  
 [!code-csharp[System.DateTime.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse1.cs#1)]
 [!code-vb[System.DateTime.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse1.vb#1)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46cae-1400"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1400"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="46cae-1401"><paramref name="s" /> に日付と時刻の有効な文字列形式が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1401"><paramref name="s" /> does not contain a valid string representation of a date and time.</span></span></exception>
        <altmember cref="Overload:System.DateTime.TryParse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="46cae-1402">.NET Framework における日付と時刻文字列の解析の解析</span><span class="sxs-lookup"><span data-stu-id="46cae-1402">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="46cae-1403">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1403">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="46cae-1404">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1404">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTime Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; DateTime" Usage="System.DateTime.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="46cae-1405">変換する日時を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1405">A string that contains a date and time to convert.</span></span> <span data-ttu-id="46cae-1406">詳細については、「[解析する文字列](#StringToParse)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1406">See [The string to parse](#StringToParse) for more information.</span></span></param>
        <param name="provider"><span data-ttu-id="46cae-1407"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1407">An object that supplies culture-specific format information about <paramref name="s" />.</span></span>  <span data-ttu-id="46cae-1408">「[解析およびカルチャの規則](#Culture)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1408">See [Parsing and cultural conventions](#Culture)</span></span></param>
        <summary><span data-ttu-id="46cae-1409">カルチャ固有の書式情報を使用して、日付と時刻の文字列形式を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1409">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="46cae-1410"><paramref name="s" /> で指定された書式に従って表記された、<paramref name="provider" /> に含まれる日時と等価のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1410">An object that is equivalent to the date and time contained in <paramref name="s" /> as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="46cae-1411">に`s`タイムゾーン情報が含まれている場合、この<xref:System.DateTime.Kind%2A>メソッドは<xref:System.DateTimeKind.Local?displayProperty=nameWithType> 、プロパティがである<xref:System.DateTime>値を`s`返し、の日付と時刻を現地時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1411">If `s` contains time zone information, this method returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> and converts the date and time in `s` to local time.</span></span> <span data-ttu-id="46cae-1412">それ以外の場合、タイムゾーンの変換は実行<xref:System.DateTime>され<xref:System.DateTime.Kind%2A>ず、 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>プロパティがである値が返されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1412">Otherwise, it performs no time zone conversion and returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span>

<span data-ttu-id="46cae-1413">このオーバーロードは、 `s` <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>スタイルを使用して解析を試みます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1413">This overload attempts to parse `s` by using the <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType> style.</span></span>

## <a name="example"></a><span data-ttu-id="46cae-1414">例</span><span class="sxs-lookup"><span data-stu-id="46cae-1414">Example</span></span>

<span data-ttu-id="46cae-1415">次の例では、en-us、fr-fr、および de の各カルチャの規則を使用して、日付文字列の配列を解析します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1415">The following example parses an array of date strings by using the conventions of the en-US, fr-FR, and de-DE cultures.</span></span> <span data-ttu-id="46cae-1416">この例では、1つの日付の文字列形式が、カルチャによって異なる方法で解釈されることを示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1416">It demonstrates that the string representations of a single date can be interpreted differently across different cultures.</span></span>  
  
[!code-csharp[System.DateTime.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse3.cs#3)]
[!code-vb[System.DateTime.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46cae-1417"><paramref name="s" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1417"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="46cae-1418"><paramref name="s" /> に日付と時刻の有効な文字列形式が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1418"><paramref name="s" /> does not contain a valid string representation of a date and time.</span></span></exception>
        <altmember cref="Overload:System.DateTime.TryParse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="46cae-1419">.NET Framework における日付と時刻文字列の解析の解析</span><span class="sxs-lookup"><span data-stu-id="46cae-1419">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="46cae-1420">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1420">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="46cae-1421">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1421">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTime Parse (ReadOnlySpan&lt;char&gt; s, IFormatProvider provider = null, System.Globalization.DateTimeStyles styles = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional provider As IFormatProvider = null, Optional styles As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTime" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.Parse (s, provider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="46cae-1422">解析する文字列を含むメモリ範囲。</span><span class="sxs-lookup"><span data-stu-id="46cae-1422">The memory span that contains the string to parse.</span></span> <span data-ttu-id="46cae-1423">詳細については、「[解析する文字列](#StringToParse)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1423">See [The string to parse](#StringToParse) for more information.</span></span></param>
        <param name="provider"><span data-ttu-id="46cae-1424"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1424">An object that supplies culture-specific format information about <paramref name="s" />.</span></span>  <span data-ttu-id="46cae-1425">「[解析およびカルチャの規則](#Culture)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1425">See [Parsing and cultural conventions](#Culture)</span></span></param>
        <param name="styles"><span data-ttu-id="46cae-1426">解析操作を成功させるために <paramref name="s" /> で使用できるスタイル要素を示し、現在のタイム ゾーンまたは現在の日付に関連して解析した日付を解釈する方法を定義する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="46cae-1426">A bitwise combination of the enumeration values that indicates the style elements that can be present in <paramref name="s" /> for the parse operation to succeed, and that defines how to interpret the parsed date in relation to the current time zone or the current date.</span></span> <span data-ttu-id="46cae-1427">通常指定する値は、<see cref="F:System.Globalization.DateTimeStyles.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1427">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <summary><span data-ttu-id="46cae-1428">カルチャ固有の書式情報と書式スタイルを使用して、日付と時刻の文字列形式を含むメモリ範囲を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1428">Converts a memory span that contains string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using culture-specific format information and a formatting style.</span></span></summary>
        <returns><span data-ttu-id="46cae-1429"><paramref name="provider" /> および <paramref name="styles" /> で指定された書式に従って表記された <paramref name="s" /> に含まれる日時と等価のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1429">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="provider" /> and <paramref name="styles" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="46cae-1430"><paramref name="s" /> に日付と時刻の有効な文字列形式が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1430"><paramref name="s" /> does not contain a valid string representation of a date and time.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46cae-1431"><paramref name="styles" /> に <see cref="T:System.Globalization.DateTimeStyles" /> 値の正しくない組み合わせが含まれています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1431"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span> <span data-ttu-id="46cae-1432">たとえば、<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> と <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" /> の両方です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1432">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTime Parse (string s, IFormatProvider provider, System.Globalization.DateTimeStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime Parse(string s, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider, styles As DateTimeStyles) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime Parse(System::String ^ s, IFormatProvider ^ provider, System::Globalization::DateTimeStyles styles);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.Parse (s, provider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="46cae-1433">変換する日時を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1433">A string that contains a date and time to convert.</span></span> <span data-ttu-id="46cae-1434">詳細については、「[解析する文字列](#StringToParse)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1434">See [The string to parse](#StringToParse) for more information.</span></span></param>
        <param name="provider"><span data-ttu-id="46cae-1435"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1435">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span>  <span data-ttu-id="46cae-1436">「[解析およびカルチャの規則](#Culture)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1436">See [Parsing and cultural conventions](#Culture)</span></span></param>
        <param name="styles"><span data-ttu-id="46cae-1437">解析操作を成功させるために <paramref name="s" /> で使用できるスタイル要素を示し、現在のタイム ゾーンまたは現在の日付に関連して解析した日付を解釈する方法を定義する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="46cae-1437">A bitwise combination of the enumeration values that indicates the style elements that can be present in <paramref name="s" /> for the parse operation to succeed, and that defines how to interpret the parsed date in relation to the current time zone or the current date.</span></span> <span data-ttu-id="46cae-1438">通常指定する値は、<see cref="F:System.Globalization.DateTimeStyles.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1438">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <summary><span data-ttu-id="46cae-1439">カルチャ固有の書式情報と書式スタイルを使用して、日付と時刻の文字列形式を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1439">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using culture-specific format information and a formatting style.</span></span></summary>
        <returns><span data-ttu-id="46cae-1440"><paramref name="provider" /> および <paramref name="styles" /> で指定された書式に従って表記された <paramref name="s" /> に含まれる日時と等価のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1440">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="provider" /> and <paramref name="styles" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="46cae-1441">このメソッドオーバーロードは、の日付と時刻`s`を変換し<xref:System.DateTime.Kind%2A> 、返され<xref:System.DateTime>た値のプロパティを次のように設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1441">This method overload converts the date and time in `s` and sets the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value as follows:</span></span>

|<span data-ttu-id="46cae-1442">If</span><span class="sxs-lookup"><span data-stu-id="46cae-1442">If</span></span> |<span data-ttu-id="46cae-1443">タイムゾーンの変換</span><span class="sxs-lookup"><span data-stu-id="46cae-1443">Time zone conversion</span></span>|<span data-ttu-id="46cae-1444">Kind プロパティ</span><span class="sxs-lookup"><span data-stu-id="46cae-1444">Kind property</span></span>|   
|-----|-----|-----|  
|<span data-ttu-id="46cae-1445">`s`タイムゾーン情報が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1445">`s` contains no time zone information.</span></span>|<span data-ttu-id="46cae-1446">なし。</span><span class="sxs-lookup"><span data-stu-id="46cae-1446">None.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|
|<span data-ttu-id="46cae-1447">`s`タイムゾーン情報を格納します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1447">`s` contains time zone information.</span></span>|<span data-ttu-id="46cae-1448">ローカルタイムゾーンの時刻に</span><span class="sxs-lookup"><span data-stu-id="46cae-1448">To the time in the local time zone</span></span>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|
|<span data-ttu-id="46cae-1449">`s`にはタイムゾーン情報が含まれており<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> 、' スタイルにはフラグが含まれています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1449">`s` contains time zone information, and \`styles includes the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag.</span></span>|<span data-ttu-id="46cae-1450">協定世界時 (UTC)</span><span class="sxs-lookup"><span data-stu-id="46cae-1450">To Coordinated Universal Time (UTC)</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|
|<span data-ttu-id="46cae-1451">`s`には、Z または GMT のタイムゾーン`styles`指定子<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>が含まれ、が含まれます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1451">`s` contains the Z or GMT time zone designator, and `styles` includes the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="46cae-1452">なし。</span><span class="sxs-lookup"><span data-stu-id="46cae-1452">None.</span></span>|<xref:System.DateTimeKind.Utc>| 

## <a name="example"></a><span data-ttu-id="46cae-1453">例</span><span class="sxs-lookup"><span data-stu-id="46cae-1453">Example</span></span>

<span data-ttu-id="46cae-1454">次の例では<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> 、メソッドを示し、結果<xref:System.DateTime>の<xref:System.DateTime.Kind%2A>値のプロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1454">The following example demonstrates the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method and displays the value of the <xref:System.DateTime.Kind%2A> property of the resulting <xref:System.DateTime> values.</span></span>  
  
[!code-csharp[System.DateTime.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse4.cs#4)]
[!code-vb[System.DateTime.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46cae-1455"><paramref name="s" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1455"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="46cae-1456"><paramref name="s" /> に日付と時刻の有効な文字列形式が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1456"><paramref name="s" /> does not contain a valid string representation of a date and time.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46cae-1457"><paramref name="styles" /> に <see cref="T:System.Globalization.DateTimeStyles" /> 値の正しくない組み合わせが含まれています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1457"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span> <span data-ttu-id="46cae-1458">たとえば、<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> と <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" /> の両方です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1458">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span></span></exception>
        <altmember cref="Overload:System.DateTime.TryParse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="46cae-1459">.NET Framework における日付と時刻文字列の解析の解析</span><span class="sxs-lookup"><span data-stu-id="46cae-1459">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="46cae-1460">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1460">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="46cae-1461">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1461">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-round-trip-date-and-time-values.md"><span data-ttu-id="46cae-1462">方法 : 日付と時刻の値をラウンドトリップさせる</span><span class="sxs-lookup"><span data-stu-id="46cae-1462">How to: Round-trip Date and Time Values</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="46cae-1463">指定した文字列形式の日付と時刻を等価の <see cref="T:System.DateTime" /> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1463">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent.</span></span> <span data-ttu-id="46cae-1464">文字列形式の書式は、指定した書式と完全に一致する必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1464">The format of the string representation must match a specified format exactly or an exception is thrown.</span></span></summary>
        <altmember cref="Overload:System.DateTime.TryParseExact" />
        <remarks>
          <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

         ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (string s, string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(string s, string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As String, format As String, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ParseExact(System::String ^ s, System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider -&gt; DateTime" Usage="System.DateTime.ParseExact (s, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="46cae-1465">変換する日時を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1465">A string that contains a date and time to convert.</span></span></param>
        <param name="format"><span data-ttu-id="46cae-1466"><paramref name="s" /> の必要な形式を定義する形式指定子。</span><span class="sxs-lookup"><span data-stu-id="46cae-1466">A format specifier that defines the required format of <paramref name="s" />.</span></span> <span data-ttu-id="46cae-1467">詳細については、「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1467">For more information, see the Remarks section.</span></span></param>
        <param name="provider"><span data-ttu-id="46cae-1468"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1468">An object that supplies culture-specific format information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="46cae-1469">指定した書式とカルチャ固有の書式情報を使用して、指定した日付と時刻の文字列形式を等価の <see cref="T:System.DateTime" /> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1469">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format and culture-specific format information.</span></span> <span data-ttu-id="46cae-1470">文字列形式の書式は、指定した書式と完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1470">The format of the string representation must match the specified format exactly.</span></span></summary>
        <returns><span data-ttu-id="46cae-1471"><paramref name="format" /> および <paramref name="provider" /> で指定された書式に従って表記された <paramref name="s" /> に含まれる日時と等価のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1471">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1472">メソッド<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>は、日付の文字列形式を解析します。これは、 `format`パラメーターで定義された形式である必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1472">The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method parses the string representation of a date, which must be in the format defined by the `format` parameter.</span></span> <span data-ttu-id="46cae-1473">必要、\<日付 > と\<時間 > で指定された順序で表示される日付と時刻の文字列形式の要素`format`、および`s`で許可されている以外の空白があるないです`format`。</span><span class="sxs-lookup"><span data-stu-id="46cae-1473">It also requires that the \<Date> and \<Time> elements of the string representation of a date and time appear in the order specified by `format`, and that `s` have no white space other than that permitted by `format`.</span></span> <span data-ttu-id="46cae-1474">が`format`時刻要素のない日付を定義し、解析操作が成功した<xref:System.DateTime>場合、結果の値の時間は深夜 (00:00:00) になります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1474">If `format` defines a date with no time element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a time of midnight (00:00:00).</span></span> <span data-ttu-id="46cae-1475">で`format`日付要素が指定さ<xref:System.DateTime>れていない時間が定義され、解析操作が成功した場合、結果の値の日付はになります。`DateTime.Now.Date`</span><span class="sxs-lookup"><span data-stu-id="46cae-1475">If `format` defines a time with no date element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a date of `DateTime.Now.Date`.</span></span>  
  
 <span data-ttu-id="46cae-1476">が`s`特定のタイムゾーンの時刻を表しておらず、解析操作が成功し<xref:System.DateTime.Kind%2A>た場合、戻り<xref:System.DateTime>値の<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>プロパティはになります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1476">If `s` does not represent a time in a particular time zone and the parse operation succeeds, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-1477">が特定のタイム`format`ゾーンの時刻を表し、タイムゾーン情報が存在する場合`format` (たとえば、が "o"、"r"、または "u" の標準書式指定子に等しい場合、または "z"、"zz"、"zzz" が含まれている場合など)。 `s`カスタム書式指定子)、 <xref:System.DateTime.Kind%2A>戻り<xref:System.DateTime>値のプロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1477">If `s` does represent the time in a particular time zone and `format` allows time zone information to be present (for example, if `format` is equal to the "o", "r", or "u" standard format specifiers, or if it contains the "z", "zz", or "zzz" custom format specifiers), the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  

 <span data-ttu-id="46cae-1478">パラメーターは、1つの標準書式指定子、またはの必要な書式を定義する1つ以上の`s`カスタム書式指定子のいずれかを含む文字列です。 `format`</span><span class="sxs-lookup"><span data-stu-id="46cae-1478">The `format` parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of `s`.</span></span> <span data-ttu-id="46cae-1479">有効な書式指定コードの詳細については、「[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)」または「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1479">For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) or [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="46cae-1480">が`format` 、日付または時刻`provider`の区切り記号を含まないカスタム書式パターン ("yyyyMMddHHmm" など) である場合は、パラメーターにインバリアントカルチャを使用し、各カスタム書式指定子の幅の広い形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1480">If `format` is a custom format pattern that does not include date or time separators (such as "yyyyMMddHHmm"), use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="46cae-1481">たとえば、書式パターンで時間を指定する場合は、幅の狭い形式の "H" ではなく、広い形式の "HH" を指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1481">For example, if you want to specify hours in the format pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
 <span data-ttu-id="46cae-1482">で`s`使用される特定の日付と時刻の記号および文字列 (特定の言語での曜日の名前など) は、が標準形式`provider`であるかどうか`format`の`s`正確な形式として、パラメーターによって定義されます。指定子文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1482">The particular date and time symbols and strings (such as names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="46cae-1483">パラメーター `provider`には、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1483">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="46cae-1484">を解釈`s`するために使用するカルチャを表すオブジェクト。<xref:System.Globalization.CultureInfo></span><span class="sxs-lookup"><span data-stu-id="46cae-1484">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="46cae-1485">プロパティによって返されるオブジェクトは<xref:System.Globalization.DateTimeFormatInfo> 、の`s`シンボルと書式設定を定義します。 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-1485">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="46cae-1486">日付と時刻のデータの形式を定義するオブジェクト。<xref:System.Globalization.DateTimeFormatInfo></span><span class="sxs-lookup"><span data-stu-id="46cae-1486">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="46cae-1487">書式設定<xref:System.IFormatProvider>情報を<xref:System.IFormatProvider.GetFormat%2A>提供する<xref:System.Globalization.CultureInfo>オブジェクトまたは<xref:System.Globalization.DateTimeFormatInfo>オブジェクトのいずれかを返すメソッドを持つカスタム実装。</span><span class="sxs-lookup"><span data-stu-id="46cae-1487">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="46cae-1488"><xref:System.Globalization.CultureInfo>が`provider` の場合は、現在のカルチャに対応するオブジェクトが使用されます。`null`</span><span class="sxs-lookup"><span data-stu-id="46cae-1488">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1489">メソッドの<xref:System.DateTime.ParseExact%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1489">The following example demonstrates the <xref:System.DateTime.ParseExact%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.ParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/ParseExact1.cs#1)]
 [!code-vb[System.DateTime.ParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/ParseExact1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46cae-1490"><paramref name="s" /> または <paramref name="format" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1490"><paramref name="s" /> or <paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="46cae-1491"><paramref name="s" /> または <paramref name="format" /> が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1491"><paramref name="s" /> or <paramref name="format" /> is an empty string.</span></span>  
  
<span data-ttu-id="46cae-1492">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-1492">-or-</span></span> 
 <span data-ttu-id="46cae-1493"><paramref name="s" /> に、<paramref name="format" /> で指定されているパターンに対応する日付と時刻が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1493"><paramref name="s" /> does not contain a date and time that corresponds to the pattern specified in <paramref name="format" />.</span></span>  
  
<span data-ttu-id="46cae-1494">または</span><span class="sxs-lookup"><span data-stu-id="46cae-1494">-or-</span></span> 
<span data-ttu-id="46cae-1495"><paramref name="s" /> の時間の部分と AM/PM 指定子が一致していません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1495">The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="46cae-1496">では、解析対象の文字列<see cref="T:System.FormatException" />に1時間の部分と、アグリーメントに含まれていない AM/PM 指定子が含まれている場合、メソッドはをスローします。<see cref="Overload:System.DateTime.ParseExact" /> [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</span><span class="sxs-lookup"><span data-stu-id="46cae-1496">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.ParseExact" /> method throws a <see cref="T:System.FormatException" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="46cae-1497">以前の[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]バージョンでは、AM/PM 指定子は無視されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1497">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.TryParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="46cae-1498">.NET Framework における日付と時刻文字列の解析の解析</span><span class="sxs-lookup"><span data-stu-id="46cae-1498">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="46cae-1499">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1499">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="46cae-1500">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1500">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (ReadOnlySpan&lt;char&gt; s, ReadOnlySpan&lt;char&gt; format, IFormatProvider provider, System.Globalization.DateTimeStyles style = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), provider As IFormatProvider, Optional style As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTime" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.ParseExact (s, format, provider, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="style">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (ReadOnlySpan&lt;char&gt; s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; s, string[] formats, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As ReadOnlySpan(Of Char), formats As String(), provider As IFormatProvider, Optional style As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTime" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.ParseExact (s, formats, provider, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="style">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (string s, string format, IFormatProvider provider, System.Globalization.DateTimeStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(string s, string format, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As String, format As String, provider As IFormatProvider, style As DateTimeStyles) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ParseExact(System::String ^ s, System::String ^ format, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.ParseExact (s, format, provider, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="46cae-1501">変換する日付と時刻を格納した文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1501">A string containing a date and time to convert.</span></span></param>
        <param name="format"><span data-ttu-id="46cae-1502"><paramref name="s" /> の必要な形式を定義する形式指定子。</span><span class="sxs-lookup"><span data-stu-id="46cae-1502">A format specifier that defines the required format of <paramref name="s" />.</span></span> <span data-ttu-id="46cae-1503">詳細については、「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1503">For more information, see the Remarks section.</span></span></param>
        <param name="provider"><span data-ttu-id="46cae-1504"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1504">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="style"><span data-ttu-id="46cae-1505"><paramref name="s" />、<paramref name="s" /> に指定できるスタイル要素、または <paramref name="s" /> から <see cref="T:System.DateTime" /> 値への変換に関する追加情報を提供する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="46cae-1505">A bitwise combination of the enumeration values that provides additional information about <paramref name="s" />, about style elements that may be present in <paramref name="s" />, or about the conversion from <paramref name="s" /> to a <see cref="T:System.DateTime" /> value.</span></span> <span data-ttu-id="46cae-1506">通常指定する値は、<see cref="F:System.Globalization.DateTimeStyles.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1506">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <summary><span data-ttu-id="46cae-1507">指定した書式、カルチャ固有の書式情報、およびスタイルを使用して、指定した日付と時刻の文字列形式を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1507">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format, culture-specific format information, and style.</span></span> <span data-ttu-id="46cae-1508">文字列形式の書式は、指定した書式と完全に一致する必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1508">The format of the string representation must match the specified format exactly or an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="46cae-1509"><paramref name="format" />、<paramref name="provider" />、および <paramref name="style" /> で指定された書式に従って表記された <paramref name="s" /> に含まれる日時と等価のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1509">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="format" />, <paramref name="provider" />, and <paramref name="style" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1510">メソッド<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>は、日付の文字列形式を解析します。これは、 `format`パラメーターで定義された形式である必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1510">The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method parses the string representation of a date, which must be in a format defined by the `format` parameter.</span></span> <span data-ttu-id="46cae-1511">また、の`s`日付と時刻の要素は、で`format`指定された順序で表示される必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1511">It also requires that the date and time elements in `s` appear in the order specified by `format`.</span></span> <span data-ttu-id="46cae-1512">が`s`パラメーター `style`のパターンと一致しない場合、パラメーターで定義されたバリエーションがあると、メソッド<xref:System.FormatException>はをスローします。 `format`</span><span class="sxs-lookup"><span data-stu-id="46cae-1512">If `s` does not match the pattern of the `format` parameter, with any variations defined by the `style` parameter, the method throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="46cae-1513">これに対して<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> 、メソッドは、書式プロバイダーの<xref:System.Globalization.DateTimeFormatInfo>オブジェクトによって認識される形式のいずれかで、日付の文字列形式を解析します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1513">In contrast, the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="46cae-1514">また<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> 、メソッドを使用すると、の`s`日付と時刻の要素を任意の順序で表示できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1514">The <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method also allows the date and time elements in `s` to appear in any order.</span></span>  
  
 <span data-ttu-id="46cae-1515">パラメーターに`s`時刻のみが含まれ、日付が含まれていない場合は、 `style`パラメーターに<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>フラグが含まれていない限り、現在`DateTime.Date.MinValue`の日付が使用されます。この場合、既定の日付 () が使用されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1515">If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> flag, in which case the default date (`DateTime.Date.MinValue`) is used.</span></span> <span data-ttu-id="46cae-1516">パラメーターに`s`日付のみが含まれ、時刻が指定されていない場合は、深夜 (00:00:00) が使用されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1516">If the `s` parameter contains only a date and no time, midnight (00:00:00) is used.</span></span> <span data-ttu-id="46cae-1517">パラメーターでは、パラメーターに`s`先頭、内部、または末尾の空白文字を含めることができるかどうかも決定されます。 `style`</span><span class="sxs-lookup"><span data-stu-id="46cae-1517">The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters.</span></span>  
  
 <span data-ttu-id="46cae-1518">にタイムゾーン情報が含まれて`s`いない場合、返される<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> <xref:System.DateTime>オブジェクトのプロパティはになります。<xref:System.DateTime.Kind%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-1518">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-1519"><xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>この動作は、 <xref:System.DateTime.Kind%2A>プロパティが<xref:System.DateTime> である<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>値を返すフラグを使用するか、フラグとフラグを使用し<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>て変更できます。このフラグは、という値を返します。<xref:System.DateTime> <xref:System.DateTimeKind.Local?displayProperty=nameWithType><xref:System.DateTime.Kind%2A>プロパティが<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1519">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, or by using the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-1520">に`s`タイムゾーン情報が含まれている場合は、必要<xref:System.DateTime.Kind%2A>に応じて時刻が現地時刻に変換さ<xref:System.DateTime>れ、返され<xref:System.DateTimeKind.Local?displayProperty=nameWithType>たオブジェクトのプロパティがに設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1520">If `s` contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-1521">この動作は、 <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>協定世界時 (UTC) を現地時刻に変換しないようにするフラグを使用して、 <xref:System.DateTime.Kind%2A>プロパティをに<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>設定することによって変更できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1521">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag to not convert Coordinated Universal Time (UTC) to a local time and to set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="46cae-1522">パラメーター `format`は、 `s`パラメーターに必要なパターンを定義します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1522">The `format` parameter defines the required pattern of the `s` parameter.</span></span> <span data-ttu-id="46cae-1523">これは、[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)テーブルの1つ以上のカスタム書式指定子、または[標準の日時書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)の表から定義済みのパターンを識別する1つの標準書式指定子で構成されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1523">It can consist of either one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.</span></span>  
  
 <span data-ttu-id="46cae-1524">カスタム書式パターンで日付または時刻の区切り記号を使用しない場合は、 `provider`パラメーターにインバリアントカルチャを使用し、各カスタム書式指定子の幅が最も広い形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1524">If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="46cae-1525">たとえば、パターンに時間を指定する場合は、幅の狭い形式の "H" ではなく、広い形式の "HH" を指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1525">For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="46cae-1526">解析操作を成功`s`させるために1つの形式に準拠するように要求するの<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>ではなく、メソッドを呼び出して、複数の許可された形式を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1526">Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method and specify multiple permitted formats.</span></span> <span data-ttu-id="46cae-1527">これにより、解析操作が成功する可能性が高くなります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1527">This makes the parse operation more likely to succeed.</span></span>  
  
 <span data-ttu-id="46cae-1528">パラメーター `styles`には、で定義されて<xref:System.Globalization.DateTimeStyles> `format`いない空白をで`s`使用できるかどうかを決定する列挙体のメンバーが1つ以上含まれています。これは、解析操作の正確な動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1528">The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation.</span></span> <span data-ttu-id="46cae-1529">次の表では、 <xref:System.Globalization.DateTimeStyles>列挙体の各メンバーが<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>メソッドの操作に与える影響について説明します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1529">The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method.</span></span>  
  
|<span data-ttu-id="46cae-1530">DateTimeStyles メンバー</span><span class="sxs-lookup"><span data-stu-id="46cae-1530">DateTimeStyles member</span></span>|<span data-ttu-id="46cae-1531">説明</span><span class="sxs-lookup"><span data-stu-id="46cae-1531">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="46cae-1532">を`s`解析し、必要に応じて UTC に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1532">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="46cae-1533"><xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> `styles` `s` <xref:System.DateTime> <xref:System.DateTime.ToUniversalTime%2A>にタイムゾーンオフセットが含まれている場合、またはにタイムゾーン情報が含まれておらず、フラグが含まれている場合、メソッドは文字列を解析し、を呼び出して、返された値を UTC に変換します。 `s`、 <xref:System.DateTime.Kind%2A>プロパティをに<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1533">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-1534"><xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> `s` `styles`が UTC を表すことを<xref:System.DateTime>示している場合、またはにタイムゾーン情報が含まれておらず、フラグが含まれている場合、メソッドは文字列を解析し、返されたにタイムゾーン変換を実行しません。 `s`値を指定し、 <xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>に設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1534">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-1535">それ以外の場合、フラグは無効です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1535">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="46cae-1536">で`format`定義されていない空白を、個別の日付または時刻要素の間に表示できることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1536">Specifies that white space not defined by `format` can appear between any individual date or time element.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="46cae-1537">で`format`定義されていない空白をの`s`先頭に表示することを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1537">Specifies that white space not defined by `format` can appear at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="46cae-1538">で`format`定義されていない空白がの`s`末尾に表示されることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1538">Specifies that white space not defined by `format` can appear at the end of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="46cae-1539">によっ`s` `format`て定義されていない先頭、内部、および末尾の空白を含めることができることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1539">Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="46cae-1540">にタイムゾーン`s`情報がない場合、現地時刻を表すと想定されることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1540">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="46cae-1541">フラグが指定されてい<xref:System.DateTime.Kind%2A>ない限り、戻り<xref:System.DateTime>値のプロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>に設定されます。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-1541">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="46cae-1542">がタイムゾーン`s`情報を持たない場合、UTC を表すと想定されることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1542">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="46cae-1543">フラグが存在しない場合、メソッドは、返さ<xref:System.DateTime>れた値を UTC から現地時刻に<xref:System.DateTime.Kind%2A>変換し<xref:System.DateTimeKind.Local?displayProperty=nameWithType>、そのプロパティをに設定します。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-1543">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|<span data-ttu-id="46cae-1544">に`s`日付情報のない時刻が含まれている場合、戻り値の`DateTime.MinValue.Date`日付はに設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1544">If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="46cae-1545">パラメーター `s`は、既定値を使用して解析されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1545">The `s` parameter is parsed using default values.</span></span> <span data-ttu-id="46cae-1546">に`format`存在しない空白は許可されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1546">No white space other than that present in `format` is allowed.</span></span> <span data-ttu-id="46cae-1547">に`s`日付要素がない場合、戻り<xref:System.DateTime>値の日付は1/1/0001 に設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1547">If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001.</span></span> <span data-ttu-id="46cae-1548">に`s`タイムゾーン情報<xref:System.DateTime.Kind%2A>が含まれていない場合は<xref:System.DateTime> 、返された<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>オブジェクトのプロパティがに設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1548">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-1549">タイムゾーン`s`情報がに存在する場合、時刻は現地時刻<xref:System.DateTime.Kind%2A>に変換され、返され<xref:System.DateTime>たオブジェクトのプロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>に設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1549">If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="46cae-1550">タイムゾーン情報を含む文字列の場合、は、 <xref:System.DateTime> <xref:System.DateTime.Kind%2A>プロパティがに<xref:System.DateTimeKind.Local?displayProperty=nameWithType>設定された値の日付と時刻への変換を防止しようとします。</span><span class="sxs-lookup"><span data-stu-id="46cae-1550">For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-1551">このフラグは、主に UTC 時刻からローカル時刻への変換を防止します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1551">This flag primarily prevents the conversion of UTC times to local times.</span></span>|  
  
 <span data-ttu-id="46cae-1552">で`s`使用される特定の日付と時刻の記号および文字列 (特定の言語の曜日の名前など) は、が標準形式である`provider`かどうか`format`の`s`正確な形式として、パラメーターによって定義されます。指定子文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1552">The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="46cae-1553">パラメーター `provider`には、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1553">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="46cae-1554">を解釈`s`するために使用するカルチャを表すオブジェクト。<xref:System.Globalization.CultureInfo></span><span class="sxs-lookup"><span data-stu-id="46cae-1554">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="46cae-1555">プロパティによって返されるオブジェクトは<xref:System.Globalization.DateTimeFormatInfo> 、の`s`シンボルと書式設定を定義します。 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-1555">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="46cae-1556">日付と時刻のデータの形式を定義するオブジェクト。<xref:System.Globalization.DateTimeFormatInfo></span><span class="sxs-lookup"><span data-stu-id="46cae-1556">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="46cae-1557">書式設定<xref:System.IFormatProvider>情報を<xref:System.IFormatProvider.GetFormat%2A>提供する<xref:System.Globalization.CultureInfo>オブジェクトまたは<xref:System.Globalization.DateTimeFormatInfo>オブジェクトのいずれかを返すメソッドを持つカスタム実装。</span><span class="sxs-lookup"><span data-stu-id="46cae-1557">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="46cae-1558"><xref:System.Globalization.CultureInfo>が`provider` の場合は、現在のカルチャに対応するオブジェクトが使用されます。`null`</span><span class="sxs-lookup"><span data-stu-id="46cae-1558">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1559">メソッドの<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1559">The following example demonstrates the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="46cae-1560">によって先頭のスペースが許可されて`styles` `format`いないため、パラメーター <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>がと等しい場合は、文字列 "5/01/2009 8:30 AM" を正常に解析できないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1560">Note that the string " 5/01/2009 8:30 AM" cannot be parsed successfully when the `styles` parameter equals <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType> because leading spaces are not allowed by `format`.</span></span> <span data-ttu-id="46cae-1561">さらに、"mm/dd/yyyyhh: mm" の`format`を使用して文字列 "5/01/2009 09:00" を正常に解析することはできません。これは、では、月`format`の番号の前に、必要に応じて先行ゼロが表示されないためです。</span><span class="sxs-lookup"><span data-stu-id="46cae-1561">Additionally, the string "5/01/2009 09:00" cannot be parsed successfully with a `format` of "MM/dd/yyyyhh:mm" because the date string does not precede the month number with a leading zero, as `format` requires.</span></span>  
  
 [!code-csharp[System.DateTime.ParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/parseexact2.cs#2)]
 [!code-vb[System.DateTime.ParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/parseexact2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46cae-1562"><paramref name="s" /> または <paramref name="format" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1562"><paramref name="s" /> or <paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="46cae-1563"><paramref name="s" /> または <paramref name="format" /> が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1563"><paramref name="s" /> or <paramref name="format" /> is an empty string.</span></span>  
  
<span data-ttu-id="46cae-1564">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-1564">-or-</span></span> 
 <span data-ttu-id="46cae-1565"><paramref name="s" /> に、<paramref name="format" /> で指定されているパターンに対応する日付と時刻が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1565"><paramref name="s" /> does not contain a date and time that corresponds to the pattern specified in <paramref name="format" />.</span></span>  
  
<span data-ttu-id="46cae-1566">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-1566">-or-</span></span> 
<span data-ttu-id="46cae-1567"><paramref name="s" /> の時間の部分と AM/PM 指定子が一致していません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1567">The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46cae-1568"><paramref name="style" /> に <see cref="T:System.Globalization.DateTimeStyles" /> 値の正しくない組み合わせが含まれています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1568"><paramref name="style" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span> <span data-ttu-id="46cae-1569">たとえば、<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> と <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" /> の両方です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1569">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="46cae-1570">では、解析対象の文字列<see cref="T:System.FormatException" />に1時間の部分と、アグリーメントに含まれていない AM/PM 指定子が含まれている場合、メソッドはをスローします。<see cref="Overload:System.DateTime.ParseExact" /> [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</span><span class="sxs-lookup"><span data-stu-id="46cae-1570">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.ParseExact" /> method throws a <see cref="T:System.FormatException" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="46cae-1571">以前の[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]バージョンでは、AM/PM 指定子は無視されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1571">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.TryParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="46cae-1572">.NET Framework における日付と時刻文字列の解析の解析</span><span class="sxs-lookup"><span data-stu-id="46cae-1572">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="46cae-1573">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1573">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="46cae-1574">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1574">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (string s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(string s, string[] formats, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As String, formats As String(), provider As IFormatProvider, style As DateTimeStyles) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ParseExact(System::String ^ s, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string[] * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.ParseExact (s, formats, provider, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="46cae-1575">変換する日時を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1575">A string that contains a date and time to convert.</span></span></param>
        <param name="formats"><span data-ttu-id="46cae-1576"><paramref name="s" /> の許可された形式の配列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1576">An array of allowable formats of <paramref name="s" />.</span></span> <span data-ttu-id="46cae-1577">詳細については、「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1577">For more information, see the Remarks section.</span></span></param>
        <param name="provider"><span data-ttu-id="46cae-1578"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1578">An object that supplies culture-specific format information about <paramref name="s" />.</span></span></param>
        <param name="style"><span data-ttu-id="46cae-1579"><paramref name="s" /> で使用可能な書式を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="46cae-1579">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="46cae-1580">通常指定する値は、<see cref="F:System.Globalization.DateTimeStyles.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1580">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <summary><span data-ttu-id="46cae-1581">指定した書式の配列、カルチャ固有の書式情報、およびスタイルを使用して、指定した日付と時刻の文字列形式を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1581">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified array of formats, culture-specific format information, and style.</span></span> <span data-ttu-id="46cae-1582">文字列形式の書式は、指定した書式の少なくとも 1 つと完全に一致する必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1582">The format of the string representation must match at least one of the specified formats exactly or an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="46cae-1583"><paramref name="formats" />、<paramref name="provider" />、および <paramref name="style" /> で指定された書式に従って表記された <paramref name="s" /> に含まれる日時と等価のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1583">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="formats" />, <paramref name="provider" />, and <paramref name="style" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1584">メソッド<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>は、 `formats`パラメーターに割り当てられているパターンのいずれかと一致する日付の文字列形式を解析します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1584">The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter.</span></span> <span data-ttu-id="46cae-1585">文字列`s`が、 `styles`パラメーターで定義されているいずれかのバリエーションと一致しない場合、メソッドはを<xref:System.FormatException>スローします。</span><span class="sxs-lookup"><span data-stu-id="46cae-1585">If the string `s` does not match any one of these patterns with any of the variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="46cae-1586">1つの`s`書式パターンではなく、複数の書式指定パターンとの比較を除けば、この<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>オーバーロードはメソッドと同じように動作します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1586">Aside from comparing `s` to multiple formatting patterns, rather than to a single formatting pattern, this overload behaves identically to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="46cae-1587">パラメーター `s`には、解析する日付と時刻が格納されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1587">The `s` parameter contains the date and time to parse.</span></span> <span data-ttu-id="46cae-1588">パラメーターに`s`時刻のみが含まれ、日付が含まれていない場合は、 `style`パラメーターに<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>フラグが含まれていない限り、現在`DateTime.Date.MinValue`の日付が使用されます。この場合、既定の日付 () が使用されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1588">If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> flag, in which case the default date (`DateTime.Date.MinValue`) is used.</span></span> <span data-ttu-id="46cae-1589">パラメーターに`s`日付のみが含まれ、時刻が指定されていない場合は、深夜 (00:00:00) が使用されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1589">If the `s` parameter contains only a date and no time, midnight (00:00:00) is used.</span></span> <span data-ttu-id="46cae-1590">また`style` 、パラメーターには、 `s`の`formats`いずれかの書式指定文字列によって許可されていない空白文字を、パラメーターに含めることができるかどうかも決定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1590">The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in `formats`.</span></span>  
  
 <span data-ttu-id="46cae-1591">にタイムゾーン情報が含まれて`s`いない場合、返される<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> <xref:System.DateTime>オブジェクトのプロパティはになります。<xref:System.DateTime.Kind%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-1591">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-1592"><xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>この動作は、 <xref:System.DateTime.Kind%2A>プロパティが<xref:System.DateTime> である<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>値を返すフラグを使用するか、フラグとフラグを使用し<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>て変更できます。このフラグは、という値を返します。<xref:System.DateTime> <xref:System.DateTimeKind.Local?displayProperty=nameWithType><xref:System.DateTime.Kind%2A>プロパティが<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1592">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, or by using the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-1593">に`s`タイムゾーン情報が含まれている場合は、必要<xref:System.DateTime.Kind%2A>に応じて時刻が現地時刻に変換さ<xref:System.DateTime>れ、返され<xref:System.DateTimeKind.Local?displayProperty=nameWithType>たオブジェクトのプロパティがに設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1593">If `s` contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-1594">この動作は、 <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>協定世界時 (UTC) を現地時刻に変換しないようにフラグを使用し、 <xref:System.DateTime.Kind%2A>プロパティをに<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>設定することによって変更できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1594">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="46cae-1595">パラメーター `formats`にはパターンの配列が含まれており`s` 、そのいずれかが、解析操作が成功する場合に正確に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1595">The `formats` parameter contains an array of patterns, one of which `s` must match exactly if the parse operation is to succeed.</span></span> <span data-ttu-id="46cae-1596">`formats`パラメーターのパターンは、[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)の表にある1つ以上のカスタム書式指定子、または標準の日付から定義済みのパターンを識別する単一の標準書式指定子で構成されます。 [時刻書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)の表。</span><span class="sxs-lookup"><span data-stu-id="46cae-1596">The patterns in the `formats` parameter consists of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.</span></span>  
  
 <span data-ttu-id="46cae-1597">カスタム書式パターンで日付または時刻の区切り記号を使用しない場合は、 `provider`パラメーターにインバリアントカルチャを使用し、各カスタム書式指定子の幅が最も広い形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1597">If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="46cae-1598">たとえば、パターンに時間を指定する場合は、幅の狭い形式の "H" ではなく、広い形式の "HH" を指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1598">For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
 <span data-ttu-id="46cae-1599">パラメーター `styles`には、で定義されて<xref:System.Globalization.DateTimeStyles> `format`いない空白をで`s`使用できるかどうかを決定する列挙体のメンバーが1つ以上含まれています。これは、解析操作の正確な動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1599">The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation.</span></span> <span data-ttu-id="46cae-1600">次の表では、 <xref:System.Globalization.DateTimeStyles>列挙体の各メンバーが<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>メソッドの操作に与える影響について説明します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1600">The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method.</span></span>  
  
|<span data-ttu-id="46cae-1601">DateTimeStyles メンバー</span><span class="sxs-lookup"><span data-stu-id="46cae-1601">DateTimeStyles member</span></span>|<span data-ttu-id="46cae-1602">説明</span><span class="sxs-lookup"><span data-stu-id="46cae-1602">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="46cae-1603">を`s`解析し、必要に応じて UTC に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1603">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="46cae-1604"><xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> `styles` `s` <xref:System.DateTime> <xref:System.DateTime.ToUniversalTime%2A>にタイムゾーンオフセットが含まれている場合、またはにタイムゾーン情報が含まれておらず、フラグが含まれている場合、メソッドは文字列を解析し、を呼び出して、返された値を UTC に変換します。 `s`、 <xref:System.DateTime.Kind%2A>プロパティをに<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1604">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-1605"><xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> `s` `styles`が UTC を表すことを<xref:System.DateTime>示している場合、またはにタイムゾーン情報が含まれておらず、フラグが含まれている場合、メソッドは文字列を解析し、返されたにタイムゾーン変換を実行しません。 `s`値を指定し、 <xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>に設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1605">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-1606">それ以外の場合、フラグは無効です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1606">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="46cae-1607">で`format`定義されていない空白を、個別の日付または時刻要素の間に表示できることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1607">Specifies that white space not defined by `format` can appear between any individual date or time element.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="46cae-1608">で`format`定義されていない空白をの`s`先頭に表示することを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1608">Specifies that white space not defined by `format` can appear at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="46cae-1609">で`format`定義されていない空白がの`s`末尾に表示されることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1609">Specifies that white space not defined by `format` can appear at the end of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="46cae-1610">によっ`s` `format`て定義されていない先頭、内部、および末尾の空白を含めることができることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1610">Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="46cae-1611">にタイムゾーン`s`情報がない場合、現地時刻を表すと想定されることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1611">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="46cae-1612">フラグが指定されてい<xref:System.DateTime.Kind%2A>ない限り、戻り<xref:System.DateTime>値のプロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>に設定されます。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-1612">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="46cae-1613">がタイムゾーン`s`情報を持たない場合、UTC を表すと想定されることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1613">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="46cae-1614">フラグが存在しない場合、メソッドは、返さ<xref:System.DateTime>れた値を UTC から現地時刻に<xref:System.DateTime.Kind%2A>変換し<xref:System.DateTimeKind.Local?displayProperty=nameWithType>、そのプロパティをに設定します。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-1614">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|<span data-ttu-id="46cae-1615">に`s`日付情報のない時刻が含まれている場合、戻り値の`DateTime.MinValue.Date`日付はに設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1615">If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="46cae-1616">パラメーター `s`は、既定値を使用して解析されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1616">The `s` parameter is parsed using default values.</span></span> <span data-ttu-id="46cae-1617">に`format`存在しない空白は許可されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1617">No white space other than that present in `format` is allowed.</span></span> <span data-ttu-id="46cae-1618">に`s`日付要素がない場合、戻り<xref:System.DateTime>値の日付は1/1/0001 に設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1618">If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001.</span></span> <span data-ttu-id="46cae-1619">に`s`タイムゾーン情報<xref:System.DateTime.Kind%2A>が含まれていない場合は<xref:System.DateTime> 、返された<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>オブジェクトのプロパティがに設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1619">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-1620">タイムゾーン`s`情報がに存在する場合、時刻は現地時刻<xref:System.DateTime.Kind%2A>に変換され、返され<xref:System.DateTime>たオブジェクトのプロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>に設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1620">If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="46cae-1621">タイムゾーン情報を含む文字列の場合、は、その<xref:System.DateTime.Kind%2A>プロパティがに<xref:System.DateTimeKind.Local?displayProperty=nameWithType>設定された日付と時刻への変換を防止しようとします。</span><span class="sxs-lookup"><span data-stu-id="46cae-1621">For strings that contain time zone information, tries to prevent the conversion to a date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-1622">このフラグは、主に UTC 時刻からローカル時刻への変換を防止します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1622">This flag primarily prevents the conversion of UTC times to local times.</span></span>|  
  
 <span data-ttu-id="46cae-1623">で`s`使用される特定の日付と時刻の記号および文字列 (特定の言語の曜日の名前など) は、が標準形式である`provider`かどうか`format`の`s`正確な形式として、パラメーターによって定義されます。指定子文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1623">The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="46cae-1624">パラメーター `provider`には、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1624">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="46cae-1625">を解釈`s`するために使用するカルチャを表すオブジェクト。<xref:System.Globalization.CultureInfo></span><span class="sxs-lookup"><span data-stu-id="46cae-1625">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="46cae-1626">プロパティによって返されるオブジェクトは<xref:System.Globalization.DateTimeFormatInfo> 、の`s`シンボルと書式設定を定義します。 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-1626">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="46cae-1627">日付と時刻のデータの形式を定義するオブジェクト。<xref:System.Globalization.DateTimeFormatInfo></span><span class="sxs-lookup"><span data-stu-id="46cae-1627">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="46cae-1628">書式設定<xref:System.IFormatProvider>情報を<xref:System.IFormatProvider.GetFormat%2A>提供する<xref:System.Globalization.CultureInfo>オブジェクトまたは<xref:System.Globalization.DateTimeFormatInfo>オブジェクトのいずれかを返すメソッドを持つカスタム実装。</span><span class="sxs-lookup"><span data-stu-id="46cae-1628">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="46cae-1629"><xref:System.Globalization.CultureInfo>が`provider` の場合は、現在のカルチャに対応するオブジェクトが使用されます。`null`</span><span class="sxs-lookup"><span data-stu-id="46cae-1629">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1630">次の例では<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> 、メソッドを使用して、さまざまな形式の文字列を正常に解析できることを確認します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1630">The following example uses the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method to ensure that a string in a number of possible formats can be successfully parsed .</span></span>  
  
 [!code-csharp[System.Datetime.ParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/parseexact3.cs#3)]
 [!code-vb[System.Datetime.ParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/parseexact3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46cae-1631"><paramref name="s" /> または <paramref name="formats" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1631"><paramref name="s" /> or <paramref name="formats" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="46cae-1632"><paramref name="s" /> が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1632"><paramref name="s" /> is an empty string.</span></span>  
  
<span data-ttu-id="46cae-1633">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-1633">-or-</span></span> 
<span data-ttu-id="46cae-1634"><paramref name="formats" /> の要素は空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1634">an element of <paramref name="formats" /> is an empty string.</span></span>  
  
<span data-ttu-id="46cae-1635">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-1635">-or-</span></span> 
 <span data-ttu-id="46cae-1636"><paramref name="s" /> には、 <paramref name="formats" />のどの要素に対応する日時も含まれていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1636"><paramref name="s" /> does not contain a date and time that corresponds to any element of <paramref name="formats" />.</span></span>  
  
<span data-ttu-id="46cae-1637">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-1637">-or-</span></span> 
<span data-ttu-id="46cae-1638"><paramref name="s" /> の時間の部分と AM/PM 指定子が一致していません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1638">The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46cae-1639"><paramref name="style" /> に <see cref="T:System.Globalization.DateTimeStyles" /> 値の正しくない組み合わせが含まれています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1639"><paramref name="style" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span> <span data-ttu-id="46cae-1640">たとえば、<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> と <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" /> の両方です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1640">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="46cae-1641">では、解析対象の文字列<see cref="T:System.FormatException" />に1時間の部分と、アグリーメントに含まれていない AM/PM 指定子が含まれている場合、メソッドはをスローします。<see cref="Overload:System.DateTime.ParseExact" /> [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</span><span class="sxs-lookup"><span data-stu-id="46cae-1641">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.ParseExact" /> method throws a <see cref="T:System.FormatException" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="46cae-1642">以前の[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]バージョンでは、AM/PM 指定子は無視されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1642">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.TryParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="46cae-1643">.NET Framework における日付と時刻文字列の解析の解析</span><span class="sxs-lookup"><span data-stu-id="46cae-1643">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="46cae-1644">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1644">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="46cae-1645">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1645">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public int Second { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Second" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Second" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Second As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Second { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Second : int" Usage="System.DateTime.Second" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="46cae-1646">このインスタンスで表される日付の秒の部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1646">Gets the seconds component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="46cae-1647">DateTime の秒の部分 (0 ～ 59)。</span><span class="sxs-lookup"><span data-stu-id="46cae-1647">The seconds component, expressed as a value between 0 and 59.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="46cae-1648">プロパティの<xref:System.DateTime.Second%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1648">The following example demonstrates the <xref:System.DateTime.Second%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecifyKind">
      <MemberSignature Language="C#" Value="public static DateTime SpecifyKind (DateTime value, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime SpecifyKind(valuetype System.DateTime value, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SpecifyKind (value As DateTime, kind As DateTimeKind) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime SpecifyKind(DateTime value, DateTimeKind kind);" />
      <MemberSignature Language="F#" Value="static member SpecifyKind : DateTime * DateTimeKind -&gt; DateTime" Usage="System.DateTime.SpecifyKind (value, kind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="kind" Type="System.DateTimeKind" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="46cae-1649">日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="46cae-1649">A date and time.</span></span></param>
        <param name="kind"><span data-ttu-id="46cae-1650">新しいオブジェクトが現地時刻であるか、世界協定時刻 (UTC) であるか、またはそのどちらでもないかを示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="46cae-1650">One of the enumeration values that indicates whether the new object represents local time, UTC, or neither.</span></span></param>
        <summary><span data-ttu-id="46cae-1651">指定された <see cref="T:System.DateTime" /> と同じタイマー刻みの数を持つ新しい <see cref="T:System.DateTime" /> オブジェクトを、指定された <see cref="T:System.DateTimeKind" /> 値 (現地時刻、世界協定時刻 (UTC)、または、そのいずれでもないことを示す) に基づいて作成します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1651">Creates a new <see cref="T:System.DateTime" /> object that has the same number of ticks as the specified <see cref="T:System.DateTime" />, but is designated as either local time, Coordinated Universal Time (UTC), or neither, as indicated by the specified <see cref="T:System.DateTimeKind" /> value.</span></span></summary>
        <returns><span data-ttu-id="46cae-1652"><paramref name="value" /> パラメーターが表すオブジェクトと同じティック数、および <see cref="T:System.DateTimeKind" /> パラメーターで指定された <paramref name="kind" /> 値を持つ、新しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1652">A new object that has the same number of ticks as the object represented by the <paramref name="value" /> parameter and the <see cref="T:System.DateTimeKind" /> value specified by the <paramref name="kind" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1653">オブジェクト<xref:System.DateTime>は、時刻値が現地時刻、世界協定時刻 (UTC)、またはその両方に基づいていないかどうか、および100ナノ秒刻みで計測された時間値を含むティックフィールドで構成されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1653">A <xref:System.DateTime> object consists of a Kind field that indicates whether the time value is based on local time, Coordinated Universal Time (UTC), or neither, and a Ticks field that contains a time value measured in 100-nanosecond ticks.</span></span> <span data-ttu-id="46cae-1654">メソッド<xref:System.DateTime.SpecifyKind%2A>は、指定さ<xref:System.DateTime>れた`kind`パラメーターと元の時刻値を使用して、新しいオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1654">The <xref:System.DateTime.SpecifyKind%2A> method creates a new <xref:System.DateTime> object using the specified `kind` parameter and the original time value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="46cae-1655">戻り<xref:System.DateTime>値は、 `value`パラメーター <xref:System.DateTime.SpecifyKind%2A>と同じ瞬間を表しておらず、タイムゾーンの変換方法でもありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1655">The returned <xref:System.DateTime> value does not represent the same instant in time as the `value` parameter, and <xref:System.DateTime.SpecifyKind%2A> is not a time zone conversion method.</span></span> <span data-ttu-id="46cae-1656">代わりに、 `value`パラメーターで指定された時間を変更せずに残し<xref:System.DateTime.Kind%2A> 、プロパティ`kind`をに設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1656">Instead, it leaves the time specified by the `value` parameter unchanged, and sets the <xref:System.DateTime.Kind%2A> property to `kind`.</span></span> <span data-ttu-id="46cae-1657">タイムゾーン変換の詳細については、「[タイムゾーン間での](~/docs/standard/datetime/converting-between-time-zones.md)時刻の変換」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1657">For information about time zone conversions, see [Converting Times Between Time Zones](~/docs/standard/datetime/converting-between-time-zones.md).</span></span>  
  
 <span data-ttu-id="46cae-1658">このメソッドは、指定されていない種類<xref:System.DateTime>フィールドを持つオブジェクトを受け取る相互運用性のシナリオで役立ちますが、独立して判断できるのは、ティックフィールドが現地時刻または UTC を表すことを意味します。 <xref:System.DateTime.SpecifyKind%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-1658">The <xref:System.DateTime.SpecifyKind%2A> method is useful in interoperability scenarios where you receive a <xref:System.DateTime> object with an unspecified Kind field, but you can determine by independent means that the Ticks field represents local time or UTC.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1659">次の例では<xref:System.DateTime.SpecifyKind%2A> 、メソッドを使用し<xref:System.DateTime.Kind%2A>て、メソッド<xref:System.DateTime.ToLocalTime%2A>と<xref:System.DateTime.ToUniversalTime%2A>変換メソッドに対してプロパティがどのように影響するかを示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1659">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md"><span data-ttu-id="46cae-1660">.NET Framework アプリケーションにおける COM 相互運用性 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="46cae-1660">COM Interoperability in .NET Framework Applications (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subtract">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="46cae-1661">このインスタンスの値から指定した時刻または期間を減算した、新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1661">Returns a new <see cref="T:System.DateTime" /> that subtracts the specified time or duration from the value of this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public TimeSpan Subtract (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Subtract(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Subtract(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (value As DateTime) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Subtract(DateTime value);" />
      <MemberSignature Language="F#" Value="member this.Subtract : DateTime -&gt; TimeSpan" Usage="dateTime.Subtract value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="46cae-1662">減算する日付と時刻の値。</span><span class="sxs-lookup"><span data-stu-id="46cae-1662">The date and time value to subtract.</span></span></param>
        <summary><span data-ttu-id="46cae-1663">このインスタンスの値から指定した日時を減算した、新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1663">Returns a new <see cref="T:System.DateTime" /> that subtracts the specified date and time from the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="46cae-1664">このインスタンスで表された日付と時刻から <paramref name="value" /> で表された日付と時刻を減算した値と等しい時間間隔。</span><span class="sxs-lookup"><span data-stu-id="46cae-1664">A time interval that is equal to the date and time represented by this instance minus the date and time represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1665">メソッド<xref:System.DateTime.Subtract%28System.DateTime%29>は、2つの日付の差を決定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1665">The <xref:System.DateTime.Subtract%28System.DateTime%29> method determines the difference between two dates.</span></span> <span data-ttu-id="46cae-1666">現在のインスタンスから時間間隔を減算するには、 <xref:System.DateTime.Subtract%28System.TimeSpan%29>メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1666">To subtract a time interval from the current instance, call the <xref:System.DateTime.Subtract%28System.TimeSpan%29> method.</span></span> <span data-ttu-id="46cae-1667">現在のインスタンスから特定の時間間隔を減算するには、その時間間隔を現在の日付に加算するメソッドを呼び出し、メソッドの引数として負の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1667">To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument.</span></span> <span data-ttu-id="46cae-1668">たとえば、現在の日付から2か月を減算するには<xref:System.DateTime.AddMonths%28System.Int32%29> 、値-2 を指定してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1668">For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2.</span></span>  
  
 <span data-ttu-id="46cae-1669">現在のインスタンスの日付と時刻がよりも`value`前の場合、メソッドは負の時間間隔を表す<xref:System.TimeSpan>オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1669">If the date and time of the current instance is earlier than `value`, the method returns a <xref:System.TimeSpan> object that represents a negative time span.</span></span> <span data-ttu-id="46cae-1670">つまり、0以外のすべてのプロパティ ( <xref:System.TimeSpan.Days%2A>や<xref:System.TimeSpan.Ticks%2A>など) の値は負になります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1670">That is, the value of all of its non-zero properties (such as <xref:System.TimeSpan.Days%2A> or <xref:System.TimeSpan.Ticks%2A>) is negative.</span></span>  
  
 <span data-ttu-id="46cae-1671">メソッド<xref:System.DateTime.Subtract%28System.DateTime%29>は、減算を実行するときに<xref:System.DateTime.Kind%2A> 、2つ<xref:System.DateTime>の値のプロパティの値を考慮しません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1671">The <xref:System.DateTime.Subtract%28System.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction.</span></span> <span data-ttu-id="46cae-1672">オブジェクトを<xref:System.DateTime>差し引く前に、オブジェクトが同じタイムゾーンの時刻を表していることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1672">Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="46cae-1673">それ以外の場合、結果にはタイムゾーン間の違いが含まれます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1673">Otherwise, the result will include the difference between time zones.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="46cae-1674">メソッド<xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=nameWithType>は、減算を実行するときのタイムゾーン間の違いを考慮します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1674">The <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=nameWithType> method does consider the difference between time zones when performing the subtraction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1675">次の例は、 <xref:System.DateTime.Subtract%2A>メソッドと減算演算子を示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1675">The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.</span></span>  
  
 [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]
 [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-1676">結果が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="46cae-1676">The result is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="46cae-1677">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="46cae-1677">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public DateTime Subtract (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime Subtract(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Subtract(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (value As TimeSpan) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime Subtract(TimeSpan value);" />
      <MemberSignature Language="F#" Value="member this.Subtract : TimeSpan -&gt; DateTime" Usage="dateTime.Subtract value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="46cae-1678">減算する時間間隔。</span><span class="sxs-lookup"><span data-stu-id="46cae-1678">The time interval to subtract.</span></span></param>
        <summary><span data-ttu-id="46cae-1679">このインスタンスの値から指定した期間を減算した、新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1679">Returns a new <see cref="T:System.DateTime" /> that subtracts the specified duration from the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="46cae-1680">このインスタンスで表された日付と時刻から <paramref name="value" /> で表された時間間隔を減算した値と等しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1680">An object that is equal to the date and time represented by this instance minus the time interval represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1681">メソッド<xref:System.DateTime.Subtract%28System.TimeSpan%29>は、現在のインスタンスと指定された時間間隔の差である日付を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1681">The <xref:System.DateTime.Subtract%28System.TimeSpan%29> method returns the date that is a specified time interval difference from the current instance.</span></span> <span data-ttu-id="46cae-1682">2つの日付の間の時間間隔を調べる<xref:System.DateTime.Subtract%28System.DateTime%29>には、メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1682">To determine the time interval between two dates, call the <xref:System.DateTime.Subtract%28System.DateTime%29> method.</span></span> <span data-ttu-id="46cae-1683">現在のインスタンスから特定の時間間隔を減算するには、その時間間隔を現在の日付に加算するメソッドを呼び出し、メソッドの引数として負の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1683">To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument.</span></span> <span data-ttu-id="46cae-1684">たとえば、現在の日付から2か月を減算するには<xref:System.DateTime.AddMonths%28System.Int32%29> 、値-2 を指定してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1684">For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2.</span></span>  
  
 <span data-ttu-id="46cae-1685">このメソッドは、この<xref:System.DateTime>の値を変更しません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1685">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="46cae-1686">代わりに、この操作の結果<xref:System.DateTime>を値として持つ新しいを返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1686">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="46cae-1687">通常、メソッド<xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>は、正<xref:System.TimeSpan>の<xref:System.DateTime>時間範囲を表すオブジェクトを減算し、現在のインスタンスの日付と時刻よりも前の値を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1687">Ordinarily, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> method subtracts a <xref:System.TimeSpan> object that represents a positive time span and returns a <xref:System.DateTime> value that is earlier than the date and time of the current instance.</span></span> <span data-ttu-id="46cae-1688">ただし、オブジェクトが<xref:System.TimeSpan>負の時間間隔を表している<xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>場合、メソッド<xref:System.DateTime>は現在のインスタンスの日付と時刻よりも後の値を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1688">However, if the <xref:System.TimeSpan> object represents a negative time span, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> method returns a <xref:System.DateTime> value that is later than the date and time of the current instance.</span></span>  
  
 <span data-ttu-id="46cae-1689"><xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>メソッドを使用すると、複数の時間単位 (時間数や指定された分数など) で構成される時間間隔を減算できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1689">The <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> method allows you to subtract a time interval that consists of more than one unit of time (such as a given number of hours and a given number of minutes).</span></span> <span data-ttu-id="46cae-1690"><xref:System.DateTime>インスタンスから1つの時間単位 (年、月、日など) を減算するには、次のいずれかのメソッドにパラメーターとして負の数値を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1690">To subtract a single unit of time (such as years, months, or days) from the <xref:System.DateTime> instance, you can pass a negative numeric value as a parameter to any of the following methods:</span></span>  
  
-   <span data-ttu-id="46cae-1691"><xref:System.DateTime.AddYears%2A>。現在の日付と時刻のインスタンスから特定の年数を減算します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1691"><xref:System.DateTime.AddYears%2A>, to subtract a specific number of years from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="46cae-1692"><xref:System.DateTime.AddMonths%2A>。現在の日付と時刻のインスタンスから特定の月数を減算します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1692"><xref:System.DateTime.AddMonths%2A>, to subtract a specific number of months from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="46cae-1693"><xref:System.DateTime.AddDays%2A>。現在の日付と時刻のインスタンスから特定の日数を減算します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1693"><xref:System.DateTime.AddDays%2A>, to subtract a specific number of days from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="46cae-1694"><xref:System.DateTime.AddHours%2A>。現在の日付と時刻のインスタンスから特定の時間数を減算します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1694"><xref:System.DateTime.AddHours%2A>, to subtract a specific number of hours from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="46cae-1695"><xref:System.DateTime.AddMinutes%2A>。現在の日付と時刻のインスタンスから特定の分数を減算します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1695"><xref:System.DateTime.AddMinutes%2A>, to subtract a specific number of minutes from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="46cae-1696"><xref:System.DateTime.AddSeconds%2A>。現在の日付と時刻のインスタンスから特定の秒数を減算します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1696"><xref:System.DateTime.AddSeconds%2A>, to subtract a specific number of seconds from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="46cae-1697"><xref:System.DateTime.AddMilliseconds%2A>。現在の日付と時刻のインスタンスから特定のミリ秒数を減算します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1697"><xref:System.DateTime.AddMilliseconds%2A>, to subtract a specific number of milliseconds from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="46cae-1698"><xref:System.DateTime.AddTicks%2A>。現在の日付と時刻のインスタンスから特定の数のタイマー刻みを減算します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1698"><xref:System.DateTime.AddTicks%2A>, to subtract a specific number of ticks from the current date and time instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1699">次の例は、 <xref:System.DateTime.Subtract%2A>メソッドと減算演算子を示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1699">The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.</span></span>  
  
 [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]
 [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-1700">結果が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="46cae-1700">The result is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="46cae-1701">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="46cae-1701">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46cae-1702"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1702">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="46cae-1703">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="46cae-1703">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="46cae-1704">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1704">This conversion is not supported.</span></span> <span data-ttu-id="46cae-1705">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1705">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="46cae-1706">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1706">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="46cae-1707">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="46cae-1707">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46cae-1708"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1708">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="46cae-1709">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="46cae-1709">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="46cae-1710">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1710">This conversion is not supported.</span></span> <span data-ttu-id="46cae-1711">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1711">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="46cae-1712">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1712">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="46cae-1713">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="46cae-1713">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46cae-1714"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1714">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="46cae-1715">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="46cae-1715">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="46cae-1716">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1716">This conversion is not supported.</span></span> <span data-ttu-id="46cae-1717">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1717">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="46cae-1718">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1718">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="46cae-1719">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="46cae-1719">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46cae-1720"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1720">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="46cae-1721">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="46cae-1721">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="46cae-1722">現在の <see cref="T:System.DateTime" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1722">Returns the current <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="46cae-1723">現在のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1723">The current object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46cae-1724"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1724">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="46cae-1725">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="46cae-1725">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="46cae-1726">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1726">This conversion is not supported.</span></span> <span data-ttu-id="46cae-1727">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1727">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="46cae-1728">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1728">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="46cae-1729">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="46cae-1729">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46cae-1730"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1730">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="46cae-1731">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="46cae-1731">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="46cae-1732">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1732">This conversion is not supported.</span></span> <span data-ttu-id="46cae-1733">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1733">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="46cae-1734">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1734">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="46cae-1735">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="46cae-1735">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46cae-1736"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1736">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="46cae-1737">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="46cae-1737">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="46cae-1738">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1738">This conversion is not supported.</span></span> <span data-ttu-id="46cae-1739">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1739">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="46cae-1740">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1740">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="46cae-1741">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="46cae-1741">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46cae-1742"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1742">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="46cae-1743">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="46cae-1743">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="46cae-1744">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1744">This conversion is not supported.</span></span> <span data-ttu-id="46cae-1745">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1745">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="46cae-1746">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1746">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="46cae-1747">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="46cae-1747">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46cae-1748"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1748">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="46cae-1749">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="46cae-1749">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="46cae-1750">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1750">This conversion is not supported.</span></span> <span data-ttu-id="46cae-1751">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1751">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="46cae-1752">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1752">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="46cae-1753">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="46cae-1753">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46cae-1754"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1754">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="46cae-1755">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="46cae-1755">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="46cae-1756">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1756">This conversion is not supported.</span></span> <span data-ttu-id="46cae-1757">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1757">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="46cae-1758">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1758">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="46cae-1759">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="46cae-1759">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46cae-1760"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1760">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="46cae-1761">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="46cae-1761">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="46cae-1762">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1762">This conversion is not supported.</span></span> <span data-ttu-id="46cae-1763">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1763">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="46cae-1764">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1764">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="46cae-1765">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="46cae-1765">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="46cae-1766">必要な型。</span><span class="sxs-lookup"><span data-stu-id="46cae-1766">The desired type.</span></span></param>
        <param name="provider"><span data-ttu-id="46cae-1767"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1767">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="46cae-1768">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="46cae-1768">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="46cae-1769">現在の <see cref="T:System.DateTime" /> オブジェクトを、指定された型のオブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1769">Converts the current <see cref="T:System.DateTime" /> object to an object of a specified type.</span></span></summary>
        <returns><span data-ttu-id="46cae-1770">値が現在の <paramref name="type" /> オブジェクトに等価である、<see cref="T:System.DateTime" /> パラメーターによって指定された型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1770">An object of the type specified by the <paramref name="type" /> parameter, with a value equivalent to the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46cae-1771"><paramref name="type" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1771"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="46cae-1772">この変換は、<see cref="T:System.DateTime" /> 型ではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1772">This conversion is not supported for the <see cref="T:System.DateTime" /> type.</span></span></exception>
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46cae-1773"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1773">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="46cae-1774">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="46cae-1774">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="46cae-1775">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1775">This conversion is not supported.</span></span> <span data-ttu-id="46cae-1776">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1776">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="46cae-1777">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1777">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="46cae-1778">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="46cae-1778">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46cae-1779"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1779">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="46cae-1780">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="46cae-1780">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="46cae-1781">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1781">This conversion is not supported.</span></span> <span data-ttu-id="46cae-1782">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1782">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="46cae-1783">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1783">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="46cae-1784">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="46cae-1784">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46cae-1785"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1785">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="46cae-1786">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="46cae-1786">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="46cae-1787">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1787">This conversion is not supported.</span></span> <span data-ttu-id="46cae-1788">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1788">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="46cae-1789">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1789">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="46cae-1790">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="46cae-1790">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="46cae-1791">データを読み込む先のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1791">The object to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="46cae-1792">このシリアル化のシリアル化先。</span><span class="sxs-lookup"><span data-stu-id="46cae-1792">The destination for this serialization.</span></span> <span data-ttu-id="46cae-1793">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="46cae-1793">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="46cae-1794"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに、現在の <see cref="T:System.DateTime" /> オブジェクトをシリアル化するために必要なすべてのデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1794">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the current <see cref="T:System.DateTime" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1795">このメソッドは`info` 、パラメーター <xref:System.DateTime.Ticks%2A>にプロパティと<xref:System.DateTime.Kind%2A>プロパティ値を設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1795">This method populates the `info` parameter with the <xref:System.DateTime.Ticks%2A> and <xref:System.DateTime.Kind%2A> property values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46cae-1796"><paramref name="info" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1796"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="46cae-1797">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1797">requires full trust for the immediate caller.</span></span> <span data-ttu-id="46cae-1798">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1798">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Ticks">
      <MemberSignature Language="C#" Value="public long Ticks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Ticks" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Ticks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ticks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Ticks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Ticks : int64" Usage="System.DateTime.Ticks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="46cae-1799">このインスタンスの日付と時刻を表すタイマー刻み数を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1799">Gets the number of ticks that represent the date and time of this instance.</span></span></summary>
        <value><span data-ttu-id="46cae-1800">このインスタンスの日付と時刻を表すタイマー刻み数。</span><span class="sxs-lookup"><span data-stu-id="46cae-1800">The number of ticks that represent the date and time of this instance.</span></span> <span data-ttu-id="46cae-1801">値は <see langword="DateTime.MinValue.Ticks" /> から <see langword="DateTime.MaxValue.Ticks" /> までの間にあります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1801">The value is between <see langword="DateTime.MinValue.Ticks" /> and <see langword="DateTime.MaxValue.Ticks" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1802">1ティックは、100ナノ秒または 1 10-万の秒を表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1802">A single tick represents one hundred nanoseconds or one ten-millionth of a second.</span></span> <span data-ttu-id="46cae-1803">ミリ秒単位では1万ティック、1秒あたりは1000万タイマー刻みがあります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1803">There are 10,000 ticks in a millisecond, or 10 million ticks in a second.</span></span>  
  
 <span data-ttu-id="46cae-1804">このプロパティの値は、0001年1月1日の午前0時 (0001 年1月1日の場合は 0:00:00 UTC、グレゴリオ暦では UTC) <xref:System.DateTime.MinValue?displayProperty=nameWithType>12:00:00 から経過した100ナノ秒間隔の数を表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1804">The value of this property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight, January 1, 0001 (0:00:00 UTC on January 1, 0001, in the Gregorian calendar), which represents <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-1805">これには、うるう秒に起因するタイマー刻みの数は含まれません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1805">It does not include the number of ticks that are attributable to leap seconds.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1806">次の例では<xref:System.DateTime.Ticks%2A> 、プロパティを使用して、20番目の世紀の開始から経過したタイマー刻みの数を<xref:System.TimeSpan>表示し、オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1806">The following example uses the <xref:System.DateTime.Ticks%2A> property to display the number of ticks that have elapsed since the beginning of the twenty-first century and to instantiate a <xref:System.TimeSpan> object.</span></span> <span data-ttu-id="46cae-1807">その後、オブジェクトを使用して、他のいくつかの時間間隔を使用して経過時間を表示します。 <xref:System.TimeSpan></span><span class="sxs-lookup"><span data-stu-id="46cae-1807">The <xref:System.TimeSpan> object is then used to display the elapsed time using several other time intervals.</span></span>  
  
 [!code-csharp[System.DateTime.Ticks#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Ticks/cs/Ticks.cs#1)]
 [!code-vb[System.DateTime.Ticks#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Ticks/vb/Ticks.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public TimeSpan TimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfDay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeOfDay { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfDay : TimeSpan" Usage="System.DateTime.TimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="46cae-1808">このインスタンスの時刻を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1808">Gets the time of day for this instance.</span></span></summary>
        <value><span data-ttu-id="46cae-1809">深夜の 12 時から経過した 1 日の端数部分を表す時間間隔。</span><span class="sxs-lookup"><span data-stu-id="46cae-1809">A time interval that represents the fraction of the day that has elapsed since midnight.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1810"><xref:System.DateTime.Date%2A>プロパティとは異なります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1810">Unlike the <xref:System.DateTime.Date%2A> property.</span></span> <span data-ttu-id="46cae-1811">これにより<xref:System.DateTime> 、時刻部分を含まない日付を表す値が<xref:System.DateTime.TimeOfDay%2A>返されます<xref:System.TimeSpan> 。このプロパティは<xref:System.DateTime> 、値の時間部分を表す値を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1811">which returns a <xref:System.DateTime> value that represents a date without its time component, the <xref:System.DateTime.TimeOfDay%2A> property returns a <xref:System.TimeSpan> value that represents a  <xref:System.DateTime> value's time component.</span></span>  
  
 <span data-ttu-id="46cae-1812">時刻を表示する場合や、 <xref:System.DateTime>値の時刻の文字列形式を取得する場合は、代わりにパラメーターを`format`持つ<xref:System.DateTime.ToString%2A>メソッドのオーバーロードを呼び出すか、または[複合書式指定](~/docs/standard/base-types/composite-formatting.md)を使用することができます。"t" または "T" の標準書式指定文字列を使用する機能。</span><span class="sxs-lookup"><span data-stu-id="46cae-1812">If you want to display the time of day or retrieve the string representation of the time of day of a <xref:System.DateTime> value, you can instead call an overload of the <xref:System.DateTime.ToString%2A> method that has a `format` parameter or use the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature with the "t" or "T" standard format string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1813">次の例では、値の<xref:System.DateTime.TimeOfDay%2A> <xref:System.DateTime>配列のプロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1813">The following example displays the value of the <xref:System.DateTime.TimeOfDay%2A> property for an array of <xref:System.DateTime> values.</span></span> <span data-ttu-id="46cae-1814">また、複合書式指定操作で、戻り値を "t" 標準書式指定文字列によって返される文字列と比較します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1814">It also contrasts the return value with the string returned by the "t" standard format string in a composite formatting operation.</span></span>  
  
 [!code-csharp[System.DateTime.TimeOfDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.timeofday/cs/timeofday1.cs#1)]
 [!code-vb[System.DateTime.TimeOfDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.timeofday/vb/timeofday1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="ToBinary">
      <MemberSignature Language="C#" Value="public long ToBinary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToBinary() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToBinary" />
      <MemberSignature Language="VB.NET" Value="Public Function ToBinary () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToBinary();" />
      <MemberSignature Language="F#" Value="member this.ToBinary : unit -&gt; int64" Usage="dateTime.ToBinary " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46cae-1815">現在の <see cref="T:System.DateTime" /> オブジェクトを 64 ビットのバイナリ値にシリアル化します。後で、この値を使って、<see cref="T:System.DateTime" /> オブジェクトを再構築できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1815">Serializes the current <see cref="T:System.DateTime" /> object to a 64-bit binary value that subsequently can be used to recreate the <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="46cae-1816"><see cref="P:System.DateTime.Kind" /> プロパティおよび <see cref="P:System.DateTime.Ticks" /> プロパティをエンコードする 64 ビットの符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="46cae-1816">A 64-bit signed integer that encodes the <see cref="P:System.DateTime.Kind" /> and <see cref="P:System.DateTime.Ticks" /> properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1817">メソッドを使用して、現在<xref:System.DateTime>のオブジェクトの値をバイナリ値に変換します。 <xref:System.DateTime.ToBinary%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-1817">Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value.</span></span> <span data-ttu-id="46cae-1818">その後、バイナリ値と<xref:System.DateTime.FromBinary%2A>メソッドを使用して、元<xref:System.DateTime>のオブジェクトを再作成します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1818">Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="46cae-1819">場合<xref:System.DateTime>に<xref:System.DateTime> <xref:System.DateTime.ToBinary%2A>よっては、メソッドによって返される値が、メソッドに渡された元の値と一致していないことがあります。<xref:System.DateTime.FromBinary%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-1819">In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method.</span></span> <span data-ttu-id="46cae-1820">詳細については、次のセクション「ローカル時間の調整」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1820">For more information, see the next section, "Local Time Adjustment".</span></span>  
  
## <a name="local-time-adjustment"></a><span data-ttu-id="46cae-1821">ローカル時間の調整</span><span class="sxs-lookup"><span data-stu-id="46cae-1821">Local Time Adjustment</span></span>  
 <span data-ttu-id="46cae-1822">現地時刻は、ローカルタイムゾーンに調整された世界協定時刻であり、プロパティの値<xref:System.DateTime> <xref:System.DateTimeKind.Local>がで<xref:System.DateTime.Kind%2A>ある構造体によって表されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1822">A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>.</span></span> <span data-ttu-id="46cae-1823">メソッドによって<xref:System.DateTime>生成されたバイナリ表現からローカル値を復元する場合<xref:System.DateTime.FromBinary%2A> 、メソッドは、再作成された値が元の値と等しくならないように調整します。 <xref:System.DateTime.ToBinary%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-1823">When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value.</span></span> <span data-ttu-id="46cae-1824">これは、次のような条件で発生します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1824">This can occur under the following conditions:</span></span>  
  
-   <span data-ttu-id="46cae-1825">ローカル<xref:System.DateTime>オブジェクトが<xref:System.DateTime.ToBinary%2A>メソッドによって1つのタイムゾーンでシリアル化され、 <xref:System.DateTime.FromBinary%2A>メソッドによって別のタイムゾーンで逆シリアル化された<xref:System.DateTime>場合、結果のオブジェクトによって表されるローカル時刻が自動的に調整されます。2番目のタイムゾーンにします。</span><span class="sxs-lookup"><span data-stu-id="46cae-1825">If a local <xref:System.DateTime> object is serialized in one time zone by the <xref:System.DateTime.ToBinary%2A> method, and then deserialized in a different time zone by the <xref:System.DateTime.FromBinary%2A> method, the local time represented by the resulting <xref:System.DateTime> object is automatically adjusted to the second time zone.</span></span>  
  
     <span data-ttu-id="46cae-1826">たとえば、午後3時<xref:System.DateTime>の現地時刻を表すオブジェクトについて考えてみます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1826">For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M.</span></span> <span data-ttu-id="46cae-1827">米国で実行されているアプリケーション太平洋標準時ゾーンで<xref:System.DateTime.ToBinary%2A>は、メソッドを<xref:System.DateTime>使用して、そのオブジェクトをバイナリ値に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1827">An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value.</span></span> <span data-ttu-id="46cae-1828">米国で実行されている別のアプリケーション東部標準時は、 <xref:System.DateTime.FromBinary%2A>メソッドを使用して、バイナリ値を新しい<xref:System.DateTime>オブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1828">Another application that is executing in the U.S. Eastern Time zone uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object.</span></span> <span data-ttu-id="46cae-1829">新しい<xref:System.DateTime>オブジェクトの値は午後6時です。これは、元の午後3時と同じ時点を表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1829">The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M.</span></span> <span data-ttu-id="46cae-1830">値は、東部標準時のタイムゾーンで現地時刻に調整されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1830">value, but is adjusted to local time in the Eastern Time zone.</span></span>  
  
-   <span data-ttu-id="46cae-1831">ローカル<xref:System.DateTime>値のバイナリ表現<xref:System.DateTime.FromBinary%2A>が、が呼び出されたシステムのローカルタイムゾーンの無効な時刻を表している場合、その時刻は有効であるように調整されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1831">If the binary representation of a local <xref:System.DateTime> value represents an invalid time in the local time zone of the system on which <xref:System.DateTime.FromBinary%2A> is called, the time is adjusted so that it is valid.</span></span>  
  
     <span data-ttu-id="46cae-1832">たとえば、標準時間から夏時間への移行は、米国の2:00 2010 年3月14日の太平洋標準時ゾーン (午前15時)、時間が1時間経過したとき、午前3時3:00</span><span class="sxs-lookup"><span data-stu-id="46cae-1832">For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="46cae-1833">この時間間隔は、無効な時刻、つまり、このタイムゾーンに存在しない時間間隔です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1833">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="46cae-1834">次の例は、この範囲内にある時間が<xref:System.DateTime.ToBinary%2A>メソッドによってバイナリ値に変換され、 <xref:System.DateTime.FromBinary%2A>メソッドによって復元されると、元の値が有効な時刻になるように調整されることを示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1834">The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="46cae-1835">この例に示すように、特定の日付と時刻の値を<xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=nameWithType>メソッドに渡すことによって、変更される可能性があるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1835">You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=nameWithType> method, as the example illustrates.</span></span>  
  
     [!code-csharp[System.DateTime.FromBinary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)]
     [!code-vb[System.DateTime.FromBinary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)]  
  
## <a name="version-considerations"></a><span data-ttu-id="46cae-1836">バージョンに関する考慮事項</span><span class="sxs-lookup"><span data-stu-id="46cae-1836">Version Considerations</span></span>  
 <span data-ttu-id="46cae-1837">.NET Framework バージョン2.0 以降では、構造<xref:System.DateTime>は private Kind フィールドで構成されています。これは、指定した時間の値が現地時刻、世界協定時刻 (UTC)、またはそのどちらでもないか、およびプライベートティックフィールドであるかを示します。日付と時刻を指定する100ナノ秒刻みの数を格納します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1837">Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time value is based on local time, Coordinated Universal Time (UTC), or neither, and a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time.</span></span> <span data-ttu-id="46cae-1838"><xref:System.DateTime.Ticks%2A>プロパティを使用してティックフィールドにアクセスできます。また、 <xref:System.DateTime.Kind%2A>プロパティを使用して Kind フィールドにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1838">The Ticks field can be accessed with the <xref:System.DateTime.Ticks%2A> property and the Kind field can be accessed with the <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="46cae-1839">.NET Framework 2.0 より前では、など<xref:System.DateTime> <xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>のシリアル化インターフェイスを使用せずに手動でオブジェクトをシリアル化した場合は、 <xref:System.DateTime>構造体のティックデータをシリアル化するだけで済みます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1839">Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>, you only needed to serialize the Ticks data in the <xref:System.DateTime> structure.</span></span> <span data-ttu-id="46cae-1840">バージョン2.0 以降では、種類データもシリアル化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1840">Starting with version 2.0, you must also serialize the Kind data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.FromBinary(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="Today">
      <MemberSignature Language="C#" Value="public static DateTime Today { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Today" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Today" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Today As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Today { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Today : DateTime" Usage="System.DateTime.Today" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="46cae-1841">現在の日付を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1841">Gets the current date.</span></span></summary>
        <value><span data-ttu-id="46cae-1842">今日の日付を表すオブジェクト (ただし、時刻部分は 00:00:00)。</span><span class="sxs-lookup"><span data-stu-id="46cae-1842">An object that is set to today's date, with the time component set to 00:00:00.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1843">.NET Framework バージョン2.0 以降、戻り値は、 <xref:System.DateTime> <xref:System.DateTime.Kind%2A>プロパティがを返す<xref:System.DateTimeKind.Local>を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1843">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind.Local>.</span></span>  
  
 <span data-ttu-id="46cae-1844">現在の日付が返されるので、 <xref:System.DateTime.Today%2A>このプロパティは、日付のみを使用するアプリケーションでの使用に適しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1844">Because it returns the current date without the current time, the <xref:System.DateTime.Today%2A> property is suitable for use in applications that work with dates only.</span></span> <span data-ttu-id="46cae-1845">詳細については、「 [DateTime、DateTimeOffset、TimeSpan、および TimeZoneInfo の使い分け](~/docs/standard/datetime/choosing-between-datetime.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1845">For details, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md).</span></span> <span data-ttu-id="46cae-1846">これに対して<xref:System.DateTime.TimeOfDay%2A> 、プロパティは現在の日付を除く現在の時刻を<xref:System.DateTime.Now%2A>返し、プロパティは現在の日付と現在の時刻の両方を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1846">In contrast, the <xref:System.DateTime.TimeOfDay%2A> property returns the current time without the current date, and the <xref:System.DateTime.Now%2A> property returns both the current date and the current time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1847">次の例では<xref:System.DateTime.Date%2A> 、プロパティを使用して、現在の日付を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1847">The following example uses the <xref:System.DateTime.Date%2A> property to retrieve the current date.</span></span> <span data-ttu-id="46cae-1848">また、標準の日時<xref:System.DateTime>書式指定文字列を使用して値を書式設定する方法についても説明します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1848">It also illustrates how a <xref:System.DateTime> value can be formatted using some of the standard date and time format strings.</span></span> <span data-ttu-id="46cae-1849">メソッドの<xref:System.DateTime.ToString%28System.String%29> 3 番目の呼び出しによって生成される出力では、g 書式指定子を使用して、時間部分 (0) を指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1849">Note that the output produced by the third call to the <xref:System.DateTime.ToString%28System.String%29> method uses the g format specifier to include the time component, which is zero.</span></span>  
  
 [!code-csharp[System.DateTime.Today#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Today/cs/Today1.cs#1)]
 [!code-vb[System.DateTime.Today#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Today/vb/Today1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Now" />
        <altmember cref="P:System.DateTime.TimeOfDay" />
      </Docs>
    </Member>
    <Member MemberName="ToFileTime">
      <MemberSignature Language="C#" Value="public long ToFileTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToFileTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToFileTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToFileTime () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToFileTime();" />
      <MemberSignature Language="F#" Value="member this.ToFileTime : unit -&gt; int64" Usage="dateTime.ToFileTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46cae-1850">現在の <see cref="T:System.DateTime" /> オブジェクトの値を Windows ファイル時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1850">Converts the value of the current <see cref="T:System.DateTime" /> object to a Windows file time.</span></span></summary>
        <returns><span data-ttu-id="46cae-1851">現在の <see cref="T:System.DateTime" /> オブジェクトの値を Windows ファイル時刻で表した値。</span><span class="sxs-lookup"><span data-stu-id="46cae-1851">The value of the current <see cref="T:System.DateTime" /> object expressed as a Windows file time.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1852">Windows ファイル時刻は、64年1月 1601 1 日の午前0時から12:00 に経過した100ナノ秒間隔の数を表すビット値です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1852">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="46cae-1853">西暦協定世界時 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="46cae-1853">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="46cae-1854">Windows では、ファイルの作成、アクセス、またはファイルへの書き込みを行うときに、ファイルの時刻が記録されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1854">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="46cae-1855">メソッド<xref:System.DateTime.ToFileTime%2A>は、 <xref:System.DateTime.Kind%2A>プロパティを使用して、現在<xref:System.DateTime>のオブジェクトが現地時刻であるか、UTC 時刻であるか、または現地時刻として扱われる、指定されていない時間であるかを判断します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1855">The <xref:System.DateTime.ToFileTime%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a local time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1856">メソッドの<xref:System.DateTime.ToFileTime%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1856">The following example demonstrates the <xref:System.DateTime.ToFileTime%2A> method.</span></span>  
  
 [!code-cpp[DateTime.ToFileTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToFileTime/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.ToFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToFileTime/CS/class1.cs#1)]
 [!code-vb[DateTime.ToFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToFileTime/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-1857">結果のファイル時刻が、</span><span class="sxs-lookup"><span data-stu-id="46cae-1857">The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E.</span></span> <span data-ttu-id="46cae-1858">西暦 1601 年 1 月 1 日深夜 12:00 時 (UTC) よりも前の日時を表すことがあります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1858">UTC.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="46cae-1859">通常、メソッド<see cref="M:System.DateTime.FromFileTime(System.Int64)" />は、 <see cref="M:System.DateTime.ToFileTime" />メソッド<see cref="T:System.DateTime" />によって保存された値を復元します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1859">Ordinarily, the <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> method restores a <see cref="T:System.DateTime" /> value that was saved by the <see cref="M:System.DateTime.ToFileTime" /> method.</span></span> <span data-ttu-id="46cae-1860">ただし、次のような状況では、2つの値が異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1860">However, the two values may differ under the following conditions:</span></span> 
<span data-ttu-id="46cae-1861">- <see cref="T:System.DateTime" />値のシリアル化と逆シリアル化が異なるタイムゾーンで発生する場合。</span><span class="sxs-lookup"><span data-stu-id="46cae-1861">-   If the serialization and deserialization of the <see cref="T:System.DateTime" /> value occur in different time zones.</span></span> <span data-ttu-id="46cae-1862">たとえば、午後12:30 の<see cref="T:System.DateTime" />時刻の値の場合、</span><span class="sxs-lookup"><span data-stu-id="46cae-1862">For example, if a <see cref="T:System.DateTime" /> value with a time of 12:30 P.M.</span></span> <span data-ttu-id="46cae-1863">米国米国では、東部標準時のタイムゾーンがシリアル化され、逆シリアル化されます。太平洋標準時ゾーン (元の値は午後 12:30)</span><span class="sxs-lookup"><span data-stu-id="46cae-1863">in the U.S. Eastern Time zone is serialized, and then deserialized in the U.S. Pacific Time zone, the original value of 12:30 P.M.</span></span> <span data-ttu-id="46cae-1864">は午前9:30 に調整されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1864">is adjusted to 9:30 A.M.</span></span> <span data-ttu-id="46cae-1865">2つのタイムゾーンの違いを反映する場合は。</span><span class="sxs-lookup"><span data-stu-id="46cae-1865">to reflect the difference between the two time zones.</span></span>  
  
<span data-ttu-id="46cae-1866">-シリアル化<see cref="T:System.DateTime" />された値がローカルタイムゾーンの無効な時刻を表している場合。</span><span class="sxs-lookup"><span data-stu-id="46cae-1866">-   If the <see cref="T:System.DateTime" /> value that is serialized represents an invalid time in the local time zone.</span></span> <span data-ttu-id="46cae-1867">この場合、メソッドは<see cref="M:System.DateTime.ToFileTime" /> 、ローカルタイムゾーン<see cref="T:System.DateTime" />の有効な時刻を表すように、復元された値を調整します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1867">In this case, the <see cref="M:System.DateTime.ToFileTime" /> method adjusts the restored <see cref="T:System.DateTime" /> value so that it represents a valid time in the local time zone.</span></span>  
  
<span data-ttu-id="46cae-1868">たとえば、標準時間から夏時間への移行は、米国の2:00 2010 年3月14日の太平洋標準時ゾーン (午前15時)、時間が1時間経過したとき、午前3時3:00</span><span class="sxs-lookup"><span data-stu-id="46cae-1868">For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="46cae-1869">この時間間隔は、無効な時刻、つまり、このタイムゾーンに存在しない時間間隔です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1869">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="46cae-1870">次の例は、この範囲内にある時間が<see cref="M:System.DateTime.ToFileTime" />メソッドによって長整数値に変換され、 <see cref="M:System.DateTime.FromFileTime(System.Int64)" />メソッドによって復元されると、元の値が有効な時刻になるように調整されることを示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1870">The following example shows that when a time that falls within this range is converted to a long integer value by the <see cref="M:System.DateTime.ToFileTime" /> method and is then restored by the <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="46cae-1871">この例に示すように、特定の日付と時刻の値を<see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />メソッドに渡すことによって、変更される可能性があるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1871">You can determine whether a particular date and time value may be subject to modification by passing it to the <see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" /> method, as the example illustrates.</span></span>  
  
<span data-ttu-id="46cae-1872">[!code-csharp[System.DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.fromfiletime/cs/fromfiletime1.cs#1)] [!code-vb[System.DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.fromfiletime/vb/fromfiletime1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="46cae-1872">[!code-csharp[System.DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.fromfiletime/cs/fromfiletime1.cs#1)] [!code-vb[System.DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.fromfiletime/vb/fromfiletime1.vb#1)]</span></span></para></block>
        <altmember cref="M:System.DateTime.ToFileTimeUtc" />
        <altmember cref="T:System.Int64" />
        <altmember cref="M:System.DateTime.ToUniversalTime" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="ToFileTimeUtc">
      <MemberSignature Language="C#" Value="public long ToFileTimeUtc ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToFileTimeUtc() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToFileTimeUtc" />
      <MemberSignature Language="VB.NET" Value="Public Function ToFileTimeUtc () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToFileTimeUtc();" />
      <MemberSignature Language="F#" Value="member this.ToFileTimeUtc : unit -&gt; int64" Usage="dateTime.ToFileTimeUtc " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46cae-1873">現在の <see cref="T:System.DateTime" /> オブジェクトの値を Windows ファイル時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1873">Converts the value of the current <see cref="T:System.DateTime" /> object to a Windows file time.</span></span></summary>
        <returns><span data-ttu-id="46cae-1874">現在の <see cref="T:System.DateTime" /> オブジェクトの値を Windows ファイル時刻で表した値。</span><span class="sxs-lookup"><span data-stu-id="46cae-1874">The value of the current <see cref="T:System.DateTime" /> object expressed as a Windows file time.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1875">Windows ファイル時刻は、64年1月 1601 1 日の午前0時から12:00 に経過した100ナノ秒間隔の数を表すビット値です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1875">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="46cae-1876">西暦協定世界時 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="46cae-1876">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="46cae-1877">Windows では、ファイルの作成、アクセス、またはファイルへの書き込みを行うときに、ファイルの時刻が記録されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1877">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="46cae-1878">メソッド<xref:System.DateTime.ToFileTimeUtc%2A>は、 <xref:System.DateTime.Kind%2A>プロパティを使用して、現在<xref:System.DateTime>のオブジェクトが現地時刻であるか、utc 時刻であるか、または utc 時刻として扱われる、指定されていない時間であるかを判断します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1878">The <xref:System.DateTime.ToFileTimeUtc%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a UTC time.</span></span> <span data-ttu-id="46cae-1879">現地時刻の場合は、時刻を UTC に変換してから、Windows ファイル時刻への変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1879">If it is a local time, it converts the time to UTC before performing the conversion to a Windows file time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-1880">結果のファイル時刻が、</span><span class="sxs-lookup"><span data-stu-id="46cae-1880">The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E.</span></span> <span data-ttu-id="46cae-1881">西暦 1601 年 1 月 1 日深夜 12:00 時 (UTC) よりも前の日時を表すことがあります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1881">UTC.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="46cae-1882">メソッドは、現地時刻を UTC に変換し、その後メソッドを<see cref="M:System.DateTime.FromFileTimeUtc(System.Int64)" />呼び出し<see cref="M:System.DateTime.ToLocalTime" />て復元する場合に使用されることがあります。 <see cref="M:System.DateTime.ToFileTimeUtc" /></span><span class="sxs-lookup"><span data-stu-id="46cae-1882">The <see cref="M:System.DateTime.ToFileTimeUtc" /> method is sometimes used to convert a local time to UTC, and subsequently to restore it by calling the <see cref="M:System.DateTime.FromFileTimeUtc(System.Int64)" /> method followed by the <see cref="M:System.DateTime.ToLocalTime" /> method.</span></span> <span data-ttu-id="46cae-1883">ただし、元の時刻がローカルタイムゾーンの無効な時刻を表している場合、2つのローカル時刻値は等しくなりません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1883">However, if the original time represents an invalid time in the local time zone, the two local time values will not be equal.</span></span> <span data-ttu-id="46cae-1884">詳細については、 <see cref="M:System.DateTime.ToLocalTime" />メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1884">For additional information, see the <see cref="M:System.DateTime.ToLocalTime" /> method.</span></span></para></block>
        <altmember cref="M:System.DateTime.ToFileTime" />
        <altmember cref="T:System.Int64" />
        <altmember cref="M:System.DateTime.ToUniversalTime" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="ToLocalTime">
      <MemberSignature Language="C#" Value="public DateTime ToLocalTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime ToLocalTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToLocalTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLocalTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime ToLocalTime();" />
      <MemberSignature Language="F#" Value="member this.ToLocalTime : unit -&gt; DateTime" Usage="dateTime.ToLocalTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46cae-1885">現在の <see cref="T:System.DateTime" /> オブジェクトの値を現地時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1885">Converts the value of the current <see cref="T:System.DateTime" /> object to local time.</span></span></summary>
        <returns><span data-ttu-id="46cae-1886"><see cref="P:System.DateTime.Kind" /> プロパティが <see cref="F:System.DateTimeKind.Local" /> であるオブジェクト。通常は、現在の <see cref="T:System.DateTime" /> オブジェクトと等価な現地時刻が値として格納されます。ただし、変換後の値が <see cref="F:System.DateTime.MaxValue" /> オブジェクトで表現可能な範囲を超えている場合は <see cref="T:System.DateTime" /> の値が格納され、逆に変換跡の値が <see cref="F:System.DateTime.MinValue" /> オブジェクトで表現可能な範囲を下回る場合は <see cref="T:System.DateTime" /> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1886">An object whose <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Local" />, and whose value is the local time equivalent to the value of the current <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MaxValue" /> if the converted value is too large to be represented by a <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MinValue" /> if the converted value is too small to be represented as a <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1887">現地時刻は、協定世界時 (UTC) の時刻に UTC オフセットを加えた値と等しくなります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1887">The local time is equal to the Coordinated Universal Time (UTC) time plus the UTC offset.</span></span> <span data-ttu-id="46cae-1888">UTC オフセットの詳細については、 <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=nameWithType>「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1888">For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-1889">変換では、現在<xref:System.DateTime>のオブジェクトで表される時間に適用される夏時間ルールも考慮されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1889">The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="46cae-1890">システム[!INCLUDE[winxp](~/includes/winxp-md.md)]では、 <xref:System.DateTime.ToLocalTime%2A>メソッドは UTC から現地時刻への変換時に現在の調整規則のみを認識します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1890">On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToLocalTime%2A> method recognizes only the current adjustment rule when converting from UTC to local time.</span></span> <span data-ttu-id="46cae-1891">その結果、現在の調整規則が適用される前の期間の変換によって、UTC と現地時刻の差が正確に反映されない場合があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1891">As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between UTC and local time.</span></span>  
  
 <span data-ttu-id="46cae-1892">.NET Framework バージョン2.0 以降では、 <xref:System.DateTime.ToLocalTime%2A>メソッドによって返される値は、現在<xref:System.DateTime.Kind%2A> <xref:System.DateTime>のオブジェクトのプロパティによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1892">Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToLocalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object.</span></span> <span data-ttu-id="46cae-1893">次の表では、考えられる結果について説明します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1893">The following table describes the possible results.</span></span>  
  
|<span data-ttu-id="46cae-1894">種類</span><span class="sxs-lookup"><span data-stu-id="46cae-1894">Kind</span></span>|<span data-ttu-id="46cae-1895">結果</span><span class="sxs-lookup"><span data-stu-id="46cae-1895">Results</span></span>|  
|----------|-------------|  
|<xref:System.DateTimeKind.Utc>|<span data-ttu-id="46cae-1896">の<xref:System.DateTime>このインスタンスは、現地時刻に変換されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1896">This instance of <xref:System.DateTime> is converted to local time.</span></span>|  
|<xref:System.DateTimeKind.Local>|<span data-ttu-id="46cae-1897">変換は実行されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1897">No conversion is performed.</span></span>|  
|<xref:System.DateTimeKind.Unspecified>|<span data-ttu-id="46cae-1898">こののインスタンス<xref:System.DateTime>は UTC 時刻であると見なされ、がの<xref:System.DateTimeKind.Utc>場合<xref:System.DateTime.Kind%2A>と同様に変換が実行されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1898">This instance of <xref:System.DateTime> is assumed to be a UTC time, and the conversion is performed as if <xref:System.DateTime.Kind%2A> were <xref:System.DateTimeKind.Utc>.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="46cae-1899">メソッド<xref:System.DateTime.ToLocalTime%2A>は、値<xref:System.DateTime>を UTC から現地時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1899">The <xref:System.DateTime.ToLocalTime%2A> method converts a <xref:System.DateTime> value from UTC to local time.</span></span> <span data-ttu-id="46cae-1900">指定されたタイムゾーンの時刻を現地時刻に変換するに<xref:System.TimeZoneInfo.ConvertTime%2A?displayProperty=nameWithType>は、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1900">To convert the time in any designated time zone to local time, use the <xref:System.TimeZoneInfo.ConvertTime%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="46cae-1901">変換によって返される値は<xref:System.DateTime> 、 <xref:System.DateTime.Kind%2A>が常に<xref:System.DateTimeKind.Local>を返すプロパティを持つです。</span><span class="sxs-lookup"><span data-stu-id="46cae-1901">The value returned by the conversion is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property always returns <xref:System.DateTimeKind.Local>.</span></span> <span data-ttu-id="46cae-1902">したがって、が繰り返し<xref:System.DateTime.ToLocalTime%2A> <xref:System.DateTime>適用される場合でも、有効な結果が返されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1902">Consequently, a valid result is returned even if <xref:System.DateTime.ToLocalTime%2A> is applied repeatedly to the same <xref:System.DateTime>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1903">メソッドの<xref:System.DateTime.ToLocalTime%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1903">The following example demonstrates the <xref:System.DateTime.ToLocalTime%2A> method.</span></span> <span data-ttu-id="46cae-1904">正確な出力は、現在のカルチャと、それが実行されるシステムのローカルタイムゾーンによって異なります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1904">Note that the exact output depends on the current culture and the local time zone of the system on which it is run.</span></span>  
  
 [!code-cpp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CS/class1.cs#1)]
 [!code-vb[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/VB/class1.vb#1)]  
  
 <span data-ttu-id="46cae-1905">次の例では<xref:System.DateTime.SpecifyKind%2A> 、メソッドを使用し<xref:System.DateTime.Kind%2A>て、メソッド<xref:System.DateTime.ToLocalTime%2A>と<xref:System.DateTime.ToUniversalTime%2A>変換メソッドに対してプロパティがどのように影響するかを示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1905">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="46cae-1906"><see cref="M:System.DateTime.ToLocalTime" />メソッドを使用し<see cref="M:System.DateTime.ToUniversalTime" />て、メソッドまたは<see cref="M:System.DateTime.FromFileTimeUtc(System.Int64)" />メソッドによって UTC に変換されたローカルの日付と時刻の値を復元できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1906">You can use the <see cref="M:System.DateTime.ToLocalTime" /> method to restore a local date and time value that was converted to UTC by the <see cref="M:System.DateTime.ToUniversalTime" /> or <see cref="M:System.DateTime.FromFileTimeUtc(System.Int64)" /> method.</span></span> <span data-ttu-id="46cae-1907">ただし、元の時刻がローカルタイムゾーンの無効な時刻を表している場合は、復元された値と一致しません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1907">However, if the original time represents an invalid time in the local time zone, it will not match the restored value.</span></span> <span data-ttu-id="46cae-1908"><see cref="M:System.DateTime.ToLocalTime" />メソッドが UTC からローカルタイムゾーンに時刻を変換するときに、ローカルタイムゾーンでが有効になるように時間を調整します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1908">When the <see cref="M:System.DateTime.ToLocalTime" /> method converts a time from UTC to the local time zone, it also adjusts the time so that is valid in the local time zone.</span></span>  
  
<span data-ttu-id="46cae-1909">たとえば、標準時間から夏時間への移行は、米国の2:00 2010 年3月14日の太平洋標準時ゾーン (午前15時)、時間が1時間経過したとき、午前3時3:00</span><span class="sxs-lookup"><span data-stu-id="46cae-1909">For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="46cae-1910">この時間間隔は、無効な時刻、つまり、このタイムゾーンに存在しない時間間隔です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1910">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="46cae-1911">次の例は、この範囲内にある時間が<see cref="M:System.DateTime.ToUniversalTime" />メソッドによって UTC に変換され、 <see cref="M:System.DateTime.ToLocalTime" />メソッドによって復元されると、元の値が有効な時刻になるように調整されることを示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-1911">The following example shows that when a time that falls within this range is converted to UTC by the <see cref="M:System.DateTime.ToUniversalTime" /> method and is then restored by the <see cref="M:System.DateTime.ToLocalTime" /> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="46cae-1912">この例に示すように、特定の日付と時刻の値を<see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />メソッドに渡すことによって、変更される可能性があるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1912">You can determine whether a particular date and time value may be subject to modification by passing it to the <see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" /> method, as the example illustrates.</span></span>  
  
<span data-ttu-id="46cae-1913">[!code-csharp[System.DateTime.ToLocalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tolocaltime/cs/tolocaltime1.cs#1)] [!code-vb[System.DateTime.ToLocalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tolocaltime/vb/tolocaltime1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="46cae-1913">[!code-csharp[System.DateTime.ToLocalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tolocaltime/cs/tolocaltime1.cs#1)] [!code-vb[System.DateTime.ToLocalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tolocaltime/vb/tolocaltime1.vb#1)]</span></span></para></block>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
        <altmember cref="M:System.TimeZone.GetDaylightChanges(System.Int32)" />
        <altmember cref="M:System.DateTime.ToUniversalTime" />
      </Docs>
    </Member>
    <Member MemberName="ToLongDateString">
      <MemberSignature Language="C#" Value="public string ToLongDateString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToLongDateString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToLongDateString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLongDateString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToLongDateString();" />
      <MemberSignature Language="F#" Value="member this.ToLongDateString : unit -&gt; string" Usage="dateTime.ToLongDateString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46cae-1914">現在の <see cref="T:System.DateTime" /> オブジェクトの値を、それと等価な長い形式の日付の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1914">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent long date string representation.</span></span></summary>
        <returns><span data-ttu-id="46cae-1915">現在の <see cref="T:System.DateTime" /> オブジェクトを長い形式の日付で表した文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1915">A string that contains the long date string representation of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1916">現在<xref:System.DateTime>のオブジェクトの値は、現在のスレッドカルチャに関連付け<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>られているプロパティによって定義されたパターンを使用して書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1916">The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> property associated with the current thread culture.</span></span> <span data-ttu-id="46cae-1917">戻り値は、 <xref:System.DateTime.ToString%28System.String%29>メソッドを使用して、標準の[DateTime 書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)"D" を指定することによって返される値と同じです。</span><span class="sxs-lookup"><span data-stu-id="46cae-1917">The return value is identical to the value returned by specifying the "D" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="46cae-1918"><xref:System.DateTime.ToLongDateString%2A>メソッドによって返される文字列は、カルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1918">The string returned by the <xref:System.DateTime.ToLongDateString%2A> method is culture-sensitive.</span></span> <span data-ttu-id="46cae-1919">このメソッドは、現在のカルチャの<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern?displayProperty=nameWithType>プロパティで定義されているパターンを反映します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1919">It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="46cae-1920">たとえば、en-us カルチャでは、標準の長い日付パターンは通常 "dddd, MMMM dd, yyyy" です。de 以外のカルチャでは、"dddd, d" になります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1920">For example, for the en-US culture, the standard long date pattern is commonly "dddd, MMMM dd, yyyy"; for the de-DE culture, it is "dddd, d.</span></span> <span data-ttu-id="46cae-1921">MMMM yyyy ";ja-jp カルチャでは、"yyyy ' 年 m ' 月 ' 日 '" になります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1921">MMMM yyyy"; for the ja-JP culture, it is "yyyy'年'M'月'd'日'".</span></span> <span data-ttu-id="46cae-1922">値は、.NET の実装とそのバージョン、オペレーティングシステムとバージョン、およびユーザーのカスタマイズによって異なる場合があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1922">Note that its value can vary depending on the .NET implementation and its version, the operating system and its version, and user customization.</span></span>

[!INCLUDE[culture-sensitive formatting](~/includes/thread-formatting.md)]
  
## Examples

<span data-ttu-id="46cae-1923">メソッドの<xref:System.DateTime.ToLongDateString%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1923">The following example demonstrates the <xref:System.DateTime.ToLongDateString%2A> method.</span></span>  
  
[!code-csharp[DateTime.ToShortLongString#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToShortLongString/cs/sls.cs#1)]
[!code-vb[DateTime.ToShortLongString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToShortLongString/vb/sls.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.DateTime.ToString" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="46cae-1924">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="46cae-1924">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="46cae-1925">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1925">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToLongTimeString">
      <MemberSignature Language="C#" Value="public string ToLongTimeString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToLongTimeString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToLongTimeString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLongTimeString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToLongTimeString();" />
      <MemberSignature Language="F#" Value="member this.ToLongTimeString : unit -&gt; string" Usage="dateTime.ToLongTimeString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46cae-1926">現在の <see cref="T:System.DateTime" /> オブジェクトの値を、それと等価な長い形式の時刻の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1926">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent long time string representation.</span></span></summary>
        <returns><span data-ttu-id="46cae-1927">現在の <see cref="T:System.DateTime" /> オブジェクトを長い形式の時刻で表した文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1927">A string that contains the long time string representation of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="46cae-1928">現在<xref:System.DateTime>のオブジェクトの値は、現在のスレッドカルチャに関連付け<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=nameWithType>られているプロパティによって定義されたパターンを使用して書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1928">The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=nameWithType> property associated with the current thread culture.</span></span> <span data-ttu-id="46cae-1929">戻り値は、 <xref:System.DateTime.ToString%28System.String%29>メソッドで "T" 標準の[日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)を指定することによって返される値と同じです。</span><span class="sxs-lookup"><span data-stu-id="46cae-1929">The return value is identical to the value returned by specifying the "T" [standard date and time format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="46cae-1930"><xref:System.DateTime.ToLongTimeString%2A>メソッドによって返される文字列は、カルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1930">The string returned by the <xref:System.DateTime.ToLongTimeString%2A> method is culture-sensitive.</span></span> <span data-ttu-id="46cae-1931">このメソッドは、現在のカルチャの<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=nameWithType>プロパティで定義されているパターンを反映します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1931">It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="46cae-1932">たとえば、en-us カルチャでは、標準の長い時刻パターンは "h:mm: ss tt" です。de 以外のカルチャでは、"HH: mm: ss" です。ja-jp カルチャでは、"H:mm: ss" になります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1932">For example, for the en-US culture, the standard long time pattern is "h:mm:ss tt"; for the de-DE culture, it is "HH:mm:ss"; for the ja-JP culture, it is "H:mm:ss".</span></span> <span data-ttu-id="46cae-1933">値は、.NET の実装とそのバージョン、オペレーティングシステムとバージョン、およびユーザーのカスタマイズによって異なる場合があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1933">Note that its value can vary depending on the .NET implementation and its version, the operating system and its version, and user customization.</span></span>

[!INCLUDE[culture-sensitive-formatting](~/includes/thread-formatting.md)]
  
## Examples  
 <span data-ttu-id="46cae-1934">メソッドの<xref:System.DateTime.ToLongTimeString%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1934">The following example demonstrates the <xref:System.DateTime.ToLongTimeString%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.ToLongTimeString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tolongtimestring/cs/sls.cs#1)]
 [!code-vb[System.DateTime.ToLongTimeString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tolongtimestring/vb/sls.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.DateTime.ToString" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="46cae-1935">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="46cae-1935">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="46cae-1936">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1936">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToOADate">
      <MemberSignature Language="C#" Value="public double ToOADate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 ToOADate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToOADate" />
      <MemberSignature Language="VB.NET" Value="Public Function ToOADate () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ToOADate();" />
      <MemberSignature Language="F#" Value="member this.ToOADate : unit -&gt; double" Usage="dateTime.ToOADate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46cae-1937">このインスタンスの値をそれと等価な OLE オートメーション日付に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1937">Converts the value of this instance to the equivalent OLE Automation date.</span></span></summary>
        <returns><span data-ttu-id="46cae-1938">このインスタンスの値と等価の OLE オートメーション日付を格納している倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="46cae-1938">A double-precision floating-point number that contains an OLE Automation date equivalent to the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1939">OLE オートメーション日付は、浮動小数点数として実装されます。これは、整数部分が午前0時から1899年12月30日までの日数で、小数部分がその日の日付を24で割った値であることを表します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1939">An OLE Automation date is implemented as a floating-point number whose integral component is the number of days before or after midnight, 30 December 1899, and whose fractional component represents the time on that day divided by 24.</span></span> <span data-ttu-id="46cae-1940">たとえば、午前0時、1899年12月31日は1.0 によって表されます。午前6時、1900年1月1日は2.25 で表されます。午前0時 (1899 年12月29日) は-1.0 によって表されます。また、午前6時には、1899年12月29日は-1.25 で表されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1940">For example, midnight, 31 December 1899 is represented by 1.0; 6 A.M., 1 January 1900 is represented by 2.25; midnight, 29 December 1899 is represented by -1.0; and 6 A.M., 29 December 1899 is represented by -1.25.</span></span>  
  
 <span data-ttu-id="46cae-1941">基本 OLE オートメーション日付は、1899年12月30日午前0時です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1941">The base OLE Automation Date is midnight, 30 December 1899.</span></span> <span data-ttu-id="46cae-1942">OLE オートメーションの最小日付は、0100年1月1日午前0時になります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1942">The minimum OLE Automation date is midnight, 1 January 0100.</span></span> <span data-ttu-id="46cae-1943">OLE オートメーションの最大日付は、9999年<xref:System.DateTime.MaxValue?displayProperty=nameWithType>12 月31日の最後の瞬間と同じです。</span><span class="sxs-lookup"><span data-stu-id="46cae-1943">The maximum OLE Automation Date is the same as <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, the last moment of 31 December 9999.</span></span>  
  
 <span data-ttu-id="46cae-1944">現在<xref:System.DateTime.ToOADate%2A>のインスタンスが<xref:System.OverflowException> 、0100 January1 の午前0時よりも<xref:System.DateTime.MaxValue>後の日付を表している場合、メソッドはをスローします。</span><span class="sxs-lookup"><span data-stu-id="46cae-1944">The <xref:System.DateTime.ToOADate%2A> method throws an <xref:System.OverflowException> if the current instance represents a date that is later than <xref:System.DateTime.MaxValue> and earlier than midnight on January1, 0100.</span></span> <span data-ttu-id="46cae-1945">ただし、現在のインスタンスの値が<xref:System.DateTime.MinValue>の場合、メソッドは0を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1945">However, if the value of the current instance is <xref:System.DateTime.MinValue>, the method returns 0.</span></span>  
  
 <span data-ttu-id="46cae-1946">OLE オートメーションの詳細については、 [MSDN ライブラリ](https://go.microsoft.com/fwlink/?linkid=37118)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1946">For more information about OLE Automation, see the [MSDN Library](https://go.microsoft.com/fwlink/?linkid=37118).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="46cae-1947">このインスタンスの値を OLE オートメーション日付として表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="46cae-1947">The value of this instance cannot be represented as an OLE Automation Date.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.DateTime.FromOADate(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ToShortDateString">
      <MemberSignature Language="C#" Value="public string ToShortDateString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToShortDateString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToShortDateString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToShortDateString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToShortDateString();" />
      <MemberSignature Language="F#" Value="member this.ToShortDateString : unit -&gt; string" Usage="dateTime.ToShortDateString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46cae-1948">現在の <see cref="T:System.DateTime" /> オブジェクトの値を、それと等価な短い形式の日付の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1948">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent short date string representation.</span></span></summary>
        <returns><span data-ttu-id="46cae-1949">現在の <see cref="T:System.DateTime" /> オブジェクトを短い形式の日付で表した文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1949">A string that contains the short date string representation of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1950">現在<xref:System.DateTime>のオブジェクトの値は、現在のスレッドカルチャに関連付け<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A?displayProperty=nameWithType>られているプロパティによって定義されたパターンを使用して書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1950">The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A?displayProperty=nameWithType> property associated with the current thread culture.</span></span> <span data-ttu-id="46cae-1951">戻り値は、 <xref:System.DateTime.ToString%28System.String%29>メソッドを使用して、標準の[DateTime 書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)"d" を指定することによって返される値と同じです。</span><span class="sxs-lookup"><span data-stu-id="46cae-1951">The return value is identical to the value returned by specifying the "d" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="46cae-1952"><xref:System.DateTime.ToShortDateString%2A>メソッドによって返される文字列は、カルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1952">The string returned by the <xref:System.DateTime.ToShortDateString%2A> method is culture-sensitive.</span></span> <span data-ttu-id="46cae-1953">このメソッドは、現在のカルチャの<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern?displayProperty=nameWithType>プロパティで定義されているパターンを反映します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1953">It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="46cae-1954">たとえば、en-us カルチャでは、標準の短い形式の日付パターンは "M/d/yyyy" です。de 以外のカルチャでは、"dd" になります。MM. yyyy ";ja-jp カルチャでは、"yyyy/MM/dd" になります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1954">For example, for the en-US culture, the standard short date pattern is "M/d/yyyy"; for the de-DE culture, it is "dd.MM.yyyy"; for the ja-JP culture, it is "yyyy/MM/dd".</span></span> <span data-ttu-id="46cae-1955">値は、.NET の実装とそのバージョン、オペレーティングシステムとバージョン、およびユーザーのカスタマイズによって異なる場合があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1955">Note that its value can vary depending on the .NET implementation and its version, the operating system and its version, and user customization.</span></span>

[!INCLUDE[culture-sensitive formatting](~/includes/thread-formatting.md)]

## Examples  
 <span data-ttu-id="46cae-1956">メソッドの<xref:System.DateTime.ToShortDateString%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1956">The following example demonstrates the <xref:System.DateTime.ToShortDateString%2A> method.</span></span> <span data-ttu-id="46cae-1957">また、 <xref:System.DateTime.ToShortDateString%2A>メソッドを呼び出した結果が、format パラメーターとして " <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> d" を指定してメソッドを呼び出すことと同じであることもわかります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1957">It also shows that the result of calling the <xref:System.DateTime.ToShortDateString%2A> method is identical to calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method with "d" as the format parameter.</span></span>  
  
 [!code-csharp[System.DateTime.ToShortDateString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToShortDateString/cs/ToShortDateString.cs#1)]
 [!code-vb[System.DateTime.ToShortDateString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToShortDateString/vb/ToShortDateString.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.DateTime.ToString" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="46cae-1958">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="46cae-1958">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="46cae-1959">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1959">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToShortTimeString">
      <MemberSignature Language="C#" Value="public string ToShortTimeString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToShortTimeString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToShortTimeString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToShortTimeString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToShortTimeString();" />
      <MemberSignature Language="F#" Value="member this.ToShortTimeString : unit -&gt; string" Usage="dateTime.ToShortTimeString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46cae-1960">現在の <see cref="T:System.DateTime" /> オブジェクトの値を、それと等価な短い形式の時刻の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1960">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent short time string representation.</span></span></summary>
        <returns><span data-ttu-id="46cae-1961">現在の <see cref="T:System.DateTime" /> オブジェクトを短い形式の時刻で表した文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-1961">A string that contains the short time string representation of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="46cae-1962">現在<xref:System.DateTime>のオブジェクトの値は、現在のスレッドカルチャに関連付け<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A?displayProperty=nameWithType>られているプロパティによって定義されたパターンを使用して書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1962">The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A?displayProperty=nameWithType> property associated with the current thread culture.</span></span> <span data-ttu-id="46cae-1963">戻り値は、 <xref:System.DateTime.ToString%28System.String%29>メソッドで "t" 標準の[DateTime 形式の文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)を指定することによって返される値と同じです。</span><span class="sxs-lookup"><span data-stu-id="46cae-1963">The return value is identical to the value returned by specifying the "t" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="46cae-1964"><xref:System.DateTime.ToShortTimeString%2A>メソッドによって返される文字列は、カルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1964">The string returned by the <xref:System.DateTime.ToShortTimeString%2A> method is culture-sensitive.</span></span> <span data-ttu-id="46cae-1965">このメソッドは、現在のカルチャの<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern?displayProperty=nameWithType>プロパティで定義されているパターンを反映します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1965">It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="46cae-1966">たとえば、en-us カルチャでは、標準の短い時刻パターンは "h:mm tt" です。de 以外のカルチャでは、"HH: mm" になります。ja-jp カルチャでは、"H:mm" になります。</span><span class="sxs-lookup"><span data-stu-id="46cae-1966">For example, for the en-US culture, the standard short time pattern is "h:mm tt"; for the de-DE culture, it is "HH:mm"; for the ja-JP culture, it is "H:mm".</span></span> <span data-ttu-id="46cae-1967">値は、.NET の実装とそのバージョン、オペレーティングシステムとバージョン、およびユーザーのカスタマイズによって異なる場合があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1967">Note that its value can vary depending on the .NET implementation and its version, the operating system and its version, and user customization.</span></span> 

[!INCLUDE[culture-sensitive formatting](~/includes/thread-formatting.md)]

## Examples  
 <span data-ttu-id="46cae-1968">メソッドの<xref:System.DateTime.ToShortTimeString%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1968">The following example demonstrates the <xref:System.DateTime.ToShortTimeString%2A> method.</span></span>  
  
 [!code-csharp[DateTime.ToShortLongString#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToShortLongString/cs/sls.cs#1)]
 [!code-vb[DateTime.ToShortLongString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToShortLongString/vb/sls.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.DateTime.ToString" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="46cae-1969">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="46cae-1969">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="46cae-1970">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-1970">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="46cae-1971">現在の <see cref="T:System.DateTime" /> オブジェクトの値を等価の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1971">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dateTime.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46cae-1972">現在のカルチャの書式指定規則を使用して、現在の <see cref="T:System.DateTime" /> オブジェクトの値をそれと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1972">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the formatting conventions of the current culture.</span></span></summary>
        <returns><span data-ttu-id="46cae-1973">現在の <see cref="T:System.DateTime" /> オブジェクトの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="46cae-1973">A string representation of the value of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1974">現在<xref:System.DateTime>のオブジェクトの値は、一般的な日付と時刻の書式指定子 (' G ') を使用して書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1974">The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G').</span></span> <span data-ttu-id="46cae-1975">特定の日時書式指定子を使用して書式設定するに<xref:System.DateTime.ToString%28System.String%29>は、メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1975">To format it using a specific date and time format specifier, call the <xref:System.DateTime.ToString%28System.String%29> method.</span></span> <span data-ttu-id="46cae-1976">特定のカルチャに対して一般的な日付と時刻の書式指定子 (' G ') を使用し<xref:System.DateTime.ToString%28System.IFormatProvider%29>て書式設定するには、メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1976">To format it using the general date and time format specifier ('G') for a specific culture, call the <xref:System.DateTime.ToString%28System.IFormatProvider%29> method.</span></span> <span data-ttu-id="46cae-1977">特定の日時書式指定子と特定のカルチャの規則を使用して書式設定するには<xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> 、メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1977">To format it using a specific date and time format specifier and the conventions of a specific culture, call the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="46cae-1978">このメソッドは、現在のカルチャから派生した書式設定情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1978">This method uses formatting information derived from the current culture.</span></span> <span data-ttu-id="46cae-1979">特に、 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> `Thread.CurrentThread.CurrentCulture.DateTimeFormat`プロパティによって返される<xref:System.Globalization.DateTimeFormatInfo>オブジェクトのプロパティと<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>プロパティによって返されるカスタム書式指定文字列を結合します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1979">In particular, it combines the custom format strings returned by the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> and <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> properties of the <xref:System.Globalization.DateTimeFormatInfo> object returned by the `Thread.CurrentThread.CurrentCulture.DateTimeFormat` property.</span></span> <span data-ttu-id="46cae-1980">詳細については、「<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-1980">For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-1981"><xref:System.DateTime.ToString%2A>メソッドの他のオーバーロードを使用すると、書式設定を使用するカルチャを指定し、 <xref:System.DateTime>値の出力パターンを定義できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1981">Other overloads of the <xref:System.DateTime.ToString%2A> method enable you to specify the culture whose formatting to use and to define the output pattern of the <xref:System.DateTime> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-1982">次の例では、 <xref:System.DateTime> <xref:System.DateTime.ToString>メソッドによって返される値の文字列形式が、スレッドの現在のカルチャに依存しているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1982">The following example illustrates how the string representation of a <xref:System.DateTime> value returned by the <xref:System.DateTime.ToString> method depends on the thread current culture.</span></span> <span data-ttu-id="46cae-1983">現在のスレッドカルチャを en-us から fr-fr に、ja-jp に変更します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1983">It changes the current thread culture from en-US to fr-FR to ja-JP.</span></span> <span data-ttu-id="46cae-1984">各ケースでは、 <xref:System.DateTime.ToString>メソッドを呼び出して、そのカルチャを使用して日付と時刻の値の文字列形式を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1984">and in each case calls the <xref:System.DateTime.ToString> method to return the string representation of a date and time value using that culture.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.DateTime.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-1985">日時が、現在のカルチャで使用されるカレンダーでサポートされている日付の範囲外です。</span><span class="sxs-lookup"><span data-stu-id="46cae-1985">The date and time is outside the range of dates supported by the calendar used by the current culture.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="46cae-1986">メソッド<see cref="M:System.DateTime.ToString" />は、現在のカルチャで使用されている暦での日付と時刻の文字列形式を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1986">The <see cref="M:System.DateTime.ToString" /> method returns the string representation of the date and time in the calendar used by the current culture.</span></span> <span data-ttu-id="46cae-1987">現在<see cref="T:System.DateTime" />のインスタンスの値がより<see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />も<see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />前か後である場合、メソッドはを<see cref="T:System.ArgumentOutOfRangeException" />スローします。</span><span class="sxs-lookup"><span data-stu-id="46cae-1987">If the value of the current <see cref="T:System.DateTime" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="46cae-1988">具体的な例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1988">The following example provides an illustration.</span></span> <span data-ttu-id="46cae-1989">現在のカルチャがアラビア語 (シリア) の場合、 <see cref="T:System.Globalization.HijriCalendar" />クラスの範囲外の日付の書式を設定しようとします。</span><span class="sxs-lookup"><span data-stu-id="46cae-1989">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.HijriCalendar" /> class when the current culture is Arabic (Syria).</span></span>  
  
<span data-ttu-id="46cae-1990">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception2.cs#2)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception2.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="46cae-1990">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception2.cs#2)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception2.vb#2)]</span></span></para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="dateTime.ToString provider" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46cae-1991">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-1991">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="46cae-1992">指定したカルチャ固有の書式情報を使用して、現在の <see cref="T:System.DateTime" /> オブジェクトの値をそれと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1992">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="46cae-1993"><see cref="T:System.DateTime" /> により指定された、現在の <paramref name="provider" /> オブジェクトの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="46cae-1993">A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-1994">現在<xref:System.DateTime>のオブジェクトの値は、一般的な日付と時刻の書式指定子 (' G ') を使用して書式設定されます。これは、短い形式の日付パターンと長い形式の時刻パターンを使用して出力を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-1994">The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G'), which formats output using the short date pattern and the long time pattern.</span></span>  
  
 <span data-ttu-id="46cae-1995">短い日付パターンと長い時刻パターンの形式は、 `provider`パラメーターによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1995">The format of the short date and long time pattern is defined by the `provider` parameter.</span></span> <span data-ttu-id="46cae-1996">パラメーター `provider`には、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-1996">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="46cae-1997">返される文字列に書式規則が反映されるカルチャを表すオブジェクト。<xref:System.Globalization.CultureInfo></span><span class="sxs-lookup"><span data-stu-id="46cae-1997">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="46cae-1998">プロパティによって返されるオブジェクトは<xref:System.Globalization.DateTimeFormatInfo> 、返される文字列の書式を定義します。 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-1998">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="46cae-1999">日付と時刻のデータの形式を定義するオブジェクト。<xref:System.Globalization.DateTimeFormatInfo></span><span class="sxs-lookup"><span data-stu-id="46cae-1999">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="46cae-2000"><xref:System.IFormatProvider>インターフェイスを実装するカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-2000">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="46cae-2001">このメソッドは、 <xref:System.Globalization.DateTimeFormatInfo>書式設定情報を提供するオブジェクトを返します。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-2001">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="46cae-2002">が`provider` <xref:System.Globalization.DateTimeFormatInfo>の場合は、現在のカルチャに関連付けられているオブジェクトが使用されます。 `null`</span><span class="sxs-lookup"><span data-stu-id="46cae-2002">If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object associated with the current culture is used.</span></span> <span data-ttu-id="46cae-2003">詳細については、「<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-2003">For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-2004">次の例では、5つの異なるカルチャを表す<xref:System.Globalization.CultureInfo>オブジェクトを使用して、日付と時刻の文字列形式を表示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2004">The following example displays the string representation of a date and time using <xref:System.Globalization.CultureInfo> objects that represent five different cultures.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString4.cs#3)]
 [!code-vb[System.DateTime.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString4.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-2005">日時が、<paramref name="provider" /> で使用されるカレンダーでサポートされている日付の範囲外です。</span><span class="sxs-lookup"><span data-stu-id="46cae-2005">The date and time is outside the range of dates supported by the calendar used by <paramref name="provider" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="46cae-2006">メソッド<see cref="M:System.DateTime.ToString(System.IFormatProvider)" />は、 <paramref name="provider" />パラメーターによって表されるカルチャによって使用される暦での日付と時刻の文字列形式を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2006">The <see cref="M:System.DateTime.ToString(System.IFormatProvider)" /> method returns the string representation of the date and time in the calendar used by the culture represented by the <paramref name="provider" /> parameter.</span></span> <span data-ttu-id="46cae-2007">そのカレンダーは、 <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />プロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2007">Its calendar is defined by the <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> property.</span></span> <span data-ttu-id="46cae-2008">現在<see cref="T:System.DateTime" />のインスタンスの値がより<see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />も<see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />前か後である場合、メソッドはを<see cref="T:System.ArgumentOutOfRangeException" />スローします。</span><span class="sxs-lookup"><span data-stu-id="46cae-2008">If the value of the current <see cref="T:System.DateTime" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="46cae-2009">具体的な例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2009">The following example provides an illustration.</span></span> <span data-ttu-id="46cae-2010"><see cref="T:System.Globalization.JapaneseCalendar" />クラスの範囲外の日付の書式を設定しようとします。</span><span class="sxs-lookup"><span data-stu-id="46cae-2010">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.JapaneseCalendar" /> class.</span></span>  
  
<span data-ttu-id="46cae-2011">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception1.cs#1)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="46cae-2011">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception1.cs#1)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception1.vb#1)]</span></span></para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="dateTime.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="46cae-2012">標準またはカスタムの日時書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-2012">A standard or custom date and time format string.</span></span></param>
        <summary><span data-ttu-id="46cae-2013">指定した形式および現在のカルチャの書式指定規則を使用して、現在の <see cref="T:System.DateTime" /> オブジェクトの値をそれと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2013">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified format and the formatting conventions of the current culture.</span></span></summary>
        <returns><span data-ttu-id="46cae-2014"><see cref="T:System.DateTime" /> により指定された、現在の <paramref name="format" /> オブジェクトの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="46cae-2014">A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-2015">メソッド<xref:System.DateTime.ToString%28System.String%29>は、現在のカルチャの書式指定規則を使用する特定の形式で、日付と時刻の値の文字列形式を返します。詳細<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>については、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-2015">The <xref:System.DateTime.ToString%28System.String%29> method returns the string representation of a date and time value in a specific format that uses the formatting conventions of the current culture; for more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="46cae-2016">パラメーター `format`には、返されるの形式を定義する1つの書式指定子文字 ([標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)を参照) またはカスタム書式パターン (「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照) のいずれかを含める必要があります。文字列.</span><span class="sxs-lookup"><span data-stu-id="46cae-2016">The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)) that defines the format of the returned string.</span></span> <span data-ttu-id="46cae-2017">`format` が`null`または空の文字列の場合は、一般的な書式指定子 ' G ' が使用されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2017">If `format` is `null` or an empty string, the general format specifier, 'G', is used.</span></span>  
  
 <span data-ttu-id="46cae-2018">このメソッドの使用方法には、次のようなものがあります。</span><span class="sxs-lookup"><span data-stu-id="46cae-2018">Some uses of this method include:</span></span>  
  
-   <span data-ttu-id="46cae-2019">現在のカルチャの短い日付と時刻の形式で日付と時刻を表示する文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2019">Getting a string that displays the date and time in the current culture's short date and time format.</span></span> <span data-ttu-id="46cae-2020">これを行うには、"G" 書式指定子を使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2020">To do this, you use the "G" format specifier.</span></span>  
  
-   <span data-ttu-id="46cae-2021">Month と year のみを含む文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2021">Getting a string that contains only the month and year.</span></span> <span data-ttu-id="46cae-2022">これを行うには、"MM/yyyy" 書式指定文字列を使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2022">To do this, you use the "MM/yyyy" format string.</span></span> <span data-ttu-id="46cae-2023">書式指定文字列は、現在のカルチャの日付の区切り記号を使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2023">The format string uses the current culture's date separator.</span></span>  
  
-   <span data-ttu-id="46cae-2024">特定の形式の日付と時刻を含む文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2024">Getting a string that contains the date and time in a specific format.</span></span> <span data-ttu-id="46cae-2025">たとえば、"MM/dd/yyyyHH: mm" 書式指定文字列は、日付と時刻の文字列を "19//03//2013 18:06" などの固定形式で表示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2025">For example, the "MM/dd/yyyyHH:mm" format string displays the date and time string in a fixed format such as "19//03//2013 18:06".</span></span> <span data-ttu-id="46cae-2026">書式指定文字列では、カルチャ固有の設定に関係なく、固定の日付の区切り記号として "/" が使用されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2026">The format string uses "/" as a fixed date separator regardless of culture-specific settings.</span></span>  
  
-   <span data-ttu-id="46cae-2027">日付文字列をシリアル化するために使用できる、圧縮された形式で日付を取得しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-2027">Getting a date in a condensed format that could be used for serializing a date string.</span></span> <span data-ttu-id="46cae-2028">たとえば、"yyyyMMdd" 書式指定文字列では、4桁の年、2桁の月、および日付の区切り記号のない2桁の日が表示されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2028">For example, the "yyyyMMdd" format string displays a four-digit year followed by a two-digit month and a two-digit day with no date separator.</span></span>  
  
 <span data-ttu-id="46cae-2029">次の例では、これら3つの書式指定文字列を使用して、en-us および fr-fr カルチャの規則を使用して日付と時刻の値を表示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2029">The following example uses these three format strings to display a date and time value by using the conventions of the en-US and fr-FR cultures.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/tostring5.cs#5)]
 [!code-vb[System.DateTime.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/tostring5.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="46cae-2030">次の例では、標準の日時書式指定文字列と、カスタム日時書式指定文字列の選択を使用して、 <xref:System.DateTime>値の文字列形式を表示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2030">The following example uses each of the standard date and time format strings and a selection of custom date and time format strings to display the string representation of a <xref:System.DateTime> value.</span></span> <span data-ttu-id="46cae-2031">この例のスレッドの現在のカルチャは en-us です。</span><span class="sxs-lookup"><span data-stu-id="46cae-2031">The thread current culture for the example is en-US.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString2.cs#2)]
 [!code-vb[System.DateTime.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="46cae-2032"><paramref name="format" /> は長さが 1 であり、<see cref="T:System.Globalization.DateTimeFormatInfo" /> で定義されている書式指定文字の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-2032">The length of <paramref name="format" /> is 1, and it is not one of the format specifier characters defined for <see cref="T:System.Globalization.DateTimeFormatInfo" />.</span></span>  
  
<span data-ttu-id="46cae-2033">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-2033">-or-</span></span> 
 <span data-ttu-id="46cae-2034"><paramref name="format" /> には有効なカスタム書式パターンがありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-2034"><paramref name="format" /> does not contain a valid custom format pattern.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-2035">日時が、現在のカルチャで使用されるカレンダーでサポートされている日付の範囲外です。</span><span class="sxs-lookup"><span data-stu-id="46cae-2035">The date and time is outside the range of dates supported by the calendar used by the current culture.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="46cae-2036">メソッド<see cref="M:System.DateTime.ToString(System.String)" />は、現在のカルチャで使用されている暦での日付と時刻の文字列形式を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2036">The <see cref="M:System.DateTime.ToString(System.String)" /> method returns the string representation of the date and time in the calendar used by the current culture.</span></span> <span data-ttu-id="46cae-2037">現在<see cref="T:System.DateTime" />のインスタンスの値がより<see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />も<see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />前か後である場合、メソッドはを<see cref="T:System.ArgumentOutOfRangeException" />スローします。</span><span class="sxs-lookup"><span data-stu-id="46cae-2037">If the value of the current <see cref="T:System.DateTime" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="46cae-2038">具体的な例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2038">The following example provides an illustration.</span></span> <span data-ttu-id="46cae-2039">現在のカルチャがヘブライ語 (イスラエル) の場合、 <see cref="T:System.Globalization.HebrewCalendar" />クラスの範囲外の日付の書式を設定しようとします。</span><span class="sxs-lookup"><span data-stu-id="46cae-2039">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.HebrewCalendar" /> class when the current culture is Hebrew (Israel).</span></span>  
  
<span data-ttu-id="46cae-2040">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception3.cs#3)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception3.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="46cae-2040">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception3.cs#3)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception3.vb#3)]</span></span></para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="46cae-2041">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="46cae-2041">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="46cae-2042">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-2042">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="46cae-2043">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-2043">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="dateTime.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="46cae-2044">標準またはカスタムの日時書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-2044">A standard or custom date and time format string.</span></span></param>
        <param name="provider"><span data-ttu-id="46cae-2045">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-2045">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="46cae-2046">指定した書式およびカルチャ固有の書式情報を使用して、現在の <see cref="T:System.DateTime" /> オブジェクトの値をそれと等価の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2046">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="46cae-2047"><see cref="T:System.DateTime" /> および <paramref name="format" /> により指定された、現在の <paramref name="provider" /> オブジェクトの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="46cae-2047">A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-2048">パラメーター `format`には、単一の書式指定子文字 (「[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)」を参照) またはカスタム書式パターン (「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照) のいずれかを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2048">The `format` parameter can contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)).</span></span> <span data-ttu-id="46cae-2049">`format` が`null`または空の文字列 ("") の場合、標準書式指定子 "G" が使用されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2049">If `format` is `null` or an empty string (""), the standard format specifier, "G", is used.</span></span>  
  
 <span data-ttu-id="46cae-2050">パラメーター `provider`では、標準書式指定子に対応するパターン、および日付と時刻のコンポーネントのシンボルと名前を定義します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2050">The `provider` parameter defines the pattern that corresponds to the standard format specifiers, as well as the symbols and names of date and time components.</span></span> <span data-ttu-id="46cae-2051">パラメーター `provider`には、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2051">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="46cae-2052">返される文字列に書式規則が反映されるカルチャを表すオブジェクト。<xref:System.Globalization.CultureInfo></span><span class="sxs-lookup"><span data-stu-id="46cae-2052">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="46cae-2053">プロパティによって返されるオブジェクトは<xref:System.Globalization.DateTimeFormatInfo> 、返される文字列の書式を定義します。 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-2053">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="46cae-2054">日付と時刻のデータの形式を定義するオブジェクト。<xref:System.Globalization.DateTimeFormatInfo></span><span class="sxs-lookup"><span data-stu-id="46cae-2054">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="46cae-2055"><xref:System.IFormatProvider>インターフェイスを実装するカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-2055">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="46cae-2056">このメソッドは、 <xref:System.Globalization.DateTimeFormatInfo>書式設定情報を提供するオブジェクトを返します。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-2056">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="46cae-2057">が`provider` の`null`場合は、現在のカルチャに関連付けられているが使用されます。<xref:System.Globalization.DateTimeFormatInfo></span><span class="sxs-lookup"><span data-stu-id="46cae-2057">If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> associated with the current culture is used.</span></span> <span data-ttu-id="46cae-2058">詳細については、「<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-2058">For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-2059">次の例では、標準の日時書式指定文字列を使用して、4つの異なるカルチャの日付と時刻の文字列形式を表示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-2059">The following example uses each of the standard date time format strings to display the string representation of a date and time for four different cultures.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/tostring3.cs#4)]
 [!code-vb[System.DateTime.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/tostring3.vb#4)]  
  
 <span data-ttu-id="46cae-2060">次の例では、インバリアント<xref:System.DateTime> <xref:System.Globalization.DateTimeFormatInfo>を使用して値を書式設定するさまざまな方法を示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2060">The following example demonstrates different ways of formatting a <xref:System.DateTime> value using the invariant <xref:System.Globalization.DateTimeFormatInfo>.</span></span>  
  
 [!code-cpp[Classic DateTime.ToString2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTime.ToString2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/CS/source.cs#1)]
 [!code-vb[Classic DateTime.ToString2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="46cae-2061"><paramref name="format" /> は長さが 1 であり、<see cref="T:System.Globalization.DateTimeFormatInfo" /> で定義されている書式指定文字の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-2061">The length of <paramref name="format" /> is 1, and it is not one of the format specifier characters defined for <see cref="T:System.Globalization.DateTimeFormatInfo" />.</span></span>  
  
<span data-ttu-id="46cae-2062">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-2062">-or-</span></span> 
 <span data-ttu-id="46cae-2063"><paramref name="format" /> には有効なカスタム書式パターンがありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-2063"><paramref name="format" /> does not contain a valid custom format pattern.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46cae-2064">日時が、<paramref name="provider" /> で使用されるカレンダーでサポートされている日付の範囲外です。</span><span class="sxs-lookup"><span data-stu-id="46cae-2064">The date and time is outside the range of dates supported by the calendar used by <paramref name="provider" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="46cae-2065">メソッド<see cref="M:System.DateTime.ToString(System.String,System.IFormatProvider)" />は、 <paramref name="provider" />パラメーターで使用されるカレンダーにおける日付と時刻の文字列形式を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2065">The <see cref="M:System.DateTime.ToString(System.String,System.IFormatProvider)" /> method returns the string representation of the date and time in the calendar used by the <paramref name="provider" /> parameter.</span></span> <span data-ttu-id="46cae-2066">そのカレンダーは、 <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />プロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2066">Its calendar is defined by the <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> property.</span></span> <span data-ttu-id="46cae-2067">現在<see cref="T:System.DateTime" />のインスタンスの値がより<see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />も<see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />前か後である場合、メソッドはを<see cref="T:System.ArgumentOutOfRangeException" />スローします。</span><span class="sxs-lookup"><span data-stu-id="46cae-2067">If the value of the current <see cref="T:System.DateTime" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="46cae-2068">具体的な例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2068">The following example provides an illustration.</span></span> <span data-ttu-id="46cae-2069"><see cref="T:System.Globalization.UmAlQuraCalendar" />クラスの範囲外の日付の書式を設定しようとします。</span><span class="sxs-lookup"><span data-stu-id="46cae-2069">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.UmAlQuraCalendar" /> class.</span></span>  
  
<span data-ttu-id="46cae-2070">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception4.cs#4)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception4.vb#4)]</span><span class="sxs-lookup"><span data-stu-id="46cae-2070">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception4.cs#4)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception4.vb#4)]</span></span></para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="46cae-2071">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="46cae-2071">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="46cae-2072">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-2072">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="46cae-2073">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-2073">Custom Date and Time Format Strings</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="46cae-2074">サンプル: .NET Core WinForms 書式指定ユーティリティC#()</span><span class="sxs-lookup"><span data-stu-id="46cae-2074">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="46cae-2075">サンプル: .NET Core WinForms の書式設定ユーティリティ (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="46cae-2075">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToUniversalTime">
      <MemberSignature Language="C#" Value="public DateTime ToUniversalTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime ToUniversalTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToUniversalTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUniversalTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime ToUniversalTime();" />
      <MemberSignature Language="F#" Value="member this.ToUniversalTime : unit -&gt; DateTime" Usage="dateTime.ToUniversalTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46cae-2076">現在の <see cref="T:System.DateTime" /> オブジェクトの値を世界協定時刻 (UTC) に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2076">Converts the value of the current <see cref="T:System.DateTime" /> object to Coordinated Universal Time (UTC).</span></span></summary>
        <returns><span data-ttu-id="46cae-2077"><see cref="P:System.DateTime.Kind" /> プロパティが <see cref="F:System.DateTimeKind.Utc" /> であるオブジェクト。通常は、現在の <see cref="T:System.DateTime" /> オブジェクトと等価な UTC が値として格納されます。ただし、変換後の値が <see cref="F:System.DateTime.MaxValue" /> オブジェクトで表現可能な範囲を超えている場合は <see cref="T:System.DateTime" /> の値が格納され、逆に変換後の値が <see cref="F:System.DateTime.MinValue" /> オブジェクトで表現可能な範囲を下回る場合は <see cref="T:System.DateTime" /> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2077">An object whose <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Utc" />, and whose value is the UTC equivalent to the value of the current <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MaxValue" /> if the converted value is too large to be represented by a <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MinValue" /> if the converted value is too small to be represented by a <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-2078">世界協定時刻 (UTC) は、現地時刻から UTC オフセットを差し引いた値に相当します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2078">The Coordinated Universal Time (UTC) is equal to the local time minus the UTC offset.</span></span> <span data-ttu-id="46cae-2079">UTC オフセットの詳細については、 <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=nameWithType>「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-2079">For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-2080">変換では、現在<xref:System.DateTime>のオブジェクトで表される時間に適用される夏時間ルールも考慮されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2080">The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="46cae-2081">システム[!INCLUDE[winxp](~/includes/winxp-md.md)]では、 <xref:System.DateTime.ToUniversalTime%2A>メソッドは、現地時刻から UTC に変換するときに現在の調整規則のみを認識します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2081">On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToUniversalTime%2A> method recognizes only the current adjustment rule when converting from local time to UTC.</span></span> <span data-ttu-id="46cae-2082">その結果、現在の調整規則が適用される前の期間の変換によって、現地時刻と UTC の差が正確に反映されない場合があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-2082">As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between local time and UTC.</span></span>  
  
 <span data-ttu-id="46cae-2083">.NET Framework バージョン2.0 以降では、 <xref:System.DateTime.ToUniversalTime%2A>メソッドによって返される値は、現在<xref:System.DateTime.Kind%2A> <xref:System.DateTime>のオブジェクトのプロパティによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2083">Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToUniversalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object.</span></span> <span data-ttu-id="46cae-2084">次の表では、考えられる結果について説明します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2084">The following table describes the possible results.</span></span>  
  
|<span data-ttu-id="46cae-2085">種類</span><span class="sxs-lookup"><span data-stu-id="46cae-2085">Kind</span></span>|<span data-ttu-id="46cae-2086">結果</span><span class="sxs-lookup"><span data-stu-id="46cae-2086">Results</span></span>|  
|----------|-------------|  
|<xref:System.DateTimeKind.Utc>|<span data-ttu-id="46cae-2087">変換は実行されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-2087">No conversion is performed.</span></span>|  
|<xref:System.DateTimeKind.Local>|<span data-ttu-id="46cae-2088">現在<xref:System.DateTime>のオブジェクトは UTC に変換されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2088">The current <xref:System.DateTime> object is converted to UTC.</span></span>|  
|<xref:System.DateTimeKind.Unspecified>|<span data-ttu-id="46cae-2089">現在<xref:System.DateTime>のオブジェクトは、現地時刻であると見なされ、がの<xref:System.DateTimeKind.Local>場合<xref:System.DateTime.Kind%2A>と同様に変換が実行されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2089">The current <xref:System.DateTime> object is assumed to be a local time, and the conversion is performed as if <xref:System.DateTime.Kind%2A> were <xref:System.DateTimeKind.Local>.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="46cae-2090">メソッド<xref:System.DateTime.ToUniversalTime%2A>は、値<xref:System.DateTime>を現地時刻から UTC に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2090">The <xref:System.DateTime.ToUniversalTime%2A> method converts a <xref:System.DateTime> value from local time to UTC.</span></span> <span data-ttu-id="46cae-2091">ローカル以外のタイムゾーンの時刻を UTC に変換するには、 <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType>メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2091">To convert the time in a non-local time zone to UTC, use the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="46cae-2092">UTC からのオフセットがわかって<xref:System.DateTimeOffset.ToUniversalTime%2A>いる時刻を変換するには、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2092">To convert a time whose offset from UTC is known, use the <xref:System.DateTimeOffset.ToUniversalTime%2A> method.</span></span>  
  
 <span data-ttu-id="46cae-2093">日付と時刻のインスタンスの値があいまいな時刻の場合、このメソッドは標準時であると想定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2093">If the date and time instance value is an ambiguous time, this method assumes that it is a standard time.</span></span> <span data-ttu-id="46cae-2094">(あいまいな時刻とは、標準時またはローカルタイムゾーンの夏時間にマップできる時間です)。日付と時刻のインスタンスの値が無効な時刻の場合、このメソッドは単にローカルタイムゾーンの UTC オフセットから現地時刻を減算して、UTC を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2094">(An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone) If the date and time instance value is an invalid time, this method simply subtracts the local time from the local time zone's UTC offset to return UTC.</span></span> <span data-ttu-id="46cae-2095">(無効な時刻とは、夏時間調整規則の適用によって存在しない時刻です)。</span><span class="sxs-lookup"><span data-stu-id="46cae-2095">(An invalid time is one that does not exist because of the application of daylight saving time adjustment rules.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-2096">メソッドの<xref:System.DateTime.ToUniversalTime%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2096">The following example demonstrates the <xref:System.DateTime.ToUniversalTime%2A> method.</span></span>  
  
 [!code-cpp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CS/class1.cs#1)]
 [!code-vb[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/VB/class1.vb#1)]  
  
 <span data-ttu-id="46cae-2097">次の例では<xref:System.DateTime.SpecifyKind%2A> 、メソッドを使用し<xref:System.DateTime.Kind%2A>て、メソッド<xref:System.DateTime.ToLocalTime%2A>と<xref:System.DateTime.ToUniversalTime%2A>変換メソッドに対してプロパティがどのように影響するかを示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2097">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="46cae-2098">メソッド<see cref="M:System.DateTime.ToUniversalTime" />は、現地時刻を UTC に変換するために使用されることがあります。</span><span class="sxs-lookup"><span data-stu-id="46cae-2098">The <see cref="M:System.DateTime.ToUniversalTime" /> method is sometimes used to convert a local time to UTC.</span></span> <span data-ttu-id="46cae-2099">次<see cref="M:System.DateTime.ToLocalTime" />に、メソッドを呼び出して、元のローカル時刻を復元します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2099">The <see cref="M:System.DateTime.ToLocalTime" /> method is then called to restore the original local time.</span></span> <span data-ttu-id="46cae-2100">ただし、元の時刻がローカルタイムゾーンの無効な時刻を表している場合、2つのローカル時刻値は等しくなりません。</span><span class="sxs-lookup"><span data-stu-id="46cae-2100">However, if the original time represents an invalid time in the local time zone, the two local time values will not be equal.</span></span> <span data-ttu-id="46cae-2101">詳細と例については、 <see cref="M:System.DateTime.ToLocalTime" />メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-2101">For additional information and an example, see the <see cref="M:System.DateTime.ToLocalTime" /> method.</span></span>  
  
<span data-ttu-id="46cae-2102">システム[!INCLUDE[winxp](~/includes/winxp-md.md)]では、 <see cref="M:System.DateTime.ToUniversalTime" />メソッドはローカルタイムゾーンの現在の調整規則のみを認識します。これは、ダウンレベルの日付 (つまり、現在の調整の開始日より前の日付) を含むすべての日付に適用されます。ルール)。</span><span class="sxs-lookup"><span data-stu-id="46cae-2102">On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <see cref="M:System.DateTime.ToUniversalTime" /> method recognizes only the current adjustment rule for the local time zone, which it applies to all dates, including down-level dates (that is, dates that are earlier than the starting date of the current adjustment rule).</span></span> <span data-ttu-id="46cae-2103">で実行さ[!INCLUDE[winxp](~/includes/winxp-md.md)]れるアプリケーションでは、 <see cref="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)" />ローカルの日付と時刻の正確な計算が必要になりますが、 <see cref="T:System.TimeZoneInfo" />メソッドを使用してローカルのタイムゾーンに対応するオブジェクトを取得し、を呼び出すことで、この動作を回避する必要があります。その<see cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="46cae-2103">Applications running on [!INCLUDE[winxp](~/includes/winxp-md.md)] that require historically accurate local date and time calculations must work around this behavior by using the <see cref="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)" /> method to retrieve a <see cref="T:System.TimeZoneInfo" /> object that corresponds to the local time zone and calling its <see cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" /> method.</span></span>  
  
<span data-ttu-id="46cae-2104">次の例は、米国での<see cref="M:System.DateTime.ToUniversalTime" /> [!INCLUDE[winxp](~/includes/winxp-md.md)]システム<see cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" />のメソッドとメソッドの違いを示しています。表示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2104">The following example illustrates the difference between the <see cref="M:System.DateTime.ToUniversalTime" /> and <see cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" /> methods on a [!INCLUDE[winxp](~/includes/winxp-md.md)] system in the U.S. Pacific Time zone.</span></span> <span data-ttu-id="46cae-2105">最初の2つのメソッド呼び出しでは、現在のタイムゾーン調整規則 (2007 で有効になっていた) が2006の日付に適用されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2105">The first two method calls apply the current time zone adjustment rule (which went into effect in 2007) to a date in 2006.</span></span> <span data-ttu-id="46cae-2106">現在の調整規則では、3月の第2日曜日に夏時間への移行を行います。2006で有効になった前のルールは、4月の最初の日曜日に夏時間への移行を行うために提供されています。</span><span class="sxs-lookup"><span data-stu-id="46cae-2106">The current adjustment rule provides for the transition to daylight saving time on the second Sunday of March; the previous rule, which was in effect in 2006, provided for the transition to daylight saving time to occur on the first Sunday of April.</span></span> <span data-ttu-id="46cae-2107">3番目のメソッド呼び出しでのみ、この履歴日時の変換が正確に実行されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2107">Only the third method call accurately performs this historical date and time conversion.</span></span>  
  
<span data-ttu-id="46cae-2108">[!code-csharp[System.DateTime.ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.touniversaltime/cs/touniversaltime.cs#1)] [!code-vb[System.DateTime.ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.touniversaltime/vb/touniversaltime.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="46cae-2108">[!code-csharp[System.DateTime.ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.touniversaltime/cs/touniversaltime.cs#1)] [!code-vb[System.DateTime.ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.touniversaltime/vb/touniversaltime.vb#1)]</span></span></para></block>
        <altmember cref="M:System.DateTime.ToLocalTime" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="dateTime.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="46cae-2109">指定した文字列形式の日時を対応する <see cref="T:System.DateTime" /> 表現に変換し、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2109">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <altmember cref="Overload:System.DateTime.Parse" />
        <remarks>
          <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

         ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParse(System.ReadOnlySpan{System.Char},System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * DateTime -&gt; bool" Usage="System.DateTime.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParse(System.String,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * DateTime -&gt; bool" Usage="System.DateTime.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="46cae-2110">変換する日付と時刻を格納した文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-2110">A string containing a date and time to convert.</span></span></param>
        <param name="result"><span data-ttu-id="46cae-2111">変換に成功した場合は、このメソッドから戻る時点で、<see cref="T:System.DateTime" /> に格納された日時と等しい <paramref name="s" /> 値が格納されます。変換に失敗した場合は <see cref="F:System.DateTime.MinValue" /> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2111">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <paramref name="s" />, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="46cae-2112"><paramref name="s" /> パラメーターが <see langword="null" /> の場合、空の文字列 ("") の場合、または日付と時刻を表す有効な文字列形式が含まれていない場合は、変換に失敗します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2112">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" />, is an empty string (""), or does not contain a valid string representation of a date and time.</span></span> <span data-ttu-id="46cae-2113">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2113">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="46cae-2114">指定した文字列形式の日時を対応する <see cref="T:System.DateTime" /> 表現に変換し、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2114">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="46cae-2115"><paramref name="s" /> パラメーターが正常に変換された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46cae-2115"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-2116">メソッドは<xref:System.DateTime.Parse%28System.String%29?displayProperty=nameWithType>メソッドに似ていますが、変換に失敗した場合にメソッドが例外をスローしない点が異なります。<xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-2116">The <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method is similar to the <xref:System.DateTime.Parse%28System.String%29?displayProperty=nameWithType> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="46cae-2117">現在の`s`スレッドカルチャによって暗黙的に指定<xref:System.Globalization.DateTimeFormatInfo>された、現在のオブジェクトの書式情報を使用して文字列が解析されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2117">The string `s` is parsed using formatting information in the current <xref:System.Globalization.DateTimeFormatInfo> object, which is supplied implicitly by the current thread culture.</span></span>  
  
 <span data-ttu-id="46cae-2118">このメソッドは、可能であれば、認識されていないデータを無視し、存在しない月、日、および年の情報を現在の日付に設定しようとします。</span><span class="sxs-lookup"><span data-stu-id="46cae-2118">This method tries to ignore unrecognized data, if possible, and fills in missing month, day, and year information with the current date.</span></span> <span data-ttu-id="46cae-2119">に`s`日付と時刻のみが含まれている場合、このメソッドは時刻が12:00 午前0時であることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="46cae-2119">If `s` contains only a date and no time, this method assumes the time is 12:00 midnight.</span></span> <span data-ttu-id="46cae-2120">に`s` 2 桁の年の日付要素が含まれている場合、 <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>プロパティの値に基づいて、現在のカルチャの現在の暦の年に変換されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2120">If `s` includes a date component with a two-digit year, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="46cae-2121">の`s`先頭、内部、または末尾の空白文字は無視されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2121">Any leading, inner, or trailing white space character in `s` is ignored.</span></span> <span data-ttu-id="46cae-2122">日付と時刻は、先頭と末尾の符号記号 (' # '、U + 0023) のペアで囲むことができ、1つ以上の NULL 文字 (U + 0000) で trailed できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2122">The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).</span></span>  
  
 <span data-ttu-id="46cae-2123">メソッドは<xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> 、現在のカルチャの書式設定規則を使用して、日付と時刻の文字列形式を解析しようとするので、異なるカルチャで特定の文字列を解析しようとすると、失敗するか、異なる結果が返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="46cae-2123">Because the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method tries to parse the string representation of a date and time using the formatting rules of the current culture, trying to parse a particular string across different cultures can either fail or return different results.</span></span> <span data-ttu-id="46cae-2124">特定の日付と時刻の形式が異なるロケールで解析される場合は<xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> 、メソッドまたは<xref:System.DateTime.TryParseExact%2A>メソッドのいずれかのオーバーロードを使用して、書式指定子を指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2124">If a specific date and time format will be parsed across different locales, use the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method or one of the overloads of the <xref:System.DateTime.TryParseExact%2A> method and provide a format specifier.</span></span>  
  
 <span data-ttu-id="46cae-2125">が`s`現在の暦の閏年の閏年の文字列形式である場合、メソッドは正常に解析`s`されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2125">If `s` is the string representation of a leap day in a leap year in the current calendar, the method parses `s` successfully.</span></span> <span data-ttu-id="46cae-2126">が`s`現在のカルチャの現在の暦におけるうるう年以外の日付の文字列表現である場合、解析操作は失敗し、メソッドはを返し`false`ます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2126">If `s` is the string representation of a leap day in a non-leap year in the current culture's current calendar, the parse operation fails and the method returns `false`.</span></span>  
  
 <span data-ttu-id="46cae-2127">に`s`タイムゾーン情報が含まれていない場合<xref:System.DateTime.Kind%2A>は、 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>メソッドがを返すときのプロパティがである<xref:System.DateTime>値がに`result`格納されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2127">If `s` contains no time zone information, `result` contains a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> when the method returns.</span></span> <span data-ttu-id="46cae-2128">解析する文字列にタイムゾーン情報が含まれて`result`いる場合は、 <xref:System.DateTime.Kind%2A>メソッドから<xref:System.DateTimeKind.Local?displayProperty=nameWithType>制御が戻ったときのプロパティがである<xref:System.DateTime>値がに格納されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2128">If the string to be parsed contains time zone information, `result` contains a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> when the method returns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-2129">次の例では、 <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType>メソッドに複数の日付と時刻の文字列を渡しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-2129">The following example passes a number of date and time strings to the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.DateTime.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.TryParse/cpp/datetime.tryparse1.cpp#1)]
 [!code-csharp[System.DateTime.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.DateTime.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParse/vb/TryParse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="46cae-2130">書式設定は、現在<see cref="T:System.Globalization.DateTimeFormatInfo" />のオブジェクトのプロパティの影響を受けます。既定では、コントロールパネルの **[地域と言語のオプション]** 項目から派生します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2130">Formatting is influenced by properties of the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object, which by default are derived from the **Regional and Language Options** item in Control Panel.</span></span> <span data-ttu-id="46cae-2131">現在<see cref="Overload:System.DateTime.TryParse" /> <see langword="False" /> のプロパティ<see cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />とプロパティが同じ値に設定されている場合、メソッドは予期せず失敗し、を返します。 <see cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" /></span><span class="sxs-lookup"><span data-stu-id="46cae-2131">The <see cref="Overload:System.DateTime.TryParse" /> method can unexpectedly fail and return <see langword="False" /> if the current <see cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" /> and <see cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" /> properties are set to the same value.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.Parse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="46cae-2132">.NET Framework における日付と時刻文字列の解析の解析</span><span class="sxs-lookup"><span data-stu-id="46cae-2132">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="46cae-2133">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-2133">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="46cae-2134">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-2134">Custom Date and Time Format Strings</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="46cae-2135">サンプル: .NET Core WinForms 書式指定ユーティリティC#()</span><span class="sxs-lookup"><span data-stu-id="46cae-2135">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="46cae-2136">サンプル: .NET Core WinForms の書式設定ユーティリティ (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="46cae-2136">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, IFormatProvider provider, System.Globalization.DateTimeStyles styles, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), provider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, IFormatProvider ^ provider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles * DateTime -&gt; bool" Usage="System.DateTime.TryParse (s, provider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, IFormatProvider provider, System.Globalization.DateTimeStyles styles, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, provider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, IFormatProvider ^ provider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * IFormatProvider * System.Globalization.DateTimeStyles * DateTime -&gt; bool" Usage="System.DateTime.TryParse (s, provider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="46cae-2137">変換する日付と時刻を格納した文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-2137">A string containing a date and time to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="46cae-2138"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-2138">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="styles"><span data-ttu-id="46cae-2139">現在のタイム ゾーンまたは現在の日付と関連させて、解析された日付をどのように解釈するかを定義する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="46cae-2139">A bitwise combination of enumeration values that defines how to interpret the parsed date in relation to the current time zone or the current date.</span></span> <span data-ttu-id="46cae-2140">通常指定する値は、<see cref="F:System.Globalization.DateTimeStyles.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="46cae-2140">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <param name="result"><span data-ttu-id="46cae-2141">変換に成功した場合は、このメソッドから戻る時点で、<see cref="T:System.DateTime" /> に格納された日時と等しい <paramref name="s" /> 値が格納されます。変換に失敗した場合は <see cref="F:System.DateTime.MinValue" /> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2141">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <paramref name="s" />, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="46cae-2142"><paramref name="s" /> パラメーターが <see langword="null" /> の場合、空の文字列 ("") の場合、または日付と時刻を表す有効な文字列形式が含まれていない場合は、変換に失敗します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2142">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" />, is an empty string (""), or does not contain a valid string representation of a date and time.</span></span> <span data-ttu-id="46cae-2143">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2143">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="46cae-2144">指定したカルチャ固有の書式情報と書式スタイルを使用して、指定した文字列形式の日付と時刻をそれと等価の <see cref="T:System.DateTime" /> に変換し、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2144">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified culture-specific format information and formatting style, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="46cae-2145"><paramref name="s" /> パラメーターが正常に変換された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46cae-2145"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-2146">メソッド<xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>は、日付、時刻、およびタイムゾーン情報を格納できる文字列を解析します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2146">The <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method parses a string that can contain date, time, and time zone information.</span></span> <span data-ttu-id="46cae-2147">メソッドに<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>似ていますが、変換に<xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType>失敗した場合にメソッドが例外をスローしない点が異なります。</span><span class="sxs-lookup"><span data-stu-id="46cae-2147">It is similar to the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="46cae-2148">このメソッドは、認識されてい`s`ないデータを無視し、完全に解析を試みます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2148">This method attempts to ignore unrecognized data and parse `s` completely.</span></span> <span data-ttu-id="46cae-2149">に`s`時刻が含まれていても、日付が含まれていない場合、メソッドは<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>既定で現在の日付に置き換えます。また、にフラグが含まれている場合`styles`は、置き換え`DateTime.Date.MinValue`られます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2149">If `s` contains a time but no date, the method by default substitutes the current date or, if `styles` includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault> flag, it substitutes `DateTime.Date.MinValue`.</span></span> <span data-ttu-id="46cae-2150">に`s`日付が含まれていても、時刻が指定されていない場合は、既定の時刻として12:00 深夜が使用されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2150">If `s` contains a date but no time, 12:00 midnight is used as the default time.</span></span> <span data-ttu-id="46cae-2151">日付が存在するが、その年のコンポーネントが2桁のみで構成されている場合は、 `provider` <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>プロパティの値に基づいて、パラメーターの現在の暦で年に変換されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2151">If a date is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="46cae-2152">の`s`先頭、内部、または末尾の空白文字は無視されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2152">Any leading, inner, or trailing white space characters in `s` are ignored.</span></span> <span data-ttu-id="46cae-2153">日付と時刻は、先頭と末尾の符号記号 (' # '、U + 0023) のペアで囲むことができ、1つ以上の NULL 文字 (U + 0000) で trailed できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2153">The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).</span></span>  
  
 <span data-ttu-id="46cae-2154">日付と時刻の要素、および日付と時刻で使用される名前と記号の特定の有効な形式は、 `provider`パラメーターによって定義されます。これは、次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="46cae-2154">Specific valid formats for date and time elements, as well as the names and symbols used in dates and times, are defined by the `provider` parameter, which can be any of the following:</span></span>  
  
-   <span data-ttu-id="46cae-2155">パラメーターで書式設定が使用されているカルチャを表すオブジェクト。<xref:System.Globalization.CultureInfo> `s`</span><span class="sxs-lookup"><span data-stu-id="46cae-2155">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `s` parameter.</span></span> <span data-ttu-id="46cae-2156">プロパティによって返されるオブジェクトは<xref:System.Globalization.DateTimeFormatInfo> 、で`s`使用される書式を定義します。 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-2156">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting used in `s`.</span></span>  
  
-   <span data-ttu-id="46cae-2157"><xref:System.Globalization.DateTimeFormatInfo> で`s`使用される書式を定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-2157">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting used in `s`.</span></span>  
  
-   <span data-ttu-id="46cae-2158">カスタムの <xref:System.IFormatProvider> 実装。</span><span class="sxs-lookup"><span data-stu-id="46cae-2158">A custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="46cae-2159">このメソッドは、 <xref:System.Globalization.DateTimeFormatInfo>で`s`使用される書式を定義するオブジェクトを返します。 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-2159">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting used in `s`.</span></span>  
  
 <span data-ttu-id="46cae-2160">`provider` が `null` の場合は、現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2160">If `provider` is `null`, the current culture is used.</span></span>  
  
 <span data-ttu-id="46cae-2161">が`s`現在の暦の閏年の閏年の文字列形式である場合、メソッドは正常に解析`s`されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2161">If `s` is the string representation of a leap day in a leap year in the current calendar, the method parses `s` successfully.</span></span> <span data-ttu-id="46cae-2162">が`s`現在の`provider`暦におけるうるう年以外の閏年の文字列表現である場合、解析操作は失敗し、メソッドはを返し`false`ます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2162">If `s` is the string representation of a leap day in a non-leap year in the current calendar of `provider`, the parse operation fails and the method returns `false`.</span></span>  
  
 <span data-ttu-id="46cae-2163">パラメーター `styles`は、解析された文字列の正確な解釈と、解析操作でそれを処理する方法を定義します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2163">The `styles` parameter defines the precise interpretation of the parsed string and how the parse operation should handle it.</span></span> <span data-ttu-id="46cae-2164">次の表で説明するように、 <xref:System.Globalization.DateTimeStyles>列挙体の1つ以上のメンバーを指定できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2164">It can be one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration, as described in the following table.</span></span>  
  
|<span data-ttu-id="46cae-2165">DateTimeStyles メンバー</span><span class="sxs-lookup"><span data-stu-id="46cae-2165">DateTimeStyles member</span></span>|<span data-ttu-id="46cae-2166">説明</span><span class="sxs-lookup"><span data-stu-id="46cae-2166">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="46cae-2167">を`s`解析し、必要に応じて UTC に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2167">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="46cae-2168"><xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> `styles` `s` <xref:System.DateTime> <xref:System.DateTime.ToUniversalTime%2A>にタイムゾーンオフセットが含まれている場合、またはにタイムゾーン情報が含まれておらず、フラグが含まれている場合、メソッドは文字列を解析し、を呼び出して、返された値を UTC に変換します。 `s`、 <xref:System.DateTime.Kind%2A>プロパティをに<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2168">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-2169"><xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> `s` `styles`が UTC を表すことを<xref:System.DateTime>示している場合、またはにタイムゾーン情報が含まれておらず、フラグが含まれている場合、メソッドは文字列を解析し、返されたにタイムゾーン変換を実行しません。 `s`値を指定し、 <xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>に設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2169">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-2170">それ以外の場合、フラグは無効です。</span><span class="sxs-lookup"><span data-stu-id="46cae-2170">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="46cae-2171">有効ですが、この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2171">Although valid, this value is ignored.</span></span> <span data-ttu-id="46cae-2172">内部の空白文字は、の日付と時刻の`s`要素で使用できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2172">Inner white space is permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="46cae-2173">有効ですが、この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2173">Although valid, this value is ignored.</span></span> <span data-ttu-id="46cae-2174">先頭の空白文字は、の日付と時刻の`s`要素で使用できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2174">Leading white space is permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="46cae-2175">有効ですが、この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2175">Although valid, this value is ignored.</span></span> <span data-ttu-id="46cae-2176">の日付と時刻の要素では、末尾の`s`空白文字を使用できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2176">Trailing white space is permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="46cae-2177">に、 `s`先頭、内部、および末尾の空白を含めることができることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2177">Specifies that `s` may contain leading, inner, and trailing white spaces.</span></span> <span data-ttu-id="46cae-2178">これが既定の動作です。</span><span class="sxs-lookup"><span data-stu-id="46cae-2178">This is the default behavior.</span></span> <span data-ttu-id="46cae-2179"><xref:System.Globalization.DateTimeStyles> など<xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>、より制限の厳しい列挙値を指定することによってオーバーライドすることはできません。</span><span class="sxs-lookup"><span data-stu-id="46cae-2179">It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value such as <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="46cae-2180">にタイムゾーン`s`情報がない場合、現地時刻を表すと想定されることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2180">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="46cae-2181">フラグが指定されてい<xref:System.DateTime.Kind%2A>ない限り、戻り<xref:System.DateTime>値のプロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>に設定されます。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-2181">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="46cae-2182">がタイムゾーン`s`情報を持たない場合、UTC を表すと想定されることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2182">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="46cae-2183">フラグが存在しない場合、メソッドは、返さ<xref:System.DateTime>れた値を UTC から現地時刻に<xref:System.DateTime.Kind%2A>変換し<xref:System.DateTimeKind.Local?displayProperty=nameWithType>、そのプロパティをに設定します。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-2183">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="46cae-2184">有効ですが、この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2184">Although valid, this value is ignored.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="46cae-2185">タイムゾーン情報を含む文字列の場合、は、 <xref:System.DateTime> <xref:System.DateTime.Kind%2A>プロパティがに<xref:System.DateTimeKind.Local?displayProperty=nameWithType>設定された日付と時刻の文字列の値への変換を防止しようとします。</span><span class="sxs-lookup"><span data-stu-id="46cae-2185">For strings that contain time zone information, tries to prevent the conversion of a date and time string to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-2186">通常、このような文字列は、"o <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> "、"r"、"u" のいずれかの標準書式指定子を使用してメソッドを呼び出すことによって作成されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2186">Typically, such a string is created by calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method using either the "o", "r", or "u" standard format specifiers.</span></span>|  
  
 <span data-ttu-id="46cae-2187">`s` <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> <xref:System.DateTime.Kind%2A> `styles` にタイム<xref:System.DateTime>ゾーン情報が含まれていない場合、メソッドは、フラグが特に指定しない限り、プロパティがである値を返します。<xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-2187">If `s` contains no time zone information, the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> unless a `styles` flag indicates otherwise.</span></span> <span data-ttu-id="46cae-2188">に`s`タイムゾーンまたはタイムゾーンオフセット情報が含ま<xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>れている場合、メソッドは必要な時間変換を実行し、次のいずれかを返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2188">If `s` includes time zone or time zone offset information, the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method performs any necessary time conversion and returns one of the following:</span></span>  
  
-   <span data-ttu-id="46cae-2189">ローカル<xref:System.DateTime>時刻を反映<xref:System.DateTimeKind.Local?displayProperty=nameWithType>する日付と時刻を持つ値。プロパティはです。<xref:System.DateTime.Kind%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-2189">A <xref:System.DateTime> value whose date and time reflect the local time and whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="46cae-2190">または、 `styles`に<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>フラグが含まれ<xref:System.DateTime>ている場合は、日付と時刻に<xref:System.DateTime.Kind%2A> UTC を<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>反映し、プロパティがである値を指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2190">Or, if `styles` includes the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag, a <xref:System.DateTime> value whose date and time reflect UTC and whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="46cae-2191">この動作は、 <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>フラグを使用してオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2191">This behavior can be overridden by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag.</span></span>  
  
## <a name="parsing-custom-cultures"></a><span data-ttu-id="46cae-2192">カスタムカルチャの解析</span><span class="sxs-lookup"><span data-stu-id="46cae-2192">Parsing Custom Cultures</span></span>  
 <span data-ttu-id="46cae-2193">カスタムカルチャに対して生成された日付と時刻の文字列を解析<xref:System.DateTime.TryParseExact%2A>する場合は、 <xref:System.DateTime.TryParse%2A>メソッドの代わりにメソッドを使用して、解析操作が成功する確率を上げます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2193">If you parse a date and time string generated for a custom culture, use the <xref:System.DateTime.TryParseExact%2A> method instead of the <xref:System.DateTime.TryParse%2A> method to improve the probability that the parse operation will succeed.</span></span> <span data-ttu-id="46cae-2194">カスタムカルチャの日付と時刻の文字列は、複雑で解析が困難な場合があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-2194">A custom culture date and time string can be complicated and difficult to parse.</span></span> <span data-ttu-id="46cae-2195">メソッド<xref:System.DateTime.TryParse%2A>は、いくつかの暗黙的な解析パターンを使用して文字列を解析しようとしますが、これらはすべて失敗する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-2195">The <xref:System.DateTime.TryParse%2A> method attempts to parse a string with several implicit parse patterns, all of which might fail.</span></span> <span data-ttu-id="46cae-2196">これに対して<xref:System.DateTime.TryParseExact%2A> 、メソッドでは、成功する可能性がある1つ以上の正確な解析パターンを明示的に指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-2196">In contrast, the <xref:System.DateTime.TryParseExact%2A> method  requires you to explicitly designate one or more exact parse patterns that are likely to succeed.</span></span>  
  
 <span data-ttu-id="46cae-2197">カスタムカルチャの詳細については、 <xref:System.Globalization.CultureAndRegionInfoBuilder?displayProperty=nameWithType>クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-2197">For more information about custom cultures, see the <xref:System.Globalization.CultureAndRegionInfoBuilder?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46cae-2198">次の例は、 <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>メソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="46cae-2198">The following example illustrates the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.DateTime.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParse/cs/tryparse2.cs#2)]
 [!code-vb[System.DateTime.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46cae-2199"><paramref name="styles" /> は有効な <see cref="T:System.Globalization.DateTimeStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-2199"><paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
  
<span data-ttu-id="46cae-2200">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-2200">-or-</span></span> 
 <span data-ttu-id="46cae-2201"><paramref name="styles" /> に <see cref="T:System.Globalization.DateTimeStyles" /> 値の正しくない組み合わせが含まれています (たとえば、<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> と <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" /> の両方などです)。</span><span class="sxs-lookup"><span data-stu-id="46cae-2201"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="46cae-2202"><paramref name="provider" /> はニュートラル カルチャであり、解析操作で使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="46cae-2202"><paramref name="provider" /> is a neutral culture and cannot be used in a parsing operation.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="46cae-2203">書式設定は、現在<see cref="T:System.Globalization.DateTimeFormatInfo" />のオブジェクトのプロパティによって影響を受けます。これは、 <paramref name="provider" />パラメーターによって指定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2203">Formatting is influenced by properties of the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object, which is supplied by the <paramref name="provider" /> parameter.</span></span> <span data-ttu-id="46cae-2204">現在<see cref="Overload:System.DateTime.TryParse" /> <see langword="False" /> のプロパティ<see cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />とプロパティが同じ値に設定されている場合、メソッドは予期せず失敗し、を返します。 <see cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" /></span><span class="sxs-lookup"><span data-stu-id="46cae-2204">The <see cref="Overload:System.DateTime.TryParse" /> method can unexpectedly fail and return <see langword="False" /> if the current <see cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" /> and <see cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" /> properties are set to the same value.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.Parse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="46cae-2205">.NET Framework における日付と時刻文字列の解析の解析</span><span class="sxs-lookup"><span data-stu-id="46cae-2205">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="46cae-2206">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-2206">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="46cae-2207">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-2207">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="46cae-2208">指定した文字列形式の日付と時刻を等価の <see cref="T:System.DateTime" /> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2208">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent.</span></span> <span data-ttu-id="46cae-2209">文字列形式の書式は、指定した書式と完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-2209">The format of the string representation must match a specified format exactly.</span></span> <span data-ttu-id="46cae-2210">このメソッドは、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2210">The method returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

         ]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTime.ParseExact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; s, ReadOnlySpan&lt;char&gt; format, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (s As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), provider As IFormatProvider, style As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; s, ReadOnlySpan&lt;char&gt; format, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles * DateTime -&gt; bool" Usage="System.DateTime.TryParseExact (s, format, provider, style, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="style">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; s, string[] formats, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (s As ReadOnlySpan(Of Char), formats As String(), provider As IFormatProvider, style As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; s, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.DateTimeStyles * DateTime -&gt; bool" Usage="System.DateTime.TryParseExact (s, formats, provider, style, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="style">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string s, string format, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string s, string format, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (s As String, format As String, provider As IFormatProvider, style As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ s, System::String ^ format, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string * IFormatProvider * System.Globalization.DateTimeStyles * DateTime -&gt; bool" Usage="System.DateTime.TryParseExact (s, format, provider, style, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="46cae-2211">変換する日付と時刻を格納した文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-2211">A string containing a date and time to convert.</span></span></param>
        <param name="format"><span data-ttu-id="46cae-2212"><paramref name="s" /> に必要な書式。</span><span class="sxs-lookup"><span data-stu-id="46cae-2212">The required format of <paramref name="s" />.</span></span></param>
        <param name="provider"><span data-ttu-id="46cae-2213"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-2213">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="style"><span data-ttu-id="46cae-2214"><paramref name="s" /> の許可された書式を示す 1 つまたは複数の列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="46cae-2214">A bitwise combination of one or more enumeration values that indicate the permitted format of <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="46cae-2215">変換に成功した場合は、このメソッドから戻る時点で、<see cref="T:System.DateTime" /> に格納された日時と等しい <paramref name="s" /> 値が格納されます。変換に失敗した場合は <see cref="F:System.DateTime.MinValue" /> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2215">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <paramref name="s" />, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="46cae-2216"><paramref name="s" /> パラメーターまたは <paramref name="format" /> パラメーターが <see langword="null" /> の場合、空の文字列の場合、あるいは <paramref name="format" /> に指定されたパターンに一致する日時が含まれていない場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2216">The conversion fails if either the <paramref name="s" /> or <paramref name="format" /> parameter is <see langword="null" />, is an empty string, or does not contain a date and time that correspond to the pattern specified in <paramref name="format" />.</span></span> <span data-ttu-id="46cae-2217">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2217">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="46cae-2218">指定した書式、カルチャ固有の書式情報、およびスタイルを使用して、指定した日付と時刻の文字列形式を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2218">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format, culture-specific format information, and style.</span></span> <span data-ttu-id="46cae-2219">文字列形式の書式は、指定した書式と完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-2219">The format of the string representation must match the specified format exactly.</span></span> <span data-ttu-id="46cae-2220">このメソッドは、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2220">The method returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="46cae-2221"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46cae-2221"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-2222">メソッド<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>は、日付の文字列形式を解析します。これは、 `format`パラメーターで定義された形式である必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-2222">The <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method parses the string representation of a date, which must be in the format defined by the `format` parameter.</span></span> <span data-ttu-id="46cae-2223">メソッドに<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>似ていますが、変換に<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29>失敗した場合にメソッドが例外をスローしない点が異なります。</span><span class="sxs-lookup"><span data-stu-id="46cae-2223">It is similar to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method, except that the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="46cae-2224">パラメーターには、解析する日付と時刻が含まれており、 `format`パラメーターで定義された形式にする必要があります。 `s`</span><span class="sxs-lookup"><span data-stu-id="46cae-2224">The `s` parameter contains the date and time to parse and must be in a format defined by the `format` parameter.</span></span> <span data-ttu-id="46cae-2225">日付、時刻、およびタイムゾーンの要素がに`s`存在する場合は、によって`format`指定された順序でも表示される必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-2225">If date, time, and time zone elements are present in `s`, they must also appear in the order specified by `format`.</span></span> <span data-ttu-id="46cae-2226">が`format`時刻要素のない日付を定義し、解析操作が成功した<xref:System.DateTime>場合、結果の値の時間は深夜 (00:00:00) になります。</span><span class="sxs-lookup"><span data-stu-id="46cae-2226">If `format` defines a date with no time element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a time of midnight (00:00:00).</span></span> <span data-ttu-id="46cae-2227">`DateTime.MinValue.Date` <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> <xref:System.DateTime> `DateTime.Now.Date`で日付要素が指定されていない時間が`styles` 定義され、解析操作が成功した場合、既定では、結果の値の日付はになります。また、にフラグが含まれている場合は、の日付も返されます。`format`</span><span class="sxs-lookup"><span data-stu-id="46cae-2227">If `format` defines a time with no date element and the parse operation succeeds, the resulting <xref:System.DateTime> value by default has a date of `DateTime.Now.Date`, or it has a date of `DateTime.MinValue.Date` if `styles` includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="46cae-2228">パラメーターは、パラメーターに`s`先頭、内部、または末尾の空白文字を含めることができるかどうかを決定します。 `style`</span><span class="sxs-lookup"><span data-stu-id="46cae-2228">The `style` parameter determines whether the `s` parameter can contain leading, inner, or trailing white space characters.</span></span>  
  
 <span data-ttu-id="46cae-2229">にタイムゾーン情報が含まれて`s`いない場合、返される<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> <xref:System.DateTime>オブジェクトのプロパティはになります。<xref:System.DateTime.Kind%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-2229">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-2230"><xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>この動作は、 <xref:System.DateTime.Kind%2A>プロパティが<xref:System.DateTime> である<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>値を返すフラグを使用するか、フラグとフラグを使用し<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>て変更できます。このフラグは、という値を返します。<xref:System.DateTime> <xref:System.DateTimeKind.Local?displayProperty=nameWithType><xref:System.DateTime.Kind%2A>プロパティが<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="46cae-2230">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, or by using the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-2231">にタイムゾーン情報が含まれている場合は、必要<xref:System.DateTime.Kind%2A>に応じて時刻が現地時刻に変換され、返され<xref:System.DateTime>た<xref:System.DateTimeKind.Local?displayProperty=nameWithType>オブジェクトのプロパティはに設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2231">If s contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-2232">この動作は、 <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>協定世界時 (UTC) を現地時刻に変換しないようにフラグを使用し、 <xref:System.DateTime.Kind%2A>プロパティをに<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>設定することによって変更できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2232">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="46cae-2233">パラメーターには、 `s`パラメーターに必要な形式に対応するパターンが含まれています。 `format`</span><span class="sxs-lookup"><span data-stu-id="46cae-2233">The `format` parameter contains a pattern that corresponds to the expected format of the `s` parameter.</span></span> <span data-ttu-id="46cae-2234">`format`パラメーターのパターンは、[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)の表にある1つ以上のカスタム書式指定子、または標準の日付から定義済みのパターンを識別する単一の標準書式指定子で構成されます。 [時刻書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)の表。</span><span class="sxs-lookup"><span data-stu-id="46cae-2234">The pattern in the `format` parameter consists of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.</span></span>  
  
 <span data-ttu-id="46cae-2235">カスタム書式パターンで日付または時刻の区切り記号を使用しない場合は、 `provider`パラメーターにインバリアントカルチャを使用し、各カスタム書式指定子の幅が最も広い形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2235">If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="46cae-2236">たとえば、パターンに時間を指定する場合は、幅の狭い形式の "H" ではなく、広い形式の "HH" を指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2236">For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="46cae-2237">解析操作を成功`s`させるために1つの形式に準拠するように要求するの<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>ではなく、メソッドを呼び出して、複数の許可された形式を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2237">Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method and specify multiple permitted formats.</span></span> <span data-ttu-id="46cae-2238">これにより、解析操作が成功する可能性が高くなります。</span><span class="sxs-lookup"><span data-stu-id="46cae-2238">This makes the parse operation more likely to succeed.</span></span>  
  
 <span data-ttu-id="46cae-2239">で`s`使用される特定の日付と時刻の記号および文字列 (特定の言語の曜日の名前など) は、が標準形式である`provider`かどうか`format`の`s`正確な形式として、パラメーターによって定義されます。指定子文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-2239">The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="46cae-2240">パラメーター `provider`には、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2240">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="46cae-2241">を解釈`s`するために使用するカルチャを表すオブジェクト。<xref:System.Globalization.CultureInfo></span><span class="sxs-lookup"><span data-stu-id="46cae-2241">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="46cae-2242">プロパティによって返されるオブジェクトは<xref:System.Globalization.DateTimeFormatInfo> 、の`s`シンボルと書式設定を定義します。 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-2242">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="46cae-2243">日付と時刻のデータの形式を定義するオブジェクト。<xref:System.Globalization.DateTimeFormatInfo></span><span class="sxs-lookup"><span data-stu-id="46cae-2243">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="46cae-2244">書式設定<xref:System.IFormatProvider>情報を<xref:System.IFormatProvider.GetFormat%2A>提供する<xref:System.Globalization.CultureInfo>オブジェクトまたは<xref:System.Globalization.DateTimeFormatInfo>オブジェクトのいずれかを返すメソッドを持つカスタム実装。</span><span class="sxs-lookup"><span data-stu-id="46cae-2244">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="46cae-2245"><xref:System.Globalization.CultureInfo>が`provider` の場合は、現在のカルチャに対応するオブジェクトが使用されます。`null`</span><span class="sxs-lookup"><span data-stu-id="46cae-2245">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 <span data-ttu-id="46cae-2246">パラメーター `styles`には、で定義されて<xref:System.Globalization.DateTimeStyles> `format`いない空白をで`s`使用できるかどうかを決定する列挙体のメンバーが1つ以上含まれています。これは、解析操作の正確な動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2246">The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation.</span></span> <span data-ttu-id="46cae-2247">次の表では、 <xref:System.Globalization.DateTimeStyles>列挙体の各メンバーが<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29>メソッドの操作に与える影響について説明します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2247">The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.</span></span>  
  
|<span data-ttu-id="46cae-2248">DateTimeStyles メンバー</span><span class="sxs-lookup"><span data-stu-id="46cae-2248">DateTimeStyles member</span></span>|<span data-ttu-id="46cae-2249">説明</span><span class="sxs-lookup"><span data-stu-id="46cae-2249">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="46cae-2250">を`s`解析し、必要に応じて UTC に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2250">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="46cae-2251"><xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> `styles` `s` <xref:System.DateTime> <xref:System.DateTime.ToUniversalTime%2A>にタイムゾーンオフセットが含まれている場合、またはにタイムゾーン情報が含まれておらず、フラグが含まれている場合、メソッドは文字列を解析し、を呼び出して、返された値を UTC に変換します。 `s`、 <xref:System.DateTime.Kind%2A>プロパティをに<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2251">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-2252"><xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> `s` `styles`が UTC を表すことを<xref:System.DateTime>示している場合、またはにタイムゾーン情報が含まれておらず、フラグが含まれている場合、メソッドは文字列を解析し、返されたにタイムゾーン変換を実行しません。 `s`値を指定し、 <xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>に設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2252">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-2253">それ以外の場合、フラグは無効です。</span><span class="sxs-lookup"><span data-stu-id="46cae-2253">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="46cae-2254">で`format`定義されていない空白を、個別の日付または時刻要素の間に表示できることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2254">Specifies that white space not defined by `format` can appear between any individual date or time element.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="46cae-2255">で`format`定義されていない空白をの`s`先頭に表示することを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2255">Specifies that white space not defined by `format` can appear at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="46cae-2256">で`format`定義されていない空白がの`s`末尾に表示されることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2256">Specifies that white space not defined by `format` can appear at the end of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="46cae-2257">によっ`s` `format`て定義されていない先頭、内部、および末尾の空白を含めることができることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2257">Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="46cae-2258">にタイムゾーン`s`情報がない場合、現地時刻を表すと想定されることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2258">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="46cae-2259">フラグが指定されてい<xref:System.DateTime.Kind%2A>ない限り、戻り<xref:System.DateTime>値のプロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>に設定されます。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-2259">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="46cae-2260">がタイムゾーン`s`情報を持たない場合、UTC を表すと想定されることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2260">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="46cae-2261">フラグが存在しない場合、メソッドは、返さ<xref:System.DateTime>れた値を UTC から現地時刻に<xref:System.DateTime.Kind%2A>変換し<xref:System.DateTimeKind.Local?displayProperty=nameWithType>、そのプロパティをに設定します。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-2261">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|<span data-ttu-id="46cae-2262">に`s`日付情報のない時刻が含まれている場合、戻り値の`DateTime.MinValue.Date`日付はに設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2262">If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="46cae-2263">パラメーター `s`は、既定値を使用して解析されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2263">The `s` parameter is parsed using default values.</span></span> <span data-ttu-id="46cae-2264">に`format`存在しない空白は許可されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-2264">No white space other than that present in `format` is allowed.</span></span> <span data-ttu-id="46cae-2265">に`s`日付要素がない場合、戻り<xref:System.DateTime>値の日付は1/1/0001 に設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2265">If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001.</span></span> <span data-ttu-id="46cae-2266">に`s`タイムゾーン情報<xref:System.DateTime.Kind%2A>が含まれていない場合は<xref:System.DateTime> 、返された<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>オブジェクトのプロパティがに設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2266">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-2267">タイムゾーン`s`情報がに存在する場合、時刻は現地時刻<xref:System.DateTime.Kind%2A>に変換され、返され<xref:System.DateTime>たオブジェクトのプロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>に設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2267">If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="46cae-2268">タイムゾーン情報を含む文字列の場合、は、 <xref:System.DateTime> <xref:System.DateTime.Kind%2A>プロパティがに<xref:System.DateTimeKind.Local?displayProperty=nameWithType>設定された値への変換を防止しようとします。</span><span class="sxs-lookup"><span data-stu-id="46cae-2268">For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-2269">このフラグは、主に UTC 時刻からローカル時刻への変換を防止します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2269">This flag primarily prevents the conversion of UTC times to local times.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="46cae-2270">メソッドの<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2270">The following example demonstrates the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="46cae-2271">によって先頭のスペースが許可されて`styles` `format`いないため、パラメーター <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>がと等しい場合は、文字列 "5/01/2009 8:30 AM" を正常に解析できないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="46cae-2271">Note that the string " 5/01/2009 8:30 AM" cannot be parsed successfully when the `styles` parameter equals <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType> because leading spaces are not allowed by `format`.</span></span> <span data-ttu-id="46cae-2272">さらに、"mm/dd/yyyyhh: mm" の`format`を使用して文字列 "5/01/2009 09:00" を正常に解析することはできません。これは、では、月`format`の番号の前に、必要に応じて先行ゼロが表示されないためです。</span><span class="sxs-lookup"><span data-stu-id="46cae-2272">Additionally, the string "5/01/2009 09:00" cannot be parsed successfully with a `format` of "MM/dd/yyyyhh:mm" because the date string does not precede the month number with a leading zero, as `format` requires.</span></span>  
  
 [!code-csharp[System.DateTime.TryParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParseExact/cs/TryParseExact1.cs#1)]
 [!code-vb[System.DateTime.TryParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParseExact/vb/TryParseExact1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46cae-2273"><paramref name="styles" /> は有効な <see cref="T:System.Globalization.DateTimeStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-2273"><paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
  
<span data-ttu-id="46cae-2274">または</span><span class="sxs-lookup"><span data-stu-id="46cae-2274">-or-</span></span> 
 <span data-ttu-id="46cae-2275"><paramref name="styles" /> に <see cref="T:System.Globalization.DateTimeStyles" /> 値の正しくない組み合わせが含まれています (たとえば、<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> と <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" /> の両方などです)。</span><span class="sxs-lookup"><span data-stu-id="46cae-2275"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="46cae-2276">では、解析<see cref="Overload:System.DateTime.TryParseExact" />対象の<see langword="false" />文字列に1時間の部分と、アグリーメントに含まれていない AM/PM 指定子が含まれている場合、メソッドはを返します。 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</span><span class="sxs-lookup"><span data-stu-id="46cae-2276">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.TryParseExact" /> method returns <see langword="false" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="46cae-2277">以前の[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]バージョンでは、AM/PM 指定子は無視されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2277">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.ParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="46cae-2278">.NET Framework における日付と時刻文字列の解析の解析</span><span class="sxs-lookup"><span data-stu-id="46cae-2278">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="46cae-2279">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-2279">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="46cae-2280">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-2280">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string s, string[] formats, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (s As String, formats As String(), provider As IFormatProvider, style As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ s, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string[] * IFormatProvider * System.Globalization.DateTimeStyles * DateTime -&gt; bool" Usage="System.DateTime.TryParseExact (s, formats, provider, style, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="46cae-2281">変換する日時を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-2281">A string that contains a date and time to convert.</span></span></param>
        <param name="formats"><span data-ttu-id="46cae-2282"><paramref name="s" /> の許可された形式の配列。</span><span class="sxs-lookup"><span data-stu-id="46cae-2282">An array of allowable formats of <paramref name="s" />.</span></span></param>
        <param name="provider"><span data-ttu-id="46cae-2283"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-2283">An object that supplies culture-specific format information about <paramref name="s" />.</span></span></param>
        <param name="style"><span data-ttu-id="46cae-2284"><paramref name="s" /> で使用可能な書式を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="46cae-2284">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="46cae-2285">通常指定する値は、<see cref="F:System.Globalization.DateTimeStyles.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="46cae-2285">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <param name="result"><span data-ttu-id="46cae-2286">変換に成功した場合は、このメソッドから戻る時点で、<see cref="T:System.DateTime" /> に格納された日時と等しい <paramref name="s" /> 値が格納されます。変換に失敗した場合は <see cref="F:System.DateTime.MinValue" /> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2286">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <paramref name="s" />, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="46cae-2287"><paramref name="s" /> または <paramref name="formats" /> が <see langword="null" /> の場合、<paramref name="s" /> または <paramref name="formats" /> の要素が空の文字列の場合、あるいは、<paramref name="s" /> の書式が <paramref name="formats" /> に指定されたいずれの書式パターンとも一致しない場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2287">The conversion fails if <paramref name="s" /> or <paramref name="formats" /> is <see langword="null" />, <paramref name="s" /> or an element of <paramref name="formats" /> is an empty string, or the format of <paramref name="s" /> is not exactly as specified by at least one of the format patterns in <paramref name="formats" />.</span></span> <span data-ttu-id="46cae-2288">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2288">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="46cae-2289">指定した書式の配列、カルチャ固有の書式情報、およびスタイルを使用して、指定した日付と時刻の文字列形式を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2289">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified array of formats, culture-specific format information, and style.</span></span> <span data-ttu-id="46cae-2290">文字列形式の書式は、指定した書式の少なくとも 1 つと完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-2290">The format of the string representation must match at least one of the specified formats exactly.</span></span> <span data-ttu-id="46cae-2291">このメソッドは、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2291">The method returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="46cae-2292"><paramref name="s" /> パラメーターが正常に変換された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46cae-2292"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-2293">メソッド<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>は、 `formats`パラメーターに割り当てられているパターンのいずれかと一致する日付の文字列形式を解析します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2293">The <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter.</span></span> <span data-ttu-id="46cae-2294">メソッドに似<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>ていますが、 <xref:System.DateTime.TryParseExact%2A>変換に失敗した場合にメソッドが例外をスローしない点が異なります。</span><span class="sxs-lookup"><span data-stu-id="46cae-2294">It is like the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method, except the <xref:System.DateTime.TryParseExact%2A> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="46cae-2295">パラメーター `s`には、解析する日付と時刻が格納されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2295">The `s` parameter contains the date and time to parse.</span></span> <span data-ttu-id="46cae-2296">パラメーターに`s`時刻のみが含まれ、日付が含まれていない場合は、 `style`パラメーターに<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>フラグが含まれていない限り、現在`DateTime.Date.MinValue`の日付が使用されます。この場合、既定の日付 () が使用されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2296">If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> flag, in which case the default date (`DateTime.Date.MinValue`) is used.</span></span> <span data-ttu-id="46cae-2297">パラメーターに`s`日付のみが含まれ、時刻が指定されていない場合は、深夜 (00:00:00) が使用されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2297">If the `s` parameter contains only a date and no time, midnight (00:00:00) is used.</span></span> <span data-ttu-id="46cae-2298">また`style` 、パラメーターには、 `s`の`formats`いずれかの書式指定文字列によって許可されていない空白文字を、パラメーターに含めることができるかどうかも決定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2298">The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in `formats`.</span></span>  
  
 <span data-ttu-id="46cae-2299">にタイムゾーン情報が含まれて`s`いない場合、返される<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> <xref:System.DateTime>オブジェクトのプロパティはになります。<xref:System.DateTime.Kind%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-2299">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-2300"><xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>この動作は、 <xref:System.DateTime.Kind%2A>プロパティが<xref:System.DateTime> である<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>値を返すフラグを使用するか、フラグとフラグを使用し<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>て変更できます。このフラグは、という値を返します。<xref:System.DateTime> <xref:System.DateTimeKind.Local?displayProperty=nameWithType><xref:System.DateTime.Kind%2A>プロパティが<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="46cae-2300">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, or by using the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-2301">にタイムゾーン情報が含まれている場合は、必要<xref:System.DateTime.Kind%2A>に応じて時刻が現地時刻に変換され、返され<xref:System.DateTime>た<xref:System.DateTimeKind.Local?displayProperty=nameWithType>オブジェクトのプロパティはに設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2301">If s contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-2302">この動作は、 <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>協定世界時 (UTC) を現地時刻に変換しないようにフラグを使用し、 <xref:System.DateTime.Kind%2A>プロパティをに<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>設定することによって変更できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2302">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="46cae-2303">パラメーター `formats`にはパターンの配列が含まれており`s` 、そのいずれかが、解析操作が成功する場合に正確に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="46cae-2303">The `formats` parameter contains an array of patterns, one of which `s` must match exactly if the parse operation is to succeed.</span></span> <span data-ttu-id="46cae-2304">`formats`パラメーターのパターンは、[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)の表にある1つ以上のカスタム書式指定子、または標準の日付からの定義済みのパターンを識別する単一の標準書式指定子で構成されます。 [時刻書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)の表。</span><span class="sxs-lookup"><span data-stu-id="46cae-2304">The patterns in the `formats` parameter consist of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.</span></span>  
  
 <span data-ttu-id="46cae-2305">カスタム書式パターンで日付または時刻の区切り記号を使用しない場合は、 `provider`パラメーターにインバリアントカルチャを使用し、各カスタム書式指定子の幅が最も広い形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2305">If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="46cae-2306">たとえば、パターンに時間を指定する場合は、幅の狭い形式の "H" ではなく、広い形式の "HH" を指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2306">For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
 <span data-ttu-id="46cae-2307">で`s`使用される特定の日付と時刻の記号および文字列 (特定の言語の曜日の名前など) は、が標準形式である`provider`かどうか`format`の`s`正確な形式として、パラメーターによって定義されます。指定子文字列。</span><span class="sxs-lookup"><span data-stu-id="46cae-2307">The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="46cae-2308">パラメーター `provider`には、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2308">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="46cae-2309">を解釈`s`するために使用するカルチャを表すオブジェクト。<xref:System.Globalization.CultureInfo></span><span class="sxs-lookup"><span data-stu-id="46cae-2309">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="46cae-2310">プロパティによって返されるオブジェクトは<xref:System.Globalization.DateTimeFormatInfo> 、の`s`シンボルと書式設定を定義します。 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A></span><span class="sxs-lookup"><span data-stu-id="46cae-2310">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="46cae-2311">日付と時刻のデータの形式を定義するオブジェクト。<xref:System.Globalization.DateTimeFormatInfo></span><span class="sxs-lookup"><span data-stu-id="46cae-2311">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="46cae-2312">書式設定<xref:System.IFormatProvider>情報を<xref:System.IFormatProvider.GetFormat%2A>提供する<xref:System.Globalization.CultureInfo>オブジェクトまたは<xref:System.Globalization.DateTimeFormatInfo>オブジェクトのいずれかを返すメソッドを持つカスタム実装。</span><span class="sxs-lookup"><span data-stu-id="46cae-2312">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="46cae-2313"><xref:System.Globalization.CultureInfo>が`provider` の場合は、現在のカルチャに対応するオブジェクトが使用されます。`null`</span><span class="sxs-lookup"><span data-stu-id="46cae-2313">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 <span data-ttu-id="46cae-2314">パラメーター `styles`には、で定義されて<xref:System.Globalization.DateTimeStyles> `format`いない空白をで`s`使用できるかどうかを決定する列挙体のメンバーが1つ以上含まれています。これは、解析操作の正確な動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2314">The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation.</span></span> <span data-ttu-id="46cae-2315">次の表では、 <xref:System.Globalization.DateTimeStyles>列挙体の各メンバーが<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29>メソッドの操作に与える影響について説明します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2315">The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.</span></span>  
  
|<span data-ttu-id="46cae-2316">DateTimeStyles メンバー</span><span class="sxs-lookup"><span data-stu-id="46cae-2316">DateTimeStyles member</span></span>|<span data-ttu-id="46cae-2317">説明</span><span class="sxs-lookup"><span data-stu-id="46cae-2317">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="46cae-2318">を`s`解析し、必要に応じて UTC に変換します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2318">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="46cae-2319"><xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> `styles` `s` <xref:System.DateTime> <xref:System.DateTime.ToUniversalTime%2A>にタイムゾーンオフセットが含まれている場合、またはにタイムゾーン情報が含まれておらず、フラグが含まれている場合、メソッドは文字列を解析し、を呼び出して、返された値を UTC に変換します。 `s`、 <xref:System.DateTime.Kind%2A>プロパティをに<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2319">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-2320"><xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> `s` `styles`が UTC を表すことを<xref:System.DateTime>示している場合、またはにタイムゾーン情報が含まれておらず、フラグが含まれている場合、メソッドは文字列を解析し、返されたにタイムゾーン変換を実行しません。 `s`値を指定し、 <xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>に設定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2320">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-2321">それ以外の場合、フラグは無効です。</span><span class="sxs-lookup"><span data-stu-id="46cae-2321">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="46cae-2322">で`format`定義されていない空白を、個別の日付または時刻要素の間に表示できることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2322">Specifies that white space not defined by `format` can appear between any individual date or time element.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="46cae-2323">で`format`定義されていない空白をの`s`先頭に表示することを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2323">Specifies that white space not defined by `format` can appear at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="46cae-2324">で`format`定義されていない空白がの`s`末尾に表示されることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2324">Specifies that white space not defined by `format` can appear at the end of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="46cae-2325">によっ`s` `format`て定義されていない先頭、内部、および末尾の空白を含めることができることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2325">Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="46cae-2326">にタイムゾーン`s`情報がない場合、現地時刻を表すと想定されることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2326">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="46cae-2327">フラグが指定されてい<xref:System.DateTime.Kind%2A>ない限り、戻り<xref:System.DateTime>値のプロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>に設定されます。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-2327">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="46cae-2328">がタイムゾーン`s`情報を持たない場合、UTC を表すと想定されることを指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2328">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="46cae-2329">フラグが存在しない場合、メソッドは、返さ<xref:System.DateTime>れた値を UTC から現地時刻に<xref:System.DateTime.Kind%2A>変換し<xref:System.DateTimeKind.Local?displayProperty=nameWithType>、そのプロパティをに設定します。 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="46cae-2329">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|<span data-ttu-id="46cae-2330">に`s`日付情報のない時刻が含まれている場合、戻り値の`DateTime.MinValue.Date`日付はに設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2330">If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="46cae-2331">パラメーター `s`は、既定値を使用して解析されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2331">The `s` parameter is parsed using default values.</span></span> <span data-ttu-id="46cae-2332">に`format`存在しない空白は許可されません。</span><span class="sxs-lookup"><span data-stu-id="46cae-2332">No white space other than that present in `format` is allowed.</span></span> <span data-ttu-id="46cae-2333">に`s`日付要素がない場合、戻り<xref:System.DateTime>値の日付は1/1/0001 に設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2333">If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001.</span></span> <span data-ttu-id="46cae-2334">に`s`タイムゾーン情報<xref:System.DateTime.Kind%2A>が含まれていない場合は<xref:System.DateTime> 、返された<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>オブジェクトのプロパティがに設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2334">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-2335">タイムゾーン`s`情報がに存在する場合、時刻は現地時刻<xref:System.DateTime.Kind%2A>に変換され、返され<xref:System.DateTime>たオブジェクトのプロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>に設定されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2335">If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="46cae-2336">タイムゾーン情報を含む文字列の場合、は、 <xref:System.DateTime> <xref:System.DateTime.Kind%2A>プロパティがに<xref:System.DateTimeKind.Local?displayProperty=nameWithType>設定された値への変換を防止しようとします。</span><span class="sxs-lookup"><span data-stu-id="46cae-2336">For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-2337">このフラグは、主に UTC 時刻からローカル時刻への変換を防止します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2337">This flag primarily prevents the conversion of UTC times to local times.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="46cae-2338">次の例では<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> 、メソッドを使用して、さまざまな形式の文字列を正常に解析できることを確認します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2338">The following example uses the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method to ensure that a string in a number of possible formats can be successfully parsed .</span></span>  
  
 [!code-csharp[System.Datetime.TryParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParseExact/cs/TryParseExact2.cs#2)]
 [!code-vb[System.Datetime.TryParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParseExact/vb/TryParseExact2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46cae-2339"><paramref name="styles" /> は有効な <see cref="T:System.Globalization.DateTimeStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-2339"><paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
  
<span data-ttu-id="46cae-2340">- または -</span><span class="sxs-lookup"><span data-stu-id="46cae-2340">-or-</span></span> 
 <span data-ttu-id="46cae-2341"><paramref name="styles" /> に <see cref="T:System.Globalization.DateTimeStyles" /> 値の正しくない組み合わせが含まれています (たとえば、<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> と <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" /> の両方などです)。</span><span class="sxs-lookup"><span data-stu-id="46cae-2341"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="46cae-2342">では、解析<see cref="Overload:System.DateTime.TryParseExact" />対象の<see langword="false" />文字列に1時間の部分と、アグリーメントに含まれていない AM/PM 指定子が含まれている場合、メソッドはを返します。 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</span><span class="sxs-lookup"><span data-stu-id="46cae-2342">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.TryParseExact" /> method returns <see langword="false" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="46cae-2343">以前の[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]バージョンでは、AM/PM 指定子は無視されます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2343">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.ParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="46cae-2344">.NET Framework における日付と時刻文字列の解析の解析</span><span class="sxs-lookup"><span data-stu-id="46cae-2344">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="46cae-2345">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-2345">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="46cae-2346">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="46cae-2346">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnixEpoch">
      <MemberSignature Language="C#" Value="public static readonly DateTime UnixEpoch;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime UnixEpoch" />
      <MemberSignature Language="DocId" Value="F:System.DateTime.UnixEpoch" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UnixEpoch As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime UnixEpoch;" />
      <MemberSignature Language="F#" Value=" staticval mutable UnixEpoch : DateTime" Usage="System.DateTime.UnixEpoch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcNow">
      <MemberSignature Language="C#" Value="public static DateTime UtcNow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime UtcNow" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.UtcNow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UtcNow As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime UtcNow { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcNow : DateTime" Usage="System.DateTime.UtcNow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="46cae-2347">コンピューター上の現在の日時を世界協定時刻 (UTC) で表した <see cref="T:System.DateTime" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2347">Gets a <see cref="T:System.DateTime" /> object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC).</span></span></summary>
        <value><span data-ttu-id="46cae-2348">現在の UTC 日時を値として保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="46cae-2348">An object whose value is the current UTC date and time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-2349">このプロパティの解決策は、基になるオペレーティングシステムに依存するシステムタイマーによって異なります。</span><span class="sxs-lookup"><span data-stu-id="46cae-2349">The resolution of this property depends on the system timer, which depends on the underlying operating system.</span></span> <span data-ttu-id="46cae-2350">0.5 ~ 15 ミリ秒の範囲で指定します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2350">It tends to be between 0.5 and 15 milliseconds.</span></span>

 <span data-ttu-id="46cae-2351">.NET Framework バージョン2.0 以降、戻り値は、 <xref:System.DateTime> <xref:System.DateTime.Kind%2A>プロパティがを返す<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2351">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="46cae-2352">を使用する代わり<xref:System.DateTime.UtcNow%2A>に<xref:System.DateTimeOffset.UtcNow%2A?displayProperty=nameWithType>、を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2352">An alternative to using <xref:System.DateTime.UtcNow%2A> is <xref:System.DateTimeOffset.UtcNow%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46cae-2353">前者は、日付と時刻の値がその<xref:System.DateTimeKind.Utc?displayProperty=nameWithType> <xref:System.DateTime.Kind%2A>プロパティに割り当てられた世界協定時刻 (UTC) であることを示していますが、後者では、日付と時刻<xref:System.TimeSpan.Zero?displayProperty=nameWithType>の値に utc 時刻のオフセット (と等しい) が割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2353">While the former indicates that a date and time value is Coordinated Universal Time (UTC) by assigning <xref:System.DateTimeKind.Utc?displayProperty=nameWithType> to its <xref:System.DateTime.Kind%2A> property, the latter assigns the date and time value the UTC time's offset (equal to <xref:System.TimeSpan.Zero?displayProperty=nameWithType>).</span></span>
  
## Examples  
 <span data-ttu-id="46cae-2354">次の例では<xref:System.DateTime.SpecifyKind%2A> 、メソッドを使用し<xref:System.DateTime.Kind%2A>て、メソッド<xref:System.DateTime.ToLocalTime%2A>と<xref:System.DateTime.ToUniversalTime%2A>変換メソッドに対してプロパティがどのように影響するかを示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2354">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.UtcNow" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public int Year { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Year" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Year" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Year As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Year { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Year : int" Usage="System.DateTime.Year" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="46cae-2355">このインスタンスで表される日付の年の部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2355">Gets the year component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="46cae-2356">1 から 9999 までの間の年。</span><span class="sxs-lookup"><span data-stu-id="46cae-2356">The year, between 1 and 9999.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46cae-2357">プロパティ<xref:System.DateTime.Year%2A>は、グレゴリオ暦の現在のインスタンスの年を返します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2357">The <xref:System.DateTime.Year%2A> property returns the year of the current instance in the Gregorian calendar.</span></span> <span data-ttu-id="46cae-2358">現在のカルチャの既定の暦を使用して年を返すことはありません。</span><span class="sxs-lookup"><span data-stu-id="46cae-2358">It does not return the year using the default calendar of the current culture.</span></span> <span data-ttu-id="46cae-2359">特定の暦を使用して年を取得するには、次`GetYear`のコードに示すように、その暦のメソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="46cae-2359">To retrieve the year using a particular calendar, you can call that calendar's `GetYear` method, as the following code shows.</span></span>  
  
 [!code-csharp[System.DateTime.Year#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Year/cs/Year.cs#1)]
 [!code-vb[System.DateTime.Year#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Year/vb/Year.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="46cae-2360">プロパティの<xref:System.DateTime.Year%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="46cae-2360">The following example demonstrates the <xref:System.DateTime.Year%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
  </Members>
</Type>
