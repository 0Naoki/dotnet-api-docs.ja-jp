<Type Name="DateTime" FullName="System.DateTime">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fa3f7d4eee2778992089a62f7eef6c3dd4191614" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52599839" /></Metadata><TypeSignature Language="C#" Value="public struct DateTime : IComparable, IComparable&lt;DateTime&gt;, IConvertible, IEquatable&lt;DateTime&gt;, IFormattable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTime extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.DateTime&gt;, class System.IConvertible, class System.IEquatable`1&lt;valuetype System.DateTime&gt;, class System.IFormattable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.DateTime" />
  <TypeSignature Language="VB.NET" Value="Public Structure DateTime&#xA;Implements IComparable, IComparable(Of DateTime), IConvertible, IEquatable(Of DateTime), IFormattable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public value class DateTime : IComparable, IComparable&lt;DateTime&gt;, IConvertible, IEquatable&lt;DateTime&gt;, IFormattable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type DateTime = struct&#xA;    interface IFormattable&#xA;    interface IConvertible&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.DateTime&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.DateTime&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7ac35-101">通常、日付や時刻として表現される瞬間を表します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-101">Represents an instant in time, typically expressed as a date and time of day.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

## <a name="quick-links-to-example-code"></a><span data-ttu-id="7ac35-102">コード例へのクイック リンク</span><span class="sxs-lookup"><span data-stu-id="7ac35-102">Quick links to example code</span></span>

[!INCLUDE[interactive-note](~/includes/csharp-interactive-with-utc-note.md)]

<span data-ttu-id="7ac35-103">この記事には、使用するいくつかの例が含まれています、`DateTime`型。</span><span class="sxs-lookup"><span data-stu-id="7ac35-103">This article includes several examples that use the `DateTime` type:</span></span>

<span data-ttu-id="7ac35-104">**初期化の例**</span><span class="sxs-lookup"><span data-stu-id="7ac35-104">**Initialization Examples**</span></span>      
- [<span data-ttu-id="7ac35-105">コンス トラクターを呼び出す</span><span class="sxs-lookup"><span data-stu-id="7ac35-105">Invoke a constructor</span></span>](#initialization-01)
- [<span data-ttu-id="7ac35-106">暗黙の既定のコンス トラクターを呼び出す</span><span class="sxs-lookup"><span data-stu-id="7ac35-106">Invoke the implicit default constructor</span></span>](#initialization-02)
- [<span data-ttu-id="7ac35-107">戻り値の割り当て</span><span class="sxs-lookup"><span data-stu-id="7ac35-107">Assignment from return value</span></span>](#initialization-03)
- [<span data-ttu-id="7ac35-108">日付と時刻を表す文字列の解析</span><span class="sxs-lookup"><span data-stu-id="7ac35-108">Parsing a string that represents a date and time</span></span>](#initialization-04)
- [<span data-ttu-id="7ac35-109">日付と時刻に初期化するために Visual Basic 構文</span><span class="sxs-lookup"><span data-stu-id="7ac35-109">Visual Basic syntax to initialize a date and time</span></span>](#initialization-05)

<span data-ttu-id="7ac35-110">**書式設定`DateTime`オブジェクトを文字列として**</span><span class="sxs-lookup"><span data-stu-id="7ac35-110">**Formatting `DateTime` objects as strings**</span></span>  
- [<span data-ttu-id="7ac35-111">既定の日付時刻形式を使用して、</span><span class="sxs-lookup"><span data-stu-id="7ac35-111">Use the default date time format</span></span>](#formatting-01)
- [<span data-ttu-id="7ac35-112">日付と時刻を特定のカルチャを使用して書式設定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-112">Format a date and time using a specific culture</span></span>](#formatting-02)
- [<span data-ttu-id="7ac35-113">標準またはカスタム書式指定文字列を使用して日付時刻を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-113">Format a date time using a standard or custom format string</span></span>](#formatting-03)
- [<span data-ttu-id="7ac35-114">書式指定文字列と、特定のカルチャの両方を指定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-114">Specify both a format string and a specific culture</span></span>](#formatting-04)
- [<span data-ttu-id="7ac35-115">Web サービスの ISO 8601 標準を使用して日付時刻を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-115">Format a date time using the ISO 8601 standard for web services</span></span>](#formatting-05)

<span data-ttu-id="7ac35-116">**として文字列の解析`DateTime`オブジェクト**</span><span class="sxs-lookup"><span data-stu-id="7ac35-116">**Parsing strings as `DateTime` objects**</span></span>  
- [<span data-ttu-id="7ac35-117">使用`Parse`または`TryParse`日付と時刻を文字列に変換するには</span><span class="sxs-lookup"><span data-stu-id="7ac35-117">Use `Parse` or `TryParse` to convert a string to a date and time</span></span>](#parsing-01)
- [<span data-ttu-id="7ac35-118">使用`ParseExact`または`TryParseExact`既知の形式の文字列に変換するには</span><span class="sxs-lookup"><span data-stu-id="7ac35-118">Use `ParseExact` or `TryParseExact` to convert a string in a known format</span></span>](#parsing-02)
- [<span data-ttu-id="7ac35-119">ISO 8601 文字列から日付と時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-119">Convert from the ISO 8601 string representation to a date and time</span></span>](#parsing-03)

<span data-ttu-id="7ac35-120">**`DateTime` 解決方法**</span><span class="sxs-lookup"><span data-stu-id="7ac35-120">**`DateTime` resolution**</span></span>  
- [<span data-ttu-id="7ac35-121">日付と時刻の値の解像度を調べる</span><span class="sxs-lookup"><span data-stu-id="7ac35-121">Explore the resolution of date and time values</span></span>](#resolution-01)
- [<span data-ttu-id="7ac35-122">等しいかどうか、許容範囲内で比較します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-122">Comparing for equality within a tolerance</span></span>](#comparison-01)

<span data-ttu-id="7ac35-123">**カルチャと予定表**</span><span class="sxs-lookup"><span data-stu-id="7ac35-123">**Culture and calendars**</span></span>  
- [<span data-ttu-id="7ac35-124">カルチャ固有のカレンダーを使用して日付と時刻の値を表示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-124">Display date and time values using culture specific calendars</span></span>](#calendars-01)
- [<span data-ttu-id="7ac35-125">カルチャ固有のカレンダーに従って文字列を解析します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-125">Parse strings according to a culture specific calendar</span></span>](#calendars-02)
- [<span data-ttu-id="7ac35-126">日付と時刻特定のカルチャのカレンダーからを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-126">Initialize a date and time from a specific culture's calendar</span></span>](#calendars-03)
- [<span data-ttu-id="7ac35-127">特定のカルチャの暦を使用して日付と時刻のプロパティへのアクセス</span><span class="sxs-lookup"><span data-stu-id="7ac35-127">Accessing date and time properties using a specific culture's calendar</span></span>](#calendars-04)
- [<span data-ttu-id="7ac35-128">カルチャ固有のカレンダーを使用して年の通算週を取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-128">Retrieving the week of the year using culture specific calendars</span></span>](#calendars-05)

<span data-ttu-id="7ac35-129">**永続性**</span><span class="sxs-lookup"><span data-stu-id="7ac35-129">**Persistence**</span></span>  
- [<span data-ttu-id="7ac35-130">ローカル タイム ゾーン文字列として日付と時刻の値を保持します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-130">Persisting date and time values as strings in the local time zone</span></span>](#persistence-01)
- [<span data-ttu-id="7ac35-131">インバリアント カルチャの日時形式で文字列として日付と時刻の値を保持します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-131">Persisting date and time values as strings in a culture and time invariant format</span></span>](#persistence-02)
- [<span data-ttu-id="7ac35-132">整数値として日付と時刻の値を保持します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-132">Persisting date and time values as integers</span></span>](#persistence-03)
- [<span data-ttu-id="7ac35-133">永続化する日付と時刻の値を使用して、 `XmlSerializer`</span><span class="sxs-lookup"><span data-stu-id="7ac35-133">Persisting date and time values using the `XmlSerializer`</span></span>](#persistence-04)
- [<span data-ttu-id="7ac35-134">永続化する日付と時刻の値を使用して、 `BinaryFormatter`</span><span class="sxs-lookup"><span data-stu-id="7ac35-134">Persisting date and time values using the `BinaryFormatter`</span></span>](#persistence-05)
- [<span data-ttu-id="7ac35-135">タイム ゾーン データ永続化する日付と時刻の値</span><span class="sxs-lookup"><span data-stu-id="7ac35-135">Persisting date and time values with time zone data</span></span>](#persistence-06)

## <a name="quick-links-to-remarks-topics"></a><span data-ttu-id="7ac35-136">「解説」トピックへのクイック リンク。</span><span class="sxs-lookup"><span data-stu-id="7ac35-136">Quick links to Remarks topics.</span></span>

<span data-ttu-id="7ac35-137">このセクションには多くの一般的な使用法に関するトピックが含まれています、`DateTime`構造体。</span><span class="sxs-lookup"><span data-stu-id="7ac35-137">This section contains topics for many common uses of the `DateTime` struct:</span></span>
  
- [<span data-ttu-id="7ac35-138">初期化を`DateTime`オブジェクト</span><span class="sxs-lookup"><span data-stu-id="7ac35-138">Initializing a `DateTime` object</span></span>](#initializing-a-datetime-object)
- [<span data-ttu-id="7ac35-139">DateTime 値とその文字列表現</span><span class="sxs-lookup"><span data-stu-id="7ac35-139">DateTime values and their string representations</span></span>](#datetime-values-and-their-string-representations)
- [<span data-ttu-id="7ac35-140">文字列から DateTime 値の解析</span><span class="sxs-lookup"><span data-stu-id="7ac35-140">Parsing DateTime values from strings</span></span>](#parsing-datetime-values-from-strings)
- [<span data-ttu-id="7ac35-141">DateTime 値</span><span class="sxs-lookup"><span data-stu-id="7ac35-141">DateTime values</span></span>](#datetime-values)
- [<span data-ttu-id="7ac35-142">DateTime 操作</span><span class="sxs-lookup"><span data-stu-id="7ac35-142">DateTime operations</span></span>](#datetime-operations)
- [<span data-ttu-id="7ac35-143">DateTime の解決</span><span class="sxs-lookup"><span data-stu-id="7ac35-143">DateTime resolution</span></span>](#datetime-resolution)
- [<span data-ttu-id="7ac35-144">DateTime 値との予定表</span><span class="sxs-lookup"><span data-stu-id="7ac35-144">DateTime values and calendars</span></span>](#datetime-values-and-calendars)
- [<span data-ttu-id="7ac35-145">DateTime 値の永続化</span><span class="sxs-lookup"><span data-stu-id="7ac35-145">Persisting DateTime values</span></span>](#persisting-datetime-values)
- [<span data-ttu-id="7ac35-146">DateTime とします。timeSpan</span><span class="sxs-lookup"><span data-stu-id="7ac35-146">DateTime vs. TimeSpan</span></span>](#datetime-vs-timespan)
- [<span data-ttu-id="7ac35-147">許容範囲内で等しいかどうかを比較します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-147">Comparing for equality within tolerance</span></span>](#comparing-for-equality-within-tolerance)
- [<span data-ttu-id="7ac35-148">COM 相互運用機能に関する考慮事項</span><span class="sxs-lookup"><span data-stu-id="7ac35-148">COM interop considerations</span></span>](#com-interop-considerations)
   
<span data-ttu-id="7ac35-149"><xref:System.DateTime>値の型の日付を表すし、西暦 9999 年 12 月 31 日までの値で 00時 00分: 00 (午前 0 時)、1 月 1 日から 0001 西暦紀元 11時 59分: 59 PM、使用時間</span><span class="sxs-lookup"><span data-stu-id="7ac35-149">The <xref:System.DateTime> value type represents dates and times with values ranging from 00:00:00 (midnight), January 1, 0001 Anno Domini (Common Era) through 11:59:59 P.M., December 31, 9999 A.D.</span></span> <span data-ttu-id="7ac35-150">(西暦)構成のグレゴリオ暦カレンダーです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-150">(C.E.) in the Gregorian calendar.</span></span>  
  
<span data-ttu-id="7ac35-151">時刻の値は、タイマー刻み 100 ナノ秒単位で測定されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-151">Time values are measured in 100-nanosecond units called ticks.</span></span> <span data-ttu-id="7ac35-152">特定の日付では、タイマー刻みの数を西暦 0001 年 1 月 1 日午前 12時 00分時以降</span><span class="sxs-lookup"><span data-stu-id="7ac35-152">A particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D.</span></span> <span data-ttu-id="7ac35-153">(西暦)<xref:System.Globalization.GregorianCalendar>カレンダーです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-153">(C.E.) in the <xref:System.Globalization.GregorianCalendar> calendar.</span></span> <span data-ttu-id="7ac35-154">数は、うるう秒によって追加されるタイマー刻みを除外します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-154">The number excludes ticks that would be added by leap seconds.</span></span> <span data-ttu-id="7ac35-155">たとえば、31241376000000000l のタイマー刻みの値は、午前 12時 00分: 00 0100 年 1 月 01日金曜日の日付表します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-155">For example, a ticks value of 31241376000000000L represents the date Friday, January 01, 0100 12:00:00 midnight.</span></span> <span data-ttu-id="7ac35-156">A<xref:System.DateTime>値が常に明確なコンテキストまたは既定の暦で表されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-156">A <xref:System.DateTime> value is always expressed in the context of an explicit or default calendar.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7ac35-157">分または秒などの他の時間間隔に変換することは、使用する必要があります、タイマー刻みの値を使用している場合、 <xref:System.TimeSpan.TicksPerDay?displayProperty=nameWithType>、 <xref:System.TimeSpan.TicksPerHour?displayProperty=nameWithType>、 <xref:System.TimeSpan.TicksPerMinute?displayProperty=nameWithType>、 <xref:System.TimeSpan.TicksPerSecond?displayProperty=nameWithType>、または<xref:System.TimeSpan.TicksPerMillisecond?displayProperty=nameWithType>変換を実行する定数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-157">If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <xref:System.TimeSpan.TicksPerDay?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerHour?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=nameWithType>, or <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=nameWithType> constant to perform the conversion.</span></span> <span data-ttu-id="7ac35-158">たとえば、秒数を追加するによって表されるをタイマー刻み数が指定された、<xref:System.DateTime.Second%2A>のコンポーネントである、<xref:System.DateTime>値、式を使用することができます`dateValue.Second + nTicks/Timespan.TicksPerSecond`。</span><span class="sxs-lookup"><span data-stu-id="7ac35-158">For example, to add the number of seconds represented by a specified number of ticks to the <xref:System.DateTime.Second%2A> component of a <xref:System.DateTime> value, you can use the expression `dateValue.Second + nTicks/Timespan.TicksPerSecond`.</span></span>  

<span data-ttu-id="7ac35-159">この記事の例のセット全体のソースを表示するにはいずれかで[Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/System.DateTime/)または[c#](https://github.com/dotnet/samples/tree/master/snippets/csharp/System.DateTime/) GitHub の docs リポジトリから。</span><span class="sxs-lookup"><span data-stu-id="7ac35-159">You can view the source for the entire set of examples from this article in either [Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/System.DateTime/) or [C#](https://github.com/dotnet/samples/tree/master/snippets/csharp/System.DateTime/) from the docs repository on GitHub.</span></span>

> [!NOTE]
>  <span data-ttu-id="7ac35-160">代わりに、<xref:System.DateTime>は具体的にはタイム ゾーンの日付と時刻の値を操作の構造体、<xref:System.DateTimeOffset>構造体。</span><span class="sxs-lookup"><span data-stu-id="7ac35-160">An alternative to the <xref:System.DateTime> structure for working with date and time values in particular time zones is the <xref:System.DateTimeOffset> structure.</span></span> <span data-ttu-id="7ac35-161"><xref:System.DateTimeOffset>構造体をプライベートの日付と時刻の情報を格納する<xref:System.DateTime>フィールドと、これによって、日付し、時刻の分の数、プライベートで UTC と異なる<xref:System.Int16>フィールド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-161">The <xref:System.DateTimeOffset> structure stores date and time information in a private <xref:System.DateTime> field and the number of minutes by which that date and time differs from UTC in a private <xref:System.Int16> field.</span></span> <span data-ttu-id="7ac35-162">できるようになります、<xref:System.DateTimeOffset>値は、特定のタイム ゾーンの時間を反映するように、<xref:System.DateTime>値は、明確にのみ UTC とローカル タイム ゾーンの時刻を反映できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-162">This makes it possible for a <xref:System.DateTimeOffset> value to reflect the time in a particular time zone, whereas a <xref:System.DateTime> value can unambiguously reflect only UTC and the local time zone's time.</span></span> <span data-ttu-id="7ac35-163">使用する場合について、<xref:System.DateTime>構造体、または<xref:System.DateTimeOffset>日付と時刻の値を使用する場合に構造体は、「[選択の間で DateTime DateTimeOffset TimeSpan、および TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md)します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-163">For a discussion about when to use the <xref:System.DateTime> structure or the <xref:System.DateTimeOffset> structure when working with date and time values, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md).</span></span>  
  
### <a name="initializing-a-datetime-object"></a><span data-ttu-id="7ac35-164">DateTime オブジェクトの初期化</span><span class="sxs-lookup"><span data-stu-id="7ac35-164">Initializing a DateTime object</span></span>  

<span data-ttu-id="7ac35-165">新しいパスワードに、初期値を割り当てることができます`DateTime`さまざまな方法で値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-165">You can assign an initial value to a new `DateTime` value in many different ways:</span></span>

- <span data-ttu-id="7ac35-166">いずれかの値については、引数を指定するコンス トラクターの呼び出しまたは暗黙的な既定のコンス トラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-166">Calling a constructor, either one where you specify arguments for values, or use the implicit default constructor.</span></span>
- <span data-ttu-id="7ac35-167">割り当てを`DateTime`プロパティまたはメソッドの戻り値にします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-167">Assigning a `DateTime` to the return value of a property or method.</span></span>
- <span data-ttu-id="7ac35-168">解析、`DateTime`文字列表現からの値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-168">Parsing a `DateTime` value from its string representation.</span></span>
- <span data-ttu-id="7ac35-169">インスタンス化する Visual Basic 固有の言語機能を使用して、`DateTime`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-169">Using Visual Basic-specific language features to instantiate a `DateTime`.</span></span> 

<span data-ttu-id="7ac35-170">次のコード スニペットでは、それぞれの例を示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-170">The following code snippets show examples of each:</span></span>

#### <a name="invoke-constructors"></a><span data-ttu-id="7ac35-171">コンス トラクターを呼び出す</span><span class="sxs-lookup"><span data-stu-id="7ac35-171">Invoke Constructors</span></span>

<span data-ttu-id="7ac35-172">オーバー ロードを呼び出す、 <xref:System.DateTime> (年、月、および日、またはタイマー刻みの数) などの日付と時刻の値の要素を指定するコンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-172">You call any of the overloads of the <xref:System.DateTime> constructor that specify elements of the date and time value (such as the year, month, and day, or the number of ticks).</span></span> <span data-ttu-id="7ac35-173">次のコードを使用して、特定の日付、<xref:System.DateTime>年、月、日、時間、分、および秒を指定するコンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-173">The following code creates a specific date using the <xref:System.DateTime> constructor specifying the year, month, day, hour, minute, and second.</span></span>  

<a name="initialization-01"></a>  
[!code-vb[System.DateTime.Instantiation#1](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#1)]  
[!code-csharp-interactive[System.DateTime.Instantiation#1](~/samples/snippets/csharp/System.DateTime/Instantiation.cs#1)]

<span data-ttu-id="7ac35-174">呼び出す、`DateTime`するときに構造体の暗黙的な既定のコンス トラクター、`DateTime`その既定値に初期化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-174">You invoke the `DateTime` structure's implicit default constructor when you want a `DateTime` initialized to its default value.</span></span> <span data-ttu-id="7ac35-175">(詳細については、値型の暗黙的な既定のコンス トラクターは、次を参照してください[値型](~/docs/csharp/language-reference/keywords/value-types.md)。)。一部のコンパイラが宣言をサポートしても、<xref:System.DateTime>明示的に値を割り当てずの値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-175">(For details on the implicit default constructor of a value type, see [Value Types](~/docs/csharp/language-reference/keywords/value-types.md).) Some compilers also support declaring a <xref:System.DateTime> value without explicitly assigning a value to it.</span></span> <span data-ttu-id="7ac35-176">既定値で結果もせず、明示的な初期化の値を作成します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-176">Creating a value without an explicit initialization also results in the default value.</span></span> <span data-ttu-id="7ac35-177">次の例を示しています、 <xref:System.DateTime> c# および Visual Basic では、暗黙の既定のコンス トラクターと同様に、 <xref:System.DateTime> Visual Basic での割り当てなしの宣言。</span><span class="sxs-lookup"><span data-stu-id="7ac35-177">The following example illustrates the <xref:System.DateTime> implicit default constructor in C# and Visual Basic, as well as a <xref:System.DateTime> declaration without assignment in Visual Basic.</span></span>  

<a name="initialization-02"></a>  
[!code-vb[System.DateTime.Instantiation#5](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#5)]  
[!code-csharp-interactive[System.DateTime.Instantiation#5](~/samples/snippets/csharp/System.DateTime/Instantiation.cs#5)]
    
#### <a name="assigning-a-computed-value"></a><span data-ttu-id="7ac35-178">計算値を割り当てる</span><span class="sxs-lookup"><span data-stu-id="7ac35-178">Assigning a computed value</span></span>

<span data-ttu-id="7ac35-179">割り当てることができます、<xref:System.DateTime>オブジェクトのプロパティまたはメソッドによって返される日付と時刻の値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-179">You can assign the <xref:System.DateTime> object a date and time value returned by a property or method.</span></span> <span data-ttu-id="7ac35-180">次の例では、割り当て、現在の日付と時刻、世界協定時刻 (UTC) の現在の日付と時刻と現在の日付に 3 つの新しい<xref:System.DateTime>変数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-180">The following example assigns the current date and time, the current Coordinated Universal Time (UTC) date and time, and the current date to three new <xref:System.DateTime> variables.</span></span>  

<a name="initialization-03"></a>  
[!code-vb[System.DateTime.Instantiation#3](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#3)]  
[!code-csharp[System.DateTime.Instantiation#3](~/samples/snippets/csharp/System.DateTime/Instantiation.cs#3)]

#### <a name="parsing-a-string-that-represents-a-datetime"></a><span data-ttu-id="7ac35-181">DateTime を表す文字列の解析</span><span class="sxs-lookup"><span data-stu-id="7ac35-181">Parsing a string that represents a DateTime</span></span>

<span data-ttu-id="7ac35-182"><xref:System.DateTime.Parse%2A>、 <xref:System.DateTime.ParseExact%2A>、 <xref:System.DateTime.TryParse%2A>、および<xref:System.DateTime.TryParseExact%2A>メソッドはすべて、文字列を等価の日付と時刻の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-182">The <xref:System.DateTime.Parse%2A>, <xref:System.DateTime.ParseExact%2A>, <xref:System.DateTime.TryParse%2A>, and <xref:System.DateTime.TryParseExact%2A> methods all convert a string to its equivalent date and time value.</span></span> <span data-ttu-id="7ac35-183">次の例を使用して、<xref:System.DateTime.Parse%2A>と<xref:System.DateTime.ParseExact%2A>文字列を解析およびに変換するメソッドを<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-183">The following examples use the <xref:System.DateTime.Parse%2A> and <xref:System.DateTime.ParseExact%2A> methods to parse a string and convert it to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="7ac35-184">2 番目の形式でサポートされている形式を使用して、 [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)標準を表す日付と時刻文字列の形式です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-184">The second format uses a form supported by the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard for a representing date and time in string format.</span></span> <span data-ttu-id="7ac35-185">この標準的な表現は、web サービスの日付情報を転送によく使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-185">This standard representation is often used to transfer date information in web services.</span></span>

<a name="initialization-04"></a>  
[!code-vb[System.DateTime.Instantiation#4](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#4)]  
[!code-csharp[System.DateTime.Instantiation#4](~/samples/snippets/csharp/System.DateTime/Instantiation.cs#4)]

<span data-ttu-id="7ac35-186"><xref:System.DateTime.TryParse%2A>と<xref:System.DateTime.TryParseExact%2A>メソッドは、文字列の有効な表現であるかどうかを示す、<xref:System.DateTime>と、値の場合は、変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-186">The <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods indicate whether a string is a valid representation of a <xref:System.DateTime> value and, if it is, performs the conversion.</span></span>  

#### <a name="language-specific-syntax-for-visual-basic"></a><span data-ttu-id="7ac35-187">Visual basic の言語固有の構文</span><span class="sxs-lookup"><span data-stu-id="7ac35-187">Language-specific syntax for Visual Basic</span></span>

<span data-ttu-id="7ac35-188">次の Visual Basic ステートメントは、新しい初期化<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-188">The following Visual Basic statement initializes a new <xref:System.DateTime> value.</span></span>  

<a name="initialization-05"></a>  
[!code-vb[System.DateTime.Instantiation#2](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#2)]  

### <a name="datetime-values-and-their-string-representations"></a><span data-ttu-id="7ac35-189">DateTime 値とその文字列表現</span><span class="sxs-lookup"><span data-stu-id="7ac35-189">DateTime values and their string representations</span></span>  

<span data-ttu-id="7ac35-190">内部的には、すべて<xref:System.DateTime>値は 0001 年 1 月 1 日の午前 12時 00分: 00 から経過したタイマー刻み (100 ナノ秒間隔の数) の数として表されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-190">Internally, all <xref:System.DateTime> values are represented as the number of ticks (the number of 100-nanosecond intervals) that have elapsed since 12:00:00 midnight, January 1, 0001.</span></span> <span data-ttu-id="7ac35-191">実際、<xref:System.DateTime>値は表示されるときに、その値の表示方法に依存しません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-191">The actual <xref:System.DateTime> value is independent of the way in which that value appears when displayed.</span></span> <span data-ttu-id="7ac35-192">外観を<xref:System.DateTime>値が値を文字列表現に変換する書式設定操作の結果。</span><span class="sxs-lookup"><span data-stu-id="7ac35-192">The appearance of a <xref:System.DateTime> value is the result of a formatting operation that converts a value to its string representation.</span></span>  
  
<span data-ttu-id="7ac35-193">日付と時刻の値の外観では、カルチャ、国際標準、アプリケーションの要件、および個人の好みによります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-193">The appearance of date and time values is dependent on culture, international standards, application requirements, and personal preference.</span></span> <span data-ttu-id="7ac35-194"><xref:System.DateTime>構造体のオーバー ロードによって、日付と時刻の値の書式設定の柔軟性を提供する<xref:System.DateTime.ToString%2A>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-194">The <xref:System.DateTime> structure offers flexibility in formatting date and time values through overloads of  <xref:System.DateTime.ToString%2A>.</span></span> <span data-ttu-id="7ac35-195">既定の<xref:System.DateTime.ToString?displayProperty=nameWithType>メソッドは、現在のカルチャの短い形式の日付および時間の長い時刻パターンを使用して日付と時刻の値の文字列表現を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-195">The default <xref:System.DateTime.ToString?displayProperty=nameWithType> method returns the string representation of a date and time value using the current culture's short date and long time pattern.</span></span> <span data-ttu-id="7ac35-196">次のコードの例では、既定値<xref:System.DateTime.ToString?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-196">The following example uses the default <xref:System.DateTime.ToString?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7ac35-197">現在のカルチャの短い日付と長い時刻パターンを使用して日時を表示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-197">It displays the date and time using the short date and long time pattern for the current culture.</span></span> <span data-ttu-id="7ac35-198">EN-US カルチャは、例が実行されたコンピューターの現在のカルチャです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-198">The en-US culture is the current culture on the computer on which the example was run.</span></span>  
  
<a name="formatting-01"></a>  
[!code-csharp-interactive[System.DateTime.Formatting#1](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#1)]
[!code-vb[System.DateTime.Formatting#1](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#1)]  

<span data-ttu-id="7ac35-199">クライアントから別のカルチャで、サーバー可能性がある web シナリオをサポートするために、特定のカルチャの日付の書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-199">You may need to format dates in a specific culture to support web scenarios where the server may be in a different culture from the client.</span></span> <span data-ttu-id="7ac35-200">使用して、カルチャを指定する、<xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>特定のカルチャの短い日付と長い時刻形式を作成します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-200">You specify the culture using the <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to create the short date and long time representation in a specific culture.</span></span> <span data-ttu-id="7ac35-201">次の例では、<xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>日付し、時刻の FR-FR カルチャの短い日付と長い時刻パターンを使用するメソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-201">The following example uses the <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to display the date and time using the short date and long time pattern for the fr-FR culture.</span></span>  
  
<a name="formatting-02"></a>  
[!code-csharp-interactive[System.DateTime.Formatting#2](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#2)]
[!code-vb[System.DateTime.Formatting#2](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#2)]  

 <span data-ttu-id="7ac35-202">その他のアプリケーションには、日付の別の文字列表現が必要です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-202">Other applications may require different string representations of a date.</span></span> <span data-ttu-id="7ac35-203"><xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>メソッドは、現在のカルチャの書式指定規則を使用して、標準またはカスタム書式指定子によって定義された文字列表現を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-203">The <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method returns the string representation defined by a standard or custom format specifier using the formatting conventions of the current culture.</span></span> <span data-ttu-id="7ac35-204">次の例では、 <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> en-us で時刻のパターンと完全な日付を表示する方法をカルチャ、例が実行されたコンピューターの現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-204">The following example uses the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method to display the full date and time pattern for the en-US culture, the current culture on the computer on which the example was run.</span></span>  
  
<a name="formatting-03"></a>  
[!code-csharp-interactive[System.DateTime.Formatting#3](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#3)]
[!code-vb[System.DateTime.Formatting#3](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#3)]  

 <span data-ttu-id="7ac35-205">最後に、カルチャと形式を使用して、両方を指定、<xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-205">Finally, you can specify both the culture and the format using the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7ac35-206">次の例では、<xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>完全な日付と時刻のパターン、FR-FR カルチャを表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-206">The following example uses the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method to display the full date and time pattern for the fr-FR culture.</span></span>  

<a name="formatting-04"></a>  
[!code-csharp-interactive[System.DateTime.Formatting#4](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#4)]
[!code-vb[System.DateTime.Formatting#4](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#4)]  

<span data-ttu-id="7ac35-207"><xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>他の形式を指定するカスタム書式指定文字列でオーバー ロードが使用もできます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-207">The <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> overload can also be used with a custom format string to specify other formats.</span></span> <span data-ttu-id="7ac35-208">次の例を使用して文字列を書式設定する方法を示しています、 [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) web サービスに使用される多くの場合、標準の形式。</span><span class="sxs-lookup"><span data-stu-id="7ac35-208">The following example shows how to format a string using the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard format often used for web services.</span></span> <span data-ttu-id="7ac35-209">Iso 8601 形式には、対応する標準書式指定文字列はありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-209">The Iso 8601 format does not have a corresponding standard format string.</span></span>

<a name="formatting-05"></a> <span data-ttu-id="7ac35-210">[!code-csharp-interactive[System.DateTime.Formatting#5](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#5)]</span><span class="sxs-lookup"><span data-stu-id="7ac35-210">[!code-csharp-interactive[System.DateTime.Formatting#5](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#5)]</span></span>
[!code-vb[System.DateTime.Formatting#5](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#5)]  

<span data-ttu-id="7ac35-211">書式設定の詳細については<xref:System.DateTime>値を参照してください[Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-211">For more information about formatting <xref:System.DateTime> values, see  [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  

### <a name="parsing-datetime-values-from-strings"></a><span data-ttu-id="7ac35-212">文字列から DateTime 値の解析</span><span class="sxs-lookup"><span data-stu-id="7ac35-212">Parsing DateTime values from strings</span></span>

<span data-ttu-id="7ac35-213">日付と時刻を文字列形式を変換する解析を<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-213">Parsing converts the string representation of a date and time to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="7ac35-214">通常、日付と時刻の文字列では、アプリケーションに 2 つのさまざまな使用法があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-214">Typically, date and time strings have two different usages in applications:</span></span>  
  
-   <span data-ttu-id="7ac35-215">日付と時刻は、さまざまなフォームを受け取り、現在のカルチャまたは特定のカルチャのいずれかの規則を反映します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-215">A date and time takes a variety of forms and reflects the conventions of either the current culture or a specific culture.</span></span> <span data-ttu-id="7ac35-216">たとえば、アプリケーションでは、現在のカルチャが「12/15/2013」または「2013 年 12 月 15 日」と日付の値を入力するには、EN-US ユーザーが使用できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-216">For example, an application allows a user whose current culture is en-US to input a date value as "12/15/2013" or "December 15, 2013".</span></span> <span data-ttu-id="7ac35-217">これにより、ユーザーが現在のカルチャが「2013/15/12」または「15 年 12 月の 2013」として、日付の値を入力するには、en-gb</span><span class="sxs-lookup"><span data-stu-id="7ac35-217">It allows a user whose current culture is en-gb to input a date value as "15/12/2013" or "15 December 2013."</span></span>  
  
-   <span data-ttu-id="7ac35-218">日付と時刻は、定義済みの形式で表されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-218">A date and time is represented in a predefined format.</span></span> <span data-ttu-id="7ac35-219">たとえば、アプリケーションでは、アプリが実行されているカルチャとは無関係に「20130103」としての日付をシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-219">For example, an application serializes a date as "20130103" independently of the culture on which the app is running.</span></span> <span data-ttu-id="7ac35-220">アプリケーションが必要があります、現在のカルチャの短い日付形式で日付を入力します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-220">An application may require dates be input in the current culture's short date format.</span></span>
  
<span data-ttu-id="7ac35-221">使用する、<xref:System.DateTime.Parse%2A>または<xref:System.DateTime.TryParse%2A>カルチャで使用される一般的な日付と時刻の形式のいずれかから文字列に変換するメソッド、<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-221">You use the <xref:System.DateTime.Parse%2A> or <xref:System.DateTime.TryParse%2A> method to convert a string from one of the common date and time formats used by a culture to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="7ac35-222">次の例は、使用する方法を示しています。<xref:System.DateTime.TryParse%2A>を異なるカルチャに固有の形式で日付文字列に変換する、<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-222">The following example shows how you can use <xref:System.DateTime.TryParse%2A> to convert date strings in different culture-specific formats to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="7ac35-223">英語 (英国) を呼び出し、現在のカルチャを変更、<xref:System.DateTime.GetDateTimeFormats>日付と時刻の文字列の配列を生成します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-223">It changes the current culture to English (Great Britain) and calls the <xref:System.DateTime.GetDateTimeFormats> method to generate an array of date and time strings.</span></span> <span data-ttu-id="7ac35-224">これは、後、配列内の各要素を渡します、<xref:System.DateTime.TryParse%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-224">It then passes each element in the array to the <xref:System.DateTime.TryParse%2A> method.</span></span> <span data-ttu-id="7ac35-225">例の出力は、解析メソッドが正常に各カルチャに固有の日付と時刻の文字列を変換することを示しています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-225">The output from the example shows the parsing method was able to successfully convert each of the culture-specific date and time strings.</span></span>  
  
<a name="parsing-01"></a>  
[!code-csharp-interactive[System.DateTime.Parsing#1](~/samples/snippets/csharp/System.DateTime/Parsing.cs#1)]
[!code-vb[System.DateTime.Parsing#1](~/samples/snippets/visualbasic/System.DateTime/Parsing.vb#1)]  

<span data-ttu-id="7ac35-226">使用する、<xref:System.DateTime.ParseExact%2A>と<xref:System.DateTime.TryParseExact%2A>を特定の形式または形式に一致する必要がある文字列を変換するメソッド、<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-226">You use the <xref:System.DateTime.ParseExact%2A> and <xref:System.DateTime.TryParseExact%2A> methods to convert a string that must match a particular format or formats to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="7ac35-227">解析メソッドのパラメーターとしては、日付と時刻の書式指定文字列を 1 つまたは複数を指定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-227">You specify one or more date and time format strings as a parameter to the parsing method.</span></span> <span data-ttu-id="7ac35-228">次の例では、 <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> "yyyyMMdd"形式または"HHmmss"形式のいずれかにする必要がある文字列に変換するメソッド<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-228">The following example uses the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method to convert strings that must be either in a "yyyyMMdd" format or a "HHmmss" format to <xref:System.DateTime> values.</span></span>  
  
<a name="parsing-02"></a>  
[!code-csharp-interactive[System.DateTime.Parsing#2](~/samples/snippets/csharp/System.DateTime/Parsing.cs#2)]
[!code-vb[System.DateTime.Parsing#2](~/samples/snippets/visualbasic/System.DateTime/Parsing.vb#2)]  

<span data-ttu-id="7ac35-229">1 つの一般的な用途<xref:System.DateTime.ParseExact%2A>では、通常、web サービスからの文字列形式に変換するには[ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)標準書式指定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-229">One common use for <xref:System.DateTime.ParseExact%2A> is to convert a string representation from a web service, usually in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard format.</span></span> <span data-ttu-id="7ac35-230">次のコードは、使用する正しい形式の文字列を示しています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-230">The following code shows the correct format string to use:</span></span>

<a name="parsing-03"></a>  
[!code-csharp-interactive[System.DateTime.Parsing#3](~/samples/snippets/csharp/System.DateTime/Parsing.cs#3)]
[!code-vb[System.DateTime.Parsing#3](~/samples/snippets/visualbasic/System.DateTime/Parsing.vb#3)]  

<span data-ttu-id="7ac35-231">文字列を解析できない場合、<xref:System.DateTime.Parse%2A>と<xref:System.DateTime.ParseExact%2A>メソッドが例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-231">If a string cannot be parsed, the <xref:System.DateTime.Parse%2A> and <xref:System.DateTime.ParseExact%2A> methods throw an exception.</span></span> <span data-ttu-id="7ac35-232"><xref:System.DateTime.TryParse%2A>と<xref:System.DateTime.TryParseExact%2A>メソッドを返す、<xref:System.Boolean>変換が成功したか、失敗したかどうかを示す値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-232">The <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods return a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span> <span data-ttu-id="7ac35-233">使用する必要があります、<xref:System.DateTime.TryParse%2A>または<xref:System.DateTime.TryParseExact%2A>パフォーマンスが重要なシナリオでのメソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-233">You should use the <xref:System.DateTime.TryParse%2A> or <xref:System.DateTime.TryParseExact%2A> methods in scenarios where performance is important.</span></span> <span data-ttu-id="7ac35-234">日付と時刻文字列の解析操作は、高い失敗率がある傾向があり、例外処理は高価なのです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-234">The parsing operation for date and time strings tends to have a high failure rate, and exception handling is expensive.</span></span> <span data-ttu-id="7ac35-235">ユーザーが入力文字列の場合は、これらのメソッドを使用または不明なソースから取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-235">Use these methods if strings are input by users or coming from an unknown source.</span></span> 
  
<span data-ttu-id="7ac35-236">日付と時刻の値を解析の詳細については、次を参照してください。[解析の日付と時刻文字列](~/docs/standard/base-types/parsing-datetime.md)します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-236">For more information about parsing date and time values, see [Parsing Date and Time Strings](~/docs/standard/base-types/parsing-datetime.md).</span></span>  

### <a name="datetime-values"></a><span data-ttu-id="7ac35-237">DateTime 値</span><span class="sxs-lookup"><span data-stu-id="7ac35-237">DateTime values</span></span>

<span data-ttu-id="7ac35-238">時刻の値の説明については、<xref:System.DateTime>型は、世界協定時刻 (UTC) 標準を使用して表されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-238">Descriptions of time values in the <xref:System.DateTime> type are often expressed using the Coordinated Universal Time (UTC) standard.</span></span> <span data-ttu-id="7ac35-239">世界協定時刻は、国際的に認められた名前グリニッジ標準時 (GMT) です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-239">Coordinated Universal Time is the internationally recognized name for Greenwich Mean Time (GMT).</span></span> <span data-ttu-id="7ac35-240">世界協定時刻は、0 度経度、UTC の起点で測定される時間です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-240">Coordinated Universal Time is the time as measured at zero degrees longitude, the UTC origin point.</span></span> <span data-ttu-id="7ac35-241">夏時間では、UTC を適用されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-241">Daylight saving time is not applicable to UTC.</span></span>  
  
<span data-ttu-id="7ac35-242">現地時刻では、特定のタイム ゾーンを基準とします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-242">Local time is relative to a particular time zone.</span></span> <span data-ttu-id="7ac35-243">タイム ゾーンは、タイム ゾーン オフセットに関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-243">A time zone is associated with a time zone offset.</span></span> <span data-ttu-id="7ac35-244">タイム ゾーン オフセットは、タイム ゾーンを UTC の原点からの時間単位の距離です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-244">A time zone offset is the displacement of the time zone measured in hours from the UTC origin point.</span></span> <span data-ttu-id="7ac35-245">さらに、ローカル時刻は夏時間、加算または減算する時間間隔を調整するによって影響を受ける必要に応じて。</span><span class="sxs-lookup"><span data-stu-id="7ac35-245">In addition, local time is optionally affected by daylight saving time, which adds or subtracts a time interval adjustment.</span></span> <span data-ttu-id="7ac35-246">現地時刻は、UTC と必要な場合の夏時間の調整にタイム ゾーン オフセットを加算して計算されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-246">Local time is calculated by adding the time zone offset to UTC and adjusting for daylight saving time if necessary.</span></span> <span data-ttu-id="7ac35-247">UTC の原点にあるタイム ゾーン オフセットには 0 です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-247">The time zone offset at the UTC origin point is zero.</span></span>  
  
<span data-ttu-id="7ac35-248">UTC 時刻は、ファイル内の計算、比較、および格納の日付と時刻に適しています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-248">UTC time is suitable for calculations, comparisons, and storing dates and time in files.</span></span> <span data-ttu-id="7ac35-249">現地時刻では、デスクトップ アプリケーションのユーザー インターフェイスでの表示に適しています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-249">Local time is appropriate for display in user interfaces of desktop applications.</span></span> <span data-ttu-id="7ac35-250">(多くの Web アプリケーション) などのタイム ゾーン対応のアプリケーションも、さまざまな他のタイム ゾーンを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-250">Time zone-aware applications (such as many Web applications) also need to work with a number of other time zones.</span></span>  
  
<span data-ttu-id="7ac35-251">場合、<xref:System.DateTime.Kind%2A>のプロパティを<xref:System.DateTime>オブジェクトが<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>、表される時刻は、現地時刻、UTC 時刻、またはその他のいくつかのタイム ゾーンの時刻かどうか明らかではありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-251">If the <xref:System.DateTime.Kind%2A> property of a <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, it is unspecified whether the time represented is local time, UTC time, or a time in some other time zone.</span></span>  

### <a name="datetime-resolution"></a><span data-ttu-id="7ac35-252">DateTime の解決</span><span class="sxs-lookup"><span data-stu-id="7ac35-252">DateTime resolution</span></span>
  
> [!NOTE]
>  <span data-ttu-id="7ac35-253">日付と時刻の算術演算を実行するための代替として<xref:System.DateTime>、経過時間を測定する値を使用することができます、<xref:System.Diagnostics.Stopwatch>クラス。</span><span class="sxs-lookup"><span data-stu-id="7ac35-253">As an alternative to performing date and time arithmetic on <xref:System.DateTime> values to measure elapsed time, you can use the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
<span data-ttu-id="7ac35-254"><xref:System.DateTime.Ticks%2A>プロパティは 1 つ 10 分の 1 秒の単位での日付と時刻の値を表します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-254">The <xref:System.DateTime.Ticks%2A> property expresses date and time values in units of one ten-millionth of a second.</span></span> <span data-ttu-id="7ac35-255"><xref:System.DateTime.Millisecond%2A>プロパティは、日付と時刻の値の秒部分の 1/1000 を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-255">The <xref:System.DateTime.Millisecond%2A> property returns the thousandths of a second in a date and time value.</span></span> <span data-ttu-id="7ac35-256">繰り返しの呼び出しを使用して、<xref:System.DateTime.Now%2A?displayProperty=nameWithType>経過時間を測定するプロパティは、システム クロックに依存します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-256">Using repeated calls to the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> property to measure elapsed time is dependent on the system clock.</span></span> <span data-ttu-id="7ac35-257">Windows 7 および Windows 8 システムのシステム クロックは、解像度は約 15 ミリ秒です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-257">The system clock on  Windows 7 and Windows 8 systems has a resolution of approximately 15 milliseconds.</span></span> <span data-ttu-id="7ac35-258">この解像度は 100 ミリ秒未満の小規模の時間間隔に影響します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-258">This resolution affects small time intervals less than 100 milliseconds.</span></span> 
  
<span data-ttu-id="7ac35-259">次の例では、システム時計の解像度に現在の日付と時刻の値の依存関係を示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-259">The following example illustrates the dependence of current date and time values on the resolution of the system clock.</span></span> <span data-ttu-id="7ac35-260">例では、外側のループが 20 回繰り返され、内側のループが、外側のループを遅延するために使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-260">In the example, an outer loop repeats 20 times, and an inner loop serves to delay the outer loop.</span></span> <span data-ttu-id="7ac35-261">かどうか、外側のループ カウンターの値は 10 への呼び出し、<xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>メソッドには 5 ミリ秒の遅延が導入されています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-261">If the value of the outer loop counter is 10, a call to the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method introduces a five-millisecond delay.</span></span> <span data-ttu-id="7ac35-262">次の例では、によって返されたミリ秒数、`DateTime.Now.Milliseconds`プロパティの変更を呼び出した後だけ<xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-262">The following example shows the number of milliseconds returned by the `DateTime.Now.Milliseconds` property changes only after the call to <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>.</span></span>  

<a name="resolution-01"></a>  
[!code-csharp-interactive[System.DateTime.Resolution#1](~/samples/snippets/csharp/System.DateTime/Resolution.cs#1)]
[!code-vb[System.DateTime.Resolution#1](~/samples/snippets/visualbasic/System.DateTime/Resolution.vb#1)]  

### <a name="datetime-operations"></a><span data-ttu-id="7ac35-263">DateTime 操作</span><span class="sxs-lookup"><span data-stu-id="7ac35-263">DateTime operations</span></span>  

<span data-ttu-id="7ac35-264">使用して、計算、<xref:System.DateTime>構造体など<xref:System.DateTime.Add%2A>または<xref:System.DateTime.Subtract%2A>、構造体の値を変更しません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-264">A calculation using a <xref:System.DateTime> structure, such as <xref:System.DateTime.Add%2A> or <xref:System.DateTime.Subtract%2A>, does not modify the value of the structure.</span></span> <span data-ttu-id="7ac35-265">代わりに、計算は、新しい返します<xref:System.DateTime>値が計算の結果。</span><span class="sxs-lookup"><span data-stu-id="7ac35-265">Instead, the calculation returns a new <xref:System.DateTime> structure whose value is the result of the calculation.</span></span>  
  
<span data-ttu-id="7ac35-266">タイム ゾーン (たとえば、UTC と現地時刻、または 1 つのタイム ゾーン間で) 間で変換操作を夏時間を考慮するが、算術演算や比較操作はありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-266">Conversion operations between time zones (such as between UTC and local time, or between one time zone and another) take daylight saving time into account, but arithmetic and comparison operations do not.</span></span>  
  
<span data-ttu-id="7ac35-267"><xref:System.DateTime>構造体自体を変換する 1 つのタイム ゾーンの制限付きサポートを提供しています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-267">The <xref:System.DateTime> structure itself offers limited support for converting from one time zone to another.</span></span> <span data-ttu-id="7ac35-268">使用することができます、 <xref:System.DateTime.ToLocalTime%2A> UTC を現地時刻、または変換する方法を使用することができます、<xref:System.DateTime.ToUniversalTime%2A>現地時刻から UTC に変換するメソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-268">You can use the <xref:System.DateTime.ToLocalTime%2A> method to convert UTC to local time, or you can use the <xref:System.DateTime.ToUniversalTime%2A> method to convert from local time to UTC.</span></span> <span data-ttu-id="7ac35-269">ただし、タイム ゾーン変換メソッドの完全なセットがで使用できる、<xref:System.TimeZoneInfo>クラス。</span><span class="sxs-lookup"><span data-stu-id="7ac35-269">However, a full set of time zone conversion methods is available in the <xref:System.TimeZoneInfo> class.</span></span> <span data-ttu-id="7ac35-270">これらのメソッドを使用して他の任意のタイム ゾーンの時刻には、世界のタイム ゾーンのいずれかで時刻を変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-270">You convert the time in any one of the world's time zones to the time in any other time zone using these methods.</span></span>  
  
<span data-ttu-id="7ac35-271">計算および比較<xref:System.DateTime>オブジェクトは、オブジェクトが同じタイム ゾーンの時刻を表す場合にのみ意味を持ちます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-271">Calculations and comparisons of <xref:System.DateTime> objects are meaningful only if the objects represent times in the same time zone.</span></span> <span data-ttu-id="7ac35-272">使用することができます、<xref:System.TimeZoneInfo>を表すオブジェクトを<xref:System.DateTime>値のタイム ゾーンの 2 つは疎結合が。</span><span class="sxs-lookup"><span data-stu-id="7ac35-272">You can use a <xref:System.TimeZoneInfo> object to represent a <xref:System.DateTime> value's time zone, although the two are loosely coupled.</span></span> <span data-ttu-id="7ac35-273">A<xref:System.DateTime>オブジェクトに日付と時刻値のタイム ゾーンを表すオブジェクトを返すプロパティがありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-273">A <xref:System.DateTime> object does not have a property that returns an object that represents that date and time value's time zone.</span></span> <span data-ttu-id="7ac35-274"><xref:System.DateTime.Kind%2A>プロパティを示す場合、 `DateTime` UTC、現地時刻を表すまたはが指定されていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-274">The <xref:System.DateTime.Kind%2A> property indicates if a `DateTime` represents UTC, local time, or is unspecified.</span></span> <span data-ttu-id="7ac35-275">タイム ゾーン対応のアプリケーションでは、するタイム ゾーンを判断するいくつかの外部メカニズムに依存する必要があります、<xref:System.DateTime>オブジェクトが作成されました。</span><span class="sxs-lookup"><span data-stu-id="7ac35-275">In a time zone-aware application, you must rely on some external mechanism to determine the time zone in which a <xref:System.DateTime> object was created.</span></span> <span data-ttu-id="7ac35-276">両方をラップする構造体を使用する可能性があります、<xref:System.DateTime>値と<xref:System.TimeZoneInfo>を表すオブジェクトを<xref:System.DateTime>値のタイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="7ac35-276">You could use a structure that wraps both the <xref:System.DateTime> value and the <xref:System.TimeZoneInfo> object that represents the <xref:System.DateTime> value's time zone.</span></span> <span data-ttu-id="7ac35-277">UTC を計算および使用する比較の使用の詳細について<xref:System.DateTime>値を参照してください[日付と時刻の算術演算の実行](~/docs/standard/datetime/performing-arithmetic-operations.md)します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-277">For details on using UTC in calculations and comparisons with <xref:System.DateTime> values, see [Performing Arithmetic Operations with Dates and Times](~/docs/standard/datetime/performing-arithmetic-operations.md).</span></span>  
  
<span data-ttu-id="7ac35-278">各<xref:System.DateTime>メンバーがその操作を実行する構成のグレゴリオ暦カレンダーを暗黙的に使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-278">Each <xref:System.DateTime> member implicitly uses the Gregorian calendar to perform its operation.</span></span> <span data-ttu-id="7ac35-279">例外は、カレンダーを暗黙的に指定するメソッドです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-279">Exceptions are methods that implicitly specify a calendar.</span></span> <span data-ttu-id="7ac35-280">カレンダーを指定するコンス トラクターが含まれますから派生したメソッド パラメーターを持つ<xref:System.IFormatProvider>など<xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-280">These include constructors that specify a calendar, and methods with a parameter derived from <xref:System.IFormatProvider>, such as <xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType>.</span></span>  
  
<span data-ttu-id="7ac35-281">操作のメンバーによって、<xref:System.DateTime>型がうるう年や 1 か月の日数などのアカウントの詳細を考慮します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-281">Operations by members of the <xref:System.DateTime> type take into account details such as leap years and the number of days in a month.</span></span>  

## <a name="datetime-values-and-calendars"></a><span data-ttu-id="7ac35-282">DateTime 値との予定表</span><span class="sxs-lookup"><span data-stu-id="7ac35-282">DateTime values and calendars</span></span>  

<span data-ttu-id="7ac35-283">.NET Framework クラス ライブラリにはから派生するすべての calendar クラスの数値が含まれています、<xref:System.Globalization.Calendar>クラス。</span><span class="sxs-lookup"><span data-stu-id="7ac35-283">The .NET Framework Class Library includes a number of calendar classes, all of which are derived from the <xref:System.Globalization.Calendar> class.</span></span>  <span data-ttu-id="7ac35-284">それらは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-284">They are:</span></span>  
  
-   <span data-ttu-id="7ac35-285"><xref:System.Globalization.ChineseLunisolarCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="7ac35-285">The <xref:System.Globalization.ChineseLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="7ac35-286"><xref:System.Globalization.EastAsianLunisolarCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="7ac35-286">The <xref:System.Globalization.EastAsianLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="7ac35-287"><xref:System.Globalization.GregorianCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="7ac35-287">The <xref:System.Globalization.GregorianCalendar> class.</span></span>  
-   <span data-ttu-id="7ac35-288"><xref:System.Globalization.HebrewCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="7ac35-288">The <xref:System.Globalization.HebrewCalendar> class.</span></span>  
-   <span data-ttu-id="7ac35-289"><xref:System.Globalization.HijriCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="7ac35-289">The <xref:System.Globalization.HijriCalendar> class.</span></span>  
-   <span data-ttu-id="7ac35-290"><xref:System.Globalization.JapaneseCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="7ac35-290">The <xref:System.Globalization.JapaneseCalendar> class.</span></span>  
-   <span data-ttu-id="7ac35-291"><xref:System.Globalization.JapaneseLunisolarCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="7ac35-291">The <xref:System.Globalization.JapaneseLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="7ac35-292"><xref:System.Globalization.JulianCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="7ac35-292">The <xref:System.Globalization.JulianCalendar> class.</span></span>  
-   <span data-ttu-id="7ac35-293"><xref:System.Globalization.KoreanCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="7ac35-293">The <xref:System.Globalization.KoreanCalendar> class.</span></span>  
-   <span data-ttu-id="7ac35-294"><xref:System.Globalization.KoreanLunisolarCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="7ac35-294">The <xref:System.Globalization.KoreanLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="7ac35-295"><xref:System.Globalization.PersianCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="7ac35-295">The <xref:System.Globalization.PersianCalendar> class.</span></span>  
-   <span data-ttu-id="7ac35-296"><xref:System.Globalization.TaiwanCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="7ac35-296">The <xref:System.Globalization.TaiwanCalendar> class.</span></span>  
-   <span data-ttu-id="7ac35-297"><xref:System.Globalization.TaiwanLunisolarCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="7ac35-297">The <xref:System.Globalization.TaiwanLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="7ac35-298"><xref:System.Globalization.ThaiBuddhistCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="7ac35-298">The <xref:System.Globalization.ThaiBuddhistCalendar> class.</span></span>  
-   <span data-ttu-id="7ac35-299"><xref:System.Globalization.UmAlQuraCalendar> クラス</span><span class="sxs-lookup"><span data-stu-id="7ac35-299">The <xref:System.Globalization.UmAlQuraCalendar> class.</span></span>  
  
<span data-ttu-id="7ac35-300">各カルチャの読み取り専用で定義された既定の暦を使用して<xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-300">Each culture uses a default calendar defined by its read-only <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="7ac35-301">各カルチャがその読み取り専用で定義された 1 つ以上の暦をサポート可能性があります<xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-301">Each culture may support one or more calendars defined by its read-only <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="7ac35-302">現在、特定で使用する暦<xref:System.Globalization.CultureInfo>オブジェクトによって定義されますその<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-302">The calendar currently used by a specific <xref:System.Globalization.CultureInfo> object is defined by its <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="7ac35-303">ある予定表のいずれかを指定する必要がありますが、<xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType>配列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-303">It must be one of the calendars found in the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> array.</span></span>  
  
<span data-ttu-id="7ac35-304">カルチャの現在の暦は、そのカルチャのすべての書式設定操作で使用されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-304">A culture's current calendar is used in all formatting operations for that culture.</span></span> <span data-ttu-id="7ac35-305">タイ仏暦のカルチャの既定の暦があるタイ仏暦時代 (年号) の予定表で表されるなど、<xref:System.Globalization.ThaiBuddhistCalendar>クラス。</span><span class="sxs-lookup"><span data-stu-id="7ac35-305">For example, the default calendar of the Thai Buddhist culture is the Thai Buddhist Era calendar, which is represented by the <xref:System.Globalization.ThaiBuddhistCalendar> class.</span></span>  <span data-ttu-id="7ac35-306">ときに、<xref:System.Globalization.CultureInfo>タイ仏暦のカルチャを表すオブジェクトが日付と時刻の書式設定操作で使用される、時代 (年号) がタイ仏暦カレンダーを既定で使用されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-306">When a <xref:System.Globalization.CultureInfo> object that represents the Thai Buddhist culture is used in a date and time formatting operation, the Thai Buddhist Era calendar is used by default.</span></span> <span data-ttu-id="7ac35-307">場合にのみ、構成のグレゴリオ暦カレンダーが使用されるカルチャの<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>プロパティが変更された、次の例を示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-307">The Gregorian calendar is used only if the culture's <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property is changed, as the following example shows:</span></span>  

<a name="calendars-01"></a>  
[!code-csharp-interactive[System.DateTime.Calendar#1](~/samples/snippets/csharp/System.DateTime/Calendar.cs#1)]
[!code-vb[System.DateTime.Calendar#1](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#1)]  

<span data-ttu-id="7ac35-308">カルチャの現在の暦は、次の例のように、そのカルチャのすべての解析操作でも使用されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-308">A culture's current calendar is also used in all parsing operations for that culture, as the following example shows.</span></span>  
  
<a name="calendars-02"></a>  
[!code-csharp-interactive[System.DateTime.Calendar#2](~/samples/snippets/csharp/System.DateTime/Calendar.cs#2)]
[!code-vb[System.DateTime.Calendar#2](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#2)]  

<span data-ttu-id="7ac35-309">インスタンス化する、<xref:System.DateTime>呼び出すことによって、特定のカレンダーの日付と時刻要素 (年、月、日の数) を使用して値を[DateTime コンス トラクター](xref:System.DateTime.%23ctor%2A)を含む、`calendar`パラメーターを渡す、 <xref:System.Globalization.CultureInfo.Calendar%2A>その暦を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-309">You instantiate a <xref:System.DateTime> value using the date and time elements (number of the year, month, and day) of a specific calendar by calling a [DateTime constructor](xref:System.DateTime.%23ctor%2A) that includes a `calendar` parameter and passing it a <xref:System.Globalization.CultureInfo.Calendar%2A> object that represents that calendar.</span></span> <span data-ttu-id="7ac35-310">次の例からの日付と時刻の要素を使用して、<xref:System.Globalization.ThaiBuddhistCalendar>カレンダーです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-310">The following example uses the date and time elements from the <xref:System.Globalization.ThaiBuddhistCalendar> calendar.</span></span>  
  
<a name="calendars-03"></a>  
[!code-csharp-interactive[System.DateTime.Calendar#3](~/samples/snippets/csharp/System.DateTime/Calendar.cs#3)]
[!code-vb[System.DateTime.Calendar#3](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#3)]  

<span data-ttu-id="7ac35-311"><xref:System.DateTime> コンス トラクターを含まない、`calendar`パラメーターは、日付と時刻の要素は、グレゴリオ暦でのユニットとして表されることを想定しています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-311"><xref:System.DateTime> constructors that do not include a `calendar` parameter assume that the date and time elements are expressed as units in the Gregorian calendar.</span></span>  
  
<span data-ttu-id="7ac35-312">他のすべての<xref:System.DateTime>プロパティとメソッドは、構成のグレゴリオ暦カレンダーを使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-312">All other <xref:System.DateTime> properties and methods use the Gregorian calendar.</span></span> <span data-ttu-id="7ac35-313">たとえば、<xref:System.DateTime.Year%2A?displayProperty=nameWithType>プロパティは、グレゴリオ暦のカレンダーの年を返します、<xref:System.DateTime.IsLeapYear%28System.Int32%29?displayProperty=nameWithType>メソッドを前提としている`year`パラメーターは、構成のグレゴリオ暦カレンダーにおける年。</span><span class="sxs-lookup"><span data-stu-id="7ac35-313">For example, the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> property returns the year in the Gregorian calendar, and the <xref:System.DateTime.IsLeapYear%28System.Int32%29?displayProperty=nameWithType> method assumes that the `year` parameter is a year in the Gregorian calendar.</span></span>  <span data-ttu-id="7ac35-314">各<xref:System.DateTime>構成のグレゴリオ暦カレンダーを使用するメンバーの対応するメンバーがある、<xref:System.Globalization.CultureInfo.Calendar%2A>固有のカレンダーを使用するクラス。</span><span class="sxs-lookup"><span data-stu-id="7ac35-314">Each <xref:System.DateTime> member that uses the Gregorian calendar has a corresponding member of the <xref:System.Globalization.CultureInfo.Calendar%2A> class that uses a specific calendar.</span></span> <span data-ttu-id="7ac35-315">たとえば、<xref:System.Globalization.Calendar.GetYear%2A?displayProperty=nameWithType>メソッドは、特定のカレンダーの年を返します、<xref:System.Globalization.Calendar.IsLeapYear%2A?displayProperty=nameWithType>メソッドは解釈、`year`パラメーターとして特定のカレンダーにおける年の数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-315">For example, the <xref:System.Globalization.Calendar.GetYear%2A?displayProperty=nameWithType> method returns the year in a specific calendar, and the <xref:System.Globalization.Calendar.IsLeapYear%2A?displayProperty=nameWithType> method interprets the `year` parameter as a year number in a specific calendar.</span></span> <span data-ttu-id="7ac35-316">次の例では、両方は使用して、<xref:System.DateTime>との対応するメンバー、<xref:System.Globalization.ThaiBuddhistCalendar>クラス。</span><span class="sxs-lookup"><span data-stu-id="7ac35-316">The following example uses both the <xref:System.DateTime> and the corresponding members of the  <xref:System.Globalization.ThaiBuddhistCalendar> class.</span></span>  
  
<a name="calendars-04"></a>  
[!code-csharp-interactive[System.DateTime.Calendar#4](~/samples/snippets/csharp/System.DateTime/Calendar.cs#4)]
[!code-vb[System.DateTime.Calendar#4](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#4)]  

<span data-ttu-id="7ac35-317"><xref:System.DateTime>構造が含まれています、<xref:System.DateTime.DayOfWeek%2A>グレゴリオ暦カレンダーにおける週の曜日を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-317">The <xref:System.DateTime> structure includes a <xref:System.DateTime.DayOfWeek%2A> property that returns the day of the week in the Gregorian calendar.</span></span> <span data-ttu-id="7ac35-318">年の週数を取得できるようにするメンバーは含まれません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-318">It does not include a member that allows you to retrieve the week number of the year.</span></span> <span data-ttu-id="7ac35-319">年の通算週を取得する呼び出し、カレンダーの<xref:System.Globalization.Calendar.GetWeekOfYear%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-319">To retrieve the week of the year, call the individual calendar's <xref:System.Globalization.Calendar.GetWeekOfYear%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7ac35-320">具体的な例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-320">The following example provides an illustration.</span></span>  
  
<a name="calendars-05"></a>  
[!code-csharp-interactive[System.DateTime.Calendar#5](~/samples/snippets/csharp/System.DateTime/Calendar.cs#5)]
[!code-vb[System.DateTime.Calendar#5](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#5)]  

<span data-ttu-id="7ac35-321">日付と暦の詳細については、次を参照してください。[カレンダーの使用](~/docs/standard/datetime/working-with-calendars.md)します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-321">For more information on dates and calendars, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
### <a name="persisting-datetime-values"></a><span data-ttu-id="7ac35-322">DateTime 値の永続化</span><span class="sxs-lookup"><span data-stu-id="7ac35-322">Persisting DateTime values</span></span>  

<span data-ttu-id="7ac35-323">永続化することができます<xref:System.DateTime>4 つの方法で値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-323">You can persist <xref:System.DateTime> values in four ways:</span></span>  
  
-   <span data-ttu-id="7ac35-324">[文字列への乗り換え](#persisting-values-as-strings)し、文字列を保持します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-324">You [convert them to strings](#persisting-values-as-strings) and persist the strings.</span></span>  
-   <span data-ttu-id="7ac35-325">[64 ビット整数値への乗り換え](#persisting-values-as-integers)(の値、<xref:System.DateTime.Ticks%2A>プロパティ) の整数を保持します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-325">You [convert them to 64-bit integer values](#persisting-values-as-integers) (the value of the <xref:System.DateTime.Ticks%2A> property) and persist the integers.</span></span>  
-   <span data-ttu-id="7ac35-326">[DateTime 値をシリアル化](#serializing-dateTime-values)します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-326">You [serialize the DateTime values](#serializing-dateTime-values).</span></span>  
-   <span data-ttu-id="7ac35-327">[タイム ゾーン情報と共に DateTime 値をシリアル化](#serializing-datetime-and-time-zone-data)します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-327">You [serialize the DateTime values along with time zone information](#serializing-datetime-and-time-zone-data).</span></span>  
  
<span data-ttu-id="7ac35-328">復元するルーチンをようにする必要があります、<xref:System.DateTime>値のデータが失われるまたは選択したどの手法に関係なく、例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-328">You must ensure that the routine that restores the <xref:System.DateTime> values doesn't lose data or throw an exception regardless of which technique you choose.</span></span> <span data-ttu-id="7ac35-329"><xref:System.DateTime> 値には、ラウンド トリップの必要があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-329"><xref:System.DateTime> values should round-trip.</span></span> <span data-ttu-id="7ac35-330">つまり、元の値と、復元された値があります同じ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-330">That is, the original value and the restored value should be the same.</span></span> <span data-ttu-id="7ac35-331">場合に、元の<xref:System.DateTime>値が 1 つの時刻の時点を表す、復元した場合の同じ時点を識別する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-331">And if the original <xref:System.DateTime> value represents a single instant of time, it should identify the same moment of time when it's restored.</span></span>  
  
#### <a name="persisting-values-as-strings"></a><span data-ttu-id="7ac35-332">値を文字列として永続化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-332">Persisting values as strings</span></span>  

<span data-ttu-id="7ac35-333">正常に復元する<xref:System.DateTime>文字列として保持されている値がこれらの規則に従ってください。</span><span class="sxs-lookup"><span data-stu-id="7ac35-333">To successfully restore <xref:System.DateTime> values that are persisted as strings, follow these rules:</span></span>  
  
-   <span data-ttu-id="7ac35-334">に関するカルチャ固有の書式指定文字列として保存されるときに復元するときに同じ前提条件を確認します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-334">Make the same assumptions about culture-specific formatting when you restore the string as when you persisted it.</span></span> <span data-ttu-id="7ac35-335">文字列は、現在のカルチャに保存されたシステムのカルチャから別のシステムで復元できることを確認するを呼び出して、<xref:System.DateTime.ToString%2A>インバリアント カルチャの規則を使用して文字列を保存するオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-335">To ensure that a string can be restored on a system whose current culture is different from the culture of the system it was saved on, call the <xref:System.DateTime.ToString%2A> overload to save the string by using the conventions of the invariant culture.</span></span> <span data-ttu-id="7ac35-336">呼び出す、<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>または<xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29>インバリアント カルチャの規則を使用して、文字列を復元するオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-336">Call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> or <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> overload to restore the string by using the conventions of the invariant culture.</span></span> <span data-ttu-id="7ac35-337">使用しないでください、 <xref:System.DateTime.ToString>、 <xref:System.DateTime.Parse%28System.String%29>、または<xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29>オーバー ロードは、現在のスレッド カルチャの規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-337">Never use the <xref:System.DateTime.ToString>, <xref:System.DateTime.Parse%28System.String%29>, or <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> overloads, which use the conventions of the current thread culture.</span></span>  
  
-   <span data-ttu-id="7ac35-338">日付は、1 つの時点を表している場合、同じ時間と復元、異なるタイム ゾーンであっても表すことを確認します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-338">If the date represents a single moment of time, ensure that it represents the same moment in time when it's restored, even on a different time zone.</span></span> <span data-ttu-id="7ac35-339">変換、<xref:System.DateTime>保存する前に値を世界協定時刻 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-339">Convert the <xref:System.DateTime> value to Coordinated Universal Time (UTC) before saving it.</span></span> <span data-ttu-id="7ac35-340">タイム ゾーン情報と共に値シリアル化することもできます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-340">You can also serialize the value along with time zone information.</span></span> <span data-ttu-id="7ac35-341">この方法の詳細については、次を参照してください。 [DateTime のシリアル化とタイム ゾーン データ](#serializing-datetime-and-time-zone-data)します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-341">For more information about this approach, see [Serializing DateTime and time zone data](#serializing-datetime-and-time-zone-data).</span></span>  
  
 <span data-ttu-id="7ac35-342">永続化時に行われる最も一般的なエラー<xref:System.DateTime>値を文字列としては、既定値または現在のカルチャの書式指定規則に依存します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-342">The most common error made when persisting <xref:System.DateTime> values as strings is to rely on the formatting conventions of the default or current culture.</span></span> <span data-ttu-id="7ac35-343">現在のカルチャが異なる場合、保存と復元、文字列の場合、問題が発生します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-343">Problems arise if the current culture is different when saving and restoring the strings.</span></span> <span data-ttu-id="7ac35-344">次の例は、これらの問題を示しています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-344">The following example illustrates these problems.</span></span> <span data-ttu-id="7ac35-345">英語 (米国) をここでは、現在のカルチャの書式指定規則を使用して 5 つの日付を保存します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-345">It saves five dates using the formatting conventions of the current culture, which in this case is English (United States).</span></span> <span data-ttu-id="7ac35-346">ここでは英語 (英国) 別のカルチャの書式指定規則を使用して日付が復元されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-346">It restores the dates using the formatting conventions of a different culture, which in this case is English (Great Britain).</span></span> <span data-ttu-id="7ac35-347">2 つのカルチャの書式指定規則が異なるため、2 つの日付を復元できないし、残りの 3 つの日付が正しく解釈されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-347">Because the formatting conventions of the two cultures are different, two of the dates can't be restored, and the remaining three dates are interpreted incorrectly.</span></span> <span data-ttu-id="7ac35-348">また、元の日付と時刻の値が 1 つに、復元された瞬間を表す場合は、時刻が正しくないタイム ゾーン情報が失われるためです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-348">Also, if the original date and time values represent single moments in time, the restored times are incorrect because time zone information is lost.</span></span>  
  
<a name="persistence-01"></a>  
[!code-csharp[System.DateTime.Persistence#1](~/samples/snippets/csharp/System.DateTime/Persistence.cs#1)]
[!code-vb[System.DateTime.Persistence#1](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#1)]  

<span data-ttu-id="7ac35-349">ラウンドト リップさせる<xref:System.DateTime>値には、次の手順が正常に従ってください。</span><span class="sxs-lookup"><span data-stu-id="7ac35-349">To round-trip <xref:System.DateTime> values successfully, follow these steps:</span></span>  
  
1.  <span data-ttu-id="7ac35-350">値が時間の 1 つの瞬間を表す場合にからローカル時刻を UTC に変換を呼び出して、<xref:System.DateTime.ToUniversalTime%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-350">If the values represent single moments of time, convert them from the local time to UTC by calling the <xref:System.DateTime.ToUniversalTime%2A> method.</span></span>  
1.  <span data-ttu-id="7ac35-351">呼び出すことによって、日付を文字列表現に変換、<xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29>または<xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-351">Convert the dates to their string representations by calling the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> or <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="7ac35-352">インバリアント カルチャの書式指定規則を使用して指定することによって<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>として、`provider`引数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-352">Use the formatting conventions of the invariant culture by specifying <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> as the `provider` argument.</span></span> <span data-ttu-id="7ac35-353">"O"または"R"標準書式指定文字列を使用して、値のラウンドト リップはことを指定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-353">Specify that the value should round-trip by using the "O" or "R" standard format string.</span></span>  
  
<span data-ttu-id="7ac35-354">復元、永続化する<xref:System.DateTime>データ損失なし、値が次の手順に従います。</span><span class="sxs-lookup"><span data-stu-id="7ac35-354">To restore the persisted <xref:System.DateTime> values without data loss, follow these steps:</span></span>  
  
1.  <span data-ttu-id="7ac35-355">呼び出すことによって、データの解析、<xref:System.DateTime.ParseExact%2A>または<xref:System.DateTime.TryParseExact%2A>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-355">Parse the data by calling the <xref:System.DateTime.ParseExact%2A> or <xref:System.DateTime.TryParseExact%2A> overload.</span></span> <span data-ttu-id="7ac35-356">指定<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>として、`provider`引数と同じ標準書式指定文字列を使用した使用、`format`変換中に引数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-356">Specify <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> as the `provider` argument, and use the same standard format string you used for the `format` argument during conversion.</span></span> <span data-ttu-id="7ac35-357">含める、<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>値、`styles`引数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-357">Include the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> value in the `styles` argument.</span></span>  
1.  <span data-ttu-id="7ac35-358">場合、<xref:System.DateTime>値が 1 つの瞬間に、呼び出しを表す、<xref:System.DateTime.ToLocalTime%2A>解析した日付を UTC から現地時刻に変換するメソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-358">If the <xref:System.DateTime> values represent single moments in time, call the <xref:System.DateTime.ToLocalTime%2A> method to convert the parsed date from UTC to local time.</span></span>  
  
<span data-ttu-id="7ac35-359">次の例では、インバリアント カルチャと、"O"標準書式指定文字列を使用していることを確認<xref:System.DateTime>保存し、復元の値は、システム、カルチャ、またはソースとターゲット システムのタイム ゾーンに関係なくの同じ時点を表します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-359">The following example uses the invariant culture and the "O" standard format string to ensure that <xref:System.DateTime> values saved and restored represent the same moment in time regardless of the system, culture, or time zone of the source and target systems.</span></span>  
  
<a name="persistence-02"></a>  
[!code-csharp[System.DateTime.Persistence#2](~/samples/snippets/csharp/System.DateTime/Persistence.cs#2)]
[!code-vb[System.DateTime.Persistence#2](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#2)]  

#### <a name="persisting-values-as-integers"></a><span data-ttu-id="7ac35-360">永続化する値が整数</span><span class="sxs-lookup"><span data-stu-id="7ac35-360">Persisting values as integers</span></span>  

<span data-ttu-id="7ac35-361">日付と時刻として永続化することができます、<xref:System.Int64>タイマー刻みの数を表す値です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-361">You can persist a date and time as an <xref:System.Int64> value that represents a number of ticks.</span></span> <span data-ttu-id="7ac35-362">この場合、システムのカルチャを考慮していない、<xref:System.DateTime>値が永続化され、上に復元します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-362">In this case, you don't have to consider the culture of the systems the <xref:System.DateTime> values are persisted and restored on.</span></span>  
  
<span data-ttu-id="7ac35-363">永続化する、<xref:System.DateTime>を整数としての値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-363">To persist a <xref:System.DateTime> value as an integer:</span></span>  
  
-   <span data-ttu-id="7ac35-364">場合、<xref:System.DateTime>値の 1 つの瞬間を表す、呼び出して UTC に変換、<xref:System.DateTime.ToUniversalTime%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-364">If the <xref:System.DateTime> values represent single moments in time, convert them to UTC by calling the <xref:System.DateTime.ToUniversalTime%2A> method.</span></span>  
-   <span data-ttu-id="7ac35-365">によって表されたタイマー刻みの数を取得、<xref:System.DateTime>値からその<xref:System.DateTime.Ticks%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-365">Retrieve the number of ticks represented by the <xref:System.DateTime> value from its <xref:System.DateTime.Ticks%2A> property.</span></span>  
  
<span data-ttu-id="7ac35-366">復元する、<xref:System.DateTime>を整数として永続化された値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-366">To restore a <xref:System.DateTime> value that has been persisted as an integer:</span></span>  
  
1.  <span data-ttu-id="7ac35-367">新しいインスタンスを作成<xref:System.DateTime>オブジェクトを渡すことによって、<xref:System.Int64>値を<xref:System.DateTime.%23ctor%28System.Int64%29>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-367">Instantiate a new <xref:System.DateTime> object by passing the <xref:System.Int64> value to the <xref:System.DateTime.%23ctor%28System.Int64%29> constructor.</span></span>  
1.  <span data-ttu-id="7ac35-368">場合、<xref:System.DateTime>値は、特定の時点を表す、変換、UTC から現地時刻に呼び出すことによって、<xref:System.DateTime.ToLocalTime%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-368">If the <xref:System.DateTime> value represents a single moment in time, convert it from UTC to the local time by calling the <xref:System.DateTime.ToLocalTime%2A> method.</span></span>  
  
<span data-ttu-id="7ac35-369">次の例の配列を保持する<xref:System.DateTime>値が、米国のシステム上での整数表示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-369">The following example persists an array of <xref:System.DateTime> values as integers on a system in the U.S. Pacific Time zone.</span></span> <span data-ttu-id="7ac35-370">UTC ゾーンのシステム上で、それを復元します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-370">It restores it on a system in the UTC zone.</span></span> <span data-ttu-id="7ac35-371">整数を含むファイルが含まれています、<xref:System.Int32>の合計数を示す値<xref:System.Int64>直後にその値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-371">The file that contains the integers includes an <xref:System.Int32> value that indicates the total number of <xref:System.Int64> values that immediately follow it.</span></span>  
  
<a name="persistence-03"></a>  
[!code-csharp[System.DateTime.Persistence#3](~/samples/snippets/csharp/System.DateTime/Persistence.cs#3)]
[!code-vb[System.DateTime.Persistence#3](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#3)]  

#### <a name="serializing-datetime-values"></a><span data-ttu-id="7ac35-372">DateTime 値をシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-372">Serializing DateTime values</span></span>  

<span data-ttu-id="7ac35-373">永続化することができます<xref:System.DateTime>値ストリームまたはファイルと、復元にシリアル化を通じてそれらを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-373">You can persist <xref:System.DateTime> values through serialization to a stream or file, and then restore them through deserialization.</span></span> <span data-ttu-id="7ac35-374"><xref:System.DateTime> データは、いくつかの指定したオブジェクトの形式でシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-374"><xref:System.DateTime> data is serialized in some specified object format.</span></span> <span data-ttu-id="7ac35-375">逆シリアル化されたときに、オブジェクトが復元されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-375">The objects are restored when they are deserialized.</span></span> <span data-ttu-id="7ac35-376">フォーマッタまたはシリアライザーなど<xref:System.Xml.Serialization.XmlSerializer>または<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>、シリアル化および逆シリアル化のプロセスを処理します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-376">A formatter or serializer, such as <xref:System.Xml.Serialization.XmlSerializer> or <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>, handles the process of serialization and deserialization.</span></span> <span data-ttu-id="7ac35-377">シリアル化と、.NET Framework でサポートされているシリアル化の種類の詳細については、次を参照してください。[シリアル化](~/docs/standard/serialization/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-377">For more information about serialization and the types of serialization supported by the .NET Framework, see [Serialization](~/docs/standard/serialization/index.md).</span></span>
  
<span data-ttu-id="7ac35-378">次の例では、<xref:System.Xml.Serialization.XmlSerializer>クラスをシリアル化および逆シリアル化<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-378">The following example uses the <xref:System.Xml.Serialization.XmlSerializer> class to serialize and deserialize <xref:System.DateTime> values.</span></span> <span data-ttu-id="7ac35-379">値は、21 世紀のすべての閏年日を表します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-379">The values represent all leap year days in the twenty-first century.</span></span> <span data-ttu-id="7ac35-380">出力は、例では、現在のカルチャが英語 (英国) システムで実行している場合、結果を表します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-380">The output represents the result if the example is run on a system whose current culture is English (Great Britain).</span></span> <span data-ttu-id="7ac35-381">した逆シリアル化するため、<xref:System.DateTime>オブジェクト自体のコードは、日付と時刻の形式のカルチャの違いを処理する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-381">Because you've deserialized the <xref:System.DateTime> object itself, the code doesn't have to handle cultural differences in date and time formats.</span></span>  
  
<a name="persistence-04"></a>  
[!code-csharp[System.DateTime.Persistence#4](~/samples/snippets/csharp/System.DateTime/Persistence.cs#4)]
[!code-vb[System.DateTime.Persistence#4](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#4)]  

<span data-ttu-id="7ac35-382">前の例では、時刻情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-382">The previous example doesn't include time information.</span></span> <span data-ttu-id="7ac35-383">場合、 <xref:System.DateTime> 、現地時刻から UTC に変換を呼び出すことによってシリアル化する前に、値が特定の時点を表しは、現地時刻で表されます、<xref:System.DateTime.ToUniversalTime%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-383">If a <xref:System.DateTime> value represents a moment in time and is expressed as a local time, convert it from local time to UTC before serializing it by calling the <xref:System.DateTime.ToUniversalTime%2A> method.</span></span> <span data-ttu-id="7ac35-384">この逆シリアル化する変換 UTC から現地時刻に呼び出すことによって、<xref:System.DateTime.ToLocalTime%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-384">After you deserialize it, convert it from UTC to local time by calling the <xref:System.DateTime.ToLocalTime%2A> method.</span></span> <span data-ttu-id="7ac35-385">次の例では、<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>クラスをシリアル化する<xref:System.DateTime>米国内のシステム上のデータ太平洋標準時ゾーン、米国内のシステムで逆シリアル化するにはサーバーの全体の標準のゾーンです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-385">The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize <xref:System.DateTime> data on a system in the U.S. Pacific Standard Time zone and to deserialize it on a system in the U.S. Central Standard zone.</span></span>  
  
<a name="persistence-05"></a>  
[!code-csharp[System.DateTime.Persistence#5](~/samples/snippets/csharp/System.DateTime/Persistence.cs#5)]
[!code-vb[System.DateTime.Persistence#5](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#5)]  

#### <a name="serializing-datetime-and-time-zone-data"></a><span data-ttu-id="7ac35-386">DateTime とタイム ゾーンのデータをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-386">Serializing DateTime and time zone data</span></span>  

<span data-ttu-id="7ac35-387">すべての前の例のように仮定<xref:System.DateTime>の値がローカル時刻として表現されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-387">The previous examples all assumed that <xref:System.DateTime> values are expressed as local times.</span></span> <span data-ttu-id="7ac35-388">コードは、ソースとターゲット システムで、同じ時間を反映するために UTC と現地時刻までの値を変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-388">The code converted the values between UTC and local time so they reflect the same moment in time on the source and target systems.</span></span> <span data-ttu-id="7ac35-389"><xref:System.DateTime> 値は、local 以外のタイム ゾーンと UTC 時間で時間を反映も可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-389"><xref:System.DateTime> values may also reflect moments in time in a time zone other than local and UTC.</span></span> <span data-ttu-id="7ac35-390"><xref:System.DateTime>構造はタイム ゾーンに対応していない、両方のシリアル化する必要は、<xref:System.DateTime>値と<xref:System.TimeZoneInfo>そのタイム ゾーンを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-390">Because the <xref:System.DateTime> structure is not time zone-aware, you have to serialize both the <xref:System.DateTime> value and the <xref:System.TimeZoneInfo> object that represents its time zone.</span></span> <span data-ttu-id="7ac35-391">フィールドには、両方の種類を作成、<xref:System.DateTime>値とそのタイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="7ac35-391">Create a type whose fields include both the <xref:System.DateTime> value and its time zone.</span></span> <span data-ttu-id="7ac35-392">次の例では、定義、`DateWithTimeZone`構造体。</span><span class="sxs-lookup"><span data-stu-id="7ac35-392">The following example defines a `DateWithTimeZone` structure.</span></span>  
  
<a name="persistence-06"></a>  
[!code-csharp[System.DateTime.Persistence#6](~/samples/snippets/csharp/System.DateTime/DateWithTimeZone.cs#6)]
[!code-vb[System.DateTime.Persistence#6](~/samples/snippets/visualbasic/System.DateTime/DateWithTimeZone.vb#6)]  

> [!IMPORTANT]
>  <span data-ttu-id="7ac35-393">`DateWithTimeZone`構造が配列の逆シリアル化およびシリアル化する次の 2 つの例についてで使用される`DateWithTimeZone`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-393">The `DateWithTimeZone` structure is used in the next two examples, which serialize and deserialize an array of `DateWithTimeZone` objects.</span></span> <span data-ttu-id="7ac35-394">この記事の例のセット全体のソースを表示するにはいずれかで[Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/System.DateTime/)または[c#](https://github.com/dotnet/samples/tree/master/snippets/csharp/System.DateTime/) GitHub の docs リポジトリから。</span><span class="sxs-lookup"><span data-stu-id="7ac35-394">You can view the source for the entire set of examples from this article in either [Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/System.DateTime/) or [C#](https://github.com/dotnet/samples/tree/master/snippets/csharp/System.DateTime/) from the docs repository on GitHub.</span></span>
  
<span data-ttu-id="7ac35-395">使用して、`DateWithTimeZone`構造、日付と時刻のタイム ゾーン情報と共に保存できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-395">By using the `DateWithTimeZone` structure, you can then persist date and time along with time zone information.</span></span> <span data-ttu-id="7ac35-396">次の例では、<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>の配列をシリアル化するクラス`DateWithTimeZone`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-396">The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize an array of `DateWithTimeZone` objects.</span></span>  
  
[!code-csharp[System.DateTime.Persistence#7](~/samples/snippets/csharp/System.DateTime/Persistence.cs#7)]
[!code-vb[System.DateTime.Persistence#7](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#7)]  

<span data-ttu-id="7ac35-397">次の例を呼び出して、<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType>メソッドを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-397">The following example then calls the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType> method to deserialize it.</span></span>  
  
[!code-csharp[System.DateTime.Persistence#8](~/samples/snippets/csharp/System.DateTime/Persistence.cs#8)]
[!code-vb[System.DateTime.Persistence#8](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#8)]  

### <a name="datetime-vs-timespan"></a><span data-ttu-id="7ac35-398">DateTime とします。TimeSpan</span><span class="sxs-lookup"><span data-stu-id="7ac35-398">DateTime vs. TimeSpan</span></span>  

<span data-ttu-id="7ac35-399"><xref:System.DateTime>と<xref:System.TimeSpan>を異なる値型、<xref:System.DateTime>時間の瞬間を表すのに対して、<xref:System.TimeSpan>時間間隔を表します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-399">The <xref:System.DateTime> and <xref:System.TimeSpan> value types differ in that a <xref:System.DateTime> represents an instant in time whereas a <xref:System.TimeSpan> represents a time interval.</span></span> <span data-ttu-id="7ac35-400">1 つのインスタンスを減算する<xref:System.DateTime>を取得する別の<xref:System.TimeSpan>時間間隔を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-400">You can subtract one instance of <xref:System.DateTime> from another to obtain a <xref:System.TimeSpan> object that represents the time interval between them.</span></span> <span data-ttu-id="7ac35-401">正の値を追加または<xref:System.TimeSpan>現在<xref:System.DateTime>を取得する、<xref:System.DateTime>将来の日付を表す値です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-401">Or you could add a positive <xref:System.TimeSpan> to the current <xref:System.DateTime> to obtain a <xref:System.DateTime> value that represents a future date.</span></span>  
  
<span data-ttu-id="7ac35-402">追加またはからの時間間隔を減算することができます、<xref:System.DateTime>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-402">You can add or subtract a time interval from a <xref:System.DateTime> object.</span></span> <span data-ttu-id="7ac35-403">時間間隔が負または正の値を指定できなど、タイマー刻み単位で表現することができます (秒単位) として、または、<xref:System.TimeSpan>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-403">Time intervals can be negative or positive, and they can be expressed in units such as ticks, seconds, or as a <xref:System.TimeSpan> object.</span></span>  

### <a name="comparing-for-equality-within-tolerance"></a><span data-ttu-id="7ac35-404">許容範囲内で等しいかどうかを比較します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-404">Comparing for equality within tolerance</span></span>

<span data-ttu-id="7ac35-405">等価比較の<xref:System.DateTime>値は、正確です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-405">Equality comparisons for <xref:System.DateTime> values are exact.</span></span> <span data-ttu-id="7ac35-406">つまり、2 つの値は、同じ数の等しいと見なされるタイマー刻みとして表す必要があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-406">That means two values must be expressed as the same number of ticks to be considered equal.</span></span> <span data-ttu-id="7ac35-407">有効桁数が、多くの場合、不要なことかも多くのアプリケーションが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-407">That precision is often unecessary or even incorrect for many applications.</span></span> <span data-ttu-id="7ac35-408">場合をテストする多くの場合、<xref:System.DateTime>オブジェクトが**ほぼ同じ**します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-408">Often, you want to test if <xref:System.DateTime> objects are **roughly equal**.</span></span> 

<span data-ttu-id="7ac35-409">次の例では、ほぼを比較する方法と同じ<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-409">The following example demonstrates how to compare roughly equivalent <xref:System.DateTime> values.</span></span> <span data-ttu-id="7ac35-410">宣言と等しい場合は、小さな違いの余白を受け入れます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-410">It accepts a small margin of difference when declaring them equal.</span></span>  
  
<a name="comparison-01"></a> <span data-ttu-id="7ac35-411">[!code-csharp[System.DateTime.Comparisons#1](~/samples/snippets/csharp/System.DateTime/DateTimeComparisons.cs#1)]</span><span class="sxs-lookup"><span data-stu-id="7ac35-411">[!code-csharp[System.DateTime.Comparisons#1](~/samples/snippets/csharp/System.DateTime/DateTimeComparisons.cs#1)]</span></span>
[!code-vb[System.DateTime.Comparisons#1](~/samples/snippets/visualbasic/System.DateTime/DateTimeComparisons.vb#1)]  

### <a name="com-interop-considerations"></a><span data-ttu-id="7ac35-412">COM 相互運用機能に関する考慮事項</span><span class="sxs-lookup"><span data-stu-id="7ac35-412">COM interop considerations</span></span>  

<span data-ttu-id="7ac35-413">A<xref:System.DateTime>ラウンドト リップさせるには、COM アプリケーションに転送し、管理対象のアプリケーションに転送される値といいます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-413">A <xref:System.DateTime> value that is transferred to a COM application, then is transferred back to a managed application, is said to round-trip.</span></span> <span data-ttu-id="7ac35-414">ただし、<xref:System.DateTime>時刻のみを指定する値は予想どおりにラウンドト リップさせる。</span><span class="sxs-lookup"><span data-stu-id="7ac35-414">However, a <xref:System.DateTime> value that specifies only a time does not round-trip as you might expect.</span></span>  
  
<span data-ttu-id="7ac35-415">ラウンドト リップする午後 3 時、最後の日付と時刻など、時刻のみが西暦 1899 年 12 月 30 日の場合</span><span class="sxs-lookup"><span data-stu-id="7ac35-415">If you round-trip only a time, such as 3 P.M., the final date and time is December 30, 1899 C.E.</span></span> <span data-ttu-id="7ac35-416">午後 3 時、年 1 月 1 日ではなく紀元 0001</span><span class="sxs-lookup"><span data-stu-id="7ac35-416">at 3:00 P.M., instead of January, 1, 0001 C.E.</span></span> <span data-ttu-id="7ac35-417">午後 3時 00分</span><span class="sxs-lookup"><span data-stu-id="7ac35-417">at 3:00 P.M.</span></span> <span data-ttu-id="7ac35-418">.NET Framework および COM は、既定の日付、時刻のみが指定されている場合を想定しています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-418">The .NET Framework and COM assume a default date when only a time is specified.</span></span> <span data-ttu-id="7ac35-419">ただし、COM システムでは、.NET Framework には、西暦 0001 年 1 月 1 日の基準日が前提としています中に、西暦、1899 年 12 月 30 日の基本の日が想定しています</span><span class="sxs-lookup"><span data-stu-id="7ac35-419">However, the COM system assumes a base date of December 30, 1899 C.E., while the .NET Framework assumes a base date of January, 1, 0001 C.E.</span></span>  
  
<span data-ttu-id="7ac35-420">COM に .NET Framework から時刻のみが渡されると、特別な処理は実行時間を COM で使用される形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-420">When only a time is passed from the .NET Framework to COM, special processing is performed that converts the time to the format used by COM.</span></span> <span data-ttu-id="7ac35-421">.NET Framework に時刻のみが COM から渡されるが破損する可能性が正当な日付と時刻、1899 年 12 月 30 日までにするために特別な処理が実行されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-421">When only a time is passed from COM to the .NET Framework, no special processing is performed because that would corrupt legitimate dates and times on or before December 30, 1899.</span></span> <span data-ttu-id="7ac35-422">日付は、COM からそのラウンドト リップを起動する場合、.NET Framework および COM、日付を保持します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-422">If a date starts its round-trip from COM, the .NET Framework and COM preserve the date.</span></span>  
  
<span data-ttu-id="7ac35-423">.NET Framework および COM の動作がいる場合、アプリケーションのラウンドト リップをことを意味、<xref:System.DateTime>のみ、時間を指定する、変更または最後から誤った日付を無視する、アプリケーションを忘れないでください<xref:System.DateTime>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-423">The behavior of the .NET Framework and COM means that if your application round-trips a <xref:System.DateTime> that only specifies a time, your application must remember to modify or ignore the erroneous date from the final <xref:System.DateTime> object.</span></span>  
     
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="7ac35-424">この種類のすべてのメンバーは、スレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-424">All members of this type are thread safe.</span></span> <span data-ttu-id="7ac35-425">インスタンスの状態を変更する表示されるメンバーは、実際に新しい値で初期化された新しいインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-425">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="7ac35-426">として、他の種類と読み取りと書き込みをこの型のインスタンスを含む共有変数を保護する必要があるスレッド セーフを確保するロックによって。</span><span class="sxs-lookup"><span data-stu-id="7ac35-426">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.DateTimeOffset" />
    <altmember cref="T:System.TimeSpan" />
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
    <altmember cref="T:System.TimeZoneInfo" />
    <related type="Article" href="~/docs/standard/datetime/choosing-between-datetime.md"><span data-ttu-id="7ac35-427">DateTime、DateTimeOffset、TimeSpan、および TimeZoneInfo の使い分け</span><span class="sxs-lookup"><span data-stu-id="7ac35-427">Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo</span></span></related>
    <related type="Article" href="~/docs/standard/datetime/working-with-calendars.md"><span data-ttu-id="7ac35-428">カレンダーの使用</span><span class="sxs-lookup"><span data-stu-id="7ac35-428">Working with Calendars</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="7ac35-429">サンプル: .NET Framework 4 の書式設定ユーティリティ</span><span class="sxs-lookup"><span data-stu-id="7ac35-429">Sample: .NET Framework 4 Formatting Utility</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ac35-430"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-430">Initializes a new instance of the <see cref="T:System.DateTime" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (long ticks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 ticks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ticks As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(long ticks);" />
      <MemberSignature Language="F#" Value="new DateTime : int64 -&gt; DateTime" Usage="new System.DateTime ticks" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ticks"><span data-ttu-id="7ac35-431">日時をグレゴリオ暦の 0001 年 1 月 1 日の 00:00:00.000 以降の経過時間 (100 ナノ秒単位) で表した値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-431">A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.</span></span></param>
        <summary><span data-ttu-id="7ac35-432"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定したタイマー刻み数に初期化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-432">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to a specified number of ticks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-433"><xref:System.DateTime.Kind%2A> プロパティは <xref:System.DateTimeKind.Unspecified> に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-433">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="7ac35-434">日付と時刻のデータまたはある程度までのタイム ゾーンの移植性の認識が重要なアプリケーションでは、対応するを使用できる<xref:System.DateTimeOffset>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-434">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-435">次の例での 1 つ、<xref:System.DateTime>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-435">The following example demonstrates one of the <xref:System.DateTime> constructors.</span></span>  
  
 [!code-cpp[datetime.ctor_Int64#1](~/samples/snippets/cpp/VS_Snippets_CLR/datetime.ctor_Int64/CPP/ticks.cpp#1)]
 [!code-csharp[datetime.ctor_Int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/datetime.ctor_Int64/CS/ticks.cs#1)]
 [!code-vb[datetime.ctor_Int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/datetime.ctor_Int64/VB/ticks.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-436"><paramref name="ticks" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか <see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-436"><paramref name="ticks" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (long ticks, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 ticks, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int64,System.DateTimeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ticks As Long, kind As DateTimeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(long ticks, DateTimeKind kind);" />
      <MemberSignature Language="F#" Value="new DateTime : int64 * DateTimeKind -&gt; DateTime" Usage="new System.DateTime (ticks, kind)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
        <Parameter Name="kind" Type="System.DateTimeKind" />
      </Parameters>
      <Docs>
        <param name="ticks"><span data-ttu-id="7ac35-437">日時をグレゴリオ暦の 0001 年 1 月 1 日の 00:00:00.000 以降の経過時間 (100 ナノ秒単位) で表した値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-437">A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.</span></span></param>
        <param name="kind"><span data-ttu-id="7ac35-438"><paramref name="ticks" /> が、現地時刻、世界協定時刻 (UTC)、またはそのどちらでもない時刻のうち、どれを指定するかを示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-438">One of the enumeration values that indicates whether <paramref name="ticks" /> specifies a local time, Coordinated Universal Time (UTC), or neither.</span></span></param>
        <summary><span data-ttu-id="7ac35-439"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定したタイマー刻み数と世界協定時刻 (UTC) または現地時刻に初期化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-439">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to a specified number of ticks and to Coordinated Universal Time (UTC) or local time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-440">日付と時刻のデータまたはある程度までのタイム ゾーンの移植性の認識が重要なアプリケーションでは、対応するを使用できる<xref:System.DateTimeOffset>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-440">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-441"><paramref name="ticks" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか <see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-441"><paramref name="ticks" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7ac35-442"><paramref name="kind" /> は <see cref="T:System.DateTimeKind" /> 値のいずれでもありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-442"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int -&gt; DateTime" Usage="new System.DateTime (year, month, day)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="7ac35-443">年 (1 ～ 9999)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-443">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="7ac35-444">月 (1 ～ 12)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-444">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="7ac35-445">日付 (1 ～ <paramref name="month" /> の日数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-445">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <summary><span data-ttu-id="7ac35-446"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定した年、月、および日に初期化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-446">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, and day.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-447">このコンス トラクターは解釈`year`、 `month`、および`day`年、月、および構成のグレゴリオ暦カレンダーにおける日として。</span><span class="sxs-lookup"><span data-stu-id="7ac35-447">This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="7ac35-448">インスタンス化する、<xref:System.DateTime>呼び出し、別の暦の年、月、日を使用して、値、<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-448">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.</span></span>  
  
 <span data-ttu-id="7ac35-449">時刻を生成される<xref:System.DateTime>は午前 0 時 (00: 00:00)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-449">The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00).</span></span> <span data-ttu-id="7ac35-450"><xref:System.DateTime.Kind%2A> プロパティは <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-450">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-451">次の例では、<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%29>インスタンスを作成するコンス トラクター、<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-451">The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%29> constructor to instantiate a <xref:System.DateTime> value.</span></span> <span data-ttu-id="7ac35-452">このオーバー ロードを作成することも例、<xref:System.DateTime>の時刻部分が午前 0 時と等しい値 (0:00)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-452">The example also illustrates that this overload creates a <xref:System.DateTime> value whose time component equals midnight (or 0:00).</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#1)]
 [!code-vb[System.DateTime.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-453"><paramref name="year" /> が 1 未満であるか、または 9999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-453"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
<span data-ttu-id="7ac35-454">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-454">-or-</span></span> 
 <span data-ttu-id="7ac35-455"><paramref name="month" /> が 1 未満であるか、または 12 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-455"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="7ac35-456">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-456">-or-</span></span> 
 <span data-ttu-id="7ac35-457"><paramref name="day" /> が 1 未満であるか、または <paramref name="month" /> の日数を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-457"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, System.Globalization.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, class System.Globalization.Calendar calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, System::Globalization::Calendar ^ calendar);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * System.Globalization.Calendar -&gt; DateTime" Usage="new System.DateTime (year, month, day, calendar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="7ac35-458">年 (1 から <paramref name="calendar" /> の年数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-458">The year (1 through the number of years in <paramref name="calendar" />).</span></span></param>
        <param name="month"><span data-ttu-id="7ac35-459">月 (1 から <paramref name="calendar" /> の月数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-459">The month (1 through the number of months in <paramref name="calendar" />).</span></span></param>
        <param name="day"><span data-ttu-id="7ac35-460">日付 (1 から <paramref name="month" /> の日数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-460">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="calendar"><span data-ttu-id="7ac35-461"><paramref name="year" />、<paramref name="month" />、および <paramref name="day" /> を解釈するために使用される暦。</span><span class="sxs-lookup"><span data-stu-id="7ac35-461">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />.</span></span></param>
        <summary><span data-ttu-id="7ac35-462"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定した暦の指定した年、月、および日に初期化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-462">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, and day for the specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-463">時刻を生成される<xref:System.DateTime>は午前 0 時 (00: 00:00)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-463">The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00).</span></span> <span data-ttu-id="7ac35-464"><xref:System.DateTime.Kind%2A> プロパティは <xref:System.DateTimeKind.Unspecified> に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-464">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="7ac35-465">使用できる値`year`、 `month`、および`day`に依存して`calendar`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-465">The allowable values for `year`, `month`, and `day` depend on `calendar`.</span></span> <span data-ttu-id="7ac35-466">使用して、指定した日付と時刻を表現できない場合、例外がスローされます`calendar`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-466">An exception is thrown if the specified date and time cannot be expressed using `calendar`.</span></span>  
  
 <span data-ttu-id="7ac35-467"><xref:System.Globalization>名前空間にはいくつかの予定表を含む<xref:System.Globalization.GregorianCalendar>と<xref:System.Globalization.JulianCalendar>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-467">The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-468">次の例では、 <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> 2 つのインスタンスを作成するには、2 回コンス トラクター<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-468">The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values.</span></span> <span data-ttu-id="7ac35-469">最初の呼び出しをインスタンス化、<xref:System.DateTime>値を使用して、<xref:System.Globalization.PersianCalendar>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-469">The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object.</span></span> <span data-ttu-id="7ac35-470">ペルシャ暦で日付を表示する個々 の呼び出しが必要ですペルシャ暦をカルチャの既定の暦として指定することはできません、ため、その<xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>、 <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>、および<xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-470">Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="7ac35-471">2 番目のコンス トラクター呼び出しをインスタンス化、<xref:System.DateTime>値を使用して、<xref:System.Globalization.HijriCalendar>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-471">The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object.</span></span> <span data-ttu-id="7ac35-472">例では、現在のカルチャをアラビア語 (シリア) に変更し、現在のカルチャの既定の暦を回教暦に変更します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-472">The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar.</span></span> <span data-ttu-id="7ac35-473">イスラム暦が、現在のカルチャの既定の暦であるため、<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>メソッドは、日付の書式設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-473">Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses it to format the date.</span></span> <span data-ttu-id="7ac35-474">(これは、英語 (米国) をここでは) 前の現在のカルチャが復元されると、<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>メソッドでは、現在のカルチャの既定のグレゴリオ暦を使用して日付の書式設定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-474">When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses the current culture's default Gregorian calendar to format the date.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample2.cs#2)]
 [!code-vb[System.DateTime.Constructor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7ac35-475"><paramref name="calendar" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-475"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-476"><paramref name="year" /> は <paramref name="calendar" /> でサポートされる範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-476"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="7ac35-477">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-477">-or-</span></span> 
 <span data-ttu-id="7ac35-478"><paramref name="month" /> は 1 未満か、<paramref name="calendar" /> の月数を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-478"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="7ac35-479">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-479">-or-</span></span> 
 <span data-ttu-id="7ac35-480"><paramref name="day" /> が 1 未満であるか、または <paramref name="month" /> の日数を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-480"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="7ac35-481">年 (1 ～ 9999)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-481">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="7ac35-482">月 (1 ～ 12)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-482">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="7ac35-483">日付 (1 ～ <paramref name="month" /> の日数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-483">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="7ac35-484">時間 (0 から 23)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-484">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="7ac35-485">分 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-485">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="7ac35-486">秒 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-486">The seconds (0 through 59).</span></span></param>
        <summary><span data-ttu-id="7ac35-487"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定した年、月、日、時、分、および秒に初期化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-487">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, and second.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-488"><xref:System.DateTime.Kind%2A> プロパティは <xref:System.DateTimeKind.Unspecified> に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-488">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="7ac35-489">このコンス トラクターは解釈`year`、 `month`、および`day`年、月、および構成のグレゴリオ暦カレンダーにおける日として。</span><span class="sxs-lookup"><span data-stu-id="7ac35-489">This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="7ac35-490">インスタンス化する、<xref:System.DateTime>呼び出し、別の暦の年、月、日を使用して、値、<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-490">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.</span></span>  
  
 <span data-ttu-id="7ac35-491">日付と時刻のデータまたはある程度までのタイム ゾーンの移植性の認識が重要なアプリケーションでは、対応するを使用できる<xref:System.DateTimeOffset>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-491">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-492">次の例では、<xref:System.DateTime.%23ctor%2A>インスタンスを作成するコンス トラクター、<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-492">The following example uses the <xref:System.DateTime.%23ctor%2A> constructor to instantiate a <xref:System.DateTime> value.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#3)]
 [!code-vb[System.DateTime.Constructor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-493"><paramref name="year" /> が 1 未満であるか、または 9999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-493"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
<span data-ttu-id="7ac35-494">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-494">-or-</span></span> 
 <span data-ttu-id="7ac35-495"><paramref name="month" /> が 1 未満であるか、または 12 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-495"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="7ac35-496">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-496">-or-</span></span> 
 <span data-ttu-id="7ac35-497"><paramref name="day" /> が 1 未満であるか、または <paramref name="month" /> の日数を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-497"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="7ac35-498">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-498">-or-</span></span> 
 <span data-ttu-id="7ac35-499"><paramref name="hour" /> が 0 未満であるか、または 23 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-499"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="7ac35-500">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-500">-or-</span></span> 
 <span data-ttu-id="7ac35-501"><paramref name="minute" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-501"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="7ac35-502">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-502">-or-</span></span> 
 <span data-ttu-id="7ac35-503"><paramref name="second" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-503"><paramref name="second" /> is less than 0 or greater than 59.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, kind As DateTimeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * DateTimeKind -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, kind)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="kind" Type="System.DateTimeKind" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="7ac35-504">年 (1 ～ 9999)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-504">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="7ac35-505">月 (1 ～ 12)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-505">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="7ac35-506">日付 (1 ～ <paramref name="month" /> の日数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-506">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="7ac35-507">時間 (0 から 23)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-507">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="7ac35-508">分 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-508">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="7ac35-509">秒 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-509">The seconds (0 through 59).</span></span></param>
        <param name="kind"><span data-ttu-id="7ac35-510"><paramref name="year" />、<paramref name="month" />、<paramref name="day" />、<paramref name="hour" />、<paramref name="minute" />、および <paramref name="second" /> が、現地時刻、世界協定時刻 (UTC)、またはそのどちらでもない時刻のうち、どれを指定するかを示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-510">One of the enumeration values that indicates whether <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" /> and <paramref name="second" /> specify a local time, Coordinated Universal Time (UTC), or neither.</span></span></param>
        <summary><span data-ttu-id="7ac35-511"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定した年、月、日、時、分、秒、および世界協定時刻 (UTC) または現地時刻に初期化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-511">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and Coordinated Universal Time (UTC) or local time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-512">このコンス トラクターは解釈`year`、 `month`、および`day`年、月、および構成のグレゴリオ暦カレンダーにおける日として。</span><span class="sxs-lookup"><span data-stu-id="7ac35-512">This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="7ac35-513">インスタンス化する、<xref:System.DateTime>呼び出し、別の暦の年、月、日を使用して、値、<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-513">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor.</span></span>  
  
 <span data-ttu-id="7ac35-514">日付と時刻のデータまたはある程度までのタイム ゾーンの移植性の認識が重要なアプリケーションでは、対応するを使用できる<xref:System.DateTimeOffset>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-514">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-515">次の例では、<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29>インスタンスを作成するコンス トラクター、<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-515">The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29> constructor to instantiate a <xref:System.DateTime> value.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#7)]
 [!code-vb[System.DateTime.Constructor#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-516"><paramref name="year" /> が 1 未満であるか、または 9999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-516"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
<span data-ttu-id="7ac35-517">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-517">-or-</span></span> 
 <span data-ttu-id="7ac35-518"><paramref name="month" /> が 1 未満であるか、または 12 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-518"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="7ac35-519">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-519">-or-</span></span> 
 <span data-ttu-id="7ac35-520"><paramref name="day" /> が 1 未満であるか、または <paramref name="month" /> の日数を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-520"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="7ac35-521">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-521">-or-</span></span> 
 <span data-ttu-id="7ac35-522"><paramref name="hour" /> が 0 未満であるか、または 23 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-522"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="7ac35-523">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-523">-or-</span></span> 
 <span data-ttu-id="7ac35-524"><paramref name="minute" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-524"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="7ac35-525">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-525">-or-</span></span> 
 <span data-ttu-id="7ac35-526"><paramref name="second" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-526"><paramref name="second" /> is less than 0 or greater than 59.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7ac35-527"><paramref name="kind" /> は <see cref="T:System.DateTimeKind" /> 値のいずれでもありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-527"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, System.Globalization.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, class System.Globalization.Calendar calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, System::Globalization::Calendar ^ calendar);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * System.Globalization.Calendar -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, calendar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="7ac35-528">年 (1 から <paramref name="calendar" /> の年数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-528">The year (1 through the number of years in <paramref name="calendar" />).</span></span></param>
        <param name="month"><span data-ttu-id="7ac35-529">月 (1 から <paramref name="calendar" /> の月数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-529">The month (1 through the number of months in <paramref name="calendar" />).</span></span></param>
        <param name="day"><span data-ttu-id="7ac35-530">日付 (1 ～ <paramref name="month" /> の日数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-530">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="7ac35-531">時間 (0 から 23)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-531">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="7ac35-532">分 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-532">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="7ac35-533">秒 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-533">The seconds (0 through 59).</span></span></param>
        <param name="calendar"><span data-ttu-id="7ac35-534"><paramref name="year" />、<paramref name="month" />、および <paramref name="day" /> を解釈するために使用される暦。</span><span class="sxs-lookup"><span data-stu-id="7ac35-534">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />.</span></span></param>
        <summary><span data-ttu-id="7ac35-535"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定した暦の指定した年、月、日、時、分、および秒に初期化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-535">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, and second for the specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-536"><xref:System.DateTime.Kind%2A> プロパティは <xref:System.DateTimeKind.Unspecified> に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-536">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="7ac35-537">使用できる値`year`、 `month`、および`day`に依存して`calendar`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-537">The allowable values for `year`, `month`, and `day` depend on `calendar`.</span></span> <span data-ttu-id="7ac35-538">使用して、指定した日付と時刻を表現できない場合、例外がスローされます`calendar`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-538">An exception is thrown if the specified date and time cannot be expressed using `calendar`.</span></span>  
  
 <span data-ttu-id="7ac35-539"><xref:System.Globalization>名前空間にはいくつかの予定表を含む<xref:System.Globalization.GregorianCalendar>と<xref:System.Globalization.JulianCalendar>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-539">The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-540">次の例では、 <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> 2 つのインスタンスを作成するには、2 回コンス トラクター<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-540">The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values.</span></span> <span data-ttu-id="7ac35-541">最初の呼び出しをインスタンス化、<xref:System.DateTime>値を使用して、<xref:System.Globalization.PersianCalendar>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-541">The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object.</span></span> <span data-ttu-id="7ac35-542">ペルシャ暦で日付を表示する個々 の呼び出しが必要ですペルシャ暦をカルチャの既定の暦として指定することはできません、ため、その<xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>、 <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>、および<xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-542">Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="7ac35-543">2 番目のコンス トラクター呼び出しをインスタンス化、<xref:System.DateTime>値を使用して、<xref:System.Globalization.HijriCalendar>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-543">The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object.</span></span> <span data-ttu-id="7ac35-544">例では、現在のカルチャをアラビア語 (シリア) に変更し、現在のカルチャの既定の暦を回教暦に変更します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-544">The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar.</span></span> <span data-ttu-id="7ac35-545">イスラム暦が、現在のカルチャの既定の暦であるため、<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>メソッドは、日付の書式設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-545">Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses it to format the date.</span></span> <span data-ttu-id="7ac35-546">(これは、英語 (米国) をここでは) 前の現在のカルチャが復元されると、<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>メソッドでは、現在のカルチャの既定のグレゴリオ暦を使用して日付の書式設定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-546">When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses the current culture's default Gregorian calendar to format the date.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample4.cs#4)]
 [!code-vb[System.DateTime.Constructor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7ac35-547"><paramref name="calendar" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-547"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-548"><paramref name="year" /> は <paramref name="calendar" /> でサポートされる範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-548"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="7ac35-549">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-549">-or-</span></span> 
 <span data-ttu-id="7ac35-550"><paramref name="month" /> は 1 未満か、<paramref name="calendar" /> の月数を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-550"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="7ac35-551">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-551">-or-</span></span> 
 <span data-ttu-id="7ac35-552"><paramref name="day" /> が 1 未満であるか、または <paramref name="month" /> の日数を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-552"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="7ac35-553">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-553">-or-</span></span> 
 <span data-ttu-id="7ac35-554"><paramref name="hour" /> が 0 未満であるか、または 23 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-554"><paramref name="hour" /> is less than 0 or greater than 23</span></span> 
<span data-ttu-id="7ac35-555">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-555">-or-</span></span> 
 <span data-ttu-id="7ac35-556"><paramref name="minute" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-556"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="7ac35-557">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-557">-or-</span></span> 
 <span data-ttu-id="7ac35-558"><paramref name="second" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-558"><paramref name="second" /> is less than 0 or greater than 59.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * int -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, millisecond)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="7ac35-559">年 (1 ～ 9999)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-559">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="7ac35-560">月 (1 ～ 12)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-560">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="7ac35-561">日付 (1 ～ <paramref name="month" /> の日数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-561">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="7ac35-562">時間 (0 から 23)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-562">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="7ac35-563">分 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-563">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="7ac35-564">秒 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-564">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="7ac35-565">ミリ秒 (0 から 999)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-565">The milliseconds (0 through 999).</span></span></param>
        <summary><span data-ttu-id="7ac35-566"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定した年、月、日、時、分、秒、およびミリ秒に初期化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-566">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and millisecond.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-567">このコンス トラクターは解釈`year`、 `month`、および`day`年、月、および構成のグレゴリオ暦カレンダーにおける日として。</span><span class="sxs-lookup"><span data-stu-id="7ac35-567">This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="7ac35-568">インスタンス化する、<xref:System.DateTime>呼び出し、別の暦の年、月、日を使用して、値、<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-568">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.</span></span>  
  
 <span data-ttu-id="7ac35-569"><xref:System.DateTime.Kind%2A> プロパティは <xref:System.DateTimeKind.Unspecified> に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-569">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="7ac35-570">日付と時刻のデータまたはある程度までのタイム ゾーンの移植性の認識が重要なアプリケーションでは、対応するを使用できる<xref:System.DateTimeOffset>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-570">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-571">次の例では、<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>インスタンスを作成するコンス トラクター、<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-571">The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29> constructor to instantiate a <xref:System.DateTime> value.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#5)]
 [!code-vb[System.DateTime.Constructor#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-572"><paramref name="year" /> が 1 未満であるか、または 9999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-572"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
<span data-ttu-id="7ac35-573">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-573">-or-</span></span> 
 <span data-ttu-id="7ac35-574"><paramref name="month" /> が 1 未満であるか、または 12 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-574"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="7ac35-575">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-575">-or-</span></span> 
 <span data-ttu-id="7ac35-576"><paramref name="day" /> が 1 未満であるか、または <paramref name="month" /> の日数を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-576"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="7ac35-577">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-577">-or-</span></span> 
 <span data-ttu-id="7ac35-578"><paramref name="hour" /> が 0 未満であるか、または 23 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-578"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="7ac35-579">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-579">-or-</span></span> 
 <span data-ttu-id="7ac35-580"><paramref name="minute" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-580"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="7ac35-581">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-581">-or-</span></span> 
 <span data-ttu-id="7ac35-582"><paramref name="second" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-582"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="7ac35-583">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-583">-or-</span></span> 
 <span data-ttu-id="7ac35-584"><paramref name="millisecond" /> が 0 未満であるか、または 999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-584"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, kind As DateTimeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * int * DateTimeKind -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, millisecond, kind)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="kind" Type="System.DateTimeKind" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="7ac35-585">年 (1 ～ 9999)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-585">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="7ac35-586">月 (1 ～ 12)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-586">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="7ac35-587">日付 (1 ～ <paramref name="month" /> の日数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-587">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="7ac35-588">時間 (0 から 23)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-588">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="7ac35-589">分 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-589">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="7ac35-590">秒 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-590">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="7ac35-591">ミリ秒 (0 から 999)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-591">The milliseconds (0 through 999).</span></span></param>
        <param name="kind"><span data-ttu-id="7ac35-592"><paramref name="year" />、<paramref name="month" />、<paramref name="day" />、<paramref name="hour" />、<paramref name="minute" />、<paramref name="second" />、および <paramref name="millisecond" /> が、現地時刻、世界協定時刻 (UTC)、またはそのどちらでもない時刻のうち、どれを指定するかを示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-592">One of the enumeration values that indicates whether <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" />, <paramref name="second" />, and <paramref name="millisecond" /> specify a local time, Coordinated Universal Time (UTC), or neither.</span></span></param>
        <summary><span data-ttu-id="7ac35-593"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定した年、月、日、時、分、秒、ミリ秒、および世界協定時刻 (UTC) または現地時刻に初期化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-593">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-594">このコンス トラクターは解釈`year`、 `month`、および`day`年、月、および構成のグレゴリオ暦カレンダーにおける日として。</span><span class="sxs-lookup"><span data-stu-id="7ac35-594">This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="7ac35-595">インスタンス化する、<xref:System.DateTime>呼び出し、別の暦の年、月、日を使用して、値、<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-595">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor.</span></span>  
  
 <span data-ttu-id="7ac35-596">日付と時刻のデータまたはある程度までのタイム ゾーンの移植性の認識が重要なアプリケーションでは、対応するを使用できる<xref:System.DateTimeOffset>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-596">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-597">次の例では、<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29>インスタンスを作成するコンス トラクター、<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-597">The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29> constructor to instantiate a <xref:System.DateTime> value.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#8)]
 [!code-vb[System.DateTime.Constructor#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-598"><paramref name="year" /> が 1 未満であるか、または 9999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-598"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
<span data-ttu-id="7ac35-599">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-599">-or-</span></span> 
 <span data-ttu-id="7ac35-600"><paramref name="month" /> が 1 未満であるか、または 12 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-600"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="7ac35-601">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-601">-or-</span></span> 
 <span data-ttu-id="7ac35-602"><paramref name="day" /> が 1 未満であるか、または <paramref name="month" /> の日数を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-602"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="7ac35-603">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-603">-or-</span></span> 
 <span data-ttu-id="7ac35-604"><paramref name="hour" /> が 0 未満であるか、または 23 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-604"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="7ac35-605">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-605">-or-</span></span> 
 <span data-ttu-id="7ac35-606"><paramref name="minute" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-606"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="7ac35-607">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-607">-or-</span></span> 
 <span data-ttu-id="7ac35-608"><paramref name="second" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-608"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="7ac35-609">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-609">-or-</span></span> 
 <span data-ttu-id="7ac35-610"><paramref name="millisecond" /> が 0 未満であるか、または 999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-610"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7ac35-611"><paramref name="kind" /> は <see cref="T:System.DateTimeKind" /> 値のいずれでもありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-611"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, class System.Globalization.Calendar calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, System::Globalization::Calendar ^ calendar);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * int * System.Globalization.Calendar -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, millisecond, calendar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="7ac35-612">年 (1 から <paramref name="calendar" /> の年数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-612">The year (1 through the number of years in <paramref name="calendar" />).</span></span></param>
        <param name="month"><span data-ttu-id="7ac35-613">月 (1 から <paramref name="calendar" /> の月数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-613">The month (1 through the number of months in <paramref name="calendar" />).</span></span></param>
        <param name="day"><span data-ttu-id="7ac35-614">日付 (1 ～ <paramref name="month" /> の日数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-614">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="7ac35-615">時間 (0 から 23)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-615">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="7ac35-616">分 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-616">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="7ac35-617">秒 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-617">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="7ac35-618">ミリ秒 (0 から 999)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-618">The milliseconds (0 through 999).</span></span></param>
        <param name="calendar"><span data-ttu-id="7ac35-619"><paramref name="year" />、<paramref name="month" />、および <paramref name="day" /> を解釈するために使用される暦。</span><span class="sxs-lookup"><span data-stu-id="7ac35-619">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />.</span></span></param>
        <summary><span data-ttu-id="7ac35-620"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定した暦の指定した年、月、日、時、分、秒、およびミリ秒に初期化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-620">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and millisecond for the specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-621"><xref:System.DateTime.Kind%2A> プロパティは <xref:System.DateTimeKind.Unspecified> に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-621">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="7ac35-622">使用できる値`year`、 `month`、および`day`に依存して`calendar`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-622">The allowable values for `year`, `month`, and `day` depend on `calendar`.</span></span> <span data-ttu-id="7ac35-623">使用して、指定した日付と時刻を表現できない場合、例外がスローされます`calendar`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-623">An exception is thrown if the specified date and time cannot be expressed using `calendar`.</span></span>  
  
 <span data-ttu-id="7ac35-624">日付と時刻のデータまたはある程度までのタイム ゾーンの移植性の認識が重要なアプリケーションでは、対応するを使用できる<xref:System.DateTimeOffset>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-624">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
 <span data-ttu-id="7ac35-625"><xref:System.Globalization>名前空間にはいくつかの予定表を含む<xref:System.Globalization.GregorianCalendar>と<xref:System.Globalization.JulianCalendar>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-625">The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-626">次の例では、 <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> 2 つのインスタンスを作成するには、2 回コンス トラクター<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-626">The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values.</span></span> <span data-ttu-id="7ac35-627">最初の呼び出しをインスタンス化、<xref:System.DateTime>値を使用して、<xref:System.Globalization.PersianCalendar>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-627">The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object.</span></span> <span data-ttu-id="7ac35-628">ペルシャ暦で日付を表示する個々 の呼び出しが必要ですペルシャ暦をカルチャの既定の暦として指定することはできません、ため、その<xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>、 <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>、および<xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-628">Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="7ac35-629">2 番目のコンス トラクター呼び出しをインスタンス化、<xref:System.DateTime>値を使用して、<xref:System.Globalization.HijriCalendar>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-629">The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object.</span></span> <span data-ttu-id="7ac35-630">例では、現在のカルチャをアラビア語 (シリア) に変更し、現在のカルチャの既定の暦を回教暦に変更します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-630">The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar.</span></span> <span data-ttu-id="7ac35-631">イスラム暦が、現在のカルチャの既定の暦であるため、<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>メソッドは、日付の書式設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-631">Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses it to format the date.</span></span> <span data-ttu-id="7ac35-632">(これは、英語 (米国) をここでは) 前の現在のカルチャが復元されると、<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>メソッドでは、現在のカルチャの既定のグレゴリオ暦を使用して日付の書式設定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-632">When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses the current culture's default Gregorian calendar to format the date.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample6.cs#6)]
 [!code-vb[System.DateTime.Constructor#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7ac35-633"><paramref name="calendar" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-633"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-634"><paramref name="year" /> は <paramref name="calendar" /> でサポートされる範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-634"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="7ac35-635">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-635">-or-</span></span> 
 <span data-ttu-id="7ac35-636"><paramref name="month" /> は 1 未満か、<paramref name="calendar" /> の月数を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-636"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="7ac35-637">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-637">-or-</span></span> 
 <span data-ttu-id="7ac35-638"><paramref name="day" /> が 1 未満であるか、または <paramref name="month" /> の日数を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-638"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="7ac35-639">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-639">-or-</span></span> 
 <span data-ttu-id="7ac35-640"><paramref name="hour" /> が 0 未満であるか、または 23 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-640"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="7ac35-641">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-641">-or-</span></span> 
 <span data-ttu-id="7ac35-642"><paramref name="minute" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-642"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="7ac35-643">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-643">-or-</span></span> 
 <span data-ttu-id="7ac35-644"><paramref name="second" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-644"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="7ac35-645">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-645">-or-</span></span> 
 <span data-ttu-id="7ac35-646"><paramref name="millisecond" /> が 0 未満であるか、または 999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-646"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, class System.Globalization.Calendar calendar, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, System::Globalization::Calendar ^ calendar, DateTimeKind kind);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * int * System.Globalization.Calendar * DateTimeKind -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, millisecond, calendar, kind)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" />
        <Parameter Name="kind" Type="System.DateTimeKind" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="7ac35-647">年 (1 から <paramref name="calendar" /> の年数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-647">The year (1 through the number of years in <paramref name="calendar" />).</span></span></param>
        <param name="month"><span data-ttu-id="7ac35-648">月 (1 から <paramref name="calendar" /> の月数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-648">The month (1 through the number of months in <paramref name="calendar" />).</span></span></param>
        <param name="day"><span data-ttu-id="7ac35-649">日付 (1 ～ <paramref name="month" /> の日数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-649">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="7ac35-650">時間 (0 から 23)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-650">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="7ac35-651">分 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-651">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="7ac35-652">秒 (0 から 59)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-652">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="7ac35-653">ミリ秒 (0 から 999)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-653">The milliseconds (0 through 999).</span></span></param>
        <param name="calendar"><span data-ttu-id="7ac35-654"><paramref name="year" />、<paramref name="month" />、および <paramref name="day" /> を解釈するために使用される暦。</span><span class="sxs-lookup"><span data-stu-id="7ac35-654">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />.</span></span></param>
        <param name="kind"><span data-ttu-id="7ac35-655"><paramref name="year" />、<paramref name="month" />、<paramref name="day" />、<paramref name="hour" />、<paramref name="minute" />、<paramref name="second" />、および <paramref name="millisecond" /> が、現地時刻、世界協定時刻 (UTC)、またはそのどちらでもない時刻のうち、どれを指定するかを示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-655">One of the enumeration values that indicates whether <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" />, <paramref name="second" />, and <paramref name="millisecond" /> specify a local time, Coordinated Universal Time (UTC), or neither.</span></span></param>
        <summary><span data-ttu-id="7ac35-656"><see cref="T:System.DateTime" /> 構造体の新しいインスタンスを、指定した暦の指定した年、月、日、時、分、秒、ミリ秒、および世界協定時刻 (UTC) または現地時刻に初期化します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-656">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time for the specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-657">使用できる値`year`、 `month`、および`day`パラメーターによって異なります、`calendar`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-657">The allowable values for `year`, `month`, and `day` parameters depend on the `calendar` parameter.</span></span> <span data-ttu-id="7ac35-658">使用して、指定した日付と時刻を表現できない場合、例外がスローされます`calendar`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-658">An exception is thrown if the specified date and time cannot be expressed using `calendar`.</span></span>  
  
 <span data-ttu-id="7ac35-659">日付と時刻のデータまたはある程度までのタイム ゾーンの移植性の認識が重要なアプリケーションでは、対応するを使用できる<xref:System.DateTimeOffset>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-659">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
 <span data-ttu-id="7ac35-660"><xref:System.Globalization>名前空間にはいくつかの予定表を含む<xref:System.Globalization.GregorianCalendar>と<xref:System.Globalization.JulianCalendar>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-660">The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-661">次の例では、 <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> 2 つのインスタンスを作成するには、2 回コンス トラクター<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-661">The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor twice to instantiate two <xref:System.DateTime> values.</span></span> <span data-ttu-id="7ac35-662">最初の呼び出しをインスタンス化、<xref:System.DateTime>値を使用して、<xref:System.Globalization.PersianCalendar>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-662">The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object.</span></span> <span data-ttu-id="7ac35-663">ペルシャ暦で日付を表示する個々 の呼び出しが必要ですペルシャ暦をカルチャの既定の暦として指定することはできません、ため、その<xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>、 <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>、および<xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-663">Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="7ac35-664">2 番目のコンス トラクター呼び出しをインスタンス化、<xref:System.DateTime>値を使用して、<xref:System.Globalization.HijriCalendar>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-664">The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object.</span></span> <span data-ttu-id="7ac35-665">例では、現在のカルチャをアラビア語 (シリア) に変更し、現在のカルチャの既定の暦を回教暦に変更します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-665">The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar.</span></span> <span data-ttu-id="7ac35-666">イスラム暦が、現在のカルチャの既定の暦であるため、<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>メソッドは、日付の書式設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-666">Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses it to format the date.</span></span> <span data-ttu-id="7ac35-667">(これは、英語 (米国) をここでは) 前の現在のカルチャが復元されると、<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>メソッドでは、現在のカルチャの既定のグレゴリオ暦を使用して日付の書式設定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-667">When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses the current culture's default Gregorian calendar to format the date.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample9.cs#9)]
 [!code-vb[System.DateTime.Constructor#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample9.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7ac35-668"><paramref name="calendar" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-668"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-669"><paramref name="year" /> は <paramref name="calendar" /> でサポートされる範囲にありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-669"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="7ac35-670">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-670">-or-</span></span> 
 <span data-ttu-id="7ac35-671"><paramref name="month" /> は 1 未満か、<paramref name="calendar" /> の月数を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-671"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="7ac35-672">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-672">-or-</span></span> 
 <span data-ttu-id="7ac35-673"><paramref name="day" /> が 1 未満であるか、または <paramref name="month" /> の日数を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-673"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="7ac35-674">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-674">-or-</span></span> 
 <span data-ttu-id="7ac35-675"><paramref name="hour" /> が 0 未満であるか、または 23 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-675"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="7ac35-676">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-676">-or-</span></span> 
 <span data-ttu-id="7ac35-677"><paramref name="minute" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-677"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="7ac35-678">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-678">-or-</span></span> 
 <span data-ttu-id="7ac35-679"><paramref name="second" /> が 0 未満であるか、または 59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-679"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="7ac35-680">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-680">-or-</span></span> 
 <span data-ttu-id="7ac35-681"><paramref name="millisecond" /> が 0 未満であるか、または 999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-681"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7ac35-682"><paramref name="kind" /> は <see cref="T:System.DateTimeKind" /> 値のいずれでもありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-682"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public DateTime Add (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime Add(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Add(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As TimeSpan) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime Add(TimeSpan value);" />
      <MemberSignature Language="F#" Value="member this.Add : TimeSpan -&gt; DateTime" Usage="dateTime.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ac35-683">正または負の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="7ac35-683">A positive or negative time interval.</span></span></param>
        <summary><span data-ttu-id="7ac35-684">このインスタンスの値に、指定された <see cref="T:System.TimeSpan" /> の値を加算した新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-684">Returns a new <see cref="T:System.DateTime" /> that adds the value of the specified <see cref="T:System.TimeSpan" /> to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="7ac35-685">このインスタンスで表された日付と時刻に <paramref name="value" /> で表された時間間隔を加算した値を保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-685">An object whose value is the sum of the date and time represented by this instance and the time interval represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-686">使用することができます、<xref:System.DateTime.Add%2A>メソッドを 1 回の操作で時間間隔 (日、時、分、秒またはミリ秒単位) の 1 つ以上の種類を追加します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-686">You can use the <xref:System.DateTime.Add%2A> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation.</span></span> <span data-ttu-id="7ac35-687">このメソッドの動作は、加算演算子のと同じです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-687">This method's behavior is identical to that of the addition operator.</span></span> <span data-ttu-id="7ac35-688"><xref:System.DateTime>構造体には、追加の特殊なメソッドもサポートしています (など<xref:System.DateTime.AddDays%2A>、 <xref:System.DateTime.AddHours%2A>、および<xref:System.DateTime.AddMinutes%2A>) 時間間隔。</span><span class="sxs-lookup"><span data-stu-id="7ac35-688">The <xref:System.DateTime> structure also supports specialized addition methods (such as <xref:System.DateTime.AddDays%2A>, <xref:System.DateTime.AddHours%2A>, and <xref:System.DateTime.AddMinutes%2A>) for each time interval.</span></span>  
  
 <span data-ttu-id="7ac35-689"><xref:System.DateTime.Add%2A>アカウントうるう年と算術演算のときに日付を実行する月内の日数の数を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-689">The <xref:System.DateTime.Add%2A> method takes into account leap years and the number of days in a month when performing date arithmetic.</span></span>  
  
 <span data-ttu-id="7ac35-690">このメソッドには、この値は変わりません。<xref:System.DateTime>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-690">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="7ac35-691">代わりに、新しい返します<xref:System.DateTime>値がこの操作の結果。</span><span class="sxs-lookup"><span data-stu-id="7ac35-691">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span> <span data-ttu-id="7ac35-692"><xref:System.DateTime.Kind%2A>プロパティの新しい<xref:System.DateTime>インスタンスが現在のインスタンスと同じです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-692">The <xref:System.DateTime.Kind%2A> property of the new <xref:System.DateTime> instance is the same as that of the current instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-693">次の例で、<xref:System.DateTime.Add%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-693">The following example demonstrates the <xref:System.DateTime.Add%2A> method.</span></span> <span data-ttu-id="7ac35-694">この時点から 36 日 (864 時間) である週の曜日を計算します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-694">It calculates the day of the week that is 36 days (864 hours) from this moment.</span></span>  
  
 [!code-cpp[DateTime.Add#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Add/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Add#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Add/CS/class1.cs#1)]
 [!code-vb[DateTime.Add#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Add/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-695">結果として返された <see cref="T:System.DateTime" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-695">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="M:System.TimeSpan.Add(System.TimeSpan)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="7ac35-696">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="7ac35-696">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public DateTime AddDays (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddDays(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddDays(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDays (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddDays(double value);" />
      <MemberSignature Language="F#" Value="member this.AddDays : double -&gt; DateTime" Usage="dateTime.AddDays value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ac35-697">整数部と小数部から成る日数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-697">A number of whole and fractional days.</span></span> <span data-ttu-id="7ac35-698"><paramref name="value" /> パラメーターは、正または負のどちらの場合もあります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-698">The <paramref name="value" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="7ac35-699">このインスタンスの値に、指定された日数を加算した新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-699">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of days to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="7ac35-700">このインスタンスで表された日付と時刻に <paramref name="value" /> で表された日数を加算した値を保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-700">An object whose value is the sum of the date and time represented by this instance and the number of days represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-701">このメソッドには、この値は変わりません。<xref:System.DateTime>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-701">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="7ac35-702">代わりに、新しい返します<xref:System.DateTime>値がこの操作の結果。</span><span class="sxs-lookup"><span data-stu-id="7ac35-702">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="7ac35-703">小数部`value`は 1 日の小数部の一部です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-703">The fractional part of `value` is the fractional part of a day.</span></span> <span data-ttu-id="7ac35-704">たとえば、4.5 は 4 日、12 時間、0 分 0 秒、0 (ミリ秒単位)、および 0 タイマー刻みと同じです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-704">For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds, and 0 ticks.</span></span>  
  
 <span data-ttu-id="7ac35-705">`value`パラメーターはミリ秒単位に丸められます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-705">The `value` parameter is rounded to the nearest millisecond.</span></span>  
  
 <span data-ttu-id="7ac35-706"><xref:System.DateTime.AddDays%2A>アカウントうるう年と算術演算のときに日付を実行する月内の日数の数を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-706">The <xref:System.DateTime.AddDays%2A> method takes into account leap years and the number of days in a month when performing date arithmetic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-707">次の例では、<xref:System.DateTime.AddDays%2A>曜日、週、現在の日付から 36 の日数を調べます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-707">The following example uses the <xref:System.DateTime.AddDays%2A> method to determine the day of the week 36 days after the current date.</span></span>  
  
 [!code-cpp[DateTime.AddDays#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.AddDays/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.AddDays#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.AddDays/CS/class1.cs#1)]
 [!code-vb[DateTime.AddDays#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.AddDays/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-708">結果として返された <see cref="T:System.DateTime" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-708">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public DateTime AddHours (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddHours(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddHours(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddHours (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddHours(double value);" />
      <MemberSignature Language="F#" Value="member this.AddHours : double -&gt; DateTime" Usage="dateTime.AddHours value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ac35-709">整数部と小数部から成る時間数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-709">A number of whole and fractional hours.</span></span> <span data-ttu-id="7ac35-710"><paramref name="value" /> パラメーターは、正または負のどちらの場合もあります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-710">The <paramref name="value" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="7ac35-711">このインスタンスの値に、指定された時間数を加算した新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-711">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of hours to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="7ac35-712">このインスタンスで表された日付と時刻に <paramref name="value" /> で表された時間数を加算した値を保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-712">An object whose value is the sum of the date and time represented by this instance and the number of hours represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-713">このメソッドには、この値は変わりません。<xref:System.DateTime>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-713">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="7ac35-714">代わりに、新しい返します<xref:System.DateTime>値がこの操作の結果。</span><span class="sxs-lookup"><span data-stu-id="7ac35-714">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span> <span data-ttu-id="7ac35-715"><xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>オブジェクトがの場合と同じ`value`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-715">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is the same as that of `value`.</span></span>  
  
 <span data-ttu-id="7ac35-716">小数部`value`は 1 時間の小数部の一部です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-716">The fractional part of `value` is the fractional part of an hour.</span></span> <span data-ttu-id="7ac35-717">たとえば、4.5 は 4 時間、30 分、0 秒、0 (ミリ秒単位)、および 0 タイマー刻みと同じです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-717">For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds, and 0 ticks.</span></span>  
  
 <span data-ttu-id="7ac35-718">`value`パラメーターはミリ秒単位に丸められます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-718">The `value` parameter is rounded to the nearest millisecond.</span></span>  
  
 <span data-ttu-id="7ac35-719">1 時間未満の時間間隔を小数に変換すると、結果が終了しない繰り返し 10 進数である場合に有効桁数の損失を伴うことができます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-719">Converting time intervals of less than an hour to a fraction can involve a loss of precision if the result is a non-terminating repeating decimal.</span></span> <span data-ttu-id="7ac35-720">(たとえば、1 分は 0.016667 時間) です。問題がある場合は、使用できます、<xref:System.DateTime.Add%2A>メソッドでは、1 つのメソッドの呼び出しで複数の時間間隔の種類を指定することができ、時間間隔を 1 時間の部分の小数部に変換する必要がなくなります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-720">(For example, one minute is 0.016667 of an hour.) If this is problematic, you can use the <xref:System.DateTime.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-721">次の例では、<xref:System.DateTime.AddHours%2A>日付と時刻に、数の整数部と小数部の値を追加します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-721">The following example uses the <xref:System.DateTime.AddHours%2A> method to add a number of whole and fractional values to a date and time.</span></span> <span data-ttu-id="7ac35-722">また、小数部を含む値をメソッドに渡すことによる精度の損失を示しています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-722">It also illustrates the loss of precision caused by passing the method a value that includes a fractional component.</span></span>  
  
 [!code-csharp[System.DateTime.AddHours#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.AddHours/cs/AddHours1.cs#1)]
 [!code-vb[System.DateTime.AddHours#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.AddHours/vb/AddHours1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-723">結果として返された <see cref="T:System.DateTime" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-723">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Add(System.TimeSpan)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="7ac35-724">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="7ac35-724">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public DateTime AddMilliseconds (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddMilliseconds(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddMilliseconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMilliseconds (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddMilliseconds(double value);" />
      <MemberSignature Language="F#" Value="member this.AddMilliseconds : double -&gt; DateTime" Usage="dateTime.AddMilliseconds value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ac35-725">整数部と小数部から成るミリ秒数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-725">A number of whole and fractional milliseconds.</span></span> <span data-ttu-id="7ac35-726"><paramref name="value" /> パラメーターは、正または負のどちらの場合もあります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-726">The <paramref name="value" /> parameter can be negative or positive.</span></span> <span data-ttu-id="7ac35-727">この値は、近似値の整数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-727">Note that this value is rounded to the nearest integer.</span></span></param>
        <summary><span data-ttu-id="7ac35-728">このインスタンスの値に、指定されたミリ秒数を加算した新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-728">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of milliseconds to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="7ac35-729">このインスタンスで表された日付と時刻に <paramref name="value" /> で表されたミリ秒数を加算した値を保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-729">An object whose value is the sum of the date and time represented by this instance and the number of milliseconds represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-730">このメソッドには、この値は変わりません。<xref:System.DateTime>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-730">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="7ac35-731">代わりに、新しい返します<xref:System.DateTime>値がこの操作の結果。</span><span class="sxs-lookup"><span data-stu-id="7ac35-731">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="7ac35-732">小数部`value`は 1 ミリ秒の小数部の一部です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-732">The fractional part of `value` is the fractional part of a millisecond.</span></span> <span data-ttu-id="7ac35-733">たとえば、4.5 が 4 ミリ秒と 5000 ティック単位に相当ミリ秒 = 10000 タイマー刻み。</span><span class="sxs-lookup"><span data-stu-id="7ac35-733">For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond = 10000 ticks.</span></span>  
  
 <span data-ttu-id="7ac35-734">`value`パラメーターは、最も近い整数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-734">The `value` parameter is rounded to the nearest integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-735">次の例では、 <xref:System.DateTime.AddMilliseconds%2A> 1 ミリ秒、および 1.5 時間 (ミリ秒) を追加する方法、<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-735">The following example uses the <xref:System.DateTime.AddMilliseconds%2A> method to add one millisecond and 1.5 milliseconds to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="7ac35-736">それぞれの新しい値が表示され、元の値との間の差異が表示されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-736">It then displays each new value and displays the difference between it and the original value.</span></span> <span data-ttu-id="7ac35-737">違いには、時間間隔とタイマー刻みの数の両方が表示されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-737">The difference is displayed both as a time span and as a number of ticks.</span></span> <span data-ttu-id="7ac35-738">例を使用して、ミリ秒 equals 10,000 ティックそのいずれかをオフになります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-738">The example makes it clear that one millisecond equals 10,000 ticks.</span></span> <span data-ttu-id="7ac35-739">小数ミリ秒に加算; を実行する前に丸められることも示しています<xref:System.DateTime> 1.5 (ミリ秒) を元の日付に追加した結果値は 2 ミリ秒、元の日付よりも大きい。</span><span class="sxs-lookup"><span data-stu-id="7ac35-739">It also shows that fractional milliseconds are rounded before performing the addition; the <xref:System.DateTime> value that results from adding 1.5 milliseconds to the original date is 2 milliseconds greater than the original date.</span></span>  
  
 [!code-csharp[System.DateTime.AddMilliseconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addmilliseconds/cs/addmilliseconds2.cs#1)]
 [!code-vb[System.DateTime.AddMilliseconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addmilliseconds/vb/addmilliseconds2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-740">結果として返された <see cref="T:System.DateTime" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-740">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="7ac35-741">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="7ac35-741">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public DateTime AddMinutes (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddMinutes(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddMinutes(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMinutes (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddMinutes(double value);" />
      <MemberSignature Language="F#" Value="member this.AddMinutes : double -&gt; DateTime" Usage="dateTime.AddMinutes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ac35-742">整数部と小数部から成る分数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-742">A number of whole and fractional minutes.</span></span> <span data-ttu-id="7ac35-743"><paramref name="value" /> パラメーターは、正または負のどちらの場合もあります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-743">The <paramref name="value" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="7ac35-744">このインスタンスの値に、指定された分数を加算した新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-744">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of minutes to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="7ac35-745">このインスタンスで表された日付と時刻に <paramref name="value" /> で表された分数を加算した値を保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-745">An object whose value is the sum of the date and time represented by this instance and the number of minutes represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-746">このメソッドには、この値は変わりません。<xref:System.DateTime>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-746">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="7ac35-747">代わりに、新しい返します<xref:System.DateTime>値がこの操作の結果。</span><span class="sxs-lookup"><span data-stu-id="7ac35-747">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="7ac35-748">小数部`value`は 1 分間の小数部の一部です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-748">The fractional part of `value` is the fractional part of a minute.</span></span> <span data-ttu-id="7ac35-749">たとえば、4.5 は 4 分 30 秒、0 (ミリ秒単位)、および 0 タイマー刻みと同じです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-749">For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds, and 0 ticks.</span></span>  
  
 <span data-ttu-id="7ac35-750">`value`パラメーターはミリ秒単位に丸められます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-750">The `value` parameter is rounded to the nearest millisecond.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-751">次の例では、<xref:System.DateTime.AddMinutes%2A>日付と時刻に、数の整数部と小数部の値を追加します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-751">The following example uses the <xref:System.DateTime.AddMinutes%2A> method to add a number of whole and fractional values to a date and time.</span></span>  
  
 [!code-cpp[System.DateTime.AddMinutes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.addminutes/cpp/addminutes1.cpp#1)]
 [!code-csharp[System.DateTime.AddMinutes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addminutes/cs/addminutes1.cs#1)]
 [!code-vb[System.DateTime.AddMinutes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addminutes/vb/addminutes1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-752">結果として返された <see cref="T:System.DateTime" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-752">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="7ac35-753">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="7ac35-753">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public DateTime AddMonths (int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddMonths(int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddMonths(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMonths (months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddMonths(int months);" />
      <MemberSignature Language="F#" Value="member this.AddMonths : int -&gt; DateTime" Usage="dateTime.AddMonths months" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="months"><span data-ttu-id="7ac35-754">月数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-754">A number of months.</span></span> <span data-ttu-id="7ac35-755"><paramref name="months" /> パラメーターは、正または負のどちらの場合もあります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-755">The <paramref name="months" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="7ac35-756">このインスタンスの値に、指定された月数を加算した新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-756">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of months to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="7ac35-757">このインスタンスで表された日付と時刻と <paramref name="months" /> の合計を値とするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-757">An object whose value is the sum of the date and time represented by this instance and <paramref name="months" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-758">このメソッドには、この値は変わりません。<xref:System.DateTime>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-758">This method does not change the value of this <xref:System.DateTime> object.</span></span> <span data-ttu-id="7ac35-759">代わりに、新しい返します<xref:System.DateTime>値がこの操作の結果オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-759">Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="7ac35-760"><xref:System.DateTime.AddMonths%2A>メソッドは、計算結果の月と年、閏年のアカウントと、1 か月の日数を考慮して、結果の日の部分を調整する<xref:System.DateTime>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-760">The <xref:System.DateTime.AddMonths%2A> method calculates the resulting month and year, taking into account leap years and the number of days in a month, then adjusts the day part of the resulting <xref:System.DateTime> object.</span></span> <span data-ttu-id="7ac35-761">結果として得られる日が結果として得られる 1 か月間有効な日付でない場合は、その月の最終有効日が使用されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-761">If the resulting day is not a valid day in the resulting month, the last valid day of the resulting month is used.</span></span> <span data-ttu-id="7ac35-762">例では、3 月 31 日 + 1 か月 = 年 4 月 30 日と 3 月 31 日に 1 か月 = 2 月 28 日 leap 以外の年の閏年の 2 月 29 日。</span><span class="sxs-lookup"><span data-stu-id="7ac35-762">For example, March 31st + 1 month = April 30th, and March 31st - 1 month = February 28 for a non-leap year and February 29 for a leap year.</span></span>  
  
 <span data-ttu-id="7ac35-763">結果の時刻の部分<xref:System.DateTime>オブジェクトがこのインスタンスと同じです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-763">The time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-764">次の例では、2015 年 12 月の最終日に 0 との間、15 か月を追加します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-764">The following example adds between zero and fifteen months to the last day of December, 2015.</span></span> <span data-ttu-id="7ac35-765">ここでは、AddMonths メソッドは、毎月の最終日の日付を返し、うるう年を正常に処理します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-765">In this case, the AddMonths method returns the date of the last day of each month, and successfully handles leap years.</span></span>  
  
 [!code-csharp[System.DateTime.AddMonths#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addmonths/cs/addmonths1.cs#1)]
 [!code-vb[System.DateTime.AddMonths#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addmonths/vb/addmonths1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-766">結果として返された <see cref="T:System.DateTime" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-766">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span>  
  
<span data-ttu-id="7ac35-767">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-767">-or-</span></span> 
 <span data-ttu-id="7ac35-768"><paramref name="months" /> が -120,000 未満であるか、120,000 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-768"><paramref name="months" /> is less than -120,000 or greater than 120,000.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public DateTime AddSeconds (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddSeconds(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddSeconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddSeconds (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddSeconds(double value);" />
      <MemberSignature Language="F#" Value="member this.AddSeconds : double -&gt; DateTime" Usage="dateTime.AddSeconds value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ac35-769">整数部と小数部から成る秒数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-769">A number of whole and fractional seconds.</span></span> <span data-ttu-id="7ac35-770"><paramref name="value" /> パラメーターは、正または負のどちらの場合もあります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-770">The <paramref name="value" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="7ac35-771">このインスタンスの値に、指定された秒数を加算した新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-771">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of seconds to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="7ac35-772">このインスタンスで表された日付と時刻に <paramref name="value" /> で表された秒数を加算した値を保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-772">An object whose value is the sum of the date and time represented by this instance and the number of seconds represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-773">このメソッドには、この値は変わりません。<xref:System.DateTime>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-773">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="7ac35-774">代わりに、新しい返します<xref:System.DateTime>値がこの操作の結果。</span><span class="sxs-lookup"><span data-stu-id="7ac35-774">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="7ac35-775">小数部`value`は秒の小数部。</span><span class="sxs-lookup"><span data-stu-id="7ac35-775">The fractional part of `value` is the fractional part of a second.</span></span> <span data-ttu-id="7ac35-776">たとえば、4.5 は 4 秒、500 ミリ秒、および 0 タイマー刻みと同じです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-776">For example, 4.5 is equivalent to 4 seconds, 500 milliseconds, and 0 ticks.</span></span>  
  
 <span data-ttu-id="7ac35-777">`value`パラメーターはミリ秒単位に丸められます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-777">The `value` parameter is rounded to the nearest millisecond.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-778">次の例では、<xref:System.DateTime.AddSeconds%2A>を 1 日に 30 秒と秒数を追加する方法、<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-778">The following example uses the <xref:System.DateTime.AddSeconds%2A> method to add 30 seconds and the number of seconds in one day to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="7ac35-779">それぞれの新しい値が表示され、元の値との間の差異が表示されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-779">It then displays each new value and displays the difference between it and the original value.</span></span> <span data-ttu-id="7ac35-780">違いには、時間間隔とタイマー刻みの数の両方が表示されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-780">The difference is displayed both as a time span and as a number of ticks.</span></span>  
  
 [!code-csharp[System.DateTime.AddSeconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addseconds/cs/addseconds1.cs#1)]
 [!code-vb[System.DateTime.AddSeconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addseconds/vb/addseconds1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-781">結果として返された <see cref="T:System.DateTime" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-781">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="7ac35-782">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="7ac35-782">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddTicks">
      <MemberSignature Language="C#" Value="public DateTime AddTicks (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddTicks(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddTicks(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTicks (value As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddTicks(long value);" />
      <MemberSignature Language="F#" Value="member this.AddTicks : int64 -&gt; DateTime" Usage="dateTime.AddTicks value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ac35-783">100 ナノ秒タイマー刻み数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-783">A number of 100-nanosecond ticks.</span></span> <span data-ttu-id="7ac35-784"><paramref name="value" /> パラメーターは、正または負のどちらの場合もあります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-784">The <paramref name="value" /> parameter can be positive or negative.</span></span></param>
        <summary><span data-ttu-id="7ac35-785">このインスタンスの値に、指定されたタイマー刻みの数を加算した新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-785">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of ticks to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="7ac35-786">このインスタンスで表される日付と時刻に <paramref name="value" /> で表された時間を加算した値を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-786">An object whose value is the sum of the date and time represented by this instance and the time represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-787">このメソッドには、この値は変わりません。<xref:System.DateTime>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-787">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="7ac35-788">代わりに、新しい返します<xref:System.DateTime>値がこの操作の結果。</span><span class="sxs-lookup"><span data-stu-id="7ac35-788">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-789">結果として返された <see cref="T:System.DateTime" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-789">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int64" />
        <altmember cref="P:System.DateTime.Ticks" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="7ac35-790">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="7ac35-790">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public DateTime AddYears (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddYears(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddYears(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddYears (value As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddYears(int value);" />
      <MemberSignature Language="F#" Value="member this.AddYears : int -&gt; DateTime" Usage="dateTime.AddYears value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ac35-791">年数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-791">A number of years.</span></span> <span data-ttu-id="7ac35-792"><paramref name="value" /> パラメーターは、正または負のどちらの場合もあります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-792">The <paramref name="value" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="7ac35-793">このインスタンスの値に、指定された年数を加算した新しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-793">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of years to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="7ac35-794">このインスタンスで表された日付と時刻に <paramref name="value" /> で表された年数を加算した値を保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-794">An object whose value is the sum of the date and time represented by this instance and the number of years represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-795">このメソッドには、この値は変わりません。<xref:System.DateTime>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-795">This method does not change the value of this <xref:System.DateTime> object.</span></span> <span data-ttu-id="7ac35-796">代わりに、新しい返します<xref:System.DateTime>値がこの操作の結果オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-796">Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="7ac35-797"><xref:System.DateTime.AddYears%2A>メソッドは、うるう年を考慮して、結果の年を計算します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-797">The <xref:System.DateTime.AddYears%2A> method calculates the resulting year taking into account leap years.</span></span> <span data-ttu-id="7ac35-798">結果の月と時刻の部分は、<xref:System.DateTime>オブジェクトがこのインスタンスと同じです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-798">The month and time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance.</span></span>  
  
 <span data-ttu-id="7ac35-799">現在のインスタンスが閏年で閏日である場合は、戻り値は、対象の日付に依存します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-799">If the current instance represents the leap day in a leap year, the return value depends on the target date:</span></span>  
  
-   <span data-ttu-id="7ac35-800">場合`value`  +  <xref:System.DateTime.Year%2A?displayProperty=nameWithType>閏年、戻り値はその年の閏日になります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-800">If `value` + <xref:System.DateTime.Year%2A?displayProperty=nameWithType> is also a leap year, the return value represents the leap day in that year.</span></span> <span data-ttu-id="7ac35-801">たとえば、4 年が 2012 年 2 月 29 日に追加された場合返される日付が 2016 年 2 月 29 日です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-801">For example, if four years is added to February 29, 2012, the date returned is February 29, 2016.</span></span>  
  
-   <span data-ttu-id="7ac35-802">場合`value`  +  <xref:System.DateTime.Year%2A?displayProperty=nameWithType>が閏年で戻り値がその年の閏日の前日を表します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-802">If `value` + <xref:System.DateTime.Year%2A?displayProperty=nameWithType> is not a leap year, the return value represents the day before the leap day in that year.</span></span> <span data-ttu-id="7ac35-803">たとえば、1 年が 2012 年 2 月 29 日に追加された場合返される日付は 2013 年 2 月 28 日です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-803">For example, if one year is added to February 29, 2012, the date returned is February 28, 2013.</span></span>  
  
 <span data-ttu-id="7ac35-804">次の例を使用して、<xref:System.DateTime.AddYears%2A>メソッドを<xref:System.DateTime>閏年日を表す値です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-804">The following example illustrates using the <xref:System.DateTime.AddYears%2A> method with a <xref:System.DateTime> value that represents a leap year day.</span></span> <span data-ttu-id="7ac35-805">15 年より前のバージョンと後に続く 15 年の日付を表示しますが、2000 年 2 月 29 日。</span><span class="sxs-lookup"><span data-stu-id="7ac35-805">It displays the date for the fifteen years prior to and the fifteen years that follow February 29, 2000.</span></span>  
  
 [!code-csharp[System.DateTime.AddYears#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addyears/cs/addyears1.cs#1)]
 [!code-vb[System.DateTime.AddYears#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addyears/vb/addyears1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-806"><paramref name="value" /> または結果として返された <see cref="T:System.DateTime" /> は <see cref="F:System.DateTime.MinValue" /> 未満であるか、<see cref="F:System.DateTime.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-806"><paramref name="value" /> or the resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (t1 As DateTime, t2 As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member Compare : DateTime * DateTime -&gt; int" Usage="System.DateTime.Compare (t1, t2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="7ac35-807">比較する最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-807">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="7ac35-808">比較する 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-808">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="7ac35-809"><see cref="T:System.DateTime" /> の 2 つのインスタンスを比較し、第 1 のインスタンスが第 2 のインスタンスよりも前か、同じか、それとも後かを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-809">Compares two instances of <see cref="T:System.DateTime" /> and returns an integer that indicates whether the first instance is earlier than, the same as, or later than the second instance.</span></span></summary>
        <returns><span data-ttu-id="7ac35-810"><paramref name="t1" /> と <paramref name="t2" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-810">A signed number indicating the relative values of <paramref name="t1" /> and <paramref name="t2" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="7ac35-811">値型</span><span class="sxs-lookup"><span data-stu-id="7ac35-811">Value Type</span></span> 
 </term><description> <span data-ttu-id="7ac35-812">条件</span><span class="sxs-lookup"><span data-stu-id="7ac35-812">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="7ac35-813">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="7ac35-813">Less than zero</span></span> 
 </term><description><span data-ttu-id="7ac35-814"><paramref name="t1" /> が <paramref name="t2" /> よりも前の日時です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-814"><paramref name="t1" /> is earlier than <paramref name="t2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="7ac35-815">0</span><span class="sxs-lookup"><span data-stu-id="7ac35-815">Zero</span></span> 
 </term><description><span data-ttu-id="7ac35-816"><paramref name="t1" /> は <paramref name="t2" /> と同じです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-816"><paramref name="t1" /> is the same as <paramref name="t2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="7ac35-817">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="7ac35-817">Greater than zero</span></span> 
 </term><description><span data-ttu-id="7ac35-818"><paramref name="t1" /> が <paramref name="t2" /> より後の日時です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-818"><paramref name="t1" /> is later than <paramref name="t2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-819">関係を判断する`t1`に`t2`、<xref:System.DateTime.Compare%2A>メソッドの比較、<xref:System.DateTime.Ticks%2A>プロパティの`t1`と`t2`は無視されますが、その<xref:System.DateTime.Kind%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-819">To determine the relationship of `t1` to `t2`, the <xref:System.DateTime.Compare%2A> method compares the <xref:System.DateTime.Ticks%2A> property of `t1` and `t2` but ignores their <xref:System.DateTime.Kind%2A> property.</span></span> <span data-ttu-id="7ac35-820">比較する前に<xref:System.DateTime>オブジェクト、オブジェクトが同じタイム ゾーンで時刻を表すことを確認します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-820">Before comparing <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-821">次の例で、<xref:System.DateTime.Compare%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-821">The following example demonstrates the <xref:System.DateTime.Compare%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.compare/cs/compare1.cs#1)]
 [!code-vb[System.DateTime.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.compare/vb/compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.Object)" />
        <altmember cref="M:System.DateTime.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ac35-822">このインスタンスの値と指定した <see cref="T:System.DateTime" /> の値を比較し、このインスタンスの値が指定した <see cref="T:System.DateTime" /> の値よりも前か、同じか、または後かを示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-822">Compares the value of this instance to a specified <see cref="T:System.DateTime" /> value and indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-823">2 つのオーバー ロード、<xref:System.DateTime.CompareTo%2A>メソッドは、このインスタンスの相対値を示す符号付き数値を返す、`value`引数は、次の表に示すようにします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-823">The two overloads of the <xref:System.DateTime.CompareTo%2A> method return a signed number that indicates the relative value of this instance and the `value` argument, as shown in the following table.</span></span>  
  
|<span data-ttu-id="7ac35-824">[値]</span><span class="sxs-lookup"><span data-stu-id="7ac35-824">Value</span></span>|<span data-ttu-id="7ac35-825">説明</span><span class="sxs-lookup"><span data-stu-id="7ac35-825">Description</span></span>|  
|-----------|-----------------|  
|<span data-ttu-id="7ac35-826">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="7ac35-826">Less than zero</span></span>|<span data-ttu-id="7ac35-827">このインスタンスは、`value` よりも前の日時です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-827">This instance is earlier than `value`.</span></span>|  
|<span data-ttu-id="7ac35-828">0</span><span class="sxs-lookup"><span data-stu-id="7ac35-828">Zero</span></span>|<span data-ttu-id="7ac35-829">このインスタンスは `value` と同じです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-829">This instance is the same as `value`.</span></span>|  
|<span data-ttu-id="7ac35-830">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="7ac35-830">Greater than zero</span></span>|<span data-ttu-id="7ac35-831">このインスタンスは、`value` よりも後の日時です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-831">This instance is later than `value`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.CompareTo(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(DateTime value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : DateTime -&gt; int&#xA;override this.CompareTo : DateTime -&gt; int" Usage="dateTime.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ac35-832">現在のインスタンスと比較する対象のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-832">The object to compare to the current instance.</span></span></param>
        <summary><span data-ttu-id="7ac35-833">このインスタンスの値と指定した <see cref="T:System.DateTime" /> の値を比較し、このインスタンスの値が指定した <see cref="T:System.DateTime" /> の値よりも前か、同じか、または後かを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-833">Compares the value of this instance to a specified <see cref="T:System.DateTime" /> value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <returns><span data-ttu-id="7ac35-834">このインスタンスと <paramref name="value" /> パラメーターの相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-834">A signed number indicating the relative values of this instance and the <paramref name="value" /> parameter.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="7ac35-835">[値]</span><span class="sxs-lookup"><span data-stu-id="7ac35-835">Value</span></span> 
 </term><description> <span data-ttu-id="7ac35-836">説明</span><span class="sxs-lookup"><span data-stu-id="7ac35-836">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="7ac35-837">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="7ac35-837">Less than zero</span></span> 
 </term><description> <span data-ttu-id="7ac35-838">このインスタンスは、<paramref name="value" /> よりも前の日時です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-838">This instance is earlier than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="7ac35-839">0</span><span class="sxs-lookup"><span data-stu-id="7ac35-839">Zero</span></span> 
 </term><description> <span data-ttu-id="7ac35-840">このインスタンスは <paramref name="value" /> と同じです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-840">This instance is the same as <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="7ac35-841">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="7ac35-841">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="7ac35-842">このインスタンスは、<paramref name="value" /> よりも後の日時です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-842">This instance is later than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-843">現在のインスタンスの関係を判断する`value`、<xref:System.DateTime.CompareTo%2A>メソッドの比較、<xref:System.DateTime.Ticks%2A>現在のインスタンスのプロパティと`value`は無視されますが、その<xref:System.DateTime.Kind%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-843">To determine the relationship of the current instance to `value`, the <xref:System.DateTime.CompareTo%2A> method compares the <xref:System.DateTime.Ticks%2A> property of the current instance and `value` but ignores their <xref:System.DateTime.Kind%2A> property.</span></span>  <span data-ttu-id="7ac35-844">比較する前に<xref:System.DateTime>オブジェクト、オブジェクトが同じタイム ゾーンで時刻を表すことを確認します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-844">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="7ac35-845">値を比較することでこれを行う、<xref:System.DateTime.Kind%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-845">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> properties.</span></span>  
  
 <span data-ttu-id="7ac35-846">このメソッドを実装、<xref:System.IComparable%601?displayProperty=nameWithType>インターフェイスを実行よりも若干優れています、<xref:System.DateTime.CompareTo%28System.Object%29?displayProperty=nameWithType>メソッド オーバー ロードを変換することはありませんので、`value`オブジェクトに対するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-846">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.DateTime.CompareTo%28System.Object%29?displayProperty=nameWithType> method overload because it does not have to convert the `value` parameter to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-847">次の例では、3 つのインスタンス化します<xref:System.DateTime>今日を表す 1 つの日付、1 年前の日付を表す、1 年間、将来の日付を表すオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-847">The following example instantiates three <xref:System.DateTime> objects, one that represents today's date, another that represents the date one year previously, and a third that represents the date one year in the future.</span></span> <span data-ttu-id="7ac35-848">呼び出して、<xref:System.DateTime.CompareTo%28System.DateTime%29>メソッド、比較の結果を表示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-848">It then calls the <xref:System.DateTime.CompareTo%28System.DateTime%29> method and displays the result of the comparison.</span></span>  
  
 [!code-csharp[DateTime.CompareTo.2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.CompareTo.2/CS/CompareTo_CS1_24564.cs#1)]
 [!code-vb[DateTime.CompareTo.2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.CompareTo.2/VB/CompareTo_VB1_24564.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="dateTime.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ac35-849">比較対象のボックス化されたオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7ac35-849">A boxed object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="7ac35-850">このインスタンスの値と指定した <see cref="T:System.DateTime" /> の値を含む指定したオブジェクトを比較し、このインスタンスの値が指定した <see cref="T:System.DateTime" /> の値よりも前か、同じか、または後かを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-850">Compares the value of this instance to a specified object that contains a specified <see cref="T:System.DateTime" /> value, and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <returns><span data-ttu-id="7ac35-851">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-851">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="7ac35-852">値</span><span class="sxs-lookup"><span data-stu-id="7ac35-852">Value</span></span> 
 </term><description> <span data-ttu-id="7ac35-853">説明</span><span class="sxs-lookup"><span data-stu-id="7ac35-853">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="7ac35-854">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="7ac35-854">Less than zero</span></span> 
 </term><description> <span data-ttu-id="7ac35-855">このインスタンスは、<paramref name="value" /> よりも前の日時です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-855">This instance is earlier than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="7ac35-856">0</span><span class="sxs-lookup"><span data-stu-id="7ac35-856">Zero</span></span> 
 </term><description> <span data-ttu-id="7ac35-857">このインスタンスは <paramref name="value" /> と同じです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-857">This instance is the same as <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="7ac35-858">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="7ac35-858">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="7ac35-859">このインスタンスは <paramref name="value" /> より後の時刻を表しているか、または <paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-859">This instance is later than <paramref name="value" />, or <paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-860">現在のインスタンスの関係を判断する`value`、<xref:System.DateTime.CompareTo%2A>メソッドの比較、<xref:System.DateTime.Ticks%2A>現在のインスタンスのプロパティと`value`は無視されますが、その<xref:System.DateTime.Kind%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-860">To determine the relationship of the current instance to `value`, the <xref:System.DateTime.CompareTo%2A> method compares the <xref:System.DateTime.Ticks%2A> property of the current instance and `value` but ignores their <xref:System.DateTime.Kind%2A> property.</span></span> <span data-ttu-id="7ac35-861">比較する前に<xref:System.DateTime>オブジェクト、オブジェクトが同じタイム ゾーンで時刻を表すことを確認します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-861">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="7ac35-862">値を比較することでこれを行う、<xref:System.DateTime.Kind%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-862">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> properties.</span></span>  
  
 <span data-ttu-id="7ac35-863">任意のインスタンスの<xref:System.DateTime>、その値に関係なくと見なされますより大きい`null`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-863">Any instance of <xref:System.DateTime>, regardless of its value, is considered greater than `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-864">次の例で、<xref:System.DateTime.CompareTo%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-864">The following example demonstrates the <xref:System.DateTime.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[DateTime.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.CompareTo/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.CompareTo/CS/class1.cs#1)]
 [!code-vb[DateTime.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.CompareTo/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7ac35-865"><paramref name="value" /> が <see cref="T:System.DateTime" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-865"><paramref name="value" /> is not a <see cref="T:System.DateTime" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Date">
      <MemberSignature Language="C#" Value="public DateTime Date { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Date" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Date" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Date As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Date { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Date : DateTime" Usage="System.DateTime.Date" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ac35-866">このインスタンスの日付の部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-866">Gets the date component of this instance.</span></span></summary>
        <value><span data-ttu-id="7ac35-867">このインスタンスと日付が同じで、時刻値が深夜の 12 時 (00:00:00) に設定された新しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-867">A new object with the same date as this instance, and the time value set to 12:00:00 midnight (00:00:00).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-868">値、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>値は、現在のインスタンスの場合と同じです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-868">The value of the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is the same as that of the current instance.</span></span>  
  
 <span data-ttu-id="7ac35-869"><xref:System.DateTime>型は、両方の日付を表すし、時間に 1 つの型が重要ですから返される日付の解釈を回避するために、<xref:System.DateTime.Date%2A>プロパティとして、日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="7ac35-869">Because the <xref:System.DateTime> type represents both dates and times in a single type, it is important to avoid misinterpreting a date returned by the <xref:System.DateTime.Date%2A> property as a date and time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-870">次の例では、<xref:System.DateTime.Date%2A>の日付部分を抽出するプロパティを<xref:System.DateTime>を 0 に設定の時間コンポーネントを持つ値 (0: 00時 00分または午前 0 時)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-870">The following example uses the <xref:System.DateTime.Date%2A> property to extract the date component of a <xref:System.DateTime> value with its time component set to zero (or 0:00:00, or midnight).</span></span> <span data-ttu-id="7ac35-871">表示するときに使用される書式指定文字列によっても、説明、<xref:System.DateTime>値、書式設定された出力に表示される、時刻部分を続行できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-871">It also illustrates that, depending on the format string used when displaying the <xref:System.DateTime> value, the time component can continue to appear in formatted output.</span></span>  
  
 [!code-cpp[System.DateTime.Date#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Date/cpp/date1.cpp#1)]
 [!code-csharp[System.DateTime.Date#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Date/cs/Date1.cs#1)]
 [!code-vb[System.DateTime.Date#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Date/vb/Date1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public int Day { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Day" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Day" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Day As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Day { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Day : int" Usage="System.DateTime.Day" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ac35-872">このインスタンスで表される月の日付を取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-872">Gets the day of the month represented by this instance.</span></span></summary>
        <value><span data-ttu-id="7ac35-873">DateTime の日付部分 (1 ～ 31)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-873">The day component, expressed as a value between 1 and 31.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-874"><xref:System.DateTime.Day%2A>プロパティは常にグレゴリオ暦のカレンダーで月の日を返す場合でも、現在<xref:System.DateTime>値が他のカレンダーを使用してインスタンス化されたまたは現在のスレッドのカルチャの既定の暦の場合は、グレゴリオ暦ではありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-874">The <xref:System.DateTime.Day%2A> property always returns the day of the month in the Gregorian calendar, even if the current <xref:System.DateTime> value was instantiated using some other calendar or if the current thread culture's default calendar is not the Gregorian calendar.</span></span> <span data-ttu-id="7ac35-875">他のカレンダーを使用して、特定の日付の月の日を取得する呼び出しの暦の<xref:System.Globalization.Calendar.GetDayOfMonth%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-875">To retrieve the day of the month of a particular date using some other calendar, call that calendar's <xref:System.Globalization.Calendar.GetDayOfMonth%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7ac35-876">次の例では、両方は使用して、<xref:System.DateTime.Day%2A>プロパティおよび<xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>の月の日を取得するメソッドを<xref:System.DateTime>イスラム暦カレンダーを使用してインスタンス化される値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-876">The following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=nameWithType> method to retrieve the day of the month for a <xref:System.DateTime> value that is instantiated using the Hijri calendar.</span></span>  
  
 [!code-csharp[System.DateTime.Day#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day1.cs#1)]
 [!code-vb[System.DateTime.Day#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day1.vb#1)]  
  
 <span data-ttu-id="7ac35-877">同様に、次の例では両方とも、<xref:System.DateTime.Day%2A>プロパティおよび<xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>AR-SA は、その既定の暦としてイスラム暦を使用するが、現在のスレッド カルチャの場合、その月の日を取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-877">Similarly, the following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=nameWithType> method to retrieve the day of the month when the current thread culture is ar-SA, which uses Hijri as its default calendar.</span></span>  
  
 [!code-csharp[System.DateTime.Day#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day2.cs#2)]
 [!code-vb[System.DateTime.Day#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day2.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-878">次の例で、<xref:System.DateTime.Day%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-878">The following example demonstrates the <xref:System.DateTime.Day%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek DayOfWeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek DayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.DayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek DayOfWeek { DayOfWeek get(); };" />
      <MemberSignature Language="F#" Value="member this.DayOfWeek : DayOfWeek" Usage="System.DateTime.DayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ac35-879">このインスタンスで表される曜日を取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-879">Gets the day of the week represented by this instance.</span></span></summary>
        <value><span data-ttu-id="7ac35-880">この <see cref="T:System.DateTime" /> 値の曜日を示す列挙型定数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-880">An enumerated constant that indicates the day of the week of this <see cref="T:System.DateTime" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-881">定数の値、<xref:System.DayOfWeek>列挙型の範囲から<xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>に<xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-881">The value of the constants in the <xref:System.DayOfWeek> enumeration ranges from <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType> to <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-882">かどうか整数にキャストすると、その値の範囲は 0 から (を示す<xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>) から 6 まで (を示す<xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-882">If cast to an integer, its value ranges from zero (which indicates <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>) to six (which indicates <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="7ac35-883"><xref:System.DateTime.DayOfWeek%2A>プロパティが列挙型の定数を返します。 システムの地域と言語の設定は反映されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-883">The <xref:System.DateTime.DayOfWeek%2A> property returns an enumerated constant; it does not reflect a system's regional and language settings.</span></span> <span data-ttu-id="7ac35-884">特定の日付のローカライズされた曜日名を表す文字列を取得する呼び出しのオーバー ロードの 1 つ、<xref:System.DateTime.ToString%2A>メソッドが含まれる、`format`パラメーターを渡しますか、`ddd`または`dddd`カスタム書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-884">To retrieve a string representing a localized weekday name for a particular date, call one of the overloads of the <xref:System.DateTime.ToString%2A> method that includes a `format` parameter and pass it either the `ddd` or `dddd` custom format strings.</span></span> <span data-ttu-id="7ac35-885">詳細については、次を参照してください。[方法: 特定の日付から日と、特定の曜日を抽出](~/docs/standard/base-types/how-to-extract-the-day-of-the-week-from-a-specific-date.md)します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-885">For details, see [How to: Extract the Day of the Week from a Specific Date](~/docs/standard/base-types/how-to-extract-the-day-of-the-week-from-a-specific-date.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-886">次の例で、<xref:System.DateTime.DayOfWeek%2A>プロパティおよび<xref:System.DayOfWeek?displayProperty=nameWithType>列挙体。</span><span class="sxs-lookup"><span data-stu-id="7ac35-886">The following example demonstrates the <xref:System.DateTime.DayOfWeek%2A> property and the <xref:System.DayOfWeek?displayProperty=nameWithType> enumeration.</span></span>  
  
 [!code-cpp[DateTime.DayOfWeek#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.DayOfWeek/CPP/dow.cpp#1)]
 [!code-csharp[DateTime.DayOfWeek#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.DayOfWeek/CS/dow.cs#1)]
 [!code-vb[DateTime.DayOfWeek#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.DayOfWeek/VB/dow.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Ticks" />
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="DayOfYear">
      <MemberSignature Language="C#" Value="public int DayOfYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DayOfYear" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.DayOfYear" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DayOfYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DayOfYear : int" Usage="System.DateTime.DayOfYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ac35-887">このインスタンスで表される年間積算日を取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-887">Gets the day of the year represented by this instance.</span></span></summary>
        <value><span data-ttu-id="7ac35-888">1 から 366 までの間の積算日。</span><span class="sxs-lookup"><span data-stu-id="7ac35-888">The day of the year, expressed as a value between 1 and 366.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-889"><xref:System.DateTime.DayOfYear%2A>プロパティでは、年の通算日を計算する場合にうるう年を考慮します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-889">The <xref:System.DateTime.DayOfYear%2A> property takes leap years into account when it calculates the day of the year.</span></span> <span data-ttu-id="7ac35-890">プロパティの値は、常に現在のスレッド カルチャの現在の暦に関係なく、グレゴリオ暦の年の通算日を反映します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-890">The property value always reflects the day of the year in the Gregorian calendar, regardless of the current thread culture's current calendar.</span></span> <span data-ttu-id="7ac35-891">さまざまなカレンダーにおける年の通算日を取得する、<xref:System.Globalization.Calendar.GetDayOfYear%2A?displayProperty=nameWithType>そのカレンダーのメソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-891">To retrieve the day of the year in a different calendar, call the <xref:System.Globalization.Calendar.GetDayOfYear%2A?displayProperty=nameWithType> method of that calendar.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-892">次の例では、構成のグレゴリオ暦カレンダーにおける 2010 2020 年の 12 月 31 日の年の通算日を表示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-892">The following example displays the day of the year of December 31 for the years 2010-2020 in the Gregorian calendar.</span></span> <span data-ttu-id="7ac35-893">12 月 31 日がうるう年の年の 366 日の例に示すことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="7ac35-893">Note that the example shows that December 31 is the 366th day of the year in leap years.</span></span>  
  
 [!code-csharp[System.DateTime.DayOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.dayofyear/cs/dayofyear2.cs#1)]
 [!code-vb[System.DateTime.DayOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.dayofyear/vb/dayofyear2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="DaysInMonth">
      <MemberSignature Language="C#" Value="public static int DaysInMonth (int year, int month);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DaysInMonth(int32 year, int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.DaysInMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DaysInMonth (year As Integer, month As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DaysInMonth(int year, int month);" />
      <MemberSignature Language="F#" Value="static member DaysInMonth : int * int -&gt; int" Usage="System.DateTime.DaysInMonth (year, month)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="7ac35-894">年。</span><span class="sxs-lookup"><span data-stu-id="7ac35-894">The year.</span></span></param>
        <param name="month"><span data-ttu-id="7ac35-895">月 (1 から 12 までの範囲の数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-895">The month (a number ranging from 1 to 12).</span></span></param>
        <summary><span data-ttu-id="7ac35-896">指定した月および年の日数を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-896">Returns the number of days in the specified month and year.</span></span></summary>
        <returns><span data-ttu-id="7ac35-897">指定した <paramref name="year" /> の <paramref name="month" /> の日数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-897">The number of days in <paramref name="month" /> for the specified <paramref name="year" />.</span></span>  
  
<span data-ttu-id="7ac35-898">たとえば、<paramref name="month" /> が 2 月を表す 2 に等しい場合、戻り値には、<paramref name="year" /> が閏年かどうかによって 28 または 29 を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-898">For example, if <paramref name="month" /> equals 2 for February, the return value is 28 or 29 depending upon whether <paramref name="year" /> is a leap year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-899"><xref:System.DateTime.DaysInMonth%2A>メソッドは常に解釈`month`と`year`と月と年はグレゴリオ暦のカレンダーの場合でも、構成のグレゴリオ暦カレンダーは、現在のカルチャの現在の暦ではありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-899">The <xref:System.DateTime.DaysInMonth%2A> method always interprets `month` and `year` as the month and year of the Gregorian calendar even if the Gregorian calendar is not the current culture's current calendar.</span></span> <span data-ttu-id="7ac35-900">特定の暦の指定した月の日数の値を取得する呼び出しの暦の<xref:System.Globalization.Calendar.GetDaysInMonth%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-900">To get the number of days in a specified month of a particular calendar, call that calendar's <xref:System.Globalization.Calendar.GetDaysInMonth%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-901">次の例では、使用する方法、 <xref:System.DateTime.DaysInMonth%2A> 2001 年 7 月、年 2 月の日数を 1998 (、うるう年以外)、および 1996 年 2 月 (閏年)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-901">The following example demonstrates how to use the <xref:System.DateTime.DaysInMonth%2A> method to determine the number of days in July 2001, February 1998 (a non-leap year), and February 1996 (a leap year).</span></span>  
  
 [!code-cpp[DateTime.DaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.DaysInMonth/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.DaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.DaysInMonth/CS/class1.cs#1)]
 [!code-vb[DateTime.DaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.DaysInMonth/VB/class1.vb#1)]  
  
 <span data-ttu-id="7ac35-902">次の例では、整数の配列で指定された年の各月の日数が表示されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-902">The following example displays the number of days in each month of a year specified in an integer array.</span></span>  
  
 [!code-csharp[System.DateTime.DaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.daysinmonth/cs/daysinmonth3.cs#1)]
 [!code-vb[System.DateTime.DaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.daysinmonth/vb/daysinmonth3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-903"><paramref name="month" /> が 1 未満であるか、または 12 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-903"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="7ac35-904">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-904">-or-</span></span> 
 <span data-ttu-id="7ac35-905"><paramref name="year" /> が 1 未満であるか、または 9999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-905"><paramref name="year" /> is less than 1 or greater than 9999.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ac35-906">2 つの <see cref="T:System.DateTime" /> オブジェクトの値が等しいかどうか、または、特定の <see cref="T:System.DateTime" /> インスタンスと別のオブジェクト (<see cref="T:System.DateTime" />) の値が等しいかどうかを表す値を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-906">Returns a value indicating whether two <see cref="T:System.DateTime" /> objects, or a <see cref="T:System.DateTime" /> instance and another object or <see cref="T:System.DateTime" />, have the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Equals(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(DateTime value);" />
      <MemberSignature Language="F#" Value="override this.Equals : DateTime -&gt; bool" Usage="dateTime.Equals value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ac35-907">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-907">The object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="7ac35-908">このインスタンスの値が、指定した <see cref="T:System.DateTime" /> インスタンスの値と等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-908">Returns a value indicating whether the value of this instance is equal to the value of the specified <see cref="T:System.DateTime" /> instance.</span></span></summary>
        <returns><span data-ttu-id="7ac35-909"><see langword="true" /> パラメーターがこのインスタンスの値と等しい場合は <paramref name="value" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ac35-909"><see langword="true" /> if the <paramref name="value" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-910">現在のインスタンスと`value`が等しい場合、<xref:System.DateTime.Ticks%2A>プロパティの値が等しい。</span><span class="sxs-lookup"><span data-stu-id="7ac35-910">The current instance and `value` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal.</span></span> <span data-ttu-id="7ac35-911">その<xref:System.DateTime.Kind%2A>プロパティの値の等価性のテストでは考慮されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-911">Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.</span></span>  
  
 <span data-ttu-id="7ac35-912">このメソッドは、<xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイス、および実行よりも若干優れています、<xref:System.DateTime.Equals%2A>メソッドのため、`value`パラメーターは、オブジェクトに変換する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-912">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than the <xref:System.DateTime.Equals%2A> method because the `value` parameter does not have to be converted to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-913">次の例で、<xref:System.DateTime.Equals%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-913">The following example demonstrates the <xref:System.DateTime.Equals%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.Equals-Instance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/cs/sample.cs#1)]
 [!code-vb[System.DateTime.Equals-Instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Equals(System.Object)" />
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dateTime.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ac35-914">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-914">The object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="7ac35-915">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-915">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="7ac35-916"><paramref name="value" /> が <see cref="T:System.DateTime" /> のインスタンスで、このインスタンスの値に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ac35-916"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.DateTime" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-917">現在のインスタンスと`value`が等しい場合、<xref:System.DateTime.Ticks%2A>プロパティの値が等しい。</span><span class="sxs-lookup"><span data-stu-id="7ac35-917">The current instance and `value` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal.</span></span> <span data-ttu-id="7ac35-918">その<xref:System.DateTime.Kind%2A>プロパティの値の等価性のテストでは考慮されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-918">Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-919">次の例で、<xref:System.DateTime.Equals%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-919">The following example demonstrates the <xref:System.DateTime.Equals%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.Equals-Instance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/cs/sample.cs#1)]
 [!code-vb[System.DateTime.Equals-Instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Equals(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member Equals : DateTime * DateTime -&gt; bool" Usage="System.DateTime.Equals (t1, t2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="7ac35-920">比較する最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-920">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="7ac35-921">比較する 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-921">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="7ac35-922"><see cref="T:System.DateTime" /> の 2 つのインスタンスが同じ日付/時刻値を持っているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-922">Returns a value indicating whether two <see cref="T:System.DateTime" /> instances  have the same date and time value.</span></span></summary>
        <returns><span data-ttu-id="7ac35-923">2 つの値が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ac35-923"><see langword="true" /> if the two values are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-924">`t1` `t2`が等しい場合、<xref:System.DateTime.Ticks%2A>プロパティの値が等しい。</span><span class="sxs-lookup"><span data-stu-id="7ac35-924">`t1` and `t2` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal.</span></span> <span data-ttu-id="7ac35-925">その<xref:System.DateTime.Kind%2A>プロパティの値の等価性のテストでは考慮されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-925">Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-926">次の例で、<xref:System.DateTime.Equals%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-926">The following example demonstrates the <xref:System.DateTime.Equals%2A> method.</span></span>  
  
 [!code-cpp[DateTime.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Equals/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Equals/CS/class1.cs#1)]
 [!code-vb[DateTime.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Equals/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FromBinary">
      <MemberSignature Language="C#" Value="public static DateTime FromBinary (long dateData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime FromBinary(int64 dateData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.FromBinary(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBinary (dateData As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FromBinary(long dateData);" />
      <MemberSignature Language="F#" Value="static member FromBinary : int64 -&gt; DateTime" Usage="System.DateTime.FromBinary dateData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateData" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="dateData"><span data-ttu-id="7ac35-927">2 ビット フィールドの <see cref="P:System.DateTime.Kind" /> プロパティおよび 62 ビット フィールドの <see cref="P:System.DateTime.Ticks" /> プロパティをエンコードする 64 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-927">A 64-bit signed integer that encodes the <see cref="P:System.DateTime.Kind" /> property in a 2-bit field and the <see cref="P:System.DateTime.Ticks" /> property in a 62-bit field.</span></span></param>
        <summary><span data-ttu-id="7ac35-928">64 ビットのバイナリ値を逆シリアル化し、元のシリアル化 <see cref="T:System.DateTime" /> オブジェクトを再構築します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-928">Deserializes a 64-bit binary value and recreates an original serialized <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="7ac35-929"><see cref="M:System.DateTime.ToBinary" /> メソッドによってシリアル化された <see cref="T:System.DateTime" /> オブジェクトと等価なオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-929">An object that is equivalent to the <see cref="T:System.DateTime" /> object that was serialized by the <see cref="M:System.DateTime.ToBinary" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-930">使用して、<xref:System.DateTime.ToBinary%2A>メソッドは、現在の値に変換する<xref:System.DateTime>オブジェクト バイナリ値から。</span><span class="sxs-lookup"><span data-stu-id="7ac35-930">Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value.</span></span> <span data-ttu-id="7ac35-931">バイナリ値を使用して、その後、および<xref:System.DateTime.FromBinary%2A>メソッドを元の再作成する<xref:System.DateTime>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-931">Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7ac35-932">場合によってで、<xref:System.DateTime>によって返される値、<xref:System.DateTime.FromBinary%2A>メソッドが元と同じでない<xref:System.DateTime>に指定された値、<xref:System.DateTime.ToBinary%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-932">In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method.</span></span> <span data-ttu-id="7ac35-933">詳細については、次のセクションでは、「ローカル タイムの調整」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7ac35-933">For more information, see the next section, "Local Time Adjustment".</span></span>  
  
## <a name="local-time-adjustment"></a><span data-ttu-id="7ac35-934">現地時刻の調整</span><span class="sxs-lookup"><span data-stu-id="7ac35-934">Local Time Adjustment</span></span>  
 <span data-ttu-id="7ac35-935">ローカル タイム ゾーンに調整: Coordinated Universal Time には、現地時刻がによって表される、<xref:System.DateTime>持つ<xref:System.DateTime.Kind%2A>プロパティの値を<xref:System.DateTimeKind.Local>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-935">A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>.</span></span> <span data-ttu-id="7ac35-936">ローカルの復元時に<xref:System.DateTime>によって生成されるバイナリ表現からの値、<xref:System.DateTime.ToBinary%2A>メソッド、<xref:System.DateTime.FromBinary%2A>元の値と等しくないように、メソッドが再作成された値を調整する場合があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-936">When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value.</span></span> <span data-ttu-id="7ac35-937">これは、次のような条件で発生します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-937">This can occur under the following conditions:</span></span>  
  
-   <span data-ttu-id="7ac35-938">ローカル<xref:System.DateTime>オブジェクトは、1 つのタイム ゾーンでシリアル化、<xref:System.DateTime.ToBinary%2A>メソッドをおよび逆シリアル化し、別のタイム ゾーンで、<xref:System.DateTime.FromBinary%2A>メソッドは、結果で表されるローカル時間<xref:System.DateTime>オブジェクトが自動的に調整2 番目のタイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="7ac35-938">If a local <xref:System.DateTime> object is serialized in one time zone by the <xref:System.DateTime.ToBinary%2A> method, and then deserialized in a different time zone by the <xref:System.DateTime.FromBinary%2A> method, the local time represented by the resulting <xref:System.DateTime> object is automatically adjusted to the second time zone.</span></span>  
  
     <span data-ttu-id="7ac35-939">たとえば、<xref:System.DateTime>現地時刻の午後 3 時を表すオブジェクトを</span><span class="sxs-lookup"><span data-stu-id="7ac35-939">For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M.</span></span> <span data-ttu-id="7ac35-940">米国で実行されているアプリケーション太平洋標準時タイム ゾーンを使用して、<xref:System.DateTime.ToBinary%2A>を変換するメソッド<xref:System.DateTime>オブジェクト バイナリ値から。</span><span class="sxs-lookup"><span data-stu-id="7ac35-940">An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value.</span></span> <span data-ttu-id="7ac35-941">米国で実行されている別のアプリケーション東部標準時ゾーンを使用し、<xref:System.DateTime.FromBinary%2A>を新しいバイナリ値に変換するメソッド<xref:System.DateTime>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-941">Another application that is executing in the U.S. Eastern Time zone then uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object.</span></span> <span data-ttu-id="7ac35-942">新しい値<xref:System.DateTime>オブジェクトが元の午後 3 時間の同じ時点を表している午後 6</span><span class="sxs-lookup"><span data-stu-id="7ac35-942">The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M.</span></span> <span data-ttu-id="7ac35-943">ただし、東部標準時ゾーンでのローカル時刻に調整されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-943">value, but is adjusted to local time in the Eastern Time zone.</span></span>  
  
-   <span data-ttu-id="7ac35-944">場合、ローカルのバイナリ表現<xref:System.DateTime>値は、システムのローカル タイム ゾーンで無効な時刻を表します<xref:System.DateTime.FromBinary%2A>が呼び出されると、時間の調整が無効です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-944">If the binary representation of a local <xref:System.DateTime> value represents an invalid time in the local time zone of the system on which <xref:System.DateTime.FromBinary%2A> is called, the time is adjusted so that it is valid.</span></span>  
  
     <span data-ttu-id="7ac35-945">たとえば、標準時間から夏時間への移行、米国の太平洋標準時ゾーンで発生、2010 年 3 月 14 日、午前 2時 00分に時間が午前 3 時に、1 時間進み</span><span class="sxs-lookup"><span data-stu-id="7ac35-945">For example, the transition from standard time to daylight saving time occurs in the Pacific Time zone of the United States on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="7ac35-946">この時間の間隔とは、無効な時間、つまり、このタイム ゾーンに存在しません時間間隔です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-946">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="7ac35-947">次の例を時間内にあるときにこの範囲が、バイナリ値に変換されます、<xref:System.DateTime.ToBinary%2A>メソッドで復元が、<xref:System.DateTime.FromBinary%2A>メソッド、元の値が有効な時刻に調整します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-947">The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="7ac35-948">特定の日付と時刻の値に渡すことでの変更対象とする可能性があるかどうかを確認することができます、<xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=nameWithType>メソッドの例として示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-948">You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=nameWithType> method, as the example illustrates.</span></span>  
  
     [!code-csharp[System.DateTime.FromBinary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)]
     [!code-vb[System.DateTime.FromBinary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)]  
  
## <a name="version-considerations"></a><span data-ttu-id="7ac35-949">バージョンの考慮事項</span><span class="sxs-lookup"><span data-stu-id="7ac35-949">Version Considerations</span></span>  
 <span data-ttu-id="7ac35-950">.NET Framework バージョン 2.0 以降、<xref:System.DateTime>を示すかどうか、指定した時間が現地時刻、世界協定時刻 (UTC)、またはそのどちらでもない、連結されたタイマー刻みのプライベート フィールドに、プライベートなフィールドから成る構造が日付と時刻を指定する 100 ナノ秒タイマー刻みの数が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-950">Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time is local time, Coordinated Universal Time (UTC), or neither, concatenated to a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time.</span></span> <span data-ttu-id="7ac35-951">タイマー刻みの数をアクセスするのには、<xref:System.DateTime.Ticks%2A>プロパティと theKind フィールドをアクセスするのには、<xref:System.DateTime.Kind%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-951">The number of ticks can be accessed with the <xref:System.DateTime.Ticks%2A> property and theKind field can be accessed with the <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="7ac35-952">シリアル化する場合は、.NET Framework 2.0 の前に、<xref:System.DateTime>などのシリアル化インターフェイスを使用してではなく、手動でオブジェクト<xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>、内のタイマー刻みデータのみをシリアル化に必要な<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="7ac35-952">Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>, you needed to serialize only the Ticks data in the <xref:System.DateTime>.</span></span> <span data-ttu-id="7ac35-953">以降、.NET Framework 2.0 では、種類のデータをシリアルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-953">Starting with the .NET Framework 2.0, you must also serialize the Kind data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7ac35-954"><paramref name="dateData" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか <see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-954"><paramref name="dateData" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.ToBinary" />
      </Docs>
    </Member>
    <Member MemberName="FromFileTime">
      <MemberSignature Language="C#" Value="public static DateTime FromFileTime (long fileTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime FromFileTime(int64 fileTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.FromFileTime(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileTime (fileTime As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FromFileTime(long fileTime);" />
      <MemberSignature Language="F#" Value="static member FromFileTime : int64 -&gt; DateTime" Usage="System.DateTime.FromFileTime fileTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileTime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileTime"><span data-ttu-id="7ac35-955">タイマー刻み単位で表した Windows ファイルの時刻。</span><span class="sxs-lookup"><span data-stu-id="7ac35-955">A Windows file time expressed in ticks.</span></span></param>
        <summary><span data-ttu-id="7ac35-956">指定された Windows ファイル時刻を同等の現地時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-956">Converts the specified Windows file time to an equivalent local time.</span></span></summary>
        <returns><span data-ttu-id="7ac35-957"><paramref name="fileTime" /> パラメーターによって表された日時に相当する現地時刻を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-957">An object that represents the local time equivalent of the date and time represented by the <paramref name="fileTime" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-958">Windows ファイル時刻の西暦 1601 年 1 月 1 日午前 12時 00分以降の経過時間を 100 ナノ秒間隔の数を表す 64 ビット値は、します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-958">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="7ac35-959">(西暦)世界協定時刻 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-959">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="7ac35-960">Windows では、アプリケーションの作成、アクセスすると、またはファイルに書き込むときを記録するファイルの時刻を使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-960">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="7ac35-961">`fileTime`パラメーターを 100 ナノ秒タイマー刻み単位で表したファイルの時刻を指定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-961">The `fileTime` parameter specifies a file time expressed in 100-nanosecond ticks.</span></span>  
  
 <span data-ttu-id="7ac35-962">以降、.NET Framework version 2.0 では、戻り値は、<xref:System.DateTime>が<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-962">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-963">次の例で、<xref:System.DateTime.FromFileTime%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-963">The following example demonstrates the <xref:System.DateTime.FromFileTime%2A> method.</span></span>  
  
 [!code-cpp[DateTime.FromFileTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.FromFileTime/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.FromFileTime/CS/class1.cs#1)]
 [!code-vb[DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.FromFileTime/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-964"><paramref name="fileTime" /> が 0 未満か、<see cref="F:System.DateTime.MaxValue" /> を超える時刻を表しています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-964"><paramref name="fileTime" /> is less than 0 or represents a time greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="7ac35-965">通常、<see cref="M:System.DateTime.FromFileTime(System.Int64)" />メソッドの復元、<see cref="T:System.DateTime" />によって保存された値、<see cref="M:System.DateTime.ToFileTime" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-965">Ordinarily, the <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> method restores a <see cref="T:System.DateTime" /> value that was saved by the <see cref="M:System.DateTime.ToFileTime" /> method.</span></span> <span data-ttu-id="7ac35-966">ただし、2 つの値は、次の条件下で異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-966">However, the two values may differ under the following conditions:</span></span> 
<span data-ttu-id="7ac35-967">If の逆シリアル化とシリアル化、<see cref="T:System.DateTime" />値が異なるタイム ゾーンで発生します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-967">-   If the serialization and deserialization of the <see cref="T:System.DateTime" /> value occur in different time zones.</span></span> <span data-ttu-id="7ac35-968">たとえば場合、<see cref="T:System.DateTime" />時間が午後 12 時 30 分の値</span><span class="sxs-lookup"><span data-stu-id="7ac35-968">For example, if a <see cref="T:System.DateTime" /> value with a time of 12:30 P.M.</span></span> <span data-ttu-id="7ac35-969">米国の東部標準時ゾーンのシリアル化し、逆シリアル化し、米国の太平洋標準時タイム ゾーン、午後 12 時 30 分の元の値</span><span class="sxs-lookup"><span data-stu-id="7ac35-969">in the U.S. Eastern Time zone is serialized, and then deserialized in the U.S. Pacific Time zone, the original value of 12:30 P.M.</span></span> <span data-ttu-id="7ac35-970">午前 9 時 30 分に調整されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-970">is adjusted to 9:30 A.M.</span></span> <span data-ttu-id="7ac35-971">2 つのタイム ゾーンの違いを反映します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-971">to reflect the difference between the two time zones.</span></span>  
  
<span data-ttu-id="7ac35-972">If、<see cref="T:System.DateTime" />シリアル化された値がローカル タイム ゾーンで無効な時刻を表します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-972">-   If the <see cref="T:System.DateTime" /> value that is serialized represents an invalid time in the local time zone.</span></span> <span data-ttu-id="7ac35-973">ここで、<see cref="M:System.DateTime.ToFileTime" />メソッドは、調整、復元された<see cref="T:System.DateTime" />をローカル タイム ゾーンで有効な時刻を表すように値します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-973">In this case, the <see cref="M:System.DateTime.ToFileTime" /> method adjusts the restored <see cref="T:System.DateTime" /> value so that it represents a valid time in the local time zone.</span></span>  
  
<span data-ttu-id="7ac35-974">たとえば、標準時間から夏時間への移行は、米国内に発生します。太平洋標準時タイム ゾーン、2010 年 3 月 14 日、午前 2時 00分に時間が午前 3 時に、1 時間進み</span><span class="sxs-lookup"><span data-stu-id="7ac35-974">For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="7ac35-975">この時間の間隔とは、無効な時間、つまり、このタイム ゾーンに存在しません時間間隔です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-975">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="7ac35-976">次の例を時間内にあるときにこの範囲が、長整数値に変換されます、<see cref="M:System.DateTime.ToFileTime" />メソッドで復元が、<see cref="M:System.DateTime.FromFileTime(System.Int64)" />メソッド、元の値が有効な時刻に調整します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-976">The following example shows that when a time that falls within this range is converted to a long integer value by the <see cref="M:System.DateTime.ToFileTime" /> method and is then restored by the <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="7ac35-977">特定の日付と時刻の値に渡すことでの変更対象とする可能性があるかどうかを確認することができます、<see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />メソッドの例として示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-977">You can determine whether a particular date and time value may be subject to modification by passing it to the <see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" /> method, as the example illustrates.</span></span>  
  
<span data-ttu-id="7ac35-978">[! コード csharp[System.DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.fromfiletime/cs/fromfiletime1.cs#1)] [! コード vb[System.DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.fromfiletime/vb/fromfiletime1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="7ac35-978">[!code-csharp[System.DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.fromfiletime/cs/fromfiletime1.cs#1)] [!code-vb[System.DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.fromfiletime/vb/fromfiletime1.vb#1)]</span></span></para></block>
        <altmember cref="M:System.DateTime.ToUniversalTime" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="FromFileTimeUtc">
      <MemberSignature Language="C#" Value="public static DateTime FromFileTimeUtc (long fileTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime FromFileTimeUtc(int64 fileTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.FromFileTimeUtc(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileTimeUtc (fileTime As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FromFileTimeUtc(long fileTime);" />
      <MemberSignature Language="F#" Value="static member FromFileTimeUtc : int64 -&gt; DateTime" Usage="System.DateTime.FromFileTimeUtc fileTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileTime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileTime"><span data-ttu-id="7ac35-979">タイマー刻み単位で表した Windows ファイルの時刻。</span><span class="sxs-lookup"><span data-stu-id="7ac35-979">A Windows file time expressed in ticks.</span></span></param>
        <summary><span data-ttu-id="7ac35-980">指定された Windows ファイル時刻を同等の UTC 時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-980">Converts the specified Windows file time to an equivalent UTC time.</span></span></summary>
        <returns><span data-ttu-id="7ac35-981"><paramref name="fileTime" /> パラメーターによって表された日時に相当する UTC 時刻を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-981">An object that represents the UTC time equivalent of the date and time represented by the <paramref name="fileTime" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-982">Windows ファイル時刻の西暦 1601 年 1 月 1 日午前 12時 00分以降の経過時間を 100 ナノ秒間隔の数を表す 64 ビット値は、します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-982">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="7ac35-983">(西暦)世界協定時刻 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-983">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="7ac35-984">Windows では、アプリケーションの作成、アクセスすると、またはファイルに書き込むときを記録するファイルの時刻を使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-984">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="7ac35-985">`fileTime`パラメーターを 100 ナノ秒タイマー刻み単位で表したファイルの時刻を指定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-985">The `fileTime` parameter specifies a file time expressed in 100-nanosecond ticks.</span></span>  
  
 <span data-ttu-id="7ac35-986">以降、.NET Framework version 2.0 では、戻り値は、<xref:System.DateTime>が<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Utc>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-986">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-987"><paramref name="fileTime" /> が 0 未満か、<see cref="F:System.DateTime.MaxValue" /> を超える時刻を表しています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-987"><paramref name="fileTime" /> is less than 0 or represents a time greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.ToUniversalTime" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
        <altmember cref="M:System.DateTime.FromFileTime(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FromOADate">
      <MemberSignature Language="C#" Value="public static DateTime FromOADate (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime FromOADate(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.FromOADate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromOADate (d As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FromOADate(double d);" />
      <MemberSignature Language="F#" Value="static member FromOADate : double -&gt; DateTime" Usage="System.DateTime.FromOADate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ac35-988">OLE オートメーション日付値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-988">An OLE Automation Date value.</span></span></param>
        <summary><span data-ttu-id="7ac35-989">指定した OLE オートメーション日付と等しい <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-989">Returns a <see cref="T:System.DateTime" /> equivalent to the specified OLE Automation Date.</span></span></summary>
        <returns><span data-ttu-id="7ac35-990"><paramref name="d" /> と同じ日付と時刻を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-990">An object that represents the same date and time as <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-991">`d`パラメーターは、前後の基本の日、午前 0 時、1899 年 12 月の 30 日間の数値として日付を表す倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-991">The `d` parameter is a double-precision floating-point number that represents a date as the number of days before or after the base date, midnight, 30 December 1899.</span></span> <span data-ttu-id="7ac35-992">符号と整数部`d`から 1899 年 12 月 30日正または負の値の 1 日の移動距離と値の小数部分の絶対値として日付をエンコード`d`日午前 0 時から 1 日の移動距離の割合としての時間をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-992">The sign and integral part of `d` encode the date as a positive or negative day displacement from 30 December 1899, and the absolute value of the fractional part of `d` encodes the time of day as a fraction of a day displacement from midnight.</span></span> <span data-ttu-id="7ac35-993">`d` 正 2958465.99999999 までの間で値を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-993">`d` must be a value between negative 657435.0 through positive 2958465.99999999.</span></span>  
  
 <span data-ttu-id="7ac35-994">日付をエンコードする方法、によりが 30 1899 年 12 月 1 日の時刻を表す 2 つの方法に注意してください。</span><span class="sxs-lookup"><span data-stu-id="7ac35-994">Note that because of the way dates are encoded, there are two ways of representing any time of day on 30 December 1899.</span></span> <span data-ttu-id="7ac35-995">たとえば、-0.5 と 0.5 は 1899 年 12 月の 30 正午を意味またはプラスの基本の日から 0 日を差し引いた日変位が基本の日、午前 0 時から半日間の移動距離は正午。</span><span class="sxs-lookup"><span data-stu-id="7ac35-995">For example, -0.5 and 0.5 both mean noon on 30 December 1899 because a day displacement of plus or minus zero days from the base date is still the base date, and a half day displacement from midnight is noon.</span></span>  
  
 <span data-ttu-id="7ac35-996">参照してください<xref:System.DateTime.ToOADate%2A>OLE オートメーションの詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-996">See <xref:System.DateTime.ToOADate%2A> for more information on OLE Automation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7ac35-997">日付が有効な OLE オートメーション日付の値ではありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-997">The date is not a valid OLE Automation Date value.</span></span></exception>
        <altmember cref="M:System.DateTime.ToOADate" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDateTimeFormats">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ac35-998">このインスタンスの値を、標準の日時形式指定子によってサポートされるすべての文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-998">Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="7ac35-999">複数回の呼び出しを想定しないでください、<xref:System.DateTime.GetDateTimeFormats%2A>オーバー ロードには、同じデータが返されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-999">You should not assume that multiple calls to the <xref:System.DateTime.GetDateTimeFormats%2A> overloads will return identical data.</span></span> <span data-ttu-id="7ac35-1000">このメソッドによって返されるデータには、特定のオーバー ロードに応じて、現在のカルチャの変更、ユーザーが個々 のカルチャ設定をオーバーライドまたはシステムのカルチャのデータに更新が発生する場合を変更できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1000">Depending on the specific overload, the data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1001">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1001">Standard Date and Time Format Strings</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDateTimeFormats">
      <MemberSignature Language="C#" Value="public string[] GetDateTimeFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDateTimeFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetDateTimeFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDateTimeFormats();" />
      <MemberSignature Language="F#" Value="member this.GetDateTimeFormats : unit -&gt; string[]" Usage="dateTime.GetDateTimeFormats " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ac35-1002">このインスタンスの値を、標準の日時形式指定子によってサポートされるすべての文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1002">Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1003">要素を格納した文字列配列。要素は、標準日時形式指定子のいずれかで書式指定されたこのインスタンスの値を表します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1003">A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1004">によって返される文字列配列、<xref:System.DateTime.GetDateTimeFormats?displayProperty=nameWithType>メソッドは、別の呼び出しによって返された文字列配列に結合する、<xref:System.DateTime.GetDateTimeFormats%28System.Char%29?displayProperty=nameWithType>メソッドを"d"、"D"、"f"、"F"、"g"、"G"、"m"、"o"、"r"、"s"、"t"、"T"、"u"、"U"および"y"標準書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1004">The string array returned by the <xref:System.DateTime.GetDateTimeFormats?displayProperty=nameWithType> method is equivalent to combining the string arrays returned by separate calls to the <xref:System.DateTime.GetDateTimeFormats%28System.Char%29?displayProperty=nameWithType> method with the "d", "D", "f", "F", "g", "G", "m", "o", "r", "s", "t", "T", "u", "U", and "y" standard format strings.</span></span> <span data-ttu-id="7ac35-1005">標準書式指定子の詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1005">For more information about standard format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="7ac35-1006">現在のカルチャから情報を使用して、戻り値の各要素が書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1006">Each element of the return value is formatted using information from the current culture.</span></span> <span data-ttu-id="7ac35-1007">現在のカルチャのカルチャに固有の書式設定情報の詳細については、次を参照してください。<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1007">For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7ac35-1008">このメソッドは、カルチャに依存するデータを使用するためしないメソッドを複数回呼び出すのと同じデータが返されると想定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1008">Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data.</span></span> <span data-ttu-id="7ac35-1009">現在のカルチャの変更、ユーザーが個々 のカルチャ設定をオーバーライドまたはシステムのカルチャのデータに更新が発生する場合、このメソッドによって返されるデータを変更できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1009">The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1010">次の例で、<xref:System.DateTime.GetDateTimeFormats?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1010">The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7ac35-1011">これには、EN-US をここでは、コンピューターの現在カルチャですべての可能な標準の日付と時刻の形式を使用して日付の文字列表現が表示されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1011">It displays the string representation of a date using all possible standard date and time formats in the computer's current culture, which in this case is en-US.</span></span>  
  
 [!code-cpp[DateTime.GetDateTimeFormats#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.GetDateTimeFormats#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#1)]
 [!code-vb[DateTime.GetDateTimeFormats#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#1)]  
  
 <span data-ttu-id="7ac35-1012">この例では、次の出力が表示されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1012">The example displays the following output:</span></span>  
  
```  
7/28/2009  
7/28/09  
07/28/09  
07/28/2009  
09/07/28  
2009-07-28  
28-Jul-09  
Tuesday, July 28, 2009  
July 28, 2009  
Tuesday, 28 July, 2009  
28 July, 2009  
Tuesday, July 28, 2009 5:23 AM  
Tuesday, July 28, 2009 05:23 AM  
Tuesday, July 28, 2009 5:23  
Tuesday, July 28, 2009 05:23  
July 28, 2009 5:23 AM  
July 28, 2009 05:23 AM  
July 28, 2009 5:23  
July 28, 2009 05:23  
Tuesday, 28 July, 2009 5:23 AM  
Tuesday, 28 July, 2009 05:23 AM  
Tuesday, 28 July, 2009 5:23  
Tuesday, 28 July, 2009 05:23  
28 July, 2009 5:23 AM  
28 July, 2009 05:23 AM  
28 July, 2009 5:23  
28 July, 2009 05:23  
Tuesday, July 28, 2009 5:23:15 AM  
Tuesday, July 28, 2009 05:23:15 AM  
Tuesday, July 28, 2009 5:23:15  
Tuesday, July 28, 2009 05:23:15  
July 28, 2009 5:23:15 AM  
July 28, 2009 05:23:15 AM  
July 28, 2009 5:23:15  
July 28, 2009 05:23:15  
Tuesday, 28 July, 2009 5:23:15 AM  
Tuesday, 28 July, 2009 05:23:15 AM  
Tuesday, 28 July, 2009 5:23:15  
Tuesday, 28 July, 2009 05:23:15  
28 July, 2009 5:23:15 AM  
28 July, 2009 05:23:15 AM  
28 July, 2009 5:23:15  
28 July, 2009 05:23:15  
7/28/2009 5:23 AM  
7/28/2009 05:23 AM  
7/28/2009 5:23  
7/28/2009 05:23  
7/28/09 5:23 AM  
7/28/09 05:23 AM  
7/28/09 5:23  
7/28/09 05:23  
07/28/09 5:23 AM  
07/28/09 05:23 AM  
07/28/09 5:23  
07/28/09 05:23  
07/28/2009 5:23 AM  
07/28/2009 05:23 AM  
07/28/2009 5:23  
07/28/2009 05:23  
09/07/28 5:23 AM  
09/07/28 05:23 AM  
09/07/28 5:23  
09/07/28 05:23  
2009-07-28 5:23 AM  
2009-07-28 05:23 AM  
2009-07-28 5:23  
2009-07-28 05:23  
28-Jul-09 5:23 AM  
28-Jul-09 05:23 AM  
28-Jul-09 5:23  
28-Jul-09 05:23  
7/28/2009 5:23:15 AM  
7/28/2009 05:23:15 AM  
7/28/2009 5:23:15  
7/28/2009 05:23:15  
7/28/09 5:23:15 AM  
7/28/09 05:23:15 AM  
7/28/09 5:23:15  
7/28/09 05:23:15  
07/28/09 5:23:15 AM  
07/28/09 05:23:15 AM  
07/28/09 5:23:15  
07/28/09 05:23:15  
07/28/2009 5:23:15 AM  
07/28/2009 05:23:15 AM  
07/28/2009 5:23:15  
07/28/2009 05:23:15  
09/07/28 5:23:15 AM  
09/07/28 05:23:15 AM  
09/07/28 5:23:15  
09/07/28 05:23:15  
2009-07-28 5:23:15 AM  
2009-07-28 05:23:15 AM  
2009-07-28 5:23:15  
2009-07-28 05:23:15  
28-Jul-09 5:23:15 AM  
28-Jul-09 05:23:15 AM  
28-Jul-09 5:23:15  
28-Jul-09 05:23:15  
July 28  
July 28  
2009-07-28T05:23:15.0160000  
2009-07-28T05:23:15.0160000  
Tue, 28 Jul 2009 05:23:15 GMT  
Tue, 28 Jul 2009 05:23:15 GMT  
2009-07-28T05:23:15  
5:23 AM  
05:23 AM  
5:23  
05:23  
5:23:15 AM  
05:23:15 AM  
5:23:15  
05:23:15  
2009-07-28 05:23:15Z  
Tuesday, July 28, 2009 12:23:15 PM  
Tuesday, July 28, 2009 12:23:15 PM  
Tuesday, July 28, 2009 12:23:15  
Tuesday, July 28, 2009 12:23:15  
July 28, 2009 12:23:15 PM  
July 28, 2009 12:23:15 PM  
July 28, 2009 12:23:15  
July 28, 2009 12:23:15  
Tuesday, 28 July, 2009 12:23:15 PM  
Tuesday, 28 July, 2009 12:23:15 PM  
Tuesday, 28 July, 2009 12:23:15  
Tuesday, 28 July, 2009 12:23:15  
28 July, 2009 12:23:15 PM  
28 July, 2009 12:23:15 PM  
28 July, 2009 12:23:15  
28 July, 2009 12:23:15  
July, 2009  
July, 2009  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1013">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1013">Standard Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeFormats">
      <MemberSignature Language="C#" Value="public string[] GetDateTimeFormats (char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDateTimeFormats(char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetDateTimeFormats(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeFormats (format As Char) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDateTimeFormats(char format);" />
      <MemberSignature Language="F#" Value="member this.GetDateTimeFormats : char -&gt; string[]" Usage="dateTime.GetDateTimeFormats format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="7ac35-1014">標準の日時書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1014">A standard date and time format string.</span></span></param>
        <summary><span data-ttu-id="7ac35-1015">このインスタンスの値を、指定した標準の日時形式指定子によってサポートされるすべての文字列表記に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1015">Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1016">各要素が <paramref name="format" /> 標準日時形式指定子で書式指定されたこのインスタンスの値を表す文字列配列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1016">A string array where each element is the representation of the value of this instance formatted with the <paramref name="format" /> standard date and time format specifier.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1017">`format`パラメーターには、標準の日付と時刻の書式指定子のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1017">The `format` parameter can be any of the standard date and time format specifiers.</span></span> <span data-ttu-id="7ac35-1018">D、D、f、F、g、G、M (または、m) O (または、o) R (r)、s、t、T、u、U、および Y (または y) が含まれます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1018">These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y).</span></span> <span data-ttu-id="7ac35-1019">詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1019">For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="7ac35-1020">現在のカルチャから情報を使用して、戻り値の各要素が書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1020">Each element of the return value is formatted using information from the current culture.</span></span> <span data-ttu-id="7ac35-1021">現在のカルチャのカルチャに固有の書式設定情報の詳細については、次を参照してください。<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1021">For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7ac35-1022">このメソッドは、カルチャに依存するデータを使用するためしないメソッドを複数回呼び出すのと同じデータが返されると想定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1022">Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data.</span></span> <span data-ttu-id="7ac35-1023">現在のカルチャの変更、ユーザーが個々 のカルチャ設定をオーバーライドまたはシステムのカルチャのデータに更新が発生する場合、このメソッドによって返されるデータを変更できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1023">The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1024">次の例で、<xref:System.DateTime.GetDateTimeFormats%28System.Char%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1024">The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.Char%29> method.</span></span> <span data-ttu-id="7ac35-1025">現在のカルチャの長い日付の書式指定子 ("D") を使用して日付の文字列表現が表示されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1025">It displays the string representation of a date using the long date format specifier ("D") for the current culture.</span></span>  
  
 [!code-csharp[DateTime.GetDateTimeFormats#3](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#3)]
 [!code-vb[DateTime.GetDateTimeFormats#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="7ac35-1026"><paramref name="format" /> は有効な標準日時形式指定子の文字ではありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1026"><paramref name="format" /> is not a valid standard date and time format specifier character.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1027">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1027">Standard Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeFormats">
      <MemberSignature Language="C#" Value="public string[] GetDateTimeFormats (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDateTimeFormats(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetDateTimeFormats(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeFormats (provider As IFormatProvider) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDateTimeFormats(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="member this.GetDateTimeFormats : IFormatProvider -&gt; string[]" Usage="dateTime.GetDateTimeFormats provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ac35-1028">このインスタンスに関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1028">An object that supplies culture-specific formatting information about this instance.</span></span></param>
        <summary><span data-ttu-id="7ac35-1029">このインスタンスの値を、標準日時形式指定子および指定したカルチャ固有の書式情報によってサポートされる、すべての文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1029">Converts the value of this instance to all the string representations supported by the standard date and time format specifiers and the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1030">要素を格納した文字列配列。要素は、標準日時形式指定子のいずれかで書式指定されたこのインスタンスの値を表します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1030">A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1031">によって返される文字列配列、<xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=nameWithType>メソッドは、別の呼び出しによって返された文字列配列に結合する、<xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドを"d"、"D"、"f"、"F"、"g"、"G"、"m"、"o"、"r"、"s"、"t"、"T"、"u"、"U"および"y"標準書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1031">The string array returned by the <xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=nameWithType> method is equivalent to combining the string arrays returned by separate calls to the <xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method with the "d", "D", "f", "F", "g", "G", "m", "o", "r", "s", "t", "T", "u", "U", and "y" standard format strings.</span></span> <span data-ttu-id="7ac35-1032">標準書式指定子の詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1032">For more information about standard format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="7ac35-1033">によって指定されたカルチャに固有の情報を使用して、戻り値の各要素が書式設定`provider`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1033">Each element of the return value is formatted using culture-specific information supplied by `provider`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7ac35-1034">しない限り、メソッドに複数の呼び出しが同一のデータを返すことを想定しないでくださいこのメソッドは、カルチャに依存するデータを使用しているため`provider`は、<xref:System.Globalization.CultureInfo>インバリアント カルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1034">Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture.</span></span> <span data-ttu-id="7ac35-1035">ユーザーの個々 のカルチャ設定をオーバーライドする場合、このメソッドによって返されるデータは変更できます`provider`をシステムのカルチャのデータの更新が発生した場合または`provider`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1035">The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1036">次の例で、<xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1036">The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7ac35-1037">すべての可能な標準の日付と時刻の形式を使用して、FR-FR カルチャの日付の文字列表現が表示されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1037">It displays the string representation of a date using all possible standard date and time formats for the fr-FR culture.</span></span>  
  
 [!code-cpp[DateTime.GetDateTimeFormats#2](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CPP/class1.cpp#2)]
 [!code-csharp[DateTime.GetDateTimeFormats#2](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#2)]
 [!code-vb[DateTime.GetDateTimeFormats#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#2)]  
  
 <span data-ttu-id="7ac35-1038">この例では、次の出力が表示されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1038">The example displays the following output:</span></span>  
  
```  
28/07/2009  
28/07/09  
28.07.09  
28-07-09  
2009-07-28  
mardi 28 juillet 2009  
28 juil. 09  
28 juillet 2009  
mardi 28 juillet 2009 05:23  
mardi 28 juillet 2009 5:23  
mardi 28 juillet 2009 05.23  
mardi 28 juillet 2009 05 h 23  
28 juil. 09 05:23  
28 juil. 09 5:23  
28 juil. 09 05.23  
28 juil. 09 05 h 23  
28 juillet 2009 05:23  
28 juillet 2009 5:23  
28 juillet 2009 05.23  
28 juillet 2009 05 h 23  
mardi 28 juillet 2009 05:23:15  
mardi 28 juillet 2009 5:23:15  
mardi 28 juillet 2009 05.23  
mardi 28 juillet 2009 05 h 23  
28 juil. 09 05:23:15  
28 juil. 09 5:23:15  
28 juil. 09 05.23  
28 juil. 09 05 h 23  
28 juillet 2009 05:23:15  
28 juillet 2009 5:23:15  
28 juillet 2009 05.23  
28 juillet 2009 05 h 23  
28/07/2009 05:23  
28/07/2009 5:23  
28/07/2009 05.23  
28/07/2009 05 h 23  
28/07/09 05:23  
28/07/09 5:23  
28/07/09 05.23  
28/07/09 05 h 23  
28.07.09 05:23  
28.07.09 5:23  
28.07.09 05.23  
28.07.09 05 h 23  
28-07-09 05:23  
28-07-09 5:23  
28-07-09 05.23  
28-07-09 05 h 23  
2009-07-28 05:23  
2009-07-28 5:23  
2009-07-28 05.23  
2009-07-28 05 h 23  
28/07/2009 05:23:15  
28/07/2009 5:23:15  
28/07/2009 05.23  
28/07/2009 05 h 23  
28/07/09 05:23:15  
28/07/09 5:23:15  
28/07/09 05.23  
28/07/09 05 h 23  
28.07.09 05:23:15  
28.07.09 5:23:15  
28.07.09 05.23  
28.07.09 05 h 23  
28-07-09 05:23:15  
28-07-09 5:23:15  
28-07-09 05.23  
28-07-09 05 h 23  
2009-07-28 05:23:15  
2009-07-28 5:23:15  
2009-07-28 05.23  
2009-07-28 05 h 23  
28 juillet  
28 juillet  
2009-07-28T05:23:15.0160000  
2009-07-28T05:23:15.0160000  
Tue, 28 Jul 2009 05:23:15 GMT  
Tue, 28 Jul 2009 05:23:15 GMT  
2009-07-28T05:23:15  
05:23  
5:23  
05.23  
05 h 23  
05:23:15  
5:23:15  
05.23  
05 h 23  
2009-07-28 05:23:15Z  
mardi 28 juillet 2009 12:23:15  
mardi 28 juillet 2009 12:23:15  
mardi 28 juillet 2009 12.23  
mardi 28 juillet 2009 12 h 23  
28 juil. 09 12:23:15  
28 juil. 09 12:23:15  
28 juil. 09 12.23  
28 juil. 09 12 h 23  
28 juillet 2009 12:23:15  
28 juillet 2009 12:23:15  
28 juillet 2009 12.23  
28 juillet 2009 12 h 23  
juillet 2009  
juillet 2009  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1039">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1039">Standard Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeFormats">
      <MemberSignature Language="C#" Value="public string[] GetDateTimeFormats (char format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDateTimeFormats(char format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeFormats (format As Char, provider As IFormatProvider) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDateTimeFormats(char format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="member this.GetDateTimeFormats : char * IFormatProvider -&gt; string[]" Usage="dateTime.GetDateTimeFormats (format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="7ac35-1040">日時書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1040">A date and time format string.</span></span></param>
        <param name="provider"><span data-ttu-id="7ac35-1041">このインスタンスに関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1041">An object that supplies culture-specific formatting information about this instance.</span></span></param>
        <summary><span data-ttu-id="7ac35-1042">このインスタンスの値を、指定した標準日時形式指定子およびカルチャ固有の書式情報によってサポートされる、すべての文字列表記に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1042">Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier and culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1043">要素を格納した文字列配列。要素は、標準日時形式指定子のいずれかで書式指定されたこのインスタンスの値を表します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1043">A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1044">Format パラメーターには、標準の日付と時刻の書式指定子のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1044">The format parameter can be any of the standard date and time format specifiers.</span></span> <span data-ttu-id="7ac35-1045">D、D、f、F、g、G、M (または、m) O (または、o) R (r)、s、t、T、u、U、および Y (または y) が含まれます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1045">These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y).</span></span> <span data-ttu-id="7ac35-1046">詳細については、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1046">For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="7ac35-1047">によって指定されたカルチャに固有の情報を使用して、戻り値の各要素が書式設定`provider`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1047">Each element of the return value is formatted using culture-specific information supplied by `provider`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7ac35-1048">しない限り、メソッドに複数の呼び出しが同一のデータを返すことを想定しないでくださいこのメソッドは、カルチャに依存するデータを使用しているため`provider`は、<xref:System.Globalization.CultureInfo>インバリアント カルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1048">Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture.</span></span> <span data-ttu-id="7ac35-1049">ユーザーの個々 のカルチャ設定をオーバーライドする場合、このメソッドによって返されるデータは変更できます`provider`をシステムのカルチャのデータの更新が発生した場合または`provider`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1049">The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1050">次の例で、<xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1050">The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="7ac35-1051">FR-FR カルチャの短い形式の日付の書式指定子 ("d") を使用して日付の文字列表現が表示されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1051">It displays the string representations of a date using the short date format specifier ("d") for the fr-FR culture.</span></span>  
  
 [!code-csharp[DateTime.GetDateTimeFormats#4](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#4)]
 [!code-vb[DateTime.GetDateTimeFormats#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="7ac35-1052"><paramref name="format" /> は有効な標準日時形式指定子の文字ではありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1052"><paramref name="format" /> is not a valid standard date and time format specifier character.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1053">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1053">Standard Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dateTime.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ac35-1054">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1054">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1055">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1055">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="dateTime.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ac35-1056"><see cref="T:System.TypeCode" /> 値型の <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1056">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1057">列挙型定数 <see cref="F:System.TypeCode.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1057">The enumerated constant, <see cref="F:System.TypeCode.DateTime" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public int Hour { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hour" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Hour" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hour As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hour { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Hour : int" Usage="System.DateTime.Hour" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ac35-1058">このインスタンスで表される日付の時間の部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1058">Gets the hour component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="7ac35-1059">DateTime の時間部分 (0 ～ 23)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1059">The hour component, expressed as a value between 0 and 23.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1060">値、 <xref:System.DateTime.Hour%2A> 24 時間制を使用してプロパティが常に表現します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1060">The value of the <xref:System.DateTime.Hour%2A> property is always expressed using a 24-hour clock.</span></span> <span data-ttu-id="7ac35-1061">日付と時刻を 12 時間制を使用して時間を表す文字列を取得する、<xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>または<xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>"h"カスタム書式指定子を持つメソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1061">To retrieve a string that represents the hour of a date and time using a 12-hour clock, call the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> or <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method with the "h" custom format specifier.</span></span> <span data-ttu-id="7ac35-1062">例:</span><span class="sxs-lookup"><span data-stu-id="7ac35-1062">For example:</span></span>  
  
 [!code-csharp[System.DateTime.Hour#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Hour/cs/Hour1.cs#1)]
 [!code-vb[System.DateTime.Hour#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Hour/vb/Hour1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1063">次の例で、<xref:System.DateTime.Hour%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1063">The following example demonstrates the <xref:System.DateTime.Hour%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public bool IsDaylightSavingTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDaylightSavingTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.IsDaylightSavingTime" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDaylightSavingTime () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDaylightSavingTime();" />
      <MemberSignature Language="F#" Value="member this.IsDaylightSavingTime : unit -&gt; bool" Usage="dateTime.IsDaylightSavingTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ac35-1064"><see cref="T:System.DateTime" /> のインスタンスが、現在のタイム ゾーンの夏時間の期間内であるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1064">Indicates whether this instance of <see cref="T:System.DateTime" /> is within the daylight saving time range for the current time zone.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1065"><see langword="true" /> プロパティの値が <see cref="P:System.DateTime.Kind" /> または <see cref="F:System.DateTimeKind.Local" /> で、この <see cref="F:System.DateTimeKind.Unspecified" /> インスタンスの値がローカル タイム ゾーンの夏時間の期間内にある場合は <see cref="T:System.DateTime" />。<see langword="false" /> が <see cref="P:System.DateTime.Kind" /> の場合は <see cref="F:System.DateTimeKind.Utc" />。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1065"><see langword="true" /> if the value of the <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Local" /> or <see cref="F:System.DateTimeKind.Unspecified" /> and the value of this instance of <see cref="T:System.DateTime" /> is within the daylight saving time range for the local time zone; <see langword="false" /> if <see cref="P:System.DateTime.Kind" /> is <see cref="F:System.DateTimeKind.Utc" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1066">このメソッドを判断するかどうか、現在<xref:System.DateTime>値がによって返される、ローカル タイム ゾーンの夏時間の範囲に収まる、<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1066">This method determines whether the current <xref:System.DateTime> value falls within the daylight saving time range of the local time zone, which is returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="7ac35-1067">値を取得することによって、タイム ゾーンが夏時間をサポートするかどうかを判断することができます、<xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1067">You can determine whether a time zone supports daylight saving time by retrieving the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="7ac35-1068">夏時間タイム ゾーンを取得することによって夏時間からの移行のタイミングを決定できます、<xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType>タイム ゾーンのによって返される配列<xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1068">For time zones that observe daylight saving time, you can determine when the transition to and from daylight saving time occurs by retrieving the <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType> array returned by the time zone's <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="7ac35-1069">場合、現在<xref:System.DateTime>値は、ローカル タイム ゾーンで、あいまいであるか、無効な時間のいずれかを表す、メソッドを返します`false`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1069">If the current <xref:System.DateTime> value represents either an ambiguous or an invalid time in the local time zone, the method returns `false`.</span></span>  
  
 <span data-ttu-id="7ac35-1070">[!INCLUDE[winxp](~/includes/winxp-md.md)] 、システム、<xref:System.DateTime.IsDaylightSavingTime%2A>メソッドは、現在のインスタンスに、夏時間があるかどうかを決定するときに、現在の調整規則のみを認識します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1070">On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.IsDaylightSavingTime%2A> method recognizes only the current adjustment rule when determining whether the current instance is a daylight saving time.</span></span> <span data-ttu-id="7ac35-1071">結果として、メソッド可能性がありますいない正確に報告、現在のインスタンスが、現在の調整規則を有効にされる前に、の期間が夏時間をかどうか。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1071">As a result, the method may not accurately report whether the current instance is a daylight saving time for periods before the current adjustment rule came into effect.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public static bool IsLeapYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLeapYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.IsLeapYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLeapYear (year As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLeapYear(int year);" />
      <MemberSignature Language="F#" Value="static member IsLeapYear : int -&gt; bool" Usage="System.DateTime.IsLeapYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="7ac35-1072">4 桁の年。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1072">A 4-digit year.</span></span></param>
        <summary><span data-ttu-id="7ac35-1073">指定された年が閏年かどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1073">Returns an indication whether the specified year is a leap year.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1074"><see langword="true" /> が閏年である場合は <paramref name="year" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1074"><see langword="true" /> if <paramref name="year" /> is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1075">`year` 4 桁の 10 進; として指定されます。たとえば、1996 です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1075">`year` is specified as a 4-digit base 10 number; for example, 1996.</span></span>  
  
 <span data-ttu-id="7ac35-1076">`year` 常に、構成のグレゴリオ暦カレンダーにおける年として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1076">`year` is always interpreted as a year in the Gregorian calendar.</span></span> <span data-ttu-id="7ac35-1077">他のカレンダーで特定の年が閏年をしたかどうかを判断する呼び出し、暦オブジェクトの`IsLeapYear`メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1077">To determine whether a particular year was a leap year in some other calendar, call that calendar object's `IsLeapYear` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1078">次の例では、<xref:System.DateTime.IsLeapYear%2A>メソッドをどの 1994 と 2014 年が閏年であるかを確認します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1078">The following example uses the <xref:System.DateTime.IsLeapYear%2A> method to determine which years between 1994 and 2014 are leap years.</span></span> <span data-ttu-id="7ac35-1079">結果も示すときに、<xref:System.DateTime.AddYears%2A>閏日に年を追加するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1079">The example also illustrates the result when the <xref:System.DateTime.AddYears%2A> method is used to add a year to a leap day.</span></span>  
  
 [!code-csharp[System.DateTime.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.IsLeapYear/cs/IsLeapYear1.cs#1)]
 [!code-vb[System.DateTime.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.IsLeapYear/vb/IsLeapYear1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-1080"><paramref name="year" /> が 1 未満であるか、または 9999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1080"><paramref name="year" /> is less than 1 or greater than 9999.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Kind">
      <MemberSignature Language="C#" Value="public DateTimeKind Kind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeKind Kind" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Kind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Kind As DateTimeKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTimeKind Kind { DateTimeKind get(); };" />
      <MemberSignature Language="F#" Value="member this.Kind : DateTimeKind" Usage="System.DateTime.Kind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ac35-1081">このインスタンスが表す時刻の種類 (現地時刻、世界協定時刻 (UTC)、または、そのどちらでもない) を示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1081">Gets a value that indicates whether the time represented by this instance is based on local time, Coordinated Universal Time (UTC), or neither.</span></span></summary>
        <value><span data-ttu-id="7ac35-1082">現在の時刻が表すものを示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1082">One of the enumeration values that indicates what the current time represents.</span></span> <span data-ttu-id="7ac35-1083">既定値は、<see cref="F:System.DateTimeKind.Unspecified" /> です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1083">The default is <see cref="F:System.DateTimeKind.Unspecified" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1084">明示的に設定することができます、<xref:System.DateTime.Kind%2A>プロパティの新しい<xref:System.DateTime>を特定の値<xref:System.DateTimeKind>値を呼び出すことによって、<xref:System.DateTime.SpecifyKind%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1084">You can explicitly set the <xref:System.DateTime.Kind%2A> property of a new <xref:System.DateTime> value to a particular <xref:System.DateTimeKind> value by calling the <xref:System.DateTime.SpecifyKind%2A> method.</span></span>  
  
 <span data-ttu-id="7ac35-1085"><xref:System.DateTime.Kind%2A>プロパティにより、<xref:System.DateTime>世界協定時刻 (UTC) または現地時刻のいずれかを明確に反映するように値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1085">The <xref:System.DateTime.Kind%2A> property allows a <xref:System.DateTime> value to clearly reflect either Coordinated Universal Time (UTC) or the local time.</span></span> <span data-ttu-id="7ac35-1086">これに対し、<xref:System.DateTimeOffset>構造体は時間で 1 つのポイントとして任意のタイム ゾーンでいつでもを明確に反映できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1086">In contrast, the <xref:System.DateTimeOffset> structure can unambiguously reflect any time in any time zone as a single point in time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1087">次の例では、<xref:System.DateTime.SpecifyKind%2A>メソッドを示すために、どのように<xref:System.DateTime.Kind%2A>プロパティの影響、<xref:System.DateTime.ToLocalTime%2A>と<xref:System.DateTime.ToUniversalTime%2A>変換メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1087">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly DateTime MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.DateTime.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime MaxValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxValue : DateTime" Usage="System.DateTime.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ac35-1088"><see cref="T:System.DateTime" /> の最大有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1088">Represents the largest possible value of <see cref="T:System.DateTime" />.</span></span> <span data-ttu-id="7ac35-1089">このフィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1089">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1090">この定数の値と同じです 23:59:59.9999999 (UTC) 12 月 31 日 9999 グレゴリオ暦の 00時 00分: 00 UTC、10000 1 月 1 日の前に 1 つの 100 ナノ秒タイマー刻みで。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1090">The value of this constant is equivalent to 23:59:59.9999999 UTC, December 31, 9999 in the Gregorian calendar, exactly one 100-nanosecond tick before 00:00:00 UTC, January 1, 10000.</span></span>  
  
 <span data-ttu-id="7ac35-1091">などの一部の暦、<xref:System.Globalization.ThaiBuddhistCalendar>より前である日付範囲をサポートして<xref:System.DateTime.MaxValue>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1091">Some calendars, such as the <xref:System.Globalization.ThaiBuddhistCalendar>, support an upper date range that is earlier than <xref:System.DateTime.MaxValue>.</span></span> <span data-ttu-id="7ac35-1092">このような場合にアクセスしようとして<xref:System.DateTime.MaxValue>変数の代入、または書式設定と解析操作ではスロー、<xref:System.ArgumentOutOfRangeException>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1092">In these cases, trying to access <xref:System.DateTime.MaxValue> in variable assignments or formatting and parsing operations can throw an <xref:System.ArgumentOutOfRangeException>.</span></span> <span data-ttu-id="7ac35-1093">値を取得するのではなく<xref:System.DateTime.MaxValue?displayProperty=nameWithType>、最新の有効な日付値を指定したカルチャの値を取得することができます、<xref:System.Globalization.Calendar.MaxSupportedDateTime?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1093">Rather than retrieving the value of <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, you can retrieve the value of the specified culture's latest valid date value from the <xref:System.Globalization.Calendar.MaxSupportedDateTime?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1094">次の例では、インスタンス化、<xref:System.DateTime>コンス トラクターに渡して、オブジェクト、<xref:System.Int64>タイマー刻みの数を表す値です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1094">The following example instantiates a <xref:System.DateTime> object by passing its constructor an <xref:System.Int64> value that represents a number of ticks.</span></span> <span data-ttu-id="7ac35-1095">この値より大きいまたは等しいが例では、コンス トラクターを呼び出す前ににより`DateTime.MinValue.Ticks`以下と等しい、`DateTime.MaxValue.Ticks`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1095">Before invoking the constructor, the example ensures that this value is greater than or equal to `DateTime.MinValue.Ticks` and less than or equal to `DateTime.MaxValue.Ticks`.</span></span> <span data-ttu-id="7ac35-1096">そうでないをスローした場合、<xref:System.ArgumentOutOfRangeException>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1096">If not, it throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 [!code-csharp[System.DateTime.MinValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#2)]
 [!code-vb[System.DateTime.MinValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DateTime.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="Millisecond">
      <MemberSignature Language="C#" Value="public int Millisecond { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Millisecond" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Millisecond" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Millisecond As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Millisecond { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Millisecond : int" Usage="System.DateTime.Millisecond" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ac35-1097">このインスタンスで表される日付のミリ秒の部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1097">Gets the milliseconds component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="7ac35-1098">DateTime のミリ秒部分 (0 ～ 999)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1098">The milliseconds component, expressed as a value between 0 and 999.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1099">文字列表現を表示することができます、 <xref:System.DateTime.Millisecond%2A> "fff"書式指定子を使用してプロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1099">You can display the string representation of the <xref:System.DateTime.Millisecond%2A> property by using the "fff" format specifier.</span></span> <span data-ttu-id="7ac35-1100">たとえば、次のコードでは、日付と時刻のコンソールでのミリ秒数を含む文字列が表示されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1100">For example, the following code displays a string that contains the number of milliseconds in a date and time to the console.</span></span>  
  
 [!code-csharp[System.DateTime.Millisecond#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#1)]
 [!code-vb[System.DateTime.Millisecond#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#1)]  
  
 <span data-ttu-id="7ac35-1101">"O"標準書式指定子を使用して日付と時刻の値の他のコンポーネントと共にミリ秒の部分を表示することもできます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1101">You can also display the millisecond component together with the other components of a date and time value by using the "o" standard format specifier.</span></span> <span data-ttu-id="7ac35-1102">例:</span><span class="sxs-lookup"><span data-stu-id="7ac35-1102">For example:</span></span>  
  
 [!code-csharp[System.DateTime.Millisecond#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#2)]
 [!code-vb[System.DateTime.Millisecond#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#2)]  
  
 <span data-ttu-id="7ac35-1103">ただし、"o"書式指定子のラウンド トリップまたは格納するよりも表示するために小さいものが、<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1103">However, the "o" format specifier is intended less for displaying than for round-tripping or storing a <xref:System.DateTime> value.</span></span> <span data-ttu-id="7ac35-1104">として次の例は、カスタム書式指定文字列を使用して、その他の日付と時刻のコンポーネントと共にミリ秒を表示することもできます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1104">You can also display milliseconds together with other date and time components by using a custom format string, as the following example shows.</span></span>  
  
 [!code-csharp[System.DateTime.Millisecond#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#3)]
 [!code-vb[System.DateTime.Millisecond#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1105">次の例で、<xref:System.DateTime.Millisecond%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1105">The following example demonstrates the <xref:System.DateTime.Millisecond%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public int Minute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minute" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Minute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minute As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minute { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Minute : int" Usage="System.DateTime.Minute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ac35-1106">このインスタンスで表される日付の分の部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1106">Gets the minute component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="7ac35-1107">DateTime の分の部分 (0 ～ 59)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1107">The minute component, expressed as a value between 0 and 59.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ac35-1108">次の例で、<xref:System.DateTime.Minute%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1108">The following example demonstrates the <xref:System.DateTime.Minute%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly DateTime MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime MinValue" />
      <MemberSignature Language="DocId" Value="F:System.DateTime.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime MinValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinValue : DateTime" Usage="System.DateTime.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ac35-1109"><see cref="T:System.DateTime" /> の最小有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1109">Represents the smallest possible value of <see cref="T:System.DateTime" />.</span></span> <span data-ttu-id="7ac35-1110">このフィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1110">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1111">この定数の値はグレゴリオ暦の 0001 年 1 月 1日 00:00:00.0000000 (UTC) に相当します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1111">The value of this constant is equivalent to 00:00:00.0000000 UTC, January 1, 0001, in the Gregorian calendar.</span></span>  
  
 <span data-ttu-id="7ac35-1112"><xref:System.DateTime.MinValue> 割り当てられている日時を定義する、初期化されていない<xref:System.DateTime>変数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1112"><xref:System.DateTime.MinValue> defines the date and time that is assigned to an uninitialized <xref:System.DateTime> variable.</span></span> <span data-ttu-id="7ac35-1113">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1113">The following example illustrates this.</span></span>  
  
 [!code-csharp[System.DateTime.MinValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#1)]
 [!code-vb[System.DateTime.MinValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#1)]  
  
 <span data-ttu-id="7ac35-1114"><xref:System.DateTime.MinValue>と<xref:System.DateTime.MaxValue>プロパティを使用して、値に渡す前に、サポートされている範囲内にあることを確認、<xref:System.DateTime>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1114">The <xref:System.DateTime.MinValue> and <xref:System.DateTime.MaxValue> properties can be used to ensure that a value lies within the supported range before passing it to a <xref:System.DateTime> constructor.</span></span> <span data-ttu-id="7ac35-1115">例のセクションのコードでは、この使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1115">The code in the Example section illustrates this usage.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1116">次の例では、インスタンス化、<xref:System.DateTime>コンス トラクターに渡して、オブジェクト、<xref:System.Int64>タイマー刻みの数を表す値です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1116">The following example instantiates a <xref:System.DateTime> object by passing its constructor an <xref:System.Int64> value that represents a number of ticks.</span></span> <span data-ttu-id="7ac35-1117">この値より大きいまたは等しいが例では、コンス トラクターを呼び出す前ににより`DateTime.MinValue.Ticks`以下と等しい、`DateTime.MaxValue.Ticks`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1117">Before invoking the constructor, the example ensures that this value is greater than or equal to `DateTime.MinValue.Ticks` and less than or equal to `DateTime.MaxValue.Ticks`.</span></span> <span data-ttu-id="7ac35-1118">そうでないをスローした場合、<xref:System.ArgumentOutOfRangeException>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1118">If not, it throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 [!code-csharp[System.DateTime.MinValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#2)]
 [!code-vb[System.DateTime.MinValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public int Month { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Month" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Month" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Month As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Month { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Month : int" Usage="System.DateTime.Month" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ac35-1119">このインスタンスで表される日付の月の部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1119">Gets the month component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="7ac35-1120">DateTime の月部分 (1 ～ 12)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1120">The month component, expressed as a value between 1 and 12.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ac35-1121">次の例で、<xref:System.DateTime.Month%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1121">The following example demonstrates the <xref:System.DateTime.Month%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Now">
      <MemberSignature Language="C#" Value="public static DateTime Now { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Now" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Now" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Now As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Now { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Now : DateTime" Usage="System.DateTime.Now" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ac35-1122">コンピューター上の現在の日時を現地時刻で表した <see cref="T:System.DateTime" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1122">Gets a <see cref="T:System.DateTime" /> object that is set to the current date and time on this computer, expressed as the local time.</span></span></summary>
        <value><span data-ttu-id="7ac35-1123">現在の現地日時を値として保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1123">An object whose value is the current local date and time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1124"><xref:System.DateTime.Now%2A>プロパティが返す、<xref:System.DateTime>現在の日付とローカル コンピューターの時刻を表す値です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1124">The <xref:System.DateTime.Now%2A> property returns a <xref:System.DateTime> value that represents the current date and time on the local computer.</span></span> <span data-ttu-id="7ac35-1125">間に相違があることに注意してください、<xref:System.DateTime>を 0001 年 1 月 1 日午前 0 時から経過したタイマー刻みの数を表す値の文字列表現と<xref:System.DateTime>表現で日付と時刻の値の値を特定のカルチャ固有の形式です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1125">Note that there is a difference between a <xref:System.DateTime> value, which represents the number of ticks that have elapsed since midnight of January 1, 0001, and the string representation of that <xref:System.DateTime> value, which expresses a date and time value in a culture-specific-specific format.</span></span> <span data-ttu-id="7ac35-1126">日付と時刻の値を書式設定については、次を参照してください。、<xref:System.DateTime.ToString%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1126">For information on formatting date and time values, see the <xref:System.DateTime.ToString%2A> method.</span></span> <span data-ttu-id="7ac35-1127">次の例では、さまざまなカルチャ固有の形式で、短い形式の日付と時刻の文字列が表示されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1127">The following example displays the short date and time string in a number of culture-specific formats.</span></span>  
  
 [!code-cpp[System.DateTime.Now#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/now1.cpp#2)]
 [!code-csharp[System.DateTime.Now#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/now1.cs#2)]
 [!code-vb[System.DateTime.Now#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/now1.vb#2)]  
  
 <span data-ttu-id="7ac35-1128">このプロパティの解像度は、基になるオペレーティング システムに依存するシステム タイマーに依存します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1128">The resolution of this property depends on the system timer, which depends on the underlying operating system.</span></span> <span data-ttu-id="7ac35-1129">0.5 と 15 ミリ秒の間にする傾向にあります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1129">It tends to be between 0.5 and 15 milliseconds.</span></span> <span data-ttu-id="7ac35-1130">その結果への呼び出しを繰り返し、<xref:System.DateTime.Now%2A>ループのようにこのような短い形式の時刻の間隔でプロパティが同じ値を返す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1130">As a result, repeated calls to the <xref:System.DateTime.Now%2A> property in a short time interval, such as in a loop, may return the same value.</span></span>  
  
 <span data-ttu-id="7ac35-1131"><xref:System.DateTime.Now%2A>プロパティは、パフォーマンスの測定に頻繁に使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1131">The <xref:System.DateTime.Now%2A> property is frequently used to measure performance.</span></span> <span data-ttu-id="7ac35-1132">ただし、ため、低解像度、ベンチマーク ツールとしての使用に適したはありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1132">However, because of its low resolution, it is not suitable for use as a benchmarking tool.</span></span> <span data-ttu-id="7ac35-1133">優れた代替を使用して、<xref:System.Diagnostics.Stopwatch>クラス。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1133">A better alternative is to use the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 <span data-ttu-id="7ac35-1134">以降、.NET Framework version 2.0 では、戻り値は、<xref:System.DateTime>が<xref:System.DateTime.Kind%2A>プロパティが返す<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1134">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7ac35-1135">使用することも、<xref:System.DateTimeOffset.Now%2A?displayProperty=nameWithType>プロパティを現在の日付と時刻を取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1135">You can also use the <xref:System.DateTimeOffset.Now%2A?displayProperty=nameWithType> property to retrieve the current local date and time.</span></span> <span data-ttu-id="7ac35-1136">現地時刻を時刻で、さらに、その時刻の値の移植性のコンピューター間でのシングル ポイントとして明確に表現できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1136">It allows a local time to be expressed unambiguously as a single point in time, which in turn makes that time value portable across computers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1137">次の例では、<xref:System.DateTime.Now%2A>と<xref:System.DateTime.UtcNow%2A>現在のローカルの日付と時刻と現在のユニバーサルを取得するプロパティ (UTC) の日付と時刻を調整します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1137">The following example uses the <xref:System.DateTime.Now%2A> and <xref:System.DateTime.UtcNow%2A> properties to retrieve the current local date and time and the current universal coordinated (UTC) date and time.</span></span> <span data-ttu-id="7ac35-1138">値を持つと共に、文字列を表示する次のカルチャの数値の書式指定規則を使用して、その<xref:System.DateTime.Kind%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1138">It then uses the formatting conventions of a number of cultures to display the strings, along with the values of the their <xref:System.DateTime.Kind%2A> properties.</span></span>  
  
 [!code-cpp[System.DateTime.Now#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/now2.cpp#3)]
 [!code-csharp[System.DateTime.Now#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/now2.cs#3)]
 [!code-vb[System.DateTime.Now#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/now2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.Now" />
        <altmember cref="P:System.DateTime.UtcNow" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static DateTime operator + (DateTime d, TimeSpan t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTime op_Addition(valuetype System.DateTime d, valuetype System.TimeSpan t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Addition(System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (d As DateTime, t As TimeSpan) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime operator +(DateTime d, TimeSpan t);" />
      <MemberSignature Language="F#" Value="static member ( + ) : DateTime * TimeSpan -&gt; DateTime" Usage="d + t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.DateTime" />
        <Parameter Name="t" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ac35-1139">追加する日付と時刻の値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1139">The date and time value to add.</span></span></param>
        <param name="t"><span data-ttu-id="7ac35-1140">加算する時間間隔。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1140">The time interval to add.</span></span></param>
        <summary><span data-ttu-id="7ac35-1141">指定した日付と時刻に指定した時間間隔を加算して、新しい日付と時刻を作成します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1141">Adds a specified time interval to a specified date and time, yielding a new date and time.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1142"><paramref name="d" /> に <paramref name="t" /> を加算した値であるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1142">An object that is the sum of the values of <paramref name="d" /> and <paramref name="t" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="7ac35-1143">この演算子を同等のメソッドは、します。 <xref:System.DateTime.Add%28System.TimeSpan%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ac35-1143">The equivalent method for this operator is <xref:System.DateTime.Add%28System.TimeSpan%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="7ac35-1144">次の例では、加算演算子を示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1144">The following example demonstrates the addition operator.</span></span>  
  
 [!code-cpp[DateTime Operators#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime Operators/CPP/class1.cpp#1)]
 [!code-csharp[DateTime Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime Operators/CS/class1.cs#1)]
 [!code-vb[DateTime Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime Operators/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-1145">結果として返された <see cref="T:System.DateTime" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1145">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Add(System.TimeSpan)" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.DateTime.Ticks" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="7ac35-1146">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="7ac35-1146">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (DateTime d1, DateTime d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.DateTime d1, valuetype System.DateTime d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Equality(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (d1 As DateTime, d2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(DateTime d1, DateTime d2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : DateTime * DateTime -&gt; bool" Usage="d1 = d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.DateTime" />
        <Parameter Name="d2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ac35-1147">比較する最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1147">The first object to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="7ac35-1148">比較する 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1148">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="7ac35-1149"><see cref="T:System.DateTime" /> の 2 つの指定したインスタンスが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1149">Determines whether two specified instances of <see cref="T:System.DateTime" /> are equal.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1150"><see langword="true" /> と <paramref name="d1" /> が同じ日付と時刻を表す場合は <paramref name="d2" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1150"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> represent the same date and time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1151"><xref:System.DateTime.op_Equality%2A>演算子は、2 つかどうかを決定します。<xref:System.DateTime>タイマー刻みの数を比較することによって値が等しい。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1151">The <xref:System.DateTime.op_Equality%2A> operator determines whether two <xref:System.DateTime> values are equal by comparing their number of ticks.</span></span> <span data-ttu-id="7ac35-1152">比較する前に<xref:System.DateTime>オブジェクト、オブジェクトが同じタイム ゾーンで時刻を表すことを確認します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1152">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="7ac35-1153">これを行うには、<xref:System.DateTime.Kind%2A> プロパティの値を比較します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1153">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="7ac35-1154">この演算子を同等のメソッドは、します。 <xref:System.DateTime.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ac35-1154">The equivalent method for this operator is <xref:System.DateTime.Equals%28System.Object%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="7ac35-1155">次の例では、等値演算子を示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1155">The following example demonstrates the equality operator.</span></span>  
  
 [!code-cpp[DateTime Operators#2](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime Operators/CPP/class1.cpp#2)]
 [!code-csharp[DateTime Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime Operators/CS/class1.cs#2)]
 [!code-vb[DateTime Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime Operators/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Equals(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : DateTime * DateTime -&gt; bool" Usage="t1 &gt; t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="7ac35-1156">比較する最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1156">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="7ac35-1157">比較する 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1157">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="7ac35-1158">指定した <see cref="T:System.DateTime" /> が、指定したもう 1 つの <see cref="T:System.DateTime" /> より後の時刻かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1158">Determines whether one specified <see cref="T:System.DateTime" /> is later than another specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1159"><see langword="true" /> が <paramref name="t1" /> より遅い場合は <paramref name="t2" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1159"><see langword="true" /> if <paramref name="t1" /> is later than <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1160"><xref:System.DateTime.op_GreaterThan%2A>演算子は、2 つの間のリレーションシップを決定します。<xref:System.DateTime>タイマー刻みの数を比較することによっての値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1160">The <xref:System.DateTime.op_GreaterThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks.</span></span> <span data-ttu-id="7ac35-1161">比較する前に<xref:System.DateTime>オブジェクト、オブジェクトが同じタイム ゾーンで時刻を表すことを確認します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1161">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="7ac35-1162">これを行うには、<xref:System.DateTime.Kind%2A> プロパティの値を比較します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1162">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="7ac35-1163">この演算子を同等のメソッドは、します。 <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ac35-1163">The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : DateTime * DateTime -&gt; bool" Usage="t1 &gt;= t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="7ac35-1164">比較する最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1164">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="7ac35-1165">比較する 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1165">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="7ac35-1166">指定した 1 つの <see cref="T:System.DateTime" /> が、指定した別の <see cref="T:System.DateTime" /> と同じ日時またはそれより後の日時を表しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1166">Determines whether one specified <see cref="T:System.DateTime" /> represents a date and time that is the same as or later than another specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1167"><paramref name="t1" /> が <paramref name="t2" /> と同じかそれより遅い場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1167"><see langword="true" /> if <paramref name="t1" /> is the same as or later than <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1168"><xref:System.DateTime.op_GreaterThanOrEqual%2A>演算子は、2 つの間のリレーションシップを決定します。<xref:System.DateTime>タイマー刻みの数を比較することによっての値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1168">The <xref:System.DateTime.op_GreaterThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks.</span></span> <span data-ttu-id="7ac35-1169">比較する前に<xref:System.DateTime>オブジェクト、オブジェクトが同じタイム ゾーンで時刻を表すことを確認します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1169">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="7ac35-1170">これを行うには、<xref:System.DateTime.Kind%2A> プロパティの値を比較します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1170">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="7ac35-1171">この演算子を同等のメソッドは、します。 <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ac35-1171">The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (DateTime d1, DateTime d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.DateTime d1, valuetype System.DateTime d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Inequality(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (d1 As DateTime, d2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(DateTime d1, DateTime d2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : DateTime * DateTime -&gt; bool" Usage="System.DateTime.op_Inequality (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.DateTime" />
        <Parameter Name="d2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ac35-1172">比較する最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1172">The first object to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="7ac35-1173">比較する 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1173">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="7ac35-1174"><see cref="T:System.DateTime" /> の 2 つの指定したインスタンスが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1174">Determines whether two specified instances of <see cref="T:System.DateTime" /> are not equal.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1175"><see langword="true" /> と <paramref name="d1" /> が同じ日付と時刻を表していない場合は <paramref name="d2" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1175"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> do not represent the same date and time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1176"><xref:System.DateTime.op_Inequality%2A>演算子は、2 つかどうかを決定します。<xref:System.DateTime>タイマー刻みの数を比較することによって値が等しくないです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1176">The <xref:System.DateTime.op_Inequality%2A> operator determines whether two <xref:System.DateTime> values are not equal by comparing their number of ticks.</span></span> <span data-ttu-id="7ac35-1177">比較する前に<xref:System.DateTime>オブジェクト、オブジェクトが同じタイム ゾーンで時刻を表すことを確認します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1177">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="7ac35-1178">これを行うには、<xref:System.DateTime.Kind%2A> プロパティの値を比較します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1178">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="7ac35-1179">この演算子を同等のメソッドは、します。 <xref:System.DateTime.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ac35-1179">The equivalent method for this operator is <xref:System.DateTime.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_LessThan(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : DateTime * DateTime -&gt; bool" Usage="t1 &lt; t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="7ac35-1180">比較する最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1180">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="7ac35-1181">比較する 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1181">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="7ac35-1182">指定した <see cref="T:System.DateTime" /> が、指定したもう 1 つの <see cref="T:System.DateTime" /> より前の時刻かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1182">Determines whether one specified <see cref="T:System.DateTime" /> is earlier than another specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1183"><see langword="true" /> が <paramref name="t1" /> より早い場合は <paramref name="t2" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1183"><see langword="true" /> if <paramref name="t1" /> is earlier than <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1184"><xref:System.DateTime.op_LessThan%2A>演算子は、2 つの間のリレーションシップを決定します。<xref:System.DateTime>タイマー刻みの数を比較することによっての値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1184">The <xref:System.DateTime.op_LessThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks.</span></span> <span data-ttu-id="7ac35-1185">比較する前に<xref:System.DateTime>オブジェクト、オブジェクトが同じタイム ゾーンで時刻を表すことを確認します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1185">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="7ac35-1186">これを行うには、<xref:System.DateTime.Kind%2A> プロパティの値を比較します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1186">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="7ac35-1187">この演算子を同等のメソッドは、します。 <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ac35-1187">The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : DateTime * DateTime -&gt; bool" Usage="t1 &lt;= t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="7ac35-1188">比較する最初のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1188">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="7ac35-1189">比較する 2 番目のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1189">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="7ac35-1190">指定した 1 つの <see cref="T:System.DateTime" /> が、指定した別の <see cref="T:System.DateTime" /> と同じ日時またはそれより前の日時を表しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1190">Determines whether one specified <see cref="T:System.DateTime" /> represents a date and time that is the same as or earlier than another specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1191"><paramref name="t1" /> が <paramref name="t2" /> と同じかそれより早い場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1191"><see langword="true" /> if <paramref name="t1" /> is the same as or earlier than <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1192"><xref:System.DateTime.op_LessThanOrEqual%2A>演算子は、2 つの間のリレーションシップを決定します。<xref:System.DateTime>タイマー刻みの数を比較することによっての値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1192">The <xref:System.DateTime.op_LessThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks.</span></span> <span data-ttu-id="7ac35-1193">比較する前に<xref:System.DateTime>オブジェクト、オブジェクトが同じタイム ゾーンで時刻を表すことを確認します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1193">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="7ac35-1194">これを行うには、<xref:System.DateTime.Kind%2A> プロパティの値を比較します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1194">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="7ac35-1195">この演算子を同等のメソッドは、します。 <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ac35-1195">The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Subtraction">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ac35-1196">指定した <see cref="T:System.DateTime" /> から指定した <see cref="T:System.DateTime" /> または <see cref="T:System.TimeSpan" /> を減算します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1196">Subtracts a specified <see cref="T:System.DateTime" /> or<see cref="T:System.TimeSpan" /> from a specified <see cref="T:System.DateTime" />.</span></span></summary>
        <altmember cref="M:System.DateTime.Subtract(System.DateTime)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static TimeSpan operator - (DateTime d1, DateTime d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Subtraction(valuetype System.DateTime d1, valuetype System.DateTime d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Subtraction(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d1 As DateTime, d2 As DateTime) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator -(DateTime d1, DateTime d2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : DateTime * DateTime -&gt; TimeSpan" Usage="d1 - d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.DateTime" />
        <Parameter Name="d2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ac35-1197">減算対象の日付および時刻の値 (被減数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1197">The date and time value to subtract from (the minuend).</span></span></param>
        <param name="d2"><span data-ttu-id="7ac35-1198">減算する日付および時刻の値 (減数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1198">The date and time value to subtract (the subtrahend).</span></span></param>
        <summary><span data-ttu-id="7ac35-1199">指定した日付と時刻から指定したもう 1 つの日付と時刻を減算して、時間間隔を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1199">Subtracts a specified date and time from another specified date and time and returns a time interval.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1200"><paramref name="d1" /> と <paramref name="d2" /> の間の時間間隔、つまり <paramref name="d1" /> から <paramref name="d2" /> を引いた値です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1200">The time interval between <paramref name="d1" /> and <paramref name="d2" />; that is, <paramref name="d1" /> minus <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1201"><xref:System.DateTime.op_Subtraction%28System.DateTime%2CSystem.DateTime%29>メソッドがの値を考慮していない、 <xref:System.DateTime.Kind%2A> 、2 つのプロパティ<xref:System.DateTime>減算を実行するときの値します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1201">The <xref:System.DateTime.op_Subtraction%28System.DateTime%2CSystem.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction.</span></span> <span data-ttu-id="7ac35-1202">減算する前に<xref:System.DateTime>オブジェクト、オブジェクトが同じタイム ゾーンで時刻を表すことを確認します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1202">Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="7ac35-1203">それ以外の場合、結果は、タイム ゾーン間の差が含まれます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1203">Otherwise, the result will include the difference between time zones.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7ac35-1204"><xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>メソッドは、減算を実行するときに、タイム ゾーン間で相違点を考慮します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1204">The <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType> method does consider the difference between time zones when performing the subtraction.</span></span>  
  
 <span data-ttu-id="7ac35-1205">この演算子を同等のメソッドは、します。 <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ac35-1205">The equivalent method for this operator is <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="7ac35-1206">次の例で、<xref:System.DateTime.Subtract%2A>メソッドと減算演算子。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1206">The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.</span></span>  
  
 [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]
 [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Subtract(System.DateTime)" />
        <altmember cref="P:System.DateTime.Ticks" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="7ac35-1207">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="7ac35-1207">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static DateTime operator - (DateTime d, TimeSpan t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTime op_Subtraction(valuetype System.DateTime d, valuetype System.TimeSpan t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d As DateTime, t As TimeSpan) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime operator -(DateTime d, TimeSpan t);" />
      <MemberSignature Language="F#" Value="static member ( - ) : DateTime * TimeSpan -&gt; DateTime" Usage="d - t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.DateTime" />
        <Parameter Name="t" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ac35-1208">減算される日時の値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1208">The date and time value to subtract from.</span></span></param>
        <param name="t"><span data-ttu-id="7ac35-1209">減算する時間間隔。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1209">The time interval to subtract.</span></span></param>
        <summary><span data-ttu-id="7ac35-1210">指定した日付と時刻から指定した時間間隔を減算して、新しい日付と時刻を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1210">Subtracts a specified time interval from a specified date and time and returns a new date and time.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1211"><paramref name="d" /> の値から <paramref name="t" /> の値を減算した値を保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1211">An object whose value is the value of <paramref name="d" /> minus the value of <paramref name="t" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1212">このメソッドのタイマー刻みの値を減算する`t`のタイマー刻みの値から`d`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1212">This method subtracts the ticks value of `t` from the ticks value of `d`.</span></span>  
  
 <span data-ttu-id="7ac35-1213">この演算子を同等のメソッドは、します。 <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ac35-1213">The equivalent method for this operator is <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="7ac35-1214">次の例で、<xref:System.DateTime.Subtract%2A>メソッドと減算演算子。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1214">The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.</span></span>  
  
 [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]
 [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-1215">結果として返された <see cref="T:System.DateTime" /> が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1215">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Subtract(System.TimeSpan)" />
        <altmember cref="P:System.DateTime.Ticks" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="7ac35-1216">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="7ac35-1216">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ac35-1217">日付と時刻の文字列形式を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1217">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1218">このセクションの内容:</span><span class="sxs-lookup"><span data-stu-id="7ac35-1218">In this section:</span></span>  
  
- [<span data-ttu-id="7ac35-1219">どのメソッドが呼び出しですか。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1219">Which method do I call?</span></span>](#Tasks)
- [<span data-ttu-id="7ac35-1220">解析する文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1220">The string to parse</span></span>](#StringToParse)
- [<span data-ttu-id="7ac35-1221">解析およびカルチャの規則</span><span class="sxs-lookup"><span data-stu-id="7ac35-1221">Parsing and cultural conventions</span></span>](#Culture)
- [<span data-ttu-id="7ac35-1222">解析とスタイルの要素</span><span class="sxs-lookup"><span data-stu-id="7ac35-1222">Parsing and style elements</span></span>](#Styles)
- [<span data-ttu-id="7ac35-1223">戻り値と DateTime.Kind</span><span class="sxs-lookup"><span data-stu-id="7ac35-1223">The return value and DateTime.Kind</span></span>](#kind)
 
<a name="Tasks"></a>   
### <a name="which-method-do-i-call"></a><span data-ttu-id="7ac35-1224">どのメソッドが呼び出しですか。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1224">Which method do I call?</span></span>  
  
|<span data-ttu-id="7ac35-1225">終了</span><span class="sxs-lookup"><span data-stu-id="7ac35-1225">To</span></span>|<span data-ttu-id="7ac35-1226">Call</span><span class="sxs-lookup"><span data-stu-id="7ac35-1226">Call</span></span>|  
|--------|----------|  
|<span data-ttu-id="7ac35-1227">現在のカルチャの規則を使用して日付と時刻の文字列を解析します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1227">Parse a date and time string by using the conventions of the current culture.</span></span>|<span data-ttu-id="7ac35-1228"><xref:System.DateTime.Parse%28System.String%29> オーバーロード</span><span class="sxs-lookup"><span data-stu-id="7ac35-1228"><xref:System.DateTime.Parse%28System.String%29> overload</span></span>|  
|<span data-ttu-id="7ac35-1229">特定のカルチャの規則を使用して日付と時刻の文字列を解析します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1229">Parse a date and time string by using the conventions of a specific culture.</span></span>|<span data-ttu-id="7ac35-1230"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> オーバー ロード (を参照してください[解析と文化的](#Culture))</span><span class="sxs-lookup"><span data-stu-id="7ac35-1230"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> overload (see [Parsing and Cultural Conventions](#Culture))</span></span>|  
|<span data-ttu-id="7ac35-1231">(空白文字や空白) などの特殊なスタイル要素を含む日付と時刻の文字列を解析します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1231">Parse a date and time string with special style elements (such as white space or no white space).</span></span>|<span data-ttu-id="7ac35-1232"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> オーバーロード</span><span class="sxs-lookup"><span data-stu-id="7ac35-1232"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload</span></span>|  
|<span data-ttu-id="7ac35-1233">日付と時刻の文字列で、特定の形式である必要がありますを解析します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1233">Parse a date and time string that must be in a particular format.</span></span>|<span data-ttu-id="7ac35-1234"><xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> または <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ac35-1234"><xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> or <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType></span></span>|
|<span data-ttu-id="7ac35-1235">日付と時刻の文字列を解析し、UTC と現地時間への変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1235">Parse a date and time string and perform a conversion to UTC or local time.</span></span>|<span data-ttu-id="7ac35-1236"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> オーバーロード</span><span class="sxs-lookup"><span data-stu-id="7ac35-1236"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload</span></span>|  
|<span data-ttu-id="7ac35-1237">例外を処理せずには、日付と時刻の文字列を解析します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1237">Parse a date and time string without handling exceptions.</span></span>|<span data-ttu-id="7ac35-1238"><xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> メソッド</span><span class="sxs-lookup"><span data-stu-id="7ac35-1238"><xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> method</span></span>|  
|<span data-ttu-id="7ac35-1239">書式設定操作によって作成された日付と時刻の値 (ラウンド トリップ) を復元します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1239">Restore (round-trip) a date and time value created by a formatting operation.</span></span>|<span data-ttu-id="7ac35-1240">"O"または"r"標準書式指定文字列を渡す、<xref:System.DateTime.ToString%28System.String%29>メソッド、および呼び出し、<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>オーバー ロード <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ac35-1240">Pass the "o" or "r" standard format string to the <xref:System.DateTime.ToString%28System.String%29> method, and call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload with <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="7ac35-1241">コンピューター (と可能性があるカルチャ) の境界を越えて固定形式で日付と時刻の文字列を解析します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1241">Parse a date and time string in a fixed format across machine (and possibly cultural) boundaries.</span></span>|<span data-ttu-id="7ac35-1242"><xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> または<xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType>メソッド</span><span class="sxs-lookup"><span data-stu-id="7ac35-1242"><xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> or <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> method</span></span>|  
  
<a name="StringToParse"></a>   
### <a name="the-string-to-parse"></a><span data-ttu-id="7ac35-1243">解析する文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1243">The string to parse</span></span>  
 <span data-ttu-id="7ac35-1244"><xref:System.DateTime.Parse%2A>メソッドに日付と時刻の値の文字列形式に変換しようとしました。 その<xref:System.DateTime>と同じです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1244">The <xref:System.DateTime.Parse%2A> method tries to convert the string representation of a date and time value to its <xref:System.DateTime> equivalent.</span></span> <span data-ttu-id="7ac35-1245">スローされることがなく完全に入力文字列を解析しようとする<xref:System.FormatException>例外。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1245">It tries to parse the input string completely without throwing a <xref:System.FormatException> exception.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7ac35-1246">認識されない文字列形式では、ため、解析操作が失敗した場合、<xref:System.DateTime.Parse%2A>メソッドがスローされます、<xref:System.FormatException>であるのに対し、<xref:System.DateTime.TryParse%2A>メソッドを返します。`false`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1246">If the parsing operation fails because of an unrecognized string format, the <xref:System.DateTime.Parse%2A> method throws a <xref:System.FormatException>, whereas the <xref:System.DateTime.TryParse%2A> method returns `false`.</span></span> <span data-ttu-id="7ac35-1247">使用する必要がある例外処理な高価なので、<xref:System.DateTime.Parse%2A>解析操作の入力ソースが信頼されているために、成功が必要です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1247">Because exception handling can be expensive, you should use <xref:System.DateTime.Parse%2A> when the parsing operation is expected to succeed because the input source is trusted.</span></span> <span data-ttu-id="7ac35-1248"><xref:System.DateTime.TryParse%2A> 解析エラーが高いときに、入力ソースが信頼されている、または正常に解析できない文字列の代わりに適切な既定値があるため、特にが適しています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1248"><xref:System.DateTime.TryParse%2A> is preferable when parsing failures are likely, particularly because an input source is not trusted, or you have reasonable default values to substitute for strings that do not parse successfully.</span></span>   

 <span data-ttu-id="7ac35-1249">解析対象の文字列形式は次のいずれかのことができます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1249">The string to be parsed can take any of the following forms:</span></span>  
  
-   <span data-ttu-id="7ac35-1250">日付と時刻の部分を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1250">A string with a date and a time component.</span></span>  
  
-   <span data-ttu-id="7ac35-1251">日付がない時刻の部分を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1251">A string with a date but no time component.</span></span> <span data-ttu-id="7ac35-1252">時刻部分がない場合、メソッドは深夜 12時 00分を想定しています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1252">If the time component is absent, the method assumes 12:00 midnight.</span></span> <span data-ttu-id="7ac35-1253">基づき年に変換されます、日付部分が 2 桁の年の場合、<xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>の現在のカルチャの現在の暦または特定のカルチャの現在の暦 (null 以外でオーバー ロードを使用する場合`provider`引数)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1253">If the date component has a two-digit year, it is converted to a year based on the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> of the current culture's current calendar or the specified culture's current calendar (if you use an overload with a non-null `provider` argument).</span></span>  
  
- <span data-ttu-id="7ac35-1254">月と年が含まれる日付部分がない日付部分を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1254">A string with a date component that includes only the month and the year but no day component.</span></span> <span data-ttu-id="7ac35-1255">メソッドは、月の最初の曜日を想定しています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1255">The method assumes the first day of the month.</span></span>

- <span data-ttu-id="7ac35-1256">月と日を含む日付部分が年コンポーネントがありません。 を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1256">A string with a date component that includes only the month and the day but no year component.</span></span> <span data-ttu-id="7ac35-1257">メソッドは、現在の年を想定しています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1257">The method assumes the current year.</span></span>

-   <span data-ttu-id="7ac35-1258">時間がない日付部分を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1258">A string with a time but no date component.</span></span> <span data-ttu-id="7ac35-1259">メソッドを呼び出さない限りの現在の日付を想定しています、<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>オーバー ロードして、含める<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>で、`styles`でいる場合は、メソッドが想定年 1 月 1 日 0001 引数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1259">The method assumes the current date unless you call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload and include <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> in the `styles` argument, in which case the method assumes a date of January 1, 0001.</span></span>  

- <span data-ttu-id="7ac35-1260">1 時間のみとない日付部分と、AM/PM 指定子が含まれる時コンポーネントを含む文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1260">A string with a time component that includes only the hour and an AM/PM designator, with no date component.</span></span> <span data-ttu-id="7ac35-1261">メソッドでは、現在の日付と分と秒なしの時間が前提としていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1261">The method assumes the current date and a time with no minutes and no seconds.</span></span> <span data-ttu-id="7ac35-1262">この動作を変更するには呼び出すことによって、<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>オーバー ロードし、は、<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>で、`styles`でいる場合は、メソッドが想定年 1 月 1 日 0001 引数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1262">You can change this behavior by calling the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload and include <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> in the `styles` argument, in which case the method assumes a date of January 1, 0001.</span></span>

-   <span data-ttu-id="7ac35-1263">タイム ゾーン情報が含まれています、ISO 8601 に準拠している文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1263">A string that includes time zone information and conforms to ISO 8601.</span></span> <span data-ttu-id="7ac35-1264">次の例で最初の文字列が世界協定時刻 (UTC) を指定し、2 つ目は 7 時間であるタイム ゾーンの時刻を指定 UTC より前。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1264">In the following examples, the first string designates Coordinated Universal Time (UTC), and the second designates the time in a time zone that's seven hours earlier than UTC:</span></span>  
  
    <span data-ttu-id="7ac35-1265">"2008-11-01T19:35:00.0000000Z"</span><span class="sxs-lookup"><span data-stu-id="7ac35-1265">"2008-11-01T19:35:00.0000000Z"</span></span>   
    <span data-ttu-id="7ac35-1266">"2008-11-01T19:35:00.0000000-07:00"</span><span class="sxs-lookup"><span data-stu-id="7ac35-1266">"2008-11-01T19:35:00.0000000-07:00"</span></span>  
  
-   <span data-ttu-id="7ac35-1267">GMT 指定子が含まれていますし、RFC 1123 時刻形式に準拠している文字列例えば：</span><span class="sxs-lookup"><span data-stu-id="7ac35-1267">A string that includes the GMT designator and conforms to the RFC 1123 time format; for example:</span></span>  
  
     <span data-ttu-id="7ac35-1268">"Sat、01 2008年 11 月 19時 35分: 00 GMT"</span><span class="sxs-lookup"><span data-stu-id="7ac35-1268">"Sat, 01 Nov 2008 19:35:00 GMT"</span></span>  
  
-   <span data-ttu-id="7ac35-1269">日付と時刻とタイム ゾーン オフセットの情報; を含む文字列例えば：</span><span class="sxs-lookup"><span data-stu-id="7ac35-1269">A string that includes the date and time along with time zone offset information; for example:</span></span>  
  
     <span data-ttu-id="7ac35-1270">"03/01/2009 05:42:00 -5:00"</span><span class="sxs-lookup"><span data-stu-id="7ac35-1270">"03/01/2009 05:42:00 -5:00"</span></span>  

<span data-ttu-id="7ac35-1271">次の例では、EN-US カルチャをここでは、現在のカルチャの書式設定規則を使用してこれらの形式の各文字列を解析します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1271">The following example parses strings in each of these formats by using the formatting conventions of the current culture, which in this case is the en-US culture:</span></span>

[!code-csharp-interactive[Default parsing](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse6.cs)]
[!code-vb[Default parsing](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse6.vb)]  
  
 <span data-ttu-id="7ac35-1272">入力文字列が解析メソッドで使用されるカレンダーで、閏年の leap 日を表すかどうか (を参照してください[解析およびカルチャの規則](#Culture))、<xref:System.DateTime.Parse%2A>メソッドは、文字列を正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1272">If the input string represents a leap day in a leap year in the calendar used by the parsing method (see [Parsing and cultural conventions](#Culture)), the <xref:System.DateTime.Parse%2A> method parses the string successfully.</span></span> <span data-ttu-id="7ac35-1273">入力文字列が閏日非 leap 年でを表している場合、メソッドがスローされます、<xref:System.FormatException>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1273">If the input string represents a leap day in a non-leap year, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="7ac35-1274"><xref:System.DateTime.Parse%2A>日付の文字列表現を解析しようとするメソッドと、現在または複数の異なるカルチャで文字列を解析しようとして、指定したカルチャの書式設定規則を使用して時間に失敗することができます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1274">Because the <xref:System.DateTime.Parse%2A> method tries to parse the string representation of a date and time by using the formatting rules of the current or a specified culture, trying to parse a string across different cultures can fail.</span></span> <span data-ttu-id="7ac35-1275">さまざまなロケール間で特定の日付と時刻の形式を解析するいずれかのオーバー ロードを使用して、<xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType>メソッドと書式指定子を提供します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1275">To parse a specific date and time format across different locales, use one of the overloads of the <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> method and provide a format specifier.</span></span>  
  
<a name="Culture"></a>   
### <a name="parsing-and-cultural-conventions"></a><span data-ttu-id="7ac35-1276">解析およびカルチャの規則</span><span class="sxs-lookup"><span data-stu-id="7ac35-1276">Parsing and cultural conventions</span></span>  
 <span data-ttu-id="7ac35-1277">すべてのオーバー ロード、<xref:System.DateTime.Parse%2A>メソッドはカルチャに依存しない限り、解析対象の文字列 (で表される`s`次の表に)、ISO 8601 のパターンに準拠しています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1277">All overloads of the <xref:System.DateTime.Parse%2A> method are culture-sensitive unless the string to be parsed (which is represented by `s` in the following table) conforms to the ISO 8601 pattern.</span></span> <span data-ttu-id="7ac35-1278">解析操作が、書式設定情報を使用して、<xref:System.Globalization.DateTimeFormatInfo>次のように派生したオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1278">The parsing operation uses the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object that is derived as follows:</span></span>  
  
|<span data-ttu-id="7ac35-1279">呼び出す場合</span><span class="sxs-lookup"><span data-stu-id="7ac35-1279">If you call</span></span>|<span data-ttu-id="7ac35-1280">`provider`は</span><span class="sxs-lookup"><span data-stu-id="7ac35-1280">And `provider` is</span></span>|<span data-ttu-id="7ac35-1281">書式設定情報はからを派生します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1281">Formatting information is derived from</span></span>|  
|-----------------|-----------------------|--------------------------------------------|  
|<xref:System.DateTime.Parse%28System.String%29>|-|<span data-ttu-id="7ac35-1282">現在のスレッド カルチャ (<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>プロパティ)</span><span class="sxs-lookup"><span data-stu-id="7ac35-1282">The current thread culture (<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> property)</span></span>|  
|<span data-ttu-id="7ac35-1283"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> または <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="7ac35-1283"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span></span>|<span data-ttu-id="7ac35-1284">A<xref:System.Globalization.DateTimeFormatInfo>オブジェクト</span><span class="sxs-lookup"><span data-stu-id="7ac35-1284">a <xref:System.Globalization.DateTimeFormatInfo> object</span></span>|<span data-ttu-id="7ac35-1285">指定した<xref:System.Globalization.DateTimeFormatInfo>オブジェクト</span><span class="sxs-lookup"><span data-stu-id="7ac35-1285">The specified <xref:System.Globalization.DateTimeFormatInfo> object</span></span>|  
|<span data-ttu-id="7ac35-1286"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> または <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="7ac35-1286"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span></span>|`null`|<span data-ttu-id="7ac35-1287">現在のスレッド カルチャ (<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>プロパティ)</span><span class="sxs-lookup"><span data-stu-id="7ac35-1287">The current thread culture (<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> property)</span></span>|  
|<span data-ttu-id="7ac35-1288"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> または <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="7ac35-1288"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span></span>|<span data-ttu-id="7ac35-1289">A<xref:System.Globalization.CultureInfo>オブジェクト</span><span class="sxs-lookup"><span data-stu-id="7ac35-1289">a <xref:System.Globalization.CultureInfo> object</span></span>|<span data-ttu-id="7ac35-1290"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> プロパティ</span><span class="sxs-lookup"><span data-stu-id="7ac35-1290">The <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property</span></span>|  
|<span data-ttu-id="7ac35-1291"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> または <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="7ac35-1291"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span></span>|<span data-ttu-id="7ac35-1292">カスタム<xref:System.IFormatProvider>実装</span><span class="sxs-lookup"><span data-stu-id="7ac35-1292">Custom <xref:System.IFormatProvider> implementation</span></span>|<span data-ttu-id="7ac35-1293"><xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> メソッド</span><span class="sxs-lookup"><span data-stu-id="7ac35-1293">The <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method</span></span>|  
  
 <span data-ttu-id="7ac35-1294">書式設定情報を派生すると、<xref:System.Globalization.DateTimeFormatInfo>オブジェクト、<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>プロパティは、解析操作で使用する暦を定義します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1294">When formatting information is derived from a <xref:System.Globalization.DateTimeFormatInfo> object, the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property defines the calendar used in the parsing operation.</span></span>  
  
 <span data-ttu-id="7ac35-1295">使用して日付と時刻の文字列を解析する場合、<xref:System.Globalization.DateTimeFormatInfo>でオブジェクトが標準的なカルチャの異なる設定をカスタマイズするを使用して、<xref:System.DateTime.ParseExact%2A>メソッドの代わりに、<xref:System.DateTime.Parse%2A>変換に成功した可能性を向上させるためにメソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1295">If you parse a date and time string by using a <xref:System.Globalization.DateTimeFormatInfo> object with customized settings that are different from those of a standard culture, use the <xref:System.DateTime.ParseExact%2A> method instead of the <xref:System.DateTime.Parse%2A> method to improve the chances for a successful conversion.</span></span> <span data-ttu-id="7ac35-1296">非標準の日付と時刻の文字列は、複雑で困難を解析するを指定できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1296">A non-standard date and time string can be complicated and difficult to parse.</span></span> <span data-ttu-id="7ac35-1297"><xref:System.DateTime.Parse%2A>メソッドが失敗するすべてのいくつかの暗黙的な解析パターンを使用した文字列の解析を試みます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1297">The <xref:System.DateTime.Parse%2A> method tries to parse a string with several implicit parse patterns, all of which might fail.</span></span> <span data-ttu-id="7ac35-1298">これに対し、<xref:System.DateTime.ParseExact%2A>メソッドでは、成功する可能性のある 1 つまたは複数の正確な解析パターンを明示的に指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1298">In contrast, the <xref:System.DateTime.ParseExact%2A> method requires you to explicitly designate one or more exact parse patterns that are likely to succeed.</span></span> <span data-ttu-id="7ac35-1299">詳細については、「DateTimeFormatInfo と動的データ」のセクションを参照してください、<xref:System.Globalization.DateTimeFormatInfo>トピック。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1299">For more information, see the "DateTimeFormatInfo and Dynamic Data" section in the <xref:System.Globalization.DateTimeFormatInfo> topic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7ac35-1300">特定のカルチャの書式指定規則は動的であり変更できることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1300">Note that the formatting conventions for a particular culture are dynamic and can be subject to change.</span></span> <span data-ttu-id="7ac35-1301">(現在) の既定のカルチャまたは書式指定規則に依存する解析操作を指定することを意味する<xref:System.IFormatProvider>インバリアント カルチャ以外のカルチャを表すオブジェクトが予期せず失敗する場合、次のいずれかが発生します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1301">This means that parsing operations that depend on the formatting conventions of the default (current) culture or that specify an <xref:System.IFormatProvider> object that represents a culture other than the invariant culture can unexpectedly fail if any of the following occurs:</span></span>  
>   
> -   <span data-ttu-id="7ac35-1302">カルチャに固有のデータが .NET Framework または .NET Framework の既存のバージョンに更新プログラムの結果としてメジャーまたはマイナー バージョン間で変更されました。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1302">The culture-specific data has changed between major or minor versions of the .NET Framework or as the result of an update to the existing version of the .NET Framework.</span></span>  
> -   <span data-ttu-id="7ac35-1303">カルチャに固有のデータには、コンピューターまたはセッションごとに異なることがあるユーザー設定が反映されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1303">The culture-specific data reflects user preferences, which can vary from machine to machine or session to session.</span></span>  
> -   <span data-ttu-id="7ac35-1304">カルチャに固有のデータは、標準的なカルチャまたはカスタムのカルチャの設定をオーバーライドする置換カルチャを表します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1304">The culture-specific data represents a replacement culture that overrides the settings of a standard culture or a custom culture.</span></span>  
>   
>  <span data-ttu-id="7ac35-1305">カルチャのデータの変更に関連付けられているデータと時刻の文字列を解析中に問題を防ぐためには、日付と時刻の文字列を解析するには、インバリアント カルチャを使用して、または呼び出すことができます、<xref:System.DateTime.ParseExact%2A>または<xref:System.DateTime.TryParseExact%2A>メソッドと正確な形式を指定します。解析する文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1305">To prevent the difficulties in parsing data and time strings that are associated with changes in cultural data, you can parse date and time strings by using the invariant culture, or you can call the <xref:System.DateTime.ParseExact%2A> or <xref:System.DateTime.TryParseExact%2A> method and specify the exact format of the string to be parsed.</span></span> <span data-ttu-id="7ac35-1306">シリアル化する、日付と時刻のデータを逆シリアル化を使用するか、インバリアント カルチャの書式指定規則、またはシリアル化し逆シリアル化することができる場合、<xref:System.DateTime>バイナリ形式の値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1306">If you are serializing and deserializing date and time data, you can either use the formatting conventions of the invariant culture, or you can serialize and deserialize the <xref:System.DateTime> value in a binary format.</span></span>  
>   
>  <span data-ttu-id="7ac35-1307">詳細については「動的なカルチャ データ」のセクションを参照してください、<xref:System.Globalization.CultureInfo>トピックと「保持 DateTime 値」のセクションで、<xref:System.DateTime>トピック。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1307">For more information see the "Dynamic culture data" section in the <xref:System.Globalization.CultureInfo> topic and the "Persisting DateTime values" section in the <xref:System.DateTime> topic.</span></span>  
  
<a name="Styles"></a>   
### <a name="parsing-and-style-elements"></a><span data-ttu-id="7ac35-1308">解析とスタイルの要素</span><span class="sxs-lookup"><span data-stu-id="7ac35-1308">Parsing and style elements</span></span>  
 <span data-ttu-id="7ac35-1309">すべて<xref:System.DateTime.Parse%2A>オーバー ロードは、入力文字列の先頭で、内部、または末尾の空白文字を無視 (で表される`s`次の表に)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1309">All <xref:System.DateTime.Parse%2A> overloads ignore leading, inner, or trailing white-space characters in the input string (which is represented by `s` in the following table).</span></span> <span data-ttu-id="7ac35-1310">日付と時刻の先頭と末尾の番号記号 (「#」、U + 0023)、ペアで囲むことができ、いずれかで最後できます。 または以上の NULL 文字 (u+0000) です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1310">The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ("#", U+0023), and can be trailed with one or more NULL characters (U+0000).</span></span>  
  
 <span data-ttu-id="7ac35-1311">さらに、<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>オーバー ロードは、`styles`パラメーターの 1 つまたは複数のメンバーで構成される、<xref:System.Globalization.DateTimeStyles>列挙体。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1311">In addition, the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload has a `styles` parameter that consists of one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration.</span></span> <span data-ttu-id="7ac35-1312">このパラメーターを定義する方法`s`を解釈して、解析操作をどのように変換する必要があります`s`日付と時刻にします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1312">This parameter defines how `s` should be interpreted and how the parse operation should convert `s` to a date and time.</span></span> <span data-ttu-id="7ac35-1313">次の表に、それぞれの効果<xref:System.Globalization.DateTimeStyles>解析操作でのメンバー。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1313">The following table describes the effect of each <xref:System.Globalization.DateTimeStyles> member on the parse operation.</span></span>  
  
|<span data-ttu-id="7ac35-1314">DateTimeStyles メンバー</span><span class="sxs-lookup"><span data-stu-id="7ac35-1314">DateTimeStyles member</span></span>|<span data-ttu-id="7ac35-1315">変換への影響</span><span class="sxs-lookup"><span data-stu-id="7ac35-1315">Effect on conversion</span></span>|  
|---------------------------|--------------------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="7ac35-1316">解析`s`と、必要に応じて、それを UTC に変換、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1316">Parses `s` and, if necessary, converts it to UTC, as follows:</span></span><br /><br /> <span data-ttu-id="7ac35-1317">If `s` 、タイム ゾーン オフセットが含まれて 場合`s`タイム ゾーン情報が含まれていないが`styles`が含まれています、<xref:System.Globalization.DateTimeStyles.AssumeLocal>フラグ、メソッドの呼び出し、文字列を解析します<xref:System.DateTime.ToUniversalTime%2A>、返されたに変換する<xref:System.DateTime>値です。(UTC) とセット、<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1317">-   If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span><br /><span data-ttu-id="7ac35-1318">If `s` UTC で表すことを示す場合、または`s`タイム ゾーン情報は含まれませんが、`styles`が含まれています、<xref:System.Globalization.DateTimeStyles.AssumeUniversal>フラグは、メソッド、文字列を解析して、返されたのタイム ゾーンの変換は行われません<xref:System.DateTime>値、およびセット、<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1318">-   If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span><br /><span data-ttu-id="7ac35-1319">その他のすべてのケースでは、フラグには影響はありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1319">-   In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="7ac35-1320">この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1320">This value is ignored.</span></span> <span data-ttu-id="7ac35-1321">内部の空白文字が常に日付と時刻の要素で許可されて`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1321">Inner white space is always permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="7ac35-1322">この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1322">This value is ignored.</span></span> <span data-ttu-id="7ac35-1323">先頭の空白文字が常に日付と時刻の要素で許可されて`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1323">Leading white space is always permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="7ac35-1324">この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1324">This value is ignored.</span></span> <span data-ttu-id="7ac35-1325">末尾の空白文字が日付と時刻の要素で許可されている常に`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1325">Trailing white space is always permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="7ac35-1326">指定します`s`先頭、内部、および末尾の空白文字を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1326">Specifies that `s` may contain leading, inner, and trailing white spaces.</span></span> <span data-ttu-id="7ac35-1327">これが既定の動作です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1327">This is the default behavior.</span></span> <span data-ttu-id="7ac35-1328">制限を指定して、オーバーライドできません<xref:System.Globalization.DateTimeStyles>などの列挙値<xref:System.Globalization.DateTimeStyles.None>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1328">It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value such as <xref:System.Globalization.DateTimeStyles.None>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="7ac35-1329">指定された場合`s`がありませんが、現地時刻、タイム ゾーン情報が使用されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1329">Specifies that if `s` lacks any time zone information, local time is assumed.</span></span> <span data-ttu-id="7ac35-1330">しない限り、<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>フラグが存在する、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>値に設定されて<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1330">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="7ac35-1331">指定された場合`s`と見なされます、UTC タイム ゾーン情報がありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1331">Specifies that if `s` lacks any time zone information, UTC is assumed.</span></span> <span data-ttu-id="7ac35-1332">しない限り、<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>フラグが存在する、メソッドは、返された変換<xref:System.DateTime>値を UTC から現地時刻とセットにその<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1332">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="7ac35-1333">有効では、この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1333">Although valid, this value is ignored.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="7ac35-1334">タイム ゾーン情報を含む文字列、日付と時刻文字列の変換を防止しようと、<xref:System.DateTime>を現地時刻を表す値の<xref:System.DateTime.Kind%2A>プロパティに設定<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1334">For strings that contain time zone information, tries to prevent the conversion of a date and time string to a <xref:System.DateTime> value that represents a local time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-1335">呼び出すことによってこのような文字列を作成する通常、<xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>メソッドと、"o"、"r"または"u"標準書式指定子を使用しています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1335">Typically, such a string is created by calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method and by using the "o", "r", or "u" standard format specifier.</span></span>|  

<a name="kind"></a>   
### <a name="the-return-value-and-datetimekind"></a><span data-ttu-id="7ac35-1336">戻り値と DateTime.Kind</span><span class="sxs-lookup"><span data-stu-id="7ac35-1336">The return value and DateTime.Kind</span></span>

<span data-ttu-id="7ac35-1337">`DateTime.Parse`戻り値のオーバー ロードを<xref:System.DateTime>値<xref:System.DateTime.Kind>プロパティには、タイム ゾーン情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1337">The `DateTime.Parse` overloads return a <xref:System.DateTime> value whose <xref:System.DateTime.Kind> property includes time zone information.</span></span> <span data-ttu-id="7ac35-1338">時間があることを示す、ことができます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1338">It can indicate that the time is:</span></span>

- <span data-ttu-id="7ac35-1339">協定世界時 (<xref:System.DateTimeKind.Utc?displayProperty=fullName>)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1339">Coordinated Universal Time (<xref:System.DateTimeKind.Utc?displayProperty=fullName>).</span></span>
- <span data-ttu-id="7ac35-1340">ローカル タイム ゾーンの時刻 (<xref:System.DateTimeKind.Local?displayProperty=fullName>)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1340">The time in the local time zone (<xref:System.DateTimeKind.Local?displayProperty=fullName>).</span></span>
- <span data-ttu-id="7ac35-1341">不明なタイムゾーンで時刻 (xref:System.DateTimeKind.Unspecified?displayProperty=fullName >)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1341">The time in an unknown time zone (xref:System.DateTimeKind.Unspecified?displayProperty=fullName>).</span></span>
 
 <span data-ttu-id="7ac35-1342">一般に、<xref:System.DateTime.Parse%2A>メソッドを返します。 を<xref:System.DateTime>オブジェクト<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1342">Generally, the <xref:System.DateTime.Parse%2A> method returns a <xref:System.DateTime> object whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-1343">ただし、<xref:System.DateTime.Parse%2A>メソッドは、タイム ゾーンの変換を実行し、値を設定可能性がありますも、<xref:System.DateTime.Kind%2A>プロパティの値に応じて異なる方法で、`s`と`styles`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1343">However, the <xref:System.DateTime.Parse%2A> method may also perform time zone conversion and set the value of the <xref:System.DateTime.Kind%2A> property differently, depending on the values of the `s` and `styles` parameters:</span></span>  
  
|<span data-ttu-id="7ac35-1344">If</span><span class="sxs-lookup"><span data-stu-id="7ac35-1344">If</span></span>|<span data-ttu-id="7ac35-1345">タイム ゾーンの変換</span><span class="sxs-lookup"><span data-stu-id="7ac35-1345">Time zone conversion</span></span>|<span data-ttu-id="7ac35-1346">Kind プロパティ</span><span class="sxs-lookup"><span data-stu-id="7ac35-1346">Kind property</span></span>|  
|--------|--------------------------|-------------------|  
|<span data-ttu-id="7ac35-1347">`s` タイム ゾーン情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1347">`s` contains time zone information.</span></span>|<span data-ttu-id="7ac35-1348">日付と時刻は、ローカル タイム ゾーンの時刻に変換されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1348">The date and time is converted to the time in the local time zone.</span></span>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|  
|<span data-ttu-id="7ac35-1349">`s` タイム ゾーンの情報を格納および`styles`が含まれています、<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>フラグ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1349">`s` contains time zone information, and `styles` includes the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag.</span></span>|<span data-ttu-id="7ac35-1350">日付と時刻が世界協定時刻 (UTC) に変換されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1350">The date and time is converted to Coordinated Universal Time (UTC).</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
|<span data-ttu-id="7ac35-1351">`s` Z または GMT タイム ゾーン指定子が含まれていますと`styles`が含まれています、<xref:System.Globalization.DateTimeStyles.RoundtripKind>フラグ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1351">`s` contains the Z or GMT time zone designator, and `styles` includes the <xref:System.Globalization.DateTimeStyles.RoundtripKind> flag.</span></span>|<span data-ttu-id="7ac35-1352">日付と時刻は UTC として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1352">The date and time are interpreted as UTC.</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
  
 <span data-ttu-id="7ac35-1353">次の例では、ローカル タイム ゾーンの時刻にタイム ゾーン情報を含む日付の文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1353">The following example converts date strings that contain time zone information to the time in the local time zone:</span></span>  
  
 [!code-csharp-interactive[System.DateTime.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse2.cs#2)]
 [!code-vb[System.DateTime.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse2.vb#2)]  

  <span data-ttu-id="7ac35-1354">日付と時刻の値を維持することもできます。<xref:System.DateTime.Kind%2A>プロパティ、書式設定とを使用して操作を解析中に、<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1354">You can also preserve the value of a date and time's <xref:System.DateTime.Kind%2A> property during a formatting and parsing operation by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7ac35-1355">次の例を示しています、<xref:System.Globalization.DateTimeStyles.RoundtripKind>フラグで解析操作に影響<xref:System.DateTime>は、"o"、"r"または"u"書式指定子を使用して文字列に変換する値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1355">The following example illustrates how the <xref:System.Globalization.DateTimeStyles.RoundtripKind> flag affects the parsing operation on <xref:System.DateTime> values that are converted to strings by using the "o", "r", or "u" format specifier.</span></span>  
  
 [!code-csharp-interactive[System.DateTime.Parse#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse5.cs#5)]
 [!code-vb[System.DateTime.Parse#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse5.vb#5)]  
  
### Examples

<span data-ttu-id="7ac35-1356">呼び出すさまざまな例として、`DateTime.Parse`メソッド内に点在、[解説](#remarks)、個々 のドキュメントで、この記事のセクション`DateTime.Parse`オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1356">Numerous examples that call the `DateTime.Parse` method are interspersed throughout the [Remarks](#remarks) section of this article and in the documentation for the individual `DateTime.Parse` overloads.</span></span>

[!INCLUDE[interactive-note](~/includes/csharp-interactive-with-utc-note.md)]

<span data-ttu-id="7ac35-1357">完全なセットをダウンロードすることもできます`DateTime.Parse`例については、に含まれている、 [(C#) または .NET Core 2.0 プロジェクト](https://github.com/dotnet/samples/raw/master/snippets/csharp/downloads/api/System/DateTime.Parse.zip)と[Visual basic .NET Core 2.0 プロジェクト](https://github.com/dotnet/samples/raw/master/snippets/visualbasic/downloads/api/System/DateTime.Parse.zip)、から、 [dotnet/。サンプルの GitHub リポジトリ](https://github.com/dotnet/samples)します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1357">You can also download a complete set of `DateTime.Parse` examples, which are included in a [.NET Core 2.0 project for C#](https://github.com/dotnet/samples/raw/master/snippets/csharp/downloads/api/System/DateTime.Parse.zip) and a [.NET Core 2.0 project for Visual Basic](https://github.com/dotnet/samples/raw/master/snippets/visualbasic/downloads/api/System/DateTime.Parse.zip), from the [dotnet/samples GitHub repository](https://github.com/dotnet/samples).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)" />
        <altmember cref="Overload:System.DateTime.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTime Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; DateTime" Usage="System.DateTime.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7ac35-1358">変換する日時を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1358">A string that contains a date and time to convert.</span></span> <span data-ttu-id="7ac35-1359">詳細については、「[解析する文字列](#StringToParse)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1359">See [The string to parse](#StringToParse) for more information.</span></span></param>
        <summary><span data-ttu-id="7ac35-1360">現在のスレッド カルチャの書式規則を使用して、日付と時刻の文字列形式を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1360">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using the conventions of the current thread culture.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1361"><paramref name="s" /> に含まれる日時と等価のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1361">An object that is equivalent to the date and time contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="7ac35-1362">場合`s`このメソッドが戻る、タイム ゾーン情報を含む、<xref:System.DateTime>値<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>した日付と時刻に変換します`s`を現地時刻。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1362">If `s` contains time zone information, this method returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> and converts the date and time in `s` to local time.</span></span> <span data-ttu-id="7ac35-1363">それ以外の場合、タイム ゾーンの変換を行わずを返します、<xref:System.DateTime>値<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1363">Otherwise, it performs no time zone conversion and returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span>

<span data-ttu-id="7ac35-1364">このオーバー ロードは、解析を試みます`s`現在のカルチャの書式設定規則を使用しています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1364">This overload attempts to parse `s` by using the formatting conventions of the current culture.</span></span> <span data-ttu-id="7ac35-1365">現在のカルチャがで示される、<xref:System.Globalization.CultureInfo.CurrentCulture>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1365">The current culture is indicated by the <xref:System.Globalization.CultureInfo.CurrentCulture> property.</span></span> <span data-ttu-id="7ac35-1366">特定のカルチャの書式指定規則を使用して文字列を解析するには、呼び出し、<xref:System.DateTime.Parse(System.String,System.IFormatProvider)>または<xref:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1366">To parse a string using the formatting conventions of a specific culture, call the <xref:System.DateTime.Parse(System.String,System.IFormatProvider)> or the <xref:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)> overloads.</span></span>

<span data-ttu-id="7ac35-1367">このオーバー ロードは、解析を試みます`s`を使用して<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1367">This overload attempts to parse `s` by using <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType> style.</span></span>

## <a name="example"></a><span data-ttu-id="7ac35-1368">例</span><span class="sxs-lookup"><span data-stu-id="7ac35-1368">Example</span></span>

<span data-ttu-id="7ac35-1369">次の例では、によって、いくつかの日付と時刻の値の文字列表現を解析します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1369">The following example parses the string representation of several date and time values by:</span></span>

- <span data-ttu-id="7ac35-1370">例の出力を生成するために使用されるコンピューターの現在のスレッド カルチャの書式指定規則を提供する既定の書式プロバイダーを使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1370">Using the default format provider, which provides the formatting conventions of hte current thread culture of the computer used to produce the example output.</span></span> <span data-ttu-id="7ac35-1371">この例の出力には、EN-US カルチャの書式指定規則が反映されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1371">The output from this example reflects the formatting conventions of the en-US culture.</span></span>

- <span data-ttu-id="7ac35-1372">これは既定のスタイル値を使用して<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWIthType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1372">Using the default style value, which is <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWIthType>.</span></span> 

<span data-ttu-id="7ac35-1373">処理、<xref:System.FormatException>メソッドが、いくつかその他のカルチャを使用して、日付と時刻の文字列表現を解析しようとしています。 ときにスローされる例外の書式設定規則。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1373">It handles the <xref:System.FormatException> exception that is thrown when the method tries to parse the string representation of a date and time by using some other culture's formatting conventions.</span></span> <span data-ttu-id="7ac35-1374">現在のスレッド カルチャの書式指定規則を使用しない日付と時刻の値を正常に解析する方法も示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1374">It also shows how to successfully parse a date and time value that does not use the formatting conventions of the current thread culture.</span></span>  
  
 [!code-csharp-interactive[System.DateTime.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse1.cs#1)]
 [!code-vb[System.DateTime.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse1.vb#1)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7ac35-1375"><paramref name="s" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1375"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="7ac35-1376"><paramref name="s" /> に日付と時刻の有効な文字列形式が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1376"><paramref name="s" /> does not contain a valid string representation of a date and time.</span></span></exception>
        <altmember cref="Overload:System.DateTime.TryParse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="7ac35-1377">.NET Framework における日付と時刻文字列の解析の解析</span><span class="sxs-lookup"><span data-stu-id="7ac35-1377">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1378">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1378">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1379">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1379">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTime Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; DateTime" Usage="System.DateTime.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7ac35-1380">変換する日時を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1380">A string that contains a date and time to convert.</span></span> <span data-ttu-id="7ac35-1381">詳細については、「[解析する文字列](#StringToParse)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1381">See [The string to parse](#StringToParse) for more information.</span></span></param>
        <param name="provider"><span data-ttu-id="7ac35-1382"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1382">An object that supplies culture-specific format information about <paramref name="s" />.</span></span>  <span data-ttu-id="7ac35-1383">「[解析およびカルチャの規則](#Culture)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1383">See [Parsing and cultural conventions](#Culture)</span></span></param>
        <summary><span data-ttu-id="7ac35-1384">カルチャ固有の書式情報を使用して、日付と時刻の文字列形式を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1384">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1385"><paramref name="s" /> で指定された書式に従って表記された、<paramref name="provider" /> に含まれる日時と等価のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1385">An object that is equivalent to the date and time contained in <paramref name="s" /> as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="7ac35-1386">場合`s`このメソッドが戻る、タイム ゾーン情報を含む、<xref:System.DateTime>値<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>した日付と時刻に変換します`s`を現地時刻。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1386">If `s` contains time zone information, this method returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> and converts the date and time in `s` to local time.</span></span> <span data-ttu-id="7ac35-1387">それ以外の場合、タイム ゾーンの変換を行わずを返します、<xref:System.DateTime>値<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1387">Otherwise, it performs no time zone conversion and returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span>

<span data-ttu-id="7ac35-1388">このオーバー ロードは、解析を試みます`s`を使用して、<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1388">This overload attempts to parse `s` by using the <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType> style.</span></span>

## <a name="example"></a><span data-ttu-id="7ac35-1389">例</span><span class="sxs-lookup"><span data-stu-id="7ac35-1389">Example</span></span>

<span data-ttu-id="7ac35-1390">次の例では、EN-US、FR-FR、DE-DE カルチャの規則を使用して日付文字列の配列を解析します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1390">The following example parses an array of date strings by using the conventions of the en-US, fr-FR, and de-DE cultures.</span></span> <span data-ttu-id="7ac35-1391">別のカルチャに関係なく 1 つの日付の文字列表現を異なって解釈されることを示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1391">It demonstrates that the string representations of a single date can be interpreted differently across different cultures.</span></span>  
  
[!code-csharp-interactive[System.DateTime.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse3.cs#3)]
[!code-vb[System.DateTime.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7ac35-1392"><paramref name="s" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1392"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="7ac35-1393"><paramref name="s" /> に日付と時刻の有効な文字列形式が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1393"><paramref name="s" /> does not contain a valid string representation of a date and time.</span></span></exception>
        <altmember cref="Overload:System.DateTime.TryParse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="7ac35-1394">.NET Framework における日付と時刻文字列の解析の解析</span><span class="sxs-lookup"><span data-stu-id="7ac35-1394">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1395">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1395">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1396">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1396">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTime Parse (ReadOnlySpan&lt;char&gt; s, IFormatProvider provider = null, System.Globalization.DateTimeStyles styles = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional provider As IFormatProvider = null, Optional styles As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTime" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.Parse (s, provider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="styles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTime Parse (string s, IFormatProvider provider, System.Globalization.DateTimeStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime Parse(string s, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider, styles As DateTimeStyles) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime Parse(System::String ^ s, IFormatProvider ^ provider, System::Globalization::DateTimeStyles styles);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.Parse (s, provider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7ac35-1397">変換する日時を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1397">A string that contains a date and time to convert.</span></span> <span data-ttu-id="7ac35-1398">詳細については、「[解析する文字列](#StringToParse)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1398">See [The string to parse](#StringToParse) for more information.</span></span></param>
        <param name="provider"><span data-ttu-id="7ac35-1399"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1399">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span>  <span data-ttu-id="7ac35-1400">「[解析およびカルチャの規則](#Culture)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1400">See [Parsing and cultural conventions](#Culture)</span></span></param>
        <param name="styles"><span data-ttu-id="7ac35-1401">解析操作を成功させるために <paramref name="s" /> で使用できるスタイル要素を示し、現在のタイム ゾーンまたは現在の日付に関連して解析した日付を解釈する方法を定義する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1401">A bitwise combination of the enumeration values that indicates the style elements that can be present in <paramref name="s" /> for the parse operation to succeed, and that defines how to interpret the parsed date in relation to the current time zone or the current date.</span></span> <span data-ttu-id="7ac35-1402">通常指定する値は、<see cref="F:System.Globalization.DateTimeStyles.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1402">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <summary><span data-ttu-id="7ac35-1403">カルチャ固有の書式情報と書式スタイルを使用して、日付と時刻の文字列形式を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1403">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using culture-specific format information and a formatting style.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1404"><paramref name="s" /> および <paramref name="provider" /> で指定された書式に従って表記された <paramref name="styles" /> に含まれる日時と等価のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1404">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="provider" /> and <paramref name="styles" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="7ac35-1405">このメソッドのオーバー ロードは、日付と時刻に変換します。`s`設定と、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>値を次のようにします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1405">This method overload converts the date and time in `s` and sets the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value as follows:</span></span>

|<span data-ttu-id="7ac35-1406">If</span><span class="sxs-lookup"><span data-stu-id="7ac35-1406">If</span></span> |<span data-ttu-id="7ac35-1407">タイム ゾーンの変換</span><span class="sxs-lookup"><span data-stu-id="7ac35-1407">Time zone conversion</span></span>|<span data-ttu-id="7ac35-1408">Kind プロパティ</span><span class="sxs-lookup"><span data-stu-id="7ac35-1408">Kind property</span></span>|   
|-----|-----|-----|  
|<span data-ttu-id="7ac35-1409">`s` タイム ゾーン情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1409">`s` contains no time zone information.</span></span>|<span data-ttu-id="7ac35-1410">なし。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1410">None.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|
|<span data-ttu-id="7ac35-1411">`s` タイム ゾーン情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1411">`s` contains time zone information.</span></span>|<span data-ttu-id="7ac35-1412">ローカル タイム ゾーンの時刻に</span><span class="sxs-lookup"><span data-stu-id="7ac35-1412">To the time in the local time zone</span></span>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|
|<span data-ttu-id="7ac35-1413">`s` タイム ゾーンの情報を格納し、' スタイルが含まれています、<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1413">`s` contains time zone information, and \`styles includes the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag.</span></span>|<span data-ttu-id="7ac35-1414">調整された形式の時刻 (UTC) に</span><span class="sxs-lookup"><span data-stu-id="7ac35-1414">To Coordinated Univeral Time (UTC)</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|
|<span data-ttu-id="7ac35-1415">`s` Z または GMT タイム ゾーン指定子が含まれていますと`styles`が含まれています、<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1415">`s` contains the Z or GMT time zone designator, and `styles` includes the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="7ac35-1416">なし。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1416">None.</span></span>|<xref:System.DateTimeKind.Utc>| 

## <a name="example"></a><span data-ttu-id="7ac35-1417">例</span><span class="sxs-lookup"><span data-stu-id="7ac35-1417">Example</span></span>

<span data-ttu-id="7ac35-1418">次の例で、<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>メソッドの値を表示し、<xref:System.DateTime.Kind%2A>結果のプロパティ<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1418">The following example demonstrates the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method and displays the value of the <xref:System.DateTime.Kind%2A> property of the resulting <xref:System.DateTime> values.</span></span>  
  
[!code-csharp-interactive[System.DateTime.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse4.cs#4)]
[!code-vb[System.DateTime.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7ac35-1419"><paramref name="s" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1419"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="7ac35-1420"><paramref name="s" /> に日付と時刻の有効な文字列形式が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1420"><paramref name="s" /> does not contain a valid string representation of a date and time.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7ac35-1421"><paramref name="styles" /> に <see cref="T:System.Globalization.DateTimeStyles" /> 値の正しくない組み合わせが含まれています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1421"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span> <span data-ttu-id="7ac35-1422">たとえば、<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> と <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" /> の両方です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1422">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span></span></exception>
        <altmember cref="Overload:System.DateTime.TryParse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="7ac35-1423">.NET Framework における日付と時刻文字列の解析の解析</span><span class="sxs-lookup"><span data-stu-id="7ac35-1423">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1424">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1424">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1425">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1425">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-round-trip-date-and-time-values.md"><span data-ttu-id="7ac35-1426">方法 : 日付と時刻の値をラウンドトリップさせる</span><span class="sxs-lookup"><span data-stu-id="7ac35-1426">How to: Round-trip Date and Time Values</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ac35-1427">指定した文字列形式の日付と時刻を等価の <see cref="T:System.DateTime" /> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1427">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent.</span></span> <span data-ttu-id="7ac35-1428">文字列形式の書式は、指定した書式と完全に一致する必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1428">The format of the string representation must match a specified format exactly or an exception is thrown.</span></span></summary>
        <altmember cref="Overload:System.DateTime.TryParseExact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (string s, string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(string s, string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As String, format As String, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ParseExact(System::String ^ s, System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider -&gt; DateTime" Usage="System.DateTime.ParseExact (s, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7ac35-1429">変換する日時を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1429">A string that contains a date and time to convert.</span></span></param>
        <param name="format"><span data-ttu-id="7ac35-1430"><paramref name="s" /> の必要な形式を定義する形式指定子。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1430">A format specifier that defines the required format of <paramref name="s" />.</span></span> <span data-ttu-id="7ac35-1431">詳細については、「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1431">For more information, see the Remarks section.</span></span></param>
        <param name="provider"><span data-ttu-id="7ac35-1432"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1432">An object that supplies culture-specific format information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="7ac35-1433">指定した書式とカルチャ固有の書式情報を使用して、指定した日付と時刻の文字列形式を等価の <see cref="T:System.DateTime" /> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1433">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format and culture-specific format information.</span></span> <span data-ttu-id="7ac35-1434">文字列形式の書式は、指定した書式と完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1434">The format of the string representation must match the specified format exactly.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1435"><paramref name="s" /> および <paramref name="format" /> で指定された書式に従って表記された <paramref name="provider" /> に含まれる日時と等価のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1435">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1436"><xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドで定義された書式である必要があります日付の文字列表現を解析し、`format`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1436">The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method parses the string representation of a date, which must be in the format defined by the `format` parameter.</span></span> <span data-ttu-id="7ac35-1437">必要、\<日付 > と\<時間 > で指定された順序で表示される日付と時刻の文字列形式の要素`format`、および`s`で許可されている以外の空白があるないです`format`。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1437">It also requires that the \<Date> and \<Time> elements of the string representation of a date and time appear in the order specified by `format`, and that `s` have no white space other than that permitted by `format`.</span></span> <span data-ttu-id="7ac35-1438">場合`format`日付を定義します。 時刻要素がないと、解析操作が成功した結果<xref:System.DateTime>値が午前 0 時 (00: 00:00)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1438">If `format` defines a date with no time element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a time of midnight (00:00:00).</span></span> <span data-ttu-id="7ac35-1439">場合`format`、時間を定義する日付要素がないと、解析操作が成功すると、結果<xref:System.DateTime>値が日付`DateTime.Now.Date`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1439">If `format` defines a time with no date element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a date of `DateTime.Now.Date`.</span></span>  
  
 <span data-ttu-id="7ac35-1440">場合`s`が成功すると、特定のタイム ゾーンと、解析操作の時刻を表していない、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>値は<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1440">If `s` does not represent a time in a particular time zone and the parse operation succeeds, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-1441">場合`s`わけでは、特定のタイム ゾーンの時刻と`format`存在するタイム ゾーン情報は、(場合など、 `format` "o"、"r"または"u"標準書式指定子は、"z"、"zz"または"zzz"が含まれている場合、またはカスタム書式指定子の場合)、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>値は<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1441">If `s` does represent the time in a particular time zone and `format` allows time zone information to be present (for example, if `format` is equal to the "o", "r", or "u" standard format specifiers, or if it contains the "z", "zz", or "zzz" custom format specifiers), the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7ac35-1442">`format`パラメーターは、1 つの標準書式指定子、または必要な書式を定義する 1 つまたは複数のカスタム書式指定子を含む文字列`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1442">The `format` parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of `s`.</span></span> <span data-ttu-id="7ac35-1443">詳細については、有効な書式設定コードは、次を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)または[Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1443">For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) or [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7ac35-1444">場合`format`されません ("yyyyMMddHHmm") などの日付または時刻の区切り記号を含めるのインバリアント カルチャを使用するカスタム書式パターンには、`provider`パラメーターおよび各カスタムの最も長い形式の書式指定子。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1444">If `format` is a custom format pattern that does not include date or time separators (such as "yyyyMMddHHmm"), use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="7ac35-1445">たとえば、書式パターンに時間を指定する場合は、"H"狭義の形式ではなくより多くのフォーム"HH"を指定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1445">For example, if you want to specify hours in the format pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
 <span data-ttu-id="7ac35-1446">特定の日付と時刻のシンボルとで使用される特定の言語で曜日の名前) などの文字列`s`によって定義されます、`provider`パラメーターの正確な形式は`s`場合`format`は標準的な形式です。指定子の文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1446">The particular date and time symbols and strings (such as names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="7ac35-1447">`provider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1447">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="7ac35-1448">A<xref:System.Globalization.CultureInfo>を解釈するために使用するカルチャを表すオブジェクトを`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1448">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="7ac35-1449"><xref:System.Globalization.DateTimeFormatInfo>によって返されるオブジェクトの<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>シンボルとに書式設定プロパティを定義します`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1449">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="7ac35-1450">A<xref:System.Globalization.DateTimeFormatInfo>日付と時刻のデータの書式を定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1450">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="7ac35-1451">カスタム<xref:System.IFormatProvider>実装が<xref:System.IFormatProvider.GetFormat%2A>メソッドでは、いずれかを返します、<xref:System.Globalization.CultureInfo>オブジェクトまたは<xref:System.Globalization.DateTimeFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1451">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="7ac35-1452">場合`provider`は`null`、<xref:System.Globalization.CultureInfo>現在のカルチャに対応するオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1452">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1453">次の例で、<xref:System.DateTime.ParseExact%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1453">The following example demonstrates the <xref:System.DateTime.ParseExact%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.ParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/ParseExact1.cs#1)]
 [!code-vb[System.DateTime.ParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/ParseExact1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7ac35-1454"><paramref name="s" /> または <paramref name="format" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1454"><paramref name="s" /> or <paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="7ac35-1455"><paramref name="s" /> または <paramref name="format" /> が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1455"><paramref name="s" /> or <paramref name="format" /> is an empty string.</span></span>  
  
<span data-ttu-id="7ac35-1456">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-1456">-or-</span></span> 
 <span data-ttu-id="7ac35-1457"><paramref name="s" /> に、<paramref name="format" /> で指定されているパターンに対応する日付と時刻が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1457"><paramref name="s" /> does not contain a date and time that corresponds to the pattern specified in <paramref name="format" />.</span></span>  
  
<span data-ttu-id="7ac35-1458">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-1458">-or-</span></span> 
<span data-ttu-id="7ac35-1459"><paramref name="s" /> の時間の部分と AM/PM 指定子が一致していません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1459">The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="7ac35-1460">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]、<see cref="Overload:System.DateTime.ParseExact" />メソッドがスローされます、<see cref="T:System.FormatException" />解析する文字列が、時間の部分と契約に含まれていない AM/PM 指定子を含むかどうか。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1460">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.ParseExact" /> method throws a <see cref="T:System.FormatException" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="7ac35-1461">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]と以前のバージョン、AM/PM 指定子は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1461">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.TryParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="7ac35-1462">.NET Framework における日付と時刻文字列の解析の解析</span><span class="sxs-lookup"><span data-stu-id="7ac35-1462">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1463">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1463">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1464">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1464">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (ReadOnlySpan&lt;char&gt; s, ReadOnlySpan&lt;char&gt; format, IFormatProvider provider, System.Globalization.DateTimeStyles style = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), provider As IFormatProvider, Optional style As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTime" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.ParseExact (s, format, provider, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="style">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (ReadOnlySpan&lt;char&gt; s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; s, string[] formats, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As ReadOnlySpan(Of Char), formats As String(), provider As IFormatProvider, Optional style As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTime" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.ParseExact (s, formats, provider, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="style">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (string s, string format, IFormatProvider provider, System.Globalization.DateTimeStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(string s, string format, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As String, format As String, provider As IFormatProvider, style As DateTimeStyles) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ParseExact(System::String ^ s, System::String ^ format, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.ParseExact (s, format, provider, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7ac35-1465">変換する日付と時刻を格納した文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1465">A string containing a date and time to convert.</span></span></param>
        <param name="format"><span data-ttu-id="7ac35-1466"><paramref name="s" /> の必要な形式を定義する形式指定子。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1466">A format specifier that defines the required format of <paramref name="s" />.</span></span> <span data-ttu-id="7ac35-1467">詳細については、「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1467">For more information, see the Remarks section.</span></span></param>
        <param name="provider"><span data-ttu-id="7ac35-1468"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1468">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="style"><span data-ttu-id="7ac35-1469"><paramref name="s" /> について、また <paramref name="s" /> に指定できるスタイル要素について、または <paramref name="s" /> から <see cref="T:System.DateTime" /> 値への変換についての追加情報を提供する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1469">A bitwise combination of the enumeration values that provides additional information about <paramref name="s" />, about style elements that may be present in <paramref name="s" />, or about the conversion from <paramref name="s" /> to a <see cref="T:System.DateTime" /> value.</span></span> <span data-ttu-id="7ac35-1470">通常指定する値は、<see cref="F:System.Globalization.DateTimeStyles.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1470">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <summary><span data-ttu-id="7ac35-1471">指定した書式、カルチャ固有の書式情報、およびスタイルを使用して、指定した日付と時刻の文字列形式を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1471">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format, culture-specific format information, and style.</span></span> <span data-ttu-id="7ac35-1472">文字列形式の書式は、指定した書式と完全に一致する必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1472">The format of the string representation must match the specified format exactly or an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1473"><paramref name="s" />、<paramref name="format" />、および <paramref name="provider" /> で指定された書式に従って表記された <paramref name="style" /> に含まれる日時と等価のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1473">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="format" />, <paramref name="provider" />, and <paramref name="style" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1474"><xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>メソッドで定義された書式である必要があります日付の文字列表現を解析し、`format`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1474">The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method parses the string representation of a date, which must be in a format defined by the `format` parameter.</span></span> <span data-ttu-id="7ac35-1475">必要で、日付と時刻の要素`s`で指定された順序で表示される`format`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1475">It also requires that the date and time elements in `s` appear in the order specified by `format`.</span></span> <span data-ttu-id="7ac35-1476">場合`s`のパターンに一致しない、`format`によって定義されたすべてのバリエーションのパラメーター、`style`パラメーター、メソッドはスロー、<xref:System.FormatException>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1476">If `s` does not match the pattern of the `format` parameter, with any variations defined by the `style` parameter, the method throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="7ac35-1477">これに対し、<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>メソッドは、書式プロバイダーのによって認識される形式のいずれかの日付の文字列表現を解析し<xref:System.Globalization.DateTimeFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1477">In contrast, the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="7ac35-1478"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>メソッドで日付と時刻要素こともできます`s`を任意の順序で表示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1478">The <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method also allows the date and time elements in `s` to appear in any order.</span></span>  
  
 <span data-ttu-id="7ac35-1479">場合、`s`パラメーターに時刻のみが含まれ、日なししない限り、現在の日付が使用される、`style`パラメーターが含まれる、<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>フラグ場合、既定の日付 (`DateTime.Date.MinValue`) 使用されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1479">If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> flag, in which case the default date (`DateTime.Date.MinValue`) is used.</span></span> <span data-ttu-id="7ac35-1480">場合、`s`パラメーターが含まれるは、日付のみといいえ時、午前 0 時 (00: 00:00) が使用されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1480">If the `s` parameter contains only a date and no time, midnight (00:00:00) is used.</span></span> <span data-ttu-id="7ac35-1481">`style`パラメーターも決定するかどうか、`s`パラメーターは、先頭、内部、または末尾の空白文字を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1481">The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters.</span></span>  
  
 <span data-ttu-id="7ac35-1482">場合`s`タイム ゾーンの情報が含まれていない、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>オブジェクトが<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1482">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-1483">使用してこの動作を変更することができます、<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>フラグ、返された、<xref:System.DateTime>値<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>、またはを使用して、<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>と<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>フラグ、返された、<xref:System.DateTime>値<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1483">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, or by using the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-1484">場合`s`、タイム ゾーン情報を含む、時刻は、必要に応じて、現地時刻に変換されます、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>にオブジェクトが設定されている<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1484">If `s` contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-1485">使用してこの動作を変更することができます、<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>フラグを設定して、現地時刻を世界協定時刻 (UTC) の変換を行わない、<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1485">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag to not convert Coordinated Universal Time (UTC) to a local time and to set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7ac35-1486">`format`の必要なパターンを定義するパラメーター、`s`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1486">The `format` parameter defines the required pattern of the `s` parameter.</span></span> <span data-ttu-id="7ac35-1487">1 つまたは複数のいずれかのカスタム書式指定子で構成されていることができます、[カスタム Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)テーブル、またはから定義済みのパターンを識別する 1 つの標準書式指定子、[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)テーブル。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1487">It can consist of either one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.</span></span>  
  
 <span data-ttu-id="7ac35-1488">カスタム書式パターンでは日付または時刻の区切り記号を使用しない場合は、インバリアント カルチャを使用して、`provider`パラメーターおよび各カスタムの最も長い形式の書式指定子。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1488">If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="7ac35-1489">たとえば、パターンに時間を指定する場合は、"H"狭義の形式ではなくより多くのフォーム"HH"を指定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1489">For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7ac35-1490">必要とするのではなく`s`解析操作が成功するための 1 つの形式に準拠して、呼び出すことができます、<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>メソッドと、許可されている複数の形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1490">Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method and specify multiple permitted formats.</span></span> <span data-ttu-id="7ac35-1491">これにより、解析操作が成功する可能性が高くなります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1491">This makes the parse operation more likely to succeed.</span></span>  
  
 <span data-ttu-id="7ac35-1492">`styles`パラメーターには 1 つまたは複数のメンバーが含まれています、<xref:System.Globalization.DateTimeStyles>かどうかと、空白文字で定義されていないかを決定する列挙体`format`に表示できる`s`解析操作の正確な動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1492">The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation.</span></span> <span data-ttu-id="7ac35-1493">次の表をそれぞれどのように説明のメンバー、<xref:System.Globalization.DateTimeStyles>列挙型の運用に与える影響、<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1493">The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method.</span></span>  
  
|<span data-ttu-id="7ac35-1494">DateTimeStyles メンバー</span><span class="sxs-lookup"><span data-stu-id="7ac35-1494">DateTimeStyles member</span></span>|<span data-ttu-id="7ac35-1495">説明</span><span class="sxs-lookup"><span data-stu-id="7ac35-1495">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="7ac35-1496">解析`s`と、必要に応じて、UTC に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1496">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="7ac35-1497">場合`s`、タイム ゾーン オフセットが含まれて 場合`s`タイム ゾーン情報が含まれていないが、`styles`が含まれています、<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>フラグは、メソッド呼び出し、文字列を解析して<xref:System.DateTime.ToUniversalTime%2A>、返されたに変換する<xref:System.DateTime>値を UTC にを設定し、<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1497">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-1498">場合`s`UTC で表すことを示す場合、または`s`タイム ゾーン情報は含まれませんが、`styles`が含まれています、<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>フラグは、メソッド、文字列を解析して、返されたのタイム ゾーンの変換は行われません<xref:System.DateTime>値、およびセット、<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1498">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-1499">その他のすべてのケースでは、フラグには影響はありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1499">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="7ac35-1500">定義されていない、空白文字を指定します`format`任意の個々 の日付または時刻の要素の間に表示できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1500">Specifies that white space not defined by `format` can appear between any individual date or time element.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="7ac35-1501">定義されていない、空白文字を指定します`format`の先頭に表示できる`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1501">Specifies that white space not defined by `format` can appear at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="7ac35-1502">定義されていない、空白文字を指定します`format`の末尾に記述できる`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1502">Specifies that white space not defined by `format` can appear at the end of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="7ac35-1503">指定します`s`先頭、内部、および末尾の空白で定義されていない場合があります`format`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1503">Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="7ac35-1504">場合を指定します`s`のタイム ゾーン情報がない、現地時刻を表すと見なされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1504">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="7ac35-1505">しない限り、<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>フラグが存在する、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>値に設定されて<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1505">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="7ac35-1506">指定された場合`s`任意のタイム ゾーン情報が不足しています utc と見なされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1506">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="7ac35-1507">しない限り、<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>フラグが存在する、メソッドは、返された変換<xref:System.DateTime>値を UTC から現地時刻とセットにその<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1507">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|<span data-ttu-id="7ac35-1508">場合`s`の時刻に設定されている戻り値の日付の日付の情報がない`DateTime.MinValue.Date`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1508">If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="7ac35-1509">`s`パラメーターは、既定値を使用して解析されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1509">The `s` parameter is parsed using default values.</span></span> <span data-ttu-id="7ac35-1510">空白以外に含まれている`format`は許可されています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1510">No white space other than that present in `format` is allowed.</span></span> <span data-ttu-id="7ac35-1511">場合`s`、返された日付、日付部分がない<xref:System.DateTime>値は 1/1/0001 を設定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1511">If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001.</span></span> <span data-ttu-id="7ac35-1512">場合`s`タイム ゾーンの情報が含まれていない、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>にオブジェクトが設定されている<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1512">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-1513">タイム ゾーン情報が存在する場合`s`、時刻は現地時刻に変換し、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>にオブジェクトが設定されている<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1513">If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="7ac35-1514">のタイム ゾーン情報を含む文字列への変換を防止しようとする<xref:System.DateTime>値の日付と時刻の使用その<xref:System.DateTime.Kind%2A>プロパティに設定<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1514">For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-1515">主に、このフラグには、ローカル時刻を UTC 時刻の変換ができないようにします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1515">This flag primarily prevents the conversion of UTC times to local times.</span></span>|  
  
 <span data-ttu-id="7ac35-1516">特定の日付と時刻のシンボルとで使用される特定の言語で曜日の名前) などの文字列`s`によって定義されます、`provider`パラメーターの正確な形式は`s`場合`format`は標準的な形式です。指定子の文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1516">The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="7ac35-1517">`provider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1517">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="7ac35-1518">A<xref:System.Globalization.CultureInfo>を解釈するために使用するカルチャを表すオブジェクトを`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1518">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="7ac35-1519"><xref:System.Globalization.DateTimeFormatInfo>によって返されるオブジェクトの<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>シンボルとに書式設定プロパティを定義します`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1519">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="7ac35-1520">A<xref:System.Globalization.DateTimeFormatInfo>日付と時刻のデータの書式を定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1520">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="7ac35-1521">カスタム<xref:System.IFormatProvider>実装が<xref:System.IFormatProvider.GetFormat%2A>メソッドでは、いずれかを返します、<xref:System.Globalization.CultureInfo>オブジェクトまたは<xref:System.Globalization.DateTimeFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1521">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="7ac35-1522">場合`provider`は`null`、<xref:System.Globalization.CultureInfo>現在のカルチャに対応するオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1522">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1523">次の例で、<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1523">The following example demonstrates the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="7ac35-1524">なお、文字列"5/01/2009 8時 30分 AM"ことはできませんが正常に解析されたときに、`styles`パラメーターと等しい<xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>では、先頭のスペースは許可されていないため、`format`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1524">Note that the string " 5/01/2009 8:30 AM" cannot be parsed successfully when the `styles` parameter equals <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType> because leading spaces are not allowed by `format`.</span></span> <span data-ttu-id="7ac35-1525">文字列ではさらに、"5/01/2009 09時 00分"を正常に解析されたことはできません、`format`の"MM dd/yyyyhh:mm"日付文字列としての先頭をゼロ、1 か月の数の前はため`format`が必要です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1525">Additionally, the string "5/01/2009 09:00" cannot be parsed successfully with a `format` of "MM/dd/yyyyhh:mm" because the date string does not precede the month number with a leading zero, as `format` requires.</span></span>  
  
 [!code-csharp[System.DateTime.ParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/parseexact2.cs#2)]
 [!code-vb[System.DateTime.ParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/parseexact2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7ac35-1526"><paramref name="s" /> または <paramref name="format" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1526"><paramref name="s" /> or <paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="7ac35-1527"><paramref name="s" /> または <paramref name="format" /> が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1527"><paramref name="s" /> or <paramref name="format" /> is an empty string.</span></span>  
  
<span data-ttu-id="7ac35-1528">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-1528">-or-</span></span> 
 <span data-ttu-id="7ac35-1529"><paramref name="s" /> に、<paramref name="format" /> で指定されているパターンに対応する日付と時刻が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1529"><paramref name="s" /> does not contain a date and time that corresponds to the pattern specified in <paramref name="format" />.</span></span>  
  
<span data-ttu-id="7ac35-1530">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-1530">-or-</span></span> 
<span data-ttu-id="7ac35-1531"><paramref name="s" /> の時間の部分と AM/PM 指定子が調和していません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1531">The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7ac35-1532"><paramref name="style" /> に <see cref="T:System.Globalization.DateTimeStyles" /> 値の正しくない組み合わせが含まれています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1532"><paramref name="style" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span> <span data-ttu-id="7ac35-1533">たとえば、<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> と <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" /> の両方です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1533">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="7ac35-1534">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]、<see cref="Overload:System.DateTime.ParseExact" />メソッドがスローされます、<see cref="T:System.FormatException" />解析する文字列が、時間の部分と契約に含まれていない AM/PM 指定子を含むかどうか。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1534">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.ParseExact" /> method throws a <see cref="T:System.FormatException" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="7ac35-1535">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]と以前のバージョン、AM/PM 指定子は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1535">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.TryParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="7ac35-1536">.NET Framework における日付と時刻文字列の解析の解析</span><span class="sxs-lookup"><span data-stu-id="7ac35-1536">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1537">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1537">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1538">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1538">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (string s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(string s, string[] formats, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As String, formats As String(), provider As IFormatProvider, style As DateTimeStyles) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ParseExact(System::String ^ s, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string[] * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.ParseExact (s, formats, provider, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7ac35-1539">変換する日時を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1539">A string that contains a date and time to convert.</span></span></param>
        <param name="formats"><span data-ttu-id="7ac35-1540"><paramref name="s" /> の許可された形式の配列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1540">An array of allowable formats of <paramref name="s" />.</span></span> <span data-ttu-id="7ac35-1541">詳細については、「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1541">For more information, see the Remarks section.</span></span></param>
        <param name="provider"><span data-ttu-id="7ac35-1542"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1542">An object that supplies culture-specific format information about <paramref name="s" />.</span></span></param>
        <param name="style"><span data-ttu-id="7ac35-1543"><paramref name="s" /> で使用可能な書式を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1543">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="7ac35-1544">通常指定する値は、<see cref="F:System.Globalization.DateTimeStyles.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1544">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <summary><span data-ttu-id="7ac35-1545">指定した書式の配列、カルチャ固有の書式情報、およびスタイルを使用して、指定した日付と時刻の文字列形式を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1545">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified array of formats, culture-specific format information, and style.</span></span> <span data-ttu-id="7ac35-1546">文字列形式の書式は、指定した書式の少なくとも 1 つと完全に一致する必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1546">The format of the string representation must match at least one of the specified formats exactly or an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1547"><paramref name="s" />、<paramref name="formats" />、および <paramref name="provider" /> で指定された書式に従って表記された <paramref name="style" /> に含まれる日時と等価のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1547">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="formats" />, <paramref name="provider" />, and <paramref name="style" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1548"><xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>メソッドに割り当てられているパターンのいずれかに一致する日付の文字列表現を解析し、`formats`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1548">The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter.</span></span> <span data-ttu-id="7ac35-1549">場合、文字列`s`によって定義されたバリエーションのいずれかでこれらのパターンのいずれかと一致しません、`styles`パラメーター、メソッドはスロー、<xref:System.FormatException>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1549">If the string `s` does not match any one of these patterns with any of the variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="7ac35-1550">別に比較する`s`複数の書式設定パターンになく単一の書式設定パターンでは、このオーバー ロードの動作、<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1550">Aside from comparing `s` to multiple formatting patterns, rather than to a single formatting pattern, this overload behaves identically to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7ac35-1551">`s`パラメーターには、解析するには、日付と時刻が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1551">The `s` parameter contains the date and time to parse.</span></span> <span data-ttu-id="7ac35-1552">場合、`s`パラメーターに時刻のみが含まれ、日なししない限り、現在の日付が使用される、`style`パラメーターが含まれる、<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>フラグ場合、既定の日付 (`DateTime.Date.MinValue`) 使用されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1552">If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> flag, in which case the default date (`DateTime.Date.MinValue`) is used.</span></span> <span data-ttu-id="7ac35-1553">場合、`s`パラメーターが含まれるは、日付のみといいえ時、午前 0 時 (00: 00:00) が使用されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1553">If the `s` parameter contains only a date and no time, midnight (00:00:00) is used.</span></span> <span data-ttu-id="7ac35-1554">`style`パラメーターも決定かどうか、`s`パラメーターは、先頭を含めることができます、内部、または末尾の空白文字で書式指定文字列のいずれかで許可されているもの以外の`formats`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1554">The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in `formats`.</span></span>  
  
 <span data-ttu-id="7ac35-1555">場合`s`タイム ゾーンの情報が含まれていない、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>オブジェクトが<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1555">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-1556">使用してこの動作を変更することができます、<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>フラグ、返された、<xref:System.DateTime>値<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>、またはを使用して、<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>と<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>フラグ、返された、<xref:System.DateTime>値<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1556">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, or by using the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-1557">場合`s`、タイム ゾーン情報を含む、時刻は、必要に応じて、現地時刻に変換されます、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>にオブジェクトが設定されている<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1557">If `s` contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-1558">使用してこの動作を変更することができます、<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>せず、現地時刻を世界協定時刻 (UTC) に変換を設定するフラグ、<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1558">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7ac35-1559">`formats`パラメーターには、パターンの配列が含まれています。 その 1 つ`s`解析操作が成功する場合に正確に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1559">The `formats` parameter contains an array of patterns, one of which `s` must match exactly if the parse operation is to succeed.</span></span> <span data-ttu-id="7ac35-1560">内のパターン、`formats`パラメーターは、1 つまたは複数のカスタム書式指定子から、[カスタム Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)テーブル、またはから定義済みのパターンを識別する 1 つの標準書式指定子、[Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)テーブル。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1560">The patterns in the `formats` parameter consists of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.</span></span>  
  
 <span data-ttu-id="7ac35-1561">カスタム書式パターンでは日付または時刻の区切り記号を使用しない場合は、インバリアント カルチャを使用して、`provider`パラメーターおよび各カスタムの最も長い形式の書式指定子。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1561">If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="7ac35-1562">たとえば、パターンに時間を指定する場合は、"H"狭義の形式ではなくより多くのフォーム"HH"を指定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1562">For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
 <span data-ttu-id="7ac35-1563">`styles`パラメーターには 1 つまたは複数のメンバーが含まれています、<xref:System.Globalization.DateTimeStyles>かどうかと、空白文字で定義されていないかを決定する列挙体`format`に表示できる`s`解析操作の正確な動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1563">The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation.</span></span> <span data-ttu-id="7ac35-1564">次の表をそれぞれどのように説明のメンバー、<xref:System.Globalization.DateTimeStyles>列挙型の運用に与える影響、<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1564">The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method.</span></span>  
  
|<span data-ttu-id="7ac35-1565">DateTimeStyles メンバー</span><span class="sxs-lookup"><span data-stu-id="7ac35-1565">DateTimeStyles member</span></span>|<span data-ttu-id="7ac35-1566">説明</span><span class="sxs-lookup"><span data-stu-id="7ac35-1566">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="7ac35-1567">解析`s`と、必要に応じて、UTC に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1567">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="7ac35-1568">場合`s`、タイム ゾーン オフセットが含まれて 場合`s`タイム ゾーン情報が含まれていないが、`styles`が含まれています、<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>フラグは、メソッド呼び出し、文字列を解析して<xref:System.DateTime.ToUniversalTime%2A>、返されたに変換する<xref:System.DateTime>値を UTC にを設定し、<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1568">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-1569">場合`s`UTC で表すことを示す場合、または`s`タイム ゾーン情報は含まれませんが、`styles`が含まれています、<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>フラグは、メソッド、文字列を解析して、返されたのタイム ゾーンの変換は行われません<xref:System.DateTime>値、およびセット、<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1569">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-1570">その他のすべてのケースでは、フラグには影響はありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1570">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="7ac35-1571">定義されていない、空白文字を指定します`format`任意の個々 の日付または時刻の要素の間に表示できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1571">Specifies that white space not defined by `format` can appear between any individual date or time element.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="7ac35-1572">定義されていない、空白文字を指定します`format`の先頭に表示できる`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1572">Specifies that white space not defined by `format` can appear at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="7ac35-1573">定義されていない、空白文字を指定します`format`の末尾に記述できる`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1573">Specifies that white space not defined by `format` can appear at the end of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="7ac35-1574">指定します`s`先頭、内部、および末尾の空白で定義されていない場合があります`format`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1574">Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="7ac35-1575">場合を指定します`s`のタイム ゾーン情報がない、現地時刻を表すと見なされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1575">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="7ac35-1576">しない限り、<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>フラグが存在する、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>値に設定されて<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1576">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="7ac35-1577">指定された場合`s`任意のタイム ゾーン情報が不足しています utc と見なされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1577">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="7ac35-1578">しない限り、<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>フラグが存在する、メソッドは、返された変換<xref:System.DateTime>値を UTC から現地時刻とセットにその<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1578">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|<span data-ttu-id="7ac35-1579">場合`s`の時刻に設定されている戻り値の日付の日付の情報がない`DateTime.MinValue.Date`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1579">If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="7ac35-1580">`s`パラメーターは、既定値を使用して解析されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1580">The `s` parameter is parsed using default values.</span></span> <span data-ttu-id="7ac35-1581">空白以外に含まれている`format`は許可されています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1581">No white space other than that present in `format` is allowed.</span></span> <span data-ttu-id="7ac35-1582">場合`s`、返された日付、日付部分がない<xref:System.DateTime>値は 1/1/0001 を設定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1582">If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001.</span></span> <span data-ttu-id="7ac35-1583">場合`s`タイム ゾーンの情報が含まれていない、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>にオブジェクトが設定されている<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1583">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-1584">タイム ゾーン情報が存在する場合`s`、時刻は現地時刻に変換し、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>にオブジェクトが設定されている<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1584">If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="7ac35-1585">タイム ゾーン情報が含まれている文字列の場合は、日付に変換できないし、時刻の使用を試みますその<xref:System.DateTime.Kind%2A>プロパティに設定<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1585">For strings that contain time zone information, tries to prevent the conversion to a date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-1586">主に、このフラグには、ローカル時刻を UTC 時刻の変換ができないようにします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1586">This flag primarily prevents the conversion of UTC times to local times.</span></span>|  
  
 <span data-ttu-id="7ac35-1587">特定の日付と時刻のシンボルとで使用される特定の言語で曜日の名前) などの文字列`s`によって定義されます、`provider`パラメーターの正確な形式は`s`場合`format`は標準的な形式です。指定子の文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1587">The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="7ac35-1588">`provider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1588">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="7ac35-1589">A<xref:System.Globalization.CultureInfo>を解釈するために使用するカルチャを表すオブジェクトを`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1589">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="7ac35-1590"><xref:System.Globalization.DateTimeFormatInfo>によって返されるオブジェクトの<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>シンボルとに書式設定プロパティを定義します`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1590">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="7ac35-1591">A<xref:System.Globalization.DateTimeFormatInfo>日付と時刻のデータの書式を定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1591">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="7ac35-1592">カスタム<xref:System.IFormatProvider>実装が<xref:System.IFormatProvider.GetFormat%2A>メソッドでは、いずれかを返します、<xref:System.Globalization.CultureInfo>オブジェクトまたは<xref:System.Globalization.DateTimeFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1592">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="7ac35-1593">場合`provider`は`null`、<xref:System.Globalization.CultureInfo>現在のカルチャに対応するオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1593">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1594">次の例では、<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>メソッドを使用できる形式の数値の文字列を正常に解析できることを確認します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1594">The following example uses the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method to ensure that a string in a number of possible formats can be successfully parsed .</span></span>  
  
 [!code-csharp[System.Datetime.ParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/parseexact3.cs#3)]
 [!code-vb[System.Datetime.ParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/parseexact3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7ac35-1595"><paramref name="s" /> または <paramref name="formats" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1595"><paramref name="s" /> or <paramref name="formats" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="7ac35-1596"><paramref name="s" /> が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1596"><paramref name="s" /> is an empty string.</span></span>  
  
<span data-ttu-id="7ac35-1597">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-1597">-or-</span></span> 
<span data-ttu-id="7ac35-1598"><paramref name="formats" /> の要素は空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1598">an element of <paramref name="formats" /> is an empty string.</span></span>  
  
<span data-ttu-id="7ac35-1599">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-1599">-or-</span></span> 
 <span data-ttu-id="7ac35-1600"><paramref name="s" /> には、<paramref name="formats" /> のどの要素に対応する日時も含まれていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1600"><paramref name="s" /> does not contain a date and time that corresponds to any element of <paramref name="formats" />.</span></span>  
  
<span data-ttu-id="7ac35-1601">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-1601">-or-</span></span> 
<span data-ttu-id="7ac35-1602"><paramref name="s" /> の時間の部分と AM/PM 指定子が調和していません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1602">The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7ac35-1603"><paramref name="style" /> に <see cref="T:System.Globalization.DateTimeStyles" /> 値の正しくない組み合わせが含まれています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1603"><paramref name="style" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span> <span data-ttu-id="7ac35-1604">たとえば、<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> と <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" /> の両方です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1604">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="7ac35-1605">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]、<see cref="Overload:System.DateTime.ParseExact" />メソッドがスローされます、<see cref="T:System.FormatException" />解析する文字列が、時間の部分と契約に含まれていない AM/PM 指定子を含むかどうか。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1605">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.ParseExact" /> method throws a <see cref="T:System.FormatException" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="7ac35-1606">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]と以前のバージョン、AM/PM 指定子は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1606">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.TryParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="7ac35-1607">.NET Framework における日付と時刻文字列の解析の解析</span><span class="sxs-lookup"><span data-stu-id="7ac35-1607">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1608">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1608">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1609">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1609">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public int Second { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Second" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Second" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Second As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Second { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Second : int" Usage="System.DateTime.Second" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ac35-1610">このインスタンスで表される日付の秒の部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1610">Gets the seconds component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="7ac35-1611">DateTime の秒の部分 (0 ～ 59)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1611">The seconds component, expressed as a value between 0 and 59.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ac35-1612">次の例で、<xref:System.DateTime.Second%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1612">The following example demonstrates the <xref:System.DateTime.Second%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecifyKind">
      <MemberSignature Language="C#" Value="public static DateTime SpecifyKind (DateTime value, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime SpecifyKind(valuetype System.DateTime value, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SpecifyKind (value As DateTime, kind As DateTimeKind) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime SpecifyKind(DateTime value, DateTimeKind kind);" />
      <MemberSignature Language="F#" Value="static member SpecifyKind : DateTime * DateTimeKind -&gt; DateTime" Usage="System.DateTime.SpecifyKind (value, kind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="kind" Type="System.DateTimeKind" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ac35-1613">日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1613">A date and time.</span></span></param>
        <param name="kind"><span data-ttu-id="7ac35-1614">新しいオブジェクトが現地時刻であるか、世界協定時刻 (UTC) であるか、またはそのどちらでもないかを示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1614">One of the enumeration values that indicates whether the new object represents local time, UTC, or neither.</span></span></param>
        <summary><span data-ttu-id="7ac35-1615">指定された <see cref="T:System.DateTime" /> と同じタイマー刻みの数を持つ新しい <see cref="T:System.DateTime" /> オブジェクトを、指定された <see cref="T:System.DateTimeKind" /> 値 (現地時刻、世界協定時刻 (UTC)、または、そのいずれでもないことを示す) に基づいて作成します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1615">Creates a new <see cref="T:System.DateTime" /> object that has the same number of ticks as the specified <see cref="T:System.DateTime" />, but is designated as either local time, Coordinated Universal Time (UTC), or neither, as indicated by the specified <see cref="T:System.DateTimeKind" /> value.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1616"><paramref name="value" /> パラメーターが表すオブジェクトと同じティック数、および <see cref="T:System.DateTimeKind" /> パラメーターで指定された <paramref name="kind" /> 値を持つ、新しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1616">A new object that has the same number of ticks as the object represented by the <paramref name="value" /> parameter and the <see cref="T:System.DateTimeKind" /> value specified by the <paramref name="kind" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1617">A<xref:System.DateTime>オブジェクトは、時刻の値が現地時刻、世界協定時刻 (UTC)、またはそのどちらでもない、に基づいてし、100 ナノ秒タイマー刻み単位は時間の値を含むタイマー刻みフィールドかどうかを示す種類のフィールドで構成されています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1617">A <xref:System.DateTime> object consists of a Kind field that indicates whether the time value is based on local time, Coordinated Universal Time (UTC), or neither, and a Ticks field that contains a time value measured in 100-nanosecond ticks.</span></span> <span data-ttu-id="7ac35-1618"><xref:System.DateTime.SpecifyKind%2A>メソッドを作成する新しい<xref:System.DateTime>オブジェクトを使用して、指定`kind`パラメーターと元の時刻の値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1618">The <xref:System.DateTime.SpecifyKind%2A> method creates a new <xref:System.DateTime> object using the specified `kind` parameter and the original time value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7ac35-1619">返された<xref:System.DateTime>値は表しません同じインスタントとして、`value`パラメーター、および<xref:System.DateTime.SpecifyKind%2A>タイム ゾーン変換の方法ではありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1619">The returned <xref:System.DateTime> value does not represent the same instant in time as the `value` parameter, and <xref:System.DateTime.SpecifyKind%2A> is not a time zone conversion method.</span></span> <span data-ttu-id="7ac35-1620">指定された時間外に出て、代わりに、`value`パラメーターを変更せず、およびセット、<xref:System.DateTime.Kind%2A>プロパティを`kind`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1620">Instead, it leaves the time specified by the `value` parameter unchanged, and sets the <xref:System.DateTime.Kind%2A> property to `kind`.</span></span> <span data-ttu-id="7ac35-1621">タイム ゾーン変換については、次を参照してください。[タイム ゾーン間で時間を変換する](~/docs/standard/datetime/converting-between-time-zones.md)します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1621">For information about time zone conversions, see [Converting Times Between Time Zones](~/docs/standard/datetime/converting-between-time-zones.md).</span></span>  
  
 <span data-ttu-id="7ac35-1622"><xref:System.DateTime.SpecifyKind%2A>メソッドが表示される相互運用性シナリオで役に立ちます、<xref:System.DateTime>が、指定されていない種類フィールドを持つオブジェクトを確認する独立したタイマー刻みフィールドが現地時刻と utc のどちらを表していることを意味します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1622">The <xref:System.DateTime.SpecifyKind%2A> method is useful in interoperability scenarios where you receive a <xref:System.DateTime> object with an unspecified Kind field, but you can determine by independent means that the Ticks field represents local time or UTC.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1623">次の例では、<xref:System.DateTime.SpecifyKind%2A>メソッドを示すために、どのように<xref:System.DateTime.Kind%2A>プロパティの影響、<xref:System.DateTime.ToLocalTime%2A>と<xref:System.DateTime.ToUniversalTime%2A>変換メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1623">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md"><span data-ttu-id="7ac35-1624">.NET Framework アプリケーションにおける COM 相互運用性 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="7ac35-1624">COM Interoperability in .NET Framework Applications (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subtract">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ac35-1625">このインスタンスから指定した時刻または存続時間を減算します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1625">Subtracts the specified time or duration from this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public TimeSpan Subtract (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Subtract(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Subtract(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (value As DateTime) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Subtract(DateTime value);" />
      <MemberSignature Language="F#" Value="member this.Subtract : DateTime -&gt; TimeSpan" Usage="dateTime.Subtract value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ac35-1626">減算する日付と時刻の値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1626">The date and time value to subtract.</span></span></param>
        <summary><span data-ttu-id="7ac35-1627">このインスタンスから指定した日付と時刻を減算します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1627">Subtracts the specified date and time from this instance.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1628">このインスタンスで表された日付と時刻から <paramref name="value" /> で表された日付と時刻を減算した値と等しい時間間隔。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1628">A time interval that is equal to the date and time represented by this instance minus the date and time represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1629"><xref:System.DateTime.Subtract%28System.DateTime%29>メソッドは、2 つの日付間の差を求めます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1629">The <xref:System.DateTime.Subtract%28System.DateTime%29> method determines the difference between two dates.</span></span> <span data-ttu-id="7ac35-1630">現在のインスタンスからの時間間隔を減算する呼び出し、<xref:System.DateTime.Subtract%28System.TimeSpan%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1630">To subtract a time interval from the current instance, call the <xref:System.DateTime.Subtract%28System.TimeSpan%29> method.</span></span> <span data-ttu-id="7ac35-1631">現在のインスタンスから特定の時間間隔を減算するには、その時間間隔を現在の日付に追加するメソッドを呼び出し、メソッドの引数として負の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1631">To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument.</span></span> <span data-ttu-id="7ac35-1632">たとえば、現在の日付から 2 か月間、減算を呼び出す、 <xref:System.DateTime.AddMonths%28System.Int32%29> -2 の値を持つメソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1632">For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2.</span></span>  
  
 <span data-ttu-id="7ac35-1633">かどうか、現在のインスタンスの日時により前は`value`、メソッドを返します、<xref:System.TimeSpan>負の時間範囲を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1633">If the date and time of the current instance is earlier than `value`, the method returns a <xref:System.TimeSpan> object that represents a negative time span.</span></span> <span data-ttu-id="7ac35-1634">すべての 0 以外のプロパティの値である、(など<xref:System.TimeSpan.Days%2A>または<xref:System.TimeSpan.Ticks%2A>) が負の値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1634">That is, the value of all of its non-zero properties (such as <xref:System.TimeSpan.Days%2A> or <xref:System.TimeSpan.Ticks%2A>) is negative.</span></span>  
  
 <span data-ttu-id="7ac35-1635"><xref:System.DateTime.Subtract%28System.DateTime%29>メソッドがの値を考慮していない、 <xref:System.DateTime.Kind%2A> 、2 つのプロパティ<xref:System.DateTime>減算を実行するときの値します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1635">The <xref:System.DateTime.Subtract%28System.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction.</span></span> <span data-ttu-id="7ac35-1636">減算する前に<xref:System.DateTime>オブジェクト、オブジェクトが同じタイム ゾーンで時刻を表すことを確認します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1636">Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="7ac35-1637">それ以外の場合、結果は、タイム ゾーン間の差が含まれます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1637">Otherwise, the result will include the difference between time zones.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7ac35-1638"><xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=nameWithType>メソッドは、減算を実行するときに、タイム ゾーン間で相違点を考慮します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1638">The <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=nameWithType> method does consider the difference between time zones when performing the subtraction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1639">次の例で、<xref:System.DateTime.Subtract%2A>メソッドと減算演算子。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1639">The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.</span></span>  
  
 [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]
 [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-1640">結果が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1640">The result is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="7ac35-1641">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="7ac35-1641">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public DateTime Subtract (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime Subtract(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Subtract(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (value As TimeSpan) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime Subtract(TimeSpan value);" />
      <MemberSignature Language="F#" Value="member this.Subtract : TimeSpan -&gt; DateTime" Usage="dateTime.Subtract value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ac35-1642">減算する時間間隔。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1642">The time interval to subtract.</span></span></param>
        <summary><span data-ttu-id="7ac35-1643">このインスタンスから指定した期間を減算します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1643">Subtracts the specified duration from this instance.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1644">このインスタンスで表された日付と時刻から <paramref name="value" /> で表された時間間隔を減算した値と等しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1644">An object that is equal to the date and time represented by this instance minus the time interval represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1645"><xref:System.DateTime.Subtract%28System.TimeSpan%29>メソッドは、現在のインスタンスから指定した時間間隔の違いは、日付を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1645">The <xref:System.DateTime.Subtract%28System.TimeSpan%29> method returns the date that is a specified time interval difference from the current instance.</span></span> <span data-ttu-id="7ac35-1646">2 つの日付間の時間間隔を確認するのには、呼び出し、<xref:System.DateTime.Subtract%28System.DateTime%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1646">To determine the time interval between two dates, call the <xref:System.DateTime.Subtract%28System.DateTime%29> method.</span></span> <span data-ttu-id="7ac35-1647">現在のインスタンスから特定の時間間隔を減算するには、その時間間隔を現在の日付に追加するメソッドを呼び出し、メソッドの引数として負の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1647">To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument.</span></span> <span data-ttu-id="7ac35-1648">たとえば、現在の日付から 2 か月間、減算を呼び出す、 <xref:System.DateTime.AddMonths%28System.Int32%29> -2 の値を持つメソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1648">For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2.</span></span>  
  
 <span data-ttu-id="7ac35-1649">このメソッドには、この値は変わりません。<xref:System.DateTime>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1649">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="7ac35-1650">代わりに、新しい返します<xref:System.DateTime>値がこの操作の結果。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1650">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="7ac35-1651">通常、<xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>メソッドは減算、<xref:System.TimeSpan>オブジェクトを表す正の時間間隔を返す、<xref:System.DateTime>が現在のインスタンスの日時より前の値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1651">Ordinarily, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> method subtracts a <xref:System.TimeSpan> object that represents a positive time span and returns a <xref:System.DateTime> value that is earlier than the date and time of the current instance.</span></span> <span data-ttu-id="7ac35-1652">ただし場合、<xref:System.TimeSpan>オブジェクトは、負の時間範囲を表します、<xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>メソッドを返します。 を<xref:System.DateTime>値が現在のインスタンスの日時より後です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1652">However, if the <xref:System.TimeSpan> object represents a negative time span, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> method returns a <xref:System.DateTime> value that is later than the date and time of the current instance.</span></span>  
  
 <span data-ttu-id="7ac35-1653"><xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>メソッドでは、時間 (時間の指定した数) と指定された数 (分) などの 1 つ以上の単位で構成される時間間隔を減算できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1653">The <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> method allows you to subtract a time interval that consists of more than one unit of time (such as a given number of hours and a given number of minutes).</span></span> <span data-ttu-id="7ac35-1654">1 つの単位 (年、月、日など) の時間を減算する、<xref:System.DateTime>インスタンス、渡せる負の数値の値をパラメーターとして、次のメソッドのいずれかに。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1654">To subtract a single unit of time (such as years, months, or days) from the <xref:System.DateTime> instance, you can pass a negative numeric value as a parameter to any of the following methods:</span></span>  
  
-   <span data-ttu-id="7ac35-1655"><xref:System.DateTime.AddYears%2A>、特定の年現在の日付と時刻のインスタンスから数を減算します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1655"><xref:System.DateTime.AddYears%2A>, to subtract a specific number of years from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="7ac35-1656"><xref:System.DateTime.AddMonths%2A>、特定の数か月間、現在の日付と時刻のインスタンスからの減算をします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1656"><xref:System.DateTime.AddMonths%2A>, to subtract a specific number of months from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="7ac35-1657"><xref:System.DateTime.AddDays%2A>、特定の数、現在の日付と時刻のインスタンスからの日数を減算します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1657"><xref:System.DateTime.AddDays%2A>, to subtract a specific number of days from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="7ac35-1658"><xref:System.DateTime.AddHours%2A>、特定の現在の日付と時刻のインスタンスからの時間数を減算します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1658"><xref:System.DateTime.AddHours%2A>, to subtract a specific number of hours from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="7ac35-1659"><xref:System.DateTime.AddMinutes%2A>、特定の数の現在の日付と時刻のインスタンスから分を減算します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1659"><xref:System.DateTime.AddMinutes%2A>, to subtract a specific number of minutes from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="7ac35-1660"><xref:System.DateTime.AddSeconds%2A>、特定の現在の日付と時刻のインスタンスからの秒数を減算します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1660"><xref:System.DateTime.AddSeconds%2A>, to subtract a specific number of seconds from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="7ac35-1661"><xref:System.DateTime.AddMilliseconds%2A>、特定の現在の日付と時刻のインスタンスからのミリ秒数を減算します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1661"><xref:System.DateTime.AddMilliseconds%2A>, to subtract a specific number of milliseconds from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="7ac35-1662"><xref:System.DateTime.AddTicks%2A>、特定の現在の日付と時刻のインスタンスからのティック数を減算します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1662"><xref:System.DateTime.AddTicks%2A>, to subtract a specific number of ticks from the current date and time instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1663">次の例で、<xref:System.DateTime.Subtract%2A>メソッドと減算演算子。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1663">The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.</span></span>  
  
 [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]
 [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-1664">結果が <see cref="F:System.DateTime.MinValue" /> より小さいか、<see cref="F:System.DateTime.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1664">The result is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="7ac35-1665">日付と時刻を使用した算術演算の実行</span><span class="sxs-lookup"><span data-stu-id="7ac35-1665">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ac35-1666"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1666">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="7ac35-1667">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="7ac35-1667">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="7ac35-1668">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1668">This conversion is not supported.</span></span> <span data-ttu-id="7ac35-1669">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1669">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1670">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1670">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7ac35-1671">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1671">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ac35-1672"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1672">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="7ac35-1673">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="7ac35-1673">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="7ac35-1674">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1674">This conversion is not supported.</span></span> <span data-ttu-id="7ac35-1675">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1675">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1676">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1676">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7ac35-1677">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1677">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ac35-1678"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1678">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="7ac35-1679">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="7ac35-1679">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="7ac35-1680">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1680">This conversion is not supported.</span></span> <span data-ttu-id="7ac35-1681">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1681">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1682">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1682">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7ac35-1683">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1683">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ac35-1684"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1684">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="7ac35-1685">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="7ac35-1685">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="7ac35-1686">現在の <see cref="T:System.DateTime" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1686">Returns the current <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1687">現在のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1687">The current object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ac35-1688"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1688">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="7ac35-1689">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="7ac35-1689">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="7ac35-1690">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1690">This conversion is not supported.</span></span> <span data-ttu-id="7ac35-1691">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1691">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1692">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1692">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7ac35-1693">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1693">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ac35-1694"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1694">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="7ac35-1695">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="7ac35-1695">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="7ac35-1696">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1696">This conversion is not supported.</span></span> <span data-ttu-id="7ac35-1697">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1697">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1698">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1698">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7ac35-1699">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1699">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ac35-1700"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1700">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="7ac35-1701">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="7ac35-1701">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="7ac35-1702">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1702">This conversion is not supported.</span></span> <span data-ttu-id="7ac35-1703">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1703">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1704">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1704">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7ac35-1705">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1705">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ac35-1706"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1706">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="7ac35-1707">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="7ac35-1707">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="7ac35-1708">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1708">This conversion is not supported.</span></span> <span data-ttu-id="7ac35-1709">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1709">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1710">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1710">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7ac35-1711">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1711">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ac35-1712"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1712">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="7ac35-1713">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="7ac35-1713">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="7ac35-1714">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1714">This conversion is not supported.</span></span> <span data-ttu-id="7ac35-1715">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1715">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1716">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1716">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7ac35-1717">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1717">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ac35-1718"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1718">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="7ac35-1719">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="7ac35-1719">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="7ac35-1720">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1720">This conversion is not supported.</span></span> <span data-ttu-id="7ac35-1721">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1721">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1722">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1722">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7ac35-1723">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1723">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ac35-1724"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1724">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="7ac35-1725">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="7ac35-1725">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="7ac35-1726">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1726">This conversion is not supported.</span></span> <span data-ttu-id="7ac35-1727">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1727">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1728">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1728">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7ac35-1729">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1729">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="7ac35-1730">必要な型。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1730">The desired type.</span></span></param>
        <param name="provider"><span data-ttu-id="7ac35-1731"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1731">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="7ac35-1732">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="7ac35-1732">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="7ac35-1733">現在の <see cref="T:System.DateTime" /> オブジェクトを、指定された型のオブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1733">Converts the current <see cref="T:System.DateTime" /> object to an object of a specified type.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1734">値が現在の <paramref name="type" /> オブジェクトに等価である、<see cref="T:System.DateTime" /> パラメーターによって指定された型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1734">An object of the type specified by the <paramref name="type" /> parameter, with a value equivalent to the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7ac35-1735"><paramref name="type" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1735"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7ac35-1736">この変換は、<see cref="T:System.DateTime" /> 型ではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1736">This conversion is not supported for the <see cref="T:System.DateTime" /> type.</span></span></exception>
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ac35-1737"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1737">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="7ac35-1738">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="7ac35-1738">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="7ac35-1739">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1739">This conversion is not supported.</span></span> <span data-ttu-id="7ac35-1740">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1740">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1741">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1741">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7ac35-1742">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1742">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ac35-1743"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1743">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="7ac35-1744">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="7ac35-1744">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="7ac35-1745">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1745">This conversion is not supported.</span></span> <span data-ttu-id="7ac35-1746">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1746">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1747">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1747">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7ac35-1748">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1748">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ac35-1749"><see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1749">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="7ac35-1750">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="7ac35-1750">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="7ac35-1751">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1751">This conversion is not supported.</span></span> <span data-ttu-id="7ac35-1752">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1752">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1753">このメンバーの戻り値は使用されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1753">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7ac35-1754">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1754">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="7ac35-1755">データを読み込む先のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1755">The object to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="7ac35-1756">このシリアル化のシリアル化先。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1756">The destination for this serialization.</span></span> <span data-ttu-id="7ac35-1757">(このパラメーターは使用されません。<see langword="null" /> を指定してください。)</span><span class="sxs-lookup"><span data-stu-id="7ac35-1757">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="7ac35-1758"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに、現在の <see cref="T:System.DateTime" /> オブジェクトをシリアル化するために必要なすべてのデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1758">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the current <see cref="T:System.DateTime" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1759">このメソッド、`info`パラメーター、<xref:System.DateTime.Ticks%2A>と<xref:System.DateTime.Kind%2A>プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1759">This method populates the `info` parameter with the <xref:System.DateTime.Ticks%2A> and <xref:System.DateTime.Kind%2A> property values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7ac35-1760"><paramref name="info" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1760"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="7ac35-1761">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1761">requires full trust for the immediate caller.</span></span> <span data-ttu-id="7ac35-1762">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1762">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Ticks">
      <MemberSignature Language="C#" Value="public long Ticks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Ticks" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Ticks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ticks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Ticks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Ticks : int64" Usage="System.DateTime.Ticks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ac35-1763">このインスタンスの日付と時刻を表すタイマー刻み数を取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1763">Gets the number of ticks that represent the date and time of this instance.</span></span></summary>
        <value><span data-ttu-id="7ac35-1764">このインスタンスの日付と時刻を表すタイマー刻み数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1764">The number of ticks that represent the date and time of this instance.</span></span> <span data-ttu-id="7ac35-1765">値は <see langword="DateTime.MinValue.Ticks" /> から <see langword="DateTime.MaxValue.Ticks" /> までの間にあります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1765">The value is between <see langword="DateTime.MinValue.Ticks" /> and <see langword="DateTime.MaxValue.Ticks" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1766">単一のティックは 100 ナノ秒または 1 つ 10 分の 1 秒を表します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1766">A single tick represents one hundred nanoseconds or one ten-millionth of a second.</span></span> <span data-ttu-id="7ac35-1767">10,000 ティックをミリ秒単位でまたは 1 秒あたり 10,000, 000 個のタイマー刻みがあります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1767">There are 10,000 ticks in a millisecond, or 10 million ticks in a second.</span></span>  
  
 <span data-ttu-id="7ac35-1768">このプロパティの値が 0001 年 1 月 1 日午前 12時 00分: 00 以降の経過時間を 100 ナノ秒間隔の数を表します (0: 00:00 年 1 月 1 日 UTC 0001、グレゴリオ暦で) を表す<xref:System.DateTime.MinValue?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1768">The value of this property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight, January 1, 0001 (0:00:00 UTC on January 1, 0001, in the Gregorian calendar), which represents <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-1769">秒数を大きく前進に起因するタイマー刻みの数は含まれません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1769">It does not include the number of ticks that are attributable to leap seconds.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1770">次の例では、<xref:System.DateTime.Ticks%2A>プロパティは、21 世紀の開始以降に経過したタイマー刻みの数が表示され、インスタンス化する、<xref:System.TimeSpan>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1770">The following example uses the <xref:System.DateTime.Ticks%2A> property to display the number of ticks that have elapsed since the beginning of the twenty-first century and to instantiate a <xref:System.TimeSpan> object.</span></span> <span data-ttu-id="7ac35-1771"><xref:System.TimeSpan>他のいくつかの時間間隔を使用した経過時間を表示するオブジェクトを使用しています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1771">The <xref:System.TimeSpan> object is then used to display the elapsed time using several other time intervals.</span></span>  
  
 [!code-csharp[System.DateTime.Ticks#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Ticks/cs/Ticks.cs#1)]
 [!code-vb[System.DateTime.Ticks#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Ticks/vb/Ticks.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public TimeSpan TimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfDay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeOfDay { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfDay : TimeSpan" Usage="System.DateTime.TimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ac35-1772">このインスタンスの時刻を取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1772">Gets the time of day for this instance.</span></span></summary>
        <value><span data-ttu-id="7ac35-1773">深夜の 12 時から経過した 1 日の端数部分を表す時間間隔。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1773">A time interval that represents the fraction of the day that has elapsed since midnight.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1774">異なり、<xref:System.DateTime.Date%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1774">Unlike the <xref:System.DateTime.Date%2A> property.</span></span> <span data-ttu-id="7ac35-1775">返された、 <xref:System.DateTime> 、時刻部分なしの日付を表す値、<xref:System.DateTime.TimeOfDay%2A>プロパティから返さ、<xref:System.TimeSpan>を表す値を<xref:System.DateTime>値の時間コンポーネント。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1775">which returns a <xref:System.DateTime> value that represents a date without its time component, the <xref:System.DateTime.TimeOfDay%2A> property returns a <xref:System.TimeSpan> value that represents a  <xref:System.DateTime> value's time component.</span></span>  
  
 <span data-ttu-id="7ac35-1776">1 日の時間を表示または日の時刻の文字列表現を取得するかどうか、<xref:System.DateTime>値、オーバー ロードの代わりに呼び出すことができます、<xref:System.DateTime.ToString%2A>メソッドを持つ、`format`パラメーターまたは使用して、[複合書式指定](~/docs/standard/base-types/composite-formatting.md) "t"または"T"標準書式指定文字列で機能します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1776">If you want to display the time of day or retrieve the string representation of the time of day of a <xref:System.DateTime> value, you can instead call an overload of the <xref:System.DateTime.ToString%2A> method that has a `format` parameter or use the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature with the "t" or "T" standard format string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1777">次の例の値を表示する、<xref:System.DateTime.TimeOfDay%2A>プロパティの配列を<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1777">The following example displays the value of the <xref:System.DateTime.TimeOfDay%2A> property for an array of <xref:System.DateTime> values.</span></span> <span data-ttu-id="7ac35-1778">複合書式設定操作で"t"標準書式指定文字列によって返される文字列の戻り値も対照的です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1778">It also contrasts the return value with the string returned by the "t" standard format string in a composite formatting operation.</span></span>  
  
 [!code-csharp[System.DateTime.TimeOfDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.timeofday/cs/timeofday1.cs#1)]
 [!code-vb[System.DateTime.TimeOfDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.timeofday/vb/timeofday1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="ToBinary">
      <MemberSignature Language="C#" Value="public long ToBinary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToBinary() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToBinary" />
      <MemberSignature Language="VB.NET" Value="Public Function ToBinary () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToBinary();" />
      <MemberSignature Language="F#" Value="member this.ToBinary : unit -&gt; int64" Usage="dateTime.ToBinary " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ac35-1779">現在の <see cref="T:System.DateTime" /> オブジェクトを 64 ビットのバイナリ値にシリアル化します。後で、この値を使って、<see cref="T:System.DateTime" /> オブジェクトを再構築できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1779">Serializes the current <see cref="T:System.DateTime" /> object to a 64-bit binary value that subsequently can be used to recreate the <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1780"><see cref="P:System.DateTime.Kind" /> プロパティおよび <see cref="P:System.DateTime.Ticks" /> プロパティをエンコードする 64 ビットの符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1780">A 64-bit signed integer that encodes the <see cref="P:System.DateTime.Kind" /> and <see cref="P:System.DateTime.Ticks" /> properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1781">使用して、<xref:System.DateTime.ToBinary%2A>メソッドは、現在の値に変換する<xref:System.DateTime>オブジェクト バイナリ値から。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1781">Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value.</span></span> <span data-ttu-id="7ac35-1782">バイナリ値を使用して、その後、および<xref:System.DateTime.FromBinary%2A>メソッドを元の再作成する<xref:System.DateTime>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1782">Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7ac35-1783">場合によってで、<xref:System.DateTime>によって返される値、<xref:System.DateTime.FromBinary%2A>メソッドが元と同じでない<xref:System.DateTime>に指定された値、<xref:System.DateTime.ToBinary%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1783">In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method.</span></span> <span data-ttu-id="7ac35-1784">詳細については、次のセクションでは、「ローカル タイムの調整」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1784">For more information, see the next section, "Local Time Adjustment".</span></span>  
  
## <a name="local-time-adjustment"></a><span data-ttu-id="7ac35-1785">現地時刻の調整</span><span class="sxs-lookup"><span data-stu-id="7ac35-1785">Local Time Adjustment</span></span>  
 <span data-ttu-id="7ac35-1786">ローカル タイム ゾーンに調整: Coordinated Universal Time には、現地時刻がによって表される、<xref:System.DateTime>持つ<xref:System.DateTime.Kind%2A>プロパティの値を<xref:System.DateTimeKind.Local>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1786">A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>.</span></span> <span data-ttu-id="7ac35-1787">ローカルの復元時に<xref:System.DateTime>によって生成されるバイナリ表現からの値、<xref:System.DateTime.ToBinary%2A>メソッド、<xref:System.DateTime.FromBinary%2A>元の値と等しくないように、メソッドが再作成された値を調整する場合があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1787">When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value.</span></span> <span data-ttu-id="7ac35-1788">これは、次のような条件で発生します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1788">This can occur under the following conditions:</span></span>  
  
-   <span data-ttu-id="7ac35-1789">ローカル<xref:System.DateTime>オブジェクトは、1 つのタイム ゾーンでシリアル化、<xref:System.DateTime.ToBinary%2A>メソッドをおよび逆シリアル化し、別のタイム ゾーンで、<xref:System.DateTime.FromBinary%2A>メソッドは、結果で表されるローカル時間<xref:System.DateTime>オブジェクトが自動的に調整2 番目のタイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1789">If a local <xref:System.DateTime> object is serialized in one time zone by the <xref:System.DateTime.ToBinary%2A> method, and then deserialized in a different time zone by the <xref:System.DateTime.FromBinary%2A> method, the local time represented by the resulting <xref:System.DateTime> object is automatically adjusted to the second time zone.</span></span>  
  
     <span data-ttu-id="7ac35-1790">たとえば、<xref:System.DateTime>現地時刻の午後 3 時を表すオブジェクトを</span><span class="sxs-lookup"><span data-stu-id="7ac35-1790">For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M.</span></span> <span data-ttu-id="7ac35-1791">米国で実行されているアプリケーション太平洋標準時タイム ゾーンを使用して、<xref:System.DateTime.ToBinary%2A>を変換するメソッド<xref:System.DateTime>オブジェクト バイナリ値から。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1791">An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value.</span></span> <span data-ttu-id="7ac35-1792">米国で実行されている別のアプリケーション東部標準時ゾーンを使用して、<xref:System.DateTime.FromBinary%2A>を新しいバイナリ値に変換するメソッド<xref:System.DateTime>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1792">Another application that is executing in the U.S. Eastern Time zone uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object.</span></span> <span data-ttu-id="7ac35-1793">新しい値<xref:System.DateTime>オブジェクトが元の午後 3 時間の同じ時点を表している午後 6</span><span class="sxs-lookup"><span data-stu-id="7ac35-1793">The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M.</span></span> <span data-ttu-id="7ac35-1794">ただし、東部標準時ゾーンでのローカル時刻に調整されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1794">value, but is adjusted to local time in the Eastern Time zone.</span></span>  
  
-   <span data-ttu-id="7ac35-1795">場合、ローカルのバイナリ表現<xref:System.DateTime>値は、システムのローカル タイム ゾーンで無効な時刻を表します<xref:System.DateTime.FromBinary%2A>が呼び出されると、時間の調整が無効です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1795">If the binary representation of a local <xref:System.DateTime> value represents an invalid time in the local time zone of the system on which <xref:System.DateTime.FromBinary%2A> is called, the time is adjusted so that it is valid.</span></span>  
  
     <span data-ttu-id="7ac35-1796">たとえば、標準時間から夏時間への移行は、米国内に発生します。太平洋標準時タイム ゾーン、2010 年 3 月 14 日、午前 2時 00分に時間が午前 3 時に、1 時間進み</span><span class="sxs-lookup"><span data-stu-id="7ac35-1796">For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="7ac35-1797">この時間の間隔とは、無効な時間、つまり、このタイム ゾーンに存在しません時間間隔です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1797">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="7ac35-1798">次の例を時間内にあるときにこの範囲が、バイナリ値に変換されます、<xref:System.DateTime.ToBinary%2A>メソッドで復元が、<xref:System.DateTime.FromBinary%2A>メソッド、元の値が有効な時刻に調整します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1798">The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="7ac35-1799">特定の日付と時刻の値に渡すことでの変更対象とする可能性があるかどうかを確認することができます、<xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=nameWithType>メソッドの例として示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1799">You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=nameWithType> method, as the example illustrates.</span></span>  
  
     [!code-csharp[System.DateTime.FromBinary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)]
     [!code-vb[System.DateTime.FromBinary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)]  
  
## <a name="version-considerations"></a><span data-ttu-id="7ac35-1800">バージョンの考慮事項</span><span class="sxs-lookup"><span data-stu-id="7ac35-1800">Version Considerations</span></span>  
 <span data-ttu-id="7ac35-1801">.NET Framework バージョン 2.0 以降、<xref:System.DateTime>構造体を指定した時刻の値を現地時刻、世界協定時刻 (UTC)、またはそのどちらでもないに基づくかどうかを示す、プライベートなフィールドと、タイマー刻みのプライベート フィールドで構成されますが日付と時刻を指定する 100 ナノ秒タイマー刻みの数が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1801">Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time value is based on local time, Coordinated Universal Time (UTC), or neither, and a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time.</span></span> <span data-ttu-id="7ac35-1802">タイマー刻みのフィールドをアクセスするのには、<xref:System.DateTime.Ticks%2A>プロパティと種類のフィールドにアクセスできる、<xref:System.DateTime.Kind%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1802">The Ticks field can be accessed with the <xref:System.DateTime.Ticks%2A> property and the Kind field can be accessed with the <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="7ac35-1803">シリアル化する場合は、.NET Framework 2.0 より前、<xref:System.DateTime>などのシリアル化インターフェイスを使用してではなく、手動でオブジェクト<xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>、タイマー刻みのデータをシリアル化するだけに必要な<xref:System.DateTime>構造体。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1803">Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>, you only needed to serialize the Ticks data in the <xref:System.DateTime> structure.</span></span> <span data-ttu-id="7ac35-1804">バージョン 2.0 以降、種類のデータをシリアルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1804">Starting with version 2.0, you must also serialize the Kind data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.FromBinary(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="Today">
      <MemberSignature Language="C#" Value="public static DateTime Today { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Today" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Today" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Today As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Today { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Today : DateTime" Usage="System.DateTime.Today" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ac35-1805">現在の日付を取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1805">Gets the current date.</span></span></summary>
        <value><span data-ttu-id="7ac35-1806">今日の日付を表すオブジェクト (ただし、時刻部分は 00:00:00)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1806">An object that is set to today's date, with the time component set to 00:00:00.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1807">以降、.NET Framework version 2.0 では、戻り値は、<xref:System.DateTime>が<xref:System.DateTime.Kind%2A>プロパティが返す<xref:System.DateTimeKind.Local>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1807">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind.Local>.</span></span>  
  
 <span data-ttu-id="7ac35-1808">現在の時刻のない現在の日付を返すため、<xref:System.DateTime.Today%2A>プロパティは日付のみを操作するアプリケーションでの使用に適しています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1808">Because it returns the current date without the current time, the <xref:System.DateTime.Today%2A> property is suitable for use in applications that work with dates only.</span></span> <span data-ttu-id="7ac35-1809">詳細については、次を参照してください。[選択の間で DateTime、DateTimeOffset、TimeSpan、および TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md)します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1809">For details, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md).</span></span> <span data-ttu-id="7ac35-1810">これに対し、<xref:System.DateTime.TimeOfDay%2A>プロパティは、現在の日付を使用せず、現在の時刻を返します、<xref:System.DateTime.Now%2A>プロパティは、現在の日付と現在の時刻の両方を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1810">In contrast, the <xref:System.DateTime.TimeOfDay%2A> property returns the current time without the current date, and the <xref:System.DateTime.Now%2A> property returns both the current date and the current time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1811">次の例では、<xref:System.DateTime.Date%2A>プロパティを現在の日付を取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1811">The following example uses the <xref:System.DateTime.Date%2A> property to retrieve the current date.</span></span> <span data-ttu-id="7ac35-1812">示されている方法、<xref:System.DateTime>値は、標準の日付と時刻の書式指定文字列の一部を使用して書式設定できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1812">It also illustrates how a <xref:System.DateTime> value can be formatted using some of the standard date and time format strings.</span></span> <span data-ttu-id="7ac35-1813">3 番目の呼び出しによって、出力が生成されることに注意してください、<xref:System.DateTime.ToString%28System.String%29>メソッドでは、g 書式指定子を使用して、時刻部分には、0 が含まれます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1813">Note that the output produced by the third call to the <xref:System.DateTime.ToString%28System.String%29> method uses the g format specifier to include the time component, which is zero.</span></span>  
  
 [!code-csharp[System.DateTime.Today#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Today/cs/Today1.cs#1)]
 [!code-vb[System.DateTime.Today#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Today/vb/Today1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Now" />
        <altmember cref="P:System.DateTime.TimeOfDay" />
      </Docs>
    </Member>
    <Member MemberName="ToFileTime">
      <MemberSignature Language="C#" Value="public long ToFileTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToFileTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToFileTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToFileTime () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToFileTime();" />
      <MemberSignature Language="F#" Value="member this.ToFileTime : unit -&gt; int64" Usage="dateTime.ToFileTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ac35-1814">現在の <see cref="T:System.DateTime" /> オブジェクトの値を Windows ファイル時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1814">Converts the value of the current <see cref="T:System.DateTime" /> object to a Windows file time.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1815">現在の <see cref="T:System.DateTime" /> オブジェクトの値を Windows ファイル時刻で表した値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1815">The value of the current <see cref="T:System.DateTime" /> object expressed as a Windows file time.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1816">Windows ファイル時刻の西暦 1601 年 1 月 1 日午前 12時 00分以降の経過時間を 100 ナノ秒間隔の数を表す 64 ビット値は、します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1816">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="7ac35-1817">(西暦)世界協定時刻 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1817">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="7ac35-1818">Windows では、アプリケーションの作成、アクセスすると、またはファイルに書き込むときを記録するファイルの時刻を使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1818">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="7ac35-1819"><xref:System.DateTime.ToFileTime%2A>メソッドは、<xref:System.DateTime.Kind%2A>プロパティを確認するかどうか、現在<xref:System.DateTime>オブジェクトが現地時刻、UTC 時刻、または未指定の種類、現地時刻として扱われる時間の。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1819">The <xref:System.DateTime.ToFileTime%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a local time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1820">次の例で、<xref:System.DateTime.ToFileTime%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1820">The following example demonstrates the <xref:System.DateTime.ToFileTime%2A> method.</span></span>  
  
 [!code-cpp[DateTime.ToFileTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToFileTime/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.ToFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToFileTime/CS/class1.cs#1)]
 [!code-vb[DateTime.ToFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToFileTime/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-1821">結果のファイル時刻が、</span><span class="sxs-lookup"><span data-stu-id="7ac35-1821">The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E.</span></span> <span data-ttu-id="7ac35-1822">西暦 1601 年 1 月 1 日深夜 12:00 時 (UTC) よりも前の日時を表すことがあります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1822">UTC.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="7ac35-1823">通常、<see cref="M:System.DateTime.FromFileTime(System.Int64)" />メソッドの復元、<see cref="T:System.DateTime" />によって保存された値、<see cref="M:System.DateTime.ToFileTime" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1823">Ordinarily, the <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> method restores a <see cref="T:System.DateTime" /> value that was saved by the <see cref="M:System.DateTime.ToFileTime" /> method.</span></span> <span data-ttu-id="7ac35-1824">ただし、2 つの値は、次の条件下で異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1824">However, the two values may differ under the following conditions:</span></span> 
<span data-ttu-id="7ac35-1825">If の逆シリアル化とシリアル化、<see cref="T:System.DateTime" />値が異なるタイム ゾーンで発生します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1825">-   If the serialization and deserialization of the <see cref="T:System.DateTime" /> value occur in different time zones.</span></span> <span data-ttu-id="7ac35-1826">たとえば場合、<see cref="T:System.DateTime" />時間が午後 12 時 30 分の値</span><span class="sxs-lookup"><span data-stu-id="7ac35-1826">For example, if a <see cref="T:System.DateTime" /> value with a time of 12:30 P.M.</span></span> <span data-ttu-id="7ac35-1827">米国の東部標準時ゾーンのシリアル化し、逆シリアル化し、米国の太平洋標準時タイム ゾーン、午後 12 時 30 分の元の値</span><span class="sxs-lookup"><span data-stu-id="7ac35-1827">in the U.S. Eastern Time zone is serialized, and then deserialized in the U.S. Pacific Time zone, the original value of 12:30 P.M.</span></span> <span data-ttu-id="7ac35-1828">午前 9 時 30 分に調整されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1828">is adjusted to 9:30 A.M.</span></span> <span data-ttu-id="7ac35-1829">2 つのタイム ゾーンの違いを反映します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1829">to reflect the difference between the two time zones.</span></span>  
  
<span data-ttu-id="7ac35-1830">If、<see cref="T:System.DateTime" />シリアル化された値がローカル タイム ゾーンで無効な時刻を表します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1830">-   If the <see cref="T:System.DateTime" /> value that is serialized represents an invalid time in the local time zone.</span></span> <span data-ttu-id="7ac35-1831">ここで、<see cref="M:System.DateTime.ToFileTime" />メソッドは、調整、復元された<see cref="T:System.DateTime" />をローカル タイム ゾーンで有効な時刻を表すように値します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1831">In this case, the <see cref="M:System.DateTime.ToFileTime" /> method adjusts the restored <see cref="T:System.DateTime" /> value so that it represents a valid time in the local time zone.</span></span>  
  
<span data-ttu-id="7ac35-1832">たとえば、標準時間から夏時間への移行は、米国内に発生します。太平洋標準時タイム ゾーン、2010 年 3 月 14 日、午前 2時 00分に時間が午前 3 時に、1 時間進み</span><span class="sxs-lookup"><span data-stu-id="7ac35-1832">For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="7ac35-1833">この時間の間隔とは、無効な時間、つまり、このタイム ゾーンに存在しません時間間隔です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1833">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="7ac35-1834">次の例を時間内にあるときにこの範囲が、長整数値に変換されます、<see cref="M:System.DateTime.ToFileTime" />メソッドで復元が、<see cref="M:System.DateTime.FromFileTime(System.Int64)" />メソッド、元の値が有効な時刻に調整します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1834">The following example shows that when a time that falls within this range is converted to a long integer value by the <see cref="M:System.DateTime.ToFileTime" /> method and is then restored by the <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="7ac35-1835">特定の日付と時刻の値に渡すことでの変更対象とする可能性があるかどうかを確認することができます、<see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />メソッドの例として示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1835">You can determine whether a particular date and time value may be subject to modification by passing it to the <see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" /> method, as the example illustrates.</span></span>  
  
<span data-ttu-id="7ac35-1836">[! コード csharp[System.DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.fromfiletime/cs/fromfiletime1.cs#1)] [! コード vb[System.DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.fromfiletime/vb/fromfiletime1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="7ac35-1836">[!code-csharp[System.DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.fromfiletime/cs/fromfiletime1.cs#1)] [!code-vb[System.DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.fromfiletime/vb/fromfiletime1.vb#1)]</span></span></para></block>
        <altmember cref="M:System.DateTime.ToFileTimeUtc" />
        <altmember cref="T:System.Int64" />
        <altmember cref="M:System.DateTime.ToUniversalTime" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="ToFileTimeUtc">
      <MemberSignature Language="C#" Value="public long ToFileTimeUtc ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToFileTimeUtc() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToFileTimeUtc" />
      <MemberSignature Language="VB.NET" Value="Public Function ToFileTimeUtc () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToFileTimeUtc();" />
      <MemberSignature Language="F#" Value="member this.ToFileTimeUtc : unit -&gt; int64" Usage="dateTime.ToFileTimeUtc " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ac35-1837">現在の <see cref="T:System.DateTime" /> オブジェクトの値を Windows ファイル時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1837">Converts the value of the current <see cref="T:System.DateTime" /> object to a Windows file time.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1838">現在の <see cref="T:System.DateTime" /> オブジェクトの値を Windows ファイル時刻で表した値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1838">The value of the current <see cref="T:System.DateTime" /> object expressed as a Windows file time.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1839">Windows ファイル時刻の西暦 1601 年 1 月 1 日午前 12時 00分以降の経過時間を 100 ナノ秒間隔の数を表す 64 ビット値は、します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1839">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="7ac35-1840">(西暦)世界協定時刻 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1840">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="7ac35-1841">Windows では、アプリケーションの作成、アクセスすると、またはファイルに書き込むときを記録するファイルの時刻を使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1841">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="7ac35-1842"><xref:System.DateTime.ToFileTimeUtc%2A>メソッドは、<xref:System.DateTime.Kind%2A>プロパティを確認するかどうか、現在<xref:System.DateTime>オブジェクトが現地時刻、UTC 時刻、または時刻が UTC 時刻として扱われる種が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1842">The <xref:System.DateTime.ToFileTimeUtc%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a UTC time.</span></span> <span data-ttu-id="7ac35-1843">現地時刻である場合、時刻を UTC に変換を Windows ファイル時刻への変換を実行する前にします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1843">If it is a local time, it converts the time to UTC before performing the conversion to a Windows file time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-1844">結果のファイル時刻が、</span><span class="sxs-lookup"><span data-stu-id="7ac35-1844">The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E.</span></span> <span data-ttu-id="7ac35-1845">西暦 1601 年 1 月 1 日深夜 12:00 時 (UTC) よりも前の日時を表すことがあります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1845">UTC.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="7ac35-1846"><see cref="M:System.DateTime.ToFileTimeUtc" />メソッドが、現地時刻を UTC に変換して、その後に呼び出すことによって復元するため、<see cref="M:System.DateTime.FromFileTimeUtc(System.Int64)" />メソッドに続けて、<see cref="M:System.DateTime.ToLocalTime" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1846">The <see cref="M:System.DateTime.ToFileTimeUtc" /> method is sometimes used to convert a local time to UTC, and subsequently to restore it by calling the <see cref="M:System.DateTime.FromFileTimeUtc(System.Int64)" /> method followed by the <see cref="M:System.DateTime.ToLocalTime" /> method.</span></span> <span data-ttu-id="7ac35-1847">ただし、ローカル タイム ゾーンを元の時刻が無効な時刻を表している場合、2 つのローカル時刻の値はいないと等しいします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1847">However, if the original time represents an invalid time in the local time zone, the two local time values will not be equal.</span></span> <span data-ttu-id="7ac35-1848">詳細については、次を参照してください。、<see cref="M:System.DateTime.ToLocalTime" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1848">For additional information, see the <see cref="M:System.DateTime.ToLocalTime" /> method.</span></span></para></block>
        <altmember cref="M:System.DateTime.ToFileTime" />
        <altmember cref="T:System.Int64" />
        <altmember cref="M:System.DateTime.ToUniversalTime" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="ToLocalTime">
      <MemberSignature Language="C#" Value="public DateTime ToLocalTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime ToLocalTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToLocalTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLocalTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime ToLocalTime();" />
      <MemberSignature Language="F#" Value="member this.ToLocalTime : unit -&gt; DateTime" Usage="dateTime.ToLocalTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ac35-1849">現在の <see cref="T:System.DateTime" /> オブジェクトの値を現地時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1849">Converts the value of the current <see cref="T:System.DateTime" /> object to local time.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1850"><see cref="P:System.DateTime.Kind" /> プロパティが <see cref="F:System.DateTimeKind.Local" /> であるオブジェクト。通常は、現在の <see cref="T:System.DateTime" /> オブジェクトと等価な現地時刻が値として格納されます。ただし、変換後の値が <see cref="F:System.DateTime.MaxValue" /> オブジェクトで表現可能な範囲を超えている場合は <see cref="T:System.DateTime" /> の値が格納され、逆に変換跡の値が <see cref="F:System.DateTime.MinValue" /> オブジェクトで表現可能な範囲を下回る場合は <see cref="T:System.DateTime" /> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1850">An object whose <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Local" />, and whose value is the local time equivalent to the value of the current <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MaxValue" /> if the converted value is too large to be represented by a <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MinValue" /> if the converted value is too small to be represented as a <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1851">ローカル時刻は世界協定時刻 (UTC) 時刻と UTC オフセットです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1851">The local time is equal to the Coordinated Universal Time (UTC) time plus the UTC offset.</span></span> <span data-ttu-id="7ac35-1852">UTC オフセットの詳細については、次を参照してください。<xref:System.TimeZone.GetUtcOffset%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1852">For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-1853">変換も考慮現在によって表される時刻に適用される夏時間規則<xref:System.DateTime>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1853">The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7ac35-1854">[!INCLUDE[winxp](~/includes/winxp-md.md)] 、システム、<xref:System.DateTime.ToLocalTime%2A>メソッドは、UTC から現地時刻に変換するときに、現在の調整規則のみを認識します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1854">On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToLocalTime%2A> method recognizes only the current adjustment rule when converting from UTC to local time.</span></span> <span data-ttu-id="7ac35-1855">その結果、現在の調整規則を有効にされる前に、の期間を変換すると、UTC と現地時刻の差が正確には反映されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1855">As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between UTC and local time.</span></span>  
  
 <span data-ttu-id="7ac35-1856">.NET Framework version 2.0 では、によって返される値で始まる、<xref:System.DateTime.ToLocalTime%2A>メソッドはによって決定されます、<xref:System.DateTime.Kind%2A>プロパティ、現在の<xref:System.DateTime>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1856">Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToLocalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object.</span></span> <span data-ttu-id="7ac35-1857">次の表では、考えられる結果について説明します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1857">The following table describes the possible results.</span></span>  
  
|<span data-ttu-id="7ac35-1858">種類</span><span class="sxs-lookup"><span data-stu-id="7ac35-1858">Kind</span></span>|<span data-ttu-id="7ac35-1859">結果</span><span class="sxs-lookup"><span data-stu-id="7ac35-1859">Results</span></span>|  
|----------|-------------|  
|<xref:System.DateTimeKind.Utc>|<span data-ttu-id="7ac35-1860">このインスタンスの<xref:System.DateTime>現地時刻に変換されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1860">This instance of <xref:System.DateTime> is converted to local time.</span></span>|  
|<xref:System.DateTimeKind.Local>|<span data-ttu-id="7ac35-1861">変換は行われません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1861">No conversion is performed.</span></span>|  
|<xref:System.DateTimeKind.Unspecified>|<span data-ttu-id="7ac35-1862">このインスタンス<xref:System.DateTime>、UTC 時刻と見なされます、変換を実行して場合と<xref:System.DateTime.Kind%2A>された<xref:System.DateTimeKind.Utc>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1862">This instance of <xref:System.DateTime> is assumed to be a UTC time, and the conversion is performed as if <xref:System.DateTime.Kind%2A> were <xref:System.DateTimeKind.Utc>.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="7ac35-1863"><xref:System.DateTime.ToLocalTime%2A>メソッドに変換する<xref:System.DateTime>値を UTC から現地時刻にします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1863">The <xref:System.DateTime.ToLocalTime%2A> method converts a <xref:System.DateTime> value from UTC to local time.</span></span> <span data-ttu-id="7ac35-1864">指定されたタイム ゾーンの時間を現地時刻に変換するを使用して、<xref:System.TimeZoneInfo.ConvertTime%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1864">To convert the time in any designated time zone to local time, use the <xref:System.TimeZoneInfo.ConvertTime%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7ac35-1865">変換によって返される値は、<xref:System.DateTime>が<xref:System.DateTime.Kind%2A>プロパティは常に返します<xref:System.DateTimeKind.Local>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1865">The value returned by the conversion is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property always returns <xref:System.DateTimeKind.Local>.</span></span> <span data-ttu-id="7ac35-1866">その結果、有効な結果が返される場合でも<xref:System.DateTime.ToLocalTime%2A>は同じに繰り返し適用<xref:System.DateTime>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1866">Consequently, a valid result is returned even if <xref:System.DateTime.ToLocalTime%2A> is applied repeatedly to the same <xref:System.DateTime>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1867">次の例で、<xref:System.DateTime.ToLocalTime%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1867">The following example demonstrates the <xref:System.DateTime.ToLocalTime%2A> method.</span></span> <span data-ttu-id="7ac35-1868">正確な出力が現在のカルチャおよび実行するシステムのローカル タイム ゾーンに依存しているに注意してください。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1868">Note that the exact output depends on the current culture and the local time zone of the system on which it is run.</span></span>  
  
 [!code-cpp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CS/class1.cs#1)]
 [!code-vb[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/VB/class1.vb#1)]  
  
 <span data-ttu-id="7ac35-1869">次の例では、<xref:System.DateTime.SpecifyKind%2A>メソッドを示すために、どのように<xref:System.DateTime.Kind%2A>プロパティの影響、<xref:System.DateTime.ToLocalTime%2A>と<xref:System.DateTime.ToUniversalTime%2A>変換メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1869">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="7ac35-1870">使用することができます、<see cref="M:System.DateTime.ToLocalTime" />ローカルの日時を UTC に変換された値を復元する方法、<see cref="M:System.DateTime.ToUniversalTime" />または<see cref="M:System.DateTime.FromFileTimeUtc(System.Int64)" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1870">You can use the <see cref="M:System.DateTime.ToLocalTime" /> method to restore a local date and time value that was converted to UTC by the <see cref="M:System.DateTime.ToUniversalTime" /> or <see cref="M:System.DateTime.FromFileTimeUtc(System.Int64)" /> method.</span></span> <span data-ttu-id="7ac35-1871">ただし、ローカル タイム ゾーンを元の時刻が無効な時刻を表している場合に一致しません、復元された値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1871">However, if the original time represents an invalid time in the local time zone, it will not match the restored value.</span></span> <span data-ttu-id="7ac35-1872">ときに、<see cref="M:System.DateTime.ToLocalTime" />メソッドは、時刻を UTC からローカル タイム ゾーンに変換、ローカル タイム ゾーンができるので有効な時間を調整します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1872">When the <see cref="M:System.DateTime.ToLocalTime" /> method converts a time from UTC to the local time zone, it also adjusts the time so that is valid in the local time zone.</span></span>  
  
<span data-ttu-id="7ac35-1873">たとえば、標準時間から夏時間への移行は、米国内に発生します。太平洋標準時タイム ゾーン、2010 年 3 月 14 日、午前 2時 00分に時間が午前 3 時に、1 時間進み</span><span class="sxs-lookup"><span data-stu-id="7ac35-1873">For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="7ac35-1874">この時間の間隔とは、無効な時間、つまり、このタイム ゾーンに存在しません時間間隔です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1874">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="7ac35-1875">次の例は、時間内にあるときにこの範囲は、UTC に変換を示しています、<see cref="M:System.DateTime.ToUniversalTime" />メソッドによって復元は、<see cref="M:System.DateTime.ToLocalTime" />メソッド、元の値が有効な時刻に調整します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1875">The following example shows that when a time that falls within this range is converted to UTC by the <see cref="M:System.DateTime.ToUniversalTime" /> method and is then restored by the <see cref="M:System.DateTime.ToLocalTime" /> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="7ac35-1876">特定の日付と時刻の値に渡すことでの変更対象とする可能性があるかどうかを確認することができます、<see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />メソッドの例として示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1876">You can determine whether a particular date and time value may be subject to modification by passing it to the <see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" /> method, as the example illustrates.</span></span>  
  
<span data-ttu-id="7ac35-1877">[! コード csharp[System.DateTime.ToLocalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tolocaltime/cs/tolocaltime1.cs#1)] [! コード vb[System.DateTime.ToLocalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tolocaltime/vb/tolocaltime1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="7ac35-1877">[!code-csharp[System.DateTime.ToLocalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tolocaltime/cs/tolocaltime1.cs#1)] [!code-vb[System.DateTime.ToLocalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tolocaltime/vb/tolocaltime1.vb#1)]</span></span></para></block>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
        <altmember cref="M:System.TimeZone.GetDaylightChanges(System.Int32)" />
        <altmember cref="M:System.DateTime.ToUniversalTime" />
      </Docs>
    </Member>
    <Member MemberName="ToLongDateString">
      <MemberSignature Language="C#" Value="public string ToLongDateString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToLongDateString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToLongDateString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLongDateString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToLongDateString();" />
      <MemberSignature Language="F#" Value="member this.ToLongDateString : unit -&gt; string" Usage="dateTime.ToLongDateString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ac35-1878">現在の <see cref="T:System.DateTime" /> オブジェクトの値を、それと等価な長い形式の日付の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1878">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent long date string representation.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1879">現在の <see cref="T:System.DateTime" /> オブジェクトを長い形式の日付で表した文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1879">A string that contains the long date string representation of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1880">現在の値<xref:System.DateTime>によって定義されたパターンを使用してオブジェクトの書式が、<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>現在のスレッド カルチャに関連付けられているプロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1880">The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> property associated with the current thread culture.</span></span> <span data-ttu-id="7ac35-1881">戻り値は"D"を指定することによって返される値と同じ[標準日時書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)で、<xref:System.DateTime.ToString%28System.String%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1881">The return value is identical to the value returned by specifying the "D" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7ac35-1882">によって返される文字列、<xref:System.DateTime.ToLongDateString%2A>メソッドはカルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1882">The string returned by the <xref:System.DateTime.ToLongDateString%2A> method is culture-sensitive.</span></span> <span data-ttu-id="7ac35-1883">現在のカルチャによって定義されたパターンが反映されている<xref:System.Globalization.DateTimeFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1883">It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="7ac35-1884">たとえば、EN-US カルチャの標準の長い日付パターンは、"dddd, MMMMdd、yyyy"です。DE-DE カルチャは"dddd, d です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1884">For example, for the en-US culture, the standard long date pattern is "dddd, MMMMdd, yyyy"; for the de-DE culture, it is "dddd, d.</span></span> <span data-ttu-id="7ac35-1885">MMMMyyyy";JA-JP カルチャで、これが"yyyy'? 'M'? 'd'? '"です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1885">MMMMyyyy"; for the ja-JP culture, it is "yyyy'?'M'?'d'?'".</span></span> <span data-ttu-id="7ac35-1886">特定のコンピューター上の特定の書式指定文字列は、標準の長い日付形式の文字列とは異なるようにもカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1886">The specific format string on a particular computer can also be customized so that it differs from the standard long date format string.</span></span>  
  
 <span data-ttu-id="7ac35-1887">現在のスレッド カルチャの詳細については、次を参照してください。、<xref:System.Threading.Thread.CurrentCulture%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1887">For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property.</span></span> <span data-ttu-id="7ac35-1888">によって生成される書式指定文字、書式パターン、および出力の詳細については、次を参照してください。、[型の書式設定](~/docs/standard/base-types/formatting-types.md)トピック。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1888">For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic.</span></span> <span data-ttu-id="7ac35-1889">書式指定文字に関連付けられている形式パターンを変更する方法についての詳細については、次を参照してください。、<xref:System.Globalization.DateTimeFormatInfo>クラス。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1889">For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1890">次の例で、<xref:System.DateTime.ToLongDateString%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1890">The following example demonstrates the <xref:System.DateTime.ToLongDateString%2A> method.</span></span>  
  
 [!code-csharp[DateTime.ToShortLongString#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToShortLongString/cs/sls.cs#1)]
 [!code-vb[DateTime.ToShortLongString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToShortLongString/vb/sls.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.DateTime.ToString" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="7ac35-1891">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="7ac35-1891">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1892">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1892">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToLongTimeString">
      <MemberSignature Language="C#" Value="public string ToLongTimeString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToLongTimeString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToLongTimeString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLongTimeString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToLongTimeString();" />
      <MemberSignature Language="F#" Value="member this.ToLongTimeString : unit -&gt; string" Usage="dateTime.ToLongTimeString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ac35-1893">現在の <see cref="T:System.DateTime" /> オブジェクトの値を、それと等価な長い形式の時刻の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1893">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent long time string representation.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1894">現在の <see cref="T:System.DateTime" /> オブジェクトを長い形式の時刻で表した文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1894">A string that contains the long time string representation of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1895">現在の値<xref:System.DateTime>によって定義されたパターンを使用してオブジェクトの書式が、<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=nameWithType>現在のスレッド カルチャに関連付けられているプロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1895">The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=nameWithType> property associated with the current thread culture.</span></span> <span data-ttu-id="7ac35-1896">戻り値は"T"を指定することによって返される値と同じ[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)で、<xref:System.DateTime.ToString%28System.String%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1896">The return value is identical to the value returned by specifying the "T" [standard date and time format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7ac35-1897">によって返される文字列、<xref:System.DateTime.ToLongTimeString%2A>メソッドはカルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1897">The string returned by the <xref:System.DateTime.ToLongTimeString%2A> method is culture-sensitive.</span></span> <span data-ttu-id="7ac35-1898">によって定義されたパターンが反映されている、<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>プロパティの現在のカルチャの<xref:System.Globalization.DateTimeFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1898">It reflects the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> property of the current culture's <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="7ac35-1899">たとえば、EN-US カルチャの標準の長い時刻パターンは、"h:mm:ss tt";DE-DE カルチャは"HH:mm:ss"です。JA-JP カルチャでは、"H:mm:ss"です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1899">For example, for the en-US culture, the standard long time pattern is "h:mm:ss tt"; for the de-DE culture, it is "HH:mm:ss"; for the ja-JP culture, it is "H:mm:ss".</span></span> <span data-ttu-id="7ac35-1900">特定のコンピューター上の特定の書式指定文字列は、標準の長い時刻形式の文字列とは異なるようにもカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1900">The specific format string on a particular computer can also be customized so that it differs from the standard long time format string.</span></span>  
  
 <span data-ttu-id="7ac35-1901">現在のスレッド カルチャの詳細については、次を参照してください。、<xref:System.Threading.Thread.CurrentCulture%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1901">For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property.</span></span> <span data-ttu-id="7ac35-1902">によって生成される書式指定文字、書式パターン、および出力の詳細については、次を参照してください。、[型の書式設定](~/docs/standard/base-types/formatting-types.md)トピック。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1902">For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic.</span></span> <span data-ttu-id="7ac35-1903">書式指定文字に関連付けられている形式パターンを変更する方法についての詳細については、次を参照してください。、<xref:System.Globalization.DateTimeFormatInfo>クラス。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1903">For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1904">次の例で、<xref:System.DateTime.ToLongTimeString%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1904">The following example demonstrates the <xref:System.DateTime.ToLongTimeString%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.ToLongTimeString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tolongtimestring/cs/sls.cs#1)]
 [!code-vb[System.DateTime.ToLongTimeString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tolongtimestring/vb/sls.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.DateTime.ToString" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="7ac35-1905">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="7ac35-1905">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1906">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1906">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToOADate">
      <MemberSignature Language="C#" Value="public double ToOADate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 ToOADate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToOADate" />
      <MemberSignature Language="VB.NET" Value="Public Function ToOADate () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ToOADate();" />
      <MemberSignature Language="F#" Value="member this.ToOADate : unit -&gt; double" Usage="dateTime.ToOADate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ac35-1907">このインスタンスの値をそれと等価な OLE オートメーション日付に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1907">Converts the value of this instance to the equivalent OLE Automation date.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1908">このインスタンスの値と等価の OLE オートメーション日付を格納している倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1908">A double-precision floating-point number that contains an OLE Automation date equivalent to the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1909">OLE オートメーション日付は、不可欠なコンポーネントは 1899 年 12 月 30日午前 0 時の前後に日数との小数部が 24 で割った値、その日の時刻を表す浮動小数点数として実装されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1909">An OLE Automation date is implemented as a floating-point number whose integral component is the number of days before or after midnight, 30 December 1899, and whose fractional component represents the time on that day divided by 24.</span></span> <span data-ttu-id="7ac35-1910">たとえば、午前 0 時、1899 年 12 月の 31 で表される 1.0 です。午前 6 時、1900 年 1 月 1日は 2.25; によって表されます。午前 0 時 29 1899 年 12 月は、-1.0; で表される午前 6 時 29 1899 年 12 月が-1.25 で表されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1910">For example, midnight, 31 December 1899 is represented by 1.0; 6 A.M., 1 January 1900 is represented by 2.25; midnight, 29 December 1899 is represented by -1.0; and 6 A.M., 29 December 1899 is represented by -1.25.</span></span>  
  
 <span data-ttu-id="7ac35-1911">基本 OLE オートメーション日付は、午前 0 時、1899 年 12 月の 30 です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1911">The base OLE Automation Date is midnight, 30 December 1899.</span></span> <span data-ttu-id="7ac35-1912">OLE オートメーション日付の最小値は、午前 0 時、1 年 0100年 1 月です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1912">The minimum OLE Automation date is midnight, 1 January 0100.</span></span> <span data-ttu-id="7ac35-1913">最大 OLE オートメーション日付が同じ<xref:System.DateTime.MaxValue?displayProperty=nameWithType>、12 月 31 日の最後の瞬間 9999 です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1913">The maximum OLE Automation Date is the same as <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, the last moment of 31 December 9999.</span></span>  
  
 <span data-ttu-id="7ac35-1914"><xref:System.DateTime.ToOADate%2A>メソッドがスローされます、<xref:System.OverflowException>現在のインスタンスがよりも後の日付を表すかどうか<xref:System.DateTime.MinValue>の午前 0 時、January1 0100 より以前のバージョン。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1914">The <xref:System.DateTime.ToOADate%2A> method throws an <xref:System.OverflowException> if the current instance represents a date that is later than <xref:System.DateTime.MinValue> and earlier than midnight on January1, 0100.</span></span> <span data-ttu-id="7ac35-1915">ただし、現在のインスタンスの値が場合<xref:System.DateTime.MinValue>0 が返されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1915">However, if the value of the current instance is <xref:System.DateTime.MinValue>, the method returns 0.</span></span>  
  
 <span data-ttu-id="7ac35-1916">OLE オートメーションの詳細については、次を参照してください。、 [MSDN ライブラリ](https://go.microsoft.com/fwlink/?linkid=37118)します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1916">For more information about OLE Automation, see the [MSDN Library](https://go.microsoft.com/fwlink/?linkid=37118).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ac35-1917">このインスタンスの値を OLE オートメーション日付として表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1917">The value of this instance cannot be represented as an OLE Automation Date.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.DateTime.FromOADate(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ToShortDateString">
      <MemberSignature Language="C#" Value="public string ToShortDateString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToShortDateString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToShortDateString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToShortDateString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToShortDateString();" />
      <MemberSignature Language="F#" Value="member this.ToShortDateString : unit -&gt; string" Usage="dateTime.ToShortDateString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ac35-1918">現在の <see cref="T:System.DateTime" /> オブジェクトの値を、それと等価な短い形式の日付の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1918">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent short date string representation.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1919">現在の <see cref="T:System.DateTime" /> オブジェクトを短い形式の日付で表した文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1919">A string that contains the short date string representation of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1920">現在の値<xref:System.DateTime>によって定義されたパターンを使用してオブジェクトの書式が、<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A?displayProperty=nameWithType>現在のスレッド カルチャに関連付けられているプロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1920">The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A?displayProperty=nameWithType> property associated with the current thread culture.</span></span> <span data-ttu-id="7ac35-1921">戻り値は"d"を指定することによって返される値と同じ[標準日時書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)で、<xref:System.DateTime.ToString%28System.String%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1921">The return value is identical to the value returned by specifying the "d" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7ac35-1922">によって返される文字列、<xref:System.DateTime.ToShortDateString%2A>メソッドはカルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1922">The string returned by the <xref:System.DateTime.ToShortDateString%2A> method is culture-sensitive.</span></span> <span data-ttu-id="7ac35-1923">現在のカルチャによって定義されたパターンが反映されている<xref:System.Globalization.DateTimeFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1923">It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="7ac35-1924">たとえば、EN-US カルチャの標準の短い日付パターンは、"m/d/yyyy";DE-DE カルチャで、これが"dd. です。MM.yyyy";JA-JP カルチャでは、"yyyy/M/d"です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1924">For example, for the en-US culture, the standard short date pattern is "M/d/yyyy"; for the de-DE culture, it is "dd.MM.yyyy"; for the ja-JP culture, it is "yyyy/M/d".</span></span> <span data-ttu-id="7ac35-1925">特定のコンピューター上の特定の書式指定文字列は、標準の短い日付形式の文字列とは異なるようにもカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1925">The specific format string on a particular computer can also be customized so that it differs from the standard short date format string.</span></span>  
  
 <span data-ttu-id="7ac35-1926">現在のスレッド カルチャの詳細については、次を参照してください。、<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1926">For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="7ac35-1927">によって生成される書式指定文字、書式パターン、および出力の詳細については、次を参照してください。、[型の書式設定](~/docs/standard/base-types/formatting-types.md)トピック。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1927">For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic.</span></span> <span data-ttu-id="7ac35-1928">書式指定文字に関連付けられている形式パターンを変更する方法についての詳細については、次を参照してください。、<xref:System.Globalization.DateTimeFormatInfo>クラス。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1928">For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1929">次の例で、<xref:System.DateTime.ToShortDateString%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1929">The following example demonstrates the <xref:System.DateTime.ToShortDateString%2A> method.</span></span> <span data-ttu-id="7ac35-1930">表示される呼び出しの結果、<xref:System.DateTime.ToShortDateString%2A>メソッドを呼び出すことと同じ、<xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>形式のパラメーターとして"d"を持つメソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1930">It also shows that the result of calling the <xref:System.DateTime.ToShortDateString%2A> method is identical to calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method with "d" as the format parameter.</span></span>  
  
 [!code-csharp[System.DateTime.ToShortDateString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToShortDateString/cs/ToShortDateString.cs#1)]
 [!code-vb[System.DateTime.ToShortDateString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToShortDateString/vb/ToShortDateString.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.DateTime.ToString" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="7ac35-1931">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="7ac35-1931">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1932">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1932">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToShortTimeString">
      <MemberSignature Language="C#" Value="public string ToShortTimeString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToShortTimeString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToShortTimeString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToShortTimeString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToShortTimeString();" />
      <MemberSignature Language="F#" Value="member this.ToShortTimeString : unit -&gt; string" Usage="dateTime.ToShortTimeString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ac35-1933">現在の <see cref="T:System.DateTime" /> オブジェクトの値を、それと等価な短い形式の時刻の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1933">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent short time string representation.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1934">現在の <see cref="T:System.DateTime" /> オブジェクトを短い形式の時刻で表した文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1934">A string that contains the short time string representation of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1935">現在の値<xref:System.DateTime>によって定義されたパターンを使用してオブジェクトの書式が、<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A?displayProperty=nameWithType>現在のスレッド カルチャに関連付けられているプロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1935">The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A?displayProperty=nameWithType> property associated with the current thread culture.</span></span> <span data-ttu-id="7ac35-1936">戻り値は"t"を指定することによって返される値と同じ[標準日時書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)で、<xref:System.DateTime.ToString%28System.String%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1936">The return value is identical to the value returned by specifying the "t" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7ac35-1937">によって返される文字列、<xref:System.DateTime.ToShortTimeString%2A>メソッドはカルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1937">The string returned by the <xref:System.DateTime.ToShortTimeString%2A> method is culture-sensitive.</span></span> <span data-ttu-id="7ac35-1938">現在のカルチャによって定義されたパターンが反映されている<xref:System.Globalization.DateTimeFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1938">It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="7ac35-1939">たとえば、EN-US カルチャの標準の短い時刻パターンは、"h:mm tt";DE-DE カルチャは"HH:mm"です。JA-JP カルチャでは、"H:mm"です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1939">For example, for the en-US culture, the standard short time pattern is "h:mm tt"; for the de-DE culture, it is "HH:mm"; for the ja-JP culture, it is "H:mm".</span></span> <span data-ttu-id="7ac35-1940">特定のコンピューター上の特定の書式指定文字列は、標準の短い時刻形式の文字列とは異なるようにもカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1940">The specific format string on a particular computer can also be customized so that it differs from the standard short time format string.</span></span>  
  
 <span data-ttu-id="7ac35-1941">現在のスレッド カルチャの詳細については、次を参照してください。、<xref:System.Threading.Thread.CurrentCulture%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1941">For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property.</span></span> <span data-ttu-id="7ac35-1942">によって生成される書式指定文字、書式パターン、および出力の詳細については、次を参照してください。、[型の書式設定](~/docs/standard/base-types/formatting-types.md)トピック。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1942">For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic.</span></span> <span data-ttu-id="7ac35-1943">書式指定文字に関連付けられている形式パターンを変更する方法についての詳細については、次を参照してください。、<xref:System.Globalization.DateTimeFormatInfo>クラス。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1943">For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1944">次の例で、<xref:System.DateTime.ToShortTimeString%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1944">The following example demonstrates the <xref:System.DateTime.ToShortTimeString%2A> method.</span></span>  
  
 [!code-csharp[DateTime.ToShortLongString#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToShortLongString/cs/sls.cs#1)]
 [!code-vb[DateTime.ToShortLongString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToShortLongString/vb/sls.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.DateTime.ToString" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="7ac35-1945">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="7ac35-1945">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="7ac35-1946">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-1946">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ac35-1947">現在の <see cref="T:System.DateTime" /> オブジェクトの値を等価の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1947">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dateTime.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ac35-1948">現在のカルチャの書式指定規則を使用して、現在の <see cref="T:System.DateTime" /> オブジェクトの値をそれと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1948">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the formatting conventions of the current culture.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1949">現在の <see cref="T:System.DateTime" /> オブジェクトの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1949">A string representation of the value of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1950">現在の値<xref:System.DateTime>オブジェクトは、一般の日付と時刻の書式指定子 ("G") を使用して書式設定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1950">The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G').</span></span> <span data-ttu-id="7ac35-1951">特定の日付と時刻の書式指定子を使用して、書式設定を呼び出す、<xref:System.DateTime.ToString%28System.String%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1951">To format it using a specific date and time format specifier, call the <xref:System.DateTime.ToString%28System.String%29> method.</span></span> <span data-ttu-id="7ac35-1952">一般の日付と時刻の書式指定子 ("G") を使用して、特定のカルチャの書式を設定する呼び出し、<xref:System.DateTime.ToString%28System.IFormatProvider%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1952">To format it using the general date and time format specifier ('G') for a specific culture, call the <xref:System.DateTime.ToString%28System.IFormatProvider%29> method.</span></span> <span data-ttu-id="7ac35-1953">特定の日付と時刻の書式指定子と、特定のカルチャの規則を使用して、書式設定を呼び出す、<xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1953">To format it using a specific date and time format specifier and the conventions of a specific culture, call the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="7ac35-1954">このメソッドは、基に、現在のカルチャの書式情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1954">This method uses formatting information derived from the current culture.</span></span> <span data-ttu-id="7ac35-1955">具体的には、によって返されるカスタム書式指定文字列を組み合わせて、<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>と<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>のプロパティ、<xref:System.Globalization.DateTimeFormatInfo>によって返されるオブジェクト、`Thread.CurrentThread.CurrentCulture.DateTimeFormat`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1955">In particular, it combines the custom format strings returned by the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> and <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> properties of the <xref:System.Globalization.DateTimeFormatInfo> object returned by the `Thread.CurrentThread.CurrentCulture.DateTimeFormat` property.</span></span> <span data-ttu-id="7ac35-1956">詳細については、「<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1956">For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-1957">他のオーバー ロード、<xref:System.DateTime.ToString%2A>メソッドを使用するカルチャを指定を使用しての出力のパターンを定義する書式、<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1957">Other overloads of the <xref:System.DateTime.ToString%2A> method enable you to specify the culture whose formatting to use and to define the output pattern of the <xref:System.DateTime> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1958">次の例を示して 方法の文字列表現を<xref:System.DateTime>によって返される値、<xref:System.DateTime.ToString>メソッドは、現在のスレッド カルチャによって異なります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1958">The following example illustrates how the string representation of a <xref:System.DateTime> value returned by the <xref:System.DateTime.ToString> method depends on the thread current culture.</span></span> <span data-ttu-id="7ac35-1959">JA-JP を FR-FR に、現在のスレッド カルチャを en-us (英語) から変更します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1959">It changes the current thread culture from en-US to fr-FR to ja-JP.</span></span> <span data-ttu-id="7ac35-1960">各呼び出しの場合、<xref:System.DateTime.ToString>そのカルチャを使用して日付と時刻の値の文字列表現を取得するメソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1960">and in each case calls the <xref:System.DateTime.ToString> method to return the string representation of a date and time value using that culture.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.DateTime.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-1961">日時が、現在のカルチャで使用されるカレンダーでサポートされている日付の範囲外です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1961">The date and time is outside the range of dates supported by the calendar used by the current culture.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="7ac35-1962"><see cref="M:System.DateTime.ToString" />メソッドは、現在のカルチャで使用される暦で日付と時刻の文字列表現を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1962">The <see cref="M:System.DateTime.ToString" /> method returns the string representation of the date and time in the calendar used by the current culture.</span></span> <span data-ttu-id="7ac35-1963">場合、現在の値<see cref="T:System.DateTime" />インスタンスがよりも前か<see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />かそれより遅い<see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />がスローされます、<see cref="T:System.ArgumentOutOfRangeException" />します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1963">If the value of the current <see cref="T:System.DateTime" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="7ac35-1964">具体的な例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1964">The following example provides an illustration.</span></span> <span data-ttu-id="7ac35-1965">範囲外にある日付の書式設定しようと、<see cref="T:System.Globalization.HijriCalendar" />クラスの現在のカルチャがアラビア語 (シリア)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1965">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.HijriCalendar" /> class when the current culture is Arabic (Syria).</span></span>  
  
<span data-ttu-id="7ac35-1966">[! コード csharp[System.DateTime.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception2.cs#2)] [! コード vb[System.DateTime.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception2.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="7ac35-1966">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception2.cs#2)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception2.vb#2)]</span></span></para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="dateTime.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ac35-1967">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1967">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="7ac35-1968">指定したカルチャ固有の書式情報を使用して、現在の <see cref="T:System.DateTime" /> オブジェクトの値をそれと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1968">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1969"><see cref="T:System.DateTime" /> により指定された、現在の <paramref name="provider" /> オブジェクトの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1969">A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1970">現在の値<xref:System.DateTime>オブジェクトは、一般の日付と時刻書式指定子 ("G") が短い日付パターンと長い時刻のパターンを使用して出力を書式設定を使用して書式設定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1970">The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G'), which formats output using the short date pattern and the long time pattern.</span></span>  
  
 <span data-ttu-id="7ac35-1971">短い形式の日付と長い時刻パターンの書式を定義して、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1971">The format of the short date and long time pattern is defined by the `provider` parameter.</span></span> <span data-ttu-id="7ac35-1972">`provider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1972">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="7ac35-1973">A<xref:System.Globalization.CultureInfo>書式指定規則が返される文字列に反映するのには、カルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1973">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="7ac35-1974"><xref:System.Globalization.DateTimeFormatInfo>によって返されるオブジェクト、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>プロパティが返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1974">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="7ac35-1975">A<xref:System.Globalization.DateTimeFormatInfo>日付と時刻のデータの書式を定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1975">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="7ac35-1976">実装するカスタム オブジェクト、<xref:System.IFormatProvider>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1976">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="7ac35-1977">その<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します。 を<xref:System.Globalization.DateTimeFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1977">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="7ac35-1978">場合`provider`は`null`、<xref:System.Globalization.DateTimeFormatInfo>現在のカルチャに関連付けられているオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1978">If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object associated with the current culture is used.</span></span> <span data-ttu-id="7ac35-1979">詳細については、「<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1979">For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-1980">次の例は、日付と時刻を使用しての文字列形式を表示<xref:System.Globalization.CultureInfo>5 つの異なるカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1980">The following example displays the string representation of a date and time using <xref:System.Globalization.CultureInfo> objects that represent five different cultures.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString4.cs#3)]
 [!code-vb[System.DateTime.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString4.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-1981">日時が、<paramref name="provider" /> で使用されるカレンダーでサポートされている日付の範囲外です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1981">The date and time is outside the range of dates supported by the calendar used by <paramref name="provider" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="7ac35-1982"><see cref="M:System.DateTime.ToString(System.IFormatProvider)" />メソッドは、によって表されるカルチャで使用される暦で日付と時刻の文字列表現を返します、<paramref name="provider" />パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1982">The <see cref="M:System.DateTime.ToString(System.IFormatProvider)" /> method returns the string representation of the date and time in the calendar used by the culture represented by the <paramref name="provider" /> parameter.</span></span> <span data-ttu-id="7ac35-1983">そのカレンダーがによって定義されている、<see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1983">Its calendar is defined by the <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> property.</span></span> <span data-ttu-id="7ac35-1984">場合、現在の値<see cref="T:System.DateTime" />インスタンスがよりも前か<see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />かそれより遅い<see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />がスローされます、<see cref="T:System.ArgumentOutOfRangeException" />します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1984">If the value of the current <see cref="T:System.DateTime" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="7ac35-1985">具体的な例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1985">The following example provides an illustration.</span></span> <span data-ttu-id="7ac35-1986">範囲外にある日付の書式設定しようと、<see cref="T:System.Globalization.JapaneseCalendar" />クラス。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1986">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.JapaneseCalendar" /> class.</span></span>  
  
<span data-ttu-id="7ac35-1987">[! コード csharp[System.DateTime.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception1.cs#1)] [! コード vb[System.DateTime.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="7ac35-1987">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception1.cs#1)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception1.vb#1)]</span></span></para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="dateTime.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="7ac35-1988">標準またはカスタムの日時書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1988">A standard or custom date and time format string.</span></span></param>
        <summary><span data-ttu-id="7ac35-1989">指定した形式および現在のカルチャの書式指定規則を使用して、現在の <see cref="T:System.DateTime" /> オブジェクトの値をそれと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1989">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified format and the formatting conventions of the current culture.</span></span></summary>
        <returns><span data-ttu-id="7ac35-1990"><see cref="T:System.DateTime" /> により指定された、現在の <paramref name="format" /> オブジェクトの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1990">A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-1991"><xref:System.DateTime.ToString%28System.String%29>メソッドは、詳細については、現在のカルチャの書式指定規則を使用して、特定の形式で日付と時刻の値の文字列表現を返しますを参照してください<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1991">The <xref:System.DateTime.ToString%28System.String%29> method returns the string representation of a date and time value in a specific format that uses the formatting conventions of the current culture; for more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7ac35-1992">`format`パラメーターは、単一の書式指定子の文字を含める必要があります (を参照してください[Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) またはカスタム書式パターン (を参照してください[カスタム Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md))、返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1992">The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)) that defines the format of the returned string.</span></span> <span data-ttu-id="7ac35-1993">場合`format`は`null`または空の文字列、一般書式指定子、'G' を使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1993">If `format` is `null` or an empty string, the general format specifier, 'G', is used.</span></span>  
  
 <span data-ttu-id="7ac35-1994">このメソッドのいくつかの使用は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1994">Some uses of this method include:</span></span>  
  
-   <span data-ttu-id="7ac35-1995">文字列を取得すると、現在のカルチャの短い形式の日付と時刻の形式で日付と時刻が表示されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1995">Getting a string that displays the date and time in the current culture's short date and time format.</span></span> <span data-ttu-id="7ac35-1996">これを行うには、"G"書式指定子を使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1996">To do this, you use the "G" format specifier.</span></span>  
  
-   <span data-ttu-id="7ac35-1997">文字列を取得するには、月と年が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1997">Getting a string that contains only the month and year.</span></span> <span data-ttu-id="7ac35-1998">これを行うには、「年/日」の書式指定文字列を使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1998">To do this, you use the "MM/yyyy" format string.</span></span> <span data-ttu-id="7ac35-1999">書式指定文字列は、現在のカルチャの日付の区切り記号を使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-1999">The format string uses the current culture's date separator.</span></span>  
  
-   <span data-ttu-id="7ac35-2000">文字列を取得するには、特定の形式で日時が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2000">Getting a string that contains the date and time in a specific format.</span></span> <span data-ttu-id="7ac35-2001">たとえば、"MM dd/yyyyHH:mm"書式指定文字列の日付と時刻の文字列から固定形式でのなど表示"19//03//2013 18時 06分"。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2001">For example, the "MM/dd/yyyyHH:mm" format string displays the date and time string in a fixed format such as "19//03//2013 18:06".</span></span> <span data-ttu-id="7ac35-2002">書式指定文字列を使用してカルチャに固有の設定に関係なく、固定の日付の区切り記号として「/」。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2002">The format string uses "/" as a fixed date separator regardless of culture-specific settings.</span></span>  
  
-   <span data-ttu-id="7ac35-2003">日付文字列をシリアル化するための縮約された形式で日付を取得するを使用できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2003">Getting a date in a condensed format that could be used for serializing a date string.</span></span> <span data-ttu-id="7ac35-2004">たとえば、"yyyyMMdd"形式の文字列には、日付の区切り記号なし 2 桁の月と 2 桁の日がそれに続く 4 桁の年が表示されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2004">For example, the "yyyyMMdd" format string displays a four-digit year followed by a two-digit month and a two-digit day with no date separator.</span></span>  
  
 <span data-ttu-id="7ac35-2005">次の例では、これら 3 つの書式指定文字列を使用して、EN-US および FR-FR カルチャの規則を使用して日付と時刻の値を表示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2005">The following example uses these three format strings to display a date and time value by using the conventions of the en-US and fr-FR cultures.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/tostring5.cs#5)]
 [!code-vb[System.DateTime.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/tostring5.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-2006">次の例の文字列表現を表示する標準の日付と時刻の書式指定文字列のカスタム日時書式指定文字列の選択範囲を使用して、<xref:System.DateTime>値。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2006">The following example uses each of the standard date and time format strings and a selection of custom date and time format strings to display the string representation of a <xref:System.DateTime> value.</span></span> <span data-ttu-id="7ac35-2007">例では、現在のスレッド カルチャは EN-US です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2007">The thread current culture for the example is en-US.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString2.cs#2)]
 [!code-vb[System.DateTime.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="7ac35-2008"><paramref name="format" /> の長さは 1 であり、<see cref="T:System.Globalization.DateTimeFormatInfo" /> で定義されている書式指定子の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2008">The length of <paramref name="format" /> is 1, and it is not one of the format specifier characters defined for <see cref="T:System.Globalization.DateTimeFormatInfo" />.</span></span>  
  
<span data-ttu-id="7ac35-2009">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-2009">-or-</span></span> 
 <span data-ttu-id="7ac35-2010"><paramref name="format" /> には有効なカスタム書式パターンが含まれません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2010"><paramref name="format" /> does not contain a valid custom format pattern.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-2011">日時が、現在のカルチャで使用されるカレンダーでサポートされている日付の範囲外です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2011">The date and time is outside the range of dates supported by the calendar used by the current culture.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="7ac35-2012"><see cref="M:System.DateTime.ToString(System.String)" />メソッドは、現在のカルチャで使用される暦で日付と時刻の文字列表現を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2012">The <see cref="M:System.DateTime.ToString(System.String)" /> method returns the string representation of the date and time in the calendar used by the current culture.</span></span> <span data-ttu-id="7ac35-2013">場合、現在の値<see cref="T:System.DateTime" />インスタンスがよりも前か<see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />かそれより遅い<see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />がスローされます、<see cref="T:System.ArgumentOutOfRangeException" />します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2013">If the value of the current <see cref="T:System.DateTime" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="7ac35-2014">具体的な例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2014">The following example provides an illustration.</span></span> <span data-ttu-id="7ac35-2015">範囲外にある日付の書式設定しようと、<see cref="T:System.Globalization.HebrewCalendar" />クラスの現在のカルチャがヘブライ語 (イスラエル)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2015">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.HebrewCalendar" /> class when the current culture is Hebrew (Israel).</span></span>  
  
<span data-ttu-id="7ac35-2016">[! コード csharp[System.DateTime.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception3.cs#3)] [! コード vb[System.DateTime.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception3.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="7ac35-2016">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception3.cs#3)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception3.vb#3)]</span></span></para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="7ac35-2017">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="7ac35-2017">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="7ac35-2018">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-2018">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="7ac35-2019">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-2019">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="dateTime.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="7ac35-2020">標準またはカスタムの日時書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2020">A standard or custom date and time format string.</span></span></param>
        <param name="provider"><span data-ttu-id="7ac35-2021">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2021">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="7ac35-2022">指定した書式およびカルチャ固有の書式情報を使用して、現在の <see cref="T:System.DateTime" /> オブジェクトの値をそれと等価の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2022">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="7ac35-2023"><see cref="T:System.DateTime" /> および <paramref name="format" /> により指定された、現在の <paramref name="provider" /> オブジェクトの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2023">A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-2024">`format`パラメーターは、単一の書式指定子の文字を含めることができます (を参照してください[Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) またはカスタム書式パターン (を参照してください[カスタム Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md))。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2024">The `format` parameter can contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)).</span></span> <span data-ttu-id="7ac35-2025">場合`format`は`null`または空の文字列 ("")、"G"("標準書式指定子を使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2025">If `format` is `null` or an empty string (""), the standard format specifier, "G", is used.</span></span>  
  
 <span data-ttu-id="7ac35-2026">`provider`パラメーターでは、対応するパターンを定義する標準書式指定子だけでなく、記号、および日付と時刻のコンポーネントの名前。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2026">The `provider` parameter defines the pattern that corresponds to the standard format specifiers, as well as the symbols and names of date and time components.</span></span> <span data-ttu-id="7ac35-2027">`provider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2027">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="7ac35-2028">A<xref:System.Globalization.CultureInfo>書式指定規則が返される文字列に反映するのには、カルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2028">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="7ac35-2029"><xref:System.Globalization.DateTimeFormatInfo>によって返されるオブジェクト、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>プロパティが返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2029">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="7ac35-2030">A<xref:System.Globalization.DateTimeFormatInfo>日付と時刻のデータの書式を定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2030">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="7ac35-2031">実装するカスタム オブジェクト、<xref:System.IFormatProvider>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2031">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="7ac35-2032">その<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します。 を<xref:System.Globalization.DateTimeFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2032">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="7ac35-2033">場合`provider`は`null`、<xref:System.Globalization.DateTimeFormatInfo>に現在関連付けられているカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2033">If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> associated with the current culture is used.</span></span> <span data-ttu-id="7ac35-2034">詳細については、「<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2034">For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-2035">次の例は、標準の日時書式指定文字列の各関数を使用して、日付と時刻の 4 つの異なるカルチャの文字列形式を表示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2035">The following example uses each of the standard date time format strings to display the string representation of a date and time for four different cultures.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/tostring3.cs#4)]
 [!code-vb[System.DateTime.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/tostring3.vb#4)]  
  
 <span data-ttu-id="7ac35-2036">次の例では、さまざまな書式設定方法、<xref:System.DateTime>値の不変性を使用して<xref:System.Globalization.DateTimeFormatInfo>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2036">The following example demonstrates different ways of formatting a <xref:System.DateTime> value using the invariant <xref:System.Globalization.DateTimeFormatInfo>.</span></span>  
  
 [!code-cpp[Classic DateTime.ToString2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTime.ToString2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/CS/source.cs#1)]
 [!code-vb[Classic DateTime.ToString2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="7ac35-2037"><paramref name="format" /> の長さは 1 であり、<see cref="T:System.Globalization.DateTimeFormatInfo" /> で定義されている書式指定子の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2037">The length of <paramref name="format" /> is 1, and it is not one of the format specifier characters defined for <see cref="T:System.Globalization.DateTimeFormatInfo" />.</span></span>  
  
<span data-ttu-id="7ac35-2038">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-2038">-or-</span></span> 
 <span data-ttu-id="7ac35-2039"><paramref name="format" /> には有効なカスタム書式パターンがありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2039"><paramref name="format" /> does not contain a valid custom format pattern.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ac35-2040">日時が、<paramref name="provider" /> で使用されるカレンダーでサポートされている日付の範囲外です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2040">The date and time is outside the range of dates supported by the calendar used by <paramref name="provider" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="7ac35-2041"><see cref="M:System.DateTime.ToString(System.String,System.IFormatProvider)" />メソッドで使用する暦で日付と時刻の文字列表現を返します、<paramref name="provider" />パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2041">The <see cref="M:System.DateTime.ToString(System.String,System.IFormatProvider)" /> method returns the string representation of the date and time in the calendar used by the <paramref name="provider" /> parameter.</span></span> <span data-ttu-id="7ac35-2042">そのカレンダーがによって定義されている、<see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2042">Its calendar is defined by the <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> property.</span></span> <span data-ttu-id="7ac35-2043">場合、現在の値<see cref="T:System.DateTime" />インスタンスがよりも前か<see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />かそれより遅い<see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />がスローされます、<see cref="T:System.ArgumentOutOfRangeException" />します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2043">If the value of the current <see cref="T:System.DateTime" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="7ac35-2044">具体的な例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2044">The following example provides an illustration.</span></span> <span data-ttu-id="7ac35-2045">範囲外にある日付の書式設定しようと、<see cref="T:System.Globalization.UmAlQuraCalendar" />クラス。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2045">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.UmAlQuraCalendar" /> class.</span></span>  
  
<span data-ttu-id="7ac35-2046">[! コード csharp[System.DateTime.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception4.cs#4)] [! コード vb[System.DateTime.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception4.vb#4)]</span><span class="sxs-lookup"><span data-stu-id="7ac35-2046">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception4.cs#4)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception4.vb#4)]</span></span></para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="7ac35-2047">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="7ac35-2047">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="7ac35-2048">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-2048">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="7ac35-2049">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-2049">Custom Date and Time Format Strings</span></span></related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="7ac35-2050">サンプル: .NET Framework 4 の書式設定ユーティリティ</span><span class="sxs-lookup"><span data-stu-id="7ac35-2050">Sample: .NET Framework 4 Formatting Utility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToUniversalTime">
      <MemberSignature Language="C#" Value="public DateTime ToUniversalTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime ToUniversalTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToUniversalTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUniversalTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime ToUniversalTime();" />
      <MemberSignature Language="F#" Value="member this.ToUniversalTime : unit -&gt; DateTime" Usage="dateTime.ToUniversalTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ac35-2051">現在の <see cref="T:System.DateTime" /> オブジェクトの値を世界協定時刻 (UTC) に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2051">Converts the value of the current <see cref="T:System.DateTime" /> object to Coordinated Universal Time (UTC).</span></span></summary>
        <returns><span data-ttu-id="7ac35-2052"><see cref="P:System.DateTime.Kind" /> プロパティが <see cref="F:System.DateTimeKind.Utc" /> であるオブジェクト。通常は、現在の <see cref="T:System.DateTime" /> オブジェクトと等価な UTC が値として格納されます。ただし、変換後の値が <see cref="F:System.DateTime.MaxValue" /> オブジェクトで表現可能な範囲を超えている場合は <see cref="T:System.DateTime" /> の値が格納され、逆に変換後の値が <see cref="F:System.DateTime.MinValue" /> オブジェクトで表現可能な範囲を下回る場合は <see cref="T:System.DateTime" /> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2052">An object whose <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Utc" />, and whose value is the UTC equivalent to the value of the current <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MaxValue" /> if the converted value is too large to be represented by a <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MinValue" /> if the converted value is too small to be represented by a <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-2053">世界協定時刻 (UTC) は、UTC オフセットを引いたのローカル時刻です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2053">The Coordinated Universal Time (UTC) is equal to the local time minus the UTC offset.</span></span> <span data-ttu-id="7ac35-2054">UTC オフセットの詳細については、次を参照してください。<xref:System.TimeZone.GetUtcOffset%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2054">For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-2055">変換も考慮現在によって表される時刻に適用される夏時間規則<xref:System.DateTime>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2055">The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7ac35-2056">[!INCLUDE[winxp](~/includes/winxp-md.md)] 、システム、<xref:System.DateTime.ToUniversalTime%2A>メソッドは、現地時刻から UTC に変換するときに、現在の調整規則のみを認識します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2056">On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToUniversalTime%2A> method recognizes only the current adjustment rule when converting from local time to UTC.</span></span> <span data-ttu-id="7ac35-2057">その結果、現在の調整規則を有効にされる前に、の期間を変換すると、ローカル時刻と UTC の間の差が正確には反映されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2057">As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between local time and UTC.</span></span>  
  
 <span data-ttu-id="7ac35-2058">.NET Framework version 2.0 では、によって返される値で始まる、<xref:System.DateTime.ToUniversalTime%2A>メソッドはによって決定されます、<xref:System.DateTime.Kind%2A>プロパティ、現在の<xref:System.DateTime>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2058">Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToUniversalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object.</span></span> <span data-ttu-id="7ac35-2059">次の表では、考えられる結果について説明します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2059">The following table describes the possible results.</span></span>  
  
|<span data-ttu-id="7ac35-2060">種類</span><span class="sxs-lookup"><span data-stu-id="7ac35-2060">Kind</span></span>|<span data-ttu-id="7ac35-2061">結果</span><span class="sxs-lookup"><span data-stu-id="7ac35-2061">Results</span></span>|  
|----------|-------------|  
|<xref:System.DateTimeKind.Utc>|<span data-ttu-id="7ac35-2062">変換は行われません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2062">No conversion is performed.</span></span>|  
|<xref:System.DateTimeKind.Local>|<span data-ttu-id="7ac35-2063">現在<xref:System.DateTime>オブジェクトは UTC に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2063">The current <xref:System.DateTime> object is converted to UTC.</span></span>|  
|<xref:System.DateTimeKind.Unspecified>|<span data-ttu-id="7ac35-2064">現在<xref:System.DateTime>オブジェクトは、現地時刻と見なされ、変換を実行まるで<xref:System.DateTime.Kind%2A>された<xref:System.DateTimeKind.Local>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2064">The current <xref:System.DateTime> object is assumed to be a local time, and the conversion is performed as if <xref:System.DateTime.Kind%2A> were <xref:System.DateTimeKind.Local>.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="7ac35-2065"><xref:System.DateTime.ToUniversalTime%2A>メソッドに変換する<xref:System.DateTime>値を現地時刻から UTC にします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2065">The <xref:System.DateTime.ToUniversalTime%2A> method converts a <xref:System.DateTime> value from local time to UTC.</span></span> <span data-ttu-id="7ac35-2066">UTC にローカル以外のタイム ゾーンの時刻に変換する、<xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2066">To convert the time in a non-local time zone to UTC, use the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7ac35-2067">UTC からオフセットが呼ばれる時刻に変換する、<xref:System.DateTimeOffset.ToUniversalTime%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2067">To convert a time whose offset from UTC is known, use the <xref:System.DateTimeOffset.ToUniversalTime%2A> method.</span></span>  
  
 <span data-ttu-id="7ac35-2068">インスタンスの日付と時刻の値があいまいな時刻の場合は、このメソッドは、標準時であると仮定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2068">If the date and time instance value is an ambiguous time, this method assumes that it is a standard time.</span></span> <span data-ttu-id="7ac35-2069">(あいまいな時刻は、標準時またはローカル タイム ゾーンの夏時間のいずれかにマップできる)インスタンスの日付と時刻の値が無効な時刻の場合は、このメソッドは単に返す UTC オフセットのローカル タイム ゾーンの UTC から現地時刻を減算します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2069">(An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone) If the date and time instance value is an invalid time, this method simply subtracts the local time from the local time zone's UTC offset to return UTC.</span></span> <span data-ttu-id="7ac35-2070">(無効な時刻は夏時間調整規則の適用のために存在しません。)</span><span class="sxs-lookup"><span data-stu-id="7ac35-2070">(An invalid time is one that does not exist because of the application of daylight saving time adjustment rules.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-2071">次の例で、<xref:System.DateTime.ToUniversalTime%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2071">The following example demonstrates the <xref:System.DateTime.ToUniversalTime%2A> method.</span></span>  
  
 [!code-cpp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CS/class1.cs#1)]
 [!code-vb[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/VB/class1.vb#1)]  
  
 <span data-ttu-id="7ac35-2072">次の例では、<xref:System.DateTime.SpecifyKind%2A>メソッドを示すために、どのように<xref:System.DateTime.Kind%2A>プロパティの影響、<xref:System.DateTime.ToLocalTime%2A>と<xref:System.DateTime.ToUniversalTime%2A>変換メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2072">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="7ac35-2073"><see cref="M:System.DateTime.ToUniversalTime" />現地時刻を UTC に変換するメソッドが使用される場合があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2073">The <see cref="M:System.DateTime.ToUniversalTime" /> method is sometimes used to convert a local time to UTC.</span></span> <span data-ttu-id="7ac35-2074"><see cref="M:System.DateTime.ToLocalTime" />復元元のローカル時間にはメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2074">The <see cref="M:System.DateTime.ToLocalTime" /> method is then called to restore the original local time.</span></span> <span data-ttu-id="7ac35-2075">ただし、ローカル タイム ゾーンを元の時刻が無効な時刻を表している場合、2 つのローカル時刻の値はいないと等しいします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2075">However, if the original time represents an invalid time in the local time zone, the two local time values will not be equal.</span></span> <span data-ttu-id="7ac35-2076">追加情報と例では、次を参照してください。、<see cref="M:System.DateTime.ToLocalTime" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2076">For additional information and an example, see the <see cref="M:System.DateTime.ToLocalTime" /> method.</span></span>  
  
<span data-ttu-id="7ac35-2077">[!INCLUDE[winxp](~/includes/winxp-md.md)]システムでは、<see cref="M:System.DateTime.ToUniversalTime" />メソッドは、下位レベルの日付 (つまり、日付は現在の調整の開始日より前のなどのすべての日付に適用するローカル タイム ゾーンの現在の調整規則のみを認識します。ルールの場合)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2077">On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <see cref="M:System.DateTime.ToUniversalTime" /> method recognizes only the current adjustment rule for the local time zone, which it applies to all dates, including down-level dates (that is, dates that are earlier than the starting date of the current adjustment rule).</span></span> <span data-ttu-id="7ac35-2078">アプリケーションで実行されている[!INCLUDE[winxp](~/includes/winxp-md.md)]を必要とする正確なローカルの日付と時刻の計算を使用してこの問題を回避する必要があります、<see cref="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)" />を取得するメソッド、<see cref="T:System.TimeZoneInfo" />ローカル タイム ゾーンに対応するオブジェクトし、呼び出しその<see cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2078">Applications running on [!INCLUDE[winxp](~/includes/winxp-md.md)] that require historically accurate local date and time calculations must work around this behavior by using the <see cref="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)" /> method to retrieve a <see cref="T:System.TimeZoneInfo" /> object that corresponds to the local time zone and calling its <see cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" /> method.</span></span>  
  
<span data-ttu-id="7ac35-2079">次の例では、違いを示しています、<see cref="M:System.DateTime.ToUniversalTime" />と<see cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" />メソッド、[!INCLUDE[winxp](~/includes/winxp-md.md)]米国内のシステム表示します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2079">The following example illustrates the difference between the <see cref="M:System.DateTime.ToUniversalTime" /> and <see cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" /> methods on a [!INCLUDE[winxp](~/includes/winxp-md.md)] system in the U.S. Pacific Time zone.</span></span> <span data-ttu-id="7ac35-2080">最初の 2 つのメソッド呼び出しでは、2006 年の日付に (2007 年には、有効に問題が発生しました) を現在のタイム ゾーン調整規則が適用されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2080">The first two method calls apply the current time zone adjustment rule (which went into effect in 2007) to a date in 2006.</span></span> <span data-ttu-id="7ac35-2081">現在の調整規則; 3 月の第 2 日曜日夏時間に移行しています2006 年 4 月の最初の日曜日に発生する夏時間への移行に対して提供に有効であった前ルール。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2081">The current adjustment rule provides for the transition to daylight saving time on the second Sunday of March; the previous rule, which was in effect in 2006, provided for the transition to daylight saving time to occur on the first Sunday of April.</span></span> <span data-ttu-id="7ac35-2082">この古代の日付と時刻の変換を正確に 3 つ目のメソッドの呼び出しのみ実行します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2082">Only the third method call accurately performs this historical date and time conversion.</span></span>  
  
<span data-ttu-id="7ac35-2083">[! コード csharp[System.DateTime.ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.touniversaltime/cs/touniversaltime.cs#1)] [! コード vb[System.DateTime.ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.touniversaltime/vb/touniversaltime.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="7ac35-2083">[!code-csharp[System.DateTime.ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.touniversaltime/cs/touniversaltime.cs#1)] [!code-vb[System.DateTime.ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.touniversaltime/vb/touniversaltime.vb#1)]</span></span></para></block>
        <altmember cref="M:System.DateTime.ToLocalTime" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="dateTime.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ac35-2084">指定した文字列形式の日時を対応する <see cref="T:System.DateTime" /> 表現に変換し、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2084">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <altmember cref="Overload:System.DateTime.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParse(System.ReadOnlySpan{System.Char},System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.DateTime.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParse(System.String,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.DateTime.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7ac35-2085">変換する日付と時刻を格納した文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2085">A string containing a date and time to convert.</span></span></param>
        <param name="result"><span data-ttu-id="7ac35-2086">このメソッドから制御が戻った時点で、変換に成功した場合は、<paramref name="s" /> に格納された日時と等しい <see cref="T:System.DateTime" /> 値が格納されます。変換に失敗した場合は <see cref="F:System.DateTime.MinValue" /> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2086">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <paramref name="s" />, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="7ac35-2087"><paramref name="s" /> パラメーターが <see langword="null" /> の場合、空の文字列 ("") の場合、または日付と時刻を表す有効な文字列形式が含まれていない場合は、変換に失敗します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2087">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" />, is an empty string (""), or does not contain a valid string representation of a date and time.</span></span> <span data-ttu-id="7ac35-2088">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2088">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="7ac35-2089">指定した文字列形式の日時を対応する <see cref="T:System.DateTime" /> 表現に変換し、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2089">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="7ac35-2090"><see langword="true" /> パラメーターが正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2090"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-2091"><xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType>メソッドは、<xref:System.DateTime.Parse%28System.String%29?displayProperty=nameWithType>点を除いて、メソッド、<xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29>メソッドは、変換が失敗した場合に例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2091">The <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method is similar to the <xref:System.DateTime.Parse%28System.String%29?displayProperty=nameWithType> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="7ac35-2092">文字列`s`の書式情報を使用して、現在の解析は<xref:System.Globalization.DateTimeFormatInfo>オブジェクトで、現在のスレッド カルチャによって暗黙的に提供されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2092">The string `s` is parsed using formatting information in the current <xref:System.Globalization.DateTimeFormatInfo> object, which is supplied implicitly by the current thread culture.</span></span>  
  
 <span data-ttu-id="7ac35-2093">このメソッド、認識できないデータを無視しようとしています。 可能であれば、および月、日、年の情報、現在の日付に不足している格納します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2093">This method tries to ignore unrecognized data, if possible, and fills in missing month, day, and year information with the current date.</span></span> <span data-ttu-id="7ac35-2094">場合`s`日付のみを含み、すぐこのメソッドは、時刻は午前 12時 00分前提としています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2094">If `s` contains only a date and no time, this method assumes the time is 12:00 midnight.</span></span> <span data-ttu-id="7ac35-2095">場合`s`日付コンポーネントを含む 2 桁の年の値に基づいて、現在のカルチャの現在の暦で年に変換されます、<xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2095">If `s` includes a date component with a two-digit year, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="7ac35-2096">先頭、内部、または末尾の空白文字で`s`は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2096">Any leading, inner, or trailing white space character in `s` is ignored.</span></span> <span data-ttu-id="7ac35-2097">日付と時刻の先頭と末尾のシャープ記号文字 ('#'、U + 0023)、ペアで囲むことができ、いずれかで最後できます。 または以上の NULL 文字 (u+0000) です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2097">The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).</span></span>  
  
 <span data-ttu-id="7ac35-2098"><xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType>メソッドは、日付の文字列表現を解析しようとしています。 また、別のカルチャに関係なく、特定の文字列を解析しようとしています。 現在のカルチャの書式設定規則を使用して時間できます失敗か異なる結果を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2098">Because the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method tries to parse the string representation of a date and time using the formatting rules of the current culture, trying to parse a particular string across different cultures can either fail or return different results.</span></span> <span data-ttu-id="7ac35-2099">使用して、特定の日付と時刻の形式は、さまざまなロケール間で解析は場合、<xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>メソッドまたはいずれかのオーバー ロード、<xref:System.DateTime.TryParseExact%2A>メソッドと書式指定子を提供します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2099">If a specific date and time format will be parsed across different locales, use the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method or one of the overloads of the <xref:System.DateTime.TryParseExact%2A> method and provide a format specifier.</span></span>  
  
 <span data-ttu-id="7ac35-2100">場合`s`で現在の暦では、メソッドの解析、閏年の閏日の文字列表現です`s`正常にします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2100">If `s` is the string representation of a leap day in a leap year in the current calendar, the method parses `s` successfully.</span></span> <span data-ttu-id="7ac35-2101">場合`s`閏日 leap 以外の年の現在のカルチャの現在の暦での文字列表現です、解析操作は失敗し、メソッドを返します`false`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2101">If `s` is the string representation of a leap day in a non-leap year in the current culture's current calendar, the parse operation fails and the method returns `false`.</span></span>  
  
 <span data-ttu-id="7ac35-2102">場合`s`タイム ゾーンの情報が含まれていない`result`が含まれています、<xref:System.DateTime>値<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>メソッドが返されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2102">If `s` contains no time zone information, `result` contains a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> when the method returns.</span></span> <span data-ttu-id="7ac35-2103">解析対象の文字列には、タイム ゾーンの情報が含まれている場合`result`が含まれています、<xref:System.DateTime>値<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>メソッドが返されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2103">If the string to be parsed contains time zone information, `result` contains a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> when the method returns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-2104">次の例では、パスに日付と時刻の文字列が、<xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2104">The following example passes a number of date and time strings to the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.DateTime.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.TryParse/cpp/datetime.tryparse1.cpp#1)]
 [!code-csharp[System.DateTime.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.DateTime.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParse/vb/TryParse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="7ac35-2105">現在のプロパティを書式設定が影響を受ける<see cref="T:System.Globalization.DateTimeFormatInfo" />既定ではから派生するオブジェクト、**地域と言語のオプション**コントロール パネル項目。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2105">Formatting is influenced by properties of the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object, which by default are derived from the **Regional and Language Options** item in Control Panel.</span></span> <span data-ttu-id="7ac35-2106"><see cref="Overload:System.DateTime.TryParse" />メソッドの失敗を返すことが予期せず<see langword="False" />場合、現在<see cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />と<see cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />プロパティと同じ値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2106">The <see cref="Overload:System.DateTime.TryParse" /> method can unexpectedly fail and return <see langword="False" /> if the current <see cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" /> and <see cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" /> properties are set to the same value.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.Parse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="7ac35-2107">.NET Framework における日付と時刻文字列の解析の解析</span><span class="sxs-lookup"><span data-stu-id="7ac35-2107">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="7ac35-2108">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-2108">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="7ac35-2109">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-2109">Custom Date and Time Format Strings</span></span></related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="7ac35-2110">サンプル: .NET Framework 4 の書式設定ユーティリティ</span><span class="sxs-lookup"><span data-stu-id="7ac35-2110">Sample: .NET Framework 4 Formatting Utility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, IFormatProvider provider, System.Globalization.DateTimeStyles styles, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), provider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, IFormatProvider ^ provider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTime.TryParse (s, provider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, IFormatProvider provider, System.Globalization.DateTimeStyles styles, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, provider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, IFormatProvider ^ provider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTime.TryParse (s, provider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7ac35-2111">変換する日付と時刻を格納した文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2111">A string containing a date and time to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="7ac35-2112"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2112">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="styles"><span data-ttu-id="7ac35-2113">現在のタイム ゾーンまたは現在の日付と関連させて、解析された日付をどのように解釈するかを定義する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2113">A bitwise combination of enumeration values that defines how to interpret the parsed date in relation to the current time zone or the current date.</span></span> <span data-ttu-id="7ac35-2114">通常指定する値は、<see cref="F:System.Globalization.DateTimeStyles.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2114">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <param name="result"><span data-ttu-id="7ac35-2115">変換に成功した場合は、このメソッドから戻る時点で、<see cref="T:System.DateTime" /> に格納された日時と等しい <paramref name="s" /> 値が格納されます。変換に失敗した場合は <see cref="F:System.DateTime.MinValue" /> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2115">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <paramref name="s" />, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="7ac35-2116"><paramref name="s" /> パラメーターが <see langword="null" /> の場合、空の文字列 ("") の場合、または日付と時刻を表す有効な文字列形式が含まれていない場合は、変換に失敗します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2116">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" />, is an empty string (""), or does not contain a valid string representation of a date and time.</span></span> <span data-ttu-id="7ac35-2117">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2117">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="7ac35-2118">指定したカルチャ固有の書式情報と書式スタイルを使用して、指定した文字列形式の日付と時刻をそれと等価の <see cref="T:System.DateTime" /> に変換し、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2118">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified culture-specific format information and formatting style, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="7ac35-2119"><see langword="true" /> パラメーターが正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2119"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-2120"><xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>メソッドは、日付、時刻、タイム ゾーンの情報を含むことのできる文字列を解析します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2120">The <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method parses a string that can contain date, time, and time zone information.</span></span> <span data-ttu-id="7ac35-2121">似ています、<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>点を除いて、メソッド、<xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType>メソッドは、変換が失敗した場合に例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2121">It is similar to the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="7ac35-2122">このメソッドが認識できないデータと解析を無視しよう`s`完全にします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2122">This method attempts to ignore unrecognized data and parse `s` completely.</span></span> <span data-ttu-id="7ac35-2123">場合`s`時刻が日がない、既定の代替、現在の日付でメソッドが含まれていますか、`styles`が含まれています、<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>フラグを置き換える`DateTime.Date.MinValue`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2123">If `s` contains a time but no date, the method by default substitutes the current date or, if `styles` includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault> flag, it substitutes `DateTime.Date.MinValue`.</span></span> <span data-ttu-id="7ac35-2124">場合`s`日付がありません時間、12:00、時刻は午前 0 時が使用されるが含まれています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2124">If `s` contains a date but no time, 12:00 midnight is used as the default time.</span></span> <span data-ttu-id="7ac35-2125">日付が存在する場合は、その年の部分から成る 2 桁のみの年に変換されます、`provider`パラメーターの現在の暦がの値に基づいて、<xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2125">If a date is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="7ac35-2126">先頭、内部、または末尾の空白文字`s`は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2126">Any leading, inner, or trailing white space characters in `s` are ignored.</span></span> <span data-ttu-id="7ac35-2127">日付と時刻の先頭と末尾のシャープ記号文字 ('#'、U + 0023)、ペアで囲むことができ、いずれかで最後できます。 または以上の NULL 文字 (u+0000) です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2127">The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).</span></span>  
  
 <span data-ttu-id="7ac35-2128">特定の有効な形式の日付と時刻要素の場合は、名前と、日付と時刻で使用される記号が定義されている、`provider`パラメーターで、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2128">Specific valid formats for date and time elements, as well as the names and symbols used in dates and times, are defined by the `provider` parameter, which can be any of the following:</span></span>  
  
-   <span data-ttu-id="7ac35-2129">A<xref:System.Globalization.CultureInfo>で使用される書式はカルチャを表すオブジェクトを`s`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2129">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `s` parameter.</span></span> <span data-ttu-id="7ac35-2130"><xref:System.Globalization.DateTimeFormatInfo>によって返されるオブジェクト、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>プロパティ定義で使用される書式`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2130">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting used in `s`.</span></span>  
  
-   <span data-ttu-id="7ac35-2131">A<xref:System.Globalization.DateTimeFormatInfo>オブジェクトで使用される書式を定義する`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2131">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting used in `s`.</span></span>  
  
-   <span data-ttu-id="7ac35-2132">カスタムの <xref:System.IFormatProvider> 実装。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2132">A custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="7ac35-2133">その<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを返します。 を<xref:System.Globalization.DateTimeFormatInfo>オブジェクトで使用される書式を定義する`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2133">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting used in `s`.</span></span>  
  
 <span data-ttu-id="7ac35-2134">`provider` が `null` の場合は、現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2134">If `provider` is `null`, the current culture is used.</span></span>  
  
 <span data-ttu-id="7ac35-2135">場合`s`で現在の暦では、メソッドの解析、閏年の閏日の文字列表現です`s`正常にします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2135">If `s` is the string representation of a leap day in a leap year in the current calendar, the method parses `s` successfully.</span></span> <span data-ttu-id="7ac35-2136">場合`s`閏日非 leap 年での現在の暦での文字列表現です`provider`解析操作が失敗し、メソッドが返されます、`false`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2136">If `s` is the string representation of a leap day in a non-leap year in the current calendar of `provider`, the parse operation fails and the method returns `false`.</span></span>  
  
 <span data-ttu-id="7ac35-2137">`styles`パラメーターが解析された文字列と、解析操作が処理する方法の正確な解釈を定義します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2137">The `styles` parameter defines the precise interpretation of the parsed string and how the parse operation should handle it.</span></span> <span data-ttu-id="7ac35-2138">1 つ以上のメンバーであることができます、<xref:System.Globalization.DateTimeStyles>列挙型で、次の表で説明します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2138">It can be one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration, as described in the following table.</span></span>  
  
|<span data-ttu-id="7ac35-2139">DateTimeStyles メンバー</span><span class="sxs-lookup"><span data-stu-id="7ac35-2139">DateTimeStyles member</span></span>|<span data-ttu-id="7ac35-2140">説明</span><span class="sxs-lookup"><span data-stu-id="7ac35-2140">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="7ac35-2141">解析`s`と、必要に応じて、UTC に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2141">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="7ac35-2142">場合`s`、タイム ゾーン オフセットが含まれて 場合`s`タイム ゾーン情報が含まれていないが、`styles`が含まれています、<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>フラグは、メソッド呼び出し、文字列を解析して<xref:System.DateTime.ToUniversalTime%2A>、返されたに変換する<xref:System.DateTime>値を UTC にを設定し、<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2142">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-2143">場合`s`UTC で表すことを示す場合、または`s`タイム ゾーン情報は含まれませんが、`styles`が含まれています、<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>フラグは、メソッド、文字列を解析して、返されたのタイム ゾーンの変換は行われません<xref:System.DateTime>値、およびセット、<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2143">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-2144">その他のすべてのケースでは、フラグには影響はありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2144">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="7ac35-2145">有効では、この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2145">Although valid, this value is ignored.</span></span> <span data-ttu-id="7ac35-2146">日付と時刻の要素の内側の空白が許可されている`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2146">Inner white space is permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="7ac35-2147">有効では、この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2147">Although valid, this value is ignored.</span></span> <span data-ttu-id="7ac35-2148">先頭の空白文字が日付と時刻の要素で許可されている`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2148">Leading white space is permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="7ac35-2149">有効では、この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2149">Although valid, this value is ignored.</span></span> <span data-ttu-id="7ac35-2150">日付と時刻の要素の末尾の空白文字が許可されている`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2150">Trailing white space is permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="7ac35-2151">指定します`s`先頭、内部、および末尾の空白文字を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2151">Specifies that `s` may contain leading, inner, and trailing white spaces.</span></span> <span data-ttu-id="7ac35-2152">これが既定の動作です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2152">This is the default behavior.</span></span> <span data-ttu-id="7ac35-2153">制限を指定して、オーバーライドできません<xref:System.Globalization.DateTimeStyles>などの列挙値<xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2153">It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value such as <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="7ac35-2154">場合を指定します`s`のタイム ゾーン情報がない、現地時刻を表すと見なされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2154">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="7ac35-2155">しない限り、<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>フラグが存在する、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>値に設定されて<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2155">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="7ac35-2156">指定された場合`s`任意のタイム ゾーン情報が不足しています utc と見なされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2156">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="7ac35-2157">しない限り、<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>フラグが存在する、メソッドは、返された変換<xref:System.DateTime>値を UTC から現地時刻とセットにその<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2157">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="7ac35-2158">有効では、この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2158">Although valid, this value is ignored.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="7ac35-2159">タイム ゾーン情報を含む文字列、日付と時刻文字列の変換を防止しようとする<xref:System.DateTime>値をその<xref:System.DateTime.Kind%2A>プロパティに設定<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2159">For strings that contain time zone information, tries to prevent the conversion of a date and time string to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-2160">呼び出すことによってこのような文字列を作成する通常の<xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>"o"、"r"または"u"標準書式指定子を使用してメソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2160">Typically, such a string is created by calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method using either the "o", "r", or "u" standard format specifiers.</span></span>|  
  
 <span data-ttu-id="7ac35-2161">場合`s`タイム ゾーンの情報が含まれていない、<xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>メソッドを返します。 を<xref:System.DateTime>値<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>しない限り、`styles`フラグを示します。 それ以外の場合。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2161">If `s` contains no time zone information, the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> unless a `styles` flag indicates otherwise.</span></span> <span data-ttu-id="7ac35-2162">場合`s`タイム ゾーンまたはタイム ゾーン オフセットの情報が含まれています、<xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>メソッド、必要な時間変換を実行し、次のいずれかを返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2162">If `s` includes time zone or time zone offset information, the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method performs any necessary time conversion and returns one of the following:</span></span>  
  
-   <span data-ttu-id="7ac35-2163">A<xref:System.DateTime>値が日付と時刻が現地時刻と持つを反映<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2163">A <xref:System.DateTime> value whose date and time reflect the local time and whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="7ac35-2164">または、`styles`が含まれています、<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>フラグを<xref:System.DateTime>値が日付と時刻が UTC と持つを反映<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2164">Or, if `styles` includes the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag, a <xref:System.DateTime> value whose date and time reflect UTC and whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7ac35-2165">使用してこの動作をオーバーライドすることができます、<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2165">This behavior can be overridden by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag.</span></span>  
  
## <a name="parsing-custom-cultures"></a><span data-ttu-id="7ac35-2166">カスタム カルチャの解析</span><span class="sxs-lookup"><span data-stu-id="7ac35-2166">Parsing Custom Cultures</span></span>  
 <span data-ttu-id="7ac35-2167">カスタム カルチャに対して生成された日付と時刻の文字列を解析する場合、<xref:System.DateTime.TryParseExact%2A>メソッドの代わりに、<xref:System.DateTime.TryParse%2A>解析操作が成功する確率を改善する方法。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2167">If you parse a date and time string generated for a custom culture, use the <xref:System.DateTime.TryParseExact%2A> method instead of the <xref:System.DateTime.TryParse%2A> method to improve the probability that the parse operation will succeed.</span></span> <span data-ttu-id="7ac35-2168">カスタム カルチャの日付と時刻の文字列は、複雑で困難を解析できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2168">A custom culture date and time string can be complicated and difficult to parse.</span></span> <span data-ttu-id="7ac35-2169"><xref:System.DateTime.TryParse%2A>メソッドは、これらはすべてが失敗するいくつかの暗黙的な解析パターンを使用した文字列の解析を試みます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2169">The <xref:System.DateTime.TryParse%2A> method attempts to parse a string with several implicit parse patterns, all of which might fail.</span></span> <span data-ttu-id="7ac35-2170">これに対し、<xref:System.DateTime.TryParseExact%2A>メソッドでは、成功する可能性のある 1 つまたは複数の正確な解析パターンを明示的に指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2170">In contrast, the <xref:System.DateTime.TryParseExact%2A> method  requires you to explicitly designate one or more exact parse patterns that are likely to succeed.</span></span>  
  
 <span data-ttu-id="7ac35-2171">カスタムのカルチャの詳細については、次を参照してください。、<xref:System.Globalization.CultureAndRegionInfoBuilder?displayProperty=nameWithType>クラス。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2171">For more information about custom cultures, see the <xref:System.Globalization.CultureAndRegionInfoBuilder?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-2172">次の例を示しています、<xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2172">The following example illustrates the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.DateTime.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParse/cs/tryparse2.cs#2)]
 [!code-vb[System.DateTime.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7ac35-2173"><paramref name="styles" /> は有効な <see cref="T:System.Globalization.DateTimeStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2173"><paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
  
<span data-ttu-id="7ac35-2174">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-2174">-or-</span></span> 
 <span data-ttu-id="7ac35-2175"><paramref name="styles" /> に <see cref="T:System.Globalization.DateTimeStyles" /> 値の正しくない組み合わせが含まれています (たとえば、<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> と <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" /> の両方などです)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2175"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7ac35-2176"><paramref name="provider" /> はニュートラル カルチャであり、解析操作で使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2176"><paramref name="provider" /> is a neutral culture and cannot be used in a parsing operation.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="7ac35-2177">現在のプロパティを書式設定が影響を受ける<see cref="T:System.Globalization.DateTimeFormatInfo" />によって提供される、オブジェクト、<paramref name="provider" />パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2177">Formatting is influenced by properties of the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object, which is supplied by the <paramref name="provider" /> parameter.</span></span> <span data-ttu-id="7ac35-2178"><see cref="Overload:System.DateTime.TryParse" />メソッドの失敗を返すことが予期せず<see langword="False" />場合、現在<see cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />と<see cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />プロパティと同じ値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2178">The <see cref="Overload:System.DateTime.TryParse" /> method can unexpectedly fail and return <see langword="False" /> if the current <see cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" /> and <see cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" /> properties are set to the same value.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.Parse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="7ac35-2179">.NET Framework における日付と時刻文字列の解析の解析</span><span class="sxs-lookup"><span data-stu-id="7ac35-2179">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="7ac35-2180">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-2180">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="7ac35-2181">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-2181">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ac35-2182">指定した文字列形式の日付と時刻を等価の <see cref="T:System.DateTime" /> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2182">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent.</span></span> <span data-ttu-id="7ac35-2183">文字列形式の書式は、指定した書式と完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2183">The format of the string representation must match a specified format exactly.</span></span> <span data-ttu-id="7ac35-2184">このメソッドは、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2184">The method returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <altmember cref="Overload:System.DateTime.ParseExact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; s, ReadOnlySpan&lt;char&gt; format, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (s As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), provider As IFormatProvider, style As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; s, ReadOnlySpan&lt;char&gt; format, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTime.TryParseExact (s, format, provider, style, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="style">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; s, string[] formats, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (s As ReadOnlySpan(Of Char), formats As String(), provider As IFormatProvider, style As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; s, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTime.TryParseExact (s, formats, provider, style, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="style">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string s, string format, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string s, string format, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (s As String, format As String, provider As IFormatProvider, style As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ s, System::String ^ format, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTime.TryParseExact (s, format, provider, style, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7ac35-2185">変換する日付と時刻を格納した文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2185">A string containing a date and time to convert.</span></span></param>
        <param name="format"><span data-ttu-id="7ac35-2186"><paramref name="s" /> に必要な書式。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2186">The required format of <paramref name="s" />.</span></span></param>
        <param name="provider"><span data-ttu-id="7ac35-2187"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2187">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="style"><span data-ttu-id="7ac35-2188"><paramref name="s" /> の許可された書式を示す 1 つまたは複数の列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2188">A bitwise combination of one or more enumeration values that indicate the permitted format of <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="7ac35-2189">変換に成功した場合は、<see cref="T:System.DateTime" /> に格納された日時と等しい <paramref name="s" /> 値が格納されます。変換に失敗した場合は <see cref="F:System.DateTime.MinValue" /> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2189">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <paramref name="s" />, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="7ac35-2190"><paramref name="s" /> パラメーターまたは <paramref name="format" /> パラメーターが <see langword="null" /> の場合、空の文字列の場合、あるいは <paramref name="format" /> に指定されたパターンに一致する日時が含まれていない場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2190">The conversion fails if either the <paramref name="s" /> or <paramref name="format" /> parameter is <see langword="null" />, is an empty string, or does not contain a date and time that correspond to the pattern specified in <paramref name="format" />.</span></span> <span data-ttu-id="7ac35-2191">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2191">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="7ac35-2192">指定した書式、カルチャ固有の書式情報、およびスタイルを使用して、指定した日付と時刻の文字列形式を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2192">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format, culture-specific format information, and style.</span></span> <span data-ttu-id="7ac35-2193">文字列形式の書式は、指定した書式と完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2193">The format of the string representation must match the specified format exactly.</span></span> <span data-ttu-id="7ac35-2194">このメソッドは、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2194">The method returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="7ac35-2195"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2195"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-2196"><xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>メソッドで定義された書式である必要があります日付の文字列表現を解析し、`format`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2196">The <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method parses the string representation of a date, which must be in the format defined by the `format` parameter.</span></span> <span data-ttu-id="7ac35-2197">似ています、<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>点を除いて、メソッド、<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29>メソッドは、変換が失敗した場合に例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2197">It is similar to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method, except that the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="7ac35-2198">`s`パラメーターを解析するには、日付と時刻が含まれていますで定義された書式である必要があります、`format`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2198">The `s` parameter contains the date and time to parse and must be in a format defined by the `format` parameter.</span></span> <span data-ttu-id="7ac35-2199">日付、時刻、タイム ゾーン要素が存在する場合`s`で指定された順序で現れる必要がありますも`format`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2199">If date, time, and time zone elements are present in `s`, they must also appear in the order specified by `format`.</span></span> <span data-ttu-id="7ac35-2200">場合`format`日付を定義します。 時刻要素がないと、解析操作が成功した結果<xref:System.DateTime>値が午前 0 時 (00: 00:00)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2200">If `format` defines a date with no time element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a time of midnight (00:00:00).</span></span> <span data-ttu-id="7ac35-2201">場合`format`、時間を定義する日付要素がないと、解析操作が成功すると、結果<xref:System.DateTime>既定値が日付`DateTime.Now.Date`の日が設定または`DateTime.MinValue.Date`場合`styles`が含まれています、<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2201">If `format` defines a time with no date element and the parse operation succeeds, the resulting <xref:System.DateTime> value by default has a date of `DateTime.Now.Date`, or it has a date of `DateTime.MinValue.Date` if `styles` includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7ac35-2202">`style`パラメーターを指定するかどうか、`s`パラメーターは、先頭、内部、または末尾の空白文字を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2202">The `style` parameter determines whether the `s` parameter can contain leading, inner, or trailing white space characters.</span></span>  
  
 <span data-ttu-id="7ac35-2203">場合`s`タイム ゾーンの情報が含まれていない、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>オブジェクトが<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2203">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-2204">使用してこの動作を変更することができます、<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>フラグ、返された、<xref:System.DateTime>値<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>、またはを使用して、<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>と<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>フラグ、返された、<xref:System.DateTime>値<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2204">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, or by using the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-2205">S にタイム ゾーン情報が含まれている場合、時刻が現地時刻に変換されます、必要に応じて、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>にオブジェクトが設定されている<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2205">If s contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-2206">使用してこの動作を変更することができます、<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>せず、現地時刻を世界協定時刻 (UTC) に変換を設定するフラグ、<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2206">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7ac35-2207">`format`パラメーターには想定される形式に対応するパターンが含まれています、`s`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2207">The `format` parameter contains a pattern that corresponds to the expected format of the `s` parameter.</span></span> <span data-ttu-id="7ac35-2208">パターン、`format`パラメーターは、1 つまたは複数のカスタム書式指定子から、[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)テーブル、またはから定義済みのパターンを識別する 1 つの標準書式指定子、[Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)テーブル。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2208">The pattern in the `format` parameter consists of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.</span></span>  
  
 <span data-ttu-id="7ac35-2209">カスタム書式パターンでは日付または時刻の区切り記号を使用しない場合は、インバリアント カルチャを使用して、`provider`パラメーターおよび各カスタムの最も長い形式の書式指定子。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2209">If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="7ac35-2210">たとえば、パターンに時間を指定する場合は、"H"狭義の形式ではなくより多くのフォーム"HH"を指定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2210">For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7ac35-2211">必要とするのではなく`s`解析操作が成功するための 1 つの形式に準拠して、呼び出すことができます、<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>メソッドと、許可されている複数の形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2211">Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method and specify multiple permitted formats.</span></span> <span data-ttu-id="7ac35-2212">これにより、解析操作が成功する可能性が高くなります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2212">This makes the parse operation more likely to succeed.</span></span>  
  
 <span data-ttu-id="7ac35-2213">特定の日付と時刻のシンボルとで使用される特定の言語で曜日の名前) などの文字列`s`によって定義されます、`provider`パラメーターの正確な形式は`s`場合`format`は標準的な形式です。指定子の文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2213">The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="7ac35-2214">`provider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2214">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="7ac35-2215">A<xref:System.Globalization.CultureInfo>を解釈するために使用するカルチャを表すオブジェクトを`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2215">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="7ac35-2216"><xref:System.Globalization.DateTimeFormatInfo>によって返されるオブジェクトの<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>シンボルとに書式設定プロパティを定義します`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2216">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="7ac35-2217">A<xref:System.Globalization.DateTimeFormatInfo>日付と時刻のデータの書式を定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2217">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="7ac35-2218">カスタム<xref:System.IFormatProvider>実装が<xref:System.IFormatProvider.GetFormat%2A>メソッドでは、いずれかを返します、<xref:System.Globalization.CultureInfo>オブジェクトまたは<xref:System.Globalization.DateTimeFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2218">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="7ac35-2219">場合`provider`は`null`、<xref:System.Globalization.CultureInfo>現在のカルチャに対応するオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2219">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 <span data-ttu-id="7ac35-2220">`styles`パラメーターには 1 つまたは複数のメンバーが含まれています、<xref:System.Globalization.DateTimeStyles>かどうかと、空白文字で定義されていないかを決定する列挙体`format`に表示できる`s`解析操作の正確な動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2220">The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation.</span></span> <span data-ttu-id="7ac35-2221">次の表をそれぞれどのように説明のメンバー、<xref:System.Globalization.DateTimeStyles>列挙型の運用に与える影響、<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2221">The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.</span></span>  
  
|<span data-ttu-id="7ac35-2222">DateTimeStyles メンバー</span><span class="sxs-lookup"><span data-stu-id="7ac35-2222">DateTimeStyles member</span></span>|<span data-ttu-id="7ac35-2223">説明</span><span class="sxs-lookup"><span data-stu-id="7ac35-2223">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="7ac35-2224">解析`s`と、必要に応じて、UTC に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2224">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="7ac35-2225">場合`s`、タイム ゾーン オフセットが含まれて 場合`s`タイム ゾーン情報が含まれていないが、`styles`が含まれています、<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>フラグは、メソッド呼び出し、文字列を解析して<xref:System.DateTime.ToUniversalTime%2A>、返されたに変換する<xref:System.DateTime>値を UTC にを設定し、<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2225">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-2226">場合`s`UTC で表すことを示す場合、または`s`タイム ゾーン情報は含まれませんが、`styles`が含まれています、<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>フラグは、メソッド、文字列を解析して、返されたのタイム ゾーンの変換は行われません<xref:System.DateTime>値、およびセット、<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2226">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-2227">その他のすべてのケースでは、フラグには影響はありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2227">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="7ac35-2228">定義されていない、空白文字を指定します`format`任意の個々 の日付または時刻の要素の間に表示できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2228">Specifies that white space not defined by `format` can appear between any individual date or time element.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="7ac35-2229">定義されていない、空白文字を指定します`format`の先頭に表示できる`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2229">Specifies that white space not defined by `format` can appear at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="7ac35-2230">定義されていない、空白文字を指定します`format`の末尾に記述できる`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2230">Specifies that white space not defined by `format` can appear at the end of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="7ac35-2231">指定します`s`先頭、内部、および末尾の空白で定義されていない場合があります`format`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2231">Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="7ac35-2232">場合を指定します`s`のタイム ゾーン情報がない、現地時刻を表すと見なされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2232">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="7ac35-2233">しない限り、<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>フラグが存在する、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>値に設定されて<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2233">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="7ac35-2234">指定された場合`s`任意のタイム ゾーン情報が不足しています utc と見なされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2234">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="7ac35-2235">しない限り、<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>フラグが存在する、メソッドは、返された変換<xref:System.DateTime>値を UTC から現地時刻とセットにその<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2235">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|<span data-ttu-id="7ac35-2236">場合`s`の時刻に設定されている戻り値の日付の日付の情報がない`DateTime.MinValue.Date`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2236">If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="7ac35-2237">`s`パラメーターは、既定値を使用して解析されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2237">The `s` parameter is parsed using default values.</span></span> <span data-ttu-id="7ac35-2238">空白以外に含まれている`format`は許可されています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2238">No white space other than that present in `format` is allowed.</span></span> <span data-ttu-id="7ac35-2239">場合`s`、返された日付、日付部分がない<xref:System.DateTime>値は 1/1/0001 を設定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2239">If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001.</span></span> <span data-ttu-id="7ac35-2240">場合`s`タイム ゾーンの情報が含まれていない、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>にオブジェクトが設定されている<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2240">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-2241">タイム ゾーン情報が存在する場合`s`、時刻は現地時刻に変換し、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>にオブジェクトが設定されている<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2241">If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="7ac35-2242">のタイム ゾーン情報を含む文字列への変換を防止しようとする<xref:System.DateTime>値をその<xref:System.DateTime.Kind%2A>プロパティに設定<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2242">For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-2243">主に、このフラグには、ローカル時刻を UTC 時刻の変換ができないようにします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2243">This flag primarily prevents the conversion of UTC times to local times.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-2244">次の例で、<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2244">The following example demonstrates the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7ac35-2245">なお、文字列"5/01/2009 8時 30分 AM"ことはできませんが正常に解析されたときに、`styles`パラメーターと等しい<xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>では、先頭のスペースは許可されていないため、`format`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2245">Note that the string " 5/01/2009 8:30 AM" cannot be parsed successfully when the `styles` parameter equals <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType> because leading spaces are not allowed by `format`.</span></span> <span data-ttu-id="7ac35-2246">文字列ではさらに、"5/01/2009 09時 00分"を正常に解析されたことはできません、`format`の"MM dd/yyyyhh:mm"日付文字列としての先頭をゼロ、1 か月の数の前はため`format`が必要です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2246">Additionally, the string "5/01/2009 09:00" cannot be parsed successfully with a `format` of "MM/dd/yyyyhh:mm" because the date string does not precede the month number with a leading zero, as `format` requires.</span></span>  
  
 [!code-csharp[System.DateTime.TryParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParseExact/cs/TryParseExact1.cs#1)]
 [!code-vb[System.DateTime.TryParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParseExact/vb/TryParseExact1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7ac35-2247"><paramref name="styles" /> は有効な <see cref="T:System.Globalization.DateTimeStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2247"><paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
  
<span data-ttu-id="7ac35-2248">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-2248">-or-</span></span> 
 <span data-ttu-id="7ac35-2249"><paramref name="styles" /> に <see cref="T:System.Globalization.DateTimeStyles" /> 値の正しくない組み合わせが含まれています (たとえば、<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> と <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" /> の両方などです)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2249"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="7ac35-2250">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]、<see cref="Overload:System.DateTime.TryParseExact" />メソッドを返します。<see langword="false" />解析する文字列が、時間の部分と契約に含まれていない AM/PM 指定子を含む場合。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2250">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.TryParseExact" /> method returns <see langword="false" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="7ac35-2251">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]と以前のバージョン、AM/PM 指定子は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2251">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.ParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="7ac35-2252">.NET Framework における日付と時刻文字列の解析の解析</span><span class="sxs-lookup"><span data-stu-id="7ac35-2252">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="7ac35-2253">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-2253">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="7ac35-2254">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-2254">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string s, string[] formats, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (s As String, formats As String(), provider As IFormatProvider, style As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ s, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string[] * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTime.TryParseExact (s, formats, provider, style, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7ac35-2255">変換する日時を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2255">A string that contains a date and time to convert.</span></span></param>
        <param name="formats"><span data-ttu-id="7ac35-2256"><paramref name="s" /> の許可された形式の配列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2256">An array of allowable formats of <paramref name="s" />.</span></span></param>
        <param name="provider"><span data-ttu-id="7ac35-2257"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2257">An object that supplies culture-specific format information about <paramref name="s" />.</span></span></param>
        <param name="style"><span data-ttu-id="7ac35-2258"><paramref name="s" /> で使用可能な書式を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2258">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="7ac35-2259">通常指定する値は、<see cref="F:System.Globalization.DateTimeStyles.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2259">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <param name="result"><span data-ttu-id="7ac35-2260">変換に成功した場合は、<paramref name="s" /> に格納された日時と等しい <see cref="T:System.DateTime" /> 値が格納されます。変換に失敗した場合は <see cref="F:System.DateTime.MinValue" /> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2260">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <paramref name="s" />, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="7ac35-2261"><paramref name="s" /> または <paramref name="formats" /> が <see langword="null" /> の場合、<paramref name="s" /> または <paramref name="formats" /> の要素が空の文字列の場合、あるいは、<paramref name="s" /> の書式が <paramref name="formats" /> に指定されたいずれの書式パターンとも一致しない場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2261">The conversion fails if <paramref name="s" /> or <paramref name="formats" /> is <see langword="null" />, <paramref name="s" /> or an element of <paramref name="formats" /> is an empty string, or the format of <paramref name="s" /> is not exactly as specified by at least one of the format patterns in <paramref name="formats" />.</span></span> <span data-ttu-id="7ac35-2262">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2262">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="7ac35-2263">指定した書式の配列、カルチャ固有の書式情報、およびスタイルを使用して、指定した日付と時刻の文字列形式を等価の <see cref="T:System.DateTime" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2263">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified array of formats, culture-specific format information, and style.</span></span> <span data-ttu-id="7ac35-2264">文字列形式の書式は、指定した書式の少なくとも 1 つと完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2264">The format of the string representation must match at least one of the specified formats exactly.</span></span> <span data-ttu-id="7ac35-2265">このメソッドは、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2265">The method returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="7ac35-2266"><see langword="true" /> パラメーターが正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2266"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-2267"><xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>メソッドに割り当てられているパターンのいずれかに一致する日付の文字列表現を解析し、`formats`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2267">The <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter.</span></span> <span data-ttu-id="7ac35-2268">ようになります、<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>メソッドを除く、<xref:System.DateTime.TryParseExact%2A>メソッドは、変換が失敗した場合に例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2268">It is like the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method, except the <xref:System.DateTime.TryParseExact%2A> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="7ac35-2269">`s`パラメーターには、解析するには、日付と時刻が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2269">The `s` parameter contains the date and time to parse.</span></span> <span data-ttu-id="7ac35-2270">場合、`s`パラメーターに時刻のみが含まれ、日なししない限り、現在の日付が使用される、`style`パラメーターが含まれる、<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>フラグ場合、既定の日付 (`DateTime.Date.MinValue`) 使用されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2270">If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> flag, in which case the default date (`DateTime.Date.MinValue`) is used.</span></span> <span data-ttu-id="7ac35-2271">場合、`s`パラメーターが含まれるは、日付のみといいえ時、午前 0 時 (00: 00:00) が使用されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2271">If the `s` parameter contains only a date and no time, midnight (00:00:00) is used.</span></span> <span data-ttu-id="7ac35-2272">`style`パラメーターも決定かどうか、`s`パラメーターは、先頭を含めることができます、内部、または末尾の空白文字で書式指定文字列のいずれかで許可されているもの以外の`formats`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2272">The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in `formats`.</span></span>  
  
 <span data-ttu-id="7ac35-2273">場合`s`タイム ゾーンの情報が含まれていない、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>オブジェクトが<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2273">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-2274">使用してこの動作を変更することができます、<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>フラグ、返された、<xref:System.DateTime>値<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Local?displayProperty=nameWithType>、またはを使用して、<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>と<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>フラグ、返された、<xref:System.DateTime>値<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2274">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, or by using the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-2275">S にタイム ゾーン情報が含まれている場合、時刻が現地時刻に変換されます、必要に応じて、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>にオブジェクトが設定されている<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2275">If s contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-2276">使用してこの動作を変更することができます、<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>せず、現地時刻を世界協定時刻 (UTC) に変換を設定するフラグ、<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2276">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7ac35-2277">`formats`パラメーターには、パターンの配列が含まれています。 その 1 つ`s`解析操作が成功する場合に正確に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2277">The `formats` parameter contains an array of patterns, one of which `s` must match exactly if the parse operation is to succeed.</span></span> <span data-ttu-id="7ac35-2278">内のパターン、`formats`から 1 つまたは複数のカスタム書式指定子で構成されているパラメーター、[カスタム Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)テーブル、またはから定義済みのパターンを識別する 1 つの標準書式指定子、[Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)テーブル。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2278">The patterns in the `formats` parameter consist of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.</span></span>  
  
 <span data-ttu-id="7ac35-2279">カスタム書式パターンでは日付または時刻の区切り記号を使用しない場合は、インバリアント カルチャを使用して、`provider`パラメーターおよび各カスタムの最も長い形式の書式指定子。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2279">If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="7ac35-2280">たとえば、パターンに時間を指定する場合は、"H"狭義の形式ではなくより多くのフォーム"HH"を指定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2280">For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
 <span data-ttu-id="7ac35-2281">特定の日付と時刻のシンボルとで使用される特定の言語で曜日の名前) などの文字列`s`によって定義されます、`provider`パラメーターの正確な形式は`s`場合`format`は標準的な形式です。指定子の文字列。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2281">The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="7ac35-2282">`provider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2282">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="7ac35-2283">A<xref:System.Globalization.CultureInfo>を解釈するために使用するカルチャを表すオブジェクトを`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2283">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="7ac35-2284"><xref:System.Globalization.DateTimeFormatInfo>によって返されるオブジェクトの<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>シンボルとに書式設定プロパティを定義します`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2284">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="7ac35-2285">A<xref:System.Globalization.DateTimeFormatInfo>日付と時刻のデータの書式を定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2285">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="7ac35-2286">カスタム<xref:System.IFormatProvider>実装が<xref:System.IFormatProvider.GetFormat%2A>メソッドでは、いずれかを返します、<xref:System.Globalization.CultureInfo>オブジェクトまたは<xref:System.Globalization.DateTimeFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2286">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="7ac35-2287">場合`provider`は`null`、<xref:System.Globalization.CultureInfo>現在のカルチャに対応するオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2287">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 <span data-ttu-id="7ac35-2288">`styles`パラメーターには 1 つまたは複数のメンバーが含まれています、<xref:System.Globalization.DateTimeStyles>かどうかと、空白文字で定義されていないかを決定する列挙体`format`に表示できる`s`解析操作の正確な動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2288">The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation.</span></span> <span data-ttu-id="7ac35-2289">次の表をそれぞれどのように説明のメンバー、<xref:System.Globalization.DateTimeStyles>列挙型の運用に与える影響、<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2289">The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.</span></span>  
  
|<span data-ttu-id="7ac35-2290">DateTimeStyles メンバー</span><span class="sxs-lookup"><span data-stu-id="7ac35-2290">DateTimeStyles member</span></span>|<span data-ttu-id="7ac35-2291">説明</span><span class="sxs-lookup"><span data-stu-id="7ac35-2291">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="7ac35-2292">解析`s`と、必要に応じて、UTC に変換します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2292">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="7ac35-2293">場合`s`、タイム ゾーン オフセットが含まれて 場合`s`タイム ゾーン情報が含まれていないが、`styles`が含まれています、<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>フラグは、メソッド呼び出し、文字列を解析して<xref:System.DateTime.ToUniversalTime%2A>、返されたに変換する<xref:System.DateTime>値を UTC にを設定し、<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2293">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-2294">場合`s`UTC で表すことを示す場合、または`s`タイム ゾーン情報は含まれませんが、`styles`が含まれています、<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>フラグは、メソッド、文字列を解析して、返されたのタイム ゾーンの変換は行われません<xref:System.DateTime>値、およびセット、<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2294">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-2295">その他のすべてのケースでは、フラグには影響はありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2295">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="7ac35-2296">定義されていない、空白文字を指定します`format`任意の個々 の日付または時刻の要素の間に表示できます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2296">Specifies that white space not defined by `format` can appear between any individual date or time element.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="7ac35-2297">定義されていない、空白文字を指定します`format`の先頭に表示できる`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2297">Specifies that white space not defined by `format` can appear at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="7ac35-2298">定義されていない、空白文字を指定します`format`の末尾に記述できる`s`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2298">Specifies that white space not defined by `format` can appear at the end of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="7ac35-2299">指定します`s`先頭、内部、および末尾の空白で定義されていない場合があります`format`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2299">Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="7ac35-2300">場合を指定します`s`のタイム ゾーン情報がない、現地時刻を表すと見なされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2300">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="7ac35-2301">しない限り、<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>フラグが存在する、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>値に設定されて<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2301">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="7ac35-2302">指定された場合`s`任意のタイム ゾーン情報が不足しています utc と見なされます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2302">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="7ac35-2303">しない限り、<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>フラグが存在する、メソッドは、返された変換<xref:System.DateTime>値を UTC から現地時刻とセットにその<xref:System.DateTime.Kind%2A>プロパティを<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2303">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|<span data-ttu-id="7ac35-2304">場合`s`の時刻に設定されている戻り値の日付の日付の情報がない`DateTime.MinValue.Date`します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2304">If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="7ac35-2305">`s`パラメーターは、既定値を使用して解析されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2305">The `s` parameter is parsed using default values.</span></span> <span data-ttu-id="7ac35-2306">空白以外に含まれている`format`は許可されています。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2306">No white space other than that present in `format` is allowed.</span></span> <span data-ttu-id="7ac35-2307">場合`s`、返された日付、日付部分がない<xref:System.DateTime>値は 1/1/0001 を設定します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2307">If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001.</span></span> <span data-ttu-id="7ac35-2308">場合`s`タイム ゾーンの情報が含まれていない、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>にオブジェクトが設定されている<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2308">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-2309">タイム ゾーン情報が存在する場合`s`、時刻は現地時刻に変換し、 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>にオブジェクトが設定されている<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2309">If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="7ac35-2310">のタイム ゾーン情報を含む文字列への変換を防止しようとする<xref:System.DateTime>値をその<xref:System.DateTime.Kind%2A>プロパティに設定<xref:System.DateTimeKind.Local?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2310">For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-2311">主に、このフラグには、ローカル時刻を UTC 時刻の変換ができないようにします。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2311">This flag primarily prevents the conversion of UTC times to local times.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-2312">次の例では、<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>メソッドを使用できる形式の数値の文字列を正常に解析できることを確認します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2312">The following example uses the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method to ensure that a string in a number of possible formats can be successfully parsed .</span></span>  
  
 [!code-csharp[System.Datetime.TryParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParseExact/cs/TryParseExact2.cs#2)]
 [!code-vb[System.Datetime.TryParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParseExact/vb/TryParseExact2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7ac35-2313"><paramref name="styles" /> は有効な <see cref="T:System.Globalization.DateTimeStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2313"><paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
  
<span data-ttu-id="7ac35-2314">- または -</span><span class="sxs-lookup"><span data-stu-id="7ac35-2314">-or-</span></span> 
 <span data-ttu-id="7ac35-2315"><paramref name="styles" /> に <see cref="T:System.Globalization.DateTimeStyles" /> 値の正しくない組み合わせが含まれています (たとえば、<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> と <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" /> の両方などです)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2315"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="7ac35-2316">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]、<see cref="Overload:System.DateTime.TryParseExact" />メソッドを返します。<see langword="false" />解析する文字列が、時間の部分と契約に含まれていない AM/PM 指定子を含む場合。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2316">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.TryParseExact" /> method returns <see langword="false" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="7ac35-2317">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]と以前のバージョン、AM/PM 指定子は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2317">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.ParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="7ac35-2318">.NET Framework における日付と時刻文字列の解析の解析</span><span class="sxs-lookup"><span data-stu-id="7ac35-2318">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="7ac35-2319">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-2319">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="7ac35-2320">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="7ac35-2320">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnixEpoch">
      <MemberSignature Language="C#" Value="public static readonly DateTime UnixEpoch;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime UnixEpoch" />
      <MemberSignature Language="DocId" Value="F:System.DateTime.UnixEpoch" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UnixEpoch As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime UnixEpoch;" />
      <MemberSignature Language="F#" Value=" staticval mutable UnixEpoch : DateTime" Usage="System.DateTime.UnixEpoch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcNow">
      <MemberSignature Language="C#" Value="public static DateTime UtcNow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime UtcNow" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.UtcNow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UtcNow As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime UtcNow { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcNow : DateTime" Usage="System.DateTime.UtcNow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ac35-2321">コンピューター上の現在の日時を世界協定時刻 (UTC) で表した <see cref="T:System.DateTime" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2321">Gets a <see cref="T:System.DateTime" /> object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC).</span></span></summary>
        <value><span data-ttu-id="7ac35-2322">現在の UTC 日時を値として保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2322">An object whose value is the current UTC date and time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-2323">このプロパティの解像度は、基になるオペレーティング システムに依存するシステム タイマーに依存します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2323">The resolution of this property depends on the system timer, which depends on the underlying operating system.</span></span> <span data-ttu-id="7ac35-2324">0.5 と 15 ミリ秒の間にする傾向にあります。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2324">It tends to be between 0.5 and 15 milliseconds.</span></span>

 <span data-ttu-id="7ac35-2325">以降、.NET Framework version 2.0 では、戻り値は、<xref:System.DateTime>が<xref:System.DateTime.Kind%2A>プロパティが返す<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2325">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="7ac35-2326">使用する代わりに<xref:System.DateTime.UtcNow%2A>は<xref:System.DateTimeOffset.UtcNow%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2326">An alternative to using <xref:System.DateTime.UtcNow%2A> is <xref:System.DateTimeOffset.UtcNow%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ac35-2327">前者は、世界協定時刻 (UTC) の日付と時刻の値は割り当てることを示します<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>にその<xref:System.DateTime.Kind%2A>プロパティ、後者の場合は、日付を割り当てますおよび時刻の値の UTC 時刻のオフセット (に等しい<xref:System.TimeSpan.Zero?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2327">While the former indicates that a date and time value is Coordinated Universal Time (UTC) by assigning <xref:System.DateTimeKind.Utc?displayProperty=nameWithType> to its <xref:System.DateTime.Kind%2A> property, the latter assigns the date and time value the UTC time's offset (equal to <xref:System.TimeSpan.Zero?displayProperty=nameWithType>).</span></span>
  
## Examples  
 <span data-ttu-id="7ac35-2328">次の例では、<xref:System.DateTime.SpecifyKind%2A>メソッドを示すために、どのように<xref:System.DateTime.Kind%2A>プロパティの影響、<xref:System.DateTime.ToLocalTime%2A>と<xref:System.DateTime.ToUniversalTime%2A>変換メソッド。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2328">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.UtcNow" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public int Year { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Year" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Year" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Year As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Year { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Year : int" Usage="System.DateTime.Year" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ac35-2329">このインスタンスで表される日付の年の部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2329">Gets the year component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="7ac35-2330">1 から 9999 までの間の年。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2330">The year, between 1 and 9999.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ac35-2331"><xref:System.DateTime.Year%2A>プロパティは、構成のグレゴリオ暦カレンダーの現在のインスタンスの年を返します。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2331">The <xref:System.DateTime.Year%2A> property returns the year of the current instance in the Gregorian calendar.</span></span> <span data-ttu-id="7ac35-2332">現在のカルチャの既定の暦を使用して、年は返されません。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2332">It does not return the year using the default calendar of the current culture.</span></span> <span data-ttu-id="7ac35-2333">特定の暦を使用して、年を取得するには、カレンダーでを呼び出すことができます`GetYear`メソッドは、次のコードに示すよう。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2333">To retrieve the year using a particular calendar, you can call that calendar's `GetYear` method, as the following code shows.</span></span>  
  
 [!code-csharp[System.DateTime.Year#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Year/cs/Year.cs#1)]
 [!code-vb[System.DateTime.Year#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Year/vb/Year.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="7ac35-2334">次の例で、<xref:System.DateTime.Year%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="7ac35-2334">The following example demonstrates the <xref:System.DateTime.Year%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
  </Members>
</Type>