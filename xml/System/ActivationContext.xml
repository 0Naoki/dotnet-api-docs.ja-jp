<Type Name="ActivationContext" FullName="System.ActivationContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d0bc7935618b3e2a2a51fd75e676f477ff68b733" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70647024" /></Metadata><TypeSignature Language="C#" Value="public sealed class ActivationContext : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ActivationContext extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.ActivationContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActivationContext&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivationContext sealed : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type ActivationContext = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>現在のアプリケーションのアクティベーション コンテキストを識別します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラスには<xref:System.ApplicationIdentity>が含まれており、アプリケーションマニフェストへの内部専用アクセスを提供します。 <xref:System.ActivationContext> アクティベーションコンテキストは、マニフェストに基づくアクティベーション中に、ドメインポリシーを設定し、アプリケーションベースのセキュリティモデルを提供するために使用されます。 詳細については、<xref:System.Security.Policy.ApplicationSecurityManager> クラスを参照してください。  
  
> [!IMPORTANT]
>  この型は <xref:System.IDisposable> インターフェイスを実装します。 型の使用が完了したら、直接的または間接的に型を破棄する必要があります。 直接的に型を破棄するには、`try` / `catch` ブロック内で <xref:System.IDisposable.Dispose%2A> メソッドを呼び出します。 間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。 詳細については、<xref:System.IDisposable> インターフェイスに関するトピック内の「IDisposable を実装するオブジェクトの使用」セクションを参照してください。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.ActivationContext>オブジェクトを使用して、 <xref:System.ApplicationIdentity>マニフェストベースのアプリケーションのを取得する方法を示しています。 正しい結果を得るには、マニフェストベースのアプリケーションとして次のコード例を実行します。  
  
 [!code-csharp[System.ActivationContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ActivationContext/cs/program.cs#1)]
 [!code-vb[System.ActivationContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ActivationContext/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/visualstudio/deployment/publishing-clickonce-applications">ClickOnce アプリケーションの発行</related>
  </Docs>
  <Members>
    <Member MemberName="ApplicationManifestBytes">
      <MemberSignature Language="C#" Value="public byte[] ApplicationManifestBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] ApplicationManifestBytes" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.ApplicationManifestBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationManifestBytes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ ApplicationManifestBytes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationManifestBytes : byte[]" Usage="System.ActivationContext.ApplicationManifestBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のアプリケーションの ClickOnce アプリケーション マニフェストを取得します。</summary>
        <value>この <see cref="T:System.ActivationContext" /> に関連付けられているアプリケーションの ClickOnce アプリケーション マニフェストを含むバイト配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アクティベーションコンテキストが<xref:System.ActivationContext.ContextForm.Loose>の場合は、アプリケーションが ClickOnce ストアにインストールされていないことを意味します。配置マニフェストは、一時ダウンロードフォルダーから読み込まれます。 アクティベーションコンテキストが<xref:System.ActivationContext.ContextForm.StoreBounded>の場合 (つまり、アプリケーションが clickonce ストアにインストールされている場合)、配置マニフェストは clickonce ストアから読み込まれます。 配置マニフェストの詳細については、「 [ClickOnce 配置マニフェスト](https://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b)」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePartialActivationContext">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.ActivationContext" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePartialActivationContext">
      <MemberSignature Language="C#" Value="public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ActivationContext CreatePartialActivationContext(class System.ApplicationIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartialActivationContext (identity As ApplicationIdentity) As ActivationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ActivationContext ^ CreatePartialActivationContext(ApplicationIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="static member CreatePartialActivationContext : ApplicationIdentity -&gt; ActivationContext" Usage="System.ActivationContext.CreatePartialActivationContext identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.ApplicationIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">アプリケーションを識別するオブジェクト。</param>
        <summary>指定されたアプリケーション ID を使用して、<see cref="T:System.ActivationContext" /> クラスの新しいインスタンスを初期化します。</summary>
        <returns>指定されたアプリケーション ID を持つオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.ActivationContext.CreatePartialActivationContext%2A>は、内部コンストラクターを呼び出して、新しいアクティベーションコンテキストを作成します。 .NET Framework バージョン2.0 で<xref:System.ActivationContext>のクラスの実装は、ストアに完全にインストールされていないか、フォルダーに完全に含まれていないアプリケーション向けに設計されています。 このメソッドは、パブリックコンストラクターが完全なアクティベーションコンテキストを提供する、今後のリリースの下位互換性を提供します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="identity" /> で、配置またはアプリケーション ID が指定されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreatePartialActivationContext">
      <MemberSignature Language="C#" Value="public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity, string[] manifestPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ActivationContext CreatePartialActivationContext(class System.ApplicationIdentity identity, string[] manifestPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartialActivationContext (identity As ApplicationIdentity, manifestPaths As String()) As ActivationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ActivationContext ^ CreatePartialActivationContext(ApplicationIdentity ^ identity, cli::array &lt;System::String ^&gt; ^ manifestPaths);" />
      <MemberSignature Language="F#" Value="static member CreatePartialActivationContext : ApplicationIdentity * string[] -&gt; ActivationContext" Usage="System.ActivationContext.CreatePartialActivationContext (identity, manifestPaths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.ApplicationIdentity" />
        <Parameter Name="manifestPaths" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="identity">アプリケーションを識別するオブジェクト。</param>
        <param name="manifestPaths">アプリケーションのマニフェスト パスの文字列配列。</param>
        <summary>指定されたアプリケーション ID とマニフェスト パスの配列を使用して、<see cref="T:System.ActivationContext" /> クラスの新しいインスタンスを初期化します。</summary>
        <returns>指定されたアプリケーション ID とマニフェスト パスの配列を持つオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.ActivationContext.CreatePartialActivationContext%2A>は、内部コンストラクターを呼び出して、新しいアクティベーションコンテキストを作成します。 .NET Framework バージョン2.0 で<xref:System.ActivationContext>のクラスの実装は、ストアに完全にインストールされていないか、フォルダーに完全に含まれていないアプリケーション向けに設計されています。 このメソッドは、パブリックコンストラクターが完全なアクティベーションコンテキストを提供する、今後のリリースの下位互換性を提供します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> は <see langword="null" />です。  
  
- または - 
 <paramref name="manifestPaths" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="identity" /> で、配置またはアプリケーション ID が指定されていません。  
  
- または - 
 <paramref name="identity" /> がマニフェストの ID と一致しません。  
  
- または - 
 <paramref name="identity" /> のコンポーネント数が、マニフェスト パスの数と一致しません。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeploymentManifestBytes">
      <MemberSignature Language="C#" Value="public byte[] DeploymentManifestBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] DeploymentManifestBytes" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.DeploymentManifestBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeploymentManifestBytes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ DeploymentManifestBytes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeploymentManifestBytes : byte[]" Usage="System.ActivationContext.DeploymentManifestBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のアプリケーションの ClickOnce 配置マニフェストを取得します。</summary>
        <value>この <see cref="T:System.ActivationContext" /> に関連付けられたアプリケーションの ClickOnce 配置マニフェストを含むバイト配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アクティベーションコンテキストが<xref:System.ActivationContext.ContextForm.Loose>の場合は、アプリケーションが ClickOnce ストアにインストールされていないことを意味します。配置マニフェストは、一時ダウンロードフォルダーから読み込まれます。 アクティベーションコンテキストが<xref:System.ActivationContext.ContextForm.StoreBounded>の場合 (つまり、アプリケーションが clickonce ストアにインストールされている場合)、配置マニフェストは clickonce ストアから読み込まれます。 配置マニフェストの詳細については、「 [ClickOnce 配置マニフェスト](https://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b)」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="activationContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ActivationContext" /> によって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ActivationContext.Dispose%2A> を使い終わったら <xref:System.ActivationContext> を呼び出します。 <xref:System.ActivationContext.Dispose%2A>メソッドによって、<xref:System.ActivationContext> は使用不可の状態になります。 <xref:System.ActivationContext.Dispose%2A>呼び出し後は、<xref:System.ActivationContext>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.ActivationContext> へのすべての参照を解放する必要があります。 詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。  
  
> [!NOTE]
>  <xref:System.ActivationContext>への最後の参照を解放する前に、必ず<xref:System.ActivationContext.Dispose%2A>を呼び出してください。 そうしないと、ガベージ コレクターが <xref:System.ActivationContext> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ActivationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ActivationContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="activationContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ActivationContext" /> がガベージ コレクションによって収集される前に、その <see cref="T:System.ActivationContext" /> オブジェクトがリソースを解放し、その他のクリーンアップ操作を実行できるようにします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public ActivationContext.ContextForm Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ActivationContext/ContextForm Form" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As ActivationContext.ContextForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ActivationContext::ContextForm Form { ActivationContext::ContextForm get(); };" />
      <MemberSignature Language="F#" Value="member this.Form : ActivationContext.ContextForm" Usage="System.ActivationContext.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext+ContextForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のアプリケーションに対するフォームまたはストア コンテキストを取得します。</summary>
        <value>列挙値の 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 マニフェストベースのアプリケーションが ClickOnce ストアにインストールされていない可能性があります。 Visual Studio で実行されるマニフェストでアクティブ化されたアプリケーションなど、ストアに含まれていないアプリケーション<xref:System.ActivationContext.ContextForm.Loose>は、として分類されます。 ストアに格納されているアプリケーションは、と<xref:System.ActivationContext.ContextForm.StoreBounded>して分類されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public ApplicationIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ApplicationIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.Identity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Identity As ApplicationIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ApplicationIdentity ^ Identity { ApplicationIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : ApplicationIdentity" Usage="System.ActivationContext.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ApplicationIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のアプリケーションのアプリケーション ID を取得します。</summary>
        <value>現在のアプリケーションを識別する <see cref="T:System.ApplicationIdentity" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 は<xref:System.ApplicationIdentity> 、完全な名前と場所でアプリケーションを一意に識別します。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.ActivationContext>オブジェクトを使用して、 <xref:System.ApplicationIdentity>マニフェストベースのアプリケーションのを取得する方法を示しています。 このコード例は、 <xref:System.ActivationContext>クラスに対して提供される大規模な例の一部です。  
  
 [!code-csharp[System.ActivationContext#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ActivationContext/cs/program.cs#2)]
 [!code-vb[System.ActivationContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ActivationContext/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">データを読み込む先のオブジェクト。</param>
        <param name="context">このシリアル化対象の構造体。</param>
        <summary><see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、オブジェクトをシリアル化するために必要なデータを設定します。</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に完全信頼が必要です。 このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</permission>
      </Docs>
    </Member>
  </Members>
</Type>
