<Type Name="Action&lt;T1,T2,T3,T4,T5,T6&gt;" FullName="System.Action&lt;T1,T2,T3,T4,T5,T6&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="03e458aa13fa1c5d2ad3a4756e39fc9de71853a7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30726876" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void Action&lt;in T1,in T2,in T3,in T4,in T5,in T6&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Action`6&lt;- T1, - T2, - T3, - T4, - T5, - T6&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Action`6" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action(Of In T1, In T2, In T3, In T4, In T5, In T6)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA;public delegate void Action(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6);" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T4">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T5">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T6">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
    <Parameter Name="arg4" Type="T4" />
    <Parameter Name="arg5" Type="T5" />
    <Parameter Name="arg6" Type="T6" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1">このデリゲートによってカプセル化されるメソッドの最初のパラメーターの型。</typeparam>
    <typeparam name="T2">このデリゲートによってカプセル化されるメソッドの 2 番目のパラメーターの型。</typeparam>
    <typeparam name="T3">このデリゲートによってカプセル化されるメソッドの 3 番目のパラメーターの型。</typeparam>
    <typeparam name="T4">このデリゲートによってカプセル化されるメソッドの 4 番目のパラメーターの型。</typeparam>
    <typeparam name="T5">このデリゲートによってカプセル化されるメソッドの第 5 パラメーターの型。</typeparam>
    <typeparam name="T6">このデリゲートによってカプセル化されるメソッドの第 6 パラメーターの型。</typeparam>
    <param name="arg1">このデリゲートによってカプセル化されるメソッドの最初のパラメーター。</param>
    <param name="arg2">このデリゲートによってカプセル化されるメソッドの 2 番目のパラメーター。</param>
    <param name="arg3">このデリゲートによってカプセル化されるメソッドの 3 番目のパラメーター。</param>
    <param name="arg4">このデリゲートによってカプセル化されるメソッドの 4 番目のパラメーター。</param>
    <param name="arg5">このデリゲートによってカプセル化されるメソッドの第 5 パラメーター。</param>
    <param name="arg6">このデリゲートによってカプセル化されるメソッドの第 6 パラメーター。</param>
    <summary>6 個のパラメーターを持ち、値を返さないメソッドをカプセル化します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用することができます、<xref:System.Action%606>をパラメーターとして明示的にカスタム デリゲートを宣言しなくても、メソッドに渡すデリゲート。 カプセル化されるメソッドは、このデリゲートによって定義されているメソッドのシグネチャに対応する必要があります。 つまり、値を返す必要がありますいないをカプセル化されるメソッドは、値を渡し、6 つのパラメーターを持つ必要があります。 (C# の場合、メソッドが返す必要があります`void`です。 Visual Basic で定義する必要があります、`Sub`しています.`End Sub` 構築します。 できますが無視される値を返すメソッド。)通常、このようなメソッドは、操作の実行に使用されます。  
  
> [!NOTE]
>  6 個のパラメーターを持ち、値を返すメソッドを参照するには、ジェネリックを使用して<xref:System.Func%607>代わりに委任します。  
  
 使用することも、<xref:System.Action%606>匿名メソッド、ラムダ式を持つデリゲートします。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Func`7" />
  </Docs>
</Type>