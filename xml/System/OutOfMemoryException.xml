<Type Name="OutOfMemoryException" FullName="System.OutOfMemoryException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="72cb02fe2746be503bf9919aceba71c44b50108a" /><Meta Name="ms.sourcegitcommit" Value="d2dc7b29150110865ef8f199ee7463d9568fc696" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/25/2019" /><Meta Name="ms.locfileid" Value="58413983" /></Metadata><TypeSignature Language="C#" Value="public class OutOfMemoryException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit OutOfMemoryException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.OutOfMemoryException" />
  <TypeSignature Language="VB.NET" Value="Public Class OutOfMemoryException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutOfMemoryException : SystemException" />
  <TypeSignature Language="F#" Value="type OutOfMemoryException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9e1a9-101">プログラムの実行を継続するためのメモリが不足している場合にスローされる例外。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-101">The exception that is thrown when there is not enough memory to continue the execution of a program.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="9e1a9-102"><xref:System.OutOfMemoryException> HRESULT を使用して`COR_E_OUTOFMEMORY`0x8007000E 値を持ちます。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-102"><xref:System.OutOfMemoryException> uses the HRESULT `COR_E_OUTOFMEMORY`, which has the value 0x8007000E.</span></span>  
  
<span data-ttu-id="9e1a9-103">インスタンスの初期プロパティ値の一覧については<xref:System.OutOfMemoryException>を参照してください、<xref:System.OutOfMemoryException.%23ctor%2A>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-103">For a list of initial property values for an instance of <xref:System.OutOfMemoryException>, see the <xref:System.OutOfMemoryException.%23ctor%2A> constructors.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e1a9-104">継承された値<xref:System.Exception.Data%2A>プロパティは常に`null`します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-104">The value of the inherited <xref:System.Exception.Data%2A> property is always `null`.</span></span>  
  
<span data-ttu-id="9e1a9-105"><xref:System.OutOfMemoryException>例外が 2 つの主な原因。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-105">An <xref:System.OutOfMemoryException> exception has two major causes:</span></span>  
  
-   <span data-ttu-id="9e1a9-106">展開しようとして、<xref:System.Text.StringBuilder>オブジェクトによって定義された長さを超えてその<xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-106">You are attempting to expand a <xref:System.Text.StringBuilder> object beyond the length defined by its <xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="9e1a9-107">共通言語ランタイムは、操作を正常に実行するための十分な連続したメモリを割り当てることができません。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-107">The common language runtime cannot allocate enough contiguous memory to successfully perform an operation.</span></span> <span data-ttu-id="9e1a9-108">メモリの割り当てを必要とするプロパティの割り当てまたはメソッド呼び出しによってこの例外をスローすることができます。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-108">This exception can be thrown by any property assignment or method call that requires a memory allocation.</span></span> <span data-ttu-id="9e1a9-109">原因の詳細については、 <xref:System.OutOfMemoryException> 、例外を参照してください[「メモリ不足」は、物理メモリを参照しない](https://blogs.msdn.com/b/ericlippert/archive/2009/06/08/out-of-memory-does-not-refer-to-physical-memory.aspx)します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-109">For more information on the cause of the <xref:System.OutOfMemoryException> exception, see ["Out of Memory" Does Not Refer to Physical Memory](https://blogs.msdn.com/b/ericlippert/archive/2009/06/08/out-of-memory-does-not-refer-to-physical-memory.aspx).</span></span>  
  
     <span data-ttu-id="9e1a9-110">この種類の<xref:System.OutOfMemoryException>例外は致命的なエラーを表します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-110">This type of <xref:System.OutOfMemoryException> exception represents a catastrophic failure.</span></span> <span data-ttu-id="9e1a9-111">含める必要がありますが、例外を処理するために選択した場合、`catch`ブロックを呼び出す、<xref:System.Environment.FailFast%2A?displayProperty=nameWithType>メソッドをアプリを終了し、次の例のように、システム イベント ログにエントリを追加します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-111">If you choose to handle the exception, you should include a `catch` block that calls the <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> method to terminate your app and add an entry to the system event log, as the following example does.</span></span>  
  
     [!code-csharp[System.OutOfMemoryException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/failfast1.cs#2)]
     [!code-vb[System.OutOfMemoryException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/failfast1.vb#2)]  
  
 <span data-ttu-id="9e1a9-112">例外がスローされ、それを排除するために行える操作は、以下の条件の一部:</span><span class="sxs-lookup"><span data-stu-id="9e1a9-112">Some of the conditions under which the exception is thrown and the actions you can take to eliminate it include the following:</span></span>  
  
<span data-ttu-id="9e1a9-113">**呼び出している、<xref:System.Text.StringBuilder.Insert%2A?displayProperty=nameWithType>メソッド。**</span><span class="sxs-lookup"><span data-stu-id="9e1a9-113">**You are calling the <xref:System.Text.StringBuilder.Insert%2A?displayProperty=nameWithType> method.**</span></span>  

<span data-ttu-id="9e1a9-114">長さを拡張しようとして、<xref:System.Text.StringBuilder>オブジェクトで指定されたサイズを超えるその<xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-114">You are attempting to increase the length of a <xref:System.Text.StringBuilder> object beyond the size specified by its <xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9e1a9-115">次の例を示しています、<xref:System.OutOfMemoryException>への呼び出しによってスローされた例外、<xref:System.Text.StringBuilder.Insert%28System.Int32%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType>メソッドの例では、オブジェクトの原因となる文字列を挿入しようとしました。<xref:System.Text.StringBuilder.Length%2A>プロパティをその最大の容量を超えます。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-115">The following example illustrates the <xref:System.OutOfMemoryException> exception thrown by a call to the <xref:System.Text.StringBuilder.Insert%28System.Int32%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType> method when the example tries to insert a string that would cause the object's <xref:System.Text.StringBuilder.Length%2A> property to exceed its maximum capacity.</span></span>  
  
[!code-csharp[System.OutOfMemoryException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/sb_example1.cs#1)]
[!code-vb[System.OutOfMemoryException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/sb_example1.vb#1)]  
  
<span data-ttu-id="9e1a9-116">エラーに対処するには、次のいずれかの操作を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-116">You can do either of the following to address the error:</span></span>  
  
-   <span data-ttu-id="9e1a9-117">呼び出し、<xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType>コンス トラクターの呼び出しでその他の<xref:System.Text.StringBuilder>コンス トラクター オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-117">Replace the call to the <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor with a call any other <xref:System.Text.StringBuilder> constructor overload.</span></span> <span data-ttu-id="9e1a9-118">最大容量、<xref:System.Text.StringBuilder>オブジェクトは、これは既定値に設定する<xref:System.Int32.MaxValue?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-118">The maximum capacity of your <xref:System.Text.StringBuilder> object will be set to its default value, which is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  

-   <span data-ttu-id="9e1a9-119">呼び出す、<xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType>を持つコンス トラクター、`maxCapacity`任意の拡張に対応するために十分な大きさである値、<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-119">Call the <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor with a `maxCapacity` value that is large enough to accommodate any expansions to the <xref:System.Text.StringBuilder> object.</span></span>  
  
<span data-ttu-id="9e1a9-120">**アプリは、32 ビット プロセスとして実行されます。**</span><span class="sxs-lookup"><span data-stu-id="9e1a9-120">**Your app runs as a 32-bit process.**</span></span>

<span data-ttu-id="9e1a9-121">32 ビット プロセスでは、最大 2 GB の 32 ビット システムでユーザー モード仮想メモリと 4 GB の 64 ビット システムでユーザー モード仮想メモリを割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-121">32-bit processes can allocate a maximum of 2GB of virtual user-mode memory on 32-bit systems, and 4GB of virtual user-mode memory on 64-bit systems.</span></span> <span data-ttu-id="9e1a9-122">これは、ため、共通言語ランタイムの大規模な割り当てが必要なときに十分な連続したメモリを割り当てることが難しく、ことができます。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-122">This can make it more difficult for the common language runtime to allocate sufficient contiguous memory when a large allocation is needed.</span></span> <span data-ttu-id="9e1a9-123">これに対し、64 ビット プロセスでは、最大 8 TB の仮想メモリを割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-123">In contrast, 64-bit processes can allocate up to 8TB of virtual memory.</span></span> <span data-ttu-id="9e1a9-124">この例外に対処するため、64 ビット プラットフォームを対象とするアプリを再コンパイルします。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-124">To address this exception, recompile your app to target a 64-bit platform.</span></span> <span data-ttu-id="9e1a9-125">Visual Studio での特定のプラットフォームを対象とする方法の詳細については、次を参照してください。[方法。プロジェクトを構成して対象プラットフォームを設定する](https://msdn.microsoft.com/library/845302fc-273d-4f81-820a-7296ce91bd76)</span><span class="sxs-lookup"><span data-stu-id="9e1a9-125">For information on targeting specific platforms in Visual Studio, see [How to: Configure Projects to Target Platforms](https://msdn.microsoft.com/library/845302fc-273d-4f81-820a-7296ce91bd76).</span></span>  
  
<span data-ttu-id="9e1a9-126">**アプリがアンマネージ リソースをリークしています。**</span><span class="sxs-lookup"><span data-stu-id="9e1a9-126">**Your app is leaking unmanaged resources**</span></span> 

<span data-ttu-id="9e1a9-127">(ファイル、メモリ マップト ファイルは、パイプ、レジストリ キー、および待機ハンドルへのハンドルを含む) オペレーティング システムの処理など、アンマネージ リソースに割り当てられたメモリは管理しません。 ガベージ コレクターはマネージ型に割り当てられたメモリを解放できませんが、など、Windows API の呼び出しによって直接、またはメモリ割り当て関数への呼び出しによって割り当てられたメモリ ブロックと`malloc`します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-127">Although the garbage collector is able to free memory allocated to managed types, it does not manage memory allocated to unmanaged resources such as operating system handles (including handles to files, memory-mapped files, pipes, registry keys, and wait handles) and memory blocks allocated directly by Windows API calls or by calls to memory allocation functions such as `malloc`.</span></span> <span data-ttu-id="9e1a9-128">アンマネージ リソースを消費する型を実装、<xref:System.IDisposable>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-128">Types that consume unmanaged resources implement the <xref:System.IDisposable> interface.</span></span>  

<span data-ttu-id="9e1a9-129">アンマネージ リソースを使用する型を使用している場合に呼び出す必ず必要があります、<xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>メソッドの使用を終了するときにします。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-129">If you are consuming a type that uses unmanaged resources, you should be sure to call its <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method when you have finished using it.</span></span> <span data-ttu-id="9e1a9-130">(一部の種類の実装も、`Close`を関数と同じであるメソッド、`Dispose`メソッドです)。詳細については、次を参照してください。、[オブジェクトを実装 IDisposable のを使用して](~/docs/standard/garbage-collection/using-objects.md)トピック。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-130">(Some types also implement a `Close` method that is identical in function to a `Dispose` method.) For more information, see the [Using Objects That Implement IDisposable](~/docs/standard/garbage-collection/using-objects.md) topic.</span></span>  

<span data-ttu-id="9e1a9-131">アンマネージ リソースを使用する型を作成した場合は、Dispose パターンを実装している、必要に応じて、指定のファイナライザーを確認します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-131">If you have created a type that uses unmanaged resources, make sure that you have implemented the Dispose pattern and, if necessary, supplied a finalizer.</span></span> <span data-ttu-id="9e1a9-132">詳細については、次を参照してください。 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)と<xref:System.Object.Finalize%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-132">For more information, see  [Implementing a Dispose method](~/docs/standard/garbage-collection/implementing-dispose.md) and <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span>  
  
<span data-ttu-id="9e1a9-133">**64 ビット プロセスで大きな配列を作成します。**</span><span class="sxs-lookup"><span data-stu-id="9e1a9-133">**You are attempting to create a large array in a 64-bit process**</span></span>

<span data-ttu-id="9e1a9-134">既定では、.NET framework 共通言語ランタイムにサイズが 2 GB を超えています。 1 つのオブジェクトはできません。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-134">By default, the common language runtime in .NET Framework does not allow single objects whose size exceeds 2GB.</span></span> <span data-ttu-id="9e1a9-135">この既定をオーバーライドするには、使用することができます、 [ \<gcAllowVeryLargeObjects >](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md)の合計サイズが 2 GB を超える配列を有効にする構成ファイルの設定。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-135">To override this default, you can use the [\<gcAllowVeryLargeObjects>](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) configuration file setting to enable arrays whose total size exceeds 2 GB.</span></span> <span data-ttu-id="9e1a9-136">.NET Core では、2 GB は既定で有効になっているよりも大きな配列のサポートします。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-136">On .NET Core, support for arrays of greater than 2 GB is enabled by default.</span></span> 
  
<span data-ttu-id="9e1a9-137">**メモリでは、データ (配列、コレクション、またはデータベースのデータ セット) などの非常に大きなセットで作業しています。**</span><span class="sxs-lookup"><span data-stu-id="9e1a9-137">**You are working with very large sets of data (such as arrays, collections, or database data sets) in memory.**</span></span>

<span data-ttu-id="9e1a9-138">メモリ内に存在するデータ セットまたはデータ構造が非常に大きいので、共通言語ランタイムが、連続する十分なメモリを割り当てることはできないことになったときに、<xref:System.OutOfMemoryException>例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-138">When data structures or data sets that reside in memory become so large that the common language runtime is unable to allocate enough contiguous memory for them, an <xref:System.OutOfMemoryException> exception results.</span></span>  

<span data-ttu-id="9e1a9-139">防ぐために、<xref:System.OutOfMemoryException>例外の低いデータがメモリに常駐しているか、データをメモリ割り当てが少ないを必要とするセグメントに分割されますようにアプリケーションを変更する必要があります。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-139">To prevent the <xref:System.OutOfMemoryException> exceptions, you must modify your application so that less data is resident in memory, or the data is divided into segments that require smaller memory allocations.</span></span> <span data-ttu-id="9e1a9-140">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-140">For example:</span></span>  

-   <span data-ttu-id="9e1a9-141">すべてのデータをデータベースから取得し、サーバーへのトリップを最小限に抑えるアプリでフィルター処理している場合をアプリに必要なデータのサブセットのみを返すクエリを変更する必要があります。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-141">If you are retrieving all of the data from a database and then filtering it in your app to minimize trips to the server, you should modify your queries to return only the subset of data that your app needs.</span></span> <span data-ttu-id="9e1a9-142">大規模なテーブルを操作するとき複数のクエリは、ほとんどが詳細はすべて 1 つのテーブル内のデータの取得し、それよりも効率的です。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-142">When working with large tables, multiple queries are almost always more efficient than retrieving all of the data in a single table and then manipulating it.</span></span>  

-   <span data-ttu-id="9e1a9-143">ユーザーが動的に作成したクエリを実行している場合は、クエリによって返されるレコードの数が制限されることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-143">If you are executing queries that users create dynamically, you should ensure that the number of records returned by the query is limited.</span></span>  

-   <span data-ttu-id="9e1a9-144">大きな配列を使用しているかどうか、またはその他のコレクション オブジェクトのサイズ、結果、<xref:System.OutOfMemoryException>例外をすべて一度に使用するのではなく、データをサブセットで動作するアプリケーションを変更する必要があります。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-144">If you are using large arrays or other collection objects whose size results in an <xref:System.OutOfMemoryException> exception, you should modify your application to work the data in subsets rather than to work with it all at once.</span></span>  
  
<span data-ttu-id="9e1a9-145">次の例では、2億浮動小数点値で構成しの平均を計算する配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-145">The following example gets a array that consists of 200 million floating-point values and then calculates their mean.</span></span> <span data-ttu-id="9e1a9-146">この例の出力で示すは、例では、平均を計算する前にメモリ内配列全体を格納するため、<xref:System.OutOfMemoryException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-146">The output from the example shows that, because the example stores the entire array in memory before it calculates the mean, an <xref:System.OutOfMemoryException> is thrown.</span></span>  

[!code-csharp[System.OutOfMemoryException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/data1.cs#3)]
[!code-vb[System.OutOfMemoryException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/data1.vb#3)]  
  
<span data-ttu-id="9e1a9-147">次の例では、排除、 <xref:System.OutOfMemoryException> (これらの行をコメント アウト例では、さらに処理を許可するために必要な場合は、ファイルにデータをシリアル化する、メモリ内データ セット全体を格納することがなく、受信データを処理することによって例外のでここで、サイズが 1 GB より大きいファイル) を生成して呼び出し元のルーチンに計算された平均とケースの数を返します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-147">The following example eliminates the <xref:System.OutOfMemoryException> exception by processing the incoming data without storing the entire data set in memory, serializing the data to a file if necessary to permit further processing (these lines are commented out in the example, since in this case they produce a file whose size is greater than 1GB), and returning the calculated mean and the number of cases to the calling routine.</span></span>  

[!code-csharp[System.OutOfMemoryException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/data2.cs#4)]
[!code-vb[System.OutOfMemoryException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/data2.vb#4)]  
  
<span data-ttu-id="9e1a9-148">**大きな文字列を連結する繰り返し。**</span><span class="sxs-lookup"><span data-stu-id="9e1a9-148">**You are repeatedly concatenating large strings.**</span></span> 

<span data-ttu-id="9e1a9-149">文字列は変更できないために、各文字列連結操作は、新しい文字列を作成します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-149">Because strings are immutable, each string concatenation operation creates a new string.</span></span> <span data-ttu-id="9e1a9-150">小さな文字列の場合、または連結操作の数が少ない場合の影響はごくわずかです。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-150">The impact for small strings, or for a small number of concatenation operations, is negligible.</span></span> <span data-ttu-id="9e1a9-151">大きな文字列または連結演算に非常に多くの場合は、文字列の連結は、多くのメモリの割り当てとメモリの断片化、パフォーマンスの低下を招く可能性と、場合によって<xref:System.OutOfMemoryException>例外。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-151">But for large strings or a very large number of concatenation operations, string concatenation can lead to a large number of memory allocations and memory fragmentation, poor performance, and possibly <xref:System.OutOfMemoryException> exceptions.</span></span>  

<span data-ttu-id="9e1a9-152">大きな文字列の連結や、多数の連結演算を実行するを使用する際、<xref:System.Text.StringBuilder>クラスの代わりに、<xref:System.String>クラス。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-152">When concatenating large strings or performing a large number of concatenation operations, you should use the <xref:System.Text.StringBuilder> class instead of the <xref:System.String> class.</span></span> <span data-ttu-id="9e1a9-153">文字列の操作が完了したら、変換、<xref:System.Text.StringBuilder>インスタンスを呼び出すことによって文字列、<xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-153">When you have finished manipulating the string, convert the <xref:System.Text.StringBuilder> instance to a string by calling the <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
<span data-ttu-id="9e1a9-154">**メモリ内オブジェクトの数が多いをピン留めします。**</span><span class="sxs-lookup"><span data-stu-id="9e1a9-154">**You pin a large number of objects in memory.**</span></span>  
 
<span data-ttu-id="9e1a9-155">メモリ内オブジェクトの数が多いをピン留めを長期間と、ガベージ コレクターが連続するメモリ ブロックを割り当てる難しくことができます。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-155">Pinning a large number of objects in memory for long periods can make it difficult for the garbage collector to allocate contiguous blocks of memory.</span></span> <span data-ttu-id="9e1a9-156">ピン留めした多数のオブジェクトをメモリに例を使用している場合、`fixed`ステートメント (C#) または呼び出すことによって、<xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType>のハンドル型を持つメソッド<xref:System.Runtime.InteropServices.GCHandleType.Pinned?displayProperty=nameWithType>、アドレスには、次を行うことができます、<xref:System.OutOfMemoryException>例外。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-156">If you've pinned a large number of objects in memory, for example by using the `fixed` statement in C# or by calling the <xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType> method with a handle type of <xref:System.Runtime.InteropServices.GCHandleType.Pinned?displayProperty=nameWithType>, you can do the following to address the <xref:System.OutOfMemoryException> exception.</span></span>  
  
-   <span data-ttu-id="9e1a9-157">各オブジェクトは、ピン留めを本当に必要かどうかを評価します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-157">Evaluate whether each object really needs to be pinned,</span></span>  

-   <span data-ttu-id="9e1a9-158">ある各オブジェクトは固定されておらず、できるだけ早く確認してください。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-158">Ensure that each object is unpinned as soon as possible.</span></span>  

-   <span data-ttu-id="9e1a9-159">各呼び出しことを確認、<xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType>暗証番号 (pin) のメモリへのメソッドに対応する呼び出しには、<xref:System.Runtime.InteropServices.GCHandle.Free%2A?displayProperty=nameWithType>そのメモリの固定を解除するメソッド。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-159">Make sure that each call to the <xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType> method to pin memory has a corresponding call to the <xref:System.Runtime.InteropServices.GCHandle.Free%2A?displayProperty=nameWithType> method to unpin that memory.</span></span>  

<span data-ttu-id="9e1a9-160">次の Microsoft intermediate (MSIL) 命令のスロー、<xref:System.OutOfMemoryException>例外。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-160">The following Microsoft intermediate (MSIL) instructions throw an <xref:System.OutOfMemoryException> exception:</span></span>  
  
-   [<span data-ttu-id="9e1a9-161">box</span><span class="sxs-lookup"><span data-stu-id="9e1a9-161">box</span></span>](https://msdn.microsoft.com/library/system.reflection.emit.opcodes.box.aspx)  
-   [<span data-ttu-id="9e1a9-162">newarr</span><span class="sxs-lookup"><span data-stu-id="9e1a9-162">newarr</span></span>](https://msdn.microsoft.com/library/system.reflection.emit.opcodes.newarr.aspx)  

-   <span data-ttu-id="9e1a9-163">[newobj](https://msdn.microsoft.com/library/system.reflection.emit.opcodes.newobj.aspx)newobj</span><span class="sxs-lookup"><span data-stu-id="9e1a9-163">[newobj](https://msdn.microsoft.com/library/system.reflection.emit.opcodes.newobj.aspx)newobj</span></span>  


 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="9e1a9-164">例外の処理とスロー</span><span class="sxs-lookup"><span data-stu-id="9e1a9-164">Handling and Throwing Exceptions</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e1a9-165"><see cref="T:System.OutOfMemoryException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-165">Initializes a new instance of the <see cref="T:System.OutOfMemoryException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfMemoryException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutOfMemoryException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9e1a9-166"><see cref="T:System.OutOfMemoryException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-166">Initializes a new instance of the <see cref="T:System.OutOfMemoryException" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e1a9-167">このコンス トラクターの初期化、 <xref:System.Exception.Message%2A> "十分なメモリが、プログラムの実行を継続する"などに、エラーを説明するシステム提供のメッセージの新しいインスタンスのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-167">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "There was not enough memory to continue the execution of the program."</span></span> <span data-ttu-id="9e1a9-168">このメッセージには、現在のシステムのカルチャが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-168">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="9e1a9-169"><xref:System.OutOfMemoryException> のインスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-169">The following table shows the initial property values for an instance of <xref:System.OutOfMemoryException>.</span></span>  
  
|<span data-ttu-id="9e1a9-170">プロパティ</span><span class="sxs-lookup"><span data-stu-id="9e1a9-170">Property</span></span>|<span data-ttu-id="9e1a9-171">[値]</span><span class="sxs-lookup"><span data-stu-id="9e1a9-171">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="9e1a9-172">`null`。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-172">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="9e1a9-173">ローカライズされたエラー メッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-173">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfMemoryException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutOfMemoryException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new OutOfMemoryException : string -&gt; OutOfMemoryException" Usage="new System.OutOfMemoryException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="9e1a9-174">エラーを説明するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-174">The message that describes the error.</span></span></param>
        <summary><span data-ttu-id="9e1a9-175">指定したエラー メッセージを使用して、<see cref="T:System.OutOfMemoryException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-175">Initializes a new instance of the <see cref="T:System.OutOfMemoryException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e1a9-176">`message` パラメーターの内容は、ユーザーが理解できる内容にします。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-176">The content of the `message` parameter is intended to be understood by humans.</span></span> <span data-ttu-id="9e1a9-177">このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-177">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="9e1a9-178"><xref:System.OutOfMemoryException> のインスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-178">The following table shows the initial property values for an instance of <xref:System.OutOfMemoryException>.</span></span>  
  
|<span data-ttu-id="9e1a9-179">プロパティ</span><span class="sxs-lookup"><span data-stu-id="9e1a9-179">Property</span></span>|<span data-ttu-id="9e1a9-180">[値]</span><span class="sxs-lookup"><span data-stu-id="9e1a9-180">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="9e1a9-181">null 参照 (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-181">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="9e1a9-182">エラー メッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-182">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OutOfMemoryException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OutOfMemoryException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new OutOfMemoryException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; OutOfMemoryException" Usage="new System.OutOfMemoryException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="9e1a9-183">シリアル化されたオブジェクト データを保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-183">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="9e1a9-184">転送元または転送先に関するコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-184">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="9e1a9-185">シリアル化したデータを使用して、<see cref="T:System.OutOfMemoryException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-185">Initializes a new instance of the <see cref="T:System.OutOfMemoryException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e1a9-186">このコンストラクターは、逆シリアル化中に、ストリームで送信された例外オブジェクトを再構築するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-186">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="9e1a9-187">詳細については、次を参照してください。 [XML および SOAP シリアル化](~/docs/standard/serialization/xml-and-soap-serialization.md)します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-187">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="9e1a9-188">XML シリアル化および SOAP シリアル化</span><span class="sxs-lookup"><span data-stu-id="9e1a9-188">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfMemoryException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutOfMemoryException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new OutOfMemoryException : string * Exception -&gt; OutOfMemoryException" Usage="new System.OutOfMemoryException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="9e1a9-189">例外の原因を説明するエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-189">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="9e1a9-190">現在の例外の原因となった例外。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-190">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="9e1a9-191"><paramref name="innerException" /> パラメーターが null 参照 (Visual Basic の場合は <see langword="Nothing" />) でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-191">If the <paramref name="innerException" /> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="9e1a9-192">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.OutOfMemoryException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-192">Initializes a new instance of the <see cref="T:System.OutOfMemoryException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e1a9-193">前の例外の直接の結果としてスローされる例外は、<xref:System.Exception.InnerException%2A> プロパティに前の例外への参照を含んでいる場合があります。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-193">An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="9e1a9-194"><xref:System.Exception.InnerException%2A> プロパティは、コンストラクターに渡されたものと同じ値を返します。`Nothing` プロパティによって内部例外値がコンストラクターに渡されなかった場合は、null 参照 (Visual Basic の場合は <xref:System.Exception.InnerException%2A>) を返します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-194">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="9e1a9-195"><xref:System.OutOfMemoryException> のインスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-195">The following table shows the initial property values for an instance of <xref:System.OutOfMemoryException>.</span></span>  
  
|<span data-ttu-id="9e1a9-196">プロパティ</span><span class="sxs-lookup"><span data-stu-id="9e1a9-196">Property</span></span>|<span data-ttu-id="9e1a9-197">[値]</span><span class="sxs-lookup"><span data-stu-id="9e1a9-197">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="9e1a9-198">内部例外の参照。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-198">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="9e1a9-199">エラー メッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="9e1a9-199">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="9e1a9-200">例外の処理とスロー</span><span class="sxs-lookup"><span data-stu-id="9e1a9-200">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>