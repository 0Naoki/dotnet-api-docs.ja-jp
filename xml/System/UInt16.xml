<Type Name="UInt16" FullName="System.UInt16">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e6ea4e8ac24978b2352892198aa4dbc787097b26" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69404656" /></Metadata><TypeSignature Language="C#" Value="public struct UInt16 : IComparable, IComparable&lt;ushort&gt;, IConvertible, IEquatable&lt;ushort&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit unsigned int16 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int16&gt;, class System.IConvertible, class System.IEquatable`1&lt;unsigned int16&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.UInt16" />
  <TypeSignature Language="VB.NET" Value="Public Structure UInt16&#xA;Implements IComparable, IComparable(Of UShort), IConvertible, IEquatable(Of UShort), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class UInt16 : IComparable, IComparable&lt;System::UInt16&gt;, IConvertible, IEquatable&lt;System::UInt16&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type uint16 = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.UInt16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.UInt16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8da08-101">16 ビット符号なし整数を表します。</span><span class="sxs-lookup"><span data-stu-id="8da08-101">Represents a 16-bit unsigned integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-102">値<xref:System.UInt16>型は、0 ~ 65535 の範囲の値を持つ符号なし整数を表します。</span><span class="sxs-lookup"><span data-stu-id="8da08-102">The <xref:System.UInt16> value type represents unsigned integers with values ranging from 0 to 65535.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8da08-103"><xref:System.UInt16>型は CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="8da08-103">The <xref:System.UInt16> type is not CLS-compliant.</span></span> <span data-ttu-id="8da08-104">CLS 準拠の代替型は<xref:System.Int32>です。</span><span class="sxs-lookup"><span data-stu-id="8da08-104">The CLS-compliant alternative type is <xref:System.Int32>.</span></span> <span data-ttu-id="8da08-105"><xref:System.Int16>を使用すると、 <xref:System.UInt16> 0 からまで<xref:System.Int16.MaxValue?displayProperty=nameWithType>の範囲の値を置き換えることができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-105"><xref:System.Int16> can be used instead to replace a <xref:System.UInt16> value that ranges from zero to <xref:System.Int16.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8da08-106">CLS 準拠の詳細については、「言語への[非依存性と言語に依存しないコンポーネント](~/docs/standard/language-independence-and-language-independent-components.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8da08-106">For more information about CLS compliance, see [Language Independence and Language-Independent Components](~/docs/standard/language-independence-and-language-independent-components.md).</span></span>  
  
 <span data-ttu-id="8da08-107"><xref:System.UInt16>構造体には、この型のインスタンスを比較し、インスタンスの値をその文字列形式に変換し、数値の文字列形式をこの型のインスタンスに変換するメソッドが用意されています。</span><span class="sxs-lookup"><span data-stu-id="8da08-107">The <xref:System.UInt16> structure provides methods to compare instances of this type, convert the value of an instance to its string representation, and convert the string representation of a number to an instance of this type.</span></span>  
  
 <span data-ttu-id="8da08-108">書式指定コードによる値型の文字列形式の制御方法の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8da08-108">For information about how format specification codes control the string representation of value types, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="8da08-109">この型のすべてのメンバーは、スレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="8da08-109">All members of this type are thread safe.</span></span> <span data-ttu-id="8da08-110">インスタンスの状態を変更するように見えるメンバーは、実際には新しい値で初期化された新しいインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="8da08-110">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="8da08-111">他の型と同様に、この型のインスタンスを含む共有変数の読み取りと書き込みは、スレッドセーフを保証するためにロックによって保護される必要があります。</span><span class="sxs-lookup"><span data-stu-id="8da08-111">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.Int32" />
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="8da08-112">サンプル: .NET Framework 4 の書式設定ユーティリティ</span><span class="sxs-lookup"><span data-stu-id="8da08-112">Sample: .NET Framework 4 Formatting Utility</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8da08-113">指定したオブジェクトまたは <see cref="T:System.UInt16" /> とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8da08-113">Compares this instance to a specified object or <see cref="T:System.UInt16" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="uint16.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8da08-114">比較対象のオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8da08-114">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8da08-115">指定したオブジェクトとこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8da08-115">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="8da08-116">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="8da08-116">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="8da08-117">戻り値</span><span class="sxs-lookup"><span data-stu-id="8da08-117">Return Value</span></span> 
 </term><description> <span data-ttu-id="8da08-118">説明</span><span class="sxs-lookup"><span data-stu-id="8da08-118">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="8da08-119">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="8da08-119">Less than zero</span></span> 
 </term><description> <span data-ttu-id="8da08-120">このインスタンスは <paramref name="value" /> よりも小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="8da08-120">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8da08-121">0</span><span class="sxs-lookup"><span data-stu-id="8da08-121">Zero</span></span> 
 </term><description> <span data-ttu-id="8da08-122">このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="8da08-122">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8da08-123">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="8da08-123">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="8da08-124">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="8da08-124">This instance is greater than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="8da08-125">または</span><span class="sxs-lookup"><span data-stu-id="8da08-125">-or-</span></span> 
 <span data-ttu-id="8da08-126"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8da08-126"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-127">のすべての<xref:System.UInt16>インスタンスは、その値に関係なく、より`null`も大きいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="8da08-127">Any instance of <xref:System.UInt16>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="8da08-128">`value`または`null`の<xref:System.UInt16>インスタンスである必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8da08-128">`value` must be `null` or an instance of <xref:System.UInt16>; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8da08-129">メソッドの<xref:System.UInt16.CompareTo%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="8da08-129">The following example demonstrates the <xref:System.UInt16.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[UInt16 Example#3](~/samples/snippets/cpp/VS_Snippets_CLR/UInt16 Example/CPP/source.cpp#3)]
 [!code-csharp[UInt16 Example#3](~/samples/snippets/csharp/VS_Snippets_CLR/UInt16 Example/CS/source.cs#3)]
 [!code-vb[UInt16 Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt16 Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8da08-130"><paramref name="value" /> が <see cref="T:System.UInt16" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="8da08-130"><paramref name="value" /> is not a <see cref="T:System.UInt16" />.</span></span></exception>
        <altmember cref="M:System.UInt16.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.CompareTo(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As UShort) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : uint16 -&gt; int&#xA;override this.CompareTo : uint16 -&gt; int" Usage="uint16.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8da08-131">比較対象の符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="8da08-131">An unsigned integer to compare.</span></span></param>
        <summary><span data-ttu-id="8da08-132">指定した 16 ビット符号なし整数とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8da08-132">Compares this instance to a specified 16-bit unsigned integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="8da08-133">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="8da08-133">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="8da08-134">戻り値</span><span class="sxs-lookup"><span data-stu-id="8da08-134">Return Value</span></span> 
 </term><description> <span data-ttu-id="8da08-135">説明</span><span class="sxs-lookup"><span data-stu-id="8da08-135">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="8da08-136">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="8da08-136">Less than zero</span></span> 
 </term><description> <span data-ttu-id="8da08-137">このインスタンスは <paramref name="value" /> よりも小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="8da08-137">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8da08-138">0</span><span class="sxs-lookup"><span data-stu-id="8da08-138">Zero</span></span> 
 </term><description> <span data-ttu-id="8da08-139">このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="8da08-139">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8da08-140">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="8da08-140">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="8da08-141">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="8da08-141">This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-142">このメソッドは、 <xref:System.IComparable%601?displayProperty=nameWithType> `value`パラメーターをオブジェクトに変換する必要<xref:System.UInt16.CompareTo%2A?displayProperty=nameWithType>がないため、インターフェイスを実装し、メソッドよりも若干優れています。</span><span class="sxs-lookup"><span data-stu-id="8da08-142">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.UInt16.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="8da08-143">プログラミング言語によっては、パラメーターの型がインスタンスの<xref:System.UInt16.CompareTo%2A>型よりも少ない (幅が狭い) メソッドをコーディングすることができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-143">Depending on your programming language, it might be possible to code a <xref:System.UInt16.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="8da08-144">これが可能なのは、一部のプログラミング言語では、インスタンスと同数のビットを持つ型として、パラメーターを表す暗黙的な拡大変換が実行されるためです。</span><span class="sxs-lookup"><span data-stu-id="8da08-144">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="8da08-145">たとえば、インスタンスの型が<xref:System.Int32>で、パラメーターの型がである<xref:System.Byte>とします。</span><span class="sxs-lookup"><span data-stu-id="8da08-145">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="8da08-146">Microsoft C#コンパイラは、パラメーターの<xref:System.Int32>値をオブジェクトとして表現する命令を生成し、 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> <xref:System.Int32>インスタンスと<xref:System.Int32>パラメーターの値を比較するメソッドを生成します。もの.</span><span class="sxs-lookup"><span data-stu-id="8da08-146">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="8da08-147">プログラミング言語のドキュメントを参照して、コンパイラが数値型の暗黙的な拡大変換を実行するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="8da08-147">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8da08-148">次の例では、いくつかの値<xref:System.UInt16.CompareTo%2A>および参照型について、ジェネリックおよび非ジェネリックバージョンのメソッドを示します。</span><span class="sxs-lookup"><span data-stu-id="8da08-148">The following example demonstrates generic and nongeneric versions of the <xref:System.UInt16.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt16.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8da08-149">対象のインスタンスが、指定したオブジェクトまたは <see cref="T:System.UInt16" /> に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8da08-149">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.UInt16" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uint16.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8da08-150">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8da08-150">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="8da08-151">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8da08-151">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="8da08-152"><paramref name="obj" /> が <see cref="T:System.UInt16" /> のインスタンスで、このインスタンスの値に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8da08-152"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.UInt16" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8da08-153">メソッドの<xref:System.UInt16.Equals%2A>例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="8da08-153">The following example demonstrates the <xref:System.UInt16.Equals%2A> method.</span></span>  
  
 [!code-cpp[UInt16_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/UInt16_Equals/CPP/uint16_equals.cpp#1)]
 [!code-csharp[UInt16_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/UInt16_Equals/CS/uint16_equals.cs#1)]
 [!code-vb[UInt16_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt16_Equals/VB/uint16_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="8da08-154">コンパイラのオーバーロードの解決では、2つ<see cref="M:System.UInt16.Equals(System.UInt16)" />のメソッドオーバーロードの動作の明らかな違いを考慮することができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-154">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt16.Equals(System.UInt16)" /> method overloads.</span></span> <span data-ttu-id="8da08-155"><paramref name="obj" />引数との<see cref="T:System.UInt16" />間の暗黙の変換が定義されていて、引数<see cref="T:System.Object" />がとして型指定されていない<see cref="M:System.UInt16.Equals(System.UInt16)" />場合、コンパイラは暗黙的な変換を実行し、メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8da08-155">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt16" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt16.Equals(System.UInt16)" /> method.</span></span> <span data-ttu-id="8da08-156">それ以外の場合は<see cref="M:System.UInt16.Equals(System.Object)" /> 、メソッドを呼び出します<see langword="false" /> 。この<paramref name="obj" />メソッドは、引数<see cref="T:System.UInt16" />が値でない場合は常にを返します。</span><span class="sxs-lookup"><span data-stu-id="8da08-156">Otherwise, they call the <see cref="M:System.UInt16.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt16" /> value.</span></span> <span data-ttu-id="8da08-157">次の例は、2つのメソッドオーバーロード間の動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="8da08-157">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="8da08-158"><see cref="T:System.Byte" />値の場合、最初の<see langword="true" />比較では、コンパイラが自動的に<see cref="M:System.UInt16.Equals(System.UInt16)" />拡大変換を実行し、メソッドを呼び出しますが、2番目<see langword="false" />の比較はコンパイラはメソッド<see cref="M:System.UInt16.Equals(System.Object)" />を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8da08-158">In the case of a <see cref="T:System.Byte" /> value, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt16.Equals(System.UInt16)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt16.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="8da08-159">[!code-csharp[System.UInt16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.equals/cs/equalsoverl.cs#1)] [!code-vb[System.UInt16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.equals/vb/equalsoverl.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="8da08-159">[!code-csharp[System.UInt16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.equals/cs/equalsoverl.cs#1)] [!code-vb[System.UInt16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.equals/vb/equalsoverl.vb#1)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ushort obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(unsigned int16 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Equals(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::UInt16 obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : uint16 -&gt; bool" Usage="uint16.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.UInt16" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8da08-160">対象のインスタンスと比較する 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="8da08-160">A 16-bit unsigned integer to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="8da08-161">このインスタンスが指定した <see cref="T:System.UInt16" /> 値に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8da08-161">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.UInt16" /> value.</span></span></summary>
        <returns><span data-ttu-id="8da08-162"><paramref name="obj" /> の値がこのインスタンスと同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8da08-162"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-163">このメソッドは、 <xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイスを実装し、 `obj`パラメーターを<xref:System.UInt16.Equals%2A>オブジェクトに変換する必要がないため、より少しのパフォーマンスを発揮します。</span><span class="sxs-lookup"><span data-stu-id="8da08-163">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.UInt16.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="8da08-164">コンパイラのオーバーロードの解決では、2つ<see cref="M:System.UInt16.Equals(System.UInt16)" />のメソッドオーバーロードの動作の明らかな違いを考慮することができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-164">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt16.Equals(System.UInt16)" /> method overloads.</span></span> <span data-ttu-id="8da08-165"><paramref name="obj" />引数との<see cref="T:System.UInt16" />間の暗黙の変換が定義されていて、引数<see cref="T:System.Object" />がとして型指定されていない<see cref="M:System.UInt16.Equals(System.UInt16)" />場合、コンパイラは暗黙的な変換を実行し、メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8da08-165">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt16" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt16.Equals(System.UInt16)" /> method.</span></span> <span data-ttu-id="8da08-166">それ以外の場合は<see cref="M:System.UInt16.Equals(System.Object)" /> 、メソッドを呼び出します<see langword="false" /> 。この<paramref name="obj" />メソッドは、引数<see cref="T:System.UInt16" />が値でない場合は常にを返します。</span><span class="sxs-lookup"><span data-stu-id="8da08-166">Otherwise, they call the <see cref="M:System.UInt16.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt16" /> value.</span></span> <span data-ttu-id="8da08-167">次の例は、2つのメソッドオーバーロード間の動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="8da08-167">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="8da08-168"><see cref="T:System.Byte" />値の場合、最初の<see langword="true" />比較では、コンパイラが自動的に<see cref="M:System.UInt16.Equals(System.UInt16)" />拡大変換を実行し、メソッドを呼び出しますが、2番目<see langword="false" />の比較はコンパイラはメソッド<see cref="M:System.UInt16.Equals(System.Object)" />を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8da08-168">In the case of a <see cref="T:System.Byte" /> value, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt16.Equals(System.UInt16)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt16.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="8da08-169">[!code-csharp[System.UInt16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.equals/cs/equalsoverl.cs#1)] [!code-vb[System.UInt16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.equals/vb/equalsoverl.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="8da08-169">[!code-csharp[System.UInt16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.equals/cs/equalsoverl.cs#1)] [!code-vb[System.UInt16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.equals/vb/equalsoverl.vb#1)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uint16.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8da08-170">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="8da08-170">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="8da08-171">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="8da08-171">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="uint16.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8da08-172"><see cref="T:System.TypeCode" /> 値型の <see cref="T:System.UInt16" />を返します。</span><span class="sxs-lookup"><span data-stu-id="8da08-172">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.UInt16" />.</span></span></summary>
        <returns><span data-ttu-id="8da08-173">列挙型定数 <see cref="F:System.TypeCode.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="8da08-173">The enumerated constant, <see cref="F:System.TypeCode.UInt16" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const ushort MaxValue = 65535;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int16 MaxValue = unsigned int16(65535)" />
      <MemberSignature Language="DocId" Value="F:System.UInt16.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As UShort  = 65535" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt16 MaxValue = 65535;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : uint16" Usage="System.uint16.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <MemberValue>65535</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8da08-174"><see cref="T:System.UInt16" />の最大有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="8da08-174">Represents the largest possible value of <see cref="T:System.UInt16" />.</span></span> <span data-ttu-id="8da08-175">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="8da08-175">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-176">この定数の値は65535です。つまり、16進数の0xFFFF です。</span><span class="sxs-lookup"><span data-stu-id="8da08-176">The value of this constant is 65535; that is, hexadecimal 0xFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8da08-177">次の例では<xref:System.UInt16.MaxValue?displayProperty=nameWithType> 、 <xref:System.UInt16.MinValue?displayProperty=nameWithType> <xref:System.Int32>プロパティとプロパティを使用して、値を<xref:System.UInt16>値に<xref:System.UInt16>変換する前に、値が型の範囲内にあることを確認しています。</span><span class="sxs-lookup"><span data-stu-id="8da08-177">The following example uses the <xref:System.UInt16.MaxValue?displayProperty=nameWithType> and <xref:System.UInt16.MinValue?displayProperty=nameWithType> properties to ensure that an <xref:System.Int32> value is in the range of the <xref:System.UInt16> type before converting it to a <xref:System.UInt16> value.</span></span> <span data-ttu-id="8da08-178">これにより、整数値が<xref:System.OverflowException> <xref:System.UInt16>型の範囲内にない場合に、変換操作によってがスローされるのを防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-178">This prevents the conversion operation from throwing an <xref:System.OverflowException> if the integer value is not in the range of the <xref:System.UInt16> type.</span></span>  
  
 [!code-csharp[System.UInt16.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt16.MaxValue/cs/MaxValue.cs#1)]
 [!code-vb[System.UInt16.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt16.MaxValue/vb/MaxValue.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt16.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const ushort MinValue = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int16 MinValue = unsigned int16(0)" />
      <MemberSignature Language="DocId" Value="F:System.UInt16.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As UShort  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt16 MinValue = 0;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : uint16" Usage="System.uint16.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8da08-179"><see cref="T:System.UInt16" /> の最小有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="8da08-179">Represents the smallest possible value of <see cref="T:System.UInt16" />.</span></span> <span data-ttu-id="8da08-180">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="8da08-180">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-181">この定数の値は0です。</span><span class="sxs-lookup"><span data-stu-id="8da08-181">The value of this constant is 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8da08-182">次の例では<xref:System.UInt16.MinValue> 、 <xref:System.UInt16.MaxValue> <xref:System.Int32>プロパティとプロパティを使用して、値を<xref:System.UInt16>値に<xref:System.UInt16>変換する前に、値が型の範囲内にあることを確認しています。</span><span class="sxs-lookup"><span data-stu-id="8da08-182">The following example uses the <xref:System.UInt16.MinValue> and <xref:System.UInt16.MaxValue> properties to ensure that an <xref:System.Int32> value is in the range of the <xref:System.UInt16> type before converting it to a <xref:System.UInt16> value.</span></span> <span data-ttu-id="8da08-183">これにより、整数値が<xref:System.OverflowException> <xref:System.UInt16>型の範囲内にない場合に、変換操作によってがスローされるのを防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-183">This prevents the conversion operation from throwing an <xref:System.OverflowException> if the integer value is not in the range of the <xref:System.UInt16> type.</span></span>  
  
 [!code-csharp[System.UInt16.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt16.MaxValue/cs/MaxValue.cs#1)]
 [!code-vb[System.UInt16.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt16.MaxValue/vb/MaxValue.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt16.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8da08-184">数値の文字列形式を、それと等価な 16 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="8da08-184">Converts the string representation of a number to its 16-bit unsigned integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.UInt16.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ushort Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; uint16" Usage="System.uint16.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8da08-185">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="8da08-185">A string that represents the number to convert.</span></span></param>
        <summary><span data-ttu-id="8da08-186">数値の文字列形式を、それと等価な 16 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="8da08-186">Converts the string representation of a number to its 16-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="8da08-187"><paramref name="s" /> に格納されている数値と等しい 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="8da08-187">A 16-bit unsigned integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-188">パラメーター `s`は、次の形式の数値の文字列形式である必要があります。</span><span class="sxs-lookup"><span data-stu-id="8da08-188">The `s` parameter should be the string representation of a number in the following form.</span></span>  
  
 <span data-ttu-id="8da08-189">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="8da08-189">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="8da08-190">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="8da08-190">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8da08-191">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="8da08-191">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8da08-192">要素</span><span class="sxs-lookup"><span data-stu-id="8da08-192">Element</span></span>|<span data-ttu-id="8da08-193">説明</span><span class="sxs-lookup"><span data-stu-id="8da08-193">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8da08-194">*ws*</span><span class="sxs-lookup"><span data-stu-id="8da08-194">*ws*</span></span>|<span data-ttu-id="8da08-195">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="8da08-195">Optional white space.</span></span>|  
|<span data-ttu-id="8da08-196">*sign*</span><span class="sxs-lookup"><span data-stu-id="8da08-196">*sign*</span></span>|<span data-ttu-id="8da08-197">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="8da08-197">An optional sign.</span></span> <span data-ttu-id="8da08-198">有効な符号文字は、現在<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>の<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>カルチャのプロパティおよびプロパティによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-198">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="8da08-199">ただし、負の記号はゼロでのみ使用できます。それ以外の場合、メソッド<xref:System.OverflowException>はをスローします。</span><span class="sxs-lookup"><span data-stu-id="8da08-199">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="8da08-200">*数字*</span><span class="sxs-lookup"><span data-stu-id="8da08-200">*digits*</span></span>|<span data-ttu-id="8da08-201">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="8da08-201">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="8da08-202">先頭の0は無視されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-202">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="8da08-203">`s`パラメーターで指定した文字列は、 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-203">The string specified by the `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="8da08-204">これには、桁区切り記号や小数点を含めることはできません。また、小数点を含めることもできません。</span><span class="sxs-lookup"><span data-stu-id="8da08-204">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="8da08-205">パラメーターは、現在のシステムカルチャに対して初期化<xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType>されたオブジェクトの書式情報を使用して解析されます。 `s`</span><span class="sxs-lookup"><span data-stu-id="8da08-205">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> object that is initialized for the current system culture.</span></span> <span data-ttu-id="8da08-206">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8da08-206">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8da08-207">特定のカルチャの書式情報を使用して文字列を解析するには<xref:System.UInt16.Parse%28System.String%2CSystem.IFormatProvider%29> 、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="8da08-207">To parse a string by using the formatting information of a specific culture, use the <xref:System.UInt16.Parse%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8da08-208">次の例では<xref:System.UInt16.Parse%28System.String%29> 、メソッドを呼び出して、文字列配列の各要素を符号なし16ビット整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="8da08-208">The following example calls the <xref:System.UInt16.Parse%28System.String%29> method to convert each element in a string array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.UInt16.Parse#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.parse/cs/parseex5.cs#5)]
 [!code-vb[System.UInt16.Parse#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.parse/vb/parseex5.vb#5)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int32.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8da08-209"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8da08-209"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8da08-210"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="8da08-210"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8da08-211"><paramref name="s" /> は、<see cref="F:System.UInt16.MinValue" /> 未満の数値か、<see cref="F:System.UInt16.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="8da08-211"><paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.UInt16.ToString" />
        <altmember cref="Overload:System.UInt16.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="8da08-212">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="8da08-212">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ushort Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; uint16" Usage="System.uint16.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8da08-213">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="8da08-213">A string that represents the number to convert.</span></span> <span data-ttu-id="8da08-214">文字列は、<paramref name="style" /> パラメーターで指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-214">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="8da08-215"><paramref name="s" /> に許可されている書式を指定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="8da08-215">A bitwise combination of the enumeration values that specify the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="8da08-216">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="8da08-216">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="8da08-217">指定したスタイルの数値の文字列形式を、それと等価な 16 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="8da08-217">Converts the string representation of a number in a specified style to its 16-bit unsigned integer equivalent.</span></span>  
  
<span data-ttu-id="8da08-218">このメソッドは、CLS 準拠ではありません。</span><span class="sxs-lookup"><span data-stu-id="8da08-218">This method is not CLS-compliant.</span></span> <span data-ttu-id="8da08-219">CLS 準拠の代わりとして <see cref="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)" /> を使用できます。</span><span class="sxs-lookup"><span data-stu-id="8da08-219">The CLS-compliant alternative is <see cref="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)" />.</span></span></summary>
        <returns><span data-ttu-id="8da08-220"><paramref name="s" /> で指定した数値と等しい 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="8da08-220">A 16-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-221">`style` パラメーター`s`では、解析操作を成功させるためにパラメーターで使用できるスタイル要素 (空白、正または負の記号、桁区切り記号、桁区切り記号、小数点の記号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="8da08-221">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="8da08-222">`style`は、 <xref:System.Globalization.NumberStyles>列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="8da08-222">`style` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="8da08-223">パラメーター `style`を使用すると、が 16 `s`進値の文字列形式を格納している場合、で`s`表される数値システム (10 進数または16進数) が実行時にのみ認識される場合、または、次の場合に有効になります。で`s`空白または記号を許可しないようにします。</span><span class="sxs-lookup"><span data-stu-id="8da08-223">The `style` parameter makes this method overload useful when `s` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `s` is known only at run time, or when you want to disallow white space or a sign symbol in `s`.</span></span>  
  
 <span data-ttu-id="8da08-224">の`style`値に応じて、パラメーター `s`には次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-224">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="8da08-225">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="8da08-225">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="8da08-226">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="8da08-226">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8da08-227">が`style`含ま<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>れて`s`いる場合、パラメーターには次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-227">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="8da08-228">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="8da08-228">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="8da08-229">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="8da08-229">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8da08-230">要素</span><span class="sxs-lookup"><span data-stu-id="8da08-230">Element</span></span>|<span data-ttu-id="8da08-231">説明</span><span class="sxs-lookup"><span data-stu-id="8da08-231">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8da08-232">*ws*</span><span class="sxs-lookup"><span data-stu-id="8da08-232">*ws*</span></span>|<span data-ttu-id="8da08-233">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="8da08-233">Optional white space.</span></span> <span data-ttu-id="8da08-234">が`s` `s` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> `style`フラグを含む`style`場合は、の先頭に空白が表示されます。また、にフラグが含まれている場合は、の末尾に空白文字を含めることができます。 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8da08-234">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="8da08-235">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="8da08-235">A culture-specific currency symbol.</span></span> <span data-ttu-id="8da08-236">文字列内での位置は、現在の<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>カルチャ<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>のプロパティとプロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-236">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="8da08-237">に<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグが含まれている場合`style`は`s` 、現在のカルチャの通貨記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-237">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8da08-238">*sign*</span><span class="sxs-lookup"><span data-stu-id="8da08-238">*sign*</span></span>|<span data-ttu-id="8da08-239">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="8da08-239">An optional sign.</span></span> <span data-ttu-id="8da08-240">がフラグ`s`を含む`style` `style` <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>場合は、の先頭に符号が表示されます。また、にフラグ`s`が含まれている場合は、の末尾にも表示されます。 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8da08-240">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8da08-241">に`s` <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグが含まれている場合`style`は、かっこを使用して負の値を示すことができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-241">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8da08-242">ただし、負の記号はゼロでのみ使用できます。それ以外の場合、メソッド<xref:System.OverflowException>はをスローします。</span><span class="sxs-lookup"><span data-stu-id="8da08-242">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="8da08-243">*数字*</span><span class="sxs-lookup"><span data-stu-id="8da08-243">*digits*</span></span><br /><br /> <span data-ttu-id="8da08-244">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="8da08-244">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="8da08-245">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="8da08-245">*exponential_digits*</span></span>|<span data-ttu-id="8da08-246">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="8da08-246">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="8da08-247">*Fractional_digits*の場合、数字0のみが有効です。</span><span class="sxs-lookup"><span data-stu-id="8da08-247">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="8da08-248">*、*</span><span class="sxs-lookup"><span data-stu-id="8da08-248">*,*</span></span>|<span data-ttu-id="8da08-249">カルチャ固有のグループ区切り記号。</span><span class="sxs-lookup"><span data-stu-id="8da08-249">A culture-specific group separator symbol.</span></span> <span data-ttu-id="8da08-250">に<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグが含まれている場合`style`は`s` 、現在のカルチャのグループ区切り記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-250">The current culture's group separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8da08-251">*.*</span><span class="sxs-lookup"><span data-stu-id="8da08-251">*.*</span></span>|<span data-ttu-id="8da08-252">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="8da08-252">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="8da08-253">に<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグが含まれている場合`style` 、現在`s`のカルチャの小数点の記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-253">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8da08-254">解析操作が成功するためには、数字0のみが小数点の数字として表示されます。*fractional_digits*に他の数字が含まれ<xref:System.FormatException>ている場合は、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8da08-254">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="8da08-255">E</span><span class="sxs-lookup"><span data-stu-id="8da08-255">E</span></span>|<span data-ttu-id="8da08-256">"E" または "E" 文字。値が指数 (科学的) 表記で表されることを示します。</span><span class="sxs-lookup"><span data-stu-id="8da08-256">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="8da08-257">に`s` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグが含まれている場合`style` 、パラメーターは指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-257">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8da08-258">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="8da08-258">*hexdigits*</span></span>|<span data-ttu-id="8da08-259">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="8da08-259">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="8da08-260">の終端の NUL (U + 0000) 文字`s`は、 `style`引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-260">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="8da08-261">数字のみを含む文字列 ( <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイルに対応) は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-261">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="8da08-262">残り<xref:System.Globalization.NumberStyles>のメンバーのほとんどは、入力文字列に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="8da08-262">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="8da08-263">次の表は、の<xref:System.Globalization.NumberStyles>各メンバーが、に`s`存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="8da08-263">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="8da08-264">`NumberStyles` の値</span><span class="sxs-lookup"><span data-stu-id="8da08-264">`NumberStyles` value</span></span>|<span data-ttu-id="8da08-265">数字に加え`s`てで許可される要素</span><span class="sxs-lookup"><span data-stu-id="8da08-265">Elements permitted in `s` in addition to digits</span></span>|  
|--------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="8da08-266">*Digits*要素のみ。</span><span class="sxs-lookup"><span data-stu-id="8da08-266">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="8da08-267">小数点 (.) と*小数部の桁*の要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-267">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="8da08-268">*Exponential_digits*と共に指数表記を示す "e" または "e" 文字。</span><span class="sxs-lookup"><span data-stu-id="8da08-268">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="8da08-269">の`s`先頭にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-269">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="8da08-270">の`s`末尾の*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-270">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="8da08-271">の`s`先頭にある*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-271">The *sign* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="8da08-272">の`s`末尾の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-272">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="8da08-273">数値を囲むかっこ形式の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-273">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="8da08-274">桁区切り記号 (,) 要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-274">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="8da08-275">Currency ($) 要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-275">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="8da08-276">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-276">All elements.</span></span> <span data-ttu-id="8da08-277">ただし、 `s`は、16進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="8da08-277">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="8da08-278">`s`の\*\* `s`先頭または末尾にある ws 要素、の先頭に*符号*、小数点 (*.*) 記号。</span><span class="sxs-lookup"><span data-stu-id="8da08-278">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="8da08-279">パラメーター `s`では、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="8da08-279">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="8da08-280">、、桁区切り記号 (*、*)、および小数点 (.) 要素。\*\* `ws` `sign`</span><span class="sxs-lookup"><span data-stu-id="8da08-280">The `ws`, `sign`, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="8da08-281">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-281">All elements.</span></span> <span data-ttu-id="8da08-282">ただし、 `s`は16進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="8da08-282">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="8da08-283">の特定の<xref:System.Globalization.NumberStyles>スタイル`s`要素の存在を許可するが必要ではない他の値とは異なり、 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>スタイル値は、内の`s`個々の数字が常にとして解釈されることを意味します。16進文字。</span><span class="sxs-lookup"><span data-stu-id="8da08-283">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for, but do not require, the presence of particular style elements in `s`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `s` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="8da08-284">有効な16進文字は、0-9、A-F、a-f です。</span><span class="sxs-lookup"><span data-stu-id="8da08-284">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="8da08-285">"0x" のようなプレフィックスはサポートされていないため、解析操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="8da08-285">A prefix, such as "0x", is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="8da08-286">`style`パラメーターと組み合わせることができる他のフラグは、 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>とだけです。<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8da08-286">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8da08-287">(列挙<xref:System.Globalization.NumberStyles>体には、2つの<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>空白フラグを含む複合数値スタイルが含まれています)。</span><span class="sxs-lookup"><span data-stu-id="8da08-287">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8da08-288">が`s` 16 進数の文字列形式の場合、16進数と区別する装飾 ( `0x`や`&h`など) を前に付けることはできません。</span><span class="sxs-lookup"><span data-stu-id="8da08-288">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="8da08-289">これにより、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="8da08-289">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="8da08-290">パラメーターは、現在のシステムカルチャに対して初期化<xref:System.Globalization.NumberFormatInfo>されたオブジェクトの書式情報を使用して解析されます。 `s`</span><span class="sxs-lookup"><span data-stu-id="8da08-290">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="8da08-291">解析操作に使用する書式情報を持つカルチャを指定するには、 <xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>オーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8da08-291">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8da08-292">次の例では、複数の<xref:System.Globalization.NumberStyles>値を使用して、文字列配列内の各要素の解析を試みます。</span><span class="sxs-lookup"><span data-stu-id="8da08-292">The following example tries to parse each element in a string array by using a number of <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt16.Parse#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.parse/cs/parseex2.cs#6)]
 [!code-vb[System.UInt16.Parse#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.parse/vb/parseex2.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8da08-293"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8da08-293"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8da08-294"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="8da08-294"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="8da08-295">または</span><span class="sxs-lookup"><span data-stu-id="8da08-295">-or-</span></span> 
 <span data-ttu-id="8da08-296"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="8da08-296"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8da08-297"><paramref name="s" /> の形式が <paramref name="style" /> に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="8da08-297"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8da08-298"><paramref name="s" /> は、<see cref="F:System.UInt16.MinValue" /> 未満の数値か、<see cref="F:System.UInt16.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="8da08-298"><paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="8da08-299">- または -</span><span class="sxs-lookup"><span data-stu-id="8da08-299">-or-</span></span> 
 <span data-ttu-id="8da08-300"><paramref name="s" /> に 0 以外の小数部の桁が含まれています。</span><span class="sxs-lookup"><span data-stu-id="8da08-300"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.UInt16.ToString" />
        <altmember cref="Overload:System.UInt16.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="8da08-301">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="8da08-301">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ushort Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; uint16" Usage="System.uint16.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8da08-302">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="8da08-302">A string that represents the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="8da08-303"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8da08-303">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="8da08-304">指定したカルチャ固有の書式による数値の文字列形式を、それと等価な 16 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="8da08-304">Converts the string representation of a number in a specified culture-specific format to its 16-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="8da08-305"><paramref name="s" /> で指定した数値と等しい 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="8da08-305">A 16-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-306">パラメーター `s`には、次のような形式の数値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="8da08-306">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="8da08-307">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="8da08-307">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="8da08-308">角かっこ ([および]) 内の項目は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="8da08-308">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8da08-309">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="8da08-309">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8da08-310">要素</span><span class="sxs-lookup"><span data-stu-id="8da08-310">Element</span></span>|<span data-ttu-id="8da08-311">説明</span><span class="sxs-lookup"><span data-stu-id="8da08-311">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8da08-312">ws</span><span class="sxs-lookup"><span data-stu-id="8da08-312">ws</span></span>|<span data-ttu-id="8da08-313">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="8da08-313">Optional white space.</span></span>|  
|<span data-ttu-id="8da08-314">sign</span><span class="sxs-lookup"><span data-stu-id="8da08-314">sign</span></span>|<span data-ttu-id="8da08-315">省略可能な符号。値がゼロを`s`表す場合は負の符号。</span><span class="sxs-lookup"><span data-stu-id="8da08-315">An optional sign, or a negative sign if `s` represents the value zero.</span></span>|  
|<span data-ttu-id="8da08-316">数字</span><span class="sxs-lookup"><span data-stu-id="8da08-316">digits</span></span>|<span data-ttu-id="8da08-317">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="8da08-317">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="8da08-318">S パラメーターは、 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-318">The s parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="8da08-319">バイト値の10進数に加えて、先頭と末尾のスペースだけでなく先頭の記号も使用できます。</span><span class="sxs-lookup"><span data-stu-id="8da08-319">In addition to the byte value's decimal digits, only leading and trailing spaces along with a leading sign is allowed.</span></span> <span data-ttu-id="8da08-320">(負の符号が存在する場合`s` 、は値0を表す必要があり<xref:System.OverflowException>ます。それ以外の場合、メソッドはをスローします)。`s`で<xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>使用できるカルチャ固有の書式情報と共にスタイル要素を明示的に定義するには、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="8da08-320">(If the negative sign is present, `s` must represent a value of zero or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="8da08-321">パラメーター `provider` <xref:System.IFormatProvider.GetFormat%2A> <xref:System.Globalization.NumberFormatInfo>は、の書式`s`に関するカルチャ固有の情報を提供するオブジェクトを返すメソッドを持つ実装です。<xref:System.IFormatProvider></span><span class="sxs-lookup"><span data-stu-id="8da08-321">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="8da08-322">パラメーターを使用して、解析`provider`操作にカスタム書式情報を提供するには、次の3つの方法があります。</span><span class="sxs-lookup"><span data-stu-id="8da08-322">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="8da08-323">書式設定情報を提供<xref:System.Globalization.NumberFormatInfo>する実際のオブジェクトを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-323">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="8da08-324">(の実装で<xref:System.IFormatProvider.GetFormat%2A>は、単にそれ自体が返されます)。</span><span class="sxs-lookup"><span data-stu-id="8da08-324">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="8da08-325">書式設定を使用<xref:System.Globalization.CultureInfo>するカルチャを指定するオブジェクトを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-325">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="8da08-326">この<xref:System.Globalization.CultureInfo.NumberFormat%2A>プロパティは、書式設定情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="8da08-326">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="8da08-327">カスタム<xref:System.IFormatProvider>実装を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-327">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="8da08-328">このメソッドは、書式設定情報<xref:System.Globalization.NumberFormatInfo>を提供するオブジェクトをインスタンス化して返す必要があります。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="8da08-328">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8da08-329">が`provider` の`null`場合は、現在のカルチャのが使用されます。<xref:System.Globalization.NumberFormatInfo></span><span class="sxs-lookup"><span data-stu-id="8da08-329">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8da08-330">次の例では、正符号として2つの正符号 (+ +) を使用するカスタムカルチャをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="8da08-330">The following example instantiates a custom culture that uses two plus signs (++) as its positive sign.</span></span> <span data-ttu-id="8da08-331">次に、 <xref:System.UInt16.Parse%28System.String%2CSystem.IFormatProvider%29>メソッドを呼び出して、このカスタムカルチャとイン<xref:System.Globalization.CultureInfo>バリアントカルチャの両方を表すオブジェクトを使用して、文字列の配列を解析します。</span><span class="sxs-lookup"><span data-stu-id="8da08-331">It then calls the <xref:System.UInt16.Parse%28System.String%2CSystem.IFormatProvider%29> method to parse an array of strings by using <xref:System.Globalization.CultureInfo> objects that represent both this custom culture and the invariant culture.</span></span>  
  
 [!code-csharp[System.UInt16.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.parse/cs/parseex3.cs#3)]
 [!code-vb[System.UInt16.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.parse/vb/parseex3.vb#3)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int32.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8da08-332"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8da08-332"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8da08-333"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="8da08-333"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8da08-334"><paramref name="s" /> は、<see cref="F:System.UInt16.MinValue" /> 未満の数値か、<see cref="F:System.UInt16.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="8da08-334"><paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.UInt16.ToString" />
        <altmember cref="Overload:System.UInt16.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="8da08-335">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="8da08-335">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ushort Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As UShort" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; uint16" Usage="System.uint16.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ushort Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; uint16" Usage="System.uint16.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8da08-336">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="8da08-336">A string that represents the number to convert.</span></span> <span data-ttu-id="8da08-337">文字列は、<paramref name="style" /> パラメーターで指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-337">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="8da08-338"><paramref name="s" /> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="8da08-338">A bitwise combination of enumeration values that indicate the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="8da08-339">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="8da08-339">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="8da08-340"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8da08-340">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="8da08-341">指定したスタイルおよびカルチャ固有の書式による数値の文字列形式を、それと等価な 16 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="8da08-341">Converts the string representation of a number in a specified style and culture-specific format to its 16-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="8da08-342"><paramref name="s" /> で指定した数値と等しい 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="8da08-342">A 16-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-343">パラメーター `style`は、解析操作を成功させるために`s`パラメーターで使用できるスタイル要素 (空白、正または負の記号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="8da08-343">The `style` parameter defines the style elements (such as white space or the positive or negative sign symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="8da08-344"><xref:System.Globalization.NumberStyles>列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="8da08-344">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span>  
  
 <span data-ttu-id="8da08-345">の`style`値に応じて、パラメーター `s`には次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-345">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="8da08-346">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="8da08-346">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="8da08-347">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="8da08-347">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8da08-348">が`style`含ま<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>れて`s`いる場合、パラメーターには次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-348">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="8da08-349">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="8da08-349">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="8da08-350">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="8da08-350">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8da08-351">要素</span><span class="sxs-lookup"><span data-stu-id="8da08-351">Element</span></span>|<span data-ttu-id="8da08-352">説明</span><span class="sxs-lookup"><span data-stu-id="8da08-352">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8da08-353">*ws*</span><span class="sxs-lookup"><span data-stu-id="8da08-353">*ws*</span></span>|<span data-ttu-id="8da08-354">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="8da08-354">Optional white space.</span></span> <span data-ttu-id="8da08-355">が`s` `s` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> `style`フラグを含む`style`場合は、の先頭に空白が表示されます。また、にフラグが含まれている場合は、の末尾に空白文字を含めることができます。 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8da08-355">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="8da08-356">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="8da08-356">A culture-specific currency symbol.</span></span> <span data-ttu-id="8da08-357">文字列内での位置<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>は、 `provider`パラメーターの<xref:System.IFormatProvider.GetFormat%2A>メソッドによっ<xref:System.Globalization.NumberFormatInfo>て返されるオブジェクトのプロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-357">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object that is returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="8da08-358">に<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグが含まれて`s`いる`style`場合は、通貨記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-358">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8da08-359">*sign*</span><span class="sxs-lookup"><span data-stu-id="8da08-359">*sign*</span></span>|<span data-ttu-id="8da08-360">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="8da08-360">An optional sign.</span></span> <span data-ttu-id="8da08-361">(が負の符号<xref:System.OverflowException>を`s`含み、0以外の数値を表している場合、メソッドはをスローします)。`s`に<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> `s` `style`フラグが含ま`style`れている場合は、の先頭に符号が表示されます。また、にフラグが含まれている場合は、の末尾にも表示されます。 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8da08-361">(The method throws an <xref:System.OverflowException> if `s` includes a negative sign and represents a non-zero number.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8da08-362">に`s` <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグが含まれている場合`style`は、かっこを使用して負の値を示すことができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-362">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8da08-363">*数字*</span><span class="sxs-lookup"><span data-stu-id="8da08-363">*digits*</span></span>|<span data-ttu-id="8da08-364">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="8da08-364">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="8da08-365">*.*</span><span class="sxs-lookup"><span data-stu-id="8da08-365">*.*</span></span>|<span data-ttu-id="8da08-366">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="8da08-366">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="8da08-367">に<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグが含まれている場合`style` 、現在`s`のカルチャの小数点の記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-367">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8da08-368">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="8da08-368">*fractional_digits*</span></span>|<span data-ttu-id="8da08-369">に`style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグが含まれている場合は、数字0-9 の1回以上の出現、そうでない場合は1回以上の数字0が発生します。</span><span class="sxs-lookup"><span data-stu-id="8da08-369">One or more occurrences of the digit 0-9 if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, or one or more occurrences of the digit 0 if it does not.</span></span> <span data-ttu-id="8da08-370">に<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグが含まれ`s`ている`style`場合にのみ、に小数点以下の桁数が表示されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-370">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8da08-371">E</span><span class="sxs-lookup"><span data-stu-id="8da08-371">E</span></span>|<span data-ttu-id="8da08-372">"E" または "E" 文字。値が指数 (科学的) 表記で表されることを示します。</span><span class="sxs-lookup"><span data-stu-id="8da08-372">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="8da08-373">に`s` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグが含まれている場合`style` 、パラメーターは指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-373">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8da08-374">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="8da08-374">*exponential_digits*</span></span>|<span data-ttu-id="8da08-375">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="8da08-375">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="8da08-376">に`s` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグが含まれている場合`style` 、パラメーターは指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-376">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8da08-377">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="8da08-377">*hexdigits*</span></span>|<span data-ttu-id="8da08-378">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="8da08-378">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="8da08-379">の終端の NUL (U + 0000) 文字`s`は、 `style`引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-379">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="8da08-380">10進数の数字のみを含む文字列 ( <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイルに対応) は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-380">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="8da08-381">残り<xref:System.Globalization.NumberStyles>のメンバーのほとんどは、この入力文字列に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="8da08-381">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="8da08-382">次の表は、の<xref:System.Globalization.NumberStyles>各メンバーが、に`s`存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="8da08-382">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="8da08-383">非複合`NumberStyles`値</span><span class="sxs-lookup"><span data-stu-id="8da08-383">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="8da08-384">数字に加え`s`てで許可される要素</span><span class="sxs-lookup"><span data-stu-id="8da08-384">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="8da08-385">10進数のみ。</span><span class="sxs-lookup"><span data-stu-id="8da08-385">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="8da08-386">小数点 (*.*) と*fractional_digits*の要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-386">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="8da08-387">ただし、style に<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグが含まれていない場合、 *fractional_digits*は1桁以上の0桁で構成する<xref:System.OverflowException>必要があります。それ以外の場合は、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8da08-387">However, if style does not include the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, *fractional_digits* must consist of only one or more 0 digits; otherwise, an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="8da08-388">*Exponential_digits*と共に指数表記を示す "e" または "e" 文字。</span><span class="sxs-lookup"><span data-stu-id="8da08-388">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="8da08-389">の`s`先頭にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-389">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="8da08-390">の`s`末尾の*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-390">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="8da08-391">*数字*の前に符号を付けます。</span><span class="sxs-lookup"><span data-stu-id="8da08-391">A sign before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="8da08-392">*数字*の後に符号を付けます。</span><span class="sxs-lookup"><span data-stu-id="8da08-392">A sign after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="8da08-393">負の値を示す*数字*の前後のかっこ。</span><span class="sxs-lookup"><span data-stu-id="8da08-393">Parentheses before and after *digits* to indicate a negative value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="8da08-394">桁区切り記号 (*,*) 要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-394">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="8da08-395">Currency (*$*) 要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-395">The currency (*$*) element.</span></span>|  
  
 <span data-ttu-id="8da08-396">フラグが<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用されて`s`いる場合、は16進数の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="8da08-396">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="8da08-397">有効な16進数字は、0 ~ 9、a ~ f、A ~ F です。"0x" のようなプレフィックスはサポートされていないため、解析操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="8da08-397">Valid hexadecimal digits are 0 through 9, a through f, and A through F. A prefix, such as "0x", is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="8da08-398">と組み合わせる<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>ことができるフラグは、とだけです。<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8da08-398">The only other flags that can be combined with <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8da08-399">(列挙<xref:System.Globalization.NumberStyles>体には、2つの<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>空白フラグを含む複合数値スタイルが含まれています)。</span><span class="sxs-lookup"><span data-stu-id="8da08-399">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8da08-400">パラメーターが16進数の文字列表現である場合は、16進数と区別する装飾 ( `0x`や`&h`など) を前に付けることはできません。 `s`</span><span class="sxs-lookup"><span data-stu-id="8da08-400">If the `s` parameter is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="8da08-401">これにより、解析操作によって例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8da08-401">This causes the parse operation to throw an exception.</span></span>  
  
 <span data-ttu-id="8da08-402">パラメーター `provider` <xref:System.IFormatProvider.GetFormat%2A> <xref:System.Globalization.NumberFormatInfo>は、の書式`s`に関するカルチャ固有の情報を提供するオブジェクトを返すメソッドを持つ実装です。<xref:System.IFormatProvider></span><span class="sxs-lookup"><span data-stu-id="8da08-402">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="8da08-403">パラメーターを使用して、解析`provider`操作にカスタム書式情報を提供するには、次の3つの方法があります。</span><span class="sxs-lookup"><span data-stu-id="8da08-403">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="8da08-404">書式設定情報を提供<xref:System.Globalization.NumberFormatInfo>する実際のオブジェクトを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-404">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="8da08-405">(の実装で<xref:System.IFormatProvider.GetFormat%2A>は、単にそれ自体が返されます)。</span><span class="sxs-lookup"><span data-stu-id="8da08-405">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="8da08-406">書式設定を使用<xref:System.Globalization.CultureInfo>するカルチャを指定するオブジェクトを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-406">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="8da08-407">この<xref:System.Globalization.CultureInfo.NumberFormat%2A>プロパティは、書式設定情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="8da08-407">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="8da08-408">カスタム<xref:System.IFormatProvider>実装を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-408">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="8da08-409">このメソッドは、書式設定情報<xref:System.Globalization.NumberFormatInfo>を提供するオブジェクトをインスタンス化して返す必要があります。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="8da08-409">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8da08-410"><xref:System.Globalization.NumberFormatInfo>が`provider` の場合は、現在のカルチャのオブジェクトが使用されます。`null`</span><span class="sxs-lookup"><span data-stu-id="8da08-410">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8da08-411">次の例では<xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> 、メソッドを使用して、数値のさまざまな文字列形式を16ビット符号なし整数値に変換します。</span><span class="sxs-lookup"><span data-stu-id="8da08-411">The following example uses the <xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method to convert various string representations of numbers to 16-bit unsigned integer values.</span></span>  
  
 [!code-csharp[System.UInt16.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.parse/cs/parseex4.cs#4)]
 [!code-vb[System.UInt16.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.parse/vb/parseex4.vb#4)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int32.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8da08-412"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8da08-412"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8da08-413"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="8da08-413"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="8da08-414">- または -</span><span class="sxs-lookup"><span data-stu-id="8da08-414">-or-</span></span> 
 <span data-ttu-id="8da08-415"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="8da08-415"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8da08-416"><paramref name="s" /> の形式が <paramref name="style" /> に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="8da08-416"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8da08-417"><paramref name="s" /> は <see cref="F:System.UInt16.MinValue" /> 未満の数値か、<see cref="F:System.UInt16.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="8da08-417"><paramref name="s" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="8da08-418">- または -</span><span class="sxs-lookup"><span data-stu-id="8da08-418">-or-</span></span> 
 <span data-ttu-id="8da08-419"><paramref name="s" /> に 0 以外の小数部の桁が含まれています。</span><span class="sxs-lookup"><span data-stu-id="8da08-419"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.UInt16.ToString" />
        <altmember cref="Overload:System.UInt16.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="8da08-420">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="8da08-420">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8da08-421">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-421">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8da08-422">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="8da08-422">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8da08-423">現在のインスタンスの値が 0 でない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8da08-423"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-424">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8da08-424">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8da08-425">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8da08-425">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8da08-426">別の<xref:System.Convert.ToBoolean%28System.UInt16%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8da08-426">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8da08-427">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-427">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8da08-428">このメンバーの説明については、<see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8da08-428">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8da08-429"><see cref="T:System.Byte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="8da08-429">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-430">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8da08-430">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8da08-431">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8da08-431">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8da08-432">別の<xref:System.Convert.ToByte%28System.UInt16%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8da08-432">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8da08-433">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-433">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8da08-434">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="8da08-434">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8da08-435"><see cref="T:System.Char" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="8da08-435">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-436">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8da08-436">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8da08-437">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8da08-437">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8da08-438">別の<xref:System.Convert.ToChar%28System.UInt16%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8da08-438">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8da08-439">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-439">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8da08-440">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="8da08-440">This conversion is not supported.</span></span> <span data-ttu-id="8da08-441">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8da08-441">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="8da08-442">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="8da08-442">This conversion is not supported.</span></span> <span data-ttu-id="8da08-443">値は返されません。</span><span class="sxs-lookup"><span data-stu-id="8da08-443">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="8da08-444">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="8da08-444">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8da08-445">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-445">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8da08-446">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="8da08-446">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8da08-447"><see cref="T:System.Decimal" /> に変換後の、このインスタンスの現在の値。</span><span class="sxs-lookup"><span data-stu-id="8da08-447">The current value of this instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-448">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8da08-448">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8da08-449">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8da08-449">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8da08-450">別の<xref:System.Convert.ToDecimal%28System.UInt16%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8da08-450">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8da08-451">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-451">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8da08-452">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="8da08-452">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8da08-453"><see cref="T:System.Double" /> に変換後の、このインスタンスの現在の値。</span><span class="sxs-lookup"><span data-stu-id="8da08-453">The current value of this instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-454">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8da08-454">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8da08-455">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8da08-455">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8da08-456">別の<xref:System.Convert.ToDouble%28System.UInt16%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8da08-456">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8da08-457">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-457">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8da08-458">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="8da08-458">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8da08-459"><see cref="T:System.Int16" /> に変換後の、このインスタンスの現在の値。</span><span class="sxs-lookup"><span data-stu-id="8da08-459">The current value of this instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-460">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8da08-460">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8da08-461">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8da08-461">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8da08-462">別の<xref:System.Convert.ToInt16%28System.UInt16%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8da08-462">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8da08-463">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-463">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8da08-464">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="8da08-464">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8da08-465"><see cref="T:System.Int32" /> に変換後の、このインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="8da08-465">The value of this instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-466">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8da08-466">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8da08-467">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8da08-467">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8da08-468">別の<xref:System.Convert.ToInt32%28System.UInt16%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8da08-468">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8da08-469">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-469">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8da08-470">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="8da08-470">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8da08-471"><see cref="T:System.Int64" /> に変換後の、このインスタンスの現在の値。</span><span class="sxs-lookup"><span data-stu-id="8da08-471">The current value of this instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-472">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8da08-472">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8da08-473">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8da08-473">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8da08-474">別の<xref:System.Convert.ToInt64%28System.UInt16%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8da08-474">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8da08-475">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-475">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8da08-476">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="8da08-476">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8da08-477"><see cref="T:System.SByte" /> に変換後の、このインスタンスの現在の値。</span><span class="sxs-lookup"><span data-stu-id="8da08-477">The current value of this instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-478">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8da08-478">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8da08-479">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8da08-479">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8da08-480">別の<xref:System.Convert.ToSByte%28System.UInt16%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8da08-480">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8da08-481">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-481">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8da08-482">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="8da08-482">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8da08-483"><see cref="T:System.Single" /> に変換後の、このインスタンスの現在の値。</span><span class="sxs-lookup"><span data-stu-id="8da08-483">The current value pf this instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-484">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8da08-484">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8da08-485">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8da08-485">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8da08-486">別の<xref:System.Convert.ToSingle%28System.UInt16%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8da08-486">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="8da08-487">この <see cref="T:System.UInt16" /> 値の変換後の型。</span><span class="sxs-lookup"><span data-stu-id="8da08-487">The type to which to convert this <see cref="T:System.UInt16" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="8da08-488">戻り値の書式に関する情報を提供する <see cref="T:System.IFormatProvider" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="8da08-488">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="8da08-489">このメンバーの説明については、<see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8da08-489">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8da08-490"><paramref name="type" /> に変換後の、このインスタンスの現在の値。</span><span class="sxs-lookup"><span data-stu-id="8da08-490">The current value of this instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-491">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8da08-491">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8da08-492">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8da08-492">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8da08-493">別の方法として、 `static` (`Shared` Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8da08-493">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8da08-494">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-494">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8da08-495">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8da08-495">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8da08-496">変換されていない、このインスタンスの現在の値。</span><span class="sxs-lookup"><span data-stu-id="8da08-496">The current value of this instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-497">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8da08-497">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8da08-498">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8da08-498">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8da08-499">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-499">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8da08-500">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8da08-500">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8da08-501"><see cref="T:System.UInt32" /> に変換後の、このインスタンスの現在の値。</span><span class="sxs-lookup"><span data-stu-id="8da08-501">The current value of this instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-502">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8da08-502">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8da08-503">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8da08-503">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8da08-504">別の<xref:System.Convert.ToUInt32%28System.UInt16%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8da08-504">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8da08-505">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-505">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8da08-506">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="8da08-506">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8da08-507"><see cref="T:System.UInt64" /> に変換後の、このインスタンスの現在の値。</span><span class="sxs-lookup"><span data-stu-id="8da08-507">The current value of this instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-508">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8da08-508">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8da08-509">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8da08-509">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8da08-510">別の<xref:System.Convert.ToUInt64%28System.UInt16%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8da08-510">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8da08-511">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="8da08-511">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="uint16.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8da08-512">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="8da08-512">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="8da08-513">0 から 9 までの一連の数字で構成され、符号も先行ゼロも含まない、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8da08-513">The string representation of the value of this instance, which consists of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-514">メソッド<xref:System.UInt16.ToString>は、現在<xref:System.UInt16>のカルチャの<xref:System.Globalization.NumberFormatInfo>オブジェクトを使用して、既定の ("G" または "general") 形式の値を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="8da08-514">The <xref:System.UInt16.ToString> method formats a <xref:System.UInt16> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="8da08-515">別の形式またはカルチャを指定する場合は、次のように<xref:System.UInt16.ToString%2A>メソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="8da08-515">If you want to specify a different format or culture, use the other overloads of the <xref:System.UInt16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="8da08-516">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="8da08-516">To use format</span></span>|<span data-ttu-id="8da08-517">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="8da08-517">For culture</span></span>|<span data-ttu-id="8da08-518">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="8da08-518">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="8da08-519">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="8da08-519">Default ("G") format</span></span>|<span data-ttu-id="8da08-520">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="8da08-520">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="8da08-521">特定の形式</span><span class="sxs-lookup"><span data-stu-id="8da08-521">A specific format</span></span>|<span data-ttu-id="8da08-522">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="8da08-522">Default (current) culture</span></span>|<xref:System.UInt16.ToString%28System.String%29>|  
|<span data-ttu-id="8da08-523">特定の形式</span><span class="sxs-lookup"><span data-stu-id="8da08-523">A specific format</span></span>|<span data-ttu-id="8da08-524">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="8da08-524">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
   
  
## Examples  
 <span data-ttu-id="8da08-525">次の例では<xref:System.UInt16> 、既定<xref:System.UInt16.ToString>のメソッドを使用して値を表示します。</span><span class="sxs-lookup"><span data-stu-id="8da08-525">The following example displays a <xref:System.UInt16> value by using the default <xref:System.UInt16.ToString> method.</span></span> <span data-ttu-id="8da08-526">また、一部の標準書式指定子<xref:System.UInt16>を使用した結果得られる値の文字列形式も表示されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-526">It also displays the string representations of the <xref:System.UInt16> value that results from using some standard format specifiers.</span></span> <span data-ttu-id="8da08-527">これらの例は、en-us カルチャの書式指定規則を使用して表示されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-527">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.UInt16.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.UInt16.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt16.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="8da08-528">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="8da08-528">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="uint16.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8da08-529">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8da08-529">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="8da08-530">このインスタンスの数値を、指定したカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="8da08-530">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="8da08-531">0 から 9 までの一連の数字で構成され、符号も先行ゼロも含まない、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8da08-531">The string representation of the value of this instance, which consists of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-532">メソッド<xref:System.UInt16.ToString%28System.IFormatProvider%29>は、指定<xref:System.UInt16>されたカルチャの<xref:System.Globalization.NumberFormatInfo>オブジェクトを使用して、既定の ("G" または "general") 形式の値を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="8da08-532">The <xref:System.UInt16.ToString%28System.IFormatProvider%29> method formats a <xref:System.UInt16> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="8da08-533">別の形式または現在のカルチャを指定する場合は、次のように<xref:System.UInt16.ToString%2A>メソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="8da08-533">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.UInt16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="8da08-534">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="8da08-534">To use format</span></span>|<span data-ttu-id="8da08-535">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="8da08-535">For culture</span></span>|<span data-ttu-id="8da08-536">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="8da08-536">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="8da08-537">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="8da08-537">Default ("G") format</span></span>|<span data-ttu-id="8da08-538">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="8da08-538">Default (current) culture</span></span>|<xref:System.UInt16.ToString>|  
|<span data-ttu-id="8da08-539">特定の形式</span><span class="sxs-lookup"><span data-stu-id="8da08-539">A specific format</span></span>|<span data-ttu-id="8da08-540">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="8da08-540">Default (current) culture</span></span>|<xref:System.UInt16.ToString%28System.String%29>|  
|<span data-ttu-id="8da08-541">特定の形式</span><span class="sxs-lookup"><span data-stu-id="8da08-541">A specific format</span></span>|<span data-ttu-id="8da08-542">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="8da08-542">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="8da08-543">`provider` パラメーター<xref:System.IFormatProvider>は、の実装です。</span><span class="sxs-lookup"><span data-stu-id="8da08-543">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="8da08-544">このメソッドは、 <xref:System.Globalization.NumberFormatInfo>カルチャ固有の書式情報を提供するオブジェクトを返します。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="8da08-544">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="8da08-545">ただし、標準の<xref:System.Globalization.NumberFormatInfo>数値書式指定子 ("G") を使用して書式設定する場合、のプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="8da08-545">However, none of the properties of the <xref:System.Globalization.NumberFormatInfo> are used when formatting with the general numeric format specifier ("G").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8da08-546">次の例では、インバリアントカルチャに対して1つを含む複数の書式プロバイダーを使用して、16ビット符号付き整数値の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="8da08-546">The following example formats a 16-bit signed integer value by using several format providers, including one for the invariant culture.</span></span> <span data-ttu-id="8da08-547">この例の出力は、書式プロバイダーに関係なく、 <xref:System.UInt16.ToString%28System.IFormatProvider%29>メソッドによって返される書式設定された文字列が同じであることを示しています。</span><span class="sxs-lookup"><span data-stu-id="8da08-547">The output from the example illustrates that the formatted string returned by the <xref:System.UInt16.ToString%28System.IFormatProvider%29> method is the same regardless of the format provider.</span></span>  
  
 [!code-csharp[System.UInt16.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.tostring/cs/tostring2.cs#2)]
 [!code-vb[System.UInt16.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.tostring/vb/tostring2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt16.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="8da08-548">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="8da08-548">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="uint16.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="8da08-549">数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="8da08-549">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="8da08-550">このインスタンスの数値を、指定した書式を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="8da08-550">Converts the numeric value of this instance to its equivalent string representation using the specified format.</span></span></summary>
        <returns><span data-ttu-id="8da08-551"><paramref name="format" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8da08-551">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-552">メソッド<xref:System.UInt16.ToString%28System.String%29>は、現在<xref:System.UInt16>のカルチャの規則を表す<xref:System.Globalization.NumberFormatInfo>オブジェクトを使用して、指定した書式で値の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="8da08-552">The <xref:System.UInt16.ToString%28System.String%29> method formats a <xref:System.UInt16> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="8da08-553">既定の形式 ("G" または一般) を使用する場合、または別のカルチャを指定する場合は、次<xref:System.UInt16.ToString%2A>のようにメソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="8da08-553">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.UInt16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="8da08-554">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="8da08-554">To use format</span></span>|<span data-ttu-id="8da08-555">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="8da08-555">For culture</span></span>|<span data-ttu-id="8da08-556">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="8da08-556">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="8da08-557">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="8da08-557">Default ("G") format</span></span>|<span data-ttu-id="8da08-558">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="8da08-558">Default (current) culture</span></span>|<xref:System.UInt16.ToString>|  
|<span data-ttu-id="8da08-559">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="8da08-559">Default ("G") format</span></span>|<span data-ttu-id="8da08-560">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="8da08-560">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="8da08-561">特定の形式</span><span class="sxs-lookup"><span data-stu-id="8da08-561">A specific format</span></span>|<span data-ttu-id="8da08-562">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="8da08-562">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="8da08-563">パラメーター `format`には、任意の有効な[標準の数値書式指定子](~/docs/standard/base-types/standard-numeric-format-strings.md)、または[カスタム数値書式指定子](~/docs/standard/base-types/custom-numeric-format-strings.md)の任意の組み合わせを指定できます。</span><span class="sxs-lookup"><span data-stu-id="8da08-563">The `format` parameter can be any valid [standard numeric format specifier](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [custom numeric format specifiers](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="8da08-564">が`format` <xref:System.String.Empty?displayProperty=nameWithType>またはに<xref:System.UInt16>等しい場合、現在のオブジェクトの戻り値は、一般書式指定子 ("G") で書式設定されます。 `null`</span><span class="sxs-lookup"><span data-stu-id="8da08-564">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt16> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="8da08-565">が`format`その他の値の場合、メソッドは<xref:System.FormatException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="8da08-565">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="8da08-566">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8da08-566">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="8da08-567">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8da08-567">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="8da08-568">.NET Framework での書式設定のサポートの詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8da08-568">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="8da08-569">返される文字列の形式は、現在のカルチャ<xref:System.Globalization.NumberFormatInfo>のオブジェクトによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-569">The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="8da08-570">`format`パラメーターに応じて、このオブジェクトは、出力文字列内の区切り記号や小数点の記号などの記号を制御します。</span><span class="sxs-lookup"><span data-stu-id="8da08-570">Depending on the `format` parameter, this object controls symbols such as the group separator and the decimal point symbol in the output string.</span></span> <span data-ttu-id="8da08-571">現在のカルチャ以外のカルチャの書式設定情報を提供するに<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>は、オーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8da08-571">To provide formatting information for cultures other than the current culture, call the <xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8da08-572">次の例では、各標準書式指定文字列といくつかのカスタム書式指定文字列を使用して、16ビット符号なし整数値を表示します。</span><span class="sxs-lookup"><span data-stu-id="8da08-572">The following example displays a 16-bit unsigned integer value by using each standard format string and some custom format strings.</span></span>  
  
 [!code-csharp[System.UInt16.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.tostring/cs/tostring3.cs#3)]
 [!code-vb[System.UInt16.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.tostring/vb/tostring3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="8da08-573"><paramref name="format" /> パラメーターが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="8da08-573">The <paramref name="format" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.UInt16.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="8da08-574">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="8da08-574">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="8da08-575">方法: 数値に先行するゼロを埋め込む</span><span class="sxs-lookup"><span data-stu-id="8da08-575">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="uint16.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="8da08-576">数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="8da08-576">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="8da08-577">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8da08-577">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="8da08-578">このインスタンスの数値を、指定した書式およびカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="8da08-578">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="8da08-579"><paramref name="format" /> と <paramref name="provider" />で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8da08-579">The string representation of the value of this instance, as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-580">メソッド<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>は、指定<xref:System.UInt16>されたカルチャの<xref:System.Globalization.NumberFormatInfo>オブジェクトを使用して、指定された書式で値の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="8da08-580">The <xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.UInt16> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="8da08-581">既定の書式設定またはカルチャ設定を使用する場合は、次のよう<xref:System.UInt16.ToString%2A>にメソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="8da08-581">If you want to use default format or culture settings, use the other overloads of the <xref:System.UInt16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="8da08-582">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="8da08-582">To use format</span></span>|<span data-ttu-id="8da08-583">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="8da08-583">For culture</span></span>|<span data-ttu-id="8da08-584">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="8da08-584">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="8da08-585">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="8da08-585">Default ("G") format</span></span>|<span data-ttu-id="8da08-586">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="8da08-586">Default (current) culture</span></span>|<xref:System.UInt16.ToString>|  
|<span data-ttu-id="8da08-587">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="8da08-587">Default ("G") format</span></span>|<span data-ttu-id="8da08-588">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="8da08-588">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="8da08-589">特定の形式</span><span class="sxs-lookup"><span data-stu-id="8da08-589">A specific format</span></span>|<span data-ttu-id="8da08-590">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="8da08-590">Default (current) culture</span></span>|<xref:System.UInt16.ToString%28System.String%29>|  
  
 <span data-ttu-id="8da08-591">パラメーター `format`には、任意の有効な[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)、または[カスタムの数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)の任意の組み合わせを指定できます。</span><span class="sxs-lookup"><span data-stu-id="8da08-591">The `format` parameter can be any valid [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="8da08-592">が`format` <xref:System.String.Empty?displayProperty=nameWithType>またはに<xref:System.UInt16>等しい場合、現在のオブジェクトの戻り値は、一般書式指定子 ("G") で書式設定されます。 `null`</span><span class="sxs-lookup"><span data-stu-id="8da08-592">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt16> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="8da08-593">が`format`その他の値の場合、メソッドは<xref:System.FormatException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="8da08-593">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="8da08-594">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8da08-594">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="8da08-595">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8da08-595">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="8da08-596">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8da08-596">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="8da08-597">`provider` パラメーター<xref:System.IFormatProvider>は、の実装です。</span><span class="sxs-lookup"><span data-stu-id="8da08-597">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="8da08-598">このメソッドは、 <xref:System.Globalization.NumberFormatInfo>このメソッドによって返される文字列の書式に関するカルチャ固有の情報を提供するオブジェクトを返します。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="8da08-598">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="8da08-599"><xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> <xref:System.Type> <xref:System.Globalization.NumberFormatInfo>メソッドが呼び出されると、 `provider`パラメーターのメソッドを呼び出し、型を表すオブジェクトを渡します。 <xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29></span><span class="sxs-lookup"><span data-stu-id="8da08-599">When the <xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="8da08-600">次<xref:System.IFormatProvider.GetFormat%2A>に、メソッドは<xref:System.Globalization.NumberFormatInfo> 、グループの区切り記号や小数<xref:System.UInt16>点の記号など、現在の値の書式設定に関する情報を提供するオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8da08-600">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information for formatting the current <xref:System.UInt16> value, such as the group separator symbol or the decimal point symbol.</span></span> <span data-ttu-id="8da08-601">パラメーターを使用して、 `provider` <xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>メソッドに書式情報を提供するには、次の3つの方法があります。</span><span class="sxs-lookup"><span data-stu-id="8da08-601">There are three ways to use the `provider` parameter to supply formatting information to the <xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29> method:</span></span>  
  
-   <span data-ttu-id="8da08-602">書式設定情報を<xref:System.Globalization.CultureInfo>提供するカルチャを表すオブジェクトを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-602">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="8da08-603">その<xref:System.Globalization.CultureInfo.GetFormat%2A>メソッドは、 <xref:System.Globalization.NumberFormatInfo>そのカルチャに対して数値の書式設定情報を提供するオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8da08-603">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="8da08-604">数値の書式設定情報<xref:System.Globalization.NumberFormatInfo>を提供する実際のオブジェクトを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-604">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="8da08-605">(の実装で<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>は、だけが返されます)。</span><span class="sxs-lookup"><span data-stu-id="8da08-605">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="8da08-606">を実装<xref:System.IFormatProvider>するカスタムオブジェクトを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-606">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="8da08-607">このメソッドは、書式設定<xref:System.Globalization.NumberFormatInfo>情報を提供するオブジェクトをインスタンス化して返します。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="8da08-607">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8da08-608"><xref:System.Globalization.NumberFormatInfo>が`provider` の`null`場合、返される文字列の書式設定は、現在のカルチャのオブジェクトに基づいています。</span><span class="sxs-lookup"><span data-stu-id="8da08-608">If `provider` is `null`, the formatting of the returned string is based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8da08-609">次の例では、標準の数値書式指定子といくつかの特定<xref:System.Globalization.CultureInfo>のオブジェクトを使用して、16ビット符号なし整数値を表示します。</span><span class="sxs-lookup"><span data-stu-id="8da08-609">The following example displays a 16-bit unsigned integer value by using the standard numeric format specifiers and a number of specific <xref:System.Globalization.CultureInfo> objects.</span></span>  
  
 [!code-csharp[System.UInt16.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.tostring/cs/tostring4.cs#4)]
 [!code-vb[System.UInt16.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.tostring/vb/tostring4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="8da08-610"><paramref name="format" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="8da08-610"><paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.UInt16.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="8da08-611">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="8da08-611">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="8da08-612">方法: 数値に先行するゼロを埋め込む</span><span class="sxs-lookup"><span data-stu-id="8da08-612">How to: Pad a Number with Leading Zeros</span></span></related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="8da08-613">サンプル: .NET Framework 4 の書式設定ユーティリティ</span><span class="sxs-lookup"><span data-stu-id="8da08-613">Sample: .NET Framework 4 Formatting Utility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="uint16.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8da08-614">数値の文字列形式を、それと等価な 16 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="8da08-614">Converts the string representation of a number to its 16-bit unsigned integer equivalent.</span></span> <span data-ttu-id="8da08-615">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="8da08-615">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.UInt16.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out ushort result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] unsigned int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.TryParse(System.ReadOnlySpan{System.Char},System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::UInt16 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.uint16.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.UInt16" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out ushort result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] unsigned int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.TryParse(System.String,System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::UInt16 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.uint16.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.UInt16" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8da08-616">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="8da08-616">A string that represents the number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="8da08-617">このメソッドから制御が返されたとき、変換に成功した場合は、<paramref name="s" /> に格納された数値と等価な 16 ビット符号なし整数値が格納されます。変換に失敗した場合は 0 が格納されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-617">When this method returns, contains the 16-bit unsigned integer value that is equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="8da08-618"><paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> である場合、または正しい形式ではない場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="8da08-618">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in the correct format.</span></span> <span data-ttu-id="8da08-619">、または <see cref="F:System.UInt16.MinValue" /> 未満の数値か、<see cref="F:System.UInt16.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="8da08-619">, or represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span> <span data-ttu-id="8da08-620">このパラメーターは初期化されていない状態で渡されています。<paramref name="result" /> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="8da08-620">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="8da08-621">数値の文字列形式を、それと等価の 16 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="8da08-621">Tries to convert the string representation of a number to its 16-bit unsigned integer equivalent.</span></span> <span data-ttu-id="8da08-622">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="8da08-622">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="8da08-623"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8da08-623"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-624">メソッドは<xref:System.UInt16.Parse%28System.String%29>メソッドに似ていますが、変換に失敗した場合に例外をスローしない点が異なります。 <xref:System.UInt16.TryParse%28System.String%2CSystem.UInt16%40%29></span><span class="sxs-lookup"><span data-stu-id="8da08-624">The <xref:System.UInt16.TryParse%28System.String%2CSystem.UInt16%40%29> method is like the <xref:System.UInt16.Parse%28System.String%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="8da08-625">このメソッドを使用すると、が無効で、正常に<xref:System.FormatException>解析`s`できない場合に、例外処理を使用してをテストする必要がなくなります。</span><span class="sxs-lookup"><span data-stu-id="8da08-625">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="8da08-626">パラメーター `s`は、次の形式の10進数の文字列形式である必要があります。</span><span class="sxs-lookup"><span data-stu-id="8da08-626">The `s` parameter should be the string representation of a decimal number in the following form:</span></span>  
  
 <span data-ttu-id="8da08-627">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="8da08-627">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="8da08-628">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="8da08-628">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8da08-629">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="8da08-629">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8da08-630">要素</span><span class="sxs-lookup"><span data-stu-id="8da08-630">Element</span></span>|<span data-ttu-id="8da08-631">説明</span><span class="sxs-lookup"><span data-stu-id="8da08-631">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8da08-632">*ws*</span><span class="sxs-lookup"><span data-stu-id="8da08-632">*ws*</span></span>|<span data-ttu-id="8da08-633">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="8da08-633">Optional white space.</span></span>|  
|<span data-ttu-id="8da08-634">*sign*</span><span class="sxs-lookup"><span data-stu-id="8da08-634">*sign*</span></span>|<span data-ttu-id="8da08-635">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="8da08-635">An optional sign.</span></span> <span data-ttu-id="8da08-636">有効な符号文字は、現在<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>の<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>カルチャのプロパティおよびプロパティによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-636">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="8da08-637">*数字*</span><span class="sxs-lookup"><span data-stu-id="8da08-637">*digits*</span></span>|<span data-ttu-id="8da08-638">0 ~ 9 の範囲の10進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="8da08-638">A sequence of decimal digits ranging from 0 to 9.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="8da08-639">`s`パラメーターで指定された文字列に、グループ区切り記号や小数点を含めることはできません。また、小数点は使用できません。</span><span class="sxs-lookup"><span data-stu-id="8da08-639">The string specified by the `s` parameter cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="8da08-640">パラメーターは、 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイルを使用して解釈されます。 `s`</span><span class="sxs-lookup"><span data-stu-id="8da08-640">The `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="8da08-641">10進数の数字に加えて、先頭と末尾のスペースのみが許可されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-641">In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</span></span> <span data-ttu-id="8da08-642">で`s`使用できるカルチャ固有の書式情報を使用してスタイル要素を明示的に定義するに<xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29>は、メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8da08-642">To explicitly define the style elements with the culture-specific formatting information that can be present in `s`, call the <xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29> method.</span></span>  
  
 <span data-ttu-id="8da08-643">パラメーターは、現在のシステムカルチャの<xref:System.Globalization.NumberFormatInfo>オブジェクトの書式情報を使用して解析されます。 `s`</span><span class="sxs-lookup"><span data-stu-id="8da08-643">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object for the current system culture.</span></span> <span data-ttu-id="8da08-644">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8da08-644">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8da08-645">このオーバーロードは、 `s`パラメーター内のすべての桁を10進数として解釈します。</span><span class="sxs-lookup"><span data-stu-id="8da08-645">This overload interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="8da08-646">16進数の文字列形式を解析するには、代わりに<xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29>オーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8da08-646">To parse the string representation of a hexadecimal number, call the <xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29> overload instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8da08-647">次の例では<xref:System.UInt16.TryParse%28System.String%2CSystem.UInt16%40%29> 、文字列配列の各要素に対してメソッドを1回呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8da08-647">The following example calls the <xref:System.UInt16.TryParse%28System.String%2CSystem.UInt16%40%29> method once for each element in a string array.</span></span>  
  
 [!code-csharp[System.UInt32.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.UInt32.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int32.TryParse(System.String,System.Int32@)" />
        <altmember cref="M:System.UInt16.Parse(System.String)" />
        <altmember cref="M:System.UInt16.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="8da08-648">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="8da08-648">Parsing Numeric Strings in .NET</span></span></related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="8da08-649">サンプル: .NET Framework 4 の書式設定ユーティリティ</span><span class="sxs-lookup"><span data-stu-id="8da08-649">Sample: .NET Framework 4 Formatting Utility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out ushort result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt16 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.uint16.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.UInt16" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out ushort result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt16 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.uint16.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.UInt16" RefType="out" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8da08-650">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="8da08-650">A string that represents the number to convert.</span></span> <span data-ttu-id="8da08-651">文字列は、<paramref name="style" /> パラメーターで指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-651">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="8da08-652"><paramref name="s" /> で使用可能な書式を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="8da08-652">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="8da08-653">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="8da08-653">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="8da08-654"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8da08-654">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="8da08-655">変換が成功した場合、このメソッドが返されるときに、<paramref name="s" /> に格納された数値と等しい 16 ビット符号なし整数値を格納します。変換に失敗した場合は 0 を格納します。</span><span class="sxs-lookup"><span data-stu-id="8da08-655">When this method returns, contains the 16-bit unsigned integer value equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="8da08-656"><paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、<paramref name="style" /> に準拠した形式ではない、または <see cref="F:System.UInt16.MinValue" /> より小さいか <see cref="F:System.UInt16.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="8da08-656">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span> <span data-ttu-id="8da08-657">このパラメーターは初期化されていない状態で渡されています。<paramref name="result" /> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="8da08-657">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="8da08-658">指定したスタイルおよびカルチャ固有の書式による数値の文字列形式を、それと等価な 16 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="8da08-658">Tries to convert the string representation of a number in a specified style and culture-specific format to its 16-bit unsigned integer equivalent.</span></span> <span data-ttu-id="8da08-659">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="8da08-659">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="8da08-660"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8da08-660"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8da08-661">メソッドは<xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>メソッドに似ていますが、変換に失敗した場合に例外をスローしない点が異なります。 <xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29></span><span class="sxs-lookup"><span data-stu-id="8da08-661">The <xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29> method is like the <xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="8da08-662">このメソッドを使用すると、が無効で、正常に<xref:System.FormatException>解析`s`できない場合に、例外処理を使用してをテストする必要がなくなります。</span><span class="sxs-lookup"><span data-stu-id="8da08-662">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be parsed successfully.</span></span> 
  
 <span data-ttu-id="8da08-663">パラメーター `style`は、解析操作を成功させるために`s`パラメーターで使用できるスタイル要素 (空白、正または負の符号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="8da08-663">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="8da08-664"><xref:System.Globalization.NumberStyles>列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="8da08-664">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="8da08-665">の`style`値に応じて、パラメーター `s`には次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-665">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="8da08-666">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="8da08-666">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="8da08-667">角かっこ ([および]) 内の項目は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="8da08-667">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8da08-668">または、 `style`パラメーターにが<xref:System.Globalization.NumberStyles.AllowHexSpecifier>含まれ`s`ている場合、パラメーターには次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-668">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="8da08-669">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="8da08-669">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="8da08-670">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="8da08-670">The following table describes each element.</span></span>  
  
 <span data-ttu-id="8da08-671">*ws*</span><span class="sxs-lookup"><span data-stu-id="8da08-671">*ws*</span></span>  
 <span data-ttu-id="8da08-672">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="8da08-672">Optional white space.</span></span> <span data-ttu-id="8da08-673">が`s` `style` `s` フラグを<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>含む場合、の先頭に空白が表示されます。または、の末尾にフラグが含まれている場合もあります。`style` <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8da08-673">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>  
  
 *$*  
 <span data-ttu-id="8da08-674">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="8da08-674">A culture-specific currency symbol.</span></span> <span data-ttu-id="8da08-675">文字列内での位置<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>は、 `provider`パラメーターの<xref:System.IFormatProvider.GetFormat%2A>メソッドによっ<xref:System.Globalization.NumberFormatInfo>て返されるオブジェクトのプロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-675">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="8da08-676">に<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグが含まれて`s`いる`style`場合は、通貨記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-676">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="8da08-677">*sign*</span><span class="sxs-lookup"><span data-stu-id="8da08-677">*sign*</span></span>  
 <span data-ttu-id="8da08-678">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="8da08-678">An optional sign.</span></span> <span data-ttu-id="8da08-679">がフラグ`s`を含む`style` `style` <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>場合は、の先頭に符号が表示されます。また、にフラグ`s`が含まれている場合は、の末尾にも表示されます。 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8da08-679">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8da08-680">に`s` <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグが含まれている場合`style`は、かっこを使用して負の値を示すことができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-680">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8da08-681">ただし、負の符号が指定さ`s`れている場合、は解析操作が成功するまでの値0のみを表すことができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-681">However, if the negative sign is present, `s` can only represent the value zero for the parse operation to succeed.</span></span>  
  
 <span data-ttu-id="8da08-682">*数字*</span><span class="sxs-lookup"><span data-stu-id="8da08-682">*digits*</span></span>  
 <span data-ttu-id="8da08-683">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="8da08-683">A sequence of digits from 0 through 9.</span></span>  
  
 <span data-ttu-id="8da08-684">*、*</span><span class="sxs-lookup"><span data-stu-id="8da08-684">*,*</span></span>  
 <span data-ttu-id="8da08-685">カルチャ固有のグループ区切り記号。</span><span class="sxs-lookup"><span data-stu-id="8da08-685">A culture-specific group separator.</span></span> <span data-ttu-id="8da08-686">で`provider`指定されたカルチャの区切り記号は、 `s`に`style` <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグが含まれている場合は、に表示されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-686">The group separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="8da08-687">*.*</span><span class="sxs-lookup"><span data-stu-id="8da08-687">*.*</span></span>  
 <span data-ttu-id="8da08-688">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="8da08-688">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="8da08-689">で指定さ`provider`れたカルチャの小数点の記号は`style` 、に<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグが含まれている場合にで`s`使用できます。</span><span class="sxs-lookup"><span data-stu-id="8da08-689">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="8da08-690">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="8da08-690">*fractional_digits*</span></span>  
 <span data-ttu-id="8da08-691">数字0の1回以上の出現。</span><span class="sxs-lookup"><span data-stu-id="8da08-691">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="8da08-692">に<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグが含まれ`s`ている`style`場合にのみ、に小数点以下の桁数が表示されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-692">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="8da08-693">E</span><span class="sxs-lookup"><span data-stu-id="8da08-693">E</span></span>  
 <span data-ttu-id="8da08-694">"E" または "E" 文字。値が指数 (科学的) 表記で表されることを示します。</span><span class="sxs-lookup"><span data-stu-id="8da08-694">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="8da08-695">に`s` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグが含まれている場合`style` 、パラメーターは指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-695">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="8da08-696">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="8da08-696">*exponential_digits*</span></span>  
 <span data-ttu-id="8da08-697">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="8da08-697">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="8da08-698">に`s` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグが含まれている場合`style` 、パラメーターは指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="8da08-698">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="8da08-699">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="8da08-699">*hexdigits*</span></span>  
 <span data-ttu-id="8da08-700">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="8da08-700">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="8da08-701">の終端の NUL (U + 0000) 文字`s`は、 `style`引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-701">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="8da08-702">10進数の数字のみを含む文字列 ( <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>フラグに対応) は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="8da08-702">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="8da08-703">残り<xref:System.Globalization.NumberStyles>のメンバーのほとんどは、この入力文字列に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="8da08-703">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="8da08-704">次の表は、の<xref:System.Globalization.NumberStyles>各メンバーが、に`s`存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="8da08-704">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="8da08-705">非複合`NumberStyles`値</span><span class="sxs-lookup"><span data-stu-id="8da08-705">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="8da08-706">数字に加えて許容される要素</span><span class="sxs-lookup"><span data-stu-id="8da08-706">Elements permitted in value in addition to digits</span></span>|  
|------------------------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="8da08-707">10進数のみ。</span><span class="sxs-lookup"><span data-stu-id="8da08-707">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="8da08-708">小数点 (*.*) と*fractional_digits*の要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-708">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="8da08-709">ただし、 *fractional_digits*は1桁以上の0桁で構成されている必要`false`があります。それ以外の場合、メソッドはを返します。</span><span class="sxs-lookup"><span data-stu-id="8da08-709">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="8da08-710">*Exponential_digits*と共に指数表記を示す "e" または "e" 文字。</span><span class="sxs-lookup"><span data-stu-id="8da08-710">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="8da08-711">が`s`指数表記の数値を表す場合、0以外の小数部分を持つことはできません。</span><span class="sxs-lookup"><span data-stu-id="8da08-711">If `s` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="8da08-712">の`s`先頭にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-712">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="8da08-713">の`s`末尾の*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-713">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="8da08-714">*数字*の前にある*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-714">The *sign* element before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="8da08-715">*数字*の後の*符号*要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-715">The *sign* element after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="8da08-716">0の数値を囲むかっこ形式の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-716">The *sign* element in the form of parentheses enclosing a zero numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="8da08-717">桁区切り記号 (*,*) 要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-717">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="8da08-718">Currency (*$*) 要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-718">The currency (*$*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="8da08-719">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-719">All elements.</span></span> <span data-ttu-id="8da08-720">ただし、 `s`は、16進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="8da08-720">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="8da08-721">`s`の\*\* `s`先頭または末尾にある ws 要素、の先頭に*符号*、小数点 (*.*) 記号。</span><span class="sxs-lookup"><span data-stu-id="8da08-721">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="8da08-722">パラメーター `s`では、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="8da08-722">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="8da08-723">*Ws*、 *sign*、group separator (*,*)、および小数点 (*.*) の各要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-723">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="8da08-724">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="8da08-724">All elements.</span></span> <span data-ttu-id="8da08-725">ただし、 `s`は16進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="8da08-725">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="8da08-726">フラグが<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用されて`s`いる場合、は16進数の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="8da08-726">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="8da08-727">有効な16進数字は、0 ~ 9、a ~ f、A ~ F です。"0x" のようなプレフィックスはサポートされていないため、解析操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="8da08-727">Valid hexadecimal digits are 0 through 9, a through f, and A through F. A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="8da08-728">内に`style` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>存在できるフラグは、とだけです。<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8da08-728">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8da08-729">(列挙体には、空白フラグ<xref:System.Globalization.NumberStyles.HexNumber>の両方を含む複合スタイルがあります)。 <xref:System.Globalization.NumberStyles></span><span class="sxs-lookup"><span data-stu-id="8da08-729">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8da08-730">が`s` 16 進数の文字列形式の場合、16進数と区別する装飾 ( `0x`や`&h`など) を前に付けることはできません。</span><span class="sxs-lookup"><span data-stu-id="8da08-730">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="8da08-731">これにより、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="8da08-731">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="8da08-732">`provider` パラメーター<xref:System.IFormatProvider>は、の実装です。</span><span class="sxs-lookup"><span data-stu-id="8da08-732">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="8da08-733">このメソッドは、 <xref:System.Globalization.NumberFormatInfo>の`s`書式に関するカルチャ固有の情報を提供するオブジェクトを返します。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="8da08-733">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="8da08-734">パラメーター `provider`には、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="8da08-734">The `provider` parameter can be any one of the following:</span></span>  
  
-   <span data-ttu-id="8da08-735">書式設定情報を提供するカルチャを表すオブジェクト。<xref:System.Globalization.CultureInfo></span><span class="sxs-lookup"><span data-stu-id="8da08-735">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="8da08-736">その<xref:System.Globalization.CultureInfo.GetFormat%2A>メソッドは、 <xref:System.Globalization.NumberFormatInfo>そのカルチャに対して数値の書式設定情報を提供するオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8da08-736">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="8da08-737">数値の書式設定情報を提供するオブジェクト。<xref:System.Globalization.NumberFormatInfo></span><span class="sxs-lookup"><span data-stu-id="8da08-737">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="8da08-738">(の実装で<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>は、だけが返されます)。</span><span class="sxs-lookup"><span data-stu-id="8da08-738">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="8da08-739">を実装<xref:System.IFormatProvider>するカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8da08-739">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="8da08-740">このメソッドは、書式設定<xref:System.Globalization.NumberFormatInfo>情報を提供するオブジェクトをインスタンス化して返します。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="8da08-740">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8da08-741"><xref:System.Globalization.NumberFormatInfo>が`provider` の場合は、現在のカルチャのオブジェクトが使用されます。`null`</span><span class="sxs-lookup"><span data-stu-id="8da08-741">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8da08-742">次の例では<xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29> 、さまざまな文字列と<xref:System.Globalization.NumberStyles>値を指定してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8da08-742">The following example calls the <xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29> method with a number of different strings and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt16.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.tryparse/cs/tryparse2.cs#2)]
 [!code-vb[System.UInt16.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.tryparse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int32.TryParse(System.String,System.Int32@)" />
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8da08-743"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="8da08-743"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="8da08-744">- または -</span><span class="sxs-lookup"><span data-stu-id="8da08-744">-or-</span></span> 
 <span data-ttu-id="8da08-745"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="8da08-745"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.UInt16.Parse(System.String)" />
        <altmember cref="M:System.UInt16.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="8da08-746">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="8da08-746">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
