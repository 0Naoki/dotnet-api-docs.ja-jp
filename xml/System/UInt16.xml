<Type Name="UInt16" FullName="System.UInt16">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0b7b2847dc0d3712d08c51f006509d0f2b98708b" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53299427" /></Metadata><TypeSignature Language="C#" Value="public struct UInt16 : IComparable, IComparable&lt;ushort&gt;, IConvertible, IEquatable&lt;ushort&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit unsigned int16 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int16&gt;, class System.IConvertible, class System.IEquatable`1&lt;unsigned int16&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.UInt16" />
  <TypeSignature Language="VB.NET" Value="Public Structure UInt16&#xA;Implements IComparable, IComparable(Of UShort), IConvertible, IEquatable(Of UShort), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class UInt16 : IComparable, IComparable&lt;System::UInt16&gt;, IConvertible, IEquatable&lt;System::UInt16&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type uint16 = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.UInt16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.UInt16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="74390-101">16 ビット符号なし整数を表します。</span><span class="sxs-lookup"><span data-stu-id="74390-101">Represents a 16-bit unsigned integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-102"><xref:System.UInt16>値型は、0 から 65535 までの値を符号なし整数を表します。</span><span class="sxs-lookup"><span data-stu-id="74390-102">The <xref:System.UInt16> value type represents unsigned integers with values ranging from 0 to 65535.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="74390-103"><xref:System.UInt16>型が CLS 準拠ではありません。</span><span class="sxs-lookup"><span data-stu-id="74390-103">The <xref:System.UInt16> type is not CLS-compliant.</span></span> <span data-ttu-id="74390-104">CLS 準拠の代替型が<xref:System.Int32>します。</span><span class="sxs-lookup"><span data-stu-id="74390-104">The CLS-compliant alternative type is <xref:System.Int32>.</span></span> <span data-ttu-id="74390-105"><xref:System.Int16> 置き換える代わりに使用できる、<xref:System.UInt16>値の範囲は 0 から<xref:System.Int16.MaxValue?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="74390-105"><xref:System.Int16> can be used instead to replace a <xref:System.UInt16> value that ranges from zero to <xref:System.Int16.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="74390-106">CLS 準拠の詳細については、次を参照してください。 [Language Independence and Language-independent Components](~/docs/standard/language-independence-and-language-independent-components.md)します。</span><span class="sxs-lookup"><span data-stu-id="74390-106">For more information about CLS compliance, see [Language Independence and Language-Independent Components](~/docs/standard/language-independence-and-language-independent-components.md).</span></span>  
  
 <span data-ttu-id="74390-107"><xref:System.UInt16>構造体は、この型のインスタンスを比較、インスタンスの値を文字列表現に変換、および数値の文字列形式をこの型のインスタンスに変換するメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="74390-107">The <xref:System.UInt16> structure provides methods to compare instances of this type, convert the value of an instance to its string representation, and convert the string representation of a number to an instance of this type.</span></span>  
  
 <span data-ttu-id="74390-108">書式指定コードが値型の文字列形式を制御する方法については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="74390-108">For information about how format specification codes control the string representation of value types, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="74390-109">この種類のすべてのメンバーは、スレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="74390-109">All members of this type are thread safe.</span></span> <span data-ttu-id="74390-110">インスタンスの状態を変更する表示されるメンバーは、実際に新しい値で初期化された新しいインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="74390-110">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="74390-111">として、他の種類と読み取りと書き込みをこの型のインスタンスを含む共有変数を保護する必要があるスレッド セーフを確保するロックによって。</span><span class="sxs-lookup"><span data-stu-id="74390-111">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.Int32" />
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="74390-112">サンプル: .NET Framework 4 の書式設定ユーティリティ</span><span class="sxs-lookup"><span data-stu-id="74390-112">Sample: .NET Framework 4 Formatting Utility</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74390-113">指定したオブジェクトまたは <see cref="T:System.UInt16" /> とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="74390-113">Compares this instance to a specified object or <see cref="T:System.UInt16" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="uint16.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="74390-114">比較対象のオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="74390-114">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="74390-115">指定したオブジェクトとこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="74390-115">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="74390-116">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="74390-116">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="74390-117">戻り値</span><span class="sxs-lookup"><span data-stu-id="74390-117">Return Value</span></span> 
 </term><description> <span data-ttu-id="74390-118">説明</span><span class="sxs-lookup"><span data-stu-id="74390-118">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="74390-119">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="74390-119">Less than zero</span></span> 
 </term><description> <span data-ttu-id="74390-120">このインスタンスは、<paramref name="value" /> よりも小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="74390-120">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="74390-121">0</span><span class="sxs-lookup"><span data-stu-id="74390-121">Zero</span></span> 
 </term><description> <span data-ttu-id="74390-122">このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="74390-122">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="74390-123">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="74390-123">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="74390-124">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="74390-124">This instance is greater than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="74390-125">または</span><span class="sxs-lookup"><span data-stu-id="74390-125">-or-</span></span> 
 <span data-ttu-id="74390-126"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="74390-126"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-127">任意のインスタンスの<xref:System.UInt16>、その値に関係なくと見なされますより大きい`null`します。</span><span class="sxs-lookup"><span data-stu-id="74390-127">Any instance of <xref:System.UInt16>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="74390-128">`value` 必要があります`null`のインスタンスまたは<xref:System.UInt16>、それ以外の例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="74390-128">`value` must be `null` or an instance of <xref:System.UInt16>; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74390-129">次の例で、<xref:System.UInt16.CompareTo%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-129">The following example demonstrates the <xref:System.UInt16.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[UInt16 Example#3](~/samples/snippets/cpp/VS_Snippets_CLR/UInt16 Example/CPP/source.cpp#3)]
 [!code-csharp[UInt16 Example#3](~/samples/snippets/csharp/VS_Snippets_CLR/UInt16 Example/CS/source.cs#3)]
 [!code-vb[UInt16 Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt16 Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="74390-130"><paramref name="value" /> が <see cref="T:System.UInt16" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="74390-130"><paramref name="value" /> is not a <see cref="T:System.UInt16" />.</span></span></exception>
        <altmember cref="M:System.UInt16.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.CompareTo(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As UShort) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : uint16 -&gt; int&#xA;override this.CompareTo : uint16 -&gt; int" Usage="uint16.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="74390-131">比較対象の符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="74390-131">An unsigned integer to compare.</span></span></param>
        <summary><span data-ttu-id="74390-132">指定した 16 ビット符号なし整数とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="74390-132">Compares this instance to a specified 16-bit unsigned integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="74390-133">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="74390-133">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="74390-134">戻り値</span><span class="sxs-lookup"><span data-stu-id="74390-134">Return Value</span></span> 
 </term><description> <span data-ttu-id="74390-135">説明</span><span class="sxs-lookup"><span data-stu-id="74390-135">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="74390-136">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="74390-136">Less than zero</span></span> 
 </term><description> <span data-ttu-id="74390-137">このインスタンスは、<paramref name="value" /> よりも小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="74390-137">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="74390-138">0</span><span class="sxs-lookup"><span data-stu-id="74390-138">Zero</span></span> 
 </term><description> <span data-ttu-id="74390-139">このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="74390-139">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="74390-140">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="74390-140">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="74390-141">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="74390-141">This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-142">このメソッドを実装、<xref:System.IComparable%601?displayProperty=nameWithType>インターフェイスを実行よりも若干優れています、<xref:System.UInt16.CompareTo%2A?displayProperty=nameWithType>メソッドに変換することはありませんので、`value`オブジェクトに対するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="74390-142">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.UInt16.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="74390-143">によって、プログラミング言語をコードにことができる場合があります、<xref:System.UInt16.CompareTo%2A>メソッドのパラメーターの型のビット数が少ないが、範囲が狭いインスタンス型よりもします。</span><span class="sxs-lookup"><span data-stu-id="74390-143">Depending on your programming language, it might be possible to code a <xref:System.UInt16.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="74390-144">一部のプログラミング言語のインスタンスとビット数の型としてパラメーターを表す暗黙の拡大変換を実行するため、可能です。</span><span class="sxs-lookup"><span data-stu-id="74390-144">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="74390-145">たとえば、インスタンスの型が<xref:System.Int32>パラメーターの型と<xref:System.Byte>します。</span><span class="sxs-lookup"><span data-stu-id="74390-145">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="74390-146">Microsoft c# コンパイラはパラメーターの値を表す命令を生成、<xref:System.Int32>オブジェクト、し、生成、<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>の値を比較するメソッド、<xref:System.Int32>インスタンスと<xref:System.Int32>パラメーター表現。</span><span class="sxs-lookup"><span data-stu-id="74390-146">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="74390-147">コンパイラが数値型に暗黙の拡大変換を実行するかどうかを判断する、プログラミング言語のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="74390-147">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74390-148">次の例では、ジェネリックと非ジェネリック バージョンの<xref:System.UInt16.CompareTo%2A>いくつかの値と参照型のメソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-148">The following example demonstrates generic and nongeneric versions of the <xref:System.UInt16.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt16.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74390-149">対象のインスタンスが、指定したオブジェクトまたは <see cref="T:System.UInt16" /> に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="74390-149">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.UInt16" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uint16.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="74390-150">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-150">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="74390-151">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="74390-151">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="74390-152"><paramref name="obj" /> が <see cref="T:System.UInt16" /> のインスタンスで、このインスタンスの値に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74390-152"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.UInt16" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="74390-153">次の例で、<xref:System.UInt16.Equals%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-153">The following example demonstrates the <xref:System.UInt16.Equals%2A> method.</span></span>  
  
 [!code-cpp[UInt16_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/UInt16_Equals/CPP/uint16_equals.cpp#1)]
 [!code-csharp[UInt16_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/UInt16_Equals/CS/uint16_equals.cs#1)]
 [!code-vb[UInt16_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt16_Equals/VB/uint16_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="74390-154">コンパイラのオーバー ロードの解決は、2 つの動作の明らかな違いのアカウント可能性があります<see cref="M:System.UInt16.Equals(System.UInt16)" />メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="74390-154">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt16.Equals(System.UInt16)" /> method overloads.</span></span> <span data-ttu-id="74390-155">場合の間の暗黙的な変換、<paramref name="obj" />引数と<see cref="T:System.UInt16" />が定義されている引数として型指定されていないと、 <see cref="T:System.Object" />、コンパイラは、暗黙的な変換と呼び出しを実行、<see cref="M:System.UInt16.Equals(System.UInt16)" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-155">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt16" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt16.Equals(System.UInt16)" /> method.</span></span> <span data-ttu-id="74390-156">それ以外の場合、それらを呼び出す、<see cref="M:System.UInt16.Equals(System.Object)" />メソッドで、常に返します<see langword="false" />場合その<paramref name="obj" />引数がない、<see cref="T:System.UInt16" />値。</span><span class="sxs-lookup"><span data-stu-id="74390-156">Otherwise, they call the <see cref="M:System.UInt16.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt16" /> value.</span></span> <span data-ttu-id="74390-157">次の例は、2 つのメソッドのオーバー ロードの動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="74390-157">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="74390-158">場合、<see cref="T:System.Byte" />値を最初に比較を返します<see langword="true" />拡大変換と呼び出し、コンパイラが自動的に実行するため、<see cref="M:System.UInt16.Equals(System.UInt16)" />メソッド、2 つ目の比較を返しますが、<see langword="false" />のため、コンパイラの呼び出し、<see cref="M:System.UInt16.Equals(System.Object)" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-158">In the case of a <see cref="T:System.Byte" /> value, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt16.Equals(System.UInt16)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt16.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="74390-159">[! コード csharp[System.UInt16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.equals/cs/equalsoverl.cs#1)] [! コード vb[System.UInt16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.equals/vb/equalsoverl.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="74390-159">[!code-csharp[System.UInt16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.equals/cs/equalsoverl.cs#1)] [!code-vb[System.UInt16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.equals/vb/equalsoverl.vb#1)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ushort obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(unsigned int16 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Equals(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::UInt16 obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : uint16 -&gt; bool" Usage="uint16.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="74390-160">対象のインスタンスと比較する 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="74390-160">A 16-bit unsigned integer to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="74390-161">このインスタンスが指定した <see cref="T:System.UInt16" /> 値に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="74390-161">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.UInt16" /> value.</span></span></summary>
        <returns><span data-ttu-id="74390-162"><paramref name="obj" /> の値がこのインスタンスと同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74390-162"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-163">このメソッドは、<xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイス、および実行よりも若干優れています<xref:System.UInt16.Equals%2A>に変換することはありませんので、`obj`オブジェクトに対するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="74390-163">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.UInt16.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="74390-164">コンパイラのオーバー ロードの解決は、2 つの動作の明らかな違いのアカウント可能性があります<see cref="M:System.UInt16.Equals(System.UInt16)" />メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="74390-164">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt16.Equals(System.UInt16)" /> method overloads.</span></span> <span data-ttu-id="74390-165">場合の間の暗黙的な変換、<paramref name="obj" />引数と<see cref="T:System.UInt16" />が定義されている引数として型指定されていないと、 <see cref="T:System.Object" />、コンパイラは、暗黙的な変換と呼び出しを実行、<see cref="M:System.UInt16.Equals(System.UInt16)" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-165">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt16" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt16.Equals(System.UInt16)" /> method.</span></span> <span data-ttu-id="74390-166">それ以外の場合、それらを呼び出す、<see cref="M:System.UInt16.Equals(System.Object)" />メソッドで、常に返します<see langword="false" />場合その<paramref name="obj" />引数がない、<see cref="T:System.UInt16" />値。</span><span class="sxs-lookup"><span data-stu-id="74390-166">Otherwise, they call the <see cref="M:System.UInt16.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt16" /> value.</span></span> <span data-ttu-id="74390-167">次の例は、2 つのメソッドのオーバー ロードの動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="74390-167">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="74390-168">場合、<see cref="T:System.Byte" />値を最初に比較を返します<see langword="true" />拡大変換と呼び出し、コンパイラが自動的に実行するため、<see cref="M:System.UInt16.Equals(System.UInt16)" />メソッド、2 つ目の比較を返しますが、<see langword="false" />のため、コンパイラの呼び出し、<see cref="M:System.UInt16.Equals(System.Object)" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-168">In the case of a <see cref="T:System.Byte" /> value, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt16.Equals(System.UInt16)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt16.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="74390-169">[! コード csharp[System.UInt16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.equals/cs/equalsoverl.cs#1)] [! コード vb[System.UInt16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.equals/vb/equalsoverl.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="74390-169">[!code-csharp[System.UInt16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.equals/cs/equalsoverl.cs#1)] [!code-vb[System.UInt16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.equals/vb/equalsoverl.vb#1)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uint16.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74390-170">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="74390-170">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="74390-171">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="74390-171">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="uint16.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74390-172"><see cref="T:System.TypeCode" /> 値型の <see cref="T:System.UInt16" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="74390-172">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.UInt16" />.</span></span></summary>
        <returns><span data-ttu-id="74390-173">列挙型定数 <see cref="F:System.TypeCode.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="74390-173">The enumerated constant, <see cref="F:System.TypeCode.UInt16" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const ushort MaxValue = 65535;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int16 MaxValue = unsigned int16(65535)" />
      <MemberSignature Language="DocId" Value="F:System.UInt16.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As UShort  = 65535" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt16 MaxValue = 65535;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : uint16" Usage="System.uint16.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <MemberValue>65535</MemberValue>
      <Docs>
        <summary><span data-ttu-id="74390-174"><see cref="T:System.UInt16" /> の最大有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="74390-174">Represents the largest possible value of <see cref="T:System.UInt16" />.</span></span> <span data-ttu-id="74390-175">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="74390-175">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-176">この定数の値は 65535 です。つまり、16 進数 0 xffff です。</span><span class="sxs-lookup"><span data-stu-id="74390-176">The value of this constant is 65535; that is, hexadecimal 0xFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74390-177">次の例では、<xref:System.UInt16.MaxValue?displayProperty=nameWithType>と<xref:System.UInt16.MinValue?displayProperty=nameWithType>ことを確認するプロパティ、<xref:System.Int32>値の範囲では、<xref:System.UInt16>型に変換する前に、<xref:System.UInt16>値。</span><span class="sxs-lookup"><span data-stu-id="74390-177">The following example uses the <xref:System.UInt16.MaxValue?displayProperty=nameWithType> and <xref:System.UInt16.MinValue?displayProperty=nameWithType> properties to ensure that an <xref:System.Int32> value is in the range of the <xref:System.UInt16> type before converting it to a <xref:System.UInt16> value.</span></span> <span data-ttu-id="74390-178">こうことからスロー変換操作、<xref:System.OverflowException>整数値の範囲にないかどうか、<xref:System.UInt16>型。</span><span class="sxs-lookup"><span data-stu-id="74390-178">This prevents the conversion operation from throwing an <xref:System.OverflowException> if the integer value is not in the range of the <xref:System.UInt16> type.</span></span>  
  
 [!code-csharp[System.UInt16.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt16.MaxValue/cs/MaxValue.cs#1)]
 [!code-vb[System.UInt16.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt16.MaxValue/vb/MaxValue.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt16.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const ushort MinValue = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int16 MinValue = unsigned int16(0)" />
      <MemberSignature Language="DocId" Value="F:System.UInt16.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As UShort  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt16 MinValue = 0;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : uint16" Usage="System.uint16.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="74390-179"><see cref="T:System.UInt16" /> の最小有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="74390-179">Represents the smallest possible value of <see cref="T:System.UInt16" />.</span></span> <span data-ttu-id="74390-180">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="74390-180">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-181">この定数の値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="74390-181">The value of this constant is 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74390-182">次の例では、<xref:System.UInt16.MinValue>と<xref:System.UInt16.MaxValue>ことを確認するプロパティ、<xref:System.Int32>値の範囲では、<xref:System.UInt16>型に変換する前に、<xref:System.UInt16>値。</span><span class="sxs-lookup"><span data-stu-id="74390-182">The following example uses the <xref:System.UInt16.MinValue> and <xref:System.UInt16.MaxValue> properties to ensure that an <xref:System.Int32> value is in the range of the <xref:System.UInt16> type before converting it to a <xref:System.UInt16> value.</span></span> <span data-ttu-id="74390-183">こうことからスロー変換操作、<xref:System.OverflowException>整数値の範囲にないかどうか、<xref:System.UInt16>型。</span><span class="sxs-lookup"><span data-stu-id="74390-183">This prevents the conversion operation from throwing an <xref:System.OverflowException> if the integer value is not in the range of the <xref:System.UInt16> type.</span></span>  
  
 [!code-csharp[System.UInt16.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt16.MaxValue/cs/MaxValue.cs#1)]
 [!code-vb[System.UInt16.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt16.MaxValue/vb/MaxValue.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt16.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74390-184">数値の文字列形式を、それと等価な 16 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="74390-184">Converts the string representation of a number to its 16-bit unsigned integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.UInt16.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ushort Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; uint16" Usage="System.uint16.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="74390-185">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="74390-185">A string that represents the number to convert.</span></span></param>
        <summary><span data-ttu-id="74390-186">数値の文字列形式を、それと等価な 16 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="74390-186">Converts the string representation of a number to its 16-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="74390-187"><paramref name="s" /> に格納されている数値と等しい 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="74390-187">A 16-bit unsigned integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-188">`s`パラメーターは、次の形式の数値の文字列形式でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="74390-188">The `s` parameter should be the string representation of a number in the following form.</span></span>  
  
 <span data-ttu-id="74390-189">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="74390-189">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="74390-190">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="74390-190">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="74390-191">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="74390-191">The following table describes each element.</span></span>  
  
|<span data-ttu-id="74390-192">要素</span><span class="sxs-lookup"><span data-stu-id="74390-192">Element</span></span>|<span data-ttu-id="74390-193">説明</span><span class="sxs-lookup"><span data-stu-id="74390-193">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="74390-194">*ws*</span><span class="sxs-lookup"><span data-stu-id="74390-194">*ws*</span></span>|<span data-ttu-id="74390-195">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="74390-195">Optional white space.</span></span>|  
|<span data-ttu-id="74390-196">*sign*</span><span class="sxs-lookup"><span data-stu-id="74390-196">*sign*</span></span>|<span data-ttu-id="74390-197">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="74390-197">An optional sign.</span></span> <span data-ttu-id="74390-198">有効な署名の文字はによって決定されます、<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>現在のカルチャのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="74390-198">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="74390-199">ただし、負の記号は 0 以外でのみ使用できます。それ以外の場合、スロー、<xref:System.OverflowException>します。</span><span class="sxs-lookup"><span data-stu-id="74390-199">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="74390-200">*数字*</span><span class="sxs-lookup"><span data-stu-id="74390-200">*digits*</span></span>|<span data-ttu-id="74390-201">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="74390-201">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="74390-202">先頭の 0 は無視されます。</span><span class="sxs-lookup"><span data-stu-id="74390-202">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="74390-203">指定された文字列、`s`パラメーターを使用して解釈されます、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="74390-203">The string specified by the `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="74390-204">任意のグループ区切り記号または 10 進数の区切り記号を含めることはできず、小数部を持つことはできません。</span><span class="sxs-lookup"><span data-stu-id="74390-204">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="74390-205">`s`で書式設定情報を使用してパラメーターを解析、<xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType>オブジェクトを現在のシステム カルチャが初期化されます。</span><span class="sxs-lookup"><span data-stu-id="74390-205">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> object that is initialized for the current system culture.</span></span> <span data-ttu-id="74390-206">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="74390-206">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="74390-207">使用して、特定のカルチャの書式設定情報を使用して文字列を解析する、<xref:System.UInt16.Parse%28System.String%2CSystem.IFormatProvider%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-207">To parse a string by using the formatting information of a specific culture, use the <xref:System.UInt16.Parse%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74390-208">次の例では、<xref:System.UInt16.Parse%28System.String%29>文字列配列内の各要素を符号なし 16 ビット整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="74390-208">The following example calls the <xref:System.UInt16.Parse%28System.String%29> method to convert each element in a string array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.UInt16.Parse#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.parse/cs/parseex5.cs#5)]
 [!code-vb[System.UInt16.Parse#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.parse/vb/parseex5.vb#5)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int32.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="74390-209"><paramref name="s" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="74390-209"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="74390-210"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="74390-210"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="74390-211"><paramref name="s" /> が、<see cref="F:System.UInt16.MinValue" /> 未満の数値か、<see cref="F:System.UInt16.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="74390-211"><paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.UInt16.ToString" />
        <altmember cref="Overload:System.UInt16.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="74390-212">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="74390-212">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ushort Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; uint16" Usage="System.uint16.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="74390-213">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="74390-213">A string that represents the number to convert.</span></span> <span data-ttu-id="74390-214">文字列は <paramref name="style" /> パラメーターで指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="74390-214">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="74390-215"><paramref name="s" /> に許可されている書式を指定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="74390-215">A bitwise combination of the enumeration values that specify the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="74390-216">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="74390-216">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="74390-217">指定したスタイルの数値の文字列形式を、それと等価な 16 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="74390-217">Converts the string representation of a number in a specified style to its 16-bit unsigned integer equivalent.</span></span>  
  
<span data-ttu-id="74390-218">このメソッドは、CLS 準拠ではありません。</span><span class="sxs-lookup"><span data-stu-id="74390-218">This method is not CLS-compliant.</span></span> <span data-ttu-id="74390-219">CLS 準拠の代わりとして <see cref="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)" /> を使用できます。</span><span class="sxs-lookup"><span data-stu-id="74390-219">The CLS-compliant alternative is <see cref="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)" />.</span></span></summary>
        <returns><span data-ttu-id="74390-220"><paramref name="s" /> で指定した数値と等しい 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="74390-220">A 16-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-221">`style` (空白、正または負記号、桁区切り記号、小数点記号など) で使用できるスタイル要素を定義するパラメーター、`s`解析操作が成功するためのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="74390-221">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="74390-222">`style` ビット フラグの組み合わせを使用する必要があります、<xref:System.Globalization.NumberStyles>列挙体。</span><span class="sxs-lookup"><span data-stu-id="74390-222">`style` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="74390-223">`style`パラメーター オーバー ロードする便利な場合にこのメソッドは、`s`によって表される数システム (10 進または 16 進数) と 16 進数の値の文字列表現が含まれています`s`、実行時にしかわからない場合、またはします。空白を許可しないようにするかで記号`s`します。</span><span class="sxs-lookup"><span data-stu-id="74390-223">The `style` parameter makes this method overload useful when `s` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `s` is known only at run time, or when you want to disallow white space or a sign symbol in `s`.</span></span>  
  
 <span data-ttu-id="74390-224">値に応じて`style`、`s`パラメーターは、次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="74390-224">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="74390-225">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="74390-225">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="74390-226">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="74390-226">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="74390-227">場合`style`が含まれています<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>、`s`パラメーターは、次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="74390-227">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="74390-228">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="74390-228">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="74390-229">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="74390-229">The following table describes each element.</span></span>  
  
|<span data-ttu-id="74390-230">要素</span><span class="sxs-lookup"><span data-stu-id="74390-230">Element</span></span>|<span data-ttu-id="74390-231">説明</span><span class="sxs-lookup"><span data-stu-id="74390-231">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="74390-232">*ws*</span><span class="sxs-lookup"><span data-stu-id="74390-232">*ws*</span></span>|<span data-ttu-id="74390-233">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="74390-233">Optional white space.</span></span> <span data-ttu-id="74390-234">先頭に空白文字を表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>の最後に、フラグ、およびそれが表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-234">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="74390-235">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="74390-235">A culture-specific currency symbol.</span></span> <span data-ttu-id="74390-236">によって、文字列内の位置が定義されている、<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>現在のカルチャのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="74390-236">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="74390-237">現在のカルチャの通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-237">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="74390-238">*sign*</span><span class="sxs-lookup"><span data-stu-id="74390-238">*sign*</span></span>|<span data-ttu-id="74390-239">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="74390-239">An optional sign.</span></span> <span data-ttu-id="74390-240">先頭に表示できる符号`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>の最後に、フラグ、およびそれが表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-240">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="74390-241">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-241">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="74390-242">ただし、負の記号は 0 以外でのみ使用できます。それ以外の場合、スロー、<xref:System.OverflowException>します。</span><span class="sxs-lookup"><span data-stu-id="74390-242">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="74390-243">*数字*</span><span class="sxs-lookup"><span data-stu-id="74390-243">*digits*</span></span><br /><br /> <span data-ttu-id="74390-244">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="74390-244">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="74390-245">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="74390-245">*exponential_digits*</span></span>|<span data-ttu-id="74390-246">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="74390-246">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="74390-247">*Fractional_digits*数字の 0 が有効では専用です。</span><span class="sxs-lookup"><span data-stu-id="74390-247">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="74390-248">*、*</span><span class="sxs-lookup"><span data-stu-id="74390-248">*,*</span></span>|<span data-ttu-id="74390-249">カルチャ固有のグループの区切り記号です。</span><span class="sxs-lookup"><span data-stu-id="74390-249">A culture-specific group separator symbol.</span></span> <span data-ttu-id="74390-250">現在のカルチャの桁区切り記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-250">The current culture's group separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="74390-251">*.*</span><span class="sxs-lookup"><span data-stu-id="74390-251">*.*</span></span>|<span data-ttu-id="74390-252">カルチャに固有の小数点記号。</span><span class="sxs-lookup"><span data-stu-id="74390-252">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="74390-253">現在のカルチャの小数点記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-253">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="74390-254">数字の 0 は、解析操作を成功させるための小数部の桁として表示されます。場合*fractional_digits*他の任意の数字が含まれています、<xref:System.FormatException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="74390-254">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="74390-255">E</span><span class="sxs-lookup"><span data-stu-id="74390-255">E</span></span>|<span data-ttu-id="74390-256">"E"または"E"文字は、値は指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="74390-256">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="74390-257">`s`パラメーターは指数表記の数値を表すことができる場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-257">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="74390-258">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="74390-258">*hexdigits*</span></span>|<span data-ttu-id="74390-259">0 ~ f、または f の 0 から 16 進数のシーケンス</span><span class="sxs-lookup"><span data-stu-id="74390-259">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="74390-260">終端の NUL (u+0000) 文字`s`の値に関係なく、解析操作では無視されますが、`style`引数。</span><span class="sxs-lookup"><span data-stu-id="74390-260">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="74390-261">数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイル) 常に正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="74390-261">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="74390-262">残りのほとんど<xref:System.Globalization.NumberStyles>メンバーが存在する場合がありますが、入力文字列内に存在する必要はありません、要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="74390-262">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="74390-263">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在する要素に影響を与える`s`します。</span><span class="sxs-lookup"><span data-stu-id="74390-263">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="74390-264">`NumberStyles` の値</span><span class="sxs-lookup"><span data-stu-id="74390-264">`NumberStyles` value</span></span>|<span data-ttu-id="74390-265">使用できる要素`s`数字だけでなく</span><span class="sxs-lookup"><span data-stu-id="74390-265">Elements permitted in `s` in addition to digits</span></span>|  
|--------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="74390-266">*桁*要素のみです。</span><span class="sxs-lookup"><span data-stu-id="74390-266">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="74390-267">小数点 (.) と*桁の小数部*要素。</span><span class="sxs-lookup"><span data-stu-id="74390-267">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="74390-268">"E"または"E"文字と共に、指数表記を示す*exponential_digits*します。</span><span class="sxs-lookup"><span data-stu-id="74390-268">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="74390-269">*Ws*要素の開始時`s`します。</span><span class="sxs-lookup"><span data-stu-id="74390-269">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="74390-270">*Ws*の末尾にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="74390-270">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="74390-271">*サインオン*要素の開始時`s`します。</span><span class="sxs-lookup"><span data-stu-id="74390-271">The *sign* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="74390-272">*サインオン*の末尾にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="74390-272">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="74390-273">*サインオン*形式の数値を囲むかっこ内の要素。</span><span class="sxs-lookup"><span data-stu-id="74390-273">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="74390-274">グループ区切り記号 (,) の要素。</span><span class="sxs-lookup"><span data-stu-id="74390-274">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="74390-275">通貨 ($) の要素。</span><span class="sxs-lookup"><span data-stu-id="74390-275">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="74390-276">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="74390-276">All elements.</span></span> <span data-ttu-id="74390-277">ただし、 `s` 16 進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="74390-277">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="74390-278">*Ws*先頭または末尾に要素`s`、*サインオン*の開始時`s`、および小数点 (*.*) シンボル。</span><span class="sxs-lookup"><span data-stu-id="74390-278">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="74390-279">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="74390-279">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="74390-280">`ws`、 `sign`、桁区切り記号 (*、*)、および小数点 10 進数 (*.*) 要素。</span><span class="sxs-lookup"><span data-stu-id="74390-280">The `ws`, `sign`, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="74390-281">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="74390-281">All elements.</span></span> <span data-ttu-id="74390-282">ただし、 `s` 16 進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="74390-282">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="74390-283">異なり、その他の<xref:System.Globalization.NumberStyles>、許可が必要としない、特定のスタイルの要素の存在、値`s`、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>スタイルの値を意味する個別の数値文字で`s`として常に解釈されます16 進数の文字。</span><span class="sxs-lookup"><span data-stu-id="74390-283">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for, but do not require, the presence of particular style elements in `s`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `s` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="74390-284">有効な 16 進数の文字は 0 ~ 9、A ~ F、a ~ f です。</span><span class="sxs-lookup"><span data-stu-id="74390-284">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="74390-285">"0 x"などのプレフィックスはサポートされていませんし、解析操作が失敗します。</span><span class="sxs-lookup"><span data-stu-id="74390-285">A prefix, such as "0x", is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="74390-286">のみ他のフラグと組み合わせて使用できますが、`style`パラメーターは<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="74390-286">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="74390-287">(、<xref:System.Globalization.NumberStyles>列挙には、複合数値スタイルが含まれています<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、空白文字の両方のフラグが含まれます。)。</span><span class="sxs-lookup"><span data-stu-id="74390-287">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="74390-288">場合`s`文字列表現ですが、16 進数は、接頭辞前ことはできません (など`0x`または`&h`)、16 進数として区別します。</span><span class="sxs-lookup"><span data-stu-id="74390-288">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="74390-289">これにより、変換に失敗します。</span><span class="sxs-lookup"><span data-stu-id="74390-289">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="74390-290">`s`で書式設定情報を使用してパラメーターを解析、<xref:System.Globalization.NumberFormatInfo>オブジェクトを現在のシステム カルチャが初期化されます。</span><span class="sxs-lookup"><span data-stu-id="74390-290">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="74390-291">書式情報を含むが、解析操作で使用されるカルチャを指定するには、呼び出し、<xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="74390-291">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74390-292">次の例の番号を使用して、文字列の配列内の各要素を解析しようとしました。<xref:System.Globalization.NumberStyles>値。</span><span class="sxs-lookup"><span data-stu-id="74390-292">The following example tries to parse each element in a string array by using a number of <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt16.Parse#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.parse/cs/parseex2.cs#6)]
 [!code-vb[System.UInt16.Parse#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.parse/vb/parseex2.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="74390-293"><paramref name="s" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="74390-293"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="74390-294"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="74390-294"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="74390-295">または</span><span class="sxs-lookup"><span data-stu-id="74390-295">-or-</span></span> 
 <span data-ttu-id="74390-296"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="74390-296"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="74390-297"><paramref name="s" /> の形式が <paramref name="style" /> に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="74390-297"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="74390-298"><paramref name="s" /> が、<see cref="F:System.UInt16.MinValue" /> 未満の数値か、<see cref="F:System.UInt16.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="74390-298"><paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="74390-299">または</span><span class="sxs-lookup"><span data-stu-id="74390-299">-or-</span></span> 
 <span data-ttu-id="74390-300"><paramref name="s" /> に 0 以外の小数が含まれています。</span><span class="sxs-lookup"><span data-stu-id="74390-300"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.UInt16.ToString" />
        <altmember cref="Overload:System.UInt16.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="74390-301">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="74390-301">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ushort Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; uint16" Usage="System.uint16.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="74390-302">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="74390-302">A string that represents the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="74390-303"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-303">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="74390-304">指定したカルチャ固有の書式による数値の文字列形式を、それと等価な 16 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="74390-304">Converts the string representation of a number in a specified culture-specific format to its 16-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="74390-305"><paramref name="s" /> で指定した数値と等しい 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="74390-305">A 16-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-306">`s`パラメーターには、フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="74390-306">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="74390-307">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="74390-307">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="74390-308">角かっこ ([と]) は任意の項目です。</span><span class="sxs-lookup"><span data-stu-id="74390-308">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="74390-309">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="74390-309">The following table describes each element.</span></span>  
  
|<span data-ttu-id="74390-310">要素</span><span class="sxs-lookup"><span data-stu-id="74390-310">Element</span></span>|<span data-ttu-id="74390-311">説明</span><span class="sxs-lookup"><span data-stu-id="74390-311">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="74390-312">ws</span><span class="sxs-lookup"><span data-stu-id="74390-312">ws</span></span>|<span data-ttu-id="74390-313">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="74390-313">Optional white space.</span></span>|  
|<span data-ttu-id="74390-314">sign</span><span class="sxs-lookup"><span data-stu-id="74390-314">sign</span></span>|<span data-ttu-id="74390-315">オプションの符号または負の符号場合`s`値 0 を表します。</span><span class="sxs-lookup"><span data-stu-id="74390-315">An optional sign, or a negative sign if `s` represents the value zero.</span></span>|  
|<span data-ttu-id="74390-316">数字</span><span class="sxs-lookup"><span data-stu-id="74390-316">digits</span></span>|<span data-ttu-id="74390-317">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="74390-317">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="74390-318">使用して、s パラメーターを解釈、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="74390-318">The s parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="74390-319">バイト値の 10 進数字だけでなくには、先頭と末尾のスペース、先頭の符号と共にのみを許可します。</span><span class="sxs-lookup"><span data-stu-id="74390-319">In addition to the byte value's decimal digits, only leading and trailing spaces along with a leading sign is allowed.</span></span> <span data-ttu-id="74390-320">(負の符号が存在する場合は`s`の値は 0 またはメソッドでのスローを表す必要があります、 <xref:System.OverflowException>)。使用できるカルチャに固有の書式情報とスタイル要素を明示的に定義する`s`を使用して、<xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-320">(If the negative sign is present, `s` must represent a value of zero or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="74390-321">`provider`パラメーターは、<xref:System.IFormatProvider>実装が<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します。 を<xref:System.Globalization.NumberFormatInfo>の書式設定に関するカルチャ固有の情報を提供するオブジェクト`s`します。</span><span class="sxs-lookup"><span data-stu-id="74390-321">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="74390-322">3 つの方法を使用する、`provider`解析操作にカスタムの書式設定情報を指定するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="74390-322">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="74390-323">実際に渡すことができます<xref:System.Globalization.NumberFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-323">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="74390-324">(その実装の<xref:System.IFormatProvider.GetFormat%2A>単にそれ自体を返します)。</span><span class="sxs-lookup"><span data-stu-id="74390-324">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="74390-325">渡すことができます、<xref:System.Globalization.CultureInfo>書式を使用するカルチャを指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-325">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="74390-326">その<xref:System.Globalization.CultureInfo.NumberFormat%2A>プロパティは、書式設定情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="74390-326">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="74390-327">カスタムを渡すことができます<xref:System.IFormatProvider>実装します。</span><span class="sxs-lookup"><span data-stu-id="74390-327">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="74390-328">その<xref:System.IFormatProvider.GetFormat%2A>メソッドはインスタンス化する必要がありますを返す、<xref:System.Globalization.NumberFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-328">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="74390-329">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="74390-329">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74390-330">次の例では、2 つの正符号 (+ +) を正の記号として使用するカスタム カルチャがインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="74390-330">The following example instantiates a custom culture that uses two plus signs (++) as its positive sign.</span></span> <span data-ttu-id="74390-331">呼び出して、<xref:System.UInt16.Parse%28System.String%2CSystem.IFormatProvider%29>メソッドを使用して文字列の配列を解析する<xref:System.Globalization.CultureInfo>このカスタム カルチャと、インバリアント カルチャの両方を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-331">It then calls the <xref:System.UInt16.Parse%28System.String%2CSystem.IFormatProvider%29> method to parse an array of strings by using <xref:System.Globalization.CultureInfo> objects that represent both this custom culture and the invariant culture.</span></span>  
  
 [!code-csharp[System.UInt16.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.parse/cs/parseex3.cs#3)]
 [!code-vb[System.UInt16.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.parse/vb/parseex3.vb#3)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int32.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="74390-332"><paramref name="s" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="74390-332"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="74390-333"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="74390-333"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="74390-334"><paramref name="s" /> が、<see cref="F:System.UInt16.MinValue" /> 未満の数値か、<see cref="F:System.UInt16.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="74390-334"><paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.UInt16.ToString" />
        <altmember cref="Overload:System.UInt16.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="74390-335">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="74390-335">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ushort Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As UShort" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; uint16" Usage="System.uint16.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ushort Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; uint16" Usage="System.uint16.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="74390-336">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="74390-336">A string that represents the number to convert.</span></span> <span data-ttu-id="74390-337">文字列は <paramref name="style" /> パラメーターで指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="74390-337">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="74390-338"><paramref name="s" /> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="74390-338">A bitwise combination of enumeration values that indicate the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="74390-339">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="74390-339">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="74390-340"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-340">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="74390-341">指定したスタイルとカルチャ固有の書式による数値の文字列形式を、それと等しい 16 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="74390-341">Converts the string representation of a number in a specified style and culture-specific format to its 16-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="74390-342"><paramref name="s" /> で指定した数値と等しい 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="74390-342">A 16-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-343">`style` (空白、正または負の記号など) で使用できるスタイル要素を定義するパラメーター、`s`解析操作が成功するためのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="74390-343">The `style` parameter defines the style elements (such as white space or the positive or negative sign symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="74390-344">ビット フラグの組み合わせがあります、<xref:System.Globalization.NumberStyles>列挙体。</span><span class="sxs-lookup"><span data-stu-id="74390-344">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span>  
  
 <span data-ttu-id="74390-345">値に応じて`style`、`s`パラメーターは、次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="74390-345">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="74390-346">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="74390-346">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="74390-347">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="74390-347">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="74390-348">場合`style`が含まれています<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>、`s`パラメーターは、次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="74390-348">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="74390-349">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="74390-349">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="74390-350">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="74390-350">The following table describes each element.</span></span>  
  
|<span data-ttu-id="74390-351">要素</span><span class="sxs-lookup"><span data-stu-id="74390-351">Element</span></span>|<span data-ttu-id="74390-352">説明</span><span class="sxs-lookup"><span data-stu-id="74390-352">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="74390-353">*ws*</span><span class="sxs-lookup"><span data-stu-id="74390-353">*ws*</span></span>|<span data-ttu-id="74390-354">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="74390-354">Optional white space.</span></span> <span data-ttu-id="74390-355">先頭に空白文字を表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>の最後に、フラグ、およびそれが表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-355">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="74390-356">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="74390-356">A culture-specific currency symbol.</span></span> <span data-ttu-id="74390-357">によって、文字列内の位置が定義されている、<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>のプロパティ、<xref:System.Globalization.NumberFormatInfo>オブジェクトによって返される、<xref:System.IFormatProvider.GetFormat%2A>のメソッド、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="74390-357">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object that is returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="74390-358">通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-358">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="74390-359">*sign*</span><span class="sxs-lookup"><span data-stu-id="74390-359">*sign*</span></span>|<span data-ttu-id="74390-360">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="74390-360">An optional sign.</span></span> <span data-ttu-id="74390-361">(メソッドをスロー、<xref:System.OverflowException>場合`s`負の符号を含み、0 以外の数を表します)。先頭の符号が表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>フラグの末尾を表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-361">(The method throws an <xref:System.OverflowException> if `s` includes a negative sign and represents a non-zero number.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="74390-362">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-362">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="74390-363">*数字*</span><span class="sxs-lookup"><span data-stu-id="74390-363">*digits*</span></span>|<span data-ttu-id="74390-364">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="74390-364">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="74390-365">*.*</span><span class="sxs-lookup"><span data-stu-id="74390-365">*.*</span></span>|<span data-ttu-id="74390-366">カルチャに固有の小数点記号。</span><span class="sxs-lookup"><span data-stu-id="74390-366">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="74390-367">現在のカルチャの小数点記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-367">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="74390-368">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="74390-368">*fractional_digits*</span></span>|<span data-ttu-id="74390-369">数字 0 ~ 9 の 1 つ以上の出現回数場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ、またはそうでない場合は 0 桁の数字の 1 つ以上の出現回数。</span><span class="sxs-lookup"><span data-stu-id="74390-369">One or more occurrences of the digit 0-9 if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, or one or more occurrences of the digit 0 if it does not.</span></span> <span data-ttu-id="74390-370">小数部の桁数を表示できる`s`場合にのみ`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-370">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="74390-371">E</span><span class="sxs-lookup"><span data-stu-id="74390-371">E</span></span>|<span data-ttu-id="74390-372">"E"または"E"文字は、値は指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="74390-372">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="74390-373">`s`パラメーターは指数表記の数値を表すことができる場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-373">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="74390-374">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="74390-374">*exponential_digits*</span></span>|<span data-ttu-id="74390-375">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="74390-375">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="74390-376">`s`パラメーターは指数表記の数値を表すことができる場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-376">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="74390-377">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="74390-377">*hexdigits*</span></span>|<span data-ttu-id="74390-378">0 ~ f、または f の 0 から 16 進数のシーケンス</span><span class="sxs-lookup"><span data-stu-id="74390-378">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="74390-379">終端の NUL (u+0000) 文字`s`の値に関係なく、解析操作では無視されますが、`style`引数。</span><span class="sxs-lookup"><span data-stu-id="74390-379">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="74390-380">10 進数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイル) 常に正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="74390-380">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="74390-381">残りのほとんど<xref:System.Globalization.NumberStyles>メンバーが存在する場合がありますが、この入力文字列内に存在する必要はありません、要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="74390-381">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="74390-382">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在する要素に影響を与える`s`します。</span><span class="sxs-lookup"><span data-stu-id="74390-382">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="74390-383">非コンポジット`NumberStyles`値</span><span class="sxs-lookup"><span data-stu-id="74390-383">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="74390-384">使用できる要素`s`数字だけでなく</span><span class="sxs-lookup"><span data-stu-id="74390-384">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="74390-385">10 進数字のみです。</span><span class="sxs-lookup"><span data-stu-id="74390-385">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="74390-386">10 進数のポイント (*.*) と*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="74390-386">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="74390-387">ただし、スタイルが含まれていない場合、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ、 *fractional_digits*のみ 1 つまたは複数の 0 の数字で構成する必要があります。 それ以外、<xref:System.OverflowException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="74390-387">However, if style does not include the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, *fractional_digits* must consist of only one or more 0 digits; otherwise, an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="74390-388">"E"または"E"文字と共に、指数表記を示す*exponential_digits*します。</span><span class="sxs-lookup"><span data-stu-id="74390-388">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="74390-389">*Ws*の先頭にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="74390-389">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="74390-390">*Ws*の末尾にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="74390-390">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="74390-391">前に符号*桁*します。</span><span class="sxs-lookup"><span data-stu-id="74390-391">A sign before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="74390-392">後の符号*桁*します。</span><span class="sxs-lookup"><span data-stu-id="74390-392">A sign after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="74390-393">かっこの前に、と後*桁*を負の値を示します。</span><span class="sxs-lookup"><span data-stu-id="74390-393">Parentheses before and after *digits* to indicate a negative value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="74390-394">グループ区切り記号 (*、*) 要素。</span><span class="sxs-lookup"><span data-stu-id="74390-394">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="74390-395">通貨 (*$*) 要素。</span><span class="sxs-lookup"><span data-stu-id="74390-395">The currency (*$*) element.</span></span>|  
  
 <span data-ttu-id="74390-396">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、 `s` 16 進数の値を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74390-396">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="74390-397">有効な 16 進数の数字は 0 ~ 9、a から f、および A ~ F"0 x"などのプレフィックスはサポートされていませんし、解析操作が失敗します。</span><span class="sxs-lookup"><span data-stu-id="74390-397">Valid hexadecimal digits are 0 through 9, a through f, and A through F. A prefix, such as "0x", is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="74390-398">のみ他のフラグと組み合わせることができますを<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>は<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="74390-398">The only other flags that can be combined with <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="74390-399">(、<xref:System.Globalization.NumberStyles>列挙には、複合数値スタイルが含まれています<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、空白文字の両方のフラグが含まれます。)。</span><span class="sxs-lookup"><span data-stu-id="74390-399">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="74390-400">場合、`s`パラメーターは、16 進数の文字列表現、接頭辞が付けることはできません (など`0x`または`&h`)、16 進数として区別します。</span><span class="sxs-lookup"><span data-stu-id="74390-400">If the `s` parameter is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="74390-401">これにより、解析操作例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="74390-401">This causes the parse operation to throw an exception.</span></span>  
  
 <span data-ttu-id="74390-402">`provider`パラメーターは、<xref:System.IFormatProvider>実装が<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します。 を<xref:System.Globalization.NumberFormatInfo>の書式設定に関するカルチャ固有の情報を提供するオブジェクト`s`します。</span><span class="sxs-lookup"><span data-stu-id="74390-402">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="74390-403">3 つの方法を使用する、`provider`解析操作にカスタムの書式設定情報を指定するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="74390-403">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="74390-404">実際に渡すことができます<xref:System.Globalization.NumberFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-404">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="74390-405">(その実装の<xref:System.IFormatProvider.GetFormat%2A>単にそれ自体を返します)。</span><span class="sxs-lookup"><span data-stu-id="74390-405">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="74390-406">渡すことができます、<xref:System.Globalization.CultureInfo>書式を使用するカルチャを指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-406">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="74390-407">その<xref:System.Globalization.CultureInfo.NumberFormat%2A>プロパティは、書式設定情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="74390-407">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="74390-408">カスタムを渡すことができます<xref:System.IFormatProvider>実装します。</span><span class="sxs-lookup"><span data-stu-id="74390-408">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="74390-409">その<xref:System.IFormatProvider.GetFormat%2A>メソッドはインスタンス化する必要がありますを返す、<xref:System.Globalization.NumberFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-409">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="74390-410">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="74390-410">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74390-411">次の例では、<xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>数値の文字列形式をさまざまなを 16 ビット符号なし整数値に変換します。</span><span class="sxs-lookup"><span data-stu-id="74390-411">The following example uses the <xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method to convert various string representations of numbers to 16-bit unsigned integer values.</span></span>  
  
 [!code-csharp[System.UInt16.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.parse/cs/parseex4.cs#4)]
 [!code-vb[System.UInt16.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.parse/vb/parseex4.vb#4)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int32.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="74390-412"><paramref name="s" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="74390-412"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="74390-413"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="74390-413"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="74390-414">- または -</span><span class="sxs-lookup"><span data-stu-id="74390-414">-or-</span></span> 
 <span data-ttu-id="74390-415"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="74390-415"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="74390-416"><paramref name="s" /> の形式が <paramref name="style" /> に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="74390-416"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="74390-417"><paramref name="s" /> は <see cref="F:System.UInt16.MinValue" /> 未満の数値か、<see cref="F:System.UInt16.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="74390-417"><paramref name="s" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="74390-418">または</span><span class="sxs-lookup"><span data-stu-id="74390-418">-or-</span></span> 
 <span data-ttu-id="74390-419"><paramref name="s" /> に 0 以外の小数が含まれています。</span><span class="sxs-lookup"><span data-stu-id="74390-419"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.UInt16.ToString" />
        <altmember cref="Overload:System.UInt16.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="74390-420">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="74390-420">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="74390-421">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="74390-421">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="74390-422">このメンバーの説明については、<see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="74390-422">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="74390-423">現在のインスタンスの値が 0 でない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74390-423"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-424">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="74390-424">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="74390-425">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="74390-425">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="74390-426">推奨される代替手段は、<xref:System.Convert.ToBoolean%28System.UInt16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-426">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="74390-427">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="74390-427">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="74390-428">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="74390-428">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="74390-429"><see cref="T:System.Byte" /> に変換後の現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="74390-429">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-430">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="74390-430">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="74390-431">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="74390-431">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="74390-432">推奨される代替手段は、<xref:System.Convert.ToByte%28System.UInt16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-432">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="74390-433">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="74390-433">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="74390-434">このメンバーの説明については、<see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="74390-434">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="74390-435"><see cref="T:System.Char" /> に変換後の現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="74390-435">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-436">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="74390-436">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="74390-437">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="74390-437">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="74390-438">推奨される代替手段は、<xref:System.Convert.ToChar%28System.UInt16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-438">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="74390-439">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="74390-439">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="74390-440">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="74390-440">This conversion is not supported.</span></span> <span data-ttu-id="74390-441">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="74390-441">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="74390-442">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="74390-442">This conversion is not supported.</span></span> <span data-ttu-id="74390-443">値は返されません。</span><span class="sxs-lookup"><span data-stu-id="74390-443">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="74390-444">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="74390-444">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="74390-445">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="74390-445">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="74390-446">このメンバーの説明については、<see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="74390-446">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="74390-447"><see cref="T:System.Decimal" /> に変換後の、このインスタンスの現在の値。</span><span class="sxs-lookup"><span data-stu-id="74390-447">The current value of this instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-448">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="74390-448">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="74390-449">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="74390-449">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="74390-450">推奨される代替手段は、<xref:System.Convert.ToDecimal%28System.UInt16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-450">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="74390-451">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="74390-451">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="74390-452">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="74390-452">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="74390-453"><see cref="T:System.Double" /> に変換後の、このインスタンスの現在の値。</span><span class="sxs-lookup"><span data-stu-id="74390-453">The current value of this instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-454">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="74390-454">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="74390-455">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="74390-455">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="74390-456">推奨される代替手段は、<xref:System.Convert.ToDouble%28System.UInt16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-456">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="74390-457">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="74390-457">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="74390-458">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="74390-458">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="74390-459"><see cref="T:System.Int16" /> に変換後の、このインスタンスの現在の値。</span><span class="sxs-lookup"><span data-stu-id="74390-459">The current value of this instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-460">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="74390-460">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="74390-461">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="74390-461">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="74390-462">推奨される代替手段は、<xref:System.Convert.ToInt16%28System.UInt16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-462">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="74390-463">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="74390-463">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="74390-464">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="74390-464">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="74390-465"><see cref="T:System.Int32" /> に変換後の、このインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="74390-465">The value of this instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-466">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="74390-466">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="74390-467">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="74390-467">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="74390-468">推奨される代替手段は、<xref:System.Convert.ToInt32%28System.UInt16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-468">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="74390-469">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="74390-469">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="74390-470">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="74390-470">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="74390-471"><see cref="T:System.Int64" /> に変換後の、このインスタンスの現在の値。</span><span class="sxs-lookup"><span data-stu-id="74390-471">The current value of this instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-472">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="74390-472">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="74390-473">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="74390-473">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="74390-474">推奨される代替手段は、<xref:System.Convert.ToInt64%28System.UInt16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-474">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="74390-475">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="74390-475">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="74390-476">このメンバーの説明については、<see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="74390-476">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="74390-477"><see cref="T:System.SByte" /> に変換後の、このインスタンスの現在の値。</span><span class="sxs-lookup"><span data-stu-id="74390-477">The current value of this instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-478">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="74390-478">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="74390-479">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="74390-479">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="74390-480">推奨される代替手段は、<xref:System.Convert.ToSByte%28System.UInt16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-480">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="74390-481">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="74390-481">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="74390-482">このメンバーの説明については、<see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="74390-482">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="74390-483"><see cref="T:System.Single" /> に変換後の、このインスタンスの現在の値。</span><span class="sxs-lookup"><span data-stu-id="74390-483">The current value pf this instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-484">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="74390-484">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="74390-485">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="74390-485">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="74390-486">推奨される代替手段は、<xref:System.Convert.ToSingle%28System.UInt16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-486">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="74390-487">この <see cref="T:System.UInt16" /> 値の変換後の型。</span><span class="sxs-lookup"><span data-stu-id="74390-487">The type to which to convert this <see cref="T:System.UInt16" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="74390-488">戻り値の書式に関する情報を提供する <see cref="T:System.IFormatProvider" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="74390-488">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="74390-489">このメンバーの説明については、<see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="74390-489">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="74390-490"><paramref name="type" /> に変換後の、このインスタンスの現在の値。</span><span class="sxs-lookup"><span data-stu-id="74390-490">The current value of this instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-491">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="74390-491">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="74390-492">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="74390-492">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="74390-493">推奨される代替手段は、 `static` (`Shared` Visual Basic で)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-493">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="74390-494">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="74390-494">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="74390-495">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="74390-495">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="74390-496">変換されていない、このインスタンスの現在の値。</span><span class="sxs-lookup"><span data-stu-id="74390-496">The current value of this instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-497">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="74390-497">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="74390-498">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="74390-498">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="74390-499">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="74390-499">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="74390-500">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="74390-500">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="74390-501"><see cref="T:System.UInt32" /> に変換後の、このインスタンスの現在の値。</span><span class="sxs-lookup"><span data-stu-id="74390-501">The current value of this instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-502">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="74390-502">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="74390-503">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="74390-503">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="74390-504">推奨される代替手段は、<xref:System.Convert.ToUInt32%28System.UInt16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-504">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="74390-505">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="74390-505">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="74390-506">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="74390-506">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="74390-507"><see cref="T:System.UInt64" /> に変換後の、このインスタンスの現在の値。</span><span class="sxs-lookup"><span data-stu-id="74390-507">The current value of this instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-508">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="74390-508">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="74390-509">これは、<xref:System.UInt16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="74390-509">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="74390-510">推奨される代替手段は、<xref:System.Convert.ToUInt64%28System.UInt16%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-510">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74390-511">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="74390-511">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="uint16.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74390-512">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="74390-512">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="74390-513">0 から 9 までの一連の数字で構成され、符号も先行ゼロも含まない、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="74390-513">The string representation of the value of this instance, which consists of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-514"><xref:System.UInt16.ToString>メソッド形式、 <xref:System.UInt16> ("G"または [全般]) の既定の値形式を使用して、<xref:System.Globalization.NumberFormatInfo>の現在のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-514">The <xref:System.UInt16.ToString> method formats a <xref:System.UInt16> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="74390-515">別の形式またはカルチャを指定する場合の他のオーバー ロードを使用して、<xref:System.UInt16.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="74390-515">If you want to specify a different format or culture, use the other overloads of the <xref:System.UInt16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="74390-516">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="74390-516">To use format</span></span>|<span data-ttu-id="74390-517">カルチャ</span><span class="sxs-lookup"><span data-stu-id="74390-517">For culture</span></span>|<span data-ttu-id="74390-518">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="74390-518">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="74390-519">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="74390-519">Default ("G") format</span></span>|<span data-ttu-id="74390-520">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="74390-520">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="74390-521">特定の形式</span><span class="sxs-lookup"><span data-stu-id="74390-521">A specific format</span></span>|<span data-ttu-id="74390-522">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="74390-522">Default (current) culture</span></span>|<xref:System.UInt16.ToString%28System.String%29>|  
|<span data-ttu-id="74390-523">特定の形式</span><span class="sxs-lookup"><span data-stu-id="74390-523">A specific format</span></span>|<span data-ttu-id="74390-524">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="74390-524">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
   
  
## Examples  
 <span data-ttu-id="74390-525">次の例では、表示、<xref:System.UInt16>既定値を使用して値<xref:System.UInt16.ToString>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-525">The following example displays a <xref:System.UInt16> value by using the default <xref:System.UInt16.ToString> method.</span></span> <span data-ttu-id="74390-526">文字列表現が表示されます、<xref:System.UInt16>いくつかの標準書式指定子を使用してから結果値。</span><span class="sxs-lookup"><span data-stu-id="74390-526">It also displays the string representations of the <xref:System.UInt16> value that results from using some standard format specifiers.</span></span> <span data-ttu-id="74390-527">例は、EN-US カルチャの書式指定規則を使用して表示されます。</span><span class="sxs-lookup"><span data-stu-id="74390-527">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.UInt16.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.UInt16.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt16.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="74390-528">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="74390-528">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="uint16.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="74390-529">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-529">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="74390-530">このインスタンスの数値を、指定したカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="74390-530">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="74390-531">0 から 9 までの一連の数字で構成され、符号も先行ゼロも含まない、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="74390-531">The string representation of the value of this instance, which consists of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-532"><xref:System.UInt16.ToString%28System.IFormatProvider%29>メソッド形式、 <xref:System.UInt16> ("G"または [全般]) の既定の値形式を使用して、<xref:System.Globalization.NumberFormatInfo>特定のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-532">The <xref:System.UInt16.ToString%28System.IFormatProvider%29> method formats a <xref:System.UInt16> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="74390-533">別の形式または現在のカルチャを指定する場合の他のオーバー ロードを使用して、<xref:System.UInt16.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="74390-533">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.UInt16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="74390-534">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="74390-534">To use format</span></span>|<span data-ttu-id="74390-535">カルチャ</span><span class="sxs-lookup"><span data-stu-id="74390-535">For culture</span></span>|<span data-ttu-id="74390-536">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="74390-536">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="74390-537">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="74390-537">Default ("G") format</span></span>|<span data-ttu-id="74390-538">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="74390-538">Default (current) culture</span></span>|<xref:System.UInt16.ToString>|  
|<span data-ttu-id="74390-539">特定の形式</span><span class="sxs-lookup"><span data-stu-id="74390-539">A specific format</span></span>|<span data-ttu-id="74390-540">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="74390-540">Default (current) culture</span></span>|<xref:System.UInt16.ToString%28System.String%29>|  
|<span data-ttu-id="74390-541">特定の形式</span><span class="sxs-lookup"><span data-stu-id="74390-541">A specific format</span></span>|<span data-ttu-id="74390-542">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="74390-542">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="74390-543">`provider`パラメーターは、<xref:System.IFormatProvider>実装します。</span><span class="sxs-lookup"><span data-stu-id="74390-543">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="74390-544">その<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します。 を<xref:System.Globalization.NumberFormatInfo>カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-544">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="74390-545">ただしのプロパティのいずれも、<xref:System.Globalization.NumberFormatInfo>を [全般] の数値書式指定子 ("G") 書式設定時に使用されます。</span><span class="sxs-lookup"><span data-stu-id="74390-545">However, none of the properties of the <xref:System.Globalization.NumberFormatInfo> are used when formatting with the general numeric format specifier ("G").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74390-546">次の例では、インバリアント カルチャのいずれかを含め、いくつかの書式プロバイダーを使用して、16 ビット符号付き整数値を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="74390-546">The following example formats a 16-bit signed integer value by using several format providers, including one for the invariant culture.</span></span> <span data-ttu-id="74390-547">例の出力が書式設定された文字列がによって返されることを示しています、<xref:System.UInt16.ToString%28System.IFormatProvider%29>メソッドは、書式プロバイダーに関係なく同じです。</span><span class="sxs-lookup"><span data-stu-id="74390-547">The output from the example illustrates that the formatted string returned by the <xref:System.UInt16.ToString%28System.IFormatProvider%29> method is the same regardless of the format provider.</span></span>  
  
 [!code-csharp[System.UInt16.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.tostring/cs/tostring2.cs#2)]
 [!code-vb[System.UInt16.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.tostring/vb/tostring2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt16.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="74390-548">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="74390-548">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="uint16.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="74390-549">数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="74390-549">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="74390-550">このインスタンスの数値を、指定した書式を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="74390-550">Converts the numeric value of this instance to its equivalent string representation using the specified format.</span></span></summary>
        <returns><span data-ttu-id="74390-551"><paramref name="format" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="74390-551">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-552"><xref:System.UInt16.ToString%28System.String%29>メソッド形式、<xref:System.UInt16>を使用して指定された形式で値を<xref:System.Globalization.NumberFormatInfo>現在のカルチャの規則を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-552">The <xref:System.UInt16.ToString%28System.String%29> method formats a <xref:System.UInt16> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="74390-553">既定値 ("G"または [全般]) を使用する場合は、書式を設定または別のカルチャを指定するの他のオーバー ロードを使用して、<xref:System.UInt16.ToString%2A>メソッドは、次のように。</span><span class="sxs-lookup"><span data-stu-id="74390-553">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.UInt16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="74390-554">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="74390-554">To use format</span></span>|<span data-ttu-id="74390-555">カルチャ</span><span class="sxs-lookup"><span data-stu-id="74390-555">For culture</span></span>|<span data-ttu-id="74390-556">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="74390-556">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="74390-557">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="74390-557">Default ("G") format</span></span>|<span data-ttu-id="74390-558">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="74390-558">Default (current) culture</span></span>|<xref:System.UInt16.ToString>|  
|<span data-ttu-id="74390-559">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="74390-559">Default ("G") format</span></span>|<span data-ttu-id="74390-560">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="74390-560">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="74390-561">特定の形式</span><span class="sxs-lookup"><span data-stu-id="74390-561">A specific format</span></span>|<span data-ttu-id="74390-562">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="74390-562">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="74390-563">`format`パラメーターに任意の有効なできます[標準数値書式指定子](~/docs/standard/base-types/standard-numeric-format-strings.md)、または任意の組み合わせの[カスタム数値書式指定子](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="74390-563">The `format` parameter can be any valid [standard numeric format specifier](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [custom numeric format specifiers](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="74390-564">場合`format`と等しい<xref:System.String.Empty?displayProperty=nameWithType>または`null`、現在の戻り値<xref:System.UInt16>オブジェクトが、一般的な形式指定子 ("G") でフォーマットされました。</span><span class="sxs-lookup"><span data-stu-id="74390-564">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt16> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="74390-565">場合`format`他の値、メソッドがスローされますが、<xref:System.FormatException>します。</span><span class="sxs-lookup"><span data-stu-id="74390-565">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="74390-566">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="74390-566">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="74390-567">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="74390-567">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="74390-568">.NET Framework の書式設定のサポートの詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="74390-568">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="74390-569">によって返される文字列の形式が決定されます、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-569">The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="74390-570">に応じて、`format`パラメーター、このオブジェクトは、グループ区切り記号などの記号と、出力文字列に小数点記号を制御します。</span><span class="sxs-lookup"><span data-stu-id="74390-570">Depending on the `format` parameter, this object controls symbols such as the group separator and the decimal point symbol in the output string.</span></span> <span data-ttu-id="74390-571">現在のカルチャ以外のカルチャの書式情報を提供するには、呼び出し、<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="74390-571">To provide formatting information for cultures other than the current culture, call the <xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74390-572">次の例では、各標準書式指定文字列といくつかのカスタム書式指定文字列を使用して、16 ビット符号なし整数値を表示します。</span><span class="sxs-lookup"><span data-stu-id="74390-572">The following example displays a 16-bit unsigned integer value by using each standard format string and some custom format strings.</span></span>  
  
 [!code-csharp[System.UInt16.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.tostring/cs/tostring3.cs#3)]
 [!code-vb[System.UInt16.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.tostring/vb/tostring3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="74390-573"><paramref name="format" /> パラメーターが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="74390-573">The <paramref name="format" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.UInt16.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="74390-574">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="74390-574">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="74390-575">方法: 数値に先行するゼロを埋め込む</span><span class="sxs-lookup"><span data-stu-id="74390-575">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="uint16.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="74390-576">数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="74390-576">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="74390-577">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-577">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="74390-578">このインスタンスの数値を、指定した書式およびカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="74390-578">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="74390-579"><paramref name="format" /> と <paramref name="provider" />で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="74390-579">The string representation of the value of this instance, as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-580"><xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>メソッド形式、<xref:System.UInt16>値を使用して指定された形式で、<xref:System.Globalization.NumberFormatInfo>特定のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-580">The <xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.UInt16> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="74390-581">既定の形式またはカルチャの設定を使用する場合の他のオーバー ロードを使用して、<xref:System.UInt16.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="74390-581">If you want to use default format or culture settings, use the other overloads of the <xref:System.UInt16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="74390-582">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="74390-582">To use format</span></span>|<span data-ttu-id="74390-583">カルチャ</span><span class="sxs-lookup"><span data-stu-id="74390-583">For culture</span></span>|<span data-ttu-id="74390-584">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="74390-584">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="74390-585">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="74390-585">Default ("G") format</span></span>|<span data-ttu-id="74390-586">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="74390-586">Default (current) culture</span></span>|<xref:System.UInt16.ToString>|  
|<span data-ttu-id="74390-587">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="74390-587">Default ("G") format</span></span>|<span data-ttu-id="74390-588">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="74390-588">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="74390-589">特定の形式</span><span class="sxs-lookup"><span data-stu-id="74390-589">A specific format</span></span>|<span data-ttu-id="74390-590">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="74390-590">Default (current) culture</span></span>|<xref:System.UInt16.ToString%28System.String%29>|  
  
 <span data-ttu-id="74390-591">`format`パラメーターに任意の有効なできます[Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)、または任意の組み合わせの[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="74390-591">The `format` parameter can be any valid [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="74390-592">場合`format`と等しい<xref:System.String.Empty?displayProperty=nameWithType>または`null`、現在の戻り値<xref:System.UInt16>オブジェクトが、一般的な形式指定子 ("G") でフォーマットされました。</span><span class="sxs-lookup"><span data-stu-id="74390-592">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt16> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="74390-593">場合`format`他の値、メソッドがスローされますが、<xref:System.FormatException>します。</span><span class="sxs-lookup"><span data-stu-id="74390-593">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="74390-594">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="74390-594">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="74390-595">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="74390-595">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="74390-596">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="74390-596">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="74390-597">`provider`パラメーターは、<xref:System.IFormatProvider>実装します。</span><span class="sxs-lookup"><span data-stu-id="74390-597">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="74390-598">その<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します。 を<xref:System.Globalization.NumberFormatInfo>このメソッドによって返される文字列の書式設定に関するカルチャに固有の情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-598">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="74390-599">ときに、<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>メソッドが呼び出される、呼び出し、`provider`パラメーターの<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッドを渡します、<xref:System.Type>を表すオブジェクトを<xref:System.Globalization.NumberFormatInfo>型。</span><span class="sxs-lookup"><span data-stu-id="74390-599">When the <xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="74390-600"><xref:System.IFormatProvider.GetFormat%2A>メソッド、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在の書式設定情報を提供する<xref:System.UInt16>桁区切り記号や小数点記号などの値。</span><span class="sxs-lookup"><span data-stu-id="74390-600">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information for formatting the current <xref:System.UInt16> value, such as the group separator symbol or the decimal point symbol.</span></span> <span data-ttu-id="74390-601">3 つの方法を使用する、`provider`を書式設定情報を指定するパラメーター、<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-601">There are three ways to use the `provider` parameter to supply formatting information to the <xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29> method:</span></span>  
  
-   <span data-ttu-id="74390-602">渡すことができます、<xref:System.Globalization.CultureInfo>の書式情報を提供するカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-602">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="74390-603">その<xref:System.Globalization.CultureInfo.GetFormat%2A>メソッドが返す、<xref:System.Globalization.NumberFormatInfo>そのカルチャの数値の書式設定情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-603">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="74390-604">実際に渡すことができます<xref:System.Globalization.NumberFormatInfo>数値書式設定情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-604">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="74390-605">(その実装の<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>自体を返すだけです)。</span><span class="sxs-lookup"><span data-stu-id="74390-605">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="74390-606">実装するカスタム オブジェクトを渡すことができます<xref:System.IFormatProvider>します。</span><span class="sxs-lookup"><span data-stu-id="74390-606">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="74390-607">その<xref:System.IFormatProvider.GetFormat%2A>メソッドがインスタンス化して返します、<xref:System.Globalization.NumberFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-607">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="74390-608">場合`provider`は`null`、に基づいて返される文字列の書式設定、<xref:System.Globalization.NumberFormatInfo>の現在のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-608">If `provider` is `null`, the formatting of the returned string is based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74390-609">次の例では、16 ビット符号なし整数値を表示、標準数値書式指定子と特定の番号を使用して<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-609">The following example displays a 16-bit unsigned integer value by using the standard numeric format specifiers and a number of specific <xref:System.Globalization.CultureInfo> objects.</span></span>  
  
 [!code-csharp[System.UInt16.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.tostring/cs/tostring4.cs#4)]
 [!code-vb[System.UInt16.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.tostring/vb/tostring4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="74390-610"><paramref name="format" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="74390-610"><paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.UInt16.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="74390-611">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="74390-611">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="74390-612">方法: 数値に先行するゼロを埋め込む</span><span class="sxs-lookup"><span data-stu-id="74390-612">How to: Pad a Number with Leading Zeros</span></span></related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="74390-613">サンプル: .NET Framework 4 の書式設定ユーティリティ</span><span class="sxs-lookup"><span data-stu-id="74390-613">Sample: .NET Framework 4 Formatting Utility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="uint16.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74390-614">数値の文字列形式を、それと等価な 16 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="74390-614">Converts the string representation of a number to its 16-bit unsigned integer equivalent.</span></span> <span data-ttu-id="74390-615">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="74390-615">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.UInt16.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out ushort result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] unsigned int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.TryParse(System.ReadOnlySpan{System.Char},System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::UInt16 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.uint16.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.UInt16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out ushort result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] unsigned int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.TryParse(System.String,System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::UInt16 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.uint16.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.UInt16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="74390-616">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="74390-616">A string that represents the number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="74390-617">このメソッドから制御が返されたとき、変換に成功した場合は、<paramref name="s" /> に格納された数値と等価な 16 ビット符号なし整数値が格納されます。変換に失敗した場合は 0 が格納されます。</span><span class="sxs-lookup"><span data-stu-id="74390-617">When this method returns, contains the 16-bit unsigned integer value that is equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="74390-618"><paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> である場合、または正しい形式ではない場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="74390-618">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in the correct format.</span></span> <span data-ttu-id="74390-619">、または <see cref="F:System.UInt16.MinValue" /> 未満の数値か、<see cref="F:System.UInt16.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="74390-619">, or represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span> <span data-ttu-id="74390-620">このパラメーターは初期化されていない状態で渡されています。<paramref name="result" /> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="74390-620">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="74390-621">数値の文字列形式を、それと等価の 16 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="74390-621">Tries to convert the string representation of a number to its 16-bit unsigned integer equivalent.</span></span> <span data-ttu-id="74390-622">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="74390-622">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="74390-623"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74390-623"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-624"><xref:System.UInt16.TryParse%28System.String%2CSystem.UInt16%40%29>などのメソッドは、<xref:System.UInt16.Parse%28System.String%29>メソッド、点を除いて、変換が失敗した場合、その it が例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="74390-624">The <xref:System.UInt16.TryParse%28System.String%2CSystem.UInt16%40%29> method is like the <xref:System.UInt16.Parse%28System.String%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="74390-625">このメソッドをテストする例外処理を使用する必要はありません、<xref:System.FormatException>場合`s`有効でないし、正常に解析されることはできません。</span><span class="sxs-lookup"><span data-stu-id="74390-625">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="74390-626">`s`パラメーターは、次の形式の 10 進数の文字列形式を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74390-626">The `s` parameter should be the string representation of a decimal number in the following form:</span></span>  
  
 <span data-ttu-id="74390-627">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="74390-627">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="74390-628">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="74390-628">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="74390-629">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="74390-629">The following table describes each element.</span></span>  
  
|<span data-ttu-id="74390-630">要素</span><span class="sxs-lookup"><span data-stu-id="74390-630">Element</span></span>|<span data-ttu-id="74390-631">説明</span><span class="sxs-lookup"><span data-stu-id="74390-631">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="74390-632">*ws*</span><span class="sxs-lookup"><span data-stu-id="74390-632">*ws*</span></span>|<span data-ttu-id="74390-633">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="74390-633">Optional white space.</span></span>|  
|<span data-ttu-id="74390-634">*sign*</span><span class="sxs-lookup"><span data-stu-id="74390-634">*sign*</span></span>|<span data-ttu-id="74390-635">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="74390-635">An optional sign.</span></span> <span data-ttu-id="74390-636">有効な署名の文字はによって決定されます、<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>現在のカルチャのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="74390-636">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="74390-637">*数字*</span><span class="sxs-lookup"><span data-stu-id="74390-637">*digits*</span></span>|<span data-ttu-id="74390-638">10 進数字の 0 から 9 までのシーケンス。</span><span class="sxs-lookup"><span data-stu-id="74390-638">A sequence of decimal digits ranging from 0 to 9.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="74390-639">指定された文字列、`s`パラメーターは、グループ区切り記号または 10 進数の区切り記号を含めることはできず、小数部を持つことはできません。</span><span class="sxs-lookup"><span data-stu-id="74390-639">The string specified by the `s` parameter cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="74390-640">`s`パラメーターを使用して解釈されます、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="74390-640">The `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="74390-641">10 進の数字だけでなくには、先頭と末尾のスペースを先頭の符号のみを許可します。</span><span class="sxs-lookup"><span data-stu-id="74390-641">In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</span></span> <span data-ttu-id="74390-642">使用できるカルチャに固有の書式情報を持つスタイル要素を明示的に定義する`s`を呼び出し、<xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-642">To explicitly define the style elements with the culture-specific formatting information that can be present in `s`, call the <xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29> method.</span></span>  
  
 <span data-ttu-id="74390-643">`s`で書式設定情報を使用してパラメーターを解析する<xref:System.Globalization.NumberFormatInfo>の現在のシステム カルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-643">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object for the current system culture.</span></span> <span data-ttu-id="74390-644">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="74390-644">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="74390-645">このオーバー ロード内のすべての桁を解釈し、`s`として 10 進数字のパラメーター。</span><span class="sxs-lookup"><span data-stu-id="74390-645">This overload interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="74390-646">16 進数の文字列表現を解析する、<xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29>オーバー ロードを代用します。</span><span class="sxs-lookup"><span data-stu-id="74390-646">To parse the string representation of a hexadecimal number, call the <xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29> overload instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74390-647">次の例では、<xref:System.UInt16.TryParse%28System.String%2CSystem.UInt16%40%29>文字列配列内の各要素に対して 1 回のメソッド。</span><span class="sxs-lookup"><span data-stu-id="74390-647">The following example calls the <xref:System.UInt16.TryParse%28System.String%2CSystem.UInt16%40%29> method once for each element in a string array.</span></span>  
  
 [!code-csharp[System.UInt32.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.UInt32.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int32.TryParse(System.String,System.Int32@)" />
        <altmember cref="M:System.UInt16.Parse(System.String)" />
        <altmember cref="M:System.UInt16.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="74390-648">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="74390-648">Parsing Numeric Strings in .NET</span></span></related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="74390-649">サンプル: .NET Framework 4 の書式設定ユーティリティ</span><span class="sxs-lookup"><span data-stu-id="74390-649">Sample: .NET Framework 4 Formatting Utility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out ushort result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt16 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.uint16.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.UInt16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out ushort result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt16 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.uint16.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.UInt16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="74390-650">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="74390-650">A string that represents the number to convert.</span></span> <span data-ttu-id="74390-651">文字列は <paramref name="style" /> パラメーターで指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="74390-651">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="74390-652"><paramref name="s" /> で使用可能な書式を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="74390-652">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="74390-653">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="74390-653">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="74390-654"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-654">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="74390-655">変換が成功した場合、このメソッドが返されるときに、<paramref name="s" /> に格納された数値と等しい 16 ビット符号なし整数値を格納します。変換に失敗した場合は 0 を格納します。</span><span class="sxs-lookup"><span data-stu-id="74390-655">When this method returns, contains the 16-bit unsigned integer value equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="74390-656"><paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、<paramref name="style" /> に準拠した形式ではない、または <see cref="F:System.UInt16.MinValue" /> より小さいか <see cref="F:System.UInt16.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="74390-656">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span> <span data-ttu-id="74390-657">このパラメーターは初期化されていない状態で渡されています。<paramref name="result" /> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="74390-657">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="74390-658">指定したスタイルおよびカルチャ固有の書式による数値の文字列形式を、それと等価な 16 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="74390-658">Tries to convert the string representation of a number in a specified style and culture-specific format to its 16-bit unsigned integer equivalent.</span></span> <span data-ttu-id="74390-659">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="74390-659">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="74390-660"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74390-660"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74390-661"><xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29>などのメソッドは、<xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>メソッド、点を除いて、変換が失敗した場合、その it が例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="74390-661">The <xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29> method is like the <xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="74390-662">このメソッドをテストする例外処理を使用する必要はありません、<xref:System.FormatException>場合`s`有効でないし、正常に解析されたことはできません。</span><span class="sxs-lookup"><span data-stu-id="74390-662">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be parsed successfully.</span></span> 
  
 <span data-ttu-id="74390-663">`style` (空白や正または負符号) で使用できるスタイル要素を定義するパラメーター、`s`解析操作が成功するためのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="74390-663">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="74390-664">ビット フラグの組み合わせがあります、<xref:System.Globalization.NumberStyles>列挙体。</span><span class="sxs-lookup"><span data-stu-id="74390-664">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="74390-665">値に応じて`style`、`s`パラメーターは、次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="74390-665">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="74390-666">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="74390-666">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="74390-667">角かっこ ([と]) は任意の項目です。</span><span class="sxs-lookup"><span data-stu-id="74390-667">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="74390-668">または、`style`パラメーターが含まれる<xref:System.Globalization.NumberStyles.AllowHexSpecifier>、`s`パラメーターは、次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="74390-668">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="74390-669">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="74390-669">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="74390-670">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="74390-670">The following table describes each element.</span></span>  
  
 <span data-ttu-id="74390-671">*ws*</span><span class="sxs-lookup"><span data-stu-id="74390-671">*ws*</span></span>  
 <span data-ttu-id="74390-672">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="74390-672">Optional white space.</span></span> <span data-ttu-id="74390-673">先頭に空白文字を表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>フラグ、または末尾の`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-673">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>  
  
 *$*  
 <span data-ttu-id="74390-674">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="74390-674">A culture-specific currency symbol.</span></span> <span data-ttu-id="74390-675">によって、文字列内の位置が定義されている、<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>のプロパティ、<xref:System.Globalization.NumberFormatInfo>によって返されるオブジェクト、<xref:System.IFormatProvider.GetFormat%2A>のメソッド、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="74390-675">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="74390-676">通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-676">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="74390-677">*sign*</span><span class="sxs-lookup"><span data-stu-id="74390-677">*sign*</span></span>  
 <span data-ttu-id="74390-678">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="74390-678">An optional sign.</span></span> <span data-ttu-id="74390-679">先頭に表示できる符号`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>の最後に、フラグ、およびそれが表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-679">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="74390-680">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-680">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="74390-681">ただし、負の符号が存在する場合、`s`解析操作が成功するための 0 値を表すことができますのみです。</span><span class="sxs-lookup"><span data-stu-id="74390-681">However, if the negative sign is present, `s` can only represent the value zero for the parse operation to succeed.</span></span>  
  
 <span data-ttu-id="74390-682">*数字*</span><span class="sxs-lookup"><span data-stu-id="74390-682">*digits*</span></span>  
 <span data-ttu-id="74390-683">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="74390-683">A sequence of digits from 0 through 9.</span></span>  
  
 <span data-ttu-id="74390-684">*、*</span><span class="sxs-lookup"><span data-stu-id="74390-684">*,*</span></span>  
 <span data-ttu-id="74390-685">カルチャ固有のグループ区切り記号。</span><span class="sxs-lookup"><span data-stu-id="74390-685">A culture-specific group separator.</span></span> <span data-ttu-id="74390-686">指定されたカルチャの桁区切り記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-686">The group separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="74390-687">*.*</span><span class="sxs-lookup"><span data-stu-id="74390-687">*.*</span></span>  
 <span data-ttu-id="74390-688">カルチャに固有の小数点記号。</span><span class="sxs-lookup"><span data-stu-id="74390-688">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="74390-689">指定されたカルチャの小数点記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-689">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="74390-690">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="74390-690">*fractional_digits*</span></span>  
 <span data-ttu-id="74390-691">1 つ以上の数字の 0。</span><span class="sxs-lookup"><span data-stu-id="74390-691">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="74390-692">小数部の桁数を表示できる`s`場合にのみ`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-692">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="74390-693">E</span><span class="sxs-lookup"><span data-stu-id="74390-693">E</span></span>  
 <span data-ttu-id="74390-694">"E"または"E"文字は、値は指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="74390-694">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="74390-695">`s`パラメーターは指数表記の数値を表すことができる場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-695">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="74390-696">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="74390-696">*exponential_digits*</span></span>  
 <span data-ttu-id="74390-697">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="74390-697">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="74390-698">`s`パラメーターは指数表記の数値を表すことができる場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="74390-698">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="74390-699">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="74390-699">*hexdigits*</span></span>  
 <span data-ttu-id="74390-700">0 ~ f、または f の 0 から 16 進数のシーケンス</span><span class="sxs-lookup"><span data-stu-id="74390-700">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="74390-701">終端の NUL (u+0000) 文字`s`の値に関係なく、解析操作では無視されますが、`style`引数。</span><span class="sxs-lookup"><span data-stu-id="74390-701">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="74390-702">10 進数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>フラグ) を常に正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="74390-702">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="74390-703">残りのほとんど<xref:System.Globalization.NumberStyles>メンバーが存在する場合がありますが、この入力文字列内に存在する必要はありません、要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="74390-703">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="74390-704">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在する要素に影響を与える`s`します。</span><span class="sxs-lookup"><span data-stu-id="74390-704">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="74390-705">非コンポジット`NumberStyles`値</span><span class="sxs-lookup"><span data-stu-id="74390-705">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="74390-706">数字以外の値で使用できる要素</span><span class="sxs-lookup"><span data-stu-id="74390-706">Elements permitted in value in addition to digits</span></span>|  
|------------------------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="74390-707">10 進数字のみです。</span><span class="sxs-lookup"><span data-stu-id="74390-707">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="74390-708">10 進数のポイント (*.*) と*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="74390-708">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="74390-709">ただし、 *fractional_digits* 0 のみの 1 つ以上の数字、または、メソッドが返すので構成されている必要があります`false`します。</span><span class="sxs-lookup"><span data-stu-id="74390-709">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="74390-710">"E"または"E"文字と共に、指数表記を示す*exponential_digits*します。</span><span class="sxs-lookup"><span data-stu-id="74390-710">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="74390-711">場合`s`の数値を表す、指数表記では、0 以外の小数部のコンポーネントを持つことはできません。</span><span class="sxs-lookup"><span data-stu-id="74390-711">If `s` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="74390-712">*Ws*要素の開始時`s`します。</span><span class="sxs-lookup"><span data-stu-id="74390-712">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="74390-713">*Ws*の末尾にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="74390-713">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="74390-714">*サインオン*要素の前に*桁*します。</span><span class="sxs-lookup"><span data-stu-id="74390-714">The *sign* element before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="74390-715">*サインオン*要素の後に*桁*します。</span><span class="sxs-lookup"><span data-stu-id="74390-715">The *sign* element after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="74390-716">*サインオン*ゼロの数値を囲むかっこのフォーム内の要素。</span><span class="sxs-lookup"><span data-stu-id="74390-716">The *sign* element in the form of parentheses enclosing a zero numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="74390-717">グループ区切り記号 (*、*) 要素。</span><span class="sxs-lookup"><span data-stu-id="74390-717">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="74390-718">通貨 (*$*) 要素。</span><span class="sxs-lookup"><span data-stu-id="74390-718">The currency (*$*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="74390-719">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="74390-719">All elements.</span></span> <span data-ttu-id="74390-720">ただし、 `s` 16 進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="74390-720">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="74390-721">*Ws*先頭または末尾に要素`s`、*サインオン*の開始時`s`、および小数点 (*.*) シンボル。</span><span class="sxs-lookup"><span data-stu-id="74390-721">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="74390-722">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="74390-722">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="74390-723">*Ws*、*サインオン*、桁区切り記号 (*、*)、および小数点 10 進数 (*.*) 要素。</span><span class="sxs-lookup"><span data-stu-id="74390-723">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="74390-724">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="74390-724">All elements.</span></span> <span data-ttu-id="74390-725">ただし、 `s` 16 進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="74390-725">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="74390-726">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、 `s` 16 進数の値を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74390-726">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="74390-727">有効な 16 進数の数字は 0 ~ 9、a から f、および A ~ F"0 x"のようなプレフィックスはサポートされていませんし、解析操作が失敗します。</span><span class="sxs-lookup"><span data-stu-id="74390-727">Valid hexadecimal digits are 0 through 9, a through f, and A through F. A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="74390-728">他のフラグのみに存在することができる`style`は<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="74390-728">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="74390-729">(、<xref:System.Globalization.NumberStyles>列挙には複合スタイルは、 <xref:System.Globalization.NumberStyles.HexNumber>、空白文字の両方のフラグが含まれます)。</span><span class="sxs-lookup"><span data-stu-id="74390-729">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="74390-730">場合`s`文字列表現ですが、16 進数は、接頭辞前ことはできません (など`0x`または`&h`)、16 進数として区別します。</span><span class="sxs-lookup"><span data-stu-id="74390-730">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="74390-731">これにより、変換に失敗します。</span><span class="sxs-lookup"><span data-stu-id="74390-731">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="74390-732">`provider`パラメーターは、<xref:System.IFormatProvider>実装します。</span><span class="sxs-lookup"><span data-stu-id="74390-732">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="74390-733">その<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します。 を<xref:System.Globalization.NumberFormatInfo>の書式設定に関するカルチャ固有の情報を提供するオブジェクト`s`します。</span><span class="sxs-lookup"><span data-stu-id="74390-733">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="74390-734">`provider`パラメーターは、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="74390-734">The `provider` parameter can be any one of the following:</span></span>  
  
-   <span data-ttu-id="74390-735">A<xref:System.Globalization.CultureInfo>の書式情報を提供するカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-735">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="74390-736">その<xref:System.Globalization.CultureInfo.GetFormat%2A>メソッドが返す、<xref:System.Globalization.NumberFormatInfo>そのカルチャの数値の書式設定情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-736">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="74390-737">A<xref:System.Globalization.NumberFormatInfo>数値書式設定情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-737">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="74390-738">(その実装の<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>自体を返すだけです)。</span><span class="sxs-lookup"><span data-stu-id="74390-738">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="74390-739">実装するカスタム オブジェクト<xref:System.IFormatProvider>します。</span><span class="sxs-lookup"><span data-stu-id="74390-739">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="74390-740">その<xref:System.IFormatProvider.GetFormat%2A>メソッドがインスタンス化して返します、<xref:System.Globalization.NumberFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74390-740">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="74390-741">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="74390-741">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74390-742">次の例では、<xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29>メソッド数が異なる文字列と<xref:System.Globalization.NumberStyles>値。</span><span class="sxs-lookup"><span data-stu-id="74390-742">The following example calls the <xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29> method with a number of different strings and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt16.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.tryparse/cs/tryparse2.cs#2)]
 [!code-vb[System.UInt16.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.tryparse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int32.TryParse(System.String,System.Int32@)" />
        <exception cref="T:System.ArgumentException"><span data-ttu-id="74390-743"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="74390-743"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="74390-744">または</span><span class="sxs-lookup"><span data-stu-id="74390-744">-or-</span></span> 
 <span data-ttu-id="74390-745"><paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="74390-745"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.UInt16.Parse(System.String)" />
        <altmember cref="M:System.UInt16.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="74390-746">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="74390-746">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>